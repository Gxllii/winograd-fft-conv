//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<24, 0>
{
    static constexpr long_t flops           = 324;
    static constexpr long_t operations      = 252;
    static constexpr long_t memory_accesses = 96;
    static constexpr long_t stack_vars      = 175;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 252 FP additions, 72 FP multiplications,
 * (or, 180 additions, 0 multiplications, 72 fused multiply/add),
 * 175 stack variables, 3 constants, and 96 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2R, T2o, T2O, T2q, T2B, T2D, T2n, T2S, T3t, T39, T3n, T3p,
            T3e, T3r, T3q;
        SIMD_FLOAT T3j, T2p, T2V, T2T, T2Z, T2C, T2W, T2P, T2X, T3s, T3u, T3k,
            T3o, T30, T2Y;
        SIMD_FLOAT T2Q, T2U;
        {
            SIMD_FLOAT T5, TQ, Ta, TV, T1N, T21, T1b, T2f, Tl, T22, T1Q, T2g,
                T1e, T16, T25;
            SIMD_FLOAT T1X, T2j, T1l, To, T2r, Tg, T11, T1U, T24, T1i, T2i, Tt,
                T2w, T1s, T2b;
            SIMD_FLOAT T2I, T3a, TJ, T3E, T2c, T1x, T3H, T41, T2N, T3b, Tr, T2u,
                T2s, T1C, Tu;
            SIMD_FLOAT Tv, T1F, T1G;
            {
                SIMD_FLOAT T1, TM, T6, TR, Th, T12, Ti, T1a, T4, T1M, TP, Tj,
                    T13, T1d, T9;
                SIMD_FLOAT T1P, TU, T14, T2, T3, TN, TO, T7, T8, TS, TT, Tc, TX,
                    T1k, T1W;
                SIMD_FLOAT Td, T1V, T1j, Te, TY, TZ, T1L, T19, Tk, T1O, T1c,
                    T15;
                T1  = ri[0];
                TM  = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TN  = ii[WS(is, 8)];
                TO  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                TR  = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TS  = ii[WS(is, 20)];
                TT  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T12 = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T1a = T3 - T2;
                T4  = T2 + T3;
                T1M = TN - TO;
                TP  = TN + TO;
                Tj  = ri[WS(is, 10)];
                T13 = ii[WS(is, 2)];
                T1d = T8 - T7;
                T9  = T7 + T8;
                T1P = TS - TT;
                TU  = TS + TT;
                T14 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                TX  = ii[WS(is, 6)];
                T5  = T1 + T4;
                T1L = SIMD_FNMADD(KP500000000, T4, T1);
                TQ  = TM + TP;
                T19 = SIMD_FNMADD(KP500000000, TP, TM);
                Tk  = Ti + Tj;
                T1k = Tj - Ti;
                Ta  = T6 + T9;
                T1O = SIMD_FNMADD(KP500000000, T9, T6);
                TV  = TR + TU;
                T1c = SIMD_FNMADD(KP500000000, TU, TR);
                T15 = T13 + T14;
                T1W = T13 - T14;
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T21 = SIMD_FMADD(KP866025403, T1M, T1L);
                T1b = SIMD_FNMADD(KP866025403, T1a, T19);
                T2f = SIMD_FMADD(KP866025403, T1a, T19);
                Td  = ri[WS(is, 14)];
                T1V = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T22 = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Q = SIMD_FNMADD(KP866025403, T1P, T1O);
                T2g = SIMD_FMADD(KP866025403, T1d, T1c);
                T1e = SIMD_FNMADD(KP866025403, T1d, T1c);
                T1j = SIMD_FNMADD(KP500000000, T15, T12);
                T16 = T12 + T15;
                Te  = ri[WS(is, 22)];
                TY  = ii[WS(is, 14)];
                TZ  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Tz, T2E, TE, T2J, TA, T1h, Tf, T1T, T10, TB, T1p,
                        T1q, TF, TG, T1u;
                    SIMD_FLOAT T1v, T2H, T1r, T2M, T1w, TD, T1o, T3F, T2G, TI,
                        T1t, T3G, T2L, T1S, T1g;
                    SIMD_FLOAT TC, T2F, TH, T2K, Tp, Tq, T1A, T1B;
                    Tz  = ri[WS(is, 21)];
                    T25 = SIMD_FMADD(KP866025403, T1W, T1V);
                    T1X = SIMD_FNMADD(KP866025403, T1W, T1V);
                    T2E = ii[WS(is, 21)];
                    TE  = ri[WS(is, 9)];
                    T2J = ii[WS(is, 9)];
                    TA  = ri[WS(is, 5)];
                    T2j = SIMD_FMADD(KP866025403, T1k, T1j);
                    T1l = SIMD_FNMADD(KP866025403, T1k, T1j);
                    T1h = Te - Td;
                    Tf  = Td + Te;
                    T1T = TY - TZ;
                    T10 = TY + TZ;
                    TB  = ri[WS(is, 13)];
                    T1p = ii[WS(is, 5)];
                    T1q = ii[WS(is, 13)];
                    TF  = ri[WS(is, 17)];
                    TG  = ri[WS(is, 1)];
                    T1u = ii[WS(is, 17)];
                    T1v = ii[WS(is, 1)];
                    To  = ri[WS(is, 3)];
                    T2r = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    T1S = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T11 = TX + T10;
                    T1g = SIMD_FNMADD(KP500000000, T10, TX);
                    TC  = TA + TB;
                    T2H = TB - TA;
                    T1r = T1p - T1q;
                    T2F = T1p + T1q;
                    TH  = TF + TG;
                    T2M = TG - TF;
                    T1w = T1u - T1v;
                    T2K = T1u + T1v;
                    T1U = SIMD_FNMADD(KP866025403, T1T, T1S);
                    T24 = SIMD_FMADD(KP866025403, T1T, T1S);
                    T1i = SIMD_FNMADD(KP866025403, T1h, T1g);
                    T2i = SIMD_FMADD(KP866025403, T1h, T1g);
                    Tt  = ri[WS(is, 15)];
                    TD  = Tz + TC;
                    T1o = SIMD_FNMADD(KP500000000, TC, Tz);
                    T3F = T2E + T2F;
                    T2G = SIMD_FNMADD(KP500000000, T2F, T2E);
                    TI  = TE + TH;
                    T1t = SIMD_FNMADD(KP500000000, TH, TE);
                    T3G = T2J + T2K;
                    T2L = SIMD_FNMADD(KP500000000, T2K, T2J);
                    T2w = ii[WS(is, 15)];
                    Tp  = ri[WS(is, 11)];
                    Tq  = ri[WS(is, 19)];
                    T1A = ii[WS(is, 11)];
                    T1B = ii[WS(is, 19)];
                    T1s = SIMD_FNMADD(KP866025403, T1r, T1o);
                    T2b = SIMD_FMADD(KP866025403, T1r, T1o);
                    T2I = SIMD_FMADD(KP866025403, T2H, T2G);
                    T3a = SIMD_FNMADD(KP866025403, T2H, T2G);
                    TJ  = TD + TI;
                    T3E = TD - TI;
                    T2c = SIMD_FMADD(KP866025403, T1w, T1t);
                    T1x = SIMD_FNMADD(KP866025403, T1w, T1t);
                    T3H = T3F - T3G;
                    T41 = T3F + T3G;
                    T2N = SIMD_FMADD(KP866025403, T2M, T2L);
                    T3b = SIMD_FNMADD(KP866025403, T2M, T2L);
                    Tr  = Tp + Tq;
                    T2u = Tq - Tp;
                    T2s = T1A + T1B;
                    T1C = T1A - T1B;
                    Tu  = ri[WS(is, 23)];
                    Tv  = ri[WS(is, 7)];
                    T1F = ii[WS(is, 23)];
                    T1G = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T3X, T3D, T1D, T3g, T3T, T3R, T1I, T3h, T31, T27,
                    T2h, T3S, T3O, T3Y, T3W;
                SIMD_FLOAT T36, T34, T2m, T2e, T2k, T3l, T38, T3i, T3w, T35,
                    T2l, T3z, T1n, T3x, T3c;
                SIMD_FLOAT T3d, T1y, T1J, T3f, T37, T1R, T1Y, T3m, T1f, T1m,
                    T3A, T3y, T20, T1K, T3v;
                SIMD_FLOAT T1Z;
                {
                    SIMD_FLOAT Tm, TW, T3I, T3V, Tb, T3P, Ts, T1z, T3K, T2t,
                        T2z, Tw, T2x, T1H, T3Q;
                    SIMD_FLOAT T17, T3B, T3C, T28, T2v, T43, Tn, T3J, Ty, T29,
                        T3M, T40, T2A, T1E, Tx;
                    SIMD_FLOAT T2y, T3L, T23, T26, T33, T3Z, T18, TL, TK, T2a,
                        T42, T44, T3U, T3N, T32;
                    SIMD_FLOAT T2d;
                    Tm             = Tg + Tl;
                    T3B            = Tg - Tl;
                    T3C            = TQ - TV;
                    TW             = TQ + TV;
                    T3I            = T3E - T3H;
                    T3V            = T3E + T3H;
                    Tb             = T5 + Ta;
                    T3P            = T5 - Ta;
                    Ts             = To + Tr;
                    T1z            = SIMD_FNMADD(KP500000000, Tr, To);
                    T3K            = T2r + T2s;
                    T2t            = SIMD_FNMADD(KP500000000, T2s, T2r);
                    T2z            = Tv - Tu;
                    Tw             = Tu + Tv;
                    T2x            = T1F + T1G;
                    T1H            = T1F - T1G;
                    T3X            = T3C - T3B;
                    T3D            = T3B + T3C;
                    T3Q            = T11 - T16;
                    T17            = T11 + T16;
                    T1D            = SIMD_FNMADD(KP866025403, T1C, T1z);
                    T28            = SIMD_FMADD(KP866025403, T1C, T1z);
                    T2v            = SIMD_FMADD(KP866025403, T2u, T2t);
                    T3g            = SIMD_FNMADD(KP866025403, T2u, T2t);
                    T1E            = SIMD_FNMADD(KP500000000, Tw, Tt);
                    Tx             = Tt + Tw;
                    T2y            = SIMD_FNMADD(KP500000000, T2x, T2w);
                    T3L            = T2w + T2x;
                    T3T            = T3P - T3Q;
                    T3R            = T3P + T3Q;
                    T43            = Tb - Tm;
                    Tn             = Tb + Tm;
                    T3J            = Ts - Tx;
                    Ty             = Ts + Tx;
                    T1I            = SIMD_FNMADD(KP866025403, T1H, T1E);
                    T29            = SIMD_FMADD(KP866025403, T1H, T1E);
                    T3M            = T3K - T3L;
                    T40            = T3K + T3L;
                    T2A            = SIMD_FMADD(KP866025403, T2z, T2y);
                    T3h            = SIMD_FNMADD(KP866025403, T2z, T2y);
                    T2R            = T21 - T22;
                    T23            = T21 + T22;
                    T26            = T24 + T25;
                    T2o            = T24 - T25;
                    T2O            = T2I - T2N;
                    T33            = T2I + T2N;
                    T3Z            = TW + T17;
                    T18            = TW - T17;
                    TL             = Ty - TJ;
                    TK             = Ty + TJ;
                    T2a            = T28 + T29;
                    T2q            = T28 - T29;
                    T42            = T40 + T41;
                    T44            = T41 - T40;
                    T3U            = T3M - T3J;
                    T3N            = T3J + T3M;
                    T2B            = T2v - T2A;
                    T32            = T2v + T2A;
                    T31            = T23 - T26;
                    T27            = T23 + T26;
                    T2d            = T2b + T2c;
                    T2D            = T2b - T2c;
                    T2n            = T2f - T2g;
                    T2h            = T2f + T2g;
                    io[WS(os, 18)] = T18 - TL;
                    io[WS(os, 6)]  = TL + T18;
                    ro[0]          = Tn + TK;
                    ro[WS(os, 12)] = Tn - TK;
                    ro[WS(os, 18)] = T43 - T44;
                    ro[WS(os, 6)]  = T43 + T44;
                    io[0]          = T3Z + T42;
                    io[WS(os, 12)] = T3Z - T42;
                    T3S            = T3N + T3I;
                    T3O            = T3I - T3N;
                    T3Y            = T3U + T3V;
                    T3W            = T3U - T3V;
                    T36            = T32 + T33;
                    T34            = T32 - T33;
                    T2m            = T2d - T2a;
                    T2e            = T2a + T2d;
                    T2k            = T2i + T2j;
                    T2S            = T2i - T2j;
                }
                T3l            = T1b - T1e;
                T1f            = T1b + T1e;
                T1m            = T1i + T1l;
                T38            = T1i - T1l;
                T3i            = T3g - T3h;
                T3w            = T3g + T3h;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3S, T3R);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3S, T3R);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3O, T3D);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3O, T3D);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3Y, T3X);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3Y, T3X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3W, T3T);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3W, T3T);
                ro[WS(os, 10)] = T31 + T34;
                ro[WS(os, 22)] = T31 - T34;
                ro[WS(os, 16)] = T27 + T2e;
                ro[WS(os, 4)]  = T27 - T2e;
                T35            = T2h + T2k;
                T2l            = T2h - T2k;
                T3z            = T1f + T1m;
                T1n            = T1f - T1m;
                T3x            = T3a + T3b;
                T3c            = T3a - T3b;
                T3d            = T1s - T1x;
                T1y            = T1s + T1x;
                T1J            = T1D + T1I;
                T3f            = T1D - T1I;
                T37            = T1N - T1Q;
                T1R            = T1N + T1Q;
                T1Y            = T1U + T1X;
                T3m            = T1U - T1X;
                io[WS(os, 16)] = T35 + T36;
                io[WS(os, 4)]  = T35 - T36;
                io[WS(os, 10)] = T2l + T2m;
                io[WS(os, 22)] = T2l - T2m;
                T3A            = T3w + T3x;
                T3y            = T3w - T3x;
                T20            = T1J + T1y;
                T1K            = T1y - T1J;
                T3v            = T1R - T1Y;
                T1Z            = T1R + T1Y;
                T3t            = T37 - T38;
                T39            = T37 + T38;
                io[WS(os, 8)]  = T3z + T3A;
                io[WS(os, 20)] = T3z - T3A;
                io[WS(os, 2)]  = T1n + T1K;
                io[WS(os, 14)] = T1n - T1K;
                ro[WS(os, 2)]  = T3v + T3y;
                ro[WS(os, 14)] = T3v - T3y;
                ro[WS(os, 8)]  = T1Z + T20;
                ro[WS(os, 20)] = T1Z - T20;
                T3n            = T3l + T3m;
                T3p            = T3l - T3m;
                T3e            = T3c - T3d;
                T3r            = T3d + T3c;
                T3q            = T3f - T3i;
                T3j            = T3f + T3i;
            }
        }
        T3s            = T3q - T3r;
        T3u            = T3q + T3r;
        T3k            = T3e - T3j;
        T3o            = T3j + T3e;
        T2p            = T2n + T2o;
        T2V            = T2n - T2o;
        T2T            = T2R + T2S;
        T2Z            = T2R - T2S;
        T2C            = T2q + T2B;
        T2W            = T2B - T2q;
        T2P            = T2D - T2O;
        T2X            = T2D + T2O;
        ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T3u, T3t);
        ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3u, T3t);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3s, T3p);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3s, T3p);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T3o, T3n);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3o, T3n);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3k, T39);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3k, T39);
        T30            = T2X - T2W;
        T2Y            = T2W + T2X;
        T2Q            = T2C - T2P;
        T2U            = T2C + T2P;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2Y, T2V);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2Y, T2V);
        ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T30, T2Z);
        ro[WS(os, 19)] = SIMD_FNMADD(KP707106781, T30, T2Z);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2U, T2T);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2U, T2T);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2Q, T2p);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2Q, T2p);
    }
}

template <>
struct c2cb_traits<24, 1>
{
    static constexpr long_t flops           = 324;
    static constexpr long_t operations      = 252;
    static constexpr long_t memory_accesses = 94;
    static constexpr long_t stack_vars      = 184;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 252 FP additions, 72 FP multiplications,
 * (or, 180 additions, 0 multiplications, 72 fused multiply/add),
 * 184 stack variables, 3 constants, and 94 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T3d, T3o, T1C, T17, T1r, TW, T25, T1P, T3F, T3D, T27, T1W,
            T26, T23, T1F;
        SIMD_FLOAT TD, T3p, T3r, T3E, T28, T24, T3G, T18, T1H, T1D, T1G, T3q,
            T1I, T1E, T3s;
        {
            SIMD_FLOAT T29, T37, T2a, T38, T9, T1J, T2E, T2W, T2d, T1K, Ti, T2X,
                T2J, T3P, T1N;
            SIMD_FLOAT TB, T3B, T3n, TE, TX, T2c, T3O, Ts, T1M, T3i, T3A, TN,
                T2n, T2o, T12;
            SIMD_FLOAT T1h, T1T, T1w, T1Q, T2p, T1U, T1q, T2s, T3c, T1B, T1R,
                TH, T10, TY, TL;
            SIMD_FLOAT TO, TP, TS, TT, T3b, T1X, T20, T2v, T2f, T2t, T2x, TC,
                T3u, Tj, T1Y;
            SIMD_FLOAT T21, T3T, T3R, T2S, T2L, T36, T3v, T2N, T2w, T2m, T2M,
                T2P, T2Q;
            {
                SIMD_FLOAT T1, T2A, Ta, T2F, Tt, T3j, Tu, T2D, T4, T2B, T8, Tv,
                    Ty, T2I, Td;
                SIMD_FLOAT T2G, Th, Tz, T2, T3, T6, T7, Tb, Tc, Tf, Tg, Tk, T3e,
                    T3m, TA;
                SIMD_FLOAT Tl, Tx, T3l, Tm, Tp, Tq, T5, T2C, Tw, Te, T2H, T3k;
                T1  = ri[0];
                T2A = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T6  = ii[WS(is, 8)];
                T7  = ii[WS(is, 16)];
                Ta  = ri[WS(is, 12)];
                T2F = ii[WS(is, 12)];
                Tb  = ri[WS(is, 20)];
                Tc  = ri[WS(is, 4)];
                Tf  = ii[WS(is, 20)];
                Tg  = ii[WS(is, 4)];
                Tt  = ii[WS(is, 18)];
                T3j = ri[WS(is, 18)];
                Tu  = ii[WS(is, 2)];
                T2D = T3 - T2;
                T4  = T2 + T3;
                T2B = T6 + T7;
                T8  = T6 - T7;
                Tv  = ii[WS(is, 10)];
                Ty  = ri[WS(is, 10)];
                T2I = Tc - Tb;
                Td  = Tb + Tc;
                T2G = Tf + Tg;
                Th  = Tf - Tg;
                Tz  = ri[WS(is, 2)];
                Tk  = ii[WS(is, 6)];
                T3e = ri[WS(is, 6)];
                T29 = T1 + T4;
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T37 = T2B + T2A;
                T2C = SIMD_FNMADD(KP500000000, T2B, T2A);
                Tw  = Tu + Tv;
                T3m = Tu - Tv;
                T2a = Ta + Td;
                Te  = SIMD_FNMADD(KP500000000, Td, Ta);
                T38 = T2G + T2F;
                T2H = SIMD_FNMADD(KP500000000, T2G, T2F);
                TA  = Ty - Tz;
                T3k = Ty + Tz;
                T9  = SIMD_FMADD(KP866025403, T8, T5);
                T1J = SIMD_FNMADD(KP866025403, T8, T5);
                T2E = SIMD_FMADD(KP866025403, T2D, T2C);
                T2W = SIMD_FNMADD(KP866025403, T2D, T2C);
                Tl  = ii[WS(is, 14)];
                Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
                T2d = Tt + Tw;
                T1K = SIMD_FNMADD(KP866025403, Th, Te);
                Ti  = SIMD_FMADD(KP866025403, Th, Te);
                T2X = SIMD_FNMADD(KP866025403, T2I, T2H);
                T2J = SIMD_FMADD(KP866025403, T2I, T2H);
                T3l = SIMD_FNMADD(KP500000000, T3k, T3j);
                T3P = T3k + T3j;
                Tm  = ii[WS(is, 22)];
                Tp  = ri[WS(is, 22)];
                Tq  = ri[WS(is, 14)];
                {
                    SIMD_FLOAT T19, T1s, T1i, T1x, T1a, T3h, Tn, T3f, Tr, T1b,
                        T1e, T1f, T1j, T1k, T1n;
                    SIMD_FLOAT T1o, T1v, T1g, T1A, T1p, T1d, T2q, T1u, T1m, T2r,
                        T1z, To, T3g, T1c, T1t;
                    SIMD_FLOAT T1l, T1y, TF, TG, TJ, TK;
                    T19 = ri[WS(is, 21)];
                    T1N = SIMD_FNMADD(KP866025403, TA, Tx);
                    TB  = SIMD_FMADD(KP866025403, TA, Tx);
                    T1s = ii[WS(is, 21)];
                    T1i = ri[WS(is, 9)];
                    T1x = ii[WS(is, 9)];
                    T1a = ri[WS(is, 5)];
                    T3B = SIMD_FNMADD(KP866025403, T3m, T3l);
                    T3n = SIMD_FMADD(KP866025403, T3m, T3l);
                    T3h = Tl - Tm;
                    Tn  = Tl + Tm;
                    T3f = Tp + Tq;
                    Tr  = Tp - Tq;
                    T1b = ri[WS(is, 13)];
                    T1e = ii[WS(is, 5)];
                    T1f = ii[WS(is, 13)];
                    T1j = ri[WS(is, 17)];
                    T1k = ri[WS(is, 1)];
                    T1n = ii[WS(is, 17)];
                    T1o = ii[WS(is, 1)];
                    TE  = ri[WS(is, 3)];
                    TX  = ii[WS(is, 3)];
                    T2c = Tk + Tn;
                    To  = SIMD_FNMADD(KP500000000, Tn, Tk);
                    T3O = T3f + T3e;
                    T3g = SIMD_FNMADD(KP500000000, T3f, T3e);
                    T1c = T1a + T1b;
                    T1v = T1b - T1a;
                    T1g = T1e - T1f;
                    T1t = T1e + T1f;
                    T1l = T1j + T1k;
                    T1A = T1k - T1j;
                    T1p = T1n - T1o;
                    T1y = T1n + T1o;
                    Ts  = SIMD_FMADD(KP866025403, Tr, To);
                    T1M = SIMD_FNMADD(KP866025403, Tr, To);
                    T3i = SIMD_FMADD(KP866025403, T3h, T3g);
                    T3A = SIMD_FNMADD(KP866025403, T3h, T3g);
                    TN  = ri[WS(is, 15)];
                    T2n = T19 + T1c;
                    T1d = SIMD_FNMADD(KP500000000, T1c, T19);
                    T2q = T1t + T1s;
                    T1u = SIMD_FNMADD(KP500000000, T1t, T1s);
                    T2o = T1i + T1l;
                    T1m = SIMD_FNMADD(KP500000000, T1l, T1i);
                    T2r = T1y + T1x;
                    T1z = SIMD_FNMADD(KP500000000, T1y, T1x);
                    T12 = ii[WS(is, 15)];
                    TF  = ri[WS(is, 11)];
                    TG  = ri[WS(is, 19)];
                    TJ  = ii[WS(is, 11)];
                    TK  = ii[WS(is, 19)];
                    T1h = SIMD_FMADD(KP866025403, T1g, T1d);
                    T1T = SIMD_FNMADD(KP866025403, T1g, T1d);
                    T1w = SIMD_FMADD(KP866025403, T1v, T1u);
                    T1Q = SIMD_FNMADD(KP866025403, T1v, T1u);
                    T2p = T2n - T2o;
                    T1U = SIMD_FNMADD(KP866025403, T1p, T1m);
                    T1q = SIMD_FMADD(KP866025403, T1p, T1m);
                    T2s = T2q - T2r;
                    T3c = T2q + T2r;
                    T1B = SIMD_FMADD(KP866025403, T1A, T1z);
                    T1R = SIMD_FNMADD(KP866025403, T1A, T1z);
                    TH  = TF + TG;
                    T10 = TG - TF;
                    TY  = TJ + TK;
                    TL  = TJ - TK;
                    TO  = ri[WS(is, 23)];
                    TP  = ri[WS(is, 7)];
                    TS  = ii[WS(is, 23)];
                    TT  = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T39, T3N, T2e, T3a, T3W, T2b, T3Q, T3X, T2g, TI, T2j,
                    TZ, T15, TQ, T13;
                SIMD_FLOAT TU, T3Y, TM, T11, TR, T2h, T14, T2k, T2i, TV, T3V,
                    T2l, T16, T2z, T2K;
                SIMD_FLOAT T35;
                T39            = T37 + T38;
                T3N            = T37 - T38;
                T2e            = T2c - T2d;
                T3a            = T2c + T2d;
                T3W            = T29 + T2a;
                T2b            = T29 - T2a;
                T3Q            = T3O - T3P;
                T3X            = T3O + T3P;
                T2g            = TE + TH;
                TI             = SIMD_FNMADD(KP500000000, TH, TE);
                T2j            = TY + TX;
                TZ             = SIMD_FNMADD(KP500000000, TY, TX);
                T15            = TP - TO;
                TQ             = TO + TP;
                T13            = TS + TT;
                TU             = TS - TT;
                T3b            = T39 - T3a;
                T3Y            = T3W - T3X;
                TM             = SIMD_FMADD(KP866025403, TL, TI);
                T1X            = SIMD_FNMADD(KP866025403, TL, TI);
                T11            = SIMD_FMADD(KP866025403, T10, TZ);
                T20            = SIMD_FNMADD(KP866025403, T10, TZ);
                TR             = SIMD_FNMADD(KP500000000, TQ, TN);
                T2h            = TN + TQ;
                T14            = SIMD_FNMADD(KP500000000, T13, T12);
                T2k            = T13 + T12;
                T2v            = T2b - T2e;
                T2f            = T2b + T2e;
                T2t            = T2p - T2s;
                T2x            = T2p + T2s;
                T2z            = Ts + TB;
                TC             = Ts - TB;
                T3d            = T2E - T2J;
                T2K            = T2E + T2J;
                T3u            = T9 + Ti;
                Tj             = T9 - Ti;
                T2i            = T2g - T2h;
                T35            = T2g + T2h;
                TV             = SIMD_FMADD(KP866025403, TU, TR);
                T1Y            = SIMD_FNMADD(KP866025403, TU, TR);
                io[WS(os, 11)] = T3a + T39 - T3c - (T2j + T2k);
                T3V            = T3c - (T2j + T2k);
                T2l            = T2j - T2k;
                T21            = SIMD_FNMADD(KP866025403, T15, T14);
                T16            = SIMD_FMADD(KP866025403, T15, T14);
                T3T            = T3N + T3Q;
                T3R            = T3N - T3Q;
                T2S            = T2K - T2z;
                T2L            = T2z + T2K;
                ro[WS(os, 11)] = T3W + T3X - (T2n + T2o) - T35;
                T36            = T35 - (T2n + T2o);
                T3v            = T3i + T3n;
                T3o            = T3i - T3n;
                T1C            = T1w - T1B;
                T2N            = T1w + T1B;
                ro[WS(os, 17)] = T3Y - T3V;
                ro[WS(os, 5)]  = T3V + T3Y;
                T2w            = T2l - T2i;
                T2m            = T2i + T2l;
                T2M            = T11 + T16;
                T17            = T11 - T16;
                T1r            = T1h - T1q;
                T2P            = T1h + T1q;
                T2Q            = TM + TV;
                TW             = TM - TV;
            }
            {
                SIMD_FLOAT T1V, T1Z, T1L, T3L, T2V, T3C, T3z, T2Y, T3M, T3K,
                    T2Z, T1O, T22, T31, T32;
                SIMD_FLOAT T1S, T3w, T3x, T3I, T3S, T2y, T3U, T2u, T3t, T2O,
                    T3y, T2R, T3J, T2T, T2U;
                SIMD_FLOAT T34, T30, T3H, T33;
                T1V            = T1T - T1U;
                T2T            = T1T + T1U;
                T2U            = T1X + T1Y;
                T1Z            = T1X - T1Y;
                io[WS(os, 17)] = T3b - T36;
                io[WS(os, 5)]  = T36 + T3b;
                T3w            = T3u - T3v;
                T3x            = T3u + T3v;
                T1L            = T1J - T1K;
                T3I            = T1J + T1K;
                T3S            = T2w + T2x;
                T2y            = T2w - T2x;
                T3U            = T2t - T2m;
                T2u            = T2m + T2t;
                T3t            = T2M - T2N;
                T2O            = T2M + T2N;
                T3y            = T2Q + T2P;
                T2R            = T2P - T2Q;
                T3L            = T2U + T2T;
                T2V            = T2T - T2U;
                T3J            = T3A + T3B;
                T3C            = T3A - T3B;
                T3z            = T2W - T2X;
                T2Y            = T2W + T2X;
                io[WS(os, 8)]  = SIMD_FMADD(KP707106781, T3S, T3R);
                io[WS(os, 20)] = SIMD_FNMADD(KP707106781, T3S, T3R);
                ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2y, T2v);
                ro[WS(os, 14)] = SIMD_FNMADD(KP707106781, T2y, T2v);
                io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T3U, T3T);
                io[WS(os, 14)] = SIMD_FNMADD(KP707106781, T3U, T3T);
                ro[WS(os, 8)]  = SIMD_FMADD(KP707106781, T2u, T2f);
                ro[WS(os, 20)] = SIMD_FNMADD(KP707106781, T2u, T2f);
                ro[WS(os, 21)] = T3w - T3t;
                ro[WS(os, 9)]  = T3t + T3w;
                io[WS(os, 15)] = T2O + T2L;
                io[WS(os, 3)]  = T2L - T2O;
                ro[WS(os, 15)] = T3y + T3x;
                ro[WS(os, 3)]  = T3x - T3y;
                io[WS(os, 21)] = T2S - T2R;
                io[WS(os, 9)]  = T2R + T2S;
                T3M            = T3I + T3J;
                T3K            = T3I - T3J;
                T2Z            = T1M + T1N;
                T1O            = T1M - T1N;
                T22            = T20 - T21;
                T31            = T20 + T21;
                T32            = T1Q + T1R;
                T1S            = T1Q - T1R;
                ro[WS(os, 19)] = T3M - T3L;
                ro[WS(os, 7)]  = T3L + T3M;
                T34            = T2Z + T2Y;
                T30            = T2Y - T2Z;
                T3H            = T31 - T32;
                T33            = T31 + T32;
                T25            = T1L - T1O;
                T1P            = T1L + T1O;
                T3F            = T3z + T3C;
                T3D            = T3z - T3C;
                T27            = T1V + T1S;
                T1W            = T1S - T1V;
                io[WS(os, 13)] = T30 - T2V;
                io[WS(os, 1)]  = T2V + T30;
                ro[WS(os, 13)] = T3K - T3H;
                ro[WS(os, 1)]  = T3H + T3K;
                io[WS(os, 19)] = T34 - T33;
                io[WS(os, 7)]  = T33 + T34;
                T26            = T1Z - T22;
                T23            = T1Z + T22;
                T1F            = Tj - TC;
                TD             = Tj + TC;
            }
        }
        T3p            = T3d - T3o;
        T3r            = T3d + T3o;
        T3E            = T26 - T27;
        T28            = T26 + T27;
        T24            = T1W - T23;
        T3G            = T23 + T1W;
        T18            = TW + T17;
        T1H            = T17 - TW;
        T1D            = T1r - T1C;
        T1G            = T1r + T1C;
        ro[WS(os, 22)] = SIMD_FMADD(KP707106781, T28, T25);
        ro[WS(os, 10)] = SIMD_FNMADD(KP707106781, T28, T25);
        io[WS(os, 16)] = SIMD_FNMADD(KP707106781, T3E, T3D);
        io[WS(os, 4)]  = SIMD_FMADD(KP707106781, T3E, T3D);
        io[WS(os, 22)] = SIMD_FMADD(KP707106781, T3G, T3F);
        io[WS(os, 10)] = SIMD_FNMADD(KP707106781, T3G, T3F);
        ro[WS(os, 4)]  = SIMD_FMADD(KP707106781, T24, T1P);
        ro[WS(os, 16)] = SIMD_FNMADD(KP707106781, T24, T1P);
        T3q            = T1H + T1G;
        T1I            = T1G - T1H;
        T1E            = T18 + T1D;
        T3s            = T18 - T1D;
        ro[WS(os, 6)]  = SIMD_FMADD(KP707106781, T1I, T1F);
        ro[WS(os, 18)] = SIMD_FNMADD(KP707106781, T1I, T1F);
        io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T3q, T3p);
        io[0]          = SIMD_FMADD(KP707106781, T3q, T3p);
        io[WS(os, 18)] = SIMD_FNMADD(KP707106781, T3s, T3r);
        io[WS(os, 6)]  = SIMD_FMADD(KP707106781, T3s, T3r);
        ro[0]          = SIMD_FMADD(KP707106781, T1E, TD);
        ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T1E, TD);
    }
}

template <>
struct c2cb_traits<24, 2>
{
    static constexpr long_t flops           = 321;
    static constexpr long_t operations      = 250;
    static constexpr long_t memory_accesses = 92;
    static constexpr long_t stack_vars      = 167;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 250 FP additions, 71 FP multiplications,
 * (or, 179 additions, 0 multiplications, 71 fused multiply/add),
 * 167 stack variables, 3 constants, and 92 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2L, T2A, T2W, T2m, T2S, T2Q, T2U, T2z, T2M, T2T, T2V, T2X,
            T2N, T2R;
        {
            SIMD_FLOAT T5, T2e, Ta, T2f, TO, T1u, T1N, T26, Tl, T1v, TT, T27,
                T1S, T2i, T1y;
            SIMD_FLOAT T14, T2a, T23, To, T2o, Tg, T2h, TZ, T1x, T1Y, T29, Tt,
                TD, TI, T2t;
            SIMD_FLOAT T1b, T1B, T2F, T3c, T3x, T1C, T1g, T3A, T3S, T2K, T3d,
                Tr, T2r, T2p, T1l;
            SIMD_FLOAT Tu, Tv, T1o, T1p;
            {
                SIMD_FLOAT T1, T1J, T6, T1O, Th, T1Z, Ti, T1M, T4, T1K, TN, Tj,
                    T11, T1R, T9;
                SIMD_FLOAT T1P, TS, T12, T2, T3, TL, TM, T7, T8, TQ, TR, Tc,
                    T1U, T22, T13;
                SIMD_FLOAT Td, T10, T21, Te, TW, TX, TK, T1L, Tk, TP, T1Q, T20;
                T1  = ri[0];
                T1J = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TL  = ii[WS(is, 8)];
                TM  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T1O = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TQ  = ii[WS(is, 20)];
                TR  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T1Z = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T1M = T3 - T2;
                T4  = T2 + T3;
                T1K = TL + TM;
                TN  = TL - TM;
                Tj  = ri[WS(is, 10)];
                T11 = ii[WS(is, 2)];
                T1R = T8 - T7;
                T9  = T7 + T8;
                T1P = TQ + TR;
                TS  = TQ - TR;
                T12 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                T1U = ii[WS(is, 6)];
                T5  = T1 + T4;
                TK  = SIMD_FNMADD(KP500000000, T4, T1);
                T2e = T1K + T1J;
                T1L = SIMD_FNMADD(KP500000000, T1K, T1J);
                Tk  = Ti + Tj;
                T22 = Tj - Ti;
                Ta  = T6 + T9;
                TP  = SIMD_FNMADD(KP500000000, T9, T6);
                T2f = T1P + T1O;
                T1Q = SIMD_FNMADD(KP500000000, T1P, T1O);
                T13 = T11 - T12;
                T20 = T11 + T12;
                TO  = SIMD_FNMADD(KP866025403, TN, TK);
                T1u = SIMD_FMADD(KP866025403, TN, TK);
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T26 = SIMD_FMADD(KP866025403, T1M, T1L);
                Td  = ri[WS(is, 14)];
                T10 = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T1v = SIMD_FMADD(KP866025403, TS, TP);
                TT  = SIMD_FNMADD(KP866025403, TS, TP);
                T27 = SIMD_FMADD(KP866025403, T1R, T1Q);
                T1S = SIMD_FNMADD(KP866025403, T1R, T1Q);
                T21 = SIMD_FNMADD(KP500000000, T20, T1Z);
                T2i = T20 + T1Z;
                Te  = ri[WS(is, 22)];
                TW  = ii[WS(is, 14)];
                TX  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Tz, T2B, TE, T2G, TA, T1X, Tf, T1V, TY, TB, T18,
                        T19, TF, TG, T1d;
                    SIMD_FLOAT T1e, T2E, T1a, T2J, T1f, T17, T3y, T2D, T1c, T3z,
                        T2I, TV, T1W, TC, T2C;
                    SIMD_FLOAT TH, T2H, Tp, Tq, T1j, T1k;
                    Tz  = ii[WS(is, 3)];
                    T1y = SIMD_FMADD(KP866025403, T13, T10);
                    T14 = SIMD_FNMADD(KP866025403, T13, T10);
                    T2B = ri[WS(is, 3)];
                    TE  = ii[WS(is, 15)];
                    T2G = ri[WS(is, 15)];
                    TA  = ii[WS(is, 11)];
                    T2a = SIMD_FMADD(KP866025403, T22, T21);
                    T23 = SIMD_FNMADD(KP866025403, T22, T21);
                    T1X = Te - Td;
                    Tf  = Td + Te;
                    T1V = TW + TX;
                    TY  = TW - TX;
                    TB  = ii[WS(is, 19)];
                    T18 = ri[WS(is, 19)];
                    T19 = ri[WS(is, 11)];
                    TF  = ii[WS(is, 23)];
                    TG  = ii[WS(is, 7)];
                    T1d = ri[WS(is, 7)];
                    T1e = ri[WS(is, 23)];
                    To  = ii[WS(is, 21)];
                    T2o = ri[WS(is, 21)];
                    Tg  = Tc + Tf;
                    TV  = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T2h = T1V + T1U;
                    T1W = SIMD_FNMADD(KP500000000, T1V, T1U);
                    TC  = TA + TB;
                    T2E = TA - TB;
                    T1a = T18 - T19;
                    T2C = T18 + T19;
                    TH  = TF + TG;
                    T2J = TF - TG;
                    T1f = T1d - T1e;
                    T2H = T1d + T1e;
                    TZ  = SIMD_FNMADD(KP866025403, TY, TV);
                    T1x = SIMD_FMADD(KP866025403, TY, TV);
                    T1Y = SIMD_FNMADD(KP866025403, T1X, T1W);
                    T29 = SIMD_FMADD(KP866025403, T1X, T1W);
                    Tt  = ii[WS(is, 9)];
                    TD  = Tz + TC;
                    T17 = SIMD_FNMADD(KP500000000, TC, Tz);
                    T3y = T2C + T2B;
                    T2D = SIMD_FNMADD(KP500000000, T2C, T2B);
                    TI  = TE + TH;
                    T1c = SIMD_FNMADD(KP500000000, TH, TE);
                    T3z = T2H + T2G;
                    T2I = SIMD_FNMADD(KP500000000, T2H, T2G);
                    T2t = ri[WS(is, 9)];
                    Tp  = ii[WS(is, 5)];
                    Tq  = ii[WS(is, 13)];
                    T1j = ri[WS(is, 13)];
                    T1k = ri[WS(is, 5)];
                    T1b = SIMD_FNMADD(KP866025403, T1a, T17);
                    T1B = SIMD_FMADD(KP866025403, T1a, T17);
                    T2F = SIMD_FNMADD(KP866025403, T2E, T2D);
                    T3c = SIMD_FMADD(KP866025403, T2E, T2D);
                    T3x = TD - TI;
                    T1C = SIMD_FMADD(KP866025403, T1f, T1c);
                    T1g = SIMD_FNMADD(KP866025403, T1f, T1c);
                    T3A = T3y - T3z;
                    T3S = T3y + T3z;
                    T2K = SIMD_FNMADD(KP866025403, T2J, T2I);
                    T3d = SIMD_FMADD(KP866025403, T2J, T2I);
                    Tr  = Tp + Tq;
                    T2r = Tp - Tq;
                    T2p = T1j + T1k;
                    T1l = T1j - T1k;
                    Tu  = ii[WS(is, 17)];
                    Tv  = ii[WS(is, 1)];
                    T1o = ri[WS(is, 1)];
                    T1p = ri[WS(is, 17)];
                }
            }
            {
                SIMD_FLOAT Tn, T3O, T3B, T1m, T2s, T3Q, T3w, T34, T1w, T2b, T35,
                    T3i, T28, T1r, T2x;
                SIMD_FLOAT T3M, T3K, T36, TJ, T1z, T3j, T37, T1G, T3q, T3e, T3G,
                    T3N, T3a, T3p, T1D;
                SIMD_FLOAT T3f, Tb, T3u, T3J, Tm, T2g, T3I, T3v, T2j, Ts, T1i,
                    T3D, T2q, T2w, Tw;
                SIMD_FLOAT T2u, T1q, T3T, T1E, T38, T1n, Tx, T2v, T3E, T3C, T1F,
                    T3U, T3F, T39, Ty;
                Tb             = T5 + Ta;
                T3u            = T5 - Ta;
                T3J            = Tg - Tl;
                Tm             = Tg + Tl;
                T2g            = T2e + T2f;
                T3I            = T2e - T2f;
                T3v            = T2h - T2i;
                T2j            = T2h + T2i;
                Ts             = To + Tr;
                T1i            = SIMD_FNMADD(KP500000000, Tr, To);
                T3D            = T2p + T2o;
                T2q            = SIMD_FNMADD(KP500000000, T2p, T2o);
                T2w            = Tu - Tv;
                Tw             = Tu + Tv;
                T2u            = T1o + T1p;
                T1q            = T1o - T1p;
                Tn             = Tb - Tm;
                T3T            = T2g - T2j;
                T3O            = T3x + T3A;
                T3B            = T3x - T3A;
                T1m            = SIMD_FNMADD(KP866025403, T1l, T1i);
                T1E            = SIMD_FMADD(KP866025403, T1l, T1i);
                T2s            = SIMD_FNMADD(KP866025403, T2r, T2q);
                T38            = SIMD_FMADD(KP866025403, T2r, T2q);
                T1n            = SIMD_FNMADD(KP500000000, Tw, Tt);
                Tx             = Tt + Tw;
                T2v            = SIMD_FNMADD(KP500000000, T2u, T2t);
                T3E            = T2u + T2t;
                T3Q            = T3u + T3v;
                T3w            = T3u - T3v;
                T34            = T1u - T1v;
                T1w            = T1u + T1v;
                T2b            = T29 + T2a;
                T35            = T29 - T2a;
                T3i            = T26 - T27;
                T28            = T26 + T27;
                T3C            = Ts - Tx;
                Ty             = Ts + Tx;
                T1r            = SIMD_FNMADD(KP866025403, T1q, T1n);
                T1F            = SIMD_FMADD(KP866025403, T1q, T1n);
                ro[WS(os, 10)] = Tb + Tm - T3S - (T3D + T3E);
                T3U            = T3S - (T3D + T3E);
                T3F            = T3D - T3E;
                T39            = SIMD_FMADD(KP866025403, T2w, T2v);
                T2x            = SIMD_FNMADD(KP866025403, T2w, T2v);
                T3M            = T3J + T3I;
                T3K            = T3I - T3J;
                T36            = T34 - T35;
                io[WS(os, 10)] = T2g + T2j - (TD + TI) - Ty;
                TJ             = Ty - (TD + TI);
                T1z            = T1x + T1y;
                T3j            = T1x - T1y;
                T37            = T1E - T1F;
                T1G            = T1E + T1F;
                T3q            = T3c + T3d;
                T3e            = T3c - T3d;
                io[WS(os, 4)]  = T3T + T3U;
                io[WS(os, 16)] = T3T - T3U;
                T3G            = T3C + T3F;
                T3N            = T3F - T3C;
                T3a            = T38 - T39;
                T3p            = T38 + T39;
                T1D            = T1B + T1C;
                T3f            = T1B - T1C;
                {
                    SIMD_FLOAT T3m, T1A, T3r, T3n, T3h, T3s, T3t, T3L, T3H, T3R,
                        T3P, T3k, T3b, T3l, T3g;
                    SIMD_FLOAT T2k, T2O, T2y, T2Z, T2d, T1H, T3o, T2c, T30, T1h,
                        T32, T16, T1s, T2n, T2P;
                    SIMD_FLOAT T1T, T24, T2l, TU, T15, T31, T33, T1t, T1I, T25,
                        T2Y;
                    ro[WS(os, 4)]  = Tn + TJ;
                    ro[WS(os, 16)] = Tn - TJ;
                    T3m            = T3j + T3i;
                    T3L            = T3G + T3B;
                    T3H            = T3B - T3G;
                    T3R            = T3N + T3O;
                    T3P            = T3N - T3O;
                    T3k            = T37 - T3a;
                    T3b            = T37 + T3a;
                    T3l            = T3f + T3e;
                    T3g            = T3e - T3f;
                    T3s            = T1w + T1z;
                    T1A            = T1w - T1z;
                    T3t            = T3p + T3q;
                    T3r            = T3p - T3q;
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T3L, T3K);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T3L, T3K);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T3H, T3w);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T3H, T3w);
                    ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T3R, T3Q);
                    ro[WS(os, 19)] = SIMD_FNMADD(KP707106781, T3R, T3Q);
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T3P, T3M);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T3P, T3M);
                    T3n            = T3k + T3l;
                    ro[WS(os, 11)] =
                        T34 + SIMD_FMADD(KP707106781, T3k - T3l, T35);
                    T3h            = T3b + T3g;
                    io[WS(os, 11)] = SIMD_FMADD(KP707106781, T3g, T3i) -
                                     (SIMD_FMADD(KP707106781, T3b, T3j));
                    ro[WS(os, 2)]  = T3s - T3t;
                    ro[WS(os, 14)] = T3s + T3t;
                    T2k            = TO - TT;
                    TU             = TO + TT;
                    T15            = TZ + T14;
                    T2O            = TZ - T14;
                    T2y            = T2s - T2x;
                    T2Z            = T2s + T2x;
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3n, T3m);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3n, T3m);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3h, T36);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3h, T36);
                    T2d            = T1D + T1G;
                    T1H            = T1D - T1G;
                    T3o            = T28 - T2b;
                    T2c            = T28 + T2b;
                    T30            = T2F + T2K;
                    T2L            = T2F - T2K;
                    T2A            = T1b - T1g;
                    T1h            = T1b + T1g;
                    T32            = TU + T15;
                    T16            = TU - T15;
                    T1s            = T1m + T1r;
                    T2n            = T1m - T1r;
                    T2P            = T1N - T1S;
                    T1T            = T1N + T1S;
                    T24            = T1Y + T23;
                    T2l            = T1Y - T23;
                    ro[WS(os, 8)]  = T1A + T1H;
                    ro[WS(os, 20)] = T1A - T1H;
                    io[WS(os, 8)]  = T3o + T3r;
                    io[WS(os, 20)] = T3o - T3r;
                    io[WS(os, 14)] = T2d + T2c;
                    io[WS(os, 2)]  = T2c - T2d;
                    T31            = T2Z - T30;
                    T33            = T2Z + T30;
                    T1t            = T1h - T1s;
                    T1I            = T1h + T1s;
                    T25            = T1T + T24;
                    T2Y            = T1T - T24;
                    T2W            = T2k - T2l;
                    T2m            = T2k + T2l;
                    ro[WS(os, 18)] = T32 - T33;
                    ro[WS(os, 6)]  = T32 + T33;
                    ro[0]          = T16 + T1t;
                    ro[WS(os, 12)] = T16 - T1t;
                    io[0]          = T2Y + T31;
                    io[WS(os, 12)] = T2Y - T31;
                    io[WS(os, 18)] = T25 - T1I;
                    io[WS(os, 6)]  = T1I + T25;
                    T2S            = T2P - T2O;
                    T2Q            = T2O + T2P;
                    T2U            = T2n + T2y;
                    T2z            = T2n - T2y;
                }
            }
        }
        T2M            = T2A + T2L;
        T2T            = T2L - T2A;
        T2V            = T2T - T2U;
        T2X            = T2U + T2T;
        T2N            = T2z - T2M;
        T2R            = T2z + T2M;
        ro[WS(os, 21)] = SIMD_FMADD(KP707106781, T2X, T2W);
        ro[WS(os, 9)]  = SIMD_FNMADD(KP707106781, T2X, T2W);
        io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2V, T2S);
        io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2V, T2S);
        io[WS(os, 21)] = SIMD_FMADD(KP707106781, T2R, T2Q);
        io[WS(os, 9)]  = SIMD_FNMADD(KP707106781, T2R, T2Q);
        ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2N, T2m);
        ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2N, T2m);
    }
}

template <>
struct c2cb_traits<24, 3>
{
    static constexpr long_t flops           = 319;
    static constexpr long_t operations      = 248;
    static constexpr long_t memory_accesses = 90;
    static constexpr long_t stack_vars      = 163;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 248 FP additions, 71 FP multiplications,
 * (or, 177 additions, 0 multiplications, 71 fused multiply/add),
 * 163 stack variables, 3 constants, and 90 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2W, T2T, T2P, T2M, T2Z, T2J, T3z, T3x, T2Q, T30, T2X, T31,
            T3A, T32, T2Y;
        SIMD_FLOAT T3y;
        {
            SIMD_FLOAT T5, T1j, Ta, T1o, T2s, T34, T1K, T2D, Tl, T35, T2v, T2E,
                T1N, T3f, T3H;
            SIMD_FLOAT T3v, T2H, T22, To, Tz, Tg, T3e, T3s, T3G, T1V, T2G, Tt,
                TP, TU, TE;
            SIMD_FLOAT T26, T2R, T2d, T2U, TV, T2S, T29, T16, T1s, T2g, T2V, Tr,
                T1u, T1B, TC;
            SIMD_FLOAT Tu, Tv, TF, TG;
            {
                SIMD_FLOAT T1, T1f, T6, T1k, Th, T1W, Ti, T1J, T4, T2r, T1i, Tj,
                    T1X, T1M, T9;
                SIMD_FLOAT T2u, T1n, T1Y, T2, T3, T1g, T1h, T7, T8, T1l, T1m,
                    Tc, T1P, T21, T3u;
                SIMD_FLOAT Td, T3t, T20, Te, T1Q, T1R, T2q, T1I, Tk, T2t, T1L,
                    T1Z;
                T1  = ri[0];
                T1f = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1g = ii[WS(is, 8)];
                T1h = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T1k = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                T1l = ii[WS(is, 20)];
                T1m = ii[WS(is, 4)];
                Th  = ii[WS(is, 18)];
                T1W = ri[WS(is, 18)];
                Ti  = ii[WS(is, 2)];
                T1J = T3 - T2;
                T4  = T2 + T3;
                T2r = T1g - T1h;
                T1i = T1g + T1h;
                Tj  = ii[WS(is, 10)];
                T1X = ri[WS(is, 2)];
                T1M = T8 - T7;
                T9  = T7 + T8;
                T2u = T1l - T1m;
                T1n = T1l + T1m;
                T1Y = ri[WS(is, 10)];
                Tc  = ii[WS(is, 6)];
                T1P = ri[WS(is, 6)];
                T5  = T1 + T4;
                T2q = SIMD_FNMADD(KP500000000, T4, T1);
                T1j = T1f + T1i;
                T1I = SIMD_FNMADD(KP500000000, T1i, T1f);
                Tk  = Ti + Tj;
                T21 = Ti - Tj;
                Ta  = T6 + T9;
                T2t = SIMD_FNMADD(KP500000000, T9, T6);
                T1o = T1k + T1n;
                T1L = SIMD_FNMADD(KP500000000, T1n, T1k);
                T1Z = T1X + T1Y;
                T3u = T1Y - T1X;
                T2s = SIMD_FMADD(KP866025403, T2r, T2q);
                T34 = SIMD_FNMADD(KP866025403, T2r, T2q);
                T1K = SIMD_FMADD(KP866025403, T1J, T1I);
                T2D = SIMD_FNMADD(KP866025403, T1J, T1I);
                Td  = ii[WS(is, 14)];
                T3t = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T35 = SIMD_FNMADD(KP866025403, T2u, T2t);
                T2v = SIMD_FMADD(KP866025403, T2u, T2t);
                T2E = SIMD_FNMADD(KP866025403, T1M, T1L);
                T1N = SIMD_FMADD(KP866025403, T1M, T1L);
                T20 = SIMD_FNMADD(KP500000000, T1Z, T1W);
                T3f = T1W + T1Z;
                Te  = ii[WS(is, 22)];
                T1Q = ri[WS(is, 14)];
                T1R = ri[WS(is, 22)];
                {
                    SIMD_FLOAT TL, TW, TQ, T11, TM, T1U, Tf, T3r, T1S, TN, TX,
                        TY, TR, TS, T12;
                    SIMD_FLOAT T13, T2c, T25, T2f, T28, T24, T10, T2b, T27, T15,
                        T2e, T3q, T1T, TO, TZ;
                    SIMD_FLOAT TT, T14, Tp, Tq, TA, TB;
                    TL  = ri[WS(is, 21)];
                    T3H = SIMD_FMADD(KP866025403, T3u, T3t);
                    T3v = SIMD_FNMADD(KP866025403, T3u, T3t);
                    TW  = ii[WS(is, 21)];
                    TQ  = ri[WS(is, 9)];
                    T11 = ii[WS(is, 9)];
                    TM  = ri[WS(is, 5)];
                    T2H = SIMD_FNMADD(KP866025403, T21, T20);
                    T22 = SIMD_FMADD(KP866025403, T21, T20);
                    T1U = Td - Te;
                    Tf  = Td + Te;
                    T3r = T1R - T1Q;
                    T1S = T1Q + T1R;
                    TN  = ri[WS(is, 13)];
                    TX  = ii[WS(is, 5)];
                    TY  = ii[WS(is, 13)];
                    TR  = ri[WS(is, 17)];
                    TS  = ri[WS(is, 1)];
                    T12 = ii[WS(is, 17)];
                    T13 = ii[WS(is, 1)];
                    To  = ii[WS(is, 3)];
                    Tz  = ri[WS(is, 3)];
                    Tg  = Tc + Tf;
                    T3q = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T3e = T1P + T1S;
                    T1T = SIMD_FNMADD(KP500000000, T1S, T1P);
                    TO  = TM + TN;
                    T2c = TN - TM;
                    TZ  = TX + TY;
                    T25 = TX - TY;
                    TT  = TR + TS;
                    T2f = TS - TR;
                    T14 = T12 + T13;
                    T28 = T12 - T13;
                    T3s = SIMD_FNMADD(KP866025403, T3r, T3q);
                    T3G = SIMD_FMADD(KP866025403, T3r, T3q);
                    T1V = SIMD_FMADD(KP866025403, T1U, T1T);
                    T2G = SIMD_FNMADD(KP866025403, T1U, T1T);
                    Tt  = ii[WS(is, 15)];
                    TP  = TL + TO;
                    T24 = SIMD_FNMADD(KP500000000, TO, TL);
                    T10 = TW + TZ;
                    T2b = SIMD_FNMADD(KP500000000, TZ, TW);
                    TU  = TQ + TT;
                    T27 = SIMD_FNMADD(KP500000000, TT, TQ);
                    T15 = T11 + T14;
                    T2e = SIMD_FNMADD(KP500000000, T14, T11);
                    TE  = ri[WS(is, 15)];
                    Tp  = ii[WS(is, 11)];
                    Tq  = ii[WS(is, 19)];
                    TA  = ri[WS(is, 11)];
                    TB  = ri[WS(is, 19)];
                    T26 = SIMD_FMADD(KP866025403, T25, T24);
                    T2R = SIMD_FNMADD(KP866025403, T25, T24);
                    T2d = SIMD_FMADD(KP866025403, T2c, T2b);
                    T2U = SIMD_FNMADD(KP866025403, T2c, T2b);
                    TV  = TP - TU;
                    T2S = SIMD_FNMADD(KP866025403, T28, T27);
                    T29 = SIMD_FMADD(KP866025403, T28, T27);
                    T16 = T10 - T15;
                    T1s = T10 + T15;
                    T2g = SIMD_FMADD(KP866025403, T2f, T2e);
                    T2V = SIMD_FNMADD(KP866025403, T2f, T2e);
                    Tr  = Tp + Tq;
                    T1u = Tp - Tq;
                    T1B = TB - TA;
                    TC  = TA + TB;
                    Tu  = ii[WS(is, 23)];
                    Tv  = ii[WS(is, 7)];
                    TF  = ri[WS(is, 23)];
                    TG  = ri[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T33, T1r, T3B, T2F, T3C, T3w, T1C, T1v, T3p, T36,
                    T38, T2I, T3a, T3E, T1F;
                SIMD_FLOAT T1y, T3c, Tn, T19, T3j, T3h, T37, T1e, T39, T1a, TK,
                    T17, T1b, T1p, T3d;
                SIMD_FLOAT Tm, T1q, T3m, Tb, T3g, T3n, Ts, T1A, TD, T1t, T1x,
                    Tw, T1E, TH, T3o;
                SIMD_FLOAT T2N, T2K, T1D, Tx, T1w, TI, Ty, T1d, TJ, T2L, T3l,
                    T2O;
                T1p            = T1j + T1o;
                T3d            = T1j - T1o;
                Tm             = Tg - Tl;
                T1q            = Tg + Tl;
                T3m            = T5 + Ta;
                Tb             = T5 - Ta;
                T3g            = T3e - T3f;
                T3n            = T3e + T3f;
                Ts             = To + Tr;
                T1A            = SIMD_FNMADD(KP500000000, Tr, To);
                TD             = Tz + TC;
                T1t            = SIMD_FNMADD(KP500000000, TC, Tz);
                T1x            = Tu - Tv;
                Tw             = Tu + Tv;
                T1E            = TG - TF;
                TH             = TF + TG;
                T33            = T2U + T2V;
                T2W            = T2U - T2V;
                T1r            = T1p - T1q;
                T3B            = T2D + T2E;
                T2F            = T2D - T2E;
                T3o            = T3m - T3n;
                T3C            = T3s + T3v;
                T3w            = T3s - T3v;
                T1C            = SIMD_FMADD(KP866025403, T1B, T1A);
                T2N            = SIMD_FNMADD(KP866025403, T1B, T1A);
                T1v            = SIMD_FMADD(KP866025403, T1u, T1t);
                T2K            = SIMD_FNMADD(KP866025403, T1u, T1t);
                T1D            = SIMD_FNMADD(KP500000000, Tw, Tt);
                Tx             = Tt + Tw;
                T1w            = SIMD_FNMADD(KP500000000, TH, TE);
                TI             = TE + TH;
                T3p            = T34 - T35;
                T36            = T34 + T35;
                T38            = T2G + T2H;
                T2I            = T2G - T2H;
                T2T            = T2R - T2S;
                T3a            = T2R + T2S;
                T3E            = T3B + T3C;
                io[WS(os, 9)]  = T1q + T1p - T1s - (Ts + Tx);
                T3l            = T1s - (Ts + Tx);
                Ty             = Ts - Tx;
                T2O            = SIMD_FNMADD(KP866025403, T1E, T1D);
                T1F            = SIMD_FMADD(KP866025403, T1E, T1D);
                T1d            = TD + TI;
                TJ             = TD - TI;
                T2L            = SIMD_FNMADD(KP866025403, T1x, T1w);
                T1y            = SIMD_FMADD(KP866025403, T1x, T1w);
                T3c            = T36 + T38;
                Tn             = Tb + Tm;
                T19            = Tb - Tm;
                T3j            = T3d + T3g;
                T3h            = T3d - T3g;
                ro[WS(os, 15)] = T3o - T3l;
                ro[WS(os, 3)]  = T3l + T3o;
                T37            = T2N + T2O;
                T2P            = T2N - T2O;
                ro[WS(os, 9)]  = T3m + T3n - (TP + TU) - T1d;
                T1e            = T1d - (TP + TU);
                T39            = T2K + T2L;
                T2M            = T2K - T2L;
                T1a            = Ty - TJ;
                TK             = Ty + TJ;
                T17            = TV - T16;
                T1b            = TV + T16;
                {
                    SIMD_FLOAT T3M, T1O, T23, T2x, T2w, T3F, T3I, T3N, T2j, T2A,
                        T3J, T2n, T2B, T2a, T2k;
                    SIMD_FLOAT T1H, T2h, T2o, T3D, T3b, T18, T3k, T1c, T3i, T1z,
                        T1G, T2p, T3O, T2z, T2y;
                    SIMD_FLOAT T3L, T2C, T2m, T3K, T2l, T2i, T3Q, T3P;
                    T3M            = T1K + T1N;
                    T1O            = T1K - T1N;
                    T23            = T1V - T22;
                    T2x            = T1V + T22;
                    T2w            = T2s + T2v;
                    T3F            = T2s - T2v;
                    ro[WS(os, 11)] = T33 + T36 - (T37 + T38);
                    T3D            = T37 + T33;
                    T3I            = T3G - T3H;
                    T3N            = T3G + T3H;
                    io[WS(os, 15)] = T1r - T1e;
                    io[WS(os, 3)]  = T1e + T1r;
                    io[WS(os, 11)] = T39 + T3B - (T3a + T3C);
                    T3b            = T39 + T3a;
                    T18            = TK + T17;
                    T3k            = T17 - TK;
                    T1c            = T1a - T1b;
                    T3i            = T1a + T1b;
                    T2j            = T1O + T23;
                    T1z            = T1v - T1y;
                    T2A            = T1v + T1y;
                    io[WS(os, 17)] = T3E - T3D;
                    io[WS(os, 5)]  = T3D + T3E;
                    T3J            = T3F - T3I;
                    T1G            = T1C - T1F;
                    T2n            = T1C + T1F;
                    T2B            = T26 + T29;
                    T2a            = T26 - T29;
                    ro[WS(os, 17)] = T3c - T3b;
                    ro[WS(os, 5)]  = T3b + T3c;
                    io[0]          = SIMD_FMADD(KP707106781, T3k, T3j);
                    io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T3k, T3j);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP707106781, T18, Tn);
                    ro[WS(os, 18)] = SIMD_FNMADD(KP707106781, T18, Tn);
                    io[WS(os, 6)]  = SIMD_FMADD(KP707106781, T3i, T3h);
                    io[WS(os, 18)] = SIMD_FNMADD(KP707106781, T3i, T3h);
                    ro[0]          = SIMD_FMADD(KP707106781, T1c, T19);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T1c, T19);
                    T2k            = T1z + T1G;
                    T1H            = T1z - T1G;
                    T2h            = T2d - T2g;
                    T2o            = T2d + T2g;
                    T2l            = T2h - T2a;
                    T2i            = T2a + T2h;
                    T3Q            = T2n + T2o;
                    T2p            = T2n - T2o;
                    T3P            = T3M + T3N;
                    T3O            = T3M - T3N;
                    T2z            = T2w + T2x;
                    T2y            = T2w - T2x;
                    T3L            = T2B - T2A;
                    T2C            = T2A + T2B;
                    T2Z            = T2F + T2I;
                    T2J            = T2F - T2I;
                    T2m            = T2k + T2l;
                    ro[WS(os, 10)] =
                        SIMD_FMADD(KP707106781, T2l - T2k, T3F) + T3I;
                    T3K            = T1H + T2i;
                    io[WS(os, 10)] = SIMD_FMADD(KP707106781, T1H, T1O) -
                                     (SIMD_FMADD(KP707106781, T2i, T23));
                    io[WS(os, 13)] = T3Q + T3P;
                    io[WS(os, 1)]  = T3P - T3Q;
                    ro[WS(os, 19)] = T2y - T2p;
                    ro[WS(os, 7)]  = T2p + T2y;
                    io[WS(os, 19)] = T3O - T3L;
                    io[WS(os, 7)]  = T3L + T3O;
                    ro[WS(os, 13)] = T2C + T2z;
                    ro[WS(os, 1)]  = T2z - T2C;
                    io[WS(os, 16)] = SIMD_FNMADD(KP707106781, T2m, T2j);
                    io[WS(os, 4)]  = SIMD_FMADD(KP707106781, T2m, T2j);
                    ro[WS(os, 16)] = SIMD_FNMADD(KP707106781, T3K, T3J);
                    ro[WS(os, 4)]  = SIMD_FMADD(KP707106781, T3K, T3J);
                    T3z            = T3p + T3w;
                    T3x            = T3p - T3w;
                }
            }
        }
        T2Q            = T2M - T2P;
        T30            = T2M + T2P;
        T2X            = T2T + T2W;
        T31            = T2W - T2T;
        T3A            = T31 - T30;
        T32            = T30 + T31;
        T2Y            = T2Q - T2X;
        T3y            = T2Q + T2X;
        io[WS(os, 20)] = SIMD_FMADD(KP707106781, T32, T2Z);
        io[WS(os, 8)]  = SIMD_FNMADD(KP707106781, T32, T2Z);
        ro[WS(os, 14)] = SIMD_FNMADD(KP707106781, T3A, T3z);
        ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T3A, T3z);
        ro[WS(os, 20)] = SIMD_FMADD(KP707106781, T3y, T3x);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP707106781, T3y, T3x);
        io[WS(os, 14)] = SIMD_FNMADD(KP707106781, T2Y, T2J);
        io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2Y, T2J);
    }
}

template <>
struct c2cb_traits<24, 4>
{
    static constexpr long_t flops           = 316;
    static constexpr long_t operations      = 246;
    static constexpr long_t memory_accesses = 88;
    static constexpr long_t stack_vars      = 159;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 246 FP additions, 70 FP multiplications,
 * (or, 176 additions, 0 multiplications, 70 fused multiply/add),
 * 159 stack variables, 3 constants, and 88 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T33, T34, T36, T39, T3k, T30, T3g, T3e, T35, T3i, T3a, T3h,
            T3j, T3l, T3b;
        SIMD_FLOAT T3f;
        {
            SIMD_FLOAT T5, T2b, Ta, T2c, TM, T1s, T1L, T24, Tl, T1t, TR, T25,
                T1Q, T2f, T1w;
            SIMD_FLOAT T12, T28, T21, Tn, T2k, Tg, T2e, TX, T1v, T1W, T27, Ts,
                TC, TH, T2p;
            SIMD_FLOAT T1k, T1C, T2C, T31, T3x, T1D, T1p, T3A, T3K, T2H, T32,
                Tq, T2n, T2l, T18;
            SIMD_FLOAT Tt, Tu, T1b, T1c;
            {
                SIMD_FLOAT T1, T1H, T6, T1M, Th, T1X, Ti, T1K, T4, T1I, TL, Tj,
                    TZ, T1P, T9;
                SIMD_FLOAT T1N, TQ, T10, T2, T3, TJ, TK, T7, T8, TO, TP, Tc,
                    T1S, T20, T11;
                SIMD_FLOAT Td, TY, T1Z, Te, TU, TV, TI, T1J, Tk, TN, T1O, T1Y;
                T1  = ri[0];
                T1H = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T1M = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TO  = ii[WS(is, 20)];
                TP  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T1X = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T1K = T3 - T2;
                T4  = T2 + T3;
                T1I = TJ + TK;
                TL  = TJ - TK;
                Tj  = ri[WS(is, 10)];
                TZ  = ii[WS(is, 2)];
                T1P = T8 - T7;
                T9  = T7 + T8;
                T1N = TO + TP;
                TQ  = TO - TP;
                T10 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                T1S = ii[WS(is, 6)];
                T5  = T1 + T4;
                TI  = SIMD_FNMADD(KP500000000, T4, T1);
                T2b = T1I + T1H;
                T1J = SIMD_FNMADD(KP500000000, T1I, T1H);
                Tk  = Ti + Tj;
                T20 = Tj - Ti;
                Ta  = T6 + T9;
                TN  = SIMD_FNMADD(KP500000000, T9, T6);
                T2c = T1N + T1M;
                T1O = SIMD_FNMADD(KP500000000, T1N, T1M);
                T11 = TZ - T10;
                T1Y = TZ + T10;
                TM  = SIMD_FNMADD(KP866025403, TL, TI);
                T1s = SIMD_FMADD(KP866025403, TL, TI);
                T1L = SIMD_FMADD(KP866025403, T1K, T1J);
                T24 = SIMD_FNMADD(KP866025403, T1K, T1J);
                Td  = ri[WS(is, 14)];
                TY  = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T1t = SIMD_FMADD(KP866025403, TQ, TN);
                TR  = SIMD_FNMADD(KP866025403, TQ, TN);
                T25 = SIMD_FNMADD(KP866025403, T1P, T1O);
                T1Q = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Z = SIMD_FNMADD(KP500000000, T1Y, T1X);
                T2f = T1Y + T1X;
                Te  = ri[WS(is, 22)];
                TU  = ii[WS(is, 14)];
                TV  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Ty, T2y, TD, T2D, Tz, T1V, Tf, T1T, TW, TA, T1h,
                        T1i, TE, TF, T1m;
                    SIMD_FLOAT T1n, T2B, T1j, T2G, T1o, T1g, T3y, T2A, T1l, T3z,
                        T2F, TT, T1U, TB, T2z;
                    SIMD_FLOAT TG, T2E, To, Tp, T16, T17;
                    Ty  = ri[WS(is, 21)];
                    T1w = SIMD_FMADD(KP866025403, T11, TY);
                    T12 = SIMD_FNMADD(KP866025403, T11, TY);
                    T2y = ii[WS(is, 21)];
                    TD  = ri[WS(is, 9)];
                    T2D = ii[WS(is, 9)];
                    Tz  = ri[WS(is, 5)];
                    T28 = SIMD_FNMADD(KP866025403, T20, T1Z);
                    T21 = SIMD_FMADD(KP866025403, T20, T1Z);
                    T1V = Te - Td;
                    Tf  = Td + Te;
                    T1T = TU + TV;
                    TW  = TU - TV;
                    TA  = ri[WS(is, 13)];
                    T1h = ii[WS(is, 5)];
                    T1i = ii[WS(is, 13)];
                    TE  = ri[WS(is, 17)];
                    TF  = ri[WS(is, 1)];
                    T1m = ii[WS(is, 17)];
                    T1n = ii[WS(is, 1)];
                    Tn  = ri[WS(is, 3)];
                    T2k = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    TT  = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T2e = T1T + T1S;
                    T1U = SIMD_FNMADD(KP500000000, T1T, T1S);
                    TB  = Tz + TA;
                    T2B = TA - Tz;
                    T1j = T1h - T1i;
                    T2z = T1h + T1i;
                    TG  = TE + TF;
                    T2G = TF - TE;
                    T1o = T1m - T1n;
                    T2E = T1m + T1n;
                    TX  = SIMD_FNMADD(KP866025403, TW, TT);
                    T1v = SIMD_FMADD(KP866025403, TW, TT);
                    T1W = SIMD_FMADD(KP866025403, T1V, T1U);
                    T27 = SIMD_FNMADD(KP866025403, T1V, T1U);
                    Ts  = ri[WS(is, 15)];
                    TC  = Ty + TB;
                    T1g = SIMD_FNMADD(KP500000000, TB, Ty);
                    T3y = T2z + T2y;
                    T2A = SIMD_FNMADD(KP500000000, T2z, T2y);
                    TH  = TD + TG;
                    T1l = SIMD_FNMADD(KP500000000, TG, TD);
                    T3z = T2E + T2D;
                    T2F = SIMD_FNMADD(KP500000000, T2E, T2D);
                    T2p = ii[WS(is, 15)];
                    To  = ri[WS(is, 11)];
                    Tp  = ri[WS(is, 19)];
                    T16 = ii[WS(is, 11)];
                    T17 = ii[WS(is, 19)];
                    T1k = SIMD_FNMADD(KP866025403, T1j, T1g);
                    T1C = SIMD_FMADD(KP866025403, T1j, T1g);
                    T2C = SIMD_FMADD(KP866025403, T2B, T2A);
                    T31 = SIMD_FNMADD(KP866025403, T2B, T2A);
                    T3x = TC - TH;
                    T1D = SIMD_FMADD(KP866025403, T1o, T1l);
                    T1p = SIMD_FNMADD(KP866025403, T1o, T1l);
                    T3A = T3y - T3z;
                    T3K = T3y + T3z;
                    T2H = SIMD_FMADD(KP866025403, T2G, T2F);
                    T32 = SIMD_FNMADD(KP866025403, T2G, T2F);
                    Tq  = To + Tp;
                    T2n = Tp - To;
                    T2l = T16 + T17;
                    T18 = T16 - T17;
                    Tt  = ri[WS(is, 23)];
                    Tu  = ri[WS(is, 7)];
                    T1b = ii[WS(is, 23)];
                    T1c = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T3q, T3r, T3B, T3I, T3C, T3G, T3D, T1z, T2o, T3E,
                    T2Y, TS, T13, T3c, T3o;
                SIMD_FLOAT T1q, T1A, T2t, T2h, T14, T26, T3d, T2a, T2Z, T29,
                    T1f, T3H, T3w, T3n, Tm;
                SIMD_FLOAT T2d, Tb, Tr, T15, T3t, T2m, T2s, Tv, T2q, T1d, T2g,
                    T19, T37, T1a, Tw;
                SIMD_FLOAT T2r, T3u, T3L, T3s, Tx, T1e, T3M, T3v, T38;
                Tm             = Tg + Tl;
                T3q            = Tg - Tl;
                T3r            = T2b - T2c;
                T2d            = T2b + T2c;
                T3B            = T3x - T3A;
                T3I            = T3x + T3A;
                Tb             = T5 + Ta;
                T3C            = T5 - Ta;
                Tr             = Tn + Tq;
                T15            = SIMD_FNMADD(KP500000000, Tq, Tn);
                T3t            = T2l + T2k;
                T2m            = SIMD_FNMADD(KP500000000, T2l, T2k);
                T2s            = Tu - Tt;
                Tv             = Tt + Tu;
                T2q            = T1b + T1c;
                T1d            = T1b - T1c;
                T3G            = T3r - T3q;
                T2g            = T2e + T2f;
                T3D            = T2e - T2f;
                T19            = SIMD_FNMADD(KP866025403, T18, T15);
                T1z            = SIMD_FMADD(KP866025403, T18, T15);
                T2o            = SIMD_FMADD(KP866025403, T2n, T2m);
                T37            = SIMD_FNMADD(KP866025403, T2n, T2m);
                T1a            = SIMD_FNMADD(KP500000000, Tv, Ts);
                Tw             = Ts + Tv;
                T2r            = SIMD_FNMADD(KP500000000, T2q, T2p);
                T3u            = T2q + T2p;
                T3E            = T3C + T3D;
                T3L            = Tb - Tm;
                T2Y            = TM - TR;
                TS             = TM + TR;
                T13            = TX + T12;
                T3c            = TX - T12;
                T33            = T31 - T32;
                T3o            = T31 + T32;
                T1q            = T1k + T1p;
                T34            = T1k - T1p;
                T3s            = Tr - Tw;
                Tx             = Tr + Tw;
                T1e            = SIMD_FNMADD(KP866025403, T1d, T1a);
                T1A            = SIMD_FMADD(KP866025403, T1d, T1a);
                T3M            = T3K - (T3t + T3u);
                T3v            = T3t - T3u;
                T2t            = SIMD_FMADD(KP866025403, T2s, T2r);
                T38            = SIMD_FNMADD(KP866025403, T2s, T2r);
                io[WS(os, 8)]  = T2d + T2g - T3K - (T3t + T3u);
                T2h            = T2d - T2g;
                T14            = TS + T13;
                T26            = T24 + T25;
                T3d            = T24 - T25;
                ro[WS(os, 8)]  = Tb + Tm - Tx - (TC + TH);
                T2a            = Tx - (TC + TH);
                T2Z            = T27 - T28;
                T29            = T27 + T28;
                T1f            = T19 + T1e;
                T36            = T19 - T1e;
                ro[WS(os, 14)] = T3L - T3M;
                ro[WS(os, 2)]  = T3L + T3M;
                T3H            = T3v - T3s;
                T3w            = T3s + T3v;
                T39            = T37 - T38;
                T3n            = T37 + T38;
                {
                    SIMD_FLOAT T2i, T1R, T1x, T2w, T2K, T1u, T22, T2L, T2O, T2M,
                        T1B, T2j, T2u, T2T, T1E;
                    SIMD_FLOAT T2x, T2I, T2U, T3m, T1r, T3F, T3J, T3p, T2P, T2v,
                        T2Q, T2J, T2S, T1y, T2X;
                    SIMD_FLOAT T2V, T1G, T1F, T2W, T23, T2R, T2N;
                    T2i            = T1L - T1Q;
                    T1R            = T1L + T1Q;
                    T1x            = T1v + T1w;
                    T2w            = T1v - T1w;
                    T2K            = T1s - T1t;
                    T1u            = T1s + T1t;
                    T22            = T1W + T21;
                    T2L            = T1W - T21;
                    io[WS(os, 14)] = T2h - T2a;
                    io[WS(os, 2)]  = T2a + T2h;
                    T3m            = T26 + T29;
                    io[WS(os, 10)] = T1f + T26 - (T1q + T29);
                    T1r            = T1f + T1q;
                    io[WS(os, 11)] =
                        T3q + SIMD_FMADD(KP707106781, T3w - T3B, T3r);
                    T3F            = T3w + T3B;
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T3I, T3C) -
                                     (SIMD_FMADD(KP707106781, T3H, T3D));
                    T3J            = T3H + T3I;
                    ro[WS(os, 10)] = TS + T3o - (T13 + T3n);
                    T3p            = T3n + T3o;
                    T2O            = T2w + T2i;
                    T2M            = T2K - T2L;
                    T1B            = T1z + T1A;
                    T2j            = T1z - T1A;
                    T2u            = T2o - T2t;
                    T2T            = T2o + T2t;
                    T1E            = T1C + T1D;
                    T2x            = T1C - T1D;
                    ro[WS(os, 4)]  = T14 + T1r;
                    ro[WS(os, 16)] = T14 - T1r;
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3F, T3E);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3F, T3E);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3J, T3G);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3J, T3G);
                    io[WS(os, 4)]  = T3m + T3p;
                    io[WS(os, 16)] = T3m - T3p;
                    T2I            = T2C - T2H;
                    T2U            = T2C + T2H;
                    T2P            = T2j + T2u;
                    T2v            = T2j - T2u;
                    T2Q            = T2I - T2x;
                    T2J            = T2x + T2I;
                    T2S            = T1u - T1x;
                    T1y            = T1u + T1x;
                    T2X            = T2T + T2U;
                    T2V            = T2T - T2U;
                    T1G            = T1E - T1B;
                    T1F            = T1B + T1E;
                    T2W            = T1R + T22;
                    T23            = T1R - T22;
                    T2R            = T2P + T2Q;
                    ro[WS(os, 9)] =
                        T2K + SIMD_FMADD(KP707106781, T2Q - T2P, T2L);
                    T2N           = T2v + T2J;
                    io[WS(os, 9)] = SIMD_FMADD(KP707106781, T2v, T2i) -
                                    (SIMD_FMADD(KP707106781, T2J, T2w));
                    T3k            = T2Y - T2Z;
                    T30            = T2Y + T2Z;
                    ro[WS(os, 18)] = T2S - T2V;
                    ro[WS(os, 6)]  = T2S + T2V;
                    ro[WS(os, 12)] = T1y + T1F;
                    ro[0]          = T1y - T1F;
                    io[WS(os, 12)] = T2W + T2X;
                    io[0]          = T2W - T2X;
                    io[WS(os, 18)] = T23 - T1G;
                    io[WS(os, 6)]  = T1G + T23;
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2R, T2O);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2R, T2O);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2N, T2M);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2N, T2M);
                    T3g            = T3d - T3c;
                    T3e            = T3c + T3d;
                }
            }
        }
        T35            = T33 - T34;
        T3i            = T34 + T33;
        T3a            = T36 + T39;
        T3h            = T36 - T39;
        T3j            = T3h - T3i;
        T3l            = T3h + T3i;
        T3b            = T35 - T3a;
        T3f            = T3a + T35;
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T3l, T3k);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T3l, T3k);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T3j, T3g);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T3j, T3g);
        io[WS(os, 19)] = SIMD_FMADD(KP707106781, T3f, T3e);
        io[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T3f, T3e);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T3b, T30);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T3b, T30);
    }
}

template <>
struct c2cb_traits<24, 5>
{
    static constexpr long_t flops           = 314;
    static constexpr long_t operations      = 244;
    static constexpr long_t memory_accesses = 86;
    static constexpr long_t stack_vars      = 160;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 244 FP additions, 70 FP multiplications,
 * (or, 174 additions, 0 multiplications, 70 fused multiply/add),
 * 160 stack variables, 3 constants, and 86 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T20, T3g, T35, T1T, T1E, T1L, T29, T3s, T3p, T2c, T2d, T3t,
            T2t, T2k, T2u;
        SIMD_FLOAT T2r, T1x, T23, T3u, T2s, T3h, T3j, T1M, T24, T21, T25, T3k,
            T26, T22, T3i;
        {
            SIMD_FLOAT T5, T2Z, Ta, T30, T1f, T27, T2D, T2Q, Tl, T28, T1k, T2R,
                T2I, T3B, T2b;
            SIMD_FLOAT T1v, T3r, T3f, Tr, Tz, Tg, T3A, T1q, T2a, T3a, T3q, Tw,
                T10, T15, TE;
            SIMD_FLOAT T1P, T2l, T1W, T2o, T2X, TV, T2m, T1S, T16, T1Z, T2p, Tq,
                T1G, T1z, TC;
            SIMD_FLOAT Tt, Tu, TF, TG;
            {
                SIMD_FLOAT T1, T2z, T6, T2E, Th, T3b, Ti, T2C, T4, T2A, T1e, Tj,
                    T1s, T2H, T9;
                SIMD_FLOAT T2F, T1j, T1t, T2, T3, T1c, T1d, T7, T8, T1h, T1i,
                    Tc, T36, T3e, T1u;
                SIMD_FLOAT Td, T1r, T3d, Te, T1n, T1o, T1b, T2B, Tk, T1g, T2G,
                    T3c;
                T1  = ri[0];
                T2z = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1c = ii[WS(is, 8)];
                T1d = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T2E = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                T1h = ii[WS(is, 20)];
                T1i = ii[WS(is, 4)];
                Th  = ii[WS(is, 18)];
                T3b = ri[WS(is, 18)];
                Ti  = ii[WS(is, 2)];
                T2C = T3 - T2;
                T4  = T2 + T3;
                T2A = T1c + T1d;
                T1e = T1c - T1d;
                Tj  = ii[WS(is, 10)];
                T1s = ri[WS(is, 10)];
                T2H = T8 - T7;
                T9  = T7 + T8;
                T2F = T1h + T1i;
                T1j = T1h - T1i;
                T1t = ri[WS(is, 2)];
                Tc  = ii[WS(is, 6)];
                T36 = ri[WS(is, 6)];
                T5  = T1 + T4;
                T1b = SIMD_FNMADD(KP500000000, T4, T1);
                T2Z = T2A + T2z;
                T2B = SIMD_FNMADD(KP500000000, T2A, T2z);
                Tk  = Ti + Tj;
                T3e = Ti - Tj;
                Ta  = T6 + T9;
                T1g = SIMD_FNMADD(KP500000000, T9, T6);
                T30 = T2F + T2E;
                T2G = SIMD_FNMADD(KP500000000, T2F, T2E);
                T1u = T1s - T1t;
                T3c = T1s + T1t;
                T1f = SIMD_FNMADD(KP866025403, T1e, T1b);
                T27 = SIMD_FMADD(KP866025403, T1e, T1b);
                T2D = SIMD_FNMADD(KP866025403, T2C, T2B);
                T2Q = SIMD_FMADD(KP866025403, T2C, T2B);
                Td  = ii[WS(is, 14)];
                T1r = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T28 = SIMD_FMADD(KP866025403, T1j, T1g);
                T1k = SIMD_FNMADD(KP866025403, T1j, T1g);
                T2R = SIMD_FMADD(KP866025403, T2H, T2G);
                T2I = SIMD_FNMADD(KP866025403, T2H, T2G);
                T3d = SIMD_FNMADD(KP500000000, T3c, T3b);
                T3B = T3c + T3b;
                Te  = ii[WS(is, 22)];
                T1n = ri[WS(is, 22)];
                T1o = ri[WS(is, 14)];
                {
                    SIMD_FLOAT TL, TZ, TQ, T14, TM, T39, Tf, T37, T1p, TN, TW,
                        TX, TR, TS, T11;
                    SIMD_FLOAT T12, T1V, T1O, T1Y, T1R, TP, T1N, T1U, TU, T1Q,
                        T1X, T1m, T38, TO, TY;
                    SIMD_FLOAT TT, T13, To, Tp, TA, TB;
                    TL  = ri[WS(is, 3)];
                    T2b = SIMD_FMADD(KP866025403, T1u, T1r);
                    T1v = SIMD_FNMADD(KP866025403, T1u, T1r);
                    TZ  = ii[WS(is, 3)];
                    TQ  = ri[WS(is, 15)];
                    T14 = ii[WS(is, 15)];
                    TM  = ri[WS(is, 11)];
                    T3r = SIMD_FMADD(KP866025403, T3e, T3d);
                    T3f = SIMD_FNMADD(KP866025403, T3e, T3d);
                    T39 = Td - Te;
                    Tf  = Td + Te;
                    T37 = T1n + T1o;
                    T1p = T1n - T1o;
                    TN  = ri[WS(is, 19)];
                    TW  = ii[WS(is, 11)];
                    TX  = ii[WS(is, 19)];
                    TR  = ri[WS(is, 23)];
                    TS  = ri[WS(is, 7)];
                    T11 = ii[WS(is, 23)];
                    T12 = ii[WS(is, 7)];
                    Tr  = ri[WS(is, 21)];
                    Tz  = ii[WS(is, 21)];
                    Tg  = Tc + Tf;
                    T1m = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T3A = T37 + T36;
                    T38 = SIMD_FNMADD(KP500000000, T37, T36);
                    TO  = TM + TN;
                    T1V = TN - TM;
                    TY  = TW + TX;
                    T1O = TW - TX;
                    TT  = TR + TS;
                    T1Y = TS - TR;
                    T13 = T11 + T12;
                    T1R = T11 - T12;
                    T1q = SIMD_FNMADD(KP866025403, T1p, T1m);
                    T2a = SIMD_FMADD(KP866025403, T1p, T1m);
                    T3a = SIMD_FNMADD(KP866025403, T39, T38);
                    T3q = SIMD_FMADD(KP866025403, T39, T38);
                    Tw  = ri[WS(is, 9)];
                    TP  = TL + TO;
                    T1N = SIMD_FNMADD(KP500000000, TO, TL);
                    T10 = TY + TZ;
                    T1U = SIMD_FNMADD(KP500000000, TY, TZ);
                    TU  = TQ + TT;
                    T1Q = SIMD_FNMADD(KP500000000, TT, TQ);
                    T15 = T13 + T14;
                    T1X = SIMD_FNMADD(KP500000000, T13, T14);
                    TE  = ii[WS(is, 9)];
                    To  = ri[WS(is, 13)];
                    Tp  = ri[WS(is, 5)];
                    TA  = ii[WS(is, 5)];
                    TB  = ii[WS(is, 13)];
                    T1P = SIMD_FNMADD(KP866025403, T1O, T1N);
                    T2l = SIMD_FMADD(KP866025403, T1O, T1N);
                    T1W = SIMD_FNMADD(KP866025403, T1V, T1U);
                    T2o = SIMD_FMADD(KP866025403, T1V, T1U);
                    T2X = TP + TU;
                    TV  = TP - TU;
                    T2m = SIMD_FMADD(KP866025403, T1R, T1Q);
                    T1S = SIMD_FNMADD(KP866025403, T1R, T1Q);
                    T16 = T10 - T15;
                    T1Z = SIMD_FNMADD(KP866025403, T1Y, T1X);
                    T2p = SIMD_FMADD(KP866025403, T1Y, T1X);
                    Tq  = To + Tp;
                    T1G = To - Tp;
                    T1z = TA - TB;
                    TC  = TA + TB;
                    Tt  = ri[WS(is, 1)];
                    Tu  = ri[WS(is, 17)];
                    TF  = ii[WS(is, 17)];
                    TG  = ii[WS(is, 1)];
                }
            }
            {
                SIMD_FLOAT Tb, Tm, T32, T31, T3z, T3C, T1a, T17, Tn, T3D, T1A,
                    T2e, T1H, T2h, T2w;
                SIMD_FLOAT T1l, T3l, T3m, T1w, T2y, T2J, T2Y, Ty, T1D, T2f, TJ,
                    T34, T1K, T2i, T33;
                SIMD_FLOAT T3I, T3o, T2K, T2L, T3G, T3H, Ts, T1y, TD, T1F, T1J,
                    Tv, T1C, TH, T1B;
                SIMD_FLOAT Tx, T1I, TI, T2g, T2n, T2S, T2P, T3y, T2T, T2j, T2V,
                    T2W, T2q, T2U, T2N;
                SIMD_FLOAT T2O, T3w, T3x, T2M, T3F, TK, T19, T2v, T3E, T18, T2x,
                    T3n, T3v;
                T3G            = T5 + Ta;
                Tb             = T5 - Ta;
                Tm             = Tg - Tl;
                T32            = Tg + Tl;
                T31            = T2Z + T30;
                T3z            = T2Z - T30;
                T3C            = T3A - T3B;
                T3H            = T3A + T3B;
                T1a            = T16 - TV;
                T17            = TV + T16;
                Ts             = Tq + Tr;
                T1y            = SIMD_FNMADD(KP500000000, Tq, Tr);
                TD             = Tz + TC;
                T1F            = SIMD_FNMADD(KP500000000, TC, Tz);
                T1J            = Tt - Tu;
                Tv             = Tt + Tu;
                T1C            = TF - TG;
                TH             = TF + TG;
                Tn             = Tb + Tm;
                T3D            = T3z - T3C;
                T1A            = SIMD_FNMADD(KP866025403, T1z, T1y);
                T2e            = SIMD_FMADD(KP866025403, T1z, T1y);
                T1H            = SIMD_FNMADD(KP866025403, T1G, T1F);
                T2h            = SIMD_FMADD(KP866025403, T1G, T1F);
                T1B            = SIMD_FNMADD(KP500000000, Tv, Tw);
                Tx             = Tv + Tw;
                T1I            = SIMD_FNMADD(KP500000000, TH, TE);
                TI             = TE + TH;
                T2w            = T1W + T1Z;
                T20            = T1W - T1Z;
                T1l            = T1f - T1k;
                T3l            = T1f + T1k;
                T3m            = T3a + T3f;
                T3g            = T3a - T3f;
                T1w            = T1q - T1v;
                T2y            = T1q + T1v;
                T2J            = T2D + T2I;
                T35            = T2D - T2I;
                T2Y            = T2X - (Ts + Tx);
                Ty             = Ts - Tx;
                T1D            = SIMD_FNMADD(KP866025403, T1C, T1B);
                T2f            = SIMD_FMADD(KP866025403, T1C, T1B);
                TJ             = TD - TI;
                T34            = TD + TI;
                T1K            = SIMD_FNMADD(KP866025403, T1J, T1I);
                T2i            = SIMD_FMADD(KP866025403, T1J, T1I);
                T33            = T31 - T32;
                ro[WS(os, 7)]  = T3G + T3H - T2X - (Ts + Tx);
                T3I            = T3G - T3H;
                T3o            = T3l + T3m;
                T2K            = T2y + T2J;
                T2L            = T1P + T1S;
                T1T            = T1P - T1S;
                T2g            = T2e - T2f;
                T2N            = T2e + T2f;
                T2M            = T1A + T1D;
                T1E            = T1A - T1D;
                io[WS(os, 7)]  = T32 + T31 - (T10 + T15) - T34;
                T3F            = T34 - (T10 + T15);
                TK             = Ty - TJ;
                T19            = Ty + TJ;
                T1L            = T1H - T1K;
                T2v            = T1H + T1K;
                io[WS(os, 13)] = T33 - T2Y;
                io[WS(os, 1)]  = T2Y + T33;
                T2O            = T2l + T2m;
                T2n            = T2l - T2m;
                T29            = T27 - T28;
                T3w            = T27 + T28;
                T3x            = T3q + T3r;
                T3s            = T3q - T3r;
                T3p            = T2Q - T2R;
                T2S            = T2Q + T2R;
                io[WS(os, 9)]  = T2L + T2J - (T2M + T2y);
                T3n            = T2M + T2L;
                ro[WS(os, 13)] = T3I - T3F;
                ro[WS(os, 1)]  = T3F + T3I;
                ro[WS(os, 10)] = SIMD_FMADD(KP707106781, T19, Tb) -
                                 (SIMD_FMADD(KP707106781, T1a, Tm));
                T3E            = T19 + T1a;
                io[WS(os, 10)] = SIMD_FMADD(KP707106781, T17 - TK, T3z) + T3C;
                T18            = TK + T17;
                ro[WS(os, 9)]  = T2v + T3l - (T2w + T3m);
                T2x            = T2v + T2w;
                T2P            = T2N - T2O;
                T3y            = T3w - T3x;
                T2T            = T2a + T2b;
                T2c            = T2a - T2b;
                ro[WS(os, 15)] = T3o - T3n;
                ro[WS(os, 3)]  = T3n + T3o;
                T2j            = T2h - T2i;
                T2V            = T2h + T2i;
                T2W            = T2o + T2p;
                T2q            = T2o - T2p;
                io[WS(os, 4)]  = SIMD_FMADD(KP707106781, T3E, T3D);
                io[WS(os, 16)] = SIMD_FNMADD(KP707106781, T3E, T3D);
                ro[WS(os, 4)]  = SIMD_FMADD(KP707106781, T18, Tn);
                ro[WS(os, 16)] = SIMD_FNMADD(KP707106781, T18, Tn);
                io[WS(os, 15)] = T2K - T2x;
                io[WS(os, 3)]  = T2x + T2K;
                ro[WS(os, 11)] = T2N + T2O + T3w + T3x;
                T2U            = T2S - T2T;
                io[WS(os, 11)] = T2V + T2W + T2T + T2S;
                T3v            = T2W - T2V;
                io[WS(os, 17)] = T2U - T2P;
                io[WS(os, 5)]  = T2P + T2U;
                T2d            = T29 - T2c;
                ro[WS(os, 17)] = T3y - T3v;
                ro[WS(os, 5)]  = T3v + T3y;
                T3t            = T3p + T3s;
                T2t            = T2j - T2g;
                T2k            = T2g + T2j;
                T2u            = T2n + T2q;
                T2r            = T2n - T2q;
                T1x            = T1l - T1w;
                T23            = T1l + T1w;
            }
        }
        T3u           = T2t + T2u;
        ro[WS(os, 8)] = SIMD_FMADD(KP707106781, T2t - T2u, T29) + T2c;
        T2s           = T2k + T2r;
        io[WS(os, 8)] = SIMD_FMADD(KP707106781, T2r, T3p) -
                        (SIMD_FMADD(KP707106781, T2k, T3s));
        T3h            = T35 - T3g;
        T3j            = T35 + T3g;
        T1M            = T1E + T1L;
        T24            = T1L - T1E;
        T21            = T1T - T20;
        T25            = T1T + T20;
        io[WS(os, 14)] = SIMD_FNMADD(KP707106781, T3u, T3t);
        io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T3u, T3t);
        ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2s, T2d);
        ro[WS(os, 14)] = SIMD_FNMADD(KP707106781, T2s, T2d);
        T3k            = T24 + T25;
        T26            = T24 - T25;
        T22            = T1M + T21;
        T3i            = T21 - T1M;
        ro[0]          = SIMD_FMADD(KP707106781, T26, T23);
        ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T26, T23);
        io[WS(os, 18)] = SIMD_FMADD(KP707106781, T3k, T3j);
        io[WS(os, 6)]  = SIMD_FNMADD(KP707106781, T3k, T3j);
        io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T3i, T3h);
        io[0]          = SIMD_FMADD(KP707106781, T3i, T3h);
        ro[WS(os, 18)] = SIMD_FMADD(KP707106781, T22, T1x);
        ro[WS(os, 6)]  = SIMD_FNMADD(KP707106781, T22, T1x);
    }
}

template <>
struct c2cb_traits<24, 6>
{
    static constexpr long_t flops           = 310;
    static constexpr long_t operations      = 242;
    static constexpr long_t memory_accesses = 84;
    static constexpr long_t stack_vars      = 158;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 242 FP additions, 68 FP multiplications,
 * (or, 174 additions, 0 multiplications, 68 fused multiply/add),
 * 158 stack variables, 3 constants, and 84 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T3v, T3i, T3h, T3w, T37, T2M, T34, T2V, T2O, T2X, T2L, T38,
            T3j, T3x, T3z;
        SIMD_FLOAT T3o, T3y, T3t, T2N, T3A, T3u, T3b, T2W, T39, T35, T3a, T3c,
            T36;
        {
            SIMD_FLOAT T5, TO, Ta, TT, T1K, T1W, T18, T2a, Tl, T1X, T1N, T2b,
                T1b, T14, T20;
            SIMD_FLOAT T1U, T2e, T1i, To, T2p, Tg, TZ, T1R, T1Z, T1f, T2d, Tt,
                TD, TI, T2s;
            SIMD_FLOAT T1p, T23, T2R, T3l, T2x, T24, T1u, T2y, T2n, T2U, T3m,
                Tr, T2Z, T2o, T1z;
            SIMD_FLOAT Tu, Tv, T1C, T1D;
            {
                SIMD_FLOAT T1, TK, T6, TP, Th, T10, Ti, T17, T4, T1J, TN, Tj,
                    T11, T1a, T9;
                SIMD_FLOAT T1M, TS, T12, T2, T3, TL, TM, T7, T8, TQ, TR, Tc, TV,
                    T1h, T1T;
                SIMD_FLOAT Td, T1S, T1g, Te, TW, TX, T1I, T16, Tk, T1L, T19,
                    T13;
                T1  = ri[0];
                TK  = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TL  = ii[WS(is, 8)];
                TM  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                TP  = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TQ  = ii[WS(is, 20)];
                TR  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T10 = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T17 = T3 - T2;
                T4  = T2 + T3;
                T1J = TL - TM;
                TN  = TL + TM;
                Tj  = ri[WS(is, 10)];
                T11 = ii[WS(is, 2)];
                T1a = T8 - T7;
                T9  = T7 + T8;
                T1M = TQ - TR;
                TS  = TQ + TR;
                T12 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                TV  = ii[WS(is, 6)];
                T5  = T1 + T4;
                T1I = SIMD_FNMADD(KP500000000, T4, T1);
                TO  = TK + TN;
                T16 = SIMD_FNMADD(KP500000000, TN, TK);
                Tk  = Ti + Tj;
                T1h = Tj - Ti;
                Ta  = T6 + T9;
                T1L = SIMD_FNMADD(KP500000000, T9, T6);
                TT  = TP + TS;
                T19 = SIMD_FNMADD(KP500000000, TS, TP);
                T13 = T11 + T12;
                T1T = T11 - T12;
                T1K = SIMD_FNMADD(KP866025403, T1J, T1I);
                T1W = SIMD_FMADD(KP866025403, T1J, T1I);
                T18 = SIMD_FNMADD(KP866025403, T17, T16);
                T2a = SIMD_FMADD(KP866025403, T17, T16);
                Td  = ri[WS(is, 14)];
                T1S = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T1X = SIMD_FMADD(KP866025403, T1M, T1L);
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T2b = SIMD_FMADD(KP866025403, T1a, T19);
                T1b = SIMD_FNMADD(KP866025403, T1a, T19);
                T1g = SIMD_FNMADD(KP500000000, T13, T10);
                T14 = T10 + T13;
                Te  = ri[WS(is, 22)];
                TW  = ii[WS(is, 14)];
                TX  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Tz, T2i, TE, T2l, TA, T1e, Tf, T1Q, TY, TB, T1m,
                        T1n, TF, TG, T1r;
                    SIMD_FLOAT T1s, T2Q, T1o, T2T, T1t, T1l, T2j, T2P, T1q, T2m,
                        T2S, T1P, T1d, TC, T2h;
                    SIMD_FLOAT TH, T2k, Tp, Tq, T1x, T1y;
                    Tz  = ii[WS(is, 3)];
                    T20 = SIMD_FMADD(KP866025403, T1T, T1S);
                    T1U = SIMD_FNMADD(KP866025403, T1T, T1S);
                    T2i = ri[WS(is, 3)];
                    TE  = ii[WS(is, 15)];
                    T2l = ri[WS(is, 15)];
                    TA  = ii[WS(is, 11)];
                    T2e = SIMD_FMADD(KP866025403, T1h, T1g);
                    T1i = SIMD_FNMADD(KP866025403, T1h, T1g);
                    T1e = Te - Td;
                    Tf  = Td + Te;
                    T1Q = TW - TX;
                    TY  = TW + TX;
                    TB  = ii[WS(is, 19)];
                    T1m = ri[WS(is, 19)];
                    T1n = ri[WS(is, 11)];
                    TF  = ii[WS(is, 23)];
                    TG  = ii[WS(is, 7)];
                    T1r = ri[WS(is, 7)];
                    T1s = ri[WS(is, 23)];
                    To  = ii[WS(is, 21)];
                    T2p = ri[WS(is, 21)];
                    Tg  = Tc + Tf;
                    T1P = SIMD_FNMADD(KP500000000, Tf, Tc);
                    TZ  = TV + TY;
                    T1d = SIMD_FNMADD(KP500000000, TY, TV);
                    TC  = TA + TB;
                    T2Q = TA - TB;
                    T1o = T1m - T1n;
                    T2h = T1m + T1n;
                    TH  = TF + TG;
                    T2T = TF - TG;
                    T1t = T1r - T1s;
                    T2k = T1r + T1s;
                    T1R = SIMD_FNMADD(KP866025403, T1Q, T1P);
                    T1Z = SIMD_FMADD(KP866025403, T1Q, T1P);
                    T1f = SIMD_FNMADD(KP866025403, T1e, T1d);
                    T2d = SIMD_FMADD(KP866025403, T1e, T1d);
                    Tt  = ii[WS(is, 9)];
                    TD  = Tz + TC;
                    T1l = SIMD_FNMADD(KP500000000, TC, Tz);
                    T2j = T2h + T2i;
                    T2P = SIMD_FNMADD(KP500000000, T2h, T2i);
                    TI  = TE + TH;
                    T1q = SIMD_FNMADD(KP500000000, TH, TE);
                    T2m = T2k + T2l;
                    T2S = SIMD_FNMADD(KP500000000, T2k, T2l);
                    T2s = ri[WS(is, 9)];
                    Tp  = ii[WS(is, 5)];
                    Tq  = ii[WS(is, 13)];
                    T1x = ri[WS(is, 13)];
                    T1y = ri[WS(is, 5)];
                    T1p = SIMD_FNMADD(KP866025403, T1o, T1l);
                    T23 = SIMD_FMADD(KP866025403, T1o, T1l);
                    T2R = SIMD_FMADD(KP866025403, T2Q, T2P);
                    T3l = SIMD_FNMADD(KP866025403, T2Q, T2P);
                    T2x = TD - TI;
                    T24 = SIMD_FMADD(KP866025403, T1t, T1q);
                    T1u = SIMD_FNMADD(KP866025403, T1t, T1q);
                    T2y = T2j - T2m;
                    T2n = T2j + T2m;
                    T2U = SIMD_FMADD(KP866025403, T2T, T2S);
                    T3m = SIMD_FNMADD(KP866025403, T2T, T2S);
                    Tr  = Tp + Tq;
                    T2Z = Tp - Tq;
                    T2o = T1x + T1y;
                    T1z = T1x - T1y;
                    Tu  = ii[WS(is, 17)];
                    Tv  = ii[WS(is, 1)];
                    T1C = ri[WS(is, 1)];
                    T1D = ri[WS(is, 17)];
                }
            }
            {
                SIMD_FLOAT T2v, T2w, T2z, T2I, T2D, T2H, T2E, T26, T30, T3q,
                    T2F, Tn, T1c, T1j, T3n;
                SIMD_FLOAT T3B, T1v, T3k, T2B, T27, T2u, T2A, T3r, T33, T2g,
                    T1k, T1O, TJ, T1V, T1G;
                SIMD_FLOAT T3p, Tm, TU, Tb, Ts, T1w, T2q, T2Y, T32, Tw, T2r,
                    T1E, T15, T1A, T1B;
                SIMD_FLOAT Tx, T31, T2t, Ty, T1F, T3s, T22, T3g, T25, T28, T2c,
                    T2f, T29, T1Y, T21;
                SIMD_FLOAT T3e, T3f, T3D, T1H, T2G, T2K, T3E, T2J, T2C, T3C,
                    T3d;
                Tm             = Tg + Tl;
                T2v            = Tg - Tl;
                T2w            = TO - TT;
                TU             = TO + TT;
                T2z            = T2x + T2y;
                T2I            = T2x - T2y;
                Tb             = T5 + Ta;
                T2D            = T5 - Ta;
                Ts             = To + Tr;
                T1w            = SIMD_FNMADD(KP500000000, Tr, To);
                T2q            = T2o + T2p;
                T2Y            = SIMD_FNMADD(KP500000000, T2o, T2p);
                T32            = Tu - Tv;
                Tw             = Tu + Tv;
                T2r            = T1C + T1D;
                T1E            = T1C - T1D;
                T2H            = T2w - T2v;
                T15            = TZ + T14;
                T2E            = TZ - T14;
                T1A            = SIMD_FNMADD(KP866025403, T1z, T1w);
                T26            = SIMD_FMADD(KP866025403, T1z, T1w);
                T30            = SIMD_FMADD(KP866025403, T2Z, T2Y);
                T3q            = SIMD_FNMADD(KP866025403, T2Z, T2Y);
                T1B            = SIMD_FNMADD(KP500000000, Tw, Tt);
                Tx             = Tt + Tw;
                T31            = SIMD_FNMADD(KP500000000, T2r, T2s);
                T2t            = T2r + T2s;
                T2F            = T2D + T2E;
                Tn             = Tb - Tm;
                T3v            = T18 - T1b;
                T1c            = T18 + T1b;
                T1j            = T1f + T1i;
                T3i            = T1f - T1i;
                T3n            = T3l - T3m;
                T3B            = T3l + T3m;
                T1v            = T1p + T1u;
                T3k            = T1p - T1u;
                T2B            = Ts - Tx;
                Ty             = Ts + Tx;
                T1F            = SIMD_FNMADD(KP866025403, T1E, T1B);
                T27            = SIMD_FMADD(KP866025403, T1E, T1B);
                ro[WS(os, 6)]  = Tb + Tm - (T2q + T2t) - T2n;
                T2u            = T2n - (T2q + T2t);
                T2A            = T2q - T2t;
                T3r            = SIMD_FNMADD(KP866025403, T32, T31);
                T33            = SIMD_FMADD(KP866025403, T32, T31);
                T2g            = TU - T15;
                T1k            = T1c + T1j;
                T1O            = T1K + T1N;
                T3h            = T1K - T1N;
                io[WS(os, 6)]  = TU + T15 - (TD + TI) - Ty;
                TJ             = Ty - (TD + TI);
                T3w            = T1R - T1U;
                T1V            = T1R + T1U;
                T1G            = T1A + T1F;
                T3p            = T1A - T1F;
                T37            = T1W - T1X;
                T1Y            = T1W + T1X;
                T21            = T1Z + T20;
                T2M            = T1Z - T20;
                T2J            = T2B + T2A;
                T2C            = T2A - T2B;
                T3s            = T3q - T3r;
                T3C            = T3q + T3r;
                io[0]          = T2g + T2u;
                io[WS(os, 12)] = T2g - T2u;
                T3e            = T30 + T33;
                T34            = T30 - T33;
                T2V            = T2R - T2U;
                T3f            = T2R + T2U;
                ro[0]          = Tn + TJ;
                ro[WS(os, 12)] = Tn - TJ;
                T3D            = T1O + T1V;
                ro[WS(os, 8)]  = T1O + T1G - (T1V + T1v);
                T1H            = T1v + T1G;
                T22            = T1Y - T21;
                io[WS(os, 9)]  = T2v + SIMD_FMADD(KP707106781, T2z - T2C, T2w);
                T2G            = T2z + T2C;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2J, T2D) -
                                (SIMD_FMADD(KP707106781, T2I, T2E));
                T2K            = T2I + T2J;
                io[WS(os, 8)]  = T1c + T3B - (T1j + T3C);
                T3E            = T3B + T3C;
                T3g            = T3e - T3f;
                T2O            = T23 - T24;
                T25            = T23 + T24;
                T28            = T26 + T27;
                T2X            = T26 - T27;
                T2L            = T2a - T2b;
                T2c            = T2a + T2b;
                io[WS(os, 2)]  = T1k + T1H;
                io[WS(os, 14)] = T1k - T1H;
                T2f            = T2d + T2e;
                T38            = T2d - T2e;
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2G, T2F);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2G, T2F);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2K, T2H);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2K, T2H);
                ro[WS(os, 2)]  = T3D + T3E;
                ro[WS(os, 14)] = T3D - T3E;
                ro[WS(os, 10)] = T1Y + T21 + T3f + T3e;
                T29            = T25 - T28;
                io[WS(os, 10)] = T2c + T2f + T25 + T28;
                T3d            = T2c - T2f;
                ro[WS(os, 4)]  = T22 + T29;
                ro[WS(os, 16)] = T22 - T29;
                T3j            = T3h - T3i;
                io[WS(os, 4)]  = T3d + T3g;
                io[WS(os, 16)] = T3d - T3g;
                T3x            = T3v + T3w;
                T3z            = T3k + T3n;
                T3o            = T3k - T3n;
                T3y            = T3s - T3p;
                T3t            = T3p + T3s;
                T2N            = T2L + T2M;
            }
        }
        T3A            = T3y - T3z;
        ro[WS(os, 11)] = T3h + SIMD_FMADD(KP707106781, T3z + T3y, T3i);
        T3u            = T3o - T3t;
        io[WS(os, 11)] = SIMD_FMADD(KP707106781, T3o + T3t, T3v) - T3w;
        T3b            = T37 - T38;
        T2W            = T2O + T2V;
        T39            = T2V - T2O;
        T35            = T2X - T34;
        T3a            = T2X + T34;
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3A, T3x);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3A, T3x);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3u, T3j);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3u, T3j);
        T3c            = T39 + T3a;
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T39, T2L) -
                        (SIMD_FMADD(KP707106781, T3a, T2M));
        T36            = T2W + T35;
        ro[WS(os, 7)]  = T37 + SIMD_FMADD(KP707106781, T35 - T2W, T38);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T3c, T3b);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T3c, T3b);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T36, T2N);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T36, T2N);
    }
}

template <>
struct c2cb_traits<24, 7>
{
    static constexpr long_t flops           = 308;
    static constexpr long_t operations      = 240;
    static constexpr long_t memory_accesses = 82;
    static constexpr long_t stack_vars      = 158;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 240 FP additions, 68 FP multiplications,
 * (or, 172 additions, 0 multiplications, 68 fused multiply/add),
 * 158 stack variables, 3 constants, and 82 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T27, T3c, T31, T2a, T20, T1l, T3m, T1w, T1E, T3j, T1L, T1T,
            T2b, T3d, T2i;
        SIMD_FLOAT T2s, T2p, T2r, T1x, T3n, T1M, T23, T21, T24, T3e, T2q, T3o,
            T22;
        {
            SIMD_FLOAT T5, T2W, Ta, T2X, T1f, T25, T2A, T2P, Tl, T26, T1k, T2Q,
                T2F, T3v, T29;
            SIMD_FLOAT T1v, T3l, T3b, To, TC, Tg, T3u, T1q, T28, T36, T3k, Tt,
                T10, T15, TH;
            SIMD_FLOAT T1P, T2j, T1W, T2m, T30, TV, T2k, T1S, T16, T1Z, T2n, Tr,
                T1z, T1G, TB;
            SIMD_FLOAT Tu, Tv, TE, TF;
            {
                SIMD_FLOAT T1, T2w, T6, T2B, Th, T37, Ti, T2z, T4, T2x, T1e, Tj,
                    T1s, T2E, T9;
                SIMD_FLOAT T2C, T1j, T1t, T2, T3, T1c, T1d, T7, T8, T1h, T1i,
                    Tc, T32, T3a, T1u;
                SIMD_FLOAT Td, T1r, T39, Te, T1n, T1o, T1b, T2y, Tk, T1g, T2D,
                    T38;
                T1  = ri[0];
                T2w = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1c = ii[WS(is, 8)];
                T1d = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T2B = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                T1h = ii[WS(is, 20)];
                T1i = ii[WS(is, 4)];
                Th  = ii[WS(is, 18)];
                T37 = ri[WS(is, 18)];
                Ti  = ii[WS(is, 2)];
                T2z = T3 - T2;
                T4  = T2 + T3;
                T2x = T1c + T1d;
                T1e = T1c - T1d;
                Tj  = ii[WS(is, 10)];
                T1s = ri[WS(is, 10)];
                T2E = T8 - T7;
                T9  = T7 + T8;
                T2C = T1h + T1i;
                T1j = T1h - T1i;
                T1t = ri[WS(is, 2)];
                Tc  = ii[WS(is, 6)];
                T32 = ri[WS(is, 6)];
                T5  = T1 + T4;
                T1b = SIMD_FNMADD(KP500000000, T4, T1);
                T2W = T2x + T2w;
                T2y = SIMD_FNMADD(KP500000000, T2x, T2w);
                Tk  = Ti + Tj;
                T3a = Ti - Tj;
                Ta  = T6 + T9;
                T1g = SIMD_FNMADD(KP500000000, T9, T6);
                T2X = T2C + T2B;
                T2D = SIMD_FNMADD(KP500000000, T2C, T2B);
                T1u = T1s - T1t;
                T38 = T1s + T1t;
                T1f = SIMD_FNMADD(KP866025403, T1e, T1b);
                T25 = SIMD_FMADD(KP866025403, T1e, T1b);
                T2A = SIMD_FMADD(KP866025403, T2z, T2y);
                T2P = SIMD_FNMADD(KP866025403, T2z, T2y);
                Td  = ii[WS(is, 14)];
                T1r = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T26 = SIMD_FMADD(KP866025403, T1j, T1g);
                T1k = SIMD_FNMADD(KP866025403, T1j, T1g);
                T2Q = SIMD_FNMADD(KP866025403, T2E, T2D);
                T2F = SIMD_FMADD(KP866025403, T2E, T2D);
                T39 = SIMD_FNMADD(KP500000000, T38, T37);
                T3v = T38 + T37;
                Te  = ii[WS(is, 22)];
                T1n = ri[WS(is, 22)];
                T1o = ri[WS(is, 14)];
                {
                    SIMD_FLOAT TL, TZ, TQ, T14, TM, T35, Tf, T33, T1p, TN, TW,
                        TX, TR, TS, T11;
                    SIMD_FLOAT T12, T1V, T1O, T1Y, T1R, TP, T1N, T1U, TU, T1Q,
                        T1X, T1m, T34, TO, TY;
                    SIMD_FLOAT TT, T13, Tp, Tq, Tz, TA;
                    TL  = ri[WS(is, 21)];
                    T29 = SIMD_FMADD(KP866025403, T1u, T1r);
                    T1v = SIMD_FNMADD(KP866025403, T1u, T1r);
                    TZ  = ii[WS(is, 21)];
                    TQ  = ri[WS(is, 9)];
                    T14 = ii[WS(is, 9)];
                    TM  = ri[WS(is, 5)];
                    T3l = SIMD_FNMADD(KP866025403, T3a, T39);
                    T3b = SIMD_FMADD(KP866025403, T3a, T39);
                    T35 = Td - Te;
                    Tf  = Td + Te;
                    T33 = T1n + T1o;
                    T1p = T1n - T1o;
                    TN  = ri[WS(is, 13)];
                    TW  = ii[WS(is, 5)];
                    TX  = ii[WS(is, 13)];
                    TR  = ri[WS(is, 17)];
                    TS  = ri[WS(is, 1)];
                    T11 = ii[WS(is, 17)];
                    T12 = ii[WS(is, 1)];
                    To  = ri[WS(is, 3)];
                    TC  = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    T1m = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T3u = T33 + T32;
                    T34 = SIMD_FNMADD(KP500000000, T33, T32);
                    TO  = TM + TN;
                    T1V = TN - TM;
                    TY  = TW + TX;
                    T1O = TW - TX;
                    TT  = TR + TS;
                    T1Y = TS - TR;
                    T13 = T11 + T12;
                    T1R = T11 - T12;
                    T1q = SIMD_FNMADD(KP866025403, T1p, T1m);
                    T28 = SIMD_FMADD(KP866025403, T1p, T1m);
                    T36 = SIMD_FMADD(KP866025403, T35, T34);
                    T3k = SIMD_FNMADD(KP866025403, T35, T34);
                    Tt  = ri[WS(is, 15)];
                    TP  = TL + TO;
                    T1N = SIMD_FNMADD(KP500000000, TO, TL);
                    T10 = TY + TZ;
                    T1U = SIMD_FNMADD(KP500000000, TY, TZ);
                    TU  = TQ + TT;
                    T1Q = SIMD_FNMADD(KP500000000, TT, TQ);
                    T15 = T13 + T14;
                    T1X = SIMD_FNMADD(KP500000000, T13, T14);
                    TH  = ii[WS(is, 15)];
                    Tp  = ri[WS(is, 11)];
                    Tq  = ri[WS(is, 19)];
                    Tz  = ii[WS(is, 11)];
                    TA  = ii[WS(is, 19)];
                    T1P = SIMD_FNMADD(KP866025403, T1O, T1N);
                    T2j = SIMD_FMADD(KP866025403, T1O, T1N);
                    T1W = SIMD_FNMADD(KP866025403, T1V, T1U);
                    T2m = SIMD_FMADD(KP866025403, T1V, T1U);
                    T30 = TP + TU;
                    TV  = TP - TU;
                    T2k = SIMD_FMADD(KP866025403, T1R, T1Q);
                    T1S = SIMD_FNMADD(KP866025403, T1R, T1Q);
                    T16 = T10 - T15;
                    T1Z = SIMD_FNMADD(KP866025403, T1Y, T1X);
                    T2n = SIMD_FMADD(KP866025403, T1Y, T1X);
                    Tr  = Tp + Tq;
                    T1z = Tq - Tp;
                    T1G = Tz - TA;
                    TB  = Tz + TA;
                    Tu  = ri[WS(is, 23)];
                    Tv  = ri[WS(is, 7)];
                    TE  = ii[WS(is, 23)];
                    TF  = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT Tm, T2V, T2Y, T3t, T3w, T3A, T3z, Tb, T17, T19, T1H,
                    T2c, T1A, T2f, Tn;
                SIMD_FLOAT T3x, T2t, T2l, T3g, T3h, T2G, T2H, Ty, T2d, T1K, T2Z,
                    TJ, T2g, T1D, T3i;
                SIMD_FLOAT T2o, T2K, T2I, Ts, T1F, TD, T1y, T1C, Tw, T1J, TG,
                    T1I, Tx, T1B, TI;
                SIMD_FLOAT T2M, T3p, T3q, T2e, T2O, T1a, TK, T2J, T2h, T2L, T2R,
                    T2T, T2U, T3s, T2v;
                SIMD_FLOAT T2u, T2N, T2S, T3r, T3y, T18, T3f;
                Tm             = Tg - Tl;
                T2V            = Tg + Tl;
                T2Y            = T2W + T2X;
                T3t            = T2W - T2X;
                T3w            = T3u - T3v;
                T3A            = T3u + T3v;
                T3z            = T5 + Ta;
                Tb             = T5 - Ta;
                Ts             = To + Tr;
                T1F            = SIMD_FNMADD(KP500000000, Tr, To);
                TD             = TB + TC;
                T1y            = SIMD_FNMADD(KP500000000, TB, TC);
                T1C            = Tv - Tu;
                Tw             = Tu + Tv;
                T1J            = TE - TF;
                TG             = TE + TF;
                T17            = TV - T16;
                T19            = TV + T16;
                T1H            = SIMD_FNMADD(KP866025403, T1G, T1F);
                T2c            = SIMD_FMADD(KP866025403, T1G, T1F);
                T1A            = SIMD_FNMADD(KP866025403, T1z, T1y);
                T2f            = SIMD_FMADD(KP866025403, T1z, T1y);
                T1I            = SIMD_FNMADD(KP500000000, Tw, Tt);
                Tx             = Tt + Tw;
                T1B            = SIMD_FNMADD(KP500000000, TG, TH);
                TI             = TG + TH;
                Tn             = Tb + Tm;
                T3x            = T3t - T3w;
                T2t            = T2j + T2k;
                T2l            = T2j - T2k;
                T27            = T25 - T26;
                T3g            = T25 + T26;
                T3h            = T36 + T3b;
                T3c            = T36 - T3b;
                T31            = T2A - T2F;
                T2G            = T2A + T2F;
                T2H            = T28 + T29;
                T2a            = T28 - T29;
                io[WS(os, 11)] = T30 + T2Y - (Ts + Tx) - T2V;
                ro[WS(os, 5)]  = T3z + T3A - T30 - (Ts + Tx);
                Ty             = Ts - Tx;
                T2d            = SIMD_FMADD(KP866025403, T1J, T1I);
                T1K            = SIMD_FNMADD(KP866025403, T1J, T1I);
                T2Z            = TD + TI;
                TJ             = TD - TI;
                T2g            = SIMD_FMADD(KP866025403, T1C, T1B);
                T1D            = SIMD_FNMADD(KP866025403, T1C, T1B);
                T3i            = T3g - T3h;
                T2o            = T2m - T2n;
                T2K            = T2m + T2n;
                T2I            = T2G - T2H;
                T20            = T1W - T1Z;
                T2M            = T1W + T1Z;
                T3p            = T1f + T1k;
                T1l            = T1f - T1k;
                T3m            = T3k - T3l;
                T3q            = T3k + T3l;
                T2u            = T2c + T2d;
                T2e            = T2c - T2d;
                T1w            = T1q - T1v;
                T2O            = T1q + T1v;
                ro[WS(os, 11)] = T3z + T2Z - T3A - (T10 + T15);
                io[WS(os, 5)]  = T2V + T2Y - (T10 + T15) - T2Z;
                T1a            = TJ - Ty;
                TK             = Ty + TJ;
                T2J            = T2f + T2g;
                T2h            = T2f - T2g;
                T1E            = T1A - T1D;
                T2L            = T1A + T1D;
                T2R            = T2P + T2Q;
                T3j            = T2P - T2Q;
                T1L            = T1H - T1K;
                T2T            = T1H + T1K;
                T2U            = T1P + T1S;
                T1T            = T1P - T1S;
                T3s            = T3p + T3q;
                ro[WS(os, 9)]  = T2u + T2t + T3g + T3h;
                T2v            = T2t - T2u;
                ro[WS(os, 8)]  = SIMD_FMADD(KP707106781, T19, Tb) -
                                (SIMD_FMADD(KP707106781, T1a, Tm));
                T3y            = T1a + T19;
                io[WS(os, 8)]  = SIMD_FMADD(KP707106781, TK - T17, T3t) + T3w;
                T18            = TK + T17;
                io[WS(os, 9)]  = T2J + T2K + T2H + T2G;
                T3f            = T2J - T2K;
                ro[WS(os, 7)]  = T2M + T3p - (T2L + T3q);
                T2N            = T2L + T2M;
                T2S            = T2O + T2R;
                io[WS(os, 7)]  = T2T + T2R - (T2U + T2O);
                T3r            = T2T + T2U;
                io[WS(os, 15)] = T2I - T2v;
                io[WS(os, 3)]  = T2v + T2I;
                io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T3y, T3x);
                io[WS(os, 14)] = SIMD_FNMADD(KP707106781, T3y, T3x);
                ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T18, Tn);
                ro[WS(os, 14)] = SIMD_FNMADD(KP707106781, T18, Tn);
                ro[WS(os, 15)] = T3i - T3f;
                ro[WS(os, 3)]  = T3f + T3i;
                T2b            = T27 - T2a;
                io[WS(os, 13)] = T2S - T2N;
                io[WS(os, 1)]  = T2N + T2S;
                ro[WS(os, 13)] = T3s - T3r;
                ro[WS(os, 1)]  = T3r + T3s;
                T3d            = T31 + T3c;
                T2i            = T2e - T2h;
                T2s            = T2e + T2h;
                T2p            = T2l + T2o;
                T2r            = T2o - T2l;
                T1x            = T1l - T1w;
            }
        }
        T3n           = T3j + T3m;
        T1M           = T1E - T1L;
        T23           = T1L + T1E;
        T21           = T1T + T20;
        T24           = T1T - T20;
        T3e           = T2s + T2r;
        ro[WS(os, 6)] = SIMD_FMADD(KP707106781, T2r - T2s, T27) + T2a;
        T2q           = T2i + T2p;
        io[WS(os, 6)] = SIMD_FMADD(KP707106781, T2i, T31) -
                        (SIMD_FMADD(KP707106781, T2p, T3c));
        T3o            = T24 - T23;
        ro[WS(os, 10)] = SIMD_FMADD(KP707106781, T23 + T24, T1l) + T1w;
        T22            = T1M - T21;
        io[WS(os, 10)] = SIMD_FMADD(KP707106781, T1M + T21, T3j) - T3m;
        io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T3e, T3d);
        io[0]          = SIMD_FMADD(KP707106781, T3e, T3d);
        ro[0]          = SIMD_FMADD(KP707106781, T2q, T2b);
        ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T2q, T2b);
        io[WS(os, 16)] = SIMD_FNMADD(KP707106781, T3o, T3n);
        io[WS(os, 4)]  = SIMD_FMADD(KP707106781, T3o, T3n);
        ro[WS(os, 4)]  = SIMD_FMADD(KP707106781, T22, T1x);
        ro[WS(os, 16)] = SIMD_FNMADD(KP707106781, T22, T1x);
    }
}

template <>
struct c2cb_traits<24, 8>
{
    static constexpr long_t flops           = 304;
    static constexpr long_t operations      = 238;
    static constexpr long_t memory_accesses = 80;
    static constexpr long_t stack_vars      = 154;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 238 FP additions, 66 FP multiplications,
 * (or, 172 additions, 0 multiplications, 66 fused multiply/add),
 * 154 stack variables, 3 constants, and 80 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T33, T2H, T30, T2R, T14, T3c, T2T, T1f, T1q, T2K, T2I, T1O,
            T1Z, T34, T1r;
        SIMD_FLOAT T39, T2J, T35, T2S, T37, T31, T36, T38, T32;
        {
            SIMD_FLOAT T5, T28, Ta, T29, TM, T1s, T1I, T21, Tl, T1t, TR, T22,
                T1N, T2c, T1w;
            SIMD_FLOAT T12, T25, T1Y, Tn, T2i, Tg, T2b, TX, T1v, T1T, T24, Ts,
                T2s, T2v, T2l;
            SIMD_FLOAT T1k, T1B, T2N, T3k, TH, T2p, T1C, T1p, T2w, T2Q, T3l, Tq,
                T2V, T2h, T18;
            SIMD_FLOAT Tt, Tu, T1b, T1c;
            {
                SIMD_FLOAT T1, T1E, T6, T1J, Th, T1U, Ti, T1H, T4, T1F, TL, Tj,
                    TZ, T1M, T9;
                SIMD_FLOAT T1K, TQ, T10, T2, T3, TJ, TK, T7, T8, TO, TP, Tc,
                    T1P, T1X, T11;
                SIMD_FLOAT Td, TY, T1W, Te, TU, TV, TI, T1G, Tk, TN, T1L, T1V;
                T1  = ri[0];
                T1E = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T1J = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TO  = ii[WS(is, 20)];
                TP  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T1U = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T1H = T3 - T2;
                T4  = T2 + T3;
                T1F = TJ + TK;
                TL  = TJ - TK;
                Tj  = ri[WS(is, 10)];
                TZ  = ii[WS(is, 2)];
                T1M = T8 - T7;
                T9  = T7 + T8;
                T1K = TO + TP;
                TQ  = TO - TP;
                T10 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                T1P = ii[WS(is, 6)];
                T5  = T1 + T4;
                TI  = SIMD_FNMADD(KP500000000, T4, T1);
                T28 = T1F + T1E;
                T1G = SIMD_FNMADD(KP500000000, T1F, T1E);
                Tk  = Ti + Tj;
                T1X = Tj - Ti;
                Ta  = T6 + T9;
                TN  = SIMD_FNMADD(KP500000000, T9, T6);
                T29 = T1K + T1J;
                T1L = SIMD_FNMADD(KP500000000, T1K, T1J);
                T11 = TZ - T10;
                T1V = TZ + T10;
                TM  = SIMD_FNMADD(KP866025403, TL, TI);
                T1s = SIMD_FMADD(KP866025403, TL, TI);
                T1I = SIMD_FNMADD(KP866025403, T1H, T1G);
                T21 = SIMD_FMADD(KP866025403, T1H, T1G);
                Td  = ri[WS(is, 14)];
                TY  = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T1t = SIMD_FMADD(KP866025403, TQ, TN);
                TR  = SIMD_FNMADD(KP866025403, TQ, TN);
                T22 = SIMD_FMADD(KP866025403, T1M, T1L);
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T1W = SIMD_FNMADD(KP500000000, T1V, T1U);
                T2c = T1V + T1U;
                Te  = ri[WS(is, 22)];
                TU  = ii[WS(is, 14)];
                TV  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Tx, T2r, TC, T2u, Ty, T1S, Tf, T1Q, TW, Tz, T1h,
                        T1i, TD, TE, T1m;
                    SIMD_FLOAT T1n, T2M, T1j, T2P, T1o, TB, T1g, T2L, TG, T1l,
                        T2O, TT, T1R, TA, T2q;
                    SIMD_FLOAT TF, T2t, To, Tp, T16, T17;
                    Tx  = ri[WS(is, 21)];
                    T1w = SIMD_FMADD(KP866025403, T11, TY);
                    T12 = SIMD_FNMADD(KP866025403, T11, TY);
                    T2r = ii[WS(is, 21)];
                    TC  = ri[WS(is, 9)];
                    T2u = ii[WS(is, 9)];
                    Ty  = ri[WS(is, 5)];
                    T25 = SIMD_FMADD(KP866025403, T1X, T1W);
                    T1Y = SIMD_FNMADD(KP866025403, T1X, T1W);
                    T1S = Te - Td;
                    Tf  = Td + Te;
                    T1Q = TU + TV;
                    TW  = TU - TV;
                    Tz  = ri[WS(is, 13)];
                    T1h = ii[WS(is, 5)];
                    T1i = ii[WS(is, 13)];
                    TD  = ri[WS(is, 17)];
                    TE  = ri[WS(is, 1)];
                    T1m = ii[WS(is, 17)];
                    T1n = ii[WS(is, 1)];
                    Tn  = ri[WS(is, 3)];
                    T2i = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    TT  = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T2b = T1Q + T1P;
                    T1R = SIMD_FNMADD(KP500000000, T1Q, T1P);
                    TA  = Ty + Tz;
                    T2M = Tz - Ty;
                    T1j = T1h - T1i;
                    T2q = T1h + T1i;
                    TF  = TD + TE;
                    T2P = TE - TD;
                    T1o = T1m - T1n;
                    T2t = T1m + T1n;
                    TX  = SIMD_FNMADD(KP866025403, TW, TT);
                    T1v = SIMD_FMADD(KP866025403, TW, TT);
                    T1T = SIMD_FNMADD(KP866025403, T1S, T1R);
                    T24 = SIMD_FMADD(KP866025403, T1S, T1R);
                    Ts  = ri[WS(is, 15)];
                    TB  = Tx + TA;
                    T1g = SIMD_FNMADD(KP500000000, TA, Tx);
                    T2s = T2q + T2r;
                    T2L = SIMD_FNMADD(KP500000000, T2q, T2r);
                    TG  = TC + TF;
                    T1l = SIMD_FNMADD(KP500000000, TF, TC);
                    T2v = T2t + T2u;
                    T2O = SIMD_FNMADD(KP500000000, T2t, T2u);
                    T2l = ii[WS(is, 15)];
                    To  = ri[WS(is, 11)];
                    Tp  = ri[WS(is, 19)];
                    T16 = ii[WS(is, 11)];
                    T17 = ii[WS(is, 19)];
                    T1k = SIMD_FNMADD(KP866025403, T1j, T1g);
                    T1B = SIMD_FMADD(KP866025403, T1j, T1g);
                    T2N = SIMD_FNMADD(KP866025403, T2M, T2L);
                    T3k = SIMD_FMADD(KP866025403, T2M, T2L);
                    TH  = TB + TG;
                    T2p = TB - TG;
                    T1C = SIMD_FMADD(KP866025403, T1o, T1l);
                    T1p = SIMD_FNMADD(KP866025403, T1o, T1l);
                    T2w = T2s - T2v;
                    T2Q = SIMD_FNMADD(KP866025403, T2P, T2O);
                    T3l = SIMD_FMADD(KP866025403, T2P, T2O);
                    Tq  = To + Tp;
                    T2V = Tp - To;
                    T2h = T16 + T17;
                    T18 = T16 - T17;
                    Tt  = ri[WS(is, 23)];
                    Tu  = ri[WS(is, 7)];
                    T1b = ii[WS(is, 23)];
                    T1c = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T2y, Tb, Tm, T2e, T2z, T2d, T2a, T2f, T2E, T2x, T19,
                    T1y, T2W, T3g, T2C;
                SIMD_FLOAT T23, T3d, T3o, T1x, T26, T3q, T3p, T1u, T1D, T3j,
                    T3m, T3v, T2g, T1z, T1e;
                SIMD_FLOAT T2G, T2n, T3f, T2Z, T2A, Tr, T15, T2j, T2U, T2Y, Tv,
                    T2k, T1d, T1a, Tw;
                SIMD_FLOAT T2X, T2m, T3s, T3n, T3e, T1A, T2o, T2D, T3u, T3h,
                    T3t, TS, T13, T3a, T3b;
                SIMD_FLOAT T2B, T2F, T3w, T3i, T3r, T20, T27;
                T2y            = T5 - Ta;
                Tb             = T5 + Ta;
                Tm             = Tg + Tl;
                T2e            = Tg - Tl;
                T2z            = T2b - T2c;
                T2d            = T2b + T2c;
                T2a            = T28 + T29;
                T2f            = T28 - T29;
                Tr             = Tn + Tq;
                T15            = SIMD_FNMADD(KP500000000, Tq, Tn);
                T2j            = T2h + T2i;
                T2U            = SIMD_FNMADD(KP500000000, T2h, T2i);
                T2Y            = Tu - Tt;
                Tv             = Tt + Tu;
                T2k            = T1b + T1c;
                T1d            = T1b - T1c;
                T2E            = T2p + T2w;
                T2x            = T2p - T2w;
                T19            = SIMD_FNMADD(KP866025403, T18, T15);
                T1y            = SIMD_FMADD(KP866025403, T18, T15);
                T2W            = SIMD_FNMADD(KP866025403, T2V, T2U);
                T3g            = SIMD_FMADD(KP866025403, T2V, T2U);
                T1a            = SIMD_FNMADD(KP500000000, Tv, Ts);
                Tw             = Ts + Tv;
                T2X            = SIMD_FNMADD(KP500000000, T2k, T2l);
                T2m            = T2k + T2l;
                T2C            = T2f - T2e;
                T23            = T21 + T22;
                T3d            = T21 - T22;
                T3o            = T1v - T1w;
                T1x            = T1v + T1w;
                T26            = T24 + T25;
                T3q            = T24 - T25;
                T3p            = T1s - T1t;
                T1u            = T1s + T1t;
                T1D            = T1B + T1C;
                T3j            = T1C - T1B;
                T3m            = T3k - T3l;
                T3v            = T3k + T3l;
                io[WS(os, 10)] = TH + T2a - T2d - (Tr + Tw);
                ro[WS(os, 4)]  = Tb + Tm - (Tr + Tw) - TH;
                T2g            = Tr - Tw;
                T1z            = SIMD_FMADD(KP866025403, T1d, T1a);
                T1e            = SIMD_FNMADD(KP866025403, T1d, T1a);
                T2G            = T2j + T2m;
                T2n            = T2j - T2m;
                T3f            = SIMD_FMADD(KP866025403, T2Y, T2X);
                T2Z            = SIMD_FNMADD(KP866025403, T2Y, T2X);
                T2A            = T2y + T2z;
                T3s            = T3j + T3m;
                T3n            = T3j - T3m;
                T3e            = T1y - T1z;
                T1A            = T1y + T1z;
                ro[WS(os, 10)] = Tb + T2G - (T2s + T2v) - Tm;
                io[WS(os, 4)]  = T2a + T2d - (T2s + T2v) - T2G;
                T2o            = T2g + T2n;
                T2D            = T2n - T2g;
                T3u            = T3g + T3f;
                T3h            = T3f - T3g;
                T3t            = T1u - T1x;
                TS             = TM + TR;
                T33            = TM - TR;
                T2H            = TX - T12;
                T13            = TX + T12;
                T3a            = T2W + T2Z;
                T30            = T2W - T2Z;
                T2R            = T2N - T2Q;
                T3b            = T2N + T2Q;
                io[WS(os, 7)]  = T2e + SIMD_FMADD(KP707106781, T2o - T2x, T2f);
                T2B            = T2o + T2x;
                ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2E, T2y) -
                                (SIMD_FMADD(KP707106781, T2D, T2z));
                T2F            = T2D + T2E;
                T3w            = T3u - T3v;
                T3i            = T3e + T3h;
                T3r            = T3h - T3e;
                ro[WS(os, 8)]  = T1u + T1x + T1A + T1D;
                T20            = T1D - T1A;
                io[WS(os, 8)]  = T23 + T26 + T3u + T3v;
                T27            = T23 - T26;
                T14            = TS + T13;
                T3c            = T3a + T3b;
                ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2B, T2A);
                ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2B, T2A);
                io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2F, T2C);
                io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2F, T2C);
                ro[WS(os, 14)] = T3t - T3w;
                ro[WS(os, 2)]  = T3t + T3w;
                io[WS(os, 11)] = T3o + SIMD_FMADD(KP707106781, T3r - T3s, T3d);
                ro[WS(os, 5)]  = T3p + SIMD_FMADD(KP707106781, T3r + T3s, T3q);
                ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T3n, T3p) -
                                 (SIMD_FMADD(KP707106781, T3i, T3q));
                io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3i + T3n, T3d) - T3o;
                io[WS(os, 14)] = T27 - T20;
                io[WS(os, 2)]  = T20 + T27;
                T2T            = T19 - T1e;
                T1f            = T19 + T1e;
                T1q            = T1k + T1p;
                T2K            = T1k - T1p;
                T2I            = T1I - T1N;
                T1O            = T1I + T1N;
                T1Z            = T1T + T1Y;
                T34            = T1T - T1Y;
                ro[WS(os, 6)]  = TS + T3b - (T13 + T3a);
                T1r            = T1f + T1q;
            }
        }
        io[WS(os, 6)]  = T1f + T1O - (T1q + T1Z);
        T39            = T1O + T1Z;
        T2J            = T2H + T2I;
        T35            = T33 - T34;
        T2S            = T2K - T2R;
        T37            = T2K + T2R;
        T31            = T2T + T30;
        T36            = T30 - T2T;
        ro[0]          = T14 + T1r;
        ro[WS(os, 12)] = T14 - T1r;
        io[0]          = T39 + T3c;
        io[WS(os, 12)] = T39 - T3c;
        T38            = T36 - T37;
        io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T36 + T37, T2I) - T2H;
        T32            = T2S - T31;
        ro[WS(os, 9)]  = T33 + SIMD_FMADD(KP707106781, T31 + T2S, T34);
        ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T38, T35);
        ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T38, T35);
        io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T32, T2J);
        io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T32, T2J);
    }
}

template <>
struct c2cb_traits<24, 9>
{
    static constexpr long_t flops           = 304;
    static constexpr long_t operations      = 238;
    static constexpr long_t memory_accesses = 78;
    static constexpr long_t stack_vars      = 150;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 9 -name c2cb
 * -standalone */

/*
 * This function contains 238 FP additions, 66 FP multiplications,
 * (or, 172 additions, 0 multiplications, 66 fused multiply/add),
 * 150 stack variables, 3 constants, and 78 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 9>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2E, T37, T3e, T2L, T2O, T2A, T2j, T3q, T2s, T3n, T2x, T2H,
            T2P, T3f, T2B;
        SIMD_FLOAT T2R, T2I, T2Q, T2S, T3g;
        {
            SIMD_FLOAT T5, T1g, Ta, T1l, T2m, T2U, T1V, T2J, Tl, T2V, T2p, T2K,
                T1Y, T31, T3l;
            SIMD_FLOAT T3d, T2N, T2d, To, Tz, Tg, T30, T3a, T3k, T26, T2M, Tt,
                T10, T15, TE;
            SIMD_FLOAT T1J, T2F, T1N, T2C, T1o, TV, T2G, T1G, T16, T1Q, T2D, Tr,
                T1A, T1q, TC;
            SIMD_FLOAT Tu, Tv, TF, TG;
            {
                SIMD_FLOAT T1, T1c, T6, T1h, Th, T27, Ti, T1U, T4, T2l, T1f, Tj,
                    T28, T1X, T9;
                SIMD_FLOAT T2o, T1k, T29, T2, T3, T1d, T1e, T7, T8, T1i, T1j,
                    Tc, T20, T2c, T3c;
                SIMD_FLOAT Td, T3b, T2b, Te, T21, T22, T2k, T1T, Tk, T2n, T1W,
                    T2a;
                T1  = ri[0];
                T1c = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1d = ii[WS(is, 8)];
                T1e = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T1h = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                T1i = ii[WS(is, 20)];
                T1j = ii[WS(is, 4)];
                Th  = ii[WS(is, 18)];
                T27 = ri[WS(is, 18)];
                Ti  = ii[WS(is, 2)];
                T1U = T3 - T2;
                T4  = T2 + T3;
                T2l = T1d - T1e;
                T1f = T1d + T1e;
                Tj  = ii[WS(is, 10)];
                T28 = ri[WS(is, 2)];
                T1X = T8 - T7;
                T9  = T7 + T8;
                T2o = T1i - T1j;
                T1k = T1i + T1j;
                T29 = ri[WS(is, 10)];
                Tc  = ii[WS(is, 6)];
                T20 = ri[WS(is, 6)];
                T5  = T1 + T4;
                T2k = SIMD_FNMADD(KP500000000, T4, T1);
                T1g = T1c + T1f;
                T1T = SIMD_FNMADD(KP500000000, T1f, T1c);
                Tk  = Ti + Tj;
                T2c = Ti - Tj;
                Ta  = T6 + T9;
                T2n = SIMD_FNMADD(KP500000000, T9, T6);
                T1l = T1h + T1k;
                T1W = SIMD_FNMADD(KP500000000, T1k, T1h);
                T2a = T28 + T29;
                T3c = T29 - T28;
                T2m = SIMD_FMADD(KP866025403, T2l, T2k);
                T2U = SIMD_FNMADD(KP866025403, T2l, T2k);
                T1V = SIMD_FMADD(KP866025403, T1U, T1T);
                T2J = SIMD_FNMADD(KP866025403, T1U, T1T);
                Td  = ii[WS(is, 14)];
                T3b = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T2V = SIMD_FNMADD(KP866025403, T2o, T2n);
                T2p = SIMD_FMADD(KP866025403, T2o, T2n);
                T2K = SIMD_FNMADD(KP866025403, T1X, T1W);
                T1Y = SIMD_FMADD(KP866025403, T1X, T1W);
                T2b = SIMD_FNMADD(KP500000000, T2a, T27);
                T31 = T27 + T2a;
                Te  = ii[WS(is, 22)];
                T21 = ri[WS(is, 14)];
                T22 = ri[WS(is, 22)];
                {
                    SIMD_FLOAT TL, TW, TQ, T11, TM, T25, Tf, T39, T23, TN, TX,
                        TY, TR, TS, T12;
                    SIMD_FLOAT T13, T1M, T1I, T1P, T1F, TP, T1H, T1L, TU, T1E,
                        T1O, T38, T24, TO, TZ;
                    SIMD_FLOAT TT, T14, Tp, Tq, TA, TB;
                    TL  = ri[WS(is, 21)];
                    T3l = SIMD_FMADD(KP866025403, T3c, T3b);
                    T3d = SIMD_FNMADD(KP866025403, T3c, T3b);
                    TW  = ii[WS(is, 21)];
                    TQ  = ri[WS(is, 9)];
                    T11 = ii[WS(is, 9)];
                    TM  = ri[WS(is, 5)];
                    T2N = SIMD_FNMADD(KP866025403, T2c, T2b);
                    T2d = SIMD_FMADD(KP866025403, T2c, T2b);
                    T25 = Td - Te;
                    Tf  = Td + Te;
                    T39 = T22 - T21;
                    T23 = T21 + T22;
                    TN  = ri[WS(is, 13)];
                    TX  = ii[WS(is, 5)];
                    TY  = ii[WS(is, 13)];
                    TR  = ri[WS(is, 17)];
                    TS  = ri[WS(is, 1)];
                    T12 = ii[WS(is, 17)];
                    T13 = ii[WS(is, 1)];
                    To  = ri[WS(is, 3)];
                    Tz  = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    T38 = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T30 = T20 + T23;
                    T24 = SIMD_FNMADD(KP500000000, T23, T20);
                    TO  = TM + TN;
                    T1M = TN - TM;
                    TZ  = TX + TY;
                    T1I = TX - TY;
                    TT  = TR + TS;
                    T1P = TS - TR;
                    T14 = T12 + T13;
                    T1F = T12 - T13;
                    T3a = SIMD_FNMADD(KP866025403, T39, T38);
                    T3k = SIMD_FMADD(KP866025403, T39, T38);
                    T26 = SIMD_FMADD(KP866025403, T25, T24);
                    T2M = SIMD_FNMADD(KP866025403, T25, T24);
                    Tt  = ri[WS(is, 15)];
                    TP  = TL + TO;
                    T1H = SIMD_FNMADD(KP500000000, TO, TL);
                    T10 = TW + TZ;
                    T1L = SIMD_FNMADD(KP500000000, TZ, TW);
                    TU  = TQ + TT;
                    T1E = SIMD_FNMADD(KP500000000, TT, TQ);
                    T15 = T11 + T14;
                    T1O = SIMD_FNMADD(KP500000000, T14, T11);
                    TE  = ii[WS(is, 15)];
                    Tp  = ri[WS(is, 11)];
                    Tq  = ri[WS(is, 19)];
                    TA  = ii[WS(is, 11)];
                    TB  = ii[WS(is, 19)];
                    T1J = SIMD_FMADD(KP866025403, T1I, T1H);
                    T2F = SIMD_FNMADD(KP866025403, T1I, T1H);
                    T1N = SIMD_FMADD(KP866025403, T1M, T1L);
                    T2C = SIMD_FNMADD(KP866025403, T1M, T1L);
                    T1o = TP + TU;
                    TV  = TP - TU;
                    T2G = SIMD_FNMADD(KP866025403, T1F, T1E);
                    T1G = SIMD_FMADD(KP866025403, T1F, T1E);
                    T16 = T10 - T15;
                    T1Q = SIMD_FMADD(KP866025403, T1P, T1O);
                    T2D = SIMD_FNMADD(KP866025403, T1P, T1O);
                    Tr  = Tp + Tq;
                    T1A = Tq - Tp;
                    T1q = TA - TB;
                    TC  = TA + TB;
                    Tu  = ri[WS(is, 23)];
                    Tv  = ri[WS(is, 7)];
                    TF  = ii[WS(is, 23)];
                    TG  = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT Tm, T1b, T1m, T2Z, T32, T36, T35, Tb, Ts, TD, T1x,
                    T1t, T2T, T2W, T3i;
                SIMD_FLOAT T3h, T2X, T1r, T2y, T1B, T2v, T1s, Tx, T1w, TI, T19,
                    T17, T1p, T1z, Tw;
                SIMD_FLOAT TH;
                Tm  = Tg - Tl;
                T1b = Tg + Tl;
                T1m = T1g + T1l;
                T2Z = T1g - T1l;
                T32 = T30 - T31;
                T36 = T30 + T31;
                T35 = T5 + Ta;
                Tb  = T5 - Ta;
                Ts  = To + Tr;
                T1p = SIMD_FNMADD(KP500000000, Tr, To);
                TD  = Tz + TC;
                T1z = SIMD_FNMADD(KP500000000, TC, Tz);
                T1x = Tv - Tu;
                Tw  = Tu + Tv;
                T1t = TF - TG;
                TH  = TF + TG;
                T2T = T2C + T2D;
                T2E = T2C - T2D;
                T37 = T2U - T2V;
                T2W = T2U + T2V;
                T3i = T3a + T3d;
                T3e = T3a - T3d;
                T2L = T2J - T2K;
                T3h = T2J + T2K;
                T2X = T2M + T2N;
                T2O = T2M - T2N;
                T1r = SIMD_FMADD(KP866025403, T1q, T1p);
                T2y = SIMD_FNMADD(KP866025403, T1q, T1p);
                T1B = SIMD_FMADD(KP866025403, T1A, T1z);
                T2v = SIMD_FNMADD(KP866025403, T1A, T1z);
                T1s = SIMD_FNMADD(KP500000000, Tw, Tt);
                Tx  = Tt + Tw;
                T1w = SIMD_FNMADD(KP500000000, TH, TE);
                TI  = TE + TH;
                T19 = TV + T16;
                T17 = TV - T16;
                {
                    SIMD_FLOAT T3o, T1Z, T2e, T2r, T2w, Tn, T33, T3m, T3p, T2q,
                        T3j, T1K, T2u, T2i, T1R;
                    SIMD_FLOAT T2Y, T2t, T1v, T1a, TK, T1C, T2h, Ty, T2z, T1u,
                        T1n, TJ, T1y, T1S, T2g;
                    SIMD_FLOAT T34, T18, T2f, T1D;
                    T3o            = T1V + T1Y;
                    T1Z            = T1V - T1Y;
                    T2e            = T26 - T2d;
                    T2r            = T26 + T2d;
                    io[WS(os, 9)]  = T1o + T1m - (Ts + Tx) - T1b;
                    ro[WS(os, 3)]  = T35 + T36 - T1o - (Ts + Tx);
                    Ty             = Ts - Tx;
                    T2z            = SIMD_FNMADD(KP866025403, T1t, T1s);
                    T1u            = SIMD_FMADD(KP866025403, T1t, T1s);
                    T1n            = TD + TI;
                    TJ             = TD - TI;
                    T2w            = SIMD_FNMADD(KP866025403, T1x, T1w);
                    T1y            = SIMD_FMADD(KP866025403, T1x, T1w);
                    Tn             = Tb + Tm;
                    T33            = T2Z - T32;
                    T3m            = T3k - T3l;
                    T3p            = T3k + T3l;
                    T2q            = T2m + T2p;
                    T3j            = T2m - T2p;
                    T1K            = T1G - T1J;
                    T2u            = T1J + T1G;
                    T2i            = T1N + T1Q;
                    T1R            = T1N - T1Q;
                    T2Y            = T2y + T2z;
                    T2A            = T2y - T2z;
                    T2t            = T1r + T1u;
                    T1v            = T1r - T1u;
                    ro[WS(os, 9)]  = T35 + T1n - T36 - (T10 + T15);
                    io[WS(os, 3)]  = T1b + T1m - (T10 + T15) - T1n;
                    T1a            = TJ - Ty;
                    TK             = Ty + TJ;
                    io[WS(os, 11)] = T3h + T3i - T2T - (T2v + T2w);
                    ro[WS(os, 5)]  = T2T + T2W - T2X - (T2v + T2w);
                    T1C            = T1y - T1B;
                    T2h            = T1B + T1y;
                    T1S            = T1K - T1R;
                    T2g            = T1R + T1K;
                    ro[WS(os, 11)] = T2W + T2X - (T2F + T2G) - T2Y;
                    io[WS(os, 5)]  = T2Y + T3h - T3i - (T2F + T2G);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP707106781, T19, Tb) -
                                    (SIMD_FMADD(KP707106781, T1a, Tm));
                    T34 = T1a + T19;
                    io[WS(os, 6)] =
                        SIMD_FMADD(KP707106781, TK - T17, T2Z) + T32;
                    T18            = TK + T17;
                    T2f            = T1C - T1v;
                    T1D            = T1v + T1C;
                    T2j            = T2h - T2i;
                    io[0]          = SIMD_FMADD(KP707106781, T34, T33);
                    io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T34, T33);
                    ro[0]          = SIMD_FMADD(KP707106781, T18, Tn);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T18, Tn);
                    io[WS(os, 10)] =
                        SIMD_FMADD(KP707106781, T2f - T2g, T1Z) + T2e;
                    ro[WS(os, 4)] =
                        SIMD_FMADD(KP707106781, T2f + T2g, T3j) + T3m;
                    ro[WS(os, 10)] = SIMD_FMADD(KP707106781, T1S, T3j) -
                                     (SIMD_FMADD(KP707106781, T1D, T3m));
                    io[WS(os, 4)] =
                        SIMD_FMADD(KP707106781, T1D + T1S, T1Z) - T2e;
                    io[WS(os, 7)] = T2h + T2i + T3o + T3p;
                    T3q           = T3o - T3p;
                    T2s           = T2q - T2r;
                    ro[WS(os, 7)] = T2t + T2u + T2q + T2r;
                    T3n           = T2u - T2t;
                    T2x           = T2v - T2w;
                    T2H           = T2F - T2G;
                }
            }
        }
        ro[WS(os, 13)] = T2s - T2j;
        ro[WS(os, 1)]  = T2j + T2s;
        io[WS(os, 13)] = T3q - T3n;
        io[WS(os, 1)]  = T3n + T3q;
        T2P            = T2L + T2O;
        T3f            = T37 - T3e;
        T2B            = T2x - T2A;
        T2R            = T2A + T2x;
        T2I            = T2E + T2H;
        T2Q            = T2H - T2E;
        T2S            = T2Q - T2R;
        ro[WS(os, 8)]  = SIMD_FMADD(KP707106781, T2R + T2Q, T37) + T3e;
        T3g            = T2B - T2I;
        io[WS(os, 8)]  = SIMD_FMADD(KP707106781, T2B + T2I, T2L) - T2O;
        io[WS(os, 14)] = SIMD_FNMADD(KP707106781, T2S, T2P);
        io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2S, T2P);
        ro[WS(os, 14)] = SIMD_FNMADD(KP707106781, T3g, T3f);
        ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T3g, T3f);
    }
}

template <>
struct c2cb_traits<24, 10>
{
    static constexpr long_t flops           = 300;
    static constexpr long_t operations      = 236;
    static constexpr long_t memory_accesses = 76;
    static constexpr long_t stack_vars      = 145;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 10 -name c2cb
 * -standalone */

/*
 * This function contains 236 FP additions, 64 FP multiplications,
 * (or, 172 additions, 0 multiplications, 64 fused multiply/add),
 * 145 stack variables, 3 constants, and 76 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 10>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2A, T2M, T2W, T2X, T2B, T2K, T3m, T2D, T3j, T2T, T2C, T2Y,
            T2L, T30, T2U;
        SIMD_FLOAT T2Z, T31, T2V;
        {
            SIMD_FLOAT T5, T25, TC, T2g, TM, T1p, T1H, T1Z, TH, T1z, TX, T3c,
                T2P, T2j, T1A;
            SIMD_FLOAT T12, T3b, T2S, Ta, T26, Ts, T1T, Tg, TR, T1q, T1M, T20,
                T2p, T1j, T1w;
            SIMD_FLOAT Tr, T28, T2G, T36, Th, T2r, Ti, T1s, T18, T22, T1S, T1W,
                Tv, T1U, T1c;
            SIMD_FLOAT Tj, T1l, T1m, T6, T1I, T2R, T11, T7, TY, T2Q, T8, TO, TP;
            {
                SIMD_FLOAT T1, T1D, T2, T3, TJ, TK, Ty, T2f, Tz, TA, TU, TV, TD,
                    T2i, TE;
                SIMD_FLOAT T1G, T4, T1E, TL, TF, TZ, T2O, TB, T2e, TW, T10, TI,
                    T1F, TG, TT;
                SIMD_FLOAT T2N, T2h;
                T1  = ri[0];
                T1D = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 16)];
                Ty  = ii[WS(is, 21)];
                T2f = ri[WS(is, 21)];
                Tz  = ii[WS(is, 5)];
                TA  = ii[WS(is, 13)];
                TU  = ri[WS(is, 13)];
                TV  = ri[WS(is, 5)];
                TD  = ii[WS(is, 9)];
                T2i = ri[WS(is, 9)];
                TE  = ii[WS(is, 17)];
                T1G = T3 - T2;
                T4  = T2 + T3;
                T1E = TJ + TK;
                TL  = TJ - TK;
                TF  = ii[WS(is, 1)];
                TZ  = ri[WS(is, 1)];
                T2O = Tz - TA;
                TB  = Tz + TA;
                T2e = TU + TV;
                TW  = TU - TV;
                T10 = ri[WS(is, 17)];
                T6  = ri[WS(is, 12)];
                T1I = ii[WS(is, 12)];
                T5  = T1 + T4;
                TI  = SIMD_FNMADD(KP500000000, T4, T1);
                T25 = T1E + T1D;
                T1F = SIMD_FNMADD(KP500000000, T1E, T1D);
                TG  = TE + TF;
                T2R = TE - TF;
                TC  = Ty + TB;
                TT  = SIMD_FNMADD(KP500000000, TB, Ty);
                T2g = T2e + T2f;
                T2N = SIMD_FNMADD(KP500000000, T2e, T2f);
                T11 = TZ - T10;
                T2h = TZ + T10;
                TM  = SIMD_FNMADD(KP866025403, TL, TI);
                T1p = SIMD_FMADD(KP866025403, TL, TI);
                T1H = SIMD_FMADD(KP866025403, T1G, T1F);
                T1Z = SIMD_FNMADD(KP866025403, T1G, T1F);
                T7  = ri[WS(is, 20)];
                TY  = SIMD_FNMADD(KP500000000, TG, TD);
                TH  = TD + TG;
                T1z = SIMD_FMADD(KP866025403, TW, TT);
                TX  = SIMD_FNMADD(KP866025403, TW, TT);
                T3c = SIMD_FMADD(KP866025403, T2O, T2N);
                T2P = SIMD_FNMADD(KP866025403, T2O, T2N);
                T2Q = SIMD_FNMADD(KP500000000, T2h, T2i);
                T2j = T2h + T2i;
                T8  = ri[WS(is, 4)];
                TO  = ii[WS(is, 20)];
                TP  = ii[WS(is, 4)];
            }
            {
                SIMD_FLOAT Tc, T2o, T1L, TQ, Tn, T1O, To, T2F, Tf, Tp, T15, T16,
                    TN, T1K, T1i;
                SIMD_FLOAT T2n, Td, Te, T1g, T9, T1J, T1h, T1R, T17, Tt, T14,
                    T1Q, Tu, T1a, T1b;
                SIMD_FLOAT T1f, Tq, T1P, T2E;
                Tc  = ii[WS(is, 3)];
                T1A = SIMD_FMADD(KP866025403, T11, TY);
                T12 = SIMD_FNMADD(KP866025403, T11, TY);
                T2o = ri[WS(is, 3)];
                Td  = ii[WS(is, 11)];
                Te  = ii[WS(is, 19)];
                T1g = ri[WS(is, 19)];
                T3b = SIMD_FMADD(KP866025403, T2R, T2Q);
                T2S = SIMD_FNMADD(KP866025403, T2R, T2Q);
                T1L = T8 - T7;
                T9  = T7 + T8;
                T1J = TO + TP;
                TQ  = TO - TP;
                T1h = ri[WS(is, 11)];
                Tn  = ri[WS(is, 6)];
                T1O = ii[WS(is, 6)];
                To  = ri[WS(is, 14)];
                T2F = Td - Te;
                Tf  = Td + Te;
                Tp  = ri[WS(is, 22)];
                T15 = ii[WS(is, 14)];
                T16 = ii[WS(is, 22)];
                Ta  = T6 + T9;
                TN  = SIMD_FNMADD(KP500000000, T9, T6);
                T26 = T1J + T1I;
                T1K = SIMD_FNMADD(KP500000000, T1J, T1I);
                T1i = T1g - T1h;
                T2n = T1g + T1h;
                Ts  = ri[WS(is, 18)];
                T1T = ii[WS(is, 18)];
                Tg  = Tc + Tf;
                T1f = SIMD_FNMADD(KP500000000, Tf, Tc);
                Tq  = To + Tp;
                T1R = Tp - To;
                T17 = T15 - T16;
                T1P = T15 + T16;
                TR  = SIMD_FNMADD(KP866025403, TQ, TN);
                T1q = SIMD_FMADD(KP866025403, TQ, TN);
                T1M = SIMD_FMADD(KP866025403, T1L, T1K);
                T20 = SIMD_FNMADD(KP866025403, T1L, T1K);
                T2p = T2n + T2o;
                T2E = SIMD_FNMADD(KP500000000, T2n, T2o);
                T1j = SIMD_FNMADD(KP866025403, T1i, T1f);
                T1w = SIMD_FMADD(KP866025403, T1i, T1f);
                Tt  = ri[WS(is, 2)];
                T14 = SIMD_FNMADD(KP500000000, Tq, Tn);
                Tr  = Tn + Tq;
                T1Q = SIMD_FNMADD(KP500000000, T1P, T1O);
                T28 = T1P + T1O;
                Tu  = ri[WS(is, 10)];
                T1a = ii[WS(is, 2)];
                T1b = ii[WS(is, 10)];
                T2G = SIMD_FNMADD(KP866025403, T2F, T2E);
                T36 = SIMD_FMADD(KP866025403, T2F, T2E);
                Th  = ii[WS(is, 15)];
                T2r = ri[WS(is, 15)];
                Ti  = ii[WS(is, 23)];
                T1s = SIMD_FMADD(KP866025403, T17, T14);
                T18 = SIMD_FNMADD(KP866025403, T17, T14);
                T22 = SIMD_FNMADD(KP866025403, T1R, T1Q);
                T1S = SIMD_FMADD(KP866025403, T1R, T1Q);
                T1W = Tu - Tt;
                Tv  = Tt + Tu;
                T1U = T1a + T1b;
                T1c = T1a - T1b;
                Tj  = ii[WS(is, 7)];
                T1l = ri[WS(is, 7)];
                T1m = ri[WS(is, 23)];
            }
            {
                SIMD_FLOAT T2b, Tb, T2z, T2w, T27, TS, T13, T21, T2I, T1n, T1t,
                    Tx, T2v, T1X, T23;
                SIMD_FLOAT T2a, T2c, Tl, T1k, T2s, T2H, T2y, T2l, T1e, T2k, Tw,
                    T19, T29, T1V, Tk;
                SIMD_FLOAT T2q, T2d, T1d;
                T2b = T5 - Ta;
                Tb  = T5 + Ta;
                T2z = T2g + T2j;
                T2k = T2g - T2j;
                T2w = T25 - T26;
                T27 = T25 + T26;
                TS  = TM + TR;
                T2A = TM - TR;
                T2M = TX - T12;
                T13 = TX + T12;
                T21 = T1Z + T20;
                T2W = T1Z - T20;
                Tw  = Ts + Tv;
                T19 = SIMD_FNMADD(KP500000000, Tv, Ts);
                T29 = T1U + T1T;
                T1V = SIMD_FNMADD(KP500000000, T1U, T1T);
                Tk  = Ti + Tj;
                T2I = Ti - Tj;
                T1n = T1l - T1m;
                T2q = T1l + T1m;
                T2d = TC - TH;
                T1d = SIMD_FNMADD(KP866025403, T1c, T19);
                T1t = SIMD_FMADD(KP866025403, T1c, T19);
                Tx  = Tr + Tw;
                T2v = Tr - Tw;
                T1X = SIMD_FMADD(KP866025403, T1W, T1V);
                T23 = SIMD_FNMADD(KP866025403, T1W, T1V);
                T2a = T28 + T29;
                T2c = T28 - T29;
                Tl  = Th + Tk;
                T1k = SIMD_FNMADD(KP500000000, Tk, Th);
                T2s = T2q + T2r;
                T2H = SIMD_FNMADD(KP500000000, T2q, T2r);
                T2y = T2d + T2k;
                T2l = T2d - T2k;
                T1e = T18 + T1d;
                T2X = T18 - T1d;
                {
                    SIMD_FLOAT T33, T1u, T24, T34, T1N, T1Y, T3g, T3f, T1r, T1o,
                        T1x, Tm, T2m, T2J, T37;
                    SIMD_FLOAT T2t, T3a, T1B, T3k, T3d, T1y, T1v, T1C, T3l, T35,
                        T38, T32, T2x, T2u, T3e;
                    SIMD_FLOAT T3h, T3i, T39;
                    T33            = T1s - T1t;
                    T1u            = T1s + T1t;
                    T2B            = T22 - T23;
                    T24            = T22 + T23;
                    T34            = T1H - T1M;
                    T1N            = T1H + T1M;
                    T1Y            = T1S + T1X;
                    T3g            = T1S - T1X;
                    T3f            = T1p - T1q;
                    T1r            = T1p + T1q;
                    T1o            = SIMD_FNMADD(KP866025403, T1n, T1k);
                    T1x            = SIMD_FMADD(KP866025403, T1n, T1k);
                    Tm             = Tg + Tl;
                    T2m            = Tg - Tl;
                    T2J            = SIMD_FNMADD(KP866025403, T2I, T2H);
                    T37            = SIMD_FMADD(KP866025403, T2I, T2H);
                    T2t            = T2p - T2s;
                    ro[WS(os, 2)]  = Tb + Tx - T2z - (T2p + T2s);
                    io[WS(os, 8)]  = T27 + T2z - (T2p + T2s) - T2a;
                    T3a            = T1z - T1A;
                    T1B            = T1z + T1A;
                    T3k            = T3c + T3b;
                    T3d            = T3b - T3c;
                    T1y            = T1w + T1x;
                    T35            = T1x - T1w;
                    io[WS(os, 10)] = T21 + T24 - (T1j + T1o) - T13;
                    ro[WS(os, 4)]  = TS + T13 - T1e - (T1j + T1o);
                    io[WS(os, 2)]  = T27 + T2a - (TC + TH) - Tm;
                    ro[WS(os, 8)]  = Tb + Tm - Tx - (TC + TH);
                    T38            = T36 - T37;
                    T3l            = T36 + T37;
                    T2K            = T2G - T2J;
                    T32            = T2G + T2J;
                    T2x            = T2t - T2m;
                    T2u            = T2m + T2t;
                    T3e            = T3a + T3d;
                    T3h            = T3d - T3a;
                    T3i            = T35 + T38;
                    T39            = T35 - T38;
                    ro[WS(os, 10)] = TS + T1e - (T2P + T2S) - T32;
                    io[WS(os, 4)]  = T21 + T32 - (T2P + T2S) - T24;
                    ro[WS(os, 5)] =
                        SIMD_FMADD(KP707106781, T2x + T2y, T2b) - T2c;
                    io[WS(os, 11)] = SIMD_FMADD(KP707106781, T2x, T2w) -
                                     (SIMD_FMADD(KP707106781, T2y, T2v));
                    io[WS(os, 5)] =
                        T2v + SIMD_FMADD(KP707106781, T2u + T2l, T2w);
                    ro[WS(os, 11)] =
                        T2b + SIMD_FMADD(KP707106781, T2l - T2u, T2c);
                    T1v = T1r - T1u;
                    T3m = T3k - T3l;
                    T1C = T1y - T1B;
                    io[WS(os, 3)] =
                        SIMD_FMADD(KP707106781, T3i + T3h, T34) - T33;
                    ro[WS(os, 9)] = SIMD_FMADD(KP707106781, T3h, T3f) -
                                    (SIMD_FMADD(KP707106781, T3i, T3g));
                    ro[WS(os, 3)] =
                        T3f + SIMD_FMADD(KP707106781, T39 + T3e, T3g);
                    io[WS(os, 9)] =
                        T33 + SIMD_FMADD(KP707106781, T39 - T3e, T34);
                    ro[WS(os, 6)]  = T1r + T1u + T3l + T3k;
                    T2D            = T1j - T1o;
                    ro[0]          = T1C + T1v;
                    ro[WS(os, 12)] = T1v - T1C;
                    io[WS(os, 6)]  = T1B + T1y + T1N + T1Y;
                    T3j            = T1N - T1Y;
                    T2T            = T2P - T2S;
                }
            }
        }
        T2C            = T2A - T2B;
        T2Y            = T2X + T2W;
        io[0]          = T3j + T3m;
        io[WS(os, 12)] = T3j - T3m;
        T2L            = T2D - T2K;
        T30            = T2D + T2K;
        T2U            = T2M + T2T;
        T2Z            = T2T - T2M;
        T31            = T2Z - T30;
        ro[WS(os, 7)]  = T2A + SIMD_FMADD(KP707106781, T30 + T2Z, T2B);
        T2V            = T2L - T2U;
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2L + T2U, T2W) - T2X;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T31, T2Y);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T31, T2Y);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2V, T2C);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2V, T2C);
    }
}

template <>
struct c2cb_traits<24, 11>
{
    static constexpr long_t flops           = 298;
    static constexpr long_t operations      = 234;
    static constexpr long_t memory_accesses = 74;
    static constexpr long_t stack_vars      = 141;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 11 -name c2cb
 * -standalone */

/*
 * This function contains 234 FP additions, 64 FP multiplications,
 * (or, 170 additions, 0 multiplications, 64 fused multiply/add),
 * 141 stack variables, 3 constants, and 74 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 11>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2d, T2e, T2D, T2J, T2K, T2E, T2o, T29, T3c, T3a, T2n, T2m,
            T3b, T2c, T37;
        SIMD_FLOAT T2I, T2f, T2F;
        {
            SIMD_FLOAT T5, T2M, T10, T3e, T2a, T1d, T2G, T2u, T15, T1o, T38,
                T2W, T3f, T1t, T31;
            SIMD_FLOAT T39, Ta, T2N, TE, T1i, T2b, TS, Tg, Tr, T2z, T2H, TD,
                T2g, T1F, T2k;
            SIMD_FLOAT T1y, Tk, Ts, TO, TH, T1W, T1N, T24, Th, Ti, Tt, T1P, TR,
                Tu, T1U;
            SIMD_FLOAT T26, T6, T2v, T30, T1s, T7, T8, T1f, T1p, T1g, T2Z;
            {
                SIMD_FLOAT T1, T2q, T2, T3, T1a, T1b, TW, T2S, TX, TY, T1l, T1m,
                    T11, T2X, T12;
                SIMD_FLOAT T2t, T4, T2r, T1c, T13, T1q, T2V, TZ, T2T, T1n, T1r,
                    T19, T2s, T14, T1k;
                SIMD_FLOAT T2U, T2Y;
                T1  = ri[0];
                T2q = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1a = ii[WS(is, 8)];
                T1b = ii[WS(is, 16)];
                TW  = ii[WS(is, 6)];
                T2S = ri[WS(is, 6)];
                TX  = ii[WS(is, 14)];
                TY  = ii[WS(is, 22)];
                T1l = ri[WS(is, 22)];
                T1m = ri[WS(is, 14)];
                T11 = ii[WS(is, 18)];
                T2X = ri[WS(is, 18)];
                T12 = ii[WS(is, 2)];
                T2t = T3 - T2;
                T4  = T2 + T3;
                T2r = T1a + T1b;
                T1c = T1a - T1b;
                T13 = ii[WS(is, 10)];
                T1q = ri[WS(is, 10)];
                T2V = TX - TY;
                TZ  = TX + TY;
                T2T = T1l + T1m;
                T1n = T1l - T1m;
                T1r = ri[WS(is, 2)];
                T6  = ri[WS(is, 12)];
                T2v = ii[WS(is, 12)];
                T5  = T1 + T4;
                T19 = SIMD_FNMADD(KP500000000, T4, T1);
                T2M = T2r + T2q;
                T2s = SIMD_FNMADD(KP500000000, T2r, T2q);
                T14 = T12 + T13;
                T30 = T12 - T13;
                T10 = TW + TZ;
                T1k = SIMD_FNMADD(KP500000000, TZ, TW);
                T3e = T2T + T2S;
                T2U = SIMD_FNMADD(KP500000000, T2T, T2S);
                T1s = T1q - T1r;
                T2Y = T1q + T1r;
                T2a = SIMD_FMADD(KP866025403, T1c, T19);
                T1d = SIMD_FNMADD(KP866025403, T1c, T19);
                T7  = ri[WS(is, 20)];
                T2G = SIMD_FMADD(KP866025403, T2t, T2s);
                T2u = SIMD_FNMADD(KP866025403, T2t, T2s);
                T8  = ri[WS(is, 4)];
                T1f = ii[WS(is, 20)];
                T1p = SIMD_FNMADD(KP500000000, T14, T11);
                T15 = T11 + T14;
                T1o = SIMD_FNMADD(KP866025403, T1n, T1k);
                T2d = SIMD_FMADD(KP866025403, T1n, T1k);
                T38 = SIMD_FMADD(KP866025403, T2V, T2U);
                T2W = SIMD_FNMADD(KP866025403, T2V, T2U);
                T1g = ii[WS(is, 4)];
                T3f = T2Y + T2X;
                T2Z = SIMD_FNMADD(KP500000000, T2Y, T2X);
            }
            {
                SIMD_FLOAT Tf, Tn, T2y, T1h, Tz, TN, TA, TB, T1e, Te, T1x, Tq,
                    T1E, T2x, TK;
                SIMD_FLOAT TL, Tc, T9, Td, To, Tp, T2w, T1T, TF, T1M, TM, TG,
                    T1L, TP, TQ;
                SIMD_FLOAT TC, T1D, T1w, T1S;
                Tf  = ri[WS(is, 3)];
                Tn  = ii[WS(is, 3)];
                Tc  = ri[WS(is, 19)];
                T2y = T8 - T7;
                T9  = T7 + T8;
                T1t = SIMD_FNMADD(KP866025403, T1s, T1p);
                T2e = SIMD_FMADD(KP866025403, T1s, T1p);
                Td  = ri[WS(is, 11)];
                To  = ii[WS(is, 11)];
                Tp  = ii[WS(is, 19)];
                T2w = T1f + T1g;
                T1h = T1f - T1g;
                T31 = SIMD_FNMADD(KP866025403, T30, T2Z);
                T39 = SIMD_FMADD(KP866025403, T30, T2Z);
                Tz  = ri[WS(is, 21)];
                TN  = ii[WS(is, 21)];
                TA  = ri[WS(is, 5)];
                TB  = ri[WS(is, 13)];
                Ta  = T6 + T9;
                T1e = SIMD_FNMADD(KP500000000, T9, T6);
                Te  = Tc + Td;
                T1x = Tc - Td;
                Tq  = To + Tp;
                T1E = To - Tp;
                T2N = T2w + T2v;
                T2x = SIMD_FNMADD(KP500000000, T2w, T2v);
                TK  = ii[WS(is, 5)];
                TL  = ii[WS(is, 13)];
                TE  = ri[WS(is, 9)];
                T1T = TB - TA;
                TC  = TA + TB;
                T1i = SIMD_FNMADD(KP866025403, T1h, T1e);
                T2b = SIMD_FMADD(KP866025403, T1h, T1e);
                TS  = ii[WS(is, 9)];
                T1D = SIMD_FNMADD(KP500000000, Te, Tf);
                Tg  = Te + Tf;
                T1w = SIMD_FNMADD(KP500000000, Tq, Tn);
                Tr  = Tn + Tq;
                T2z = SIMD_FNMADD(KP866025403, T2y, T2x);
                T2H = SIMD_FMADD(KP866025403, T2y, T2x);
                TF  = ri[WS(is, 17)];
                T1M = TK - TL;
                TM  = TK + TL;
                TG  = ri[WS(is, 1)];
                TD  = Tz + TC;
                T1L = SIMD_FNMADD(KP500000000, TC, Tz);
                TP  = ii[WS(is, 17)];
                T2g = SIMD_FMADD(KP866025403, T1E, T1D);
                T1F = SIMD_FNMADD(KP866025403, T1E, T1D);
                T2k = SIMD_FMADD(KP866025403, T1x, T1w);
                T1y = SIMD_FNMADD(KP866025403, T1x, T1w);
                TQ  = ii[WS(is, 1)];
                Tk  = ri[WS(is, 15)];
                Ts  = ii[WS(is, 15)];
                TO  = TM + TN;
                T1S = SIMD_FNMADD(KP500000000, TM, TN);
                TH  = TF + TG;
                T1W = TG - TF;
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T24 = SIMD_FMADD(KP866025403, T1M, T1L);
                Th  = ri[WS(is, 7)];
                Ti  = ri[WS(is, 23)];
                Tt  = ii[WS(is, 23)];
                T1P = TP - TQ;
                TR  = TP + TQ;
                Tu  = ii[WS(is, 7)];
                T1U = SIMD_FNMADD(KP866025403, T1T, T1S);
                T26 = SIMD_FMADD(KP866025403, T1T, T1S);
            }
            {
                SIMD_FLOAT T2R, T2A, T36, T32, T1j, T35, T1A, T2B, T1u, TT, T1H,
                    T16, T2L, T23, T1Q;
                SIMD_FLOAT T2O, T3d, T3g, T3i, T3h, Tb, Tl, T1G, T1X, T27, TJ,
                    T2Q, T1z, Tw, T1O;
                SIMD_FLOAT TI, Tj, T1V, Tv;
                T2R = T2u - T2z;
                T2A = T2u + T2z;
                T1O = SIMD_FNMADD(KP500000000, TH, TE);
                TI  = TE + TH;
                T36 = T2W + T31;
                T32 = T2W - T31;
                T1j = T1d - T1i;
                T35 = T1d + T1i;
                T1A = Th - Ti;
                Tj  = Th + Ti;
                T2B = T1o + T1t;
                T1u = T1o - T1t;
                TT  = TR + TS;
                T1V = SIMD_FNMADD(KP500000000, TR, TS);
                Tv  = Tt + Tu;
                T1H = Tt - Tu;
                T16 = T10 - T15;
                T2L = T10 + T15;
                T23 = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Q = SIMD_FNMADD(KP866025403, T1P, T1O);
                T2O = T2M + T2N;
                T3d = T2M - T2N;
                T3g = T3e - T3f;
                T3i = T3e + T3f;
                T3h = T5 + Ta;
                Tb  = T5 - Ta;
                Tl  = Tj + Tk;
                T1G = SIMD_FNMADD(KP500000000, Tj, Tk);
                T1X = SIMD_FNMADD(KP866025403, T1W, T1V);
                T27 = SIMD_FMADD(KP866025403, T1W, T1V);
                TJ  = TD - TI;
                T2Q = TD + TI;
                T1z = SIMD_FNMADD(KP500000000, Tv, Ts);
                Tw  = Ts + Tv;
                {
                    SIMD_FLOAT T1I, T2h, TU, T2C, T1Y, T1B, T2j, Tx, T2P, Tm,
                        TV, T17, Ty, T18, T1v;
                    SIMD_FLOAT T33, T1R, T21, T1K, T2p, T1J, T1C, T2l, T2i, T25,
                        T28, T22, T1Z, T34, T20;
                    T1I           = SIMD_FNMADD(KP866025403, T1H, T1G);
                    T2h           = SIMD_FMADD(KP866025403, T1H, T1G);
                    TU            = TO - TT;
                    T2C           = T1U + T1X;
                    T1Y           = T1U - T1X;
                    io[WS(os, 7)] = T2Q + T2O - T2L - (Tg + Tl);
                    ro[WS(os, 1)] = T3h + T3i - T2Q - (Tg + Tl);
                    T1B           = SIMD_FNMADD(KP866025403, T1A, T1z);
                    T2j           = SIMD_FMADD(KP866025403, T1A, T1z);
                    Tx            = Tr - Tw;
                    T2P           = Tr + Tw;
                    Tm            = Tg - Tl;
                    T2p           = T1F + T1I;
                    T1J           = T1F - T1I;
                    TV            = TJ + TU;
                    T17           = TU - TJ;
                    T1C           = T1y - T1B;
                    io[WS(os, 9)] = T2B + T2A - T2C - (T1y + T1B);
                    ro[WS(os, 3)] = T2C + T35 - T36 - (T1y + T1B);
                    ro[WS(os, 7)] = T3h + T2P - T3i - (TO + TT);
                    io[WS(os, 1)] = T2L + T2O - (TO + TT) - T2P;
                    Ty            = Tm - Tx;
                    T18           = Tm + Tx;
                    T1v           = T1j - T1u;
                    ro[WS(os, 9)] = T35 + T36 - (T1N + T1Q) - T2p;
                    io[WS(os, 3)] = T2p + T2A - T2B - (T1N + T1Q);
                    T33           = T2R + T32;
                    T1R           = T1N - T1Q;
                    T21           = T1J + T1C;
                    T1K           = T1C - T1J;
                    T2l           = T2j - T2k;
                    T2D           = T2k + T2j;
                    T2J           = T2g + T2h;
                    T2i           = T2g - T2h;
                    ro[WS(os, 10)] =
                        SIMD_FMADD(KP707106781, T17 - T18, Tb) + T16;
                    io[WS(os, 4)] =
                        SIMD_FMADD(KP707106781, T18 + T17, T3d) + T3g;
                    io[WS(os, 10)] = SIMD_FMADD(KP707106781, Ty, T3d) -
                                     (SIMD_FMADD(KP707106781, TV, T3g));
                    ro[WS(os, 4)] = SIMD_FMADD(KP707106781, Ty + TV, Tb) - T16;
                    T25           = T23 - T24;
                    T2K           = T24 + T23;
                    T2E           = T26 + T27;
                    T28           = T26 - T27;
                    T22           = T1R - T1Y;
                    T1Z           = T1R + T1Y;
                    T2o           = T25 + T28;
                    T29           = T25 - T28;
                    T34           = T22 - T21;
                    ro[WS(os, 6)] =
                        SIMD_FMADD(KP707106781, T21 + T22, T1j) + T1u;
                    T20 = T1K - T1Z;
                    io[WS(os, 6)] =
                        SIMD_FMADD(KP707106781, T1K + T1Z, T2R) - T32;
                    T3c            = T38 + T39;
                    T3a            = T38 - T39;
                    T2n            = T2l - T2i;
                    T2m            = T2i + T2l;
                    T3b            = T2a + T2b;
                    T2c            = T2a - T2b;
                    T37            = T2G - T2H;
                    T2I            = T2G + T2H;
                    io[WS(os, 12)] = SIMD_FNMADD(KP707106781, T34, T33);
                    io[0]          = SIMD_FMADD(KP707106781, T34, T33);
                    ro[0]          = SIMD_FMADD(KP707106781, T20, T1v);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP707106781, T20, T1v);
                }
            }
        }
        ro[WS(os, 11)] = T2E + T3b - (T2D + T3c);
        ro[WS(os, 5)]  = T2J + T2K + T3b + T3c;
        io[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2m + T29, T37) - T3a;
        io[WS(os, 8)]  = SIMD_FMADD(KP707106781, T2n - T2o, T37) + T3a;
        T2f            = T2d - T2e;
        T2F            = T2d + T2e;
        io[WS(os, 11)] = T2J + T2I - (T2K + T2F);
        io[WS(os, 5)]  = T2D + T2E + T2F + T2I;
        ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T2n + T2o, T2c) + T2f;
        ro[WS(os, 8)]  = SIMD_FMADD(KP707106781, T29, T2c) -
                        (SIMD_FMADD(KP707106781, T2m, T2f));
    }
}

template <>
struct c2cb_traits<24, 12>
{
    static constexpr long_t flops           = 295;
    static constexpr long_t operations      = 232;
    static constexpr long_t memory_accesses = 72;
    static constexpr long_t stack_vars      = 162;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 12 -name c2cb
 * -standalone */

/*
 * This function contains 232 FP additions, 63 FP multiplications,
 * (or, 169 additions, 0 multiplications, 63 fused multiply/add),
 * 162 stack variables, 3 constants, and 72 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 12>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T23, T24, T26, T27, T1X, T1Y, T1W, T2P, T2I, T2O, T2L, T22,
            T2M, T1T, T2W;
        SIMD_FLOAT T2T, T28, T2N, T1Z, T2V, T2Q, T2X, T25, T2U;
        {
            SIMD_FLOAT T1E, T15, T1H, T18, T14, T5, T1c, T1D, TM, T17, Ta, TR,
                T1G, T1L, TX;
            SIMD_FLOAT T1K, T1b, Tg, T1O, T1f, Tl, T1e, T12, T1N, Tr, T30, T1m,
                T1U, TC, TB;
            SIMD_FLOAT T36, T2J, T2d, T2h, T1q, T2o, TD, T20, T1x, T2G, T2n, TE,
                T1z, T1A, Tw;
            SIMD_FLOAT T1n, T31, T2g, T1, TI, T6, TN, TT, TU, T4, TV, TL, Tc,
                T9, Td;
            SIMD_FLOAT TQ, Te, T2, T3, TJ, TK, T7, T8, TO, TP, T3a, Tb, Tm, T34,
                T3b;
            SIMD_FLOAT T13, TS, T2Y, T2r, T1B, T1V, T1r, T2K, T2i, T3e, T32,
                T2Z, TG, T1y, T37;
            SIMD_FLOAT T2q, TF, T2p;
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            TI  = ii[0];
            TJ  = ii[WS(is, 8)];
            TK  = ii[WS(is, 16)];
            T6  = ri[WS(is, 12)];
            T7  = ri[WS(is, 20)];
            T8  = ri[WS(is, 4)];
            TN  = ii[WS(is, 12)];
            TO  = ii[WS(is, 20)];
            TP  = ii[WS(is, 4)];
            TT  = ii[WS(is, 6)];
            TU  = ii[WS(is, 14)];
            T4  = T2 + T3;
            T1E = T3 - T2;
            TV  = ii[WS(is, 22)];
            T15 = TJ - TK;
            TL  = TJ + TK;
            Tc  = ri[WS(is, 6)];
            T9  = T7 + T8;
            T1H = T8 - T7;
            Td  = ri[WS(is, 14)];
            T18 = TO - TP;
            TQ  = TO + TP;
            Te  = ri[WS(is, 22)];
            {
                SIMD_FLOAT Th, TY, TZ, T10, Tn, T29, To, Tp, T1j, Tk, T1k, TW,
                    Ti, Tf, Tj;
                SIMD_FLOAT Tx, T2j, Ty, T2c, Tq, Tz, T1u, T1v, T1l, T2a, T11,
                    Ts, T2e, TA, T2m;
                SIMD_FLOAT T1w, T2k, T2b, Tt, Tu, T1o, T1p, T1i, T1t, T2l, Tv,
                    T2f;
                Th  = ri[WS(is, 18)];
                T14 = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = T1 + T4;
                T1c = TU - TV;
                TW  = TU + TV;
                T1D = SIMD_FNMADD(KP500000000, TL, TI);
                TM  = TI + TL;
                T17 = SIMD_FNMADD(KP500000000, T9, T6);
                Ta  = T6 + T9;
                Ti  = ri[WS(is, 2)];
                TR  = TN + TQ;
                T1G = SIMD_FNMADD(KP500000000, TQ, TN);
                Tf  = Td + Te;
                T1L = Te - Td;
                Tj  = ri[WS(is, 10)];
                TY  = ii[WS(is, 18)];
                TX  = TT + TW;
                T1K = SIMD_FNMADD(KP500000000, TW, TT);
                TZ  = ii[WS(is, 2)];
                T10 = ii[WS(is, 10)];
                Tn  = ri[WS(is, 3)];
                T29 = ii[WS(is, 3)];
                To  = ri[WS(is, 11)];
                Tp  = ri[WS(is, 19)];
                T1j = ii[WS(is, 11)];
                T1b = SIMD_FNMADD(KP500000000, Tf, Tc);
                Tg  = Tc + Tf;
                T1O = Tj - Ti;
                Tk  = Ti + Tj;
                T1k = ii[WS(is, 19)];
                Tx  = ri[WS(is, 21)];
                T1f = TZ - T10;
                T11 = TZ + T10;
                T2j = ii[WS(is, 21)];
                Ty  = ri[WS(is, 5)];
                T2c = Tp - To;
                Tq  = To + Tp;
                Tz  = ri[WS(is, 13)];
                T1u = ii[WS(is, 5)];
                T1v = ii[WS(is, 13)];
                Tl  = Th + Tk;
                T1e = SIMD_FNMADD(KP500000000, Tk, Th);
                T1l = T1j - T1k;
                T2a = T1j + T1k;
                T12 = TY + T11;
                T1N = SIMD_FNMADD(KP500000000, T11, TY);
                Ts  = ri[WS(is, 15)];
                T2e = ii[WS(is, 15)];
                Tr  = Tn + Tq;
                T1i = SIMD_FNMADD(KP500000000, Tq, Tn);
                TA  = Ty + Tz;
                T2m = Tz - Ty;
                T1w = T1u - T1v;
                T2k = T1u + T1v;
                T30 = T29 + T2a;
                T2b = SIMD_FNMADD(KP500000000, T2a, T29);
                Tt  = ri[WS(is, 23)];
                Tu  = ri[WS(is, 7)];
                T1o = ii[WS(is, 23)];
                T1p = ii[WS(is, 7)];
                T1m = SIMD_FNMADD(KP866025403, T1l, T1i);
                T1U = SIMD_FMADD(KP866025403, T1l, T1i);
                TC  = ri[WS(is, 9)];
                T1t = SIMD_FNMADD(KP500000000, TA, Tx);
                TB  = Tx + TA;
                T2l = SIMD_FNMADD(KP500000000, T2k, T2j);
                T36 = T2j + T2k;
                T2J = SIMD_FMADD(KP866025403, T2c, T2b);
                T2d = SIMD_FNMADD(KP866025403, T2c, T2b);
                T2h = Tu - Tt;
                Tv  = Tt + Tu;
                T2f = T1o + T1p;
                T1q = T1o - T1p;
                T2o = ii[WS(is, 9)];
                TD  = ri[WS(is, 17)];
                T20 = SIMD_FMADD(KP866025403, T1w, T1t);
                T1x = SIMD_FNMADD(KP866025403, T1w, T1t);
                T2G = SIMD_FMADD(KP866025403, T2m, T2l);
                T2n = SIMD_FNMADD(KP866025403, T2m, T2l);
                TE  = ri[WS(is, 1)];
                T1z = ii[WS(is, 17)];
                T1A = ii[WS(is, 1)];
                Tw  = Ts + Tv;
                T1n = SIMD_FNMADD(KP500000000, Tv, Ts);
                T31 = T2e + T2f;
                T2g = SIMD_FNMADD(KP500000000, T2f, T2e);
            }
            T3a = T5 - Ta;
            Tb  = T5 + Ta;
            Tm  = Tg + Tl;
            T34 = Tg - Tl;
            T3b = TX - T12;
            T13 = TX + T12;
            TS  = TM + TR;
            T2Y = TM - TR;
            T2r = TE - TD;
            TF  = TD + TE;
            T2p = T1z + T1A;
            T1B = T1z - T1A;
            T1V = SIMD_FMADD(KP866025403, T1q, T1n);
            T1r = SIMD_FNMADD(KP866025403, T1q, T1n);
            T2K = SIMD_FMADD(KP866025403, T2h, T2g);
            T2i = SIMD_FNMADD(KP866025403, T2h, T2g);
            T3e = T30 + T31;
            T32 = T30 - T31;
            T2Z = Tr - Tw;
            TG  = TC + TF;
            T1y = SIMD_FNMADD(KP500000000, TF, TC);
            T37 = T2o + T2p;
            T2q = SIMD_FNMADD(KP500000000, T2p, T2o);
            {
                SIMD_FLOAT T1s, T2w, T1C, T21, T2H, T3d, T33, T2C, T1a, T2v,
                    T1h, T2z, T2t, T2A, T39;
                SIMD_FLOAT T3c, T2D, T1Q, T2x, T1R, T1F, T1I, T1S, T16, T19,
                    T1d, T1g, T1M, T1P, TH;
                SIMD_FLOAT T35, T2s, T38, T2B, T2E, T2F, T2y, T2u, T1J, T2R,
                    T2S;
                T1s           = T1m + T1r;
                T2w           = T1m - T1r;
                T23           = SIMD_FMADD(KP866025403, T15, T14);
                T16           = SIMD_FNMADD(KP866025403, T15, T14);
                T19           = SIMD_FNMADD(KP866025403, T18, T17);
                T24           = SIMD_FMADD(KP866025403, T18, T17);
                T26           = SIMD_FMADD(KP866025403, T1c, T1b);
                T1d           = SIMD_FNMADD(KP866025403, T1c, T1b);
                T1g           = SIMD_FNMADD(KP866025403, T1f, T1e);
                T27           = SIMD_FMADD(KP866025403, T1f, T1e);
                T1X           = SIMD_FMADD(KP866025403, T1L, T1K);
                T1M           = SIMD_FNMADD(KP866025403, T1L, T1K);
                T1P           = SIMD_FNMADD(KP866025403, T1O, T1N);
                T1Y           = SIMD_FMADD(KP866025403, T1O, T1N);
                T1C           = SIMD_FNMADD(KP866025403, T1B, T1y);
                T21           = SIMD_FMADD(KP866025403, T1B, T1y);
                TH            = TB + TG;
                T35           = TB - TG;
                T2s           = SIMD_FNMADD(KP866025403, T2r, T2q);
                T2H           = SIMD_FMADD(KP866025403, T2r, T2q);
                T38           = T36 - T37;
                ro[WS(os, 6)] = Tb + T3e - (T36 + T37) - Tm;
                io[0]         = TS + T13 - T3e - (T36 + T37);
                T3d           = T2Z + T32;
                T33           = T2Z - T32;
                T2C           = T16 - T19;
                T1a           = T16 + T19;
                T2v           = T1d - T1g;
                T1h           = T1d + T1g;
                T2z           = T1x - T1C;
                io[WS(os, 6)] = TH + TS - T13 - (Tr + Tw);
                ro[0]         = Tb + Tm - (Tr + Tw) - TH;
                T2t           = T2n + T2s;
                T2A           = T2n - T2s;
                T39           = T35 + T38;
                T3c           = T38 - T35;
                T2D           = T1M - T1P;
                T1Q           = T1M + T1P;
                T2x           = T2d - T2i;
                T1R           = SIMD_FMADD(KP866025403, T1E, T1D);
                T1F           = SIMD_FNMADD(KP866025403, T1E, T1D);
                T1I           = SIMD_FNMADD(KP866025403, T1H, T1G);
                T1S           = SIMD_FMADD(KP866025403, T1H, T1G);
                ro[WS(os, 8)] = T1a + T1h - T1s - (T1x + T1C);
                T1W           = T1U + T1V;
                T2P           = T1U - T1V;
                T2B           = T2z - T2A;
                T2E           = T2A + T2z;
                ro[WS(os, 2)] = T1a + T2t - (T2d + T2i) - T1h;
                io[WS(os, 3)] = T34 + SIMD_FMADD(KP707106781, T3c + T3d, T2Y);
                ro[WS(os, 9)] = T3a + SIMD_FMADD(KP707106781, T3c - T3d, T3b);
                ro[WS(os, 3)] = SIMD_FMADD(KP707106781, T39 + T33, T3a) - T3b;
                io[WS(os, 9)] = SIMD_FMADD(KP707106781, T33, T2Y) -
                                (SIMD_FMADD(KP707106781, T39, T34));
                T2F            = T2x - T2w;
                T2y            = T2w + T2x;
                T2u            = T1F - T1I;
                T1J            = T1F + T1I;
                T2I            = T2G + T2H;
                T2R            = T2G - T2H;
                T2O            = T2K - T2J;
                T2L            = T2J + T2K;
                T22            = T20 + T21;
                T2S            = T21 - T20;
                ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2E, T2C) -
                                 (SIMD_FMADD(KP707106781, T2F, T2D));
                ro[WS(os, 5)]  = T2C + SIMD_FMADD(KP707106781, T2B + T2y, T2D);
                io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2E + T2F, T2u) - T2v;
                io[WS(os, 11)] = T2u + SIMD_FMADD(KP707106781, T2y - T2B, T2v);
                io[WS(os, 2)]  = T1J + T1s - (T1x + T1C) - T1Q;
                io[WS(os, 8)]  = T1J + T1Q - (T2d + T2i) - T2t;
                T2M            = T1R - T1S;
                T1T            = T1R + T1S;
                T2W            = T2S - T2R;
                T2T            = T2R + T2S;
            }
        }
        T28            = T26 + T27;
        T2N            = T26 - T27;
        T1Z            = T1X + T1Y;
        T2V            = T1X - T1Y;
        T2Q            = T2O - T2P;
        T2X            = T2P + T2O;
        T25            = T23 + T24;
        T2U            = T23 - T24;
        io[WS(os, 4)]  = T1T + T1Z + T2I + T2L;
        io[WS(os, 10)] = T1T + T1W - (T1Z + T22);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2W + T2X, T2M) - T2N;
        io[WS(os, 7)]  = T2M + SIMD_FMADD(KP707106781, T2Q - T2T, T2N);
        ro[WS(os, 1)]  = T2U + SIMD_FMADD(KP707106781, T2T + T2Q, T2V);
        ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2W, T2U) -
                        (SIMD_FMADD(KP707106781, T2X, T2V));
        ro[WS(os, 4)]  = T25 + T28 + T22 + T1W;
        ro[WS(os, 10)] = T25 + T2I - (T28 + T2L);
    }
}

template <>
struct c2cb_traits<24, 13>
{
    static constexpr long_t flops           = 291;
    static constexpr long_t operations      = 228;
    static constexpr long_t memory_accesses = 70;
    static constexpr long_t stack_vars      = 155;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 13 -name c2cb
 * -standalone */

/*
 * This function contains 228 FP additions, 63 FP multiplications,
 * (or, 165 additions, 0 multiplications, 63 fused multiply/add),
 * 155 stack variables, 3 constants, and 70 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 13>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1I, T1J, T2r, T2w, T2l, T1Q, T2y, T2z, T1N, T2m, T2X, T1H,
            T2Y, T2W, T20;
        SIMD_FLOAT T1Y, T1K, T2k, T2x, T2P, T1R, T1Z;
        {
            SIMD_FLOAT Tt, T2N, Tw, T2U, TA, T2M, T2q, T8, Tx, Th, T2T, T21, T5,
                T2G, T2p;
            SIMD_FLOAT T2v, T2u, T2H, T2R, T11, T22, Te, T1h, Tr, T2g, To, T12,
                T2Q, T2L, T25;
            SIMD_FLOAT T1k, TD, TW, T1u, T1L, TU, T15, T1P, T2d, T1f, TE, TF,
                T2a, T1c, TI;
            SIMD_FLOAT T1W, T1p, TJ, T1A, T1S, T2c, T1t, T1, T2n, T2s, Tf, Tg,
                Ta, T4, Tb;
            SIMD_FLOAT T2o, Tc, Tu, Tv, Ty, Tz, T2, T3, T6, T7, T23, TZ, T1V,
                T1g, T2I;
            SIMD_FLOAT T2h, TX, TK, T2O, T1v, T1T, T2e, T2b, T24, TH, TG;
            Tt  = ii[WS(is, 18)];
            Tu  = ii[WS(is, 2)];
            Tv  = ii[WS(is, 10)];
            T2N = ri[WS(is, 18)];
            Ty  = ri[WS(is, 10)];
            Tz  = ri[WS(is, 2)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            T2n = ii[0];
            T6  = ii[WS(is, 8)];
            T7  = ii[WS(is, 16)];
            T2s = ii[WS(is, 12)];
            Tf  = ii[WS(is, 20)];
            Tw  = Tu + Tv;
            T2U = Tu - Tv;
            Tg  = ii[WS(is, 4)];
            TA  = Ty - Tz;
            T2M = Ty + Tz;
            Ta  = ri[WS(is, 12)];
            T4  = T2 + T3;
            T2q = T3 - T2;
            Tb  = ri[WS(is, 20)];
            T8  = T6 - T7;
            T2o = T6 + T7;
            Tc  = ri[WS(is, 4)];
            {
                SIMD_FLOAT Tk, T2K, Tp, Tq, Tn, TM, TN, TO, TR, TS, T2t, Tl, Tm,
                    Td, T1w;
                SIMD_FLOAT T1i, T14, TP, T1j, T1m, TT, T1n, T2J, T18, T1r, T19,
                    T1a, TQ, T1z, T13;
                SIMD_FLOAT T1x, T1o, T1d, T1e, T1b, T1l, T1y, T1s;
                Tk  = ii[WS(is, 6)];
                Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
                T2t = Tf + Tg;
                Th  = Tf - Tg;
                T2T = SIMD_FNMADD(KP500000000, T2M, T2N);
                Tl  = ii[WS(is, 14)];
                Tm  = ii[WS(is, 22)];
                T21 = T1 + T4;
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T2K = ri[WS(is, 6)];
                T2G = T2o + T2n;
                T2p = SIMD_FNMADD(KP500000000, T2o, T2n);
                Td  = Tb + Tc;
                T2v = Tc - Tb;
                Tp  = ri[WS(is, 22)];
                T2u = SIMD_FNMADD(KP500000000, T2t, T2s);
                T2H = T2t + T2s;
                Tq  = ri[WS(is, 14)];
                Tn  = Tl + Tm;
                T2R = Tl - Tm;
                TM  = ri[WS(is, 9)];
                T11 = ii[WS(is, 9)];
                TN  = ri[WS(is, 1)];
                TO  = ri[WS(is, 17)];
                TR  = ii[WS(is, 17)];
                T22 = Ta + Td;
                Te  = SIMD_FNMADD(KP500000000, Td, Ta);
                TS  = ii[WS(is, 1)];
                T1h = ri[WS(is, 15)];
                Tr  = Tp - Tq;
                T2J = Tp + Tq;
                T2g = Tk + Tn;
                To  = SIMD_FNMADD(KP500000000, Tn, Tk);
                T1w = ii[WS(is, 15)];
                T1i = ri[WS(is, 23)];
                T14 = TN - TO;
                TP  = TN + TO;
                T1j = ri[WS(is, 7)];
                T1m = ii[WS(is, 23)];
                T12 = TR + TS;
                TT  = TR - TS;
                T1n = ii[WS(is, 7)];
                T2Q = SIMD_FNMADD(KP500000000, T2J, T2K);
                T2L = T2J + T2K;
                T18 = ri[WS(is, 3)];
                T1r = ii[WS(is, 3)];
                T19 = ri[WS(is, 11)];
                T1a = ri[WS(is, 19)];
                T25 = TM + TP;
                TQ  = SIMD_FNMADD(KP500000000, TP, TM);
                T1k = T1i + T1j;
                T1z = T1j - T1i;
                T13 = SIMD_FNMADD(KP500000000, T12, T11);
                T1x = T1m + T1n;
                T1o = T1m - T1n;
                T1d = ii[WS(is, 11)];
                T1e = ii[WS(is, 19)];
                TD  = ri[WS(is, 21)];
                TW  = ii[WS(is, 21)];
                T1u = T1a - T19;
                T1b = T19 + T1a;
                T1L = SIMD_FMADD(KP866025403, TT, TQ);
                TU  = SIMD_FNMADD(KP866025403, TT, TQ);
                T1l = SIMD_FNMADD(KP500000000, T1k, T1h);
                T15 = SIMD_FNMADD(KP866025403, T14, T13);
                T1P = SIMD_FMADD(KP866025403, T14, T13);
                T2d = T1x + T1w;
                T1y = SIMD_FNMADD(KP500000000, T1x, T1w);
                T1f = T1d - T1e;
                T1s = T1d + T1e;
                TE  = ri[WS(is, 13)];
                TF  = ri[WS(is, 5)];
                T2a = T18 + T1b;
                T1c = SIMD_FNMADD(KP500000000, T1b, T18);
                TI  = ii[WS(is, 5)];
                T1W = SIMD_FMADD(KP866025403, T1o, T1l);
                T1p = SIMD_FNMADD(KP866025403, T1o, T1l);
                TJ  = ii[WS(is, 13)];
                T1A = SIMD_FNMADD(KP866025403, T1z, T1y);
                T1S = SIMD_FMADD(KP866025403, T1z, T1y);
                T2c = T1s + T1r;
                T1t = SIMD_FNMADD(KP500000000, T1s, T1r);
            }
            T23 = T21 - T22;
            TZ  = TE - TF;
            TG  = TE + TF;
            T1V = SIMD_FMADD(KP866025403, T1f, T1c);
            T1g = SIMD_FNMADD(KP866025403, T1f, T1c);
            T2I = T2G - T2H;
            T2h = T2g - (Tt + Tw);
            TX  = TI + TJ;
            TK  = TI - TJ;
            T2O = T2L - (T2M + T2N);
            T1v = SIMD_FNMADD(KP866025403, T1u, T1t);
            T1T = SIMD_FMADD(KP866025403, T1u, T1t);
            T2e = T2c - T2d;
            T2b = T2a - (T1h + T1k);
            T24 = TD + TG;
            TH  = SIMD_FNMADD(KP500000000, TG, TD);
            {
                SIMD_FLOAT T1q, T2A, T1F, T1G, T2S, T2V, T2j, T2f, T1M, TL, T33,
                    Tj, T1O, T34, T32;
                SIMD_FLOAT TC, T2E, T1B, T2B, T2C, TV, T16, T2F, T2i, T29, T9,
                    Ti, TY, T27, T30;
                SIMD_FLOAT T31, T26, T10, T28, Ts, TB, T1X, T1C, T1E, T2D, T2Z,
                    T1D, T17, T1U;
                T1q = T1g - T1p;
                T2A = T1g + T1p;
                T9  = SIMD_FNMADD(KP866025403, T8, T5);
                T1F = SIMD_FMADD(KP866025403, T8, T5);
                T1G = SIMD_FMADD(KP866025403, Th, Te);
                Ti  = SIMD_FNMADD(KP866025403, Th, Te);
                TY  = SIMD_FNMADD(KP500000000, TX, TW);
                T27 = TX + TW;
                T30 = SIMD_FNMADD(KP866025403, T2R, T2Q);
                T2S = SIMD_FMADD(KP866025403, T2R, T2Q);
                T2V = SIMD_FMADD(KP866025403, T2U, T2T);
                T31 = SIMD_FNMADD(KP866025403, T2U, T2T);
                Ts  = SIMD_FNMADD(KP866025403, Tr, To);
                T1I = SIMD_FMADD(KP866025403, Tr, To);
                T1J = SIMD_FMADD(KP866025403, TA, Tx);
                TB  = SIMD_FNMADD(KP866025403, TA, Tx);
                T2j = T2b + T2e;
                T2f = T2b - T2e;
                T1M = SIMD_FMADD(KP866025403, TK, TH);
                TL  = SIMD_FNMADD(KP866025403, TK, TH);
                T26 = T24 - T25;
                io[WS(os, 5)] =
                    T24 + T25 + T2G + T2H - (T1h + T1k) - T2a - (Tt + Tw) - T2g;
                T33           = T9 + Ti;
                Tj            = T9 - Ti;
                T1O           = SIMD_FMADD(KP866025403, TZ, TY);
                T10           = SIMD_FNMADD(KP866025403, TZ, TY);
                T28           = T27 - (T12 + T11);
                ro[WS(os, 5)] = T21 + T22 + T2c + T2d - (T2M + T2N) - T2L -
                                (T12 + T11) - T27;
                T34           = T30 + T31;
                T32           = T30 - T31;
                TC            = Ts - TB;
                T2E           = Ts + TB;
                T1B           = T1v - T1A;
                T2B           = SIMD_FNMADD(KP866025403, T2q, T2p);
                T2r           = SIMD_FMADD(KP866025403, T2q, T2p);
                T2w           = SIMD_FMADD(KP866025403, T2v, T2u);
                T2C           = SIMD_FNMADD(KP866025403, T2v, T2u);
                TV            = TL - TU;
                T16           = T10 - T15;
                T2F           = T10 + T15;
                T2i           = T28 - T26;
                T29           = T26 + T28;
                ro[WS(os, 7)] = T33 + T34 - T2A - (TL + TU);
                T2l           = T1O + T1P;
                T1Q           = T1O - T1P;
                T1X           = T1V - T1W;
                T2y           = T1V + T1W;
                T2z           = T1M + T1L;
                T1N           = T1L - T1M;
                T1C           = T1q + T1B;
                T1E           = T1B - T1q;
                T2D           = T2B + T2C;
                T2Z           = T2B - T2C;
                ro[WS(os, 1)] = T33 + T2F - T34 - (T1v + T1A);
                ro[WS(os, 8)] = T23 + SIMD_FMADD(KP707106781, T2i - T2j, T2h);
                io[WS(os, 2)] = SIMD_FMADD(KP707106781, T2i + T2j, T2I) + T2O;
                io[WS(os, 8)] = SIMD_FMADD(KP707106781, T2f, T2I) -
                                (SIMD_FMADD(KP707106781, T29, T2O));
                ro[WS(os, 2)]  = SIMD_FMADD(KP707106781, T29 + T2f, T23) - T2h;
                T1D            = TV + T16;
                T17            = TV - T16;
                T2m            = T1T + T1S;
                T1U            = T1S - T1T;
                io[WS(os, 7)]  = T2E + T2D - (T1v + T1A) - T2F;
                io[WS(os, 1)]  = T2A + T2D - (TL + TU) - T2E;
                ro[WS(os, 10)] = SIMD_FMADD(KP707106781, T1D, Tj) -
                                 (SIMD_FMADD(KP707106781, T1E, TC));
                io[WS(os, 4)]  = SIMD_FMADD(KP707106781, T1D + T1E, T2Z) - T32;
                io[WS(os, 10)] = SIMD_FMADD(KP707106781, T1C - T17, T2Z) + T32;
                ro[WS(os, 4)]  = Tj + SIMD_FMADD(KP707106781, T17 + T1C, TC);
                T2X            = T1F + T1G;
                T1H            = T1F - T1G;
                T2Y            = T2S + T2V;
                T2W            = T2S - T2V;
                T20            = T1X + T1U;
                T1Y            = T1U - T1X;
            }
        }
        T1K           = T1I - T1J;
        T2k           = T1I + T1J;
        ro[WS(os, 9)] = T2X + T2l - (T2m + T2Y);
        ro[WS(os, 3)] = T2X + T2z + T2y + T2Y;
        T2x           = T2r + T2w;
        T2P           = T2r - T2w;
        T1R           = T1N + T1Q;
        T1Z           = T1N - T1Q;
        io[WS(os, 9)] = T2y + T2x - (T2k + T2z);
        io[WS(os, 3)] = T2k + T2l + T2m + T2x;
        ro[WS(os, 6)] = SIMD_FMADD(KP707106781, T1Z, T1H) -
                        (SIMD_FMADD(KP707106781, T20, T1K));
        io[0]         = SIMD_FMADD(KP707106781, T1Z + T20, T2P) - T2W;
        io[WS(os, 6)] = SIMD_FMADD(KP707106781, T1Y - T1R, T2P) + T2W;
        ro[0]         = T1H + SIMD_FMADD(KP707106781, T1R + T1Y, T1K);
    }
}

template <>
struct c2cb_traits<24, 14>
{
    static constexpr long_t flops           = 281;
    static constexpr long_t operations      = 220;
    static constexpr long_t memory_accesses = 68;
    static constexpr long_t stack_vars      = 151;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 14 -name c2cb
 * -standalone */

/*
 * This function contains 220 FP additions, 61 FP multiplications,
 * (or, 159 additions, 0 multiplications, 61 fused multiply/add),
 * 151 stack variables, 3 constants, and 68 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 14>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1r, T2v, T1o, T2z, T1n, T1k, T1l, T1t, T1u, T2y, T1V, T1q,
            T2w, T1W, T1S;
        SIMD_FLOAT T1T, T1m, T1v, T1X, T1U, T1s, T2A, T2C, T1p, T2x, T2B;
        {
            SIMD_FLOAT Tv, T1M, Ty, T1P, T17, T1N, T1z, TG, T14, TL, T1O, TD,
                T5, T2E, T1y;
            SIMD_FLOAT T1E, T1D, T2F, T1K, T23, TI, Ta, Tz, T12, TZ, Tu, T24,
                T2R, T1J, T29;
            SIMD_FLOAT Tk, TC, T2h, TW, Tb, T1Y, T2c, T1j, Tc, TT, T27, T2g,
                T2N, Td, TR;
            SIMD_FLOAT T2a, T1b, T1c, Tp, TO, T1, T1w, T1B, TJ, TK, T6, T4, T7,
                T1x, T8;
            SIMD_FLOAT Tw, Tx, T15, T16, T2, T3, TE, TF, T2G, TX, T2Q, T2i, T2D,
                T21, Te;
            SIMD_FLOAT T2b, T2M, T1Z, T1d, TS, T2S, T2L;
            Tv  = ri[WS(is, 18)];
            Tw  = ri[WS(is, 2)];
            Tx  = ri[WS(is, 10)];
            T1M = ii[WS(is, 18)];
            T15 = ii[WS(is, 2)];
            T16 = ii[WS(is, 10)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            T1w = ii[0];
            TE  = ii[WS(is, 8)];
            TF  = ii[WS(is, 16)];
            T1B = ii[WS(is, 12)];
            TJ  = ii[WS(is, 20)];
            Ty  = Tw + Tx;
            T1P = Tx - Tw;
            TK  = ii[WS(is, 4)];
            T17 = T15 - T16;
            T1N = T15 + T16;
            T6  = ri[WS(is, 12)];
            T4  = T2 + T3;
            T1z = T3 - T2;
            T7  = ri[WS(is, 20)];
            TG  = TE - TF;
            T1x = TE + TF;
            T8  = ri[WS(is, 4)];
            {
                SIMD_FLOAT Tq, T1H, T10, T11, Tt, Tg, Th, Ti, T1g, T1h, T1C, Tr,
                    Ts, T9, T2e;
                SIMD_FLOAT TA, T26, Tj, TB, TU, T1i, TV, T1I, Tl, Tm, Tn, T1f,
                    T25, T2f, TP;
                SIMD_FLOAT TQ, To;
                Tq  = ri[WS(is, 6)];
                T14 = SIMD_FNMADD(KP500000000, Ty, Tv);
                T1C = TJ + TK;
                TL  = TJ - TK;
                T1O = SIMD_FNMADD(KP500000000, T1N, T1M);
                Tr  = ri[WS(is, 14)];
                Ts  = ri[WS(is, 22)];
                TD  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = T1 + T4;
                T1H = ii[WS(is, 6)];
                T2E = T1x + T1w;
                T1y = SIMD_FNMADD(KP500000000, T1x, T1w);
                T9  = T7 + T8;
                T1E = T8 - T7;
                T10 = ii[WS(is, 14)];
                T1D = SIMD_FNMADD(KP500000000, T1C, T1B);
                T2F = T1C + T1B;
                T11 = ii[WS(is, 22)];
                Tt  = Tr + Ts;
                T1K = Ts - Tr;
                Tg  = ii[WS(is, 15)];
                T23 = ri[WS(is, 15)];
                Th  = ii[WS(is, 23)];
                Ti  = ii[WS(is, 7)];
                T1g = ri[WS(is, 7)];
                TI  = SIMD_FNMADD(KP500000000, T9, T6);
                Ta  = T6 + T9;
                T1h = ri[WS(is, 23)];
                Tz  = ii[WS(is, 9)];
                T12 = T10 - T11;
                T1I = T10 + T11;
                TZ  = SIMD_FNMADD(KP500000000, Tt, Tq);
                Tu  = Tq + Tt;
                T2e = ri[WS(is, 9)];
                TA  = ii[WS(is, 17)];
                T26 = Th - Ti;
                Tj  = Th + Ti;
                TB  = ii[WS(is, 1)];
                TU  = ri[WS(is, 1)];
                T24 = T1g + T1h;
                T1i = T1g - T1h;
                TV  = ri[WS(is, 17)];
                T2R = T1I + T1H;
                T1J = SIMD_FNMADD(KP500000000, T1I, T1H);
                Tl  = ii[WS(is, 21)];
                T29 = ri[WS(is, 21)];
                Tm  = ii[WS(is, 5)];
                Tn  = ii[WS(is, 13)];
                Tk  = Tg + Tj;
                T1f = SIMD_FNMADD(KP500000000, Tj, Tg);
                TC  = TA + TB;
                T2h = TA - TB;
                T25 = SIMD_FNMADD(KP500000000, T24, T23);
                T2f = TU + TV;
                TW  = TU - TV;
                TP  = ri[WS(is, 13)];
                TQ  = ri[WS(is, 5)];
                Tb  = ii[WS(is, 3)];
                T1Y = ri[WS(is, 3)];
                T2c = Tm - Tn;
                To  = Tm + Tn;
                T1j = SIMD_FNMADD(KP866025403, T1i, T1f);
                T1r = SIMD_FMADD(KP866025403, T1i, T1f);
                Tc  = ii[WS(is, 11)];
                TT  = SIMD_FNMADD(KP500000000, TC, Tz);
                T2v = SIMD_FMADD(KP866025403, T26, T25);
                T27 = SIMD_FNMADD(KP866025403, T26, T25);
                T2g = SIMD_FNMADD(KP500000000, T2f, T2e);
                T2N = T2f + T2e;
                Td  = ii[WS(is, 19)];
                TR  = TP - TQ;
                T2a = TP + TQ;
                T1b = ri[WS(is, 19)];
                T1c = ri[WS(is, 11)];
                Tp  = Tl + To;
                TO  = SIMD_FNMADD(KP500000000, To, Tl);
            }
            T2G = T2E - T2F;
            TX  = SIMD_FNMADD(KP866025403, TW, TT);
            T1o = SIMD_FMADD(KP866025403, TW, TT);
            T2Q = T5 - Ta;
            T2i = SIMD_FNMADD(KP866025403, T2h, T2g);
            T2z = SIMD_FMADD(KP866025403, T2h, T2g);
            T2D = Tu - (Tv + Ty);
            T21 = Tc - Td;
            Te  = Tc + Td;
            T2b = SIMD_FNMADD(KP500000000, T2a, T29);
            T2M = T2a + T29;
            T1Z = T1b + T1c;
            T1d = T1b - T1c;
            TS  = SIMD_FNMADD(KP866025403, TR, TO);
            T1n = SIMD_FMADD(KP866025403, TR, TO);
            T2S = T2R - (T1N + T1M);
            T2L = Tp - (Tz + TC);
            {
                SIMD_FLOAT T2d, TY, T2p, T1L, T2r, TN, T2j, T19, T1e, T2H, T2o,
                    T2U, T2P, T22, T2J;
                SIMD_FLOAT T1Q, T1A, T1F, T2l, TH, TM, T13, T18, Tf, T1a, T2O,
                    T2I, T20, T2q, T2u;
                SIMD_FLOAT T2s, T2k, T2t, T2n, T2m, T28, T2T, T2K, T1R, T1G;
                T1k = SIMD_FMADD(KP866025403, TG, TD);
                TH  = SIMD_FNMADD(KP866025403, TG, TD);
                TM  = SIMD_FNMADD(KP866025403, TL, TI);
                T1l = SIMD_FMADD(KP866025403, TL, TI);
                T1t = SIMD_FMADD(KP866025403, T12, TZ);
                T13 = SIMD_FNMADD(KP866025403, T12, TZ);
                T18 = SIMD_FNMADD(KP866025403, T17, T14);
                T1u = SIMD_FMADD(KP866025403, T17, T14);
                Tf  = Tb + Te;
                T1a = SIMD_FNMADD(KP500000000, Te, Tb);
                T2y = SIMD_FMADD(KP866025403, T2c, T2b);
                T2d = SIMD_FNMADD(KP866025403, T2c, T2b);
                T2O = T2M - T2N;
                T2I = T1Z + T1Y;
                T20 = SIMD_FNMADD(KP500000000, T1Z, T1Y);
                TY  = TS + TX;
                T2p = TS - TX;
                T1V = SIMD_FMADD(KP866025403, T1K, T1J);
                T1L = SIMD_FNMADD(KP866025403, T1K, T1J);
                T2r = TH - TM;
                TN  = TH + TM;
                T2j = T13 - T18;
                T19 = T13 + T18;
                T1e = SIMD_FNMADD(KP866025403, T1d, T1a);
                T1q = SIMD_FMADD(KP866025403, T1d, T1a);
                T2H = Tf - Tk;
                ro[WS(os, 4)] =
                    T5 + Ta + Tf + Tk - (Tp + Tu) - (Tv + Ty) - (Tz + TC);
                T2o           = T2d - T2i;
                T2U           = T2L + T2O;
                T2P           = T2L - T2O;
                T22           = SIMD_FNMADD(KP866025403, T21, T20);
                T2w           = SIMD_FMADD(KP866025403, T21, T20);
                T2J           = T2I - (T24 + T23);
                io[WS(os, 4)] = T2E + T2F + T2M + T2N - (T24 + T23) - T2I -
                                (T1N + T1M) - T2R;
                T1W           = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Q           = SIMD_FNMADD(KP866025403, T1P, T1O);
                T1A           = SIMD_FNMADD(KP866025403, T1z, T1y);
                T1S           = SIMD_FMADD(KP866025403, T1z, T1y);
                T1T           = SIMD_FMADD(KP866025403, T1E, T1D);
                T1F           = SIMD_FNMADD(KP866025403, T1E, T1D);
                T2l           = T1e - T1j;
                ro[0]         = TN + TY - T19 - (T1e + T1j);
                T2q           = T2o - T2p;
                T2u           = T2p + T2o;
                T2m           = T22 - T27;
                T28           = T22 + T27;
                T2T           = T2J - T2H;
                T2K           = T2H + T2J;
                T2s           = T1L - T1Q;
                T1R           = T1L + T1Q;
                T2k           = T1A - T1F;
                T1G           = T1A + T1F;
                T1m           = T1k + T1l;
                T2t           = T2l - T2m;
                T2n           = T2l + T2m;
                ro[WS(os, 6)] = TN + T19 - (T2d + T2i) - T28;
                io[WS(os, 7)] = SIMD_FMADD(KP707106781, T2T, T2G) -
                                (SIMD_FMADD(KP707106781, T2U, T2D));
                ro[WS(os, 1)] = SIMD_FMADD(KP707106781, T2T + T2U, T2Q) - T2S;
                ro[WS(os, 7)] = T2Q + SIMD_FMADD(KP707106781, T2P - T2K, T2S);
                io[WS(os, 1)] = T2D + SIMD_FMADD(KP707106781, T2K + T2P, T2G);
                io[WS(os, 6)] = T1G + T1R - (T1e + T1j) - TY;
                io[0]         = T1G + T28 - (T2d + T2i) - T1R;
                T1v           = T1t + T1u;
                io[WS(os, 3)] = SIMD_FMADD(KP707106781, T2t + T2u, T2k) - T2j;
                ro[WS(os, 9)] = SIMD_FMADD(KP707106781, T2u, T2r) -
                                (SIMD_FMADD(KP707106781, T2t, T2s));
                ro[WS(os, 3)] = T2r + SIMD_FMADD(KP707106781, T2n + T2q, T2s);
                io[WS(os, 9)] = T2j + SIMD_FMADD(KP707106781, T2n - T2q, T2k);
                T1X           = T1V + T1W;
            }
        }
        T1U           = T1S + T1T;
        T1s           = T1q + T1r;
        T2A           = T1r + T2y - (T1q + T2z);
        T2C           = T2y + T2z;
        T1p           = T1n + T1o;
        T2x           = T1o + T2v - (T1n + T2w);
        T2B           = T2w + T2v;
        io[WS(os, 2)] = T1p + T1s + T1U + T1X;
        ro[WS(os, 8)] = T1m + T1p - (T1s + T1v);
        ro[WS(os, 5)] = T1k + SIMD_FMADD(KP707106781, T2x, T1W) -
                        (T1l + SIMD_FMADD(KP707106781, T2A, T1V));
        io[WS(os, 5)] =
            T1t + SIMD_FMADD(KP707106781, T2x + T2A, T1S) - (T1u + T1T);
        ro[WS(os, 2)] = T1m + T1v + T2B + T2C;
        io[WS(os, 8)] = T1U + T2B - (T1X + T2C);
    }
}

template <>
struct c2cb_traits<24, 15>
{
    static constexpr long_t flops           = 281;
    static constexpr long_t operations      = 216;
    static constexpr long_t memory_accesses = 66;
    static constexpr long_t stack_vars      = 131;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 15 -name c2cb
 * -standalone */

/*
 * This function contains 216 FP additions, 65 FP multiplications,
 * (or, 151 additions, 0 multiplications, 65 fused multiply/add),
 * 131 stack variables, 3 constants, and 66 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 15>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2p, T2r, T2f, T2g, T2c, T2B, T2l, T2E, T26, T29, T2a, T2i,
            T2b, T2h, T2G;
        SIMD_FLOAT T2j, T2F, T2d, T2m, T27, T2e, T2q, T2k, T28, T2o, T2n;
        {
            SIMD_FLOAT Th, TO, TZ, T2x, Tk, T1P, T1q, TR, T1V, T2D, T12, T1U,
                T2w, T1I, T1j;
            SIMD_FLOAT T1O, Tv, T1F, T1k, T2C, T21, TH, T1p, T1u, T1t, T5, T2A,
                T1D, T20, T1a;
            SIMD_FLOAT T1x, Ty, TJ, TY, T1A, T2z, T2v, TK, T24, T23, T1f, TL,
                Tc, Tm, Td;
            SIMD_FLOAT Te, Tn, T1h, TB, To, Ta, T1w, T2s, T1n, TM, T13, T2y,
                T1M, Tf;
            {
                SIMD_FLOAT TD, TE, TF, T1, T2, T3, Ti, Tj, TP, TQ, Tr, Ts, Tt,
                    T10, T11;
                SIMD_FLOAT T1G, T1H, Tu, T16, TU, TV, T4, TW, T2u, T1B, T1C,
                    T19, TG, T17, T18;
                SIMD_FLOAT T1b, TX, T2t, T6, T7, T8, T1e, T1c, T1d, Tz, TA, T9;
                Th  = ri[WS(is, 15)];
                Ti  = ri[WS(is, 23)];
                Tj  = ri[WS(is, 7)];
                TO  = ii[WS(is, 9)];
                TP  = ii[WS(is, 17)];
                TQ  = ii[WS(is, 1)];
                Tr  = ii[WS(is, 15)];
                Ts  = ii[WS(is, 23)];
                Tt  = ii[WS(is, 7)];
                TZ  = ii[WS(is, 18)];
                T10 = ii[WS(is, 2)];
                T11 = ii[WS(is, 10)];
                T2x = ri[WS(is, 18)];
                T1G = ri[WS(is, 10)];
                Tk  = Ti + Tj;
                T1P = Tj - Ti;
                T1H = ri[WS(is, 2)];
                T1q = TP - TQ;
                TR  = TP + TQ;
                TD  = ri[WS(is, 9)];
                Tu  = Ts + Tt;
                T1V = Ts - Tt;
                TE  = ri[WS(is, 17)];
                T2D = T10 - T11;
                T12 = T10 + T11;
                TF  = ri[WS(is, 1)];
                T1  = ri[0];
                T1U = SIMD_FNMADD(KP500000000, Tk, Th);
                T2w = T1G + T1H;
                T1I = T1G - T1H;
                T1j = SIMD_FNMADD(KP500000000, TR, TO);
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1O = SIMD_FNMADD(KP500000000, Tu, Tr);
                Tv  = Tr + Tu;
                T16 = ii[0];
                T1F = SIMD_FNMADD(KP500000000, T12, TZ);
                T1k = TF - TE;
                TG  = TE + TF;
                T17 = ii[WS(is, 8)];
                T18 = ii[WS(is, 16)];
                T2C = SIMD_FNMADD(KP500000000, T2w, T2x);
                TU  = ii[WS(is, 6)];
                TV  = ii[WS(is, 14)];
                T4  = T2 + T3;
                T21 = T3 - T2;
                TW  = ii[WS(is, 22)];
                T2u = ri[WS(is, 6)];
                T1B = ri[WS(is, 22)];
                T1C = ri[WS(is, 14)];
                TH  = TD + TG;
                T1p = SIMD_FNMADD(KP500000000, TG, TD);
                T19 = T17 + T18;
                T1u = T17 - T18;
                T1b = ii[WS(is, 12)];
                T1c = ii[WS(is, 20)];
                T1d = ii[WS(is, 4)];
                T1t = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = T1 + T4;
                T2A = TV - TW;
                TX  = TV + TW;
                T1D = T1B - T1C;
                T2t = T1B + T1C;
                T6  = ri[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T20 = SIMD_FNMADD(KP500000000, T19, T16);
                T1a = T16 + T19;
                T8  = ri[WS(is, 4)];
                T1e = T1c + T1d;
                T1x = T1c - T1d;
                Ty  = ri[WS(is, 21)];
                TJ  = ii[WS(is, 21)];
                TY  = TU + TX;
                T1A = SIMD_FNMADD(KP500000000, TX, TU);
                T2z = SIMD_FNMADD(KP500000000, T2t, T2u);
                T2v = T2t + T2u;
                Tz  = ri[WS(is, 5)];
                TA  = ri[WS(is, 13)];
                TK  = ii[WS(is, 5)];
                T24 = T8 - T7;
                T9  = T7 + T8;
                T23 = SIMD_FNMADD(KP500000000, T1e, T1b);
                T1f = T1b + T1e;
                TL  = ii[WS(is, 13)];
                Tc  = ri[WS(is, 3)];
                Tm  = ii[WS(is, 3)];
                Td  = ri[WS(is, 11)];
                Te  = ri[WS(is, 19)];
                Tn  = ii[WS(is, 11)];
                T1h = TA - Tz;
                TB  = Tz + TA;
                To  = ii[WS(is, 19)];
                Ta  = T6 + T9;
                T1w = SIMD_FNMADD(KP500000000, T9, T6);
            }
            T2s = T1a - T1f;
            T1n = TK - TL;
            TM  = TK + TL;
            T13 = TY - (TZ + T12);
            T2y = T2v - (T2w + T2x);
            T1M = Te - Td;
            Tf  = Td + Te;
            {
                SIMD_FLOAT Tb, T1E, T1J, T1z, T1i, T1K, Tl, T22, T25, T1N, Tw,
                    T1l, T14, TT, T2K;
                SIMD_FLOAT T1W, T1r, T1v, T1y, T1o, T2I, T2J, T1T, TN, TI, T1L,
                    Tq, TS, TC, T1m;
                SIMD_FLOAT Tp, T1S, T1g, Tg, T1R, T2H, T1Q, T15, Tx, T1Z, T1s,
                    T1X, T1Y;
                T1v = SIMD_FNMADD(KP866025403, T1u, T1t);
                T2p = SIMD_FMADD(KP866025403, T1u, T1t);
                TC  = Ty + TB;
                T1m = SIMD_FNMADD(KP500000000, TB, Ty);
                Tp  = Tn + To;
                T1S = Tn - To;
                Tb  = T5 - Ta;
                T1y = SIMD_FNMADD(KP866025403, T1x, T1w);
                T2r = SIMD_FMADD(KP866025403, T1x, T1w);
                TN  = TJ + TM;
                T1g = SIMD_FNMADD(KP500000000, TM, TJ);
                T2f = SIMD_FMADD(KP866025403, T1D, T1A);
                T1E = SIMD_FNMADD(KP866025403, T1D, T1A);
                T1J = SIMD_FNMADD(KP866025403, T1I, T1F);
                T2g = SIMD_FMADD(KP866025403, T1I, T1F);
                Tg  = Tc + Tf;
                T1R = SIMD_FNMADD(KP500000000, Tf, Tc);
                T2c = SIMD_FMADD(KP866025403, T1n, T1m);
                T1o = SIMD_FNMADD(KP866025403, T1n, T1m);
                TI  = TC - TH;
                T2B = SIMD_FMADD(KP866025403, T2A, T2z);
                T2I = SIMD_FNMADD(KP866025403, T2A, T2z);
                T1L = SIMD_FNMADD(KP500000000, Tp, Tm);
                Tq  = Tm + Tp;
                T1z = T1v - T1y;
                T2l = SIMD_FMADD(KP866025403, T1h, T1g);
                T1i = SIMD_FNMADD(KP866025403, T1h, T1g);
                TS  = TN - (TO + TR);
                T2E = SIMD_FMADD(KP866025403, T2D, T2C);
                T2J = SIMD_FNMADD(KP866025403, T2D, T2C);
                T1K = T1E - T1J;
                T26 = SIMD_FMADD(KP866025403, T1S, T1R);
                T1T = SIMD_FNMADD(KP866025403, T1S, T1R);
                Tl  = Tg - (Th + Tk);
                io[WS(os, 3)] =
                    TC + TH + T1a + T1f - (TZ + T12) - TY - (Th + Tk) - Tg;
                T22 = SIMD_FNMADD(KP866025403, T21, T20);
                T29 = SIMD_FMADD(KP866025403, T21, T20);
                T2a = SIMD_FMADD(KP866025403, T24, T23);
                T25 = SIMD_FNMADD(KP866025403, T24, T23);
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T2i = SIMD_FMADD(KP866025403, T1M, T1L);
                Tw  = Tq - Tv;
                ro[WS(os, 3)] =
                    T5 + Ta + Tq + Tv - (T2w + T2x) - T2v - (TO + TR) - TN;
                T1l           = T1i - (SIMD_FNMADD(KP866025403, T1k, T1j));
                T14           = TS - TI;
                TT            = TI + TS;
                T2K           = T2I - T2J;
                T1W           = T1T - (SIMD_FNMADD(KP866025403, T1V, T1U));
                T1r           = T1o - (SIMD_FNMADD(KP866025403, T1q, T1p));
                ro[WS(os, 5)] = T1v + T1y + T2I + T2J -
                                (SIMD_FNMADD(KP866025403, T1q, T1p)) - T1o -
                                (SIMD_FNMADD(KP866025403, T1V, T1U)) - T1T;
                T2H           = T22 - T25;
                io[WS(os, 5)] = T22 + T25 + T1E + T1J -
                                (SIMD_FNMADD(KP866025403, T1k, T1j)) - T1i -
                                (SIMD_FNMADD(KP866025403, T1P, T1O)) - T1N;
                T1Q           = T1N - (SIMD_FNMADD(KP866025403, T1P, T1O));
                T15           = Tl + Tw;
                Tx            = Tl - Tw;
                T1Z           = T1r - T1l;
                T1s           = T1l + T1r;
                T1X           = T1Q - T1W;
                T1Y           = T1W + T1Q;
                ro[WS(os, 6)] = SIMD_FMADD(KP707106781, T14 - T15, Tb) + T13;
                io[0]         = SIMD_FMADD(KP707106781, T15 + T14, T2s) + T2y;
                io[WS(os, 6)] = SIMD_FMADD(KP707106781, Tx, T2s) -
                                (SIMD_FMADD(KP707106781, TT, T2y));
                ro[0]         = SIMD_FMADD(KP707106781, Tx + TT, Tb) - T13;
                T2b           = T29 + T2a;
                T2h           = T2f + T2g;
                T2G           = T2B + T2E;
                T2j           = SIMD_FMADD(KP866025403, T1P, T1O);
                T2F           = T2p + T2r;
                ro[WS(os, 2)] = SIMD_FMADD(KP707106781, T1Y + T1Z, T1z) + T1K;
                io[WS(os, 8)] = SIMD_FMADD(KP707106781, T1Y - T1Z, T2H) + T2K;
                io[WS(os, 2)] = SIMD_FMADD(KP707106781, T1X + T1s, T2H) - T2K;
                ro[WS(os, 8)] = SIMD_FMADD(KP707106781, T1s, T1z) -
                                (SIMD_FMADD(KP707106781, T1X, T1K));
                T2d = SIMD_FMADD(KP866025403, T1q, T1p);
                T2m = SIMD_FMADD(KP866025403, T1k, T1j);
                T27 = SIMD_FMADD(KP866025403, T1V, T1U);
            }
        }
        T2e           = T2c + T2d;
        T2q           = T2j + T2c - (T2i + T2d);
        T2k           = T2i + T2j;
        T28           = T26 + T27;
        T2o           = T27 + T2m - (T26 + T2l);
        T2n           = T2l + T2m;
        ro[WS(os, 1)] = T28 + T2e + T2F + T2G;
        io[WS(os, 7)] = T28 + T2b - (T2e + T2h);
        ro[WS(os, 4)] = SIMD_FMADD(KP707106781, T2o, T2p) + T2g -
                        (SIMD_FMADD(KP707106781, T2q, T2r) + T2f);
        io[WS(os, 4)] =
            SIMD_FMADD(KP707106781, T2o + T2q, T29) + T2B - (T2a + T2E);
        io[WS(os, 1)] = T2k + T2n + T2b + T2h;
        ro[WS(os, 7)] = T2n + T2F - (T2k + T2G);
    }
}

template <>
struct c2cb_traits<24, 16>
{
    static constexpr long_t flops           = 271;
    static constexpr long_t operations      = 208;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 163;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 16 -name c2cb
 * -standalone */

/*
 * This function contains 208 FP additions, 63 FP multiplications,
 * (or, 145 additions, 0 multiplications, 63 fused multiply/add),
 * 163 stack variables, 3 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 16>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T9, Ti, Ts, TL, T2t, TB, T1L, T1I, T1B, T2n, T1E, T23, T14,
            T2q, T2x;
        SIMD_FLOAT T26, T2e, T2r, Tj, T2u, TC, T1d, T2m, T2s, T1M, TU, T1F, T2w,
            T1e, T2v;
        SIMD_FLOAT T2z, TV, T2y, T2A;
        {
            SIMD_FLOAT T1A, T8, Tk, T1D, Th, T5, T1N, T1H, T1p, T1z, Te, T1O,
                T1y, T1s, T1C;
            SIMD_FLOAT T1K, Tn, T20, Tx, T1V, Tr, To, TA, T1x, T1c, T1Z, T1J,
                T1w, T2k, TD;
            SIMD_FLOAT T1G, T1Q, TT, T2j, T1m, T19, T2c, TW, T1X, T1U, T2b, TX,
                TG, T29, TK;
            SIMD_FLOAT T1P, TY, T11, TQ, T1t, T12, TH, T1R, T28, TZ, T2h, T13,
                T1W, T1f, T1g;
            SIMD_FLOAT T1h, T1j, T2a, T1i, T2o, T10, T1l, T2p, T1Y, T2g, T24,
                T25, T27, T2d, T2f;
            SIMD_FLOAT T2l, T1k, T21, T2i, T22;
            {
                SIMD_FLOAT T1r, Tt, Tl, T1q, Tm, T1v, Tw, Tp, Tq, T1, T2, T3,
                    T1o, T6, T7;
                SIMD_FLOAT Ta, Tb, Tc, Tf, Tg, Tu, T4, Tv, T1n, Td, Ty, Tz, T1a,
                    T1b, T1u;
                SIMD_FLOAT T15, T16, T17, T1T, TR, TS, TM, TN, T18, TO, T1S, TE,
                    TF, TI, TJ;
                SIMD_FLOAT TP;
                T1  = ri[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1o = ii[0];
                T6  = ii[WS(is, 8)];
                T7  = ii[WS(is, 16)];
                Ta  = ri[WS(is, 12)];
                Tb  = ri[WS(is, 20)];
                Tc  = ri[WS(is, 4)];
                T1r = ii[WS(is, 12)];
                Tf  = ii[WS(is, 20)];
                Tg  = ii[WS(is, 4)];
                Tt  = ri[WS(is, 18)];
                Tu  = ri[WS(is, 2)];
                T4  = T2 + T3;
                T1A = T3 - T2;
                Tv  = ri[WS(is, 10)];
                T8  = T6 - T7;
                T1n = T6 + T7;
                Tk  = ri[WS(is, 6)];
                Td  = Tb + Tc;
                T1D = Tc - Tb;
                Tl  = ri[WS(is, 14)];
                Th  = Tf - Tg;
                T1q = Tf + Tg;
                Tm  = ri[WS(is, 22)];
                T1v = ii[WS(is, 6)];
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T1N = T1 + T4;
                Tw  = Tu + Tv;
                T1H = Tv - Tu;
                T1p = T1n + T1o;
                T1z = SIMD_FNMADD(KP500000000, T1n, T1o);
                Tp  = ii[WS(is, 14)];
                Tq  = ii[WS(is, 22)];
                Te  = SIMD_FNMADD(KP500000000, Td, Ta);
                T1O = Ta + Td;
                T1y = ii[WS(is, 18)];
                Ty  = ii[WS(is, 2)];
                T1s = T1q + T1r;
                T1C = SIMD_FNMADD(KP500000000, T1q, T1r);
                T1K = Tm - Tl;
                Tn  = Tl + Tm;
                Tz  = ii[WS(is, 10)];
                T20 = ii[WS(is, 9)];
                Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
                T1V = Tt + Tw;
                T1a = ii[WS(is, 17)];
                T1b = ii[WS(is, 1)];
                T1u = Tp + Tq;
                Tr  = Tp - Tq;
                T15 = ri[WS(is, 9)];
                T16 = ri[WS(is, 17)];
                T17 = ri[WS(is, 1)];
                T1T = ii[WS(is, 15)];
                To  = SIMD_FNMADD(KP500000000, Tn, Tk);
                TA  = Ty - Tz;
                T1x = Ty + Tz;
                TR  = ii[WS(is, 23)];
                TS  = ii[WS(is, 7)];
                T1c = T1a - T1b;
                T1Z = T1a + T1b;
                T1J = SIMD_FNMADD(KP500000000, T1u, T1v);
                T1w = T1u + T1v;
                TM  = ri[WS(is, 15)];
                TN  = ri[WS(is, 23)];
                T18 = T16 + T17;
                T2k = T17 - T16;
                TO  = ri[WS(is, 7)];
                TD  = ri[WS(is, 3)];
                T1G = SIMD_FNMADD(KP500000000, T1x, T1y);
                T1Q = ii[WS(is, 3)];
                T1S = TR + TS;
                TT  = TR - TS;
                T2j = SIMD_FNMADD(KP500000000, T1Z, T20);
                TE  = ri[WS(is, 11)];
                TF  = ri[WS(is, 19)];
                TI  = ii[WS(is, 11)];
                TJ  = ii[WS(is, 19)];
                T1m = T15 + T18;
                T19 = SIMD_FNMADD(KP500000000, T18, T15);
                T2c = TO - TN;
                TP  = TN + TO;
                TW  = ri[WS(is, 21)];
                T1X = ii[WS(is, 21)];
                T1U = T1S + T1T;
                T2b = SIMD_FNMADD(KP500000000, T1S, T1T);
                TX  = ri[WS(is, 5)];
                TG  = TE + TF;
                T29 = TF - TE;
                TK  = TI - TJ;
                T1P = TI + TJ;
                TY  = ri[WS(is, 13)];
                T11 = ii[WS(is, 5)];
                TQ  = SIMD_FNMADD(KP500000000, TP, TM);
                T1t = TM + TP;
                T12 = ii[WS(is, 13)];
            }
            TH  = SIMD_FNMADD(KP500000000, TG, TD);
            T1R = T1P + T1Q;
            T28 = SIMD_FNMADD(KP500000000, T1P, T1Q);
            TZ  = TX + TY;
            T2h = TY - TX;
            T13 = T11 - T12;
            T1W = T11 + T12;
            T9  = SIMD_FMADD(KP866025403, T8, T5);
            T1f = SIMD_FNMADD(KP866025403, T8, T5);
            T1g = SIMD_FNMADD(KP866025403, Th, Te);
            Ti  = SIMD_FMADD(KP866025403, Th, Te);
            Ts  = SIMD_FMADD(KP866025403, Tr, To);
            T1h = SIMD_FNMADD(KP866025403, Tr, To);
            T1j = SIMD_FNMADD(KP866025403, TK, TH);
            TL  = SIMD_FMADD(KP866025403, TK, TH);
            T2t = SIMD_FMADD(KP866025403, T29, T28);
            T2a = SIMD_FNMADD(KP866025403, T29, T28);
            T1i = SIMD_FNMADD(KP866025403, TA, Tx);
            TB  = SIMD_FMADD(KP866025403, TA, Tx);
            T1L = SIMD_FMADD(KP866025403, T1K, T1J);
            T2o = SIMD_FNMADD(KP866025403, T1K, T1J);
            T10 = SIMD_FNMADD(KP500000000, TZ, TW);
            T1l = TW + TZ;
            T2p = SIMD_FNMADD(KP866025403, T1H, T1G);
            T1I = SIMD_FMADD(KP866025403, T1H, T1G);
            T1Y = T1W + T1X;
            T2g = SIMD_FNMADD(KP500000000, T1W, T1X);
            T1B = SIMD_FMADD(KP866025403, T1A, T1z);
            T24 = SIMD_FNMADD(KP866025403, T1A, T1z);
            T2n = T1f - T1g;
            T1E = SIMD_FMADD(KP866025403, T1D, T1C);
            T25 = SIMD_FNMADD(KP866025403, T1D, T1C);
            T27 = T1j - (SIMD_FNMADD(KP866025403, TT, TQ));
            T2d = T2a - (SIMD_FNMADD(KP866025403, T2c, T2b));
            T23 = T1h - T1i;
            T1k = SIMD_FNMADD(KP866025403, T13, T10);
            T14 = SIMD_FMADD(KP866025403, T13, T10);
            io[WS(os, 2)] =
                T1l + T1m + T1p + T1s - (T1t + T1w) - (T1x + T1y) - (TD + TG);
            T21 = T1m + T1U - (T1l + T1R);
            T2q = T2o - T2p;
            T2i = SIMD_FNMADD(KP866025403, T2h, T2g);
            T2x = SIMD_FMADD(KP866025403, T2h, T2g);
            ro[WS(os, 2)] =
                T1N + T1O + T1R + T1U - (T1V + T1Y) - (T1Z + T20) - (Tk + Tn);
            T22           = T1t + T1Y - (T1Z + T20) - (TD + TG);
            T26           = T24 - T25;
            T2e           = T27 + T2d;
            T2r           = T2d - T27;
            ro[WS(os, 4)] = T1f + T1g + T1h + T1i -
                            (SIMD_FNMADD(KP866025403, T1c, T19)) - (T1j + T1k) -
                            (SIMD_FNMADD(KP866025403, TT, TQ));
            T2f           = T1k - (SIMD_FNMADD(KP866025403, T1c, T19));
            io[WS(os, 4)] = T24 + T25 + T2p + T2o - T2i -
                            (SIMD_FNMADD(KP866025403, T2k, T2j)) -
                            (SIMD_FNMADD(KP866025403, T2c, T2b)) - T2a;
            T2l           = T2i - (SIMD_FNMADD(KP866025403, T2k, T2j));
            ro[WS(os, 5)] = T1N + SIMD_FMADD(KP707106781, T21 + T22, T1w) -
                            (T1x + T1y) - T1O;
            io[WS(os, 5)] = T1V + SIMD_FMADD(KP707106781, T21, T1p) -
                            (SIMD_FMADD(KP707106781, T22, T1s)) - (Tk + Tn);
            Tj  = T9 + Ti;
            T2u = SIMD_FMADD(KP866025403, T2c, T2b);
            TC  = Ts + TB;
            T1d = SIMD_FMADD(KP866025403, T1c, T19);
            T2m = T2f - T2l;
            T2s = T2f + T2l;
            T1M = T1I + T1L;
            TU  = SIMD_FMADD(KP866025403, TT, TQ);
            T1F = T1B + T1E;
            T2w = SIMD_FMADD(KP866025403, T2k, T2j);
        }
        T1e           = T14 + T1d;
        T2v           = T1d + T2t - (T14 + T2u);
        T2z           = T2t + T2u;
        io[WS(os, 1)] = SIMD_FMADD(KP707106781, T2r + T2s, T26) - T23;
        ro[WS(os, 7)] = SIMD_FMADD(KP707106781, T2s, T2n) -
                        (SIMD_FMADD(KP707106781, T2r, T2q));
        ro[WS(os, 1)] = T2n + SIMD_FMADD(KP707106781, T2e + T2m, T2q);
        io[WS(os, 7)] = T23 + SIMD_FMADD(KP707106781, T2e - T2m, T26);
        TV            = TL + TU;
        T2y           = TU + T2w - (TL + T2x);
        T2A           = T2w + T2x;
        io[WS(os, 6)] = TV + T1F - (T1e + T1M);
        ro[0]         = Tj + TC + TV + T1e;
        ro[WS(os, 3)] =
            T9 + SIMD_FMADD(KP707106781, T2v + T2y, T1I) - (Ti + T1L);
        io[WS(os, 3)] = Ts + SIMD_FMADD(KP707106781, T2y, T1B) -
                        (TB + SIMD_FMADD(KP707106781, T2v, T1E));
        ro[WS(os, 6)] = Tj + T2A - (TC + T2z);
        io[0]         = T1F + T1M + T2z + T2A;
    }
}

template <>
struct c2cb_traits<24, 17>
{
    static constexpr long_t flops           = 271;
    static constexpr long_t operations      = 205;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 152;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 17 -name c2cb
 * -standalone */

/*
 * This function contains 205 FP additions, 66 FP multiplications,
 * (or, 139 additions, 0 multiplications, 66 fused multiply/add),
 * 152 stack variables, 3 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 17>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1p, T1m, T2j, T2k, T17, T18, T1C, T1z, T1S, T27, T29, T2g,
            T1v, T1T, T1U;
        SIMD_FLOAT T22, T28, T16, T1X, T1q, T1R, T1l, T1D, T1w, T1J, T13, T2o,
            T19, T2l, T1L;
        SIMD_FLOAT T1K, T1M, T1a;
        {
            SIMD_FLOAT T2c, T21, T1e, TJ, T2f, T2d, TP, T1b, T5, T1u, T2a, T20,
                Ta, T2e, T12;
            SIMD_FLOAT TI, T2p, TS, T1j, TK, T26, T1r, Te, T2b, T25, Tw, TX,
                T1g, T1F, T11;
            SIMD_FLOAT Tk, T1B, TN, Tq, TE, T1I, Td, Tr, Ts, T1A, Tp, T1y, Tz,
                TB, T1E;
            SIMD_FLOAT TC, Tf, T15, T1V, TA, T1H, T1Q, T1G, TZ, TD, T1W, TY, Tu,
                T1x, Tt;
            SIMD_FLOAT T1f, T2m, T1k, TF, T14, T10, Tv, T1N, T1O, T2n, T1P, TO;
            {
                SIMD_FLOAT T1, T1Y, T6, T2h, T1s, T4, T1t, T1Z, T9, TG, TH, T2,
                    T3, T1c, T1d;
                SIMD_FLOAT T7, T8, T1n, T1o, T23, T1h, T1i, TT, TU, TV, T2i, TQ,
                    TR, Tg, To;
                SIMD_FLOAT T24, Tl, TW, Tm, TL, Tj, TM, Th, Ti, Tb, Tc, Tx, Tn,
                    Ty;
                T1  = ri[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1Y = ii[0];
                T1c = ii[WS(is, 8)];
                T1d = ii[WS(is, 16)];
                T6  = ii[WS(is, 6)];
                T7  = ii[WS(is, 14)];
                T8  = ii[WS(is, 22)];
                T2c = ri[WS(is, 6)];
                T1n = ri[WS(is, 14)];
                T1o = ri[WS(is, 22)];
                T2h = ri[WS(is, 18)];
                T1s = ri[WS(is, 10)];
                T4  = T2 + T3;
                T21 = T3 - T2;
                T1t = ri[WS(is, 2)];
                T1e = T1c - T1d;
                T1Z = T1c + T1d;
                TJ  = ii[WS(is, 9)];
                T9  = T7 + T8;
                T2f = T7 - T8;
                TG  = ii[WS(is, 17)];
                T1p = T1n - T1o;
                T2d = T1n + T1o;
                TH  = ii[WS(is, 1)];
                TP  = ii[WS(is, 18)];
                T1b = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = T1 + T4;
                T2i = T1s + T1t;
                T1u = T1s - T1t;
                T2a = T1Z + T1Y;
                T20 = SIMD_FNMADD(KP500000000, T1Z, T1Y);
                TQ  = ii[WS(is, 2)];
                TR  = ii[WS(is, 10)];
                T1m = SIMD_FNMADD(KP500000000, T9, T6);
                Ta  = T6 + T9;
                T23 = ii[WS(is, 12)];
                T1h = ii[WS(is, 20)];
                T2e = SIMD_FNMADD(KP500000000, T2d, T2c);
                T12 = TG - TH;
                TI  = TG + TH;
                T1i = ii[WS(is, 4)];
                TT  = ri[WS(is, 12)];
                T2j = SIMD_FNMADD(KP500000000, T2i, T2h);
                T2p = T2i + T2h;
                TU  = ri[WS(is, 20)];
                TV  = ri[WS(is, 4)];
                TS  = TQ + TR;
                T2k = TR - TQ;
                Tg  = ri[WS(is, 9)];
                Th  = ri[WS(is, 17)];
                Ti  = ri[WS(is, 1)];
                To  = ii[WS(is, 3)];
                T17 = SIMD_FNMADD(KP500000000, TI, TJ);
                T1j = T1h - T1i;
                T24 = T1h + T1i;
                TK  = ri[WS(is, 3)];
                Tl  = ii[WS(is, 11)];
                T26 = TV - TU;
                TW  = TU + TV;
                T1r = SIMD_FNMADD(KP500000000, TS, TP);
                Tm  = ii[WS(is, 19)];
                TL  = ri[WS(is, 11)];
                Tj  = Th + Ti;
                T18 = Ti - Th;
                TM  = ri[WS(is, 19)];
                Te  = ii[WS(is, 15)];
                T2b = T24 + T23;
                T25 = SIMD_FNMADD(KP500000000, T24, T23);
                Tw  = ri[WS(is, 15)];
                Tb  = ii[WS(is, 23)];
                Tc  = ii[WS(is, 7)];
                TX  = TT + TW;
                T1g = SIMD_FNMADD(KP500000000, TW, TT);
                Tx  = ri[WS(is, 23)];
                Tn  = Tl + Tm;
                T1F = Tl - Tm;
                Ty  = ri[WS(is, 7)];
                T11 = SIMD_FNMADD(KP500000000, Tj, Tg);
                Tk  = Tg + Tj;
                T1B = TM - TL;
                TN  = TL + TM;
                Tq  = ri[WS(is, 21)];
                TE  = ii[WS(is, 21)];
                T1I = Tb - Tc;
                Td  = Tb + Tc;
                Tr  = ri[WS(is, 5)];
                Ts  = ri[WS(is, 13)];
                T1A = SIMD_FMSUB(KP500000000, Tn, To);
                Tp  = Tn + To;
                T1y = Ty - Tx;
                Tz  = Tx + Ty;
                TB  = ii[WS(is, 5)];
                T1E = SIMD_FNMADD(KP500000000, TN, TK);
                TC  = ii[WS(is, 13)];
            }
            Tf  = Td + Te;
            T1x = SIMD_FMSUB(KP500000000, Td, Te);
            Tt  = Tr + Ts;
            T15 = Ts - Tr;
            T1V = SIMD_FNMADD(KP866025403, T1B, T1A);
            T1C = SIMD_FMADD(KP866025403, T1B, T1A);
            TA  = Tw + Tz;
            T1H = SIMD_FNMADD(KP500000000, Tz, Tw);
            T1Q = SIMD_FMADD(KP866025403, T1F, T1E);
            T1G = SIMD_FNMADD(KP866025403, T1F, T1E);
            TZ  = TB - TC;
            TD  = TB + TC;
            T1W = SIMD_FNMADD(KP866025403, T1y, T1x);
            T1z = SIMD_FMADD(KP866025403, T1y, T1x);
            TY  = SIMD_FNMADD(KP500000000, Tt, Tq);
            Tu  = Tq + Tt;
            T1S = SIMD_FMADD(KP866025403, T1e, T1b);
            T1f = SIMD_FNMADD(KP866025403, T1e, T1b);
            T27 = SIMD_FNMADD(KP866025403, T26, T25);
            T29 = SIMD_FMADD(KP866025403, T26, T25);
            T2g = SIMD_FMADD(KP866025403, T2f, T2e);
            T2m = SIMD_FNMADD(KP866025403, T2f, T2e);
            T1v = SIMD_FNMADD(KP866025403, T1u, T1r);
            T1T = SIMD_FMADD(KP866025403, T1u, T1r);
            T1U = SIMD_FMADD(KP866025403, T1j, T1g);
            T1k = SIMD_FNMADD(KP866025403, T1j, T1g);
            TF  = TD + TE;
            T14 = SIMD_FNMADD(KP500000000, TD, TE);
            T22 = SIMD_FNMADD(KP866025403, T21, T20);
            T28 = SIMD_FMADD(KP866025403, T21, T20);
            T10 = SIMD_FNMADD(KP866025403, TZ, TY);
            io[WS(os, 1)] =
                Tk + Tu + T2a + T2b - (TP + TS) - (TK + TN) - TA - Ta;
            Tv  = Tf + Tk - (Tp + Tu);
            T1N = SIMD_FMADD(KP866025403, T1I, T1H);
            T1O = SIMD_FMADD(KP866025403, T18, T17);
            T16 = SIMD_FNMADD(KP866025403, T15, T14);
            T1P = SIMD_FMADD(KP866025403, T15, T14);
            ro[WS(os, 1)] =
                T5 + Tf + Tp + TX - T2p - (T2d + T2c) - (TI + TJ) - TF;
            TO  = (TA + TF) - (TI + TJ) - (TK + TN);
            T1X = T1V - (SIMD_FMADD(KP866025403, T12, T11)) -
                  (T1W - (SIMD_FMADD(KP866025403, TZ, TY)));
            T1q           = SIMD_FMADD(KP866025403, T1p, T1m);
            io[WS(os, 5)] = T1N + T1Q + T28 + T29 - T1T -
                            (SIMD_FNMADD(KP866025403, T1p, T1m)) -
                            (SIMD_FMADD(KP866025403, T12, T11)) -
                            (SIMD_FMADD(KP866025403, TZ, TY));
            T2n           = SIMD_FMADD(KP866025403, T2k, T2j);
            ro[WS(os, 5)] = T1W + T1P + T1V + T1O + T1S + T1U -
                            (SIMD_FNMADD(KP866025403, T2k, T2j)) - T2g;
            T1R           = T1N + T1O - (T1P + T1Q);
            io[WS(os, 4)] = SIMD_FMADD(KP707106781, Tv, T2a) + T2p -
                            (T2d + T2c) - (SIMD_FMADD(KP707106781, TO, T2b));
            ro[WS(os, 4)] =
                T5 + SIMD_FMADD(KP707106781, Tv + TO, Ta) - (TP + TS) - TX;
            T1l           = T1f - T1k;
            T1D           = T1z - T1C;
            T1w           = T1q - T1v;
            T1J           = T1G - (SIMD_FNMADD(KP866025403, T1I, T1H));
            T13           = T10 - (SIMD_FNMADD(KP866025403, T12, T11));
            T2o           = T2m - T2n;
            T19           = T16 - (SIMD_FNMADD(KP866025403, T18, T17));
            ro[WS(os, 3)] = T1f + T1k + T2m + T2n -
                            (SIMD_FNMADD(KP866025403, T12, T11)) - T1G - T10 -
                            (SIMD_FNMADD(KP866025403, T1I, T1H));
        }
        io[WS(os, 3)] = T1z + T1C + T1q + T1v + T22 + T27 -
                        (SIMD_FNMADD(KP866025403, T18, T17)) - T16;
        T2l           = T22 - T27;
        io[WS(os, 2)] = SIMD_FMADD(KP707106781, T1X + T1R, T28) + T2g -
                        (SIMD_FNMADD(KP866025403, T2k, T2j)) - T29;
        ro[WS(os, 2)] = SIMD_FMADD(KP707106781, T1R, T1S) + T1T -
                        (SIMD_FNMADD(KP866025403, T1p, T1m)) -
                        (SIMD_FMADD(KP707106781, T1X, T1U));
        T1L           = T1D + T1J;
        T1K           = T1D - T1J;
        T1M           = T13 - T19;
        T1a           = T13 + T19;
        ro[0]         = SIMD_FMADD(KP707106781, T1L + T1M, T1l) + T1w;
        io[WS(os, 6)] = SIMD_FMADD(KP707106781, T1L - T1M, T2l) + T2o;
        io[0]         = SIMD_FMADD(KP707106781, T1K + T1a, T2l) - T2o;
        ro[WS(os, 6)] = SIMD_FMADD(KP707106781, T1a, T1l) -
                        (SIMD_FMADD(KP707106781, T1K, T1w));
    }
}

template <>
struct c2cb_traits<24, 18>
{
    static constexpr long_t flops           = 263;
    static constexpr long_t operations      = 198;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 141;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 18 -name c2cb
 * -standalone */

/*
 * This function contains 198 FP additions, 65 FP multiplications,
 * (or, 133 additions, 0 multiplications, 65 fused multiply/add),
 * 141 stack variables, 3 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 18>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T19, T16, T24, T1s, T10, T1r, TX, T23, T2d, T1j, T1t, T1U,
            T1o, T2e, T1e;
        SIMD_FLOAT T1T, T1S, TM, TH, T1R, T1y, T27, TR, T2b, T28, T15, T25, TW,
            T2a, T26;
        SIMD_FLOAT T29, T2c;
        {
            SIMD_FLOAT T1i, TG, T1u, T1n, TL, Tv, TD, T5, T1x, T1B, T1h, TI, Ta,
                T1C, T1m;
            SIMD_FLOAT T1v, Tz, Tp, Ty, T1J, T1w, T1d, TC, TN, T1K, Tq, T1L,
                T1W, T1a, T1D;
            SIMD_FLOAT T1V, TV, T1M, Tk, T1Y, Tt, Tb, T1E, TQ, Tc, T1I, T1X, Td,
                T1N, T14;
            SIMD_FLOAT Tu, TS, T1F, T21, Te, T1O, T20, Tf, T11, T1Q, T1z, T22,
                T1Z, T1A, T1P;
            {
                SIMD_FLOAT Tl, To, Tw, Tx, T1p, T1b, T1c, T1, T2, T3, T1f, TE,
                    TF, T6, T7;
                SIMD_FLOAT T8, T1k, TJ, TK, Tm, T4, Tn, T1g, T9, T17, T1l, T18,
                    Tg, T1q, Th;
                SIMD_FLOAT Ti, T1G, TT, TU, TA, TB, TY, TZ, Tr, Tj, Ts, TO, TP,
                    T1H, T12;
                SIMD_FLOAT T13;
                T1  = ri[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                T1f = ii[0];
                TE  = ii[WS(is, 8)];
                TF  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                T1k = ii[WS(is, 12)];
                TJ  = ii[WS(is, 20)];
                TK  = ii[WS(is, 4)];
                Tl  = ri[WS(is, 18)];
                Tm  = ri[WS(is, 2)];
                T4  = T2 + T3;
                T1i = T3 - T2;
                Tn  = ri[WS(is, 10)];
                TG  = TE - TF;
                T1g = TE + TF;
                T1u = ii[WS(is, 18)];
                T9  = T7 + T8;
                T1n = T8 - T7;
                T17 = ii[WS(is, 10)];
                TL  = TJ - TK;
                T1l = TJ + TK;
                T18 = ii[WS(is, 2)];
                Tv  = ii[WS(is, 21)];
                TD  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = T1 + T4;
                To  = Tm + Tn;
                T1x = Tn - Tm;
                T1B = T1f + T1g;
                T1h = SIMD_FNMADD(KP500000000, T1g, T1f);
                Tw  = ii[WS(is, 5)];
                Tx  = ii[WS(is, 13)];
                TI  = SIMD_FNMADD(KP500000000, T9, T6);
                Ta  = T6 + T9;
                T1p = ii[WS(is, 6)];
                T1b = ii[WS(is, 14)];
                T1C = T1k + T1l;
                T1m = SIMD_FNMADD(KP500000000, T1l, T1k);
                T19 = T17 - T18;
                T1v = T18 + T17;
                T1c = ii[WS(is, 22)];
                Tz  = ri[WS(is, 6)];
                T16 = SIMD_FNMADD(KP500000000, To, Tl);
                Tp  = Tl + To;
                TA  = ri[WS(is, 14)];
                TB  = ri[WS(is, 22)];
                Ty  = Tw + Tx;
                T24 = Tw - Tx;
                T1J = ri[WS(is, 15)];
                TY  = ri[WS(is, 7)];
                TZ  = ri[WS(is, 23)];
                Tg  = ii[WS(is, 15)];
                T1w = SIMD_FNMADD(KP500000000, T1v, T1u);
                T1d = T1b - T1c;
                T1q = T1b + T1c;
                Th  = ii[WS(is, 23)];
                Ti  = ii[WS(is, 7)];
                T1s = TA - TB;
                TC  = TA + TB;
                TN  = SIMD_FNMADD(KP500000000, Ty, Tv);
                T1G = ri[WS(is, 9)];
                TT  = ri[WS(is, 1)];
                T1K = TZ + TY;
                T10 = TY - TZ;
                TU  = ri[WS(is, 17)];
                Tq  = ii[WS(is, 9)];
                T1L = T1p + T1q;
                T1r = SIMD_FNMADD(KP500000000, T1q, T1p);
                Tr  = ii[WS(is, 17)];
                Tj  = Th + Ti;
                T1W = Th - Ti;
                T1a = SIMD_FNMADD(KP500000000, TC, Tz);
                Ts  = ii[WS(is, 1)];
                T1D = ri[WS(is, 21)];
                TO  = ri[WS(is, 13)];
                TP  = ri[WS(is, 5)];
                T1V = SIMD_FNMADD(KP500000000, T1K, T1J);
                T1H = TU + TT;
                TV  = TT - TU;
                T1M = ri[WS(is, 3)];
                T12 = ri[WS(is, 11)];
                T13 = ri[WS(is, 19)];
                TX  = SIMD_FNMADD(KP500000000, Tj, Tg);
                Tk  = Tg + Tj;
                T1Y = Ts - Tr;
                Tt  = Tr + Ts;
                Tb  = ii[WS(is, 3)];
                T1E = TP + TO;
                TQ  = TO - TP;
                Tc  = ii[WS(is, 11)];
                T1I = T1G + T1H;
                T1X = SIMD_FNMADD(KP500000000, T1H, T1G);
                Td  = ii[WS(is, 19)];
                T1N = T12 + T13;
                T14 = T12 - T13;
            }
            Tu  = Tq + Tt;
            TS  = SIMD_FNMADD(KP500000000, Tt, Tq);
            T1F = T1D + T1E;
            T23 = SIMD_FNMADD(KP500000000, T1E, T1D);
            T21 = Tc - Td;
            Te  = Tc + Td;
            T1O = T1M + T1N;
            T20 = SIMD_FNMADD(KP500000000, T1N, T1M);
            T2d = SIMD_FMADD(KP866025403, T1i, T1h);
            T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
            T1t = SIMD_FMADD(KP866025403, T1s, T1r);
            T1U = SIMD_FMADD(KP866025403, T19, T16);
            T1o = SIMD_FNMADD(KP866025403, T1n, T1m);
            T2e = SIMD_FMADD(KP866025403, T1n, T1m);
            T1e = SIMD_FMADD(KP866025403, T1d, T1a);
            T1T = SIMD_FNMADD(KP866025403, T1d, T1a);
            T1S = SIMD_FNMADD(KP866025403, TL, TI);
            TM  = SIMD_FMADD(KP866025403, TL, TI);
            TH  = SIMD_FMADD(KP866025403, TG, TD);
            T1R = SIMD_FNMADD(KP866025403, TG, TD);
            T1y = SIMD_FNMADD(KP866025403, T1x, T1w);
            T27 = SIMD_FMADD(KP866025403, T1x, T1w);
            Tf  = Tb + Te;
            T11 = SIMD_FNMADD(KP500000000, Te, Tb);
            T1Q = Tu + T1O - (T1J + T1K) - (Tv + Ty);
            io[0] =
                T1B + T1C + T1F + T1I - (T1J + T1K) - (T1L + T1O) - (T1u + T1v);
            TR    = SIMD_FMADD(KP866025403, TQ, TN);
            T1z   = SIMD_FNMADD(KP866025403, TQ, TN);
            T22   = SIMD_FNMADD(KP866025403, T21, T20);
            T2b   = SIMD_FMADD(KP866025403, T21, T20);
            T28   = SIMD_FNMADD(KP866025403, T1Y, T1X);
            T1Z   = SIMD_FMADD(KP866025403, T1Y, T1X);
            T15   = SIMD_FNMADD(KP866025403, T14, T11);
            T1A   = SIMD_FMADD(KP866025403, T14, T11);
            ro[0] = T5 + Ta + Tf + Tk - (Tp + Tu) - (Tv + Ty) - (Tz + TC);
            T1P   = Tk + T1I - (Tf + T1F);
            T25   = T1z + T22 - (SIMD_FNMADD(KP866025403, T1W, T1V)) -
                  (SIMD_FNMADD(KP866025403, TV, TS));
            ro[WS(os, 2)] = T1R + T1S + T1T + T1U -
                            (SIMD_FNMADD(KP866025403, T1W, T1V)) - (T1Z + T22) -
                            (SIMD_FNMADD(KP866025403, T24, T23));
            TW            = SIMD_FMADD(KP866025403, TV, TS);
            T2a           = SIMD_FMADD(KP866025403, T1W, T1V);
            io[WS(os, 2)] = T1j + T1o + T1t + T1y -
                            (SIMD_FNMADD(KP866025403, T10, TX)) - (T1z + T1A) -
                            (SIMD_FNMADD(KP866025403, TV, TS));
            T26 = T1Z + T1A - (SIMD_FNMADD(KP866025403, T10, TX)) -
                  (SIMD_FNMADD(KP866025403, T24, T23));
            io[WS(os, 3)] =
                Tp + SIMD_FMADD(KP707106781, T1P + T1Q, T1B) - T1C - (Tz + TC);
            ro[WS(os, 3)] = T5 + SIMD_FMADD(KP707106781, T1P, T1L) -
                            (SIMD_FMADD(KP707106781, T1Q, Ta)) - (T1u + T1v);
        }
        T29 = (T28 + T15) - (SIMD_FMADD(KP866025403, T10, TX)) -
              (SIMD_FMADD(KP866025403, T24, T23));
        ro[WS(os, 4)] = TH + TM + TR + TW - (SIMD_FMADD(KP866025403, T10, TX)) -
                        T15 - (SIMD_FNMADD(KP866025403, T19, T16)) - T1e;
        io[WS(os, 4)] = T2d + T2e + T2b + T2a - T28 -
                        (SIMD_FMADD(KP866025403, T24, T23)) - T27 -
                        (SIMD_FNMADD(KP866025403, T1s, T1r));
        T2c = TW + T2a - (TR + T2b);
        io[WS(os, 5)] =
            T1j + SIMD_FMADD(KP707106781, T26 + T25, T1T) - (T1o + T1U);
        ro[WS(os, 5)] = T1R + SIMD_FMADD(KP707106781, T25, T1y) -
                        (T1S + SIMD_FMADD(KP707106781, T26, T1t));
        io[WS(os, 1)] = T2d + SIMD_FMADD(KP707106781, T2c, T1e) -
                        (SIMD_FMADD(KP707106781, T29, T2e)) -
                        (SIMD_FNMADD(KP866025403, T19, T16));
        ro[WS(os, 1)] = TH + SIMD_FMADD(KP707106781, T29 + T2c, T27) -
                        (SIMD_FNMADD(KP866025403, T1s, T1r)) - TM;
    }
}

template <>
struct c2cb_traits<24, 19>
{
    static constexpr long_t flops           = 245;
    static constexpr long_t operations      = 180;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 129;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 19 -name c2cb
 * -standalone */

/*
 * This function contains 180 FP additions, 65 FP multiplications,
 * (or, 115 additions, 0 multiplications, 65 fused multiply/add),
 * 129 stack variables, 3 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 19>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1t, T1j, T1q, T1i, T1h, T16, T15, T1g, T18, T17, T20, TT,
            T1v, T1W, T21;
        SIMD_FLOAT T1K, T1Q, T11, T1D, T1Z, T14, T1E, T1x, T1f, T1A, T1y, TY,
            T1w, T1z, T1c;
        SIMD_FLOAT T22, T1F, T1C, T1p, T1u, T1B, T1P, T1R, T19, T1k;
        {
            SIMD_FLOAT T1, T1G, T5, T1S, Tc, T4, T1J, TS, T1H, Tw, T8, T1V, T1T,
                Td, TP;
            SIMD_FLOAT Tb, T1I, Tx, T1U, T10, Ts, Te, TZ, Tl, T1e, Tz, Tf, T13,
                Tv, Ti;
            SIMD_FLOAT T12, Ty, TC, TL, T1d, To, T1b, T1X, TF, TK, TM, TN, T1L,
                TJ, T1m;
            SIMD_FLOAT T1Y, TX, T1n, T1a, Tj, Tk, Tt, Tu, T2, T3, TQ, TR, T6,
                T7, T1r;
            SIMD_FLOAT T1s, T9, Ta, Tq, Tr, Tm, Tn, TD, TE, Tg, Th, TA, TB, TH,
                TI;
            SIMD_FLOAT TV, TW, Tp, TG, TO, T1O, T1M, T1o, T1l, TU, T1N;
            T1            = ri[0];
            T2            = ri[WS(is, 8)];
            T3            = ri[WS(is, 16)];
            T1G           = ii[0];
            TQ            = ii[WS(is, 8)];
            TR            = ii[WS(is, 16)];
            T5            = ii[WS(is, 6)];
            T6            = ii[WS(is, 14)];
            T7            = ii[WS(is, 22)];
            T1S           = ri[WS(is, 6)];
            T1r           = ri[WS(is, 14)];
            T1s           = ri[WS(is, 22)];
            Tc            = ii[WS(is, 15)];
            T9            = ii[WS(is, 23)];
            T4            = T2 + T3;
            T1J           = T3 - T2;
            Ta            = ii[WS(is, 7)];
            TS            = TQ - TR;
            T1H           = TQ + TR;
            Tw            = ri[WS(is, 15)];
            T8            = T6 + T7;
            T1V           = T6 - T7;
            Tq            = ri[WS(is, 7)];
            T1t           = T1r - T1s;
            T1T           = T1s + T1r;
            Tr            = ri[WS(is, 23)];
            Td            = ri[WS(is, 21)];
            TP            = SIMD_FNMADD(KP500000000, T4, T1);
            Tb            = T9 + Ta;
            T1j           = T9 - Ta;
            T1I           = SIMD_FNMADD(KP500000000, T1H, T1G);
            Tj            = ri[WS(is, 5)];
            Tk            = ri[WS(is, 13)];
            T1q           = SIMD_FNMADD(KP500000000, T8, T5);
            Tx            = ii[WS(is, 21)];
            Tt            = ii[WS(is, 5)];
            T1U           = SIMD_FNMADD(KP500000000, T1T, T1S);
            T10           = Tr - Tq;
            Ts            = Tq + Tr;
            Tu            = ii[WS(is, 13)];
            Te            = ri[WS(is, 9)];
            TZ            = SIMD_FNMADD(KP500000000, Tb, Tc);
            Tg            = ri[WS(is, 17)];
            Th            = ri[WS(is, 1)];
            Tl            = Tj + Tk;
            T1e           = Tk - Tj;
            Tz            = ii[WS(is, 9)];
            TA            = ii[WS(is, 17)];
            TB            = ii[WS(is, 1)];
            Tf            = ii[WS(is, 3)];
            T1i           = SIMD_FNMADD(KP500000000, Ts, Tw);
            T13           = Tu - Tt;
            Tv            = Tt + Tu;
            Tm            = ii[WS(is, 11)];
            Tn            = ii[WS(is, 19)];
            T1h           = Th - Tg;
            Ti            = Tg + Th;
            T12           = SIMD_FNMADD(KP500000000, Tl, Td);
            Ty            = ri[WS(is, 3)];
            TD            = ri[WS(is, 19)];
            TC            = TA + TB;
            T16           = TA - TB;
            TE            = ri[WS(is, 11)];
            TL            = ii[WS(is, 18)];
            T1d           = SIMD_FNMADD(KP500000000, Tv, Tx);
            TH            = ii[WS(is, 2)];
            To            = Tm + Tn;
            T1b           = Tm - Tn;
            T15           = SIMD_FNMADD(KP500000000, Ti, Te);
            TI            = ii[WS(is, 10)];
            T1X           = ri[WS(is, 18)];
            TV            = ri[WS(is, 10)];
            TW            = ri[WS(is, 2)];
            T1g           = SIMD_FNMADD(KP500000000, TC, Tz);
            TF            = TD + TE;
            T18           = TD - TE;
            TK            = ri[WS(is, 12)];
            TM            = ri[WS(is, 20)];
            TN            = ri[WS(is, 4)];
            T17           = SIMD_FNMADD(KP500000000, To, Tf);
            T1L           = ii[WS(is, 12)];
            T20           = TI - TH;
            TJ            = TH + TI;
            T1m           = ii[WS(is, 20)];
            T1Y           = TV + TW;
            TX            = TV - TW;
            T1n           = ii[WS(is, 4)];
            T1a           = SIMD_FNMADD(KP500000000, TF, Ty);
            Tp            = Tb + (Tc - (Td - Te) - Tf) + Ti - Tl - To;
            TG            = Ts + Tv + (Tw + Tx - (Ty + Tz)) - TC - TF;
            TO            = TM + TN;
            T1O           = TN - TM;
            TT            = SIMD_FNMADD(KP866025403, TS, TP);
            T1v           = SIMD_FMADD(KP866025403, TS, TP);
            T1W           = SIMD_FMADD(KP866025403, T1V, T1U);
            T21           = SIMD_FNMADD(KP866025403, T1V, T1U);
            TU            = SIMD_FNMADD(KP500000000, TJ, TL);
            T1K           = SIMD_FMADD(KP866025403, T1J, T1I);
            T1Q           = SIMD_FNMADD(KP866025403, T1J, T1I);
            T11           = SIMD_FMADD(KP866025403, T10, TZ);
            T1D           = SIMD_FNMADD(KP866025403, T10, TZ);
            T1Z           = SIMD_FNMADD(KP500000000, T1Y, T1X);
            T1M           = T1m + T1n;
            T1o           = T1m - T1n;
            T14           = SIMD_FMADD(KP866025403, T13, T12);
            T1E           = SIMD_FNMADD(KP866025403, T13, T12);
            T1x           = SIMD_FMADD(KP866025403, T1j, T1i);
            T1f           = SIMD_FNMADD(KP866025403, T1e, T1d);
            T1A           = SIMD_FMADD(KP866025403, T1e, T1d);
            ro[WS(os, 2)] = T1 + T4 + T5 +
                            SIMD_FMADD(KP707106781, Tp + TG, T8) - TJ -
                            (TK + TL) - TO;
            T1l           = SIMD_FNMADD(KP500000000, TO, TK);
            T1y           = SIMD_FMADD(KP866025403, T1h, T1g);
            TY            = SIMD_FNMADD(KP866025403, TX, TU);
            T1w           = SIMD_FMADD(KP866025403, TX, TU);
            T1z           = SIMD_FMADD(KP866025403, T1b, T1a);
            T1c           = SIMD_FNMADD(KP866025403, T1b, T1a);
            T22           = SIMD_FMADD(KP866025403, T20, T1Z);
            io[WS(os, 2)] = T1H + SIMD_FMADD(KP707106781, Tp, T1Y) + T1G + T1X -
                            (SIMD_FMADD(KP707106781, TG, T1L) + T1S) - T1T -
                            T1M;
            T1N = SIMD_FNMADD(KP500000000, T1M, T1L);
            T1F = (T1D + T1E) - (SIMD_FMADD(KP866025403, T16, T15)) -
                  (SIMD_FMADD(KP866025403, T18, T17));
            T1C = SIMD_FMADD(KP866025403, T1o, T1l);
            T1p = SIMD_FNMADD(KP866025403, T1o, T1l);
            T1u = SIMD_FMADD(KP866025403, T1t, T1q);
            T1B = T1x + T1y - (T1z + T1A);
            T1P = SIMD_FMADD(KP866025403, T1O, T1N);
            T1R = SIMD_FNMADD(KP866025403, T1O, T1N);
        }
        ro[WS(os, 3)] = T1v + T1C + T1A + T1y -
                        (SIMD_FNMADD(KP866025403, T20, T1Z)) - T1W - T1D -
                        (SIMD_FMADD(KP866025403, T18, T17));
        ro[0] = T1v + SIMD_FMADD(KP707106781, T1B, T1w) -
                (SIMD_FMADD(KP707106781, T1F, T1C)) -
                (SIMD_FNMADD(KP866025403, T1t, T1q));
        T19 = T11 + T14 - (SIMD_FNMADD(KP866025403, T16, T15)) -
              (SIMD_FNMADD(KP866025403, T18, T17));
        ro[WS(os, 1)] = TT + T1p + T21 + T22 -
                        (SIMD_FNMADD(KP866025403, T16, T15)) - (T1c + T14) -
                        (SIMD_FNMADD(KP866025403, T1j, T1i));
        T1k = T1c + T1f - (SIMD_FNMADD(KP866025403, T1h, T1g)) -
              (SIMD_FNMADD(KP866025403, T1j, T1i));
        io[WS(os, 1)] = T1u + TY + T1Q + T1R -
                        (SIMD_FNMADD(KP866025403, T1h, T1g)) - (T11 + T1f) -
                        (SIMD_FNMADD(KP866025403, T18, T17));
        io[WS(os, 3)] = T1z + T1x + T1K + T1P -
                        (SIMD_FMADD(KP866025403, T16, T15)) - T1E - T1w -
                        (SIMD_FNMADD(KP866025403, T1t, T1q));
        io[0] = SIMD_FMADD(KP707106781, T1F + T1B, T1K) + T1W -
                (SIMD_FNMADD(KP866025403, T20, T1Z)) - T1P;
        io[WS(os, 4)] = SIMD_FMADD(KP707106781, T1k, T1Q) + T21 -
                        (SIMD_FMADD(KP707106781, T19, T1R) + T22);
        ro[WS(os, 4)] =
            TT + SIMD_FMADD(KP707106781, T19 + T1k, TY) - (T1p + T1u);
    }
}

template <>
struct c2cb_traits<24, 20>
{
    static constexpr long_t flops           = 204;
    static constexpr long_t operations      = 159;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 116;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 20 -name c2cb
 * -standalone */

/*
 * This function contains 159 FP additions, 45 FP multiplications,
 * (or, 114 additions, 0 multiplications, 45 fused multiply/add),
 * 116 stack variables, 3 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 20>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1d, Ta, T1g, Tj, T4, T19, T8, T1e, T1j, Td, T1a, Th,
            T1h, Ts;
        SIMD_FLOAT T5, Tm, T1b, T1f, Te, T1m, T1i, Tq, T1k, TB, Tn, Tv, T1c,
            T1l, Tz;
        SIMD_FLOAT T1n, T1E, TE, Tw, T1v, TI, TR, T1o, T1M, TF, T1D, T1u, TQ,
            TN, T1w;
        SIMD_FLOAT T1J, TU, TY, T1L, T9, Tr, T1H, T1C, Ti, TV, T1B, T1A, T1I,
            T1x, T17;
        SIMD_FLOAT T1z, TA, T1N, T1t, T14, T1F, TZ, T1K, T1y, T1G, T18, T1O,
            T1P;
        {
            SIMD_FLOAT T1r, TJ, T1p, TM, T1q, T10, T11, T12, T15, T1s, T16, Tt,
                Tu, Tx, Ty;
            SIMD_FLOAT T2, T3, T6, T7, Tb, Tc, Tf, Tg, Tk, Tl, To, Tp, TK, TL,
                TO;
            SIMD_FLOAT TP, TC, TD, TG, TH, TS, TT, TW, TX, T13;
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            T1d = ii[0];
            T6  = ii[WS(is, 8)];
            T7  = ii[WS(is, 16)];
            Ta  = ri[WS(is, 12)];
            Tb  = ri[WS(is, 20)];
            Tc  = ri[WS(is, 4)];
            T1g = ii[WS(is, 12)];
            Tf  = ii[WS(is, 20)];
            Tg  = ii[WS(is, 4)];
            Tj  = ri[WS(is, 6)];
            Tk  = ri[WS(is, 14)];
            T4  = T2 + T3;
            T19 = T3 - T2;
            Tl  = ri[WS(is, 22)];
            T8  = T6 - T7;
            T1e = T6 + T7;
            T1j = ii[WS(is, 6)];
            Td  = Tb + Tc;
            T1a = Tc - Tb;
            To  = ii[WS(is, 22)];
            Th  = Tf - Tg;
            T1h = Tf + Tg;
            Tp  = ii[WS(is, 14)];
            Ts  = ri[WS(is, 18)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tm  = Tk + Tl;
            T1b = Tk - Tl;
            T1f = SIMD_FNMADD(KP500000000, T1e, T1d);
            Tt  = ri[WS(is, 2)];
            Tu  = ri[WS(is, 10)];
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            T1m = ii[WS(is, 18)];
            Tx  = ii[WS(is, 10)];
            T1i = SIMD_FNMADD(KP500000000, T1h, T1g);
            Tq  = To - Tp;
            T1k = To + Tp;
            Ty  = ii[WS(is, 2)];
            TB  = ri[WS(is, 15)];
            Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
            TC  = ri[WS(is, 23)];
            TD  = ri[WS(is, 7)];
            Tv  = Tt + Tu;
            T1c = Tt - Tu;
            T1r = ii[WS(is, 15)];
            TG  = ii[WS(is, 23)];
            TH  = ii[WS(is, 7)];
            TJ  = ri[WS(is, 21)];
            T1l = SIMD_FNMADD(KP500000000, T1k, T1j);
            Tz  = Tx - Ty;
            T1n = Tx + Ty;
            TK  = ri[WS(is, 5)];
            TL  = ri[WS(is, 13)];
            T1E = TD - TC;
            TE  = TC + TD;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
            T1v = ii[WS(is, 21)];
            TO  = ii[WS(is, 5)];
            T1p = TG + TH;
            TI  = TG - TH;
            TP  = ii[WS(is, 13)];
            TR  = ri[WS(is, 3)];
            T1o = SIMD_FNMADD(KP500000000, T1n, T1m);
            TS  = ri[WS(is, 11)];
            TM  = TK + TL;
            T1M = TL - TK;
            TF  = SIMD_FNMADD(KP500000000, TE, TB);
            TT  = ri[WS(is, 19)];
            T1q = ii[WS(is, 3)];
            TW  = ii[WS(is, 11)];
            TX  = ii[WS(is, 19)];
            T1D = SIMD_FMSUB(KP500000000, T1p, T1r);
            T1u = TO + TP;
            TQ  = TO - TP;
            T10 = ri[WS(is, 9)];
            T11 = ri[WS(is, 17)];
            T12 = ri[WS(is, 1)];
            TN  = SIMD_FNMADD(KP500000000, TM, TJ);
            T1w = ii[WS(is, 9)];
            T1J = TS - TT;
            TU  = TS + TT;
            T15 = ii[WS(is, 1)];
            T1s = TW + TX;
            TY  = TW - TX;
            T16 = ii[WS(is, 17)];
            T1L = SIMD_FNMADD(KP500000000, T1u, T1v);
            T9  = SIMD_FNMADD(KP866025403, T8, T5);
            Tr  = SIMD_FMADD(KP866025403, Tq, Tn);
            T13 = T11 + T12;
            T1H = T12 - T11;
            T1C = SIMD_FMADD(KP866025403, T1c, T1o);
            Ti  = SIMD_FNMADD(KP866025403, Th, Te);
            TV  = SIMD_FNMADD(KP500000000, TU, TR);
            T1B = SIMD_FMADD(KP866025403, T1b, T1l);
            T1A = SIMD_FNMADD(KP866025403, T1a, T1i);
            T1I = SIMD_FNMADD(KP500000000, T1s, T1q);
            T1x = T15 + T16;
            T17 = T15 - T16;
            T1z = SIMD_FNMADD(KP866025403, T19, T1f);
            TA  = SIMD_FMADD(KP866025403, Tz, Tw);
            T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
            T1t = T13 + T1p + (T10 - (T1q - T1r) - TJ) - TM - T1s;
            T14 = SIMD_FNMADD(KP500000000, T13, T10);
            T1F = SIMD_FMADD(KP866025403, T1E, T1D);
            TZ  = SIMD_FNMADD(KP866025403, TY, TV);
        }
        T1K = SIMD_FMADD(KP866025403, T1J, T1I);
        T1y = T1u + TE + (TB + T1v - (TR + T1w)) - T1x - TU;
        T1G = SIMD_FNMADD(KP500000000, T1x, T1w);
        T18 = SIMD_FMADD(KP866025403, T17, T14);
        io[WS(os, 2)] =
            SIMD_FMADD(KP866025403, T19 + T1a + T1b + T1c + TY + T17 + TI, TV) +
            TF + T1f + T1i - (SIMD_FMADD(KP866025403, TQ, T14) + T1l + T1o) -
            TN;
        ro[WS(os, 1)] = T1 + T4 + T1k +
                        SIMD_FMADD(KP707106781, T1t + T1y, T1j) - (Ta + T1m) -
                        T1n - Td;
        io[WS(os, 1)] = T1e + Ts + Tv + SIMD_FMADD(KP707106781, T1t, T1d) -
                        (Tj + SIMD_FMADD(KP707106781, T1y, T1g)) - Tm - T1h;
        io[0] = T1z + T1A + T1B + T1C + T1F -
                (SIMD_FNMADD(KP866025403, T1H, T1G)) - (T1K + T1N);
        T1O = TZ + T1N - (SIMD_FNMADD(KP866025403, T1H, T1G)) -
              (SIMD_FNMADD(KP866025403, TI, TF));
        ro[WS(os, 2)] =
            SIMD_FMADD(KP866025403, T8 + Th + Tq + Tz + T1J + T1H + T1M, T5) +
            Te + T1D + T1L + T1G -
            (Tn + SIMD_FMADD(KP866025403, T1E, Tw) + T1I);
        ro[0] = T9 + Ti + Tr + TA - (SIMD_FNMADD(KP866025403, TI, TF)) -
                (SIMD_FNMADD(KP866025403, TQ, TN)) - (TZ + T18);
        T1P = T18 + T1K + T1F - (SIMD_FNMADD(KP866025403, TQ, TN));
        io[WS(os, 3)] =
            Tr + SIMD_FMADD(KP707106781, T1P + T1O, T1z) - (TA + T1A);
        ro[WS(os, 3)] = T9 + SIMD_FMADD(KP707106781, T1O, T1C) -
                        (Ti + SIMD_FMADD(KP707106781, T1P, T1B));
    }
}

template <>
struct c2cb_traits<24, 21>
{
    static constexpr long_t flops           = 172;
    static constexpr long_t operations      = 130;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 115;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 21 -name c2cb
 * -standalone */

/*
 * This function contains 130 FP additions, 42 FP multiplications,
 * (or, 88 additions, 0 multiplications, 42 fused multiply/add),
 * 115 stack variables, 3 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 21>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, TV, T5, T1J, Ty, Tc, Td, Tz, Te, TB, TA, Tf, Tq, T12, Tr;
        SIMD_FLOAT T1G, T1H, T8, TL, T1I, T4, T16, TO, TZ, To, Tu, Tb, T1m, TH,
            Tl;
        SIMD_FLOAT TE, T11, T1c, T1O, T18, T1L, TS, Ti, T1B, TQ, T1D, Tx, T1z,
            T1w, T1k;
        SIMD_FLOAT T1f, T1s, T1p, T1b, T1K, T1N, T1j, T1v, T17, T1y, T10, Tg,
            T1n, T1r, T1d;
        SIMD_FLOAT TP, Th, Tv, T1A, Tw, T19, T1a, T6, T7, T1e, T1o, Tp, T1C, TR,
            T1E;
        SIMD_FLOAT TI, TT, T1F, TU, T1t;
        T1  = ri[0];
        TV  = ii[0];
        T5  = ii[WS(is, 6)];
        T1J = ri[WS(is, 6)];
        Ty  = ii[WS(is, 9)];
        Tc  = ri[WS(is, 9)];
        Td  = ii[WS(is, 3)];
        Tz  = ri[WS(is, 3)];
        Te  = ii[WS(is, 15)];
        TB  = ri[WS(is, 15)];
        TA  = ii[WS(is, 21)];
        Tf  = ri[WS(is, 21)];
        Tq  = ri[WS(is, 12)];
        T12 = ii[WS(is, 12)];
        Tr  = ii[WS(is, 18)];
        T1G = ri[WS(is, 18)];
        T19 = ri[WS(is, 2)];
        T1a = ri[WS(is, 10)];
        T6  = ii[WS(is, 14)];
        T7  = ii[WS(is, 22)];
        {
            SIMD_FLOAT TM, T1M, T1i, T13, T1u, TN, TX, TY, TJ, TK, T1g, T1h, T2,
                T3, T14;
            SIMD_FLOAT T15, T9, TW, T1x, T1q, Ta, TF, T1l, TG, Tm, Tn, Ts, Tt,
                Tj, Tk;
            SIMD_FLOAT TC, TD;
            TJ  = ii[WS(is, 2)];
            TK  = ii[WS(is, 10)];
            T1g = ri[WS(is, 22)];
            T1h = ri[WS(is, 14)];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            T14 = ii[WS(is, 20)];
            T15 = ii[WS(is, 4)];
            TM  = ri[WS(is, 20)];
            T1H = T19 + T1a;
            T1b = T19 - T1a;
            T1K = T7 - T6;
            T8  = T6 + T7;
            T1M = TJ - TK;
            TL  = TJ + TK;
            T1I = T1h + T1g;
            T1i = T1g - T1h;
            T13 = T3 - T2;
            T4  = T2 + T3;
            T1u = T14 - T15;
            T16 = T14 + T15;
            TN  = ri[WS(is, 4)];
            TX  = ii[WS(is, 8)];
            TY  = ii[WS(is, 16)];
            Tm  = ri[WS(is, 5)];
            Tn  = ri[WS(is, 13)];
            Ts  = ii[WS(is, 17)];
            T1N = SIMD_FNMADD(KP577350269, T1I, T1M);
            T1j = SIMD_FNMADD(KP577350269, TL, T1i);
            Tt  = ii[WS(is, 1)];
            T9  = ri[WS(is, 17)];
            T1v = SIMD_FNMADD(KP577350269, T4, T1u);
            T17 = SIMD_FNMADD(KP577350269, T16, T13);
            TW  = TN - TM;
            TO  = TM + TN;
            T1x = TX - TY;
            TZ  = TX + TY;
            T1q = Tn - Tm;
            To  = Tm + Tn;
            Ta  = ri[WS(is, 1)];
            TF  = ii[WS(is, 5)];
            T1l = Tt - Ts;
            Tu  = Ts + Tt;
            TG  = ii[WS(is, 13)];
            Tj  = ii[WS(is, 11)];
            Tk  = ii[WS(is, 19)];
            TC  = ri[WS(is, 23)];
            T1y = SIMD_FNMADD(KP577350269, TO, T1x);
            T10 = SIMD_FNMADD(KP577350269, TZ, TW);
            TD  = ri[WS(is, 7)];
            Tg  = ii[WS(is, 23)];
            T1n = Ta - T9;
            Tb  = T9 + Ta;
            T1m = SIMD_FMADD(KP577350269, To, T1l);
            T1r = SIMD_FNMADD(KP577350269, Tu, T1q);
            T1d = TF - TG;
            TH  = TF + TG;
            TP  = Tj - Tk;
            Tl  = Tj + Tk;
            Th  = ii[WS(is, 7)];
            Tv  = ri[WS(is, 11)];
            T1A = TD - TC;
            TE  = TC + TD;
            Tw  = ri[WS(is, 19)];
        }
        T11           = SIMD_FMADD(KP866025403, T10, TV);
        T1c           = SIMD_FMADD(KP577350269, T8, T1b);
        T1O           = SIMD_FMADD(KP866025403, T1N, T1J);
        T1e           = SIMD_FNMADD(KP577350269, Tb, T1d);
        T1o           = SIMD_FNMADD(KP577350269, TH, T1n);
        T18           = SIMD_FMADD(KP866025403, T17, T12);
        T1L           = SIMD_FMADD(KP577350269, T1H, T1K);
        TS            = Tg - Th;
        Ti            = Tg + Th;
        T1B           = SIMD_FNMADD(KP577350269, Tl, T1A);
        TQ            = SIMD_FNMADD(KP577350269, TE, TP);
        T1D           = Tv - Tw;
        Tx            = Tv + Tw;
        T1z           = SIMD_FMADD(KP866025403, T1y, Tq);
        T1w           = SIMD_FMADD(KP866025403, T1v, T1);
        T1k           = SIMD_FMADD(KP866025403, T1j, Tr);
        T1f           = SIMD_FMADD(KP866025403, T1e, Tc);
        T1s           = SIMD_FMADD(KP866025403, T1r, Ty);
        T1p           = SIMD_FMADD(KP866025403, T1o, TA);
        Tp            = Tb + (Tc - (Td - Te) - Tf) + Ti - Tl - To;
        T1C           = SIMD_FMADD(KP866025403, T1B, Td);
        TR            = SIMD_FMADD(KP866025403, TQ, TB);
        T1E           = SIMD_FMADD(KP577350269, Ti, T1D);
        TI            = Tu + Tx + (Ty + Tz - (TA + TB)) - TE - TH;
        TT            = SIMD_FNMADD(KP577350269, Tx, TS);
        ro[WS(os, 1)] = T1s + T1p + T1z + T1w -
                        (SIMD_FNMADD(KP866025403, T1L, T1G)) - (T1C + T1O) -
                        (SIMD_FNMADD(KP866025403, T1E, Te));
        T1F = T1f + T1C - (SIMD_FNMADD(KP866025403, T1E, Te)) -
              (SIMD_FNMADD(KP866025403, T1m, Tf));
        io[0] = SIMD_FMADD(KP707106781, TI + Tp, TV) + TZ + T1G + T1H - T1I -
                (T12 + T1J) - T16;
        ro[0] = T1 + T4 + T5 + SIMD_FMADD(KP707106781, Tp, T8) -
                (Tq + SIMD_FMADD(KP707106781, TI, Tr)) - TL - TO;
        TU            = SIMD_FMADD(KP866025403, TT, Tz);
        io[WS(os, 1)] = TR + TU + T11 + T18 -
                        (SIMD_FNMADD(KP866025403, T1c, T5)) - (T1f + T1k) -
                        (SIMD_FNMADD(KP866025403, T1m, Tf));
        T1t           = T1p + TU - (T1s + TR);
        io[WS(os, 2)] = SIMD_FMADD(KP707106781, T1F + T1t, T11) + T1O -
                        (SIMD_FNMADD(KP866025403, T1L, T1G)) - T18;
        ro[WS(os, 2)] = SIMD_FMADD(KP707106781, T1t, T1w) + T1k -
                        (SIMD_FNMADD(KP866025403, T1c, T5)) -
                        (SIMD_FMADD(KP707106781, T1F, T1z));
    }
}

template <>
struct c2cb_traits<24, 22>
{
    static constexpr long_t flops           = 137;
    static constexpr long_t operations      = 98;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 113;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 22 -name c2cb
 * -standalone */

/*
 * This function contains 98 FP additions, 39 FP multiplications,
 * (or, 59 additions, 0 multiplications, 39 fused multiply/add),
 * 113 stack variables, 3 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 22>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T1e, Ta, T19, T1t, TB, T1H, T11, TI, T1w, TR, T1K, T1B,
            T18, T10;
        SIMD_FLOAT T1b, T4, T1h, Th, T1a, T7, T1s, TA, T1G, Tr, T1n, T1i, Ti,
            T1c, T8;
        SIMD_FLOAT T1M, T1L, T1d, T9;
        {
            SIMD_FLOAT Tj, Ts, T1C, T1j, TJ, TS, T1o, T1x, T1I, T17, T1J, T14,
                T1A, TQ, T1r;
            SIMD_FLOAT T1m, TZ, T2, T1E, Tm, Tz, T1D, Tp, T1g, Td, T3, T5, T1f,
                Tg, T6;
            SIMD_FLOAT T15, T16, T12, T13, T1F, Tq;
            T1  = ri[WS(is, 12)];
            T1e = ii[WS(is, 12)];
            Ta  = ri[0];
            T19 = ii[0];
            T1t = ri[WS(is, 9)];
            Tj  = ii[WS(is, 9)];
            Ts  = ii[WS(is, 21)];
            T1C = ri[WS(is, 21)];
            TB  = ii[WS(is, 3)];
            T1j = ri[WS(is, 3)];
            T1H = ii[WS(is, 6)];
            TJ  = ri[WS(is, 6)];
            TS  = ii[WS(is, 15)];
            T1o = ri[WS(is, 15)];
            T11 = ri[WS(is, 18)];
            T1x = ii[WS(is, 18)];
            T15 = ri[WS(is, 2)];
            T16 = ri[WS(is, 10)];
            T12 = ii[WS(is, 22)];
            T13 = ii[WS(is, 14)];
            {
                SIMD_FLOAT TT, T1z, TM, T1y, TP, T1q, TE, T1p, TH, TU, TW, TX,
                    TK, TL, TN;
                SIMD_FLOAT TO, TC, TD, TF, TG, Tk, T1l, TV, T1k, TY, T1v, Tv,
                    Tl, Tn, T1u;
                SIMD_FLOAT Ty, To, Tt, Tu, Tw, Tx, Tb, Tc, Te, Tf;
                TK  = ii[WS(is, 2)];
                TL  = ii[WS(is, 10)];
                TN  = ri[WS(is, 14)];
                TO  = ri[WS(is, 22)];
                TC  = ri[WS(is, 23)];
                TD  = ri[WS(is, 7)];
                TF  = ii[WS(is, 11)];
                TG  = ii[WS(is, 19)];
                TT  = ri[WS(is, 19)];
                T1I = T15 - T16;
                T17 = T15 + T16;
                T1J = T13 + T12;
                T14 = T12 - T13;
                T1z = TK + TL;
                TM  = TK - TL;
                T1y = TO - TN;
                TP  = TN + TO;
                T1q = TD + TC;
                TE  = TC - TD;
                T1p = TF - TG;
                TH  = TF + TG;
                TU  = ri[WS(is, 11)];
                TW  = ii[WS(is, 23)];
                TX  = ii[WS(is, 7)];
                Tt  = ri[WS(is, 1)];
                Tu  = ri[WS(is, 17)];
                Tw  = ii[WS(is, 5)];
                T1A = SIMD_FNMADD(KP577350269, T1z, T1y);
                TQ  = SIMD_FNMADD(KP577350269, TP, TM);
                Tx  = ii[WS(is, 13)];
                Tk  = ri[WS(is, 13)];
                T1r = SIMD_FNMADD(KP577350269, T1q, T1p);
                TI  = SIMD_FMADD(KP577350269, TH, TE);
                T1l = TT + TU;
                TV  = TT - TU;
                T1k = TW - TX;
                TY  = TW + TX;
                T1v = Tt + Tu;
                Tv  = Tt - Tu;
                Tl  = ri[WS(is, 5)];
                Tn  = ii[WS(is, 17)];
                T1u = Tx - Tw;
                Ty  = Tw + Tx;
                To  = ii[WS(is, 1)];
                Tb  = ii[WS(is, 20)];
                Tc  = ii[WS(is, 4)];
                Te  = ri[WS(is, 8)];
                T1m = SIMD_FNMADD(KP577350269, T1l, T1k);
                TZ  = SIMD_FNMADD(KP577350269, TY, TV);
                Tf  = ri[WS(is, 16)];
                T2  = ii[WS(is, 8)];
                T1E = Tk + Tl;
                Tm  = Tk - Tl;
                T1w = SIMD_FMADD(KP577350269, T1v, T1u);
                Tz  = SIMD_FNMADD(KP577350269, Ty, Tv);
                T1D = Tn - To;
                Tp  = Tn + To;
                T1g = Tb + Tc;
                Td  = Tb - Tc;
                T3  = ii[WS(is, 16)];
                T5  = ri[WS(is, 20)];
                T1f = Tf - Te;
                Tg  = Te + Tf;
                T6  = ri[WS(is, 4)];
            }
            TR  = SIMD_FMADD(KP866025403, TQ, TJ);
            T1K = SIMD_FMADD(KP577350269, T1J, T1I);
            T1B = SIMD_FMADD(KP866025403, T1A, T1x);
            T1F = SIMD_FNMADD(KP577350269, T1E, T1D);
            Tq  = SIMD_FNMADD(KP577350269, Tp, Tm);
            T18 = SIMD_FMADD(KP577350269, T17, T14);
            T10 = SIMD_FMADD(KP866025403, TZ, TS);
            T1b = T2 + T3;
            T4  = T2 - T3;
            T1h = SIMD_FNMADD(KP577350269, T1g, T1f);
            Th  = SIMD_FNMADD(KP577350269, Tg, Td);
            T1a = T6 - T5;
            T7  = T5 + T6;
            T1s = SIMD_FMADD(KP866025403, T1r, T1o);
            TA  = SIMD_FMADD(KP866025403, Tz, Ts);
            T1G = SIMD_FMADD(KP866025403, T1F, T1C);
            Tr  = SIMD_FMADD(KP866025403, Tq, Tj);
            T1n = SIMD_FMADD(KP866025403, T1m, T1j);
        }
        T1i = SIMD_FMADD(KP866025403, T1h, T1e);
        Ti  = SIMD_FMADD(KP866025403, Th, Ta);
        T1c = SIMD_FNMADD(KP577350269, T1b, T1a);
        T8  = SIMD_FNMADD(KP577350269, T7, T4);
        T1M = T10 + T1G - (SIMD_FNMADD(KP866025403, T1w, T1t)) -
              (SIMD_FNMADD(KP866025403, TI, TB));
        T1L   = TA + T1n - (Tr + T1s);
        T1d   = SIMD_FMADD(KP866025403, T1c, T19);
        T9    = SIMD_FMADD(KP866025403, T8, T1);
        io[0] = T1d + T1i + T1n + T1s - (SIMD_FNMADD(KP866025403, T1w, T1t)) -
                (T1B + T1G) - (SIMD_FNMADD(KP866025403, T1K, T1H));
        io[WS(os, 1)] = TR + SIMD_FMADD(KP707106781, T1L, T1d) -
                        (SIMD_FMADD(KP707106781, T1M, T1i)) -
                        (SIMD_FNMADD(KP866025403, T18, T11));
        ro[0] = T9 + Ti + Tr + TA - (SIMD_FNMADD(KP866025403, TI, TB)) -
                (TR + T10) - (SIMD_FNMADD(KP866025403, T18, T11));
        ro[WS(os, 1)] = Ti + SIMD_FMADD(KP707106781, T1L + T1M, T1B) -
                        (SIMD_FNMADD(KP866025403, T1K, T1H)) - T9;
    }
}

template <>
struct c2cb_traits<24, 23>
{
    static constexpr long_t flops           = 68;
    static constexpr long_t operations      = 56;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 76;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -skip-k 23 -name c2cb
 * -standalone */

/*
 * This function contains 56 FP additions, 12 FP multiplications,
 * (or, 44 additions, 0 multiplications, 12 fused multiply/add),
 * 76 stack variables, 4 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && SkippedOutputs == 23>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP816496580, +0.816496580927726032732428024901963797321982494);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T14, T2, T1a, T19, TX, TY, T15, Tc, TF, T7, Ti, T13, Tl,
            T16;
        SIMD_FLOAT TV, Tj, Tk, Th, To, Tr, Tp, Tq, Tx, T17, T8, Tb, T9, Ta, Tm;
        SIMD_FLOAT Ts, TH, Tn, TG, Ty, TI, Tz, TJ, TA, T18, TK, TW;
        T1  = ri[0];
        T14 = ii[0];
        T2  = ii[WS(is, 18)];
        T1a = ri[WS(is, 18)];
        T19 = ii[WS(is, 12)];
        TX  = ri[WS(is, 12)];
        TY  = ii[WS(is, 6)];
        T15 = ri[WS(is, 6)];
        T8  = ii[WS(is, 15)];
        Tb  = ri[WS(is, 9)];
        T9  = ri[WS(is, 21)];
        Ta  = ii[WS(is, 3)];
        {
            SIMD_FLOAT TB, TE, TC, TD, TL, TO, TM, TN, TQ, TT, TR, TS, T3, T6,
                T4;
            SIMD_FLOAT T5, TZ, TP, T12, T10, T11, Td, TU, Tg, Te, Tf, Tt, Tw,
                Tu, Tv;
            TB  = ri[WS(is, 3)];
            TE  = ii[WS(is, 9)];
            TC  = ii[WS(is, 21)];
            TD  = ri[WS(is, 15)];
            TL  = ri[WS(is, 4)];
            TO  = ii[WS(is, 10)];
            TM  = ii[WS(is, 22)];
            TN  = ri[WS(is, 16)];
            TQ  = ri[WS(is, 8)];
            TT  = ii[WS(is, 14)];
            TR  = ii[WS(is, 2)];
            Tc  = T8 + T9 - (Ta + Tb);
            TS  = ri[WS(is, 20)];
            T3  = ii[WS(is, 20)];
            T6  = ri[WS(is, 14)];
            TF  = TB + TC - (TD + TE);
            T4  = ri[WS(is, 2)];
            T5  = ii[WS(is, 8)];
            TZ  = ii[WS(is, 4)];
            TP  = TL + TM - (TN + TO);
            T12 = ri[WS(is, 22)];
            T10 = ri[WS(is, 10)];
            T11 = ii[WS(is, 16)];
            Td  = ri[WS(is, 23)];
            TU  = TQ + TR - (TS + TT);
            Tg  = ii[WS(is, 5)];
            Te  = ii[WS(is, 17)];
            Tf  = ri[WS(is, 11)];
            Tt  = ii[WS(is, 23)];
            T7  = T3 + T4 - (T5 + T6);
            Tw  = ri[WS(is, 17)];
            Tu  = ri[WS(is, 5)];
            Tv  = ii[WS(is, 11)];
            Ti  = ri[WS(is, 19)];
            T13 = TZ + T10 - (T11 + T12);
            Tl  = ii[WS(is, 1)];
            T16 = TU + TP;
            TV  = TP - TU;
            Tj  = ii[WS(is, 13)];
            Tk  = ri[WS(is, 7)];
            Th  = Td + Te - (Tf + Tg);
            To  = ii[WS(is, 19)];
            Tr  = ri[WS(is, 13)];
            Tp  = ri[WS(is, 1)];
            Tq  = ii[WS(is, 7)];
            Tx  = Tt + Tu - (Tv + Tw);
        }
        T17 = T13 + T7;
        Tm  = Ti + Tj - (Tk + Tl);
        Ts  = To + Tp - (Tq + Tr);
        TH  = Th - Tm;
        Tn  = Th + Tm;
        TG  = Tx + Ts;
        Ty  = Ts - Tx;
        TI  = SIMD_FMADD(KP577350269, TH, TG);
        Tz  = SIMD_FMADD(KP577350269, Ty, Tn);
        TJ  = SIMD_FMADD(KP866025403, TI, TF);
        TA  = SIMD_FMADD(KP866025403, Tz, Tc);
        T18 = SIMD_FMADD(KP707106781, T17, TJ);
        TK  = TA + TJ;
        io[0] =
            T14 +
            SIMD_FMADD(KP866025403, SIMD_FMADD(KP816496580, T18, T16), T15) -
            (SIMD_FMADD(KP707106781, TA, T19) + T1a);
        TW    = SIMD_FMADD(KP707106781, TV, TK);
        ro[0] = T1 +
                SIMD_FMADD(KP866025403, SIMD_FMADD(KP816496580, TW, T7), T2) -
                (TX + SIMD_FMADD(KP866025403, T13, TY));
    }
}
