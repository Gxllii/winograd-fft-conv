//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cb_traits<18, 0>
{
    static constexpr long_t flops           = 130;
    static constexpr long_t operations      = 82;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 94;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 0 -name
 * r2cb -standalone */

/*
 * This function contains 82 FP additions, 48 FP multiplications,
 * (or, 34 additions, 0 multiplications, 48 fused multiply/add),
 * 94 stack variables, 12 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 0>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tw, TY, Tu, Tm, Ta, To, Tg, Tn, Td, Tx, TC, TD, Tz, Tl, TX;
        SIMD_FLOAT Tr, T7, TA, Ts, Tt, T1, T2, T4, T5, T8, T9, Te, Tf, Tb, Tc;
        SIMD_FLOAT Tj, T3, Tk, T6, T18, TH, Ty, T15, TE, T12, T1d, TZ, Tv, TP,
            TB;
        SIMD_FLOAT T11, T10, Tq, TJ, Ti, Tp, Th;
        Ts  = Ci[WS(cs, 6)];
        Tt  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 6)];
        T5  = Cr[WS(cs, 3)];
        T8  = Cr[WS(cs, 2)];
        T9  = Cr[WS(cs, 7)];
        Te  = Cr[WS(cs, 4)];
        Tf  = Cr[WS(cs, 5)];
        Tb  = Cr[WS(cs, 8)];
        Tc  = Cr[WS(cs, 1)];
        Tw  = Ci[WS(cs, 2)];
        TY  = Ts + Tt;
        Tu  = Ts - Tt;
        Tj  = T1 - T2;
        T3  = T1 + T2;
        Tk  = T5 - T4;
        T6  = T4 + T5;
        Tm  = T9 - T8;
        Ta  = T8 + T9;
        To  = Tf - Te;
        Tg  = Te + Tf;
        Tn  = Tc - Tb;
        Td  = Tb + Tc;
        Tx  = Ci[WS(cs, 7)];
        TC  = Ci[WS(cs, 5)];
        TD  = Ci[WS(cs, 4)];
        Tz  = Ci[WS(cs, 8)];
        Tl  = SIMD_FNMADD(KP2_000000000, Tk, Tj);
        TX  = Tj + Tk;
        Tr  = T3 - T6;
        T7  = SIMD_FMADD(KP2_000000000, T6, T3);
        TA  = Ci[WS(cs, 1)];
        T18 = Tn - To;
        Tp  = Tn + To;
        TH  = Tg - Td;
        Th  = Td + Tg;
        Ty  = Tw - Tx;
        T15 = Tw + Tx;
        TE  = TC - TD;
        T12 = TD + TC;
        T1d = SIMD_FMADD(KP1_732050807, TY, TX);
        TZ  = SIMD_FNMADD(KP1_732050807, TY, TX);
        Tv  = SIMD_FMADD(KP1_732050807, Tu, Tr);
        TP  = SIMD_FNMADD(KP1_732050807, Tu, Tr);
        TB  = Tz - TA;
        T11 = Tz + TA;
        T10 = SIMD_FNMADD(KP500000000, Tp, Tm);
        Tq  = Tm + Tp;
        TJ  = SIMD_FNMADD(KP500000000, Th, Ta);
        Ti  = Ta + Th;
        {
            SIMD_FLOAT T13, T16, TK, TF, T1j, TV, T17, T1k, T1f, T14, TG, TW,
                TL, TQ, T1e;
            SIMD_FLOAT T19, TI, TR, T1a, T1c, T1g, T1i, TS, TU, TM, TO, T1b,
                T1h, TT, TN;
            T13            = T11 + T12;
            T16            = T11 - T12;
            TK             = TB - TE;
            TF             = TB + TE;
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP2_000000000, Tq, Tl);
            T1j            = Tl + Tq;
            R0[0]          = SIMD_FMADD(KP2_000000000, Ti, T7);
            TV             = T7 - Ti;
            T17            = SIMD_FNMADD(KP500000000, T16, T15);
            T1k            = T16 + T15;
            T1f            = SIMD_FNMADD(KP866025403, T13, T10);
            T14            = SIMD_FMADD(KP866025403, T13, T10);
            TG             = SIMD_FNMADD(KP500000000, TF, Ty);
            TW             = TF + Ty;
            TL             = SIMD_FMADD(KP866025403, TK, TJ);
            TQ             = SIMD_FNMADD(KP866025403, TK, TJ);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T1k, T1j);
            R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T1k, T1j);
            T1e            = SIMD_FMADD(KP866025403, T18, T17);
            T19            = SIMD_FNMADD(KP866025403, T18, T17);
            R0[WS(rs, 12)] = SIMD_FNMADD(KP1_732050807, TW, TV);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_732050807, TW, TV);
            TI             = SIMD_FMADD(KP866025403, TH, TG);
            TR             = SIMD_FNMADD(KP866025403, TH, TG);
            T1a            = SIMD_FMADD(KP839099631, T19, T14);
            T1c            = SIMD_FNMADD(KP839099631, T14, T19);
            T1g            = SIMD_FMADD(KP176326980, T1f, T1e);
            T1i            = SIMD_FNMADD(KP176326980, T1e, T1f);
            TS             = SIMD_FNMADD(KP839099631, TR, TQ);
            TU             = SIMD_FMADD(KP839099631, TQ, TR);
            TM             = SIMD_FNMADD(KP176326980, TL, TI);
            TO             = SIMD_FMADD(KP176326980, TI, TL);
            T1b            = SIMD_FMADD(KP766044443, T1a, TZ);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_532088886, T1a, TZ);
            T1h            = SIMD_FMADD(KP984807753, T1g, T1d);
            R0[WS(rs, 11)] = SIMD_FNMADD(KP1_969615506, T1g, T1d);
            TT             = SIMD_FNMADD(KP766044443, TS, TP);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_532088886, TS, TP);
            TN             = SIMD_FMADD(KP984807753, TM, Tv);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_969615506, TM, Tv);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_326827896, T1c, T1b);
            R0[WS(rs, 13)] = SIMD_FNMADD(KP1_326827896, T1c, T1b);
            R0[WS(rs, 17)] = SIMD_FNMADD(KP1_705737063, T1i, T1h);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_705737063, T1i, T1h);
            R0[WS(rs, 16)] = SIMD_FMADD(KP1_326827896, TU, TT);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_326827896, TU, TT);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_705737063, TO, TN);
            R0[WS(rs, 14)] = SIMD_FNMADD(KP1_705737063, TO, TN);
        }
    }
}

template <>
struct r2cb_traits<18, 1>
{
    static constexpr long_t flops           = 128;
    static constexpr long_t operations      = 81;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 92;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 1 -name
 * r2cb -standalone */

/*
 * This function contains 81 FP additions, 47 FP multiplications,
 * (or, 34 additions, 0 multiplications, 47 fused multiply/add),
 * 92 stack variables, 12 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 1>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tq, TW, To, Tj, Tk, TF, Ta, TB, Tg, TC, Td, Tr, Tw, Tx, Tt;
        SIMD_FLOAT Tl, T7, TV, Tu, Tm, Tn, T1, T2, T4, T5, T8, T9, Te, Tf, Tb;
        SIMD_FLOAT Tc, T3, T6;
        Tm = Ci[WS(cs, 6)];
        Tn = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        T4 = Cr[WS(cs, 3)];
        T5 = Cr[WS(cs, 6)];
        T8 = Cr[WS(cs, 7)];
        T9 = Cr[WS(cs, 2)];
        Te = Cr[WS(cs, 5)];
        Tf = Cr[WS(cs, 4)];
        Tb = Cr[WS(cs, 1)];
        Tc = Cr[WS(cs, 8)];
        Tq = Ci[WS(cs, 2)];
        TW = Tm + Tn;
        To = Tm - Tn;
        Tj = T1 + T2;
        T3 = T1 - T2;
        Tk = T4 + T5;
        T6 = T4 - T5;
        TF = T8 + T9;
        Ta = T8 - T9;
        TB = Te + Tf;
        Tg = Te - Tf;
        TC = Tb + Tc;
        Td = Tb - Tc;
        Tr = Ci[WS(cs, 7)];
        Tw = Ci[WS(cs, 5)];
        Tx = Ci[WS(cs, 4)];
        Tt = Ci[WS(cs, 8)];
        Tl = Tj - Tk;
        T7 = SIMD_FNMADD(KP2_000000000, T6, T3);
        TV = T3 + T6;
        Tu = Ci[WS(cs, 1)];
        {
            SIMD_FLOAT TD, T16, T13, Ts, T10, Ty, TN, Tp, TX, T1b, TZ, Tv, TT,
                TH, Ti;
            SIMD_FLOAT TY, TG, Th, T14, T11, Tz, TI, T1h, T1i, T15, T12, T1d,
                TU, TA, TO;
            SIMD_FLOAT TJ, T17, T1c, TP, TE, T1a, T18, T1g, T1e, TS, TQ, TM, TK,
                T19, T1f;
            SIMD_FLOAT TR, TL;
            TG             = TC + TB;
            TD             = TB - TC;
            Th             = Td + Tg;
            T16            = Td - Tg;
            T13            = Tq + Tr;
            Ts             = Tq - Tr;
            T10            = Tw + Tx;
            Ty             = Tw - Tx;
            TN             = SIMD_FNMADD(KP1_732050807, To, Tl);
            Tp             = SIMD_FMADD(KP1_732050807, To, Tl);
            TX             = SIMD_FNMADD(KP1_732050807, TW, TV);
            T1b            = SIMD_FMADD(KP1_732050807, TW, TV);
            TZ             = Tt + Tu;
            Tv             = Tt - Tu;
            TT             = SIMD_FMADD(KP2_000000000, Tk, Tj) - TG - TF;
            TH             = SIMD_FNMADD(KP500000000, TG, TF);
            Ti             = Ta + Th;
            TY             = SIMD_FNMADD(KP500000000, Th, Ta);
            T14            = TZ - T10;
            T11            = TZ + T10;
            Tz             = Tv + Ty;
            TI             = Tv - Ty;
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP2_000000000, Ti, T7);
            T1h            = T7 + Ti;
            T1i            = T13 + T14;
            T15            = SIMD_FNMADD(KP500000000, T14, T13);
            T12            = SIMD_FMADD(KP866025403, T11, TY);
            T1d            = SIMD_FNMADD(KP866025403, T11, TY);
            TU             = Ts + Tz;
            TA             = SIMD_FNMADD(KP500000000, Tz, Ts);
            TO             = SIMD_FNMADD(KP866025403, TI, TH);
            TJ             = SIMD_FMADD(KP866025403, TI, TH);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T1i, T1h);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T1i, T1h);
            T17            = SIMD_FNMADD(KP866025403, T16, T15);
            T1c            = SIMD_FMADD(KP866025403, T16, T15);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_732050807, TU, TT);
            R0[WS(rs, 11)] = SIMD_FNMADD(KP1_732050807, TU, TT);
            TP             = SIMD_FNMADD(KP866025403, TD, TA);
            TE             = SIMD_FMADD(KP866025403, TD, TA);
            T1a            = SIMD_FNMADD(KP839099631, T12, T17);
            T18            = SIMD_FMADD(KP839099631, T17, T12);
            T1g            = SIMD_FNMADD(KP176326980, T1c, T1d);
            T1e            = SIMD_FMADD(KP176326980, T1d, T1c);
            TS             = SIMD_FMADD(KP839099631, TO, TP);
            TQ             = SIMD_FNMADD(KP839099631, TP, TO);
            TM             = SIMD_FMADD(KP176326980, TE, TJ);
            TK             = SIMD_FNMADD(KP176326980, TJ, TE);
            T19            = SIMD_FMADD(KP766044443, T18, TX);
            R0[0]          = SIMD_FNMADD(KP1_532088886, T18, TX);
            T1f            = SIMD_FMADD(KP984807753, T1e, T1b);
            R0[WS(rs, 10)] = SIMD_FNMADD(KP1_969615506, T1e, T1b);
            TR             = SIMD_FNMADD(KP766044443, TQ, TN);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_532088886, TQ, TN);
            TL             = SIMD_FMADD(KP984807753, TK, Tp);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_969615506, TK, Tp);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_326827896, T1a, T19);
            R0[WS(rs, 12)] = SIMD_FNMADD(KP1_326827896, T1a, T19);
            R0[WS(rs, 16)] = SIMD_FNMADD(KP1_705737063, T1g, T1f);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_705737063, T1g, T1f);
            R0[WS(rs, 15)] = SIMD_FMADD(KP1_326827896, TS, TR);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_326827896, TS, TR);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_705737063, TM, TL);
            R0[WS(rs, 13)] = SIMD_FNMADD(KP1_705737063, TM, TL);
        }
    }
}

template <>
struct r2cb_traits<18, 2>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 93;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 2 -name
 * r2cb -standalone */

/*
 * This function contains 80 FP additions, 46 FP multiplications,
 * (or, 34 additions, 0 multiplications, 46 fused multiply/add),
 * 93 stack variables, 13 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 2>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ti, TQ, Ta, T3, T6, T10, Te, TR, Tx, TW, Th, Tj, Tn, To, Tq;
        SIMD_FLOAT TP, T1f, T7, Tr, T8, T9, T1, T2, T4, T5, Tc, Td, Tv, Tw, TN;
        SIMD_FLOAT TO, Tf, Tg, Tk, TX, Tp, TS, T19, TF, Tb, TT, Ts, TA, Tl, T11;
        SIMD_FLOAT TY;
        T8  = Ci[WS(cs, 6)];
        T9  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 6)];
        T5  = Cr[WS(cs, 3)];
        Tc  = Ci[WS(cs, 2)];
        Td  = Ci[WS(cs, 7)];
        Tv  = Cr[WS(cs, 2)];
        Tw  = Cr[WS(cs, 7)];
        Tf  = Ci[WS(cs, 8)];
        Tg  = Ci[WS(cs, 1)];
        Ti  = Ci[WS(cs, 5)];
        TQ  = T8 + T9;
        Ta  = T8 - T9;
        TN  = T1 - T2;
        T3  = T1 + T2;
        TO  = T5 - T4;
        T6  = T4 + T5;
        T10 = Tc + Td;
        Te  = Tc - Td;
        TR  = Tw - Tv;
        Tx  = Tv + Tw;
        TW  = Tf + Tg;
        Th  = Tf - Tg;
        Tj  = Ci[WS(cs, 4)];
        Tn  = Cr[WS(cs, 4)];
        To  = Cr[WS(cs, 5)];
        Tq  = Cr[WS(cs, 8)];
        TP  = TN + TO;
        T1f = SIMD_FNMADD(KP2_000000000, TO, TN);
        T7  = T3 - T6;
        Tr  = Cr[WS(cs, 1)];
        Tk  = Ti - Tj;
        TX  = Ti + Tj;
        Tp  = Tn + To;
        TS  = To - Tn;
        T19 = SIMD_FMADD(KP1_732050807, TQ, TP);
        TF  = SIMD_FNMADD(KP1_732050807, Ta, T7);
        Tb  = SIMD_FMADD(KP1_732050807, Ta, T7);
        TT  = Tr - Tq;
        Ts  = Tq + Tr;
        TA  = Th - Tk;
        Tl  = Th + Tk;
        T11 = TW - TX;
        TY  = TW + TX;
        {
            SIMD_FLOAT Tt, Ty, TU, T13, Tm, TM, T12, T1i, TL, Tz, TV, T1g, TH,
                Tu, T14;
            SIMD_FLOAT T1a, TG, TB, T1h, TZ, T1b, TC, TE, TI, TK, T1c, T1e, T18,
                T15, TD;
            SIMD_FLOAT TJ, T1d, T16, T17;
            Tt             = Tp - Ts;
            Ty             = Tp + Ts;
            TU             = TS + TT;
            T13            = TT - TS;
            Tm             = SIMD_FNMADD(KP500000000, Tl, Te);
            TM             = Te + Tl;
            T12            = SIMD_FNMADD(KP500000000, T11, T10);
            T1i            = T10 + T11;
            TL             = SIMD_FMADD(KP2_000000000, T6, T3) - Tx - Ty;
            Tz             = SIMD_FNMADD(KP500000000, Ty, Tx);
            TV             = SIMD_FNMADD(KP500000000, TU, TR);
            T1g            = TU + TR;
            TH             = SIMD_FNMADD(KP866025403, Tt, Tm);
            Tu             = SIMD_FMADD(KP866025403, Tt, Tm);
            T14            = SIMD_FNMADD(KP866025403, T13, T12);
            T1a            = SIMD_FMADD(KP866025403, T13, T12);
            R0[WS(rs, 10)] = SIMD_FNMADD(KP1_732050807, TM, TL);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_732050807, TM, TL);
            TG             = SIMD_FNMADD(KP866025403, TA, Tz);
            TB             = SIMD_FMADD(KP866025403, TA, Tz);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, T1g, T1f);
            T1h            = T1f + T1g;
            TZ             = SIMD_FMADD(KP866025403, TY, TV);
            T1b            = SIMD_FNMADD(KP866025403, TY, TV);
            TC             = SIMD_FNMADD(KP176326980, TB, Tu);
            TE             = SIMD_FMADD(KP176326980, Tu, TB);
            TI             = SIMD_FNMADD(KP839099631, TH, TG);
            TK             = SIMD_FMADD(KP839099631, TG, TH);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T1i, T1h);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T1i, T1h);
            T1c            = SIMD_FMADD(KP176326980, T1b, T1a);
            T1e            = SIMD_FNMADD(KP176326980, T1a, T1b);
            T18            = SIMD_FNMADD(KP839099631, TZ, T14);
            T15            = SIMD_FMADD(KP839099631, T14, TZ);
            TD             = SIMD_FMADD(KP984807753, TC, Tb);
            R0[0]          = SIMD_FNMADD(KP1_969615506, TC, Tb);
            TJ             = SIMD_FNMADD(KP766044443, TI, TF);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_532088886, TI, TF);
            T1d            = SIMD_FMADD(KP984807753, T1c, T19);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_969615506, T1c, T19);
            T16            = SIMD_FNMADD(KP442275965, T15, TQ);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_705737063, TE, TD);
            R0[WS(rs, 12)] = SIMD_FNMADD(KP1_705737063, TE, TD);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_326827896, TK, TJ);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_326827896, TK, TJ);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP1_705737063, T1e, T1d);
            R0[WS(rs, 15)] = SIMD_FNMADD(KP1_705737063, T1e, T1d);
            T17            = SIMD_FNMADD(KP1_732050807, T16, TP);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_326827896, T18, T17);
            R0[WS(rs, 11)] = SIMD_FNMADD(KP1_326827896, T18, T17);
        }
    }
}

template <>
struct r2cb_traits<18, 3>
{
    static constexpr long_t flops           = 124;
    static constexpr long_t operations      = 79;
    static constexpr long_t memory_accesses = 33;
    static constexpr long_t stack_vars      = 94;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 3 -name
 * r2cb -standalone */

/*
 * This function contains 79 FP additions, 45 FP multiplications,
 * (or, 34 additions, 0 multiplications, 45 fused multiply/add),
 * 94 stack variables, 14 constants, and 33 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 3>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Te, T12, TK, Tv, Tw, TA, Ta, TC, Tm, Tx, Td, Tf, Tn, To, Tq;
        SIMD_FLOAT TH, T7, T11, Tr, TI, TJ, T1, T2, T4, T5, T8, T9, Tk, Tl, T3;
        SIMD_FLOAT T6, Tb, Tc, Ty, Tg, TD, Tp, TL, T1d, TE, Ts, TQ, Tz, T17, Th;
        SIMD_FLOAT TN, TF, T14, Tt;
        TI  = Ci[WS(cs, 6)];
        TJ  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 3)];
        T5  = Cr[WS(cs, 6)];
        T8  = Cr[WS(cs, 7)];
        T9  = Cr[WS(cs, 2)];
        Tk  = Ci[WS(cs, 2)];
        Tl  = Ci[WS(cs, 7)];
        Tb  = Cr[WS(cs, 1)];
        Tc  = Cr[WS(cs, 8)];
        Te  = Cr[WS(cs, 5)];
        T12 = TI + TJ;
        TK  = TI - TJ;
        Tv  = T1 + T2;
        T3  = T1 - T2;
        Tw  = T4 + T5;
        T6  = T4 - T5;
        TA  = T8 + T9;
        Ta  = T8 - T9;
        TC  = Tk - Tl;
        Tm  = Tk + Tl;
        Tx  = Tb + Tc;
        Td  = Tb - Tc;
        Tf  = Cr[WS(cs, 4)];
        Tn  = Ci[WS(cs, 8)];
        To  = Ci[WS(cs, 1)];
        Tq  = Ci[WS(cs, 4)];
        TH  = Tv - Tw;
        T7  = SIMD_FNMADD(KP2_000000000, T6, T3);
        T11 = T3 + T6;
        Tr  = Ci[WS(cs, 5)];
        Ty  = Te + Tf;
        Tg  = Te - Tf;
        TD  = Tn - To;
        Tp  = Tn + To;
        TL  = SIMD_FNMADD(KP1_732050807, TK, TH);
        T1d = SIMD_FMADD(KP1_732050807, T12, T11);
        TE  = Tr - Tq;
        Ts  = Tq + Tr;
        TQ  = Tx - Ty;
        Tz  = Tx + Ty;
        T17 = Td - Tg;
        Th  = Td + Tg;
        TN  = TD - TE;
        TF  = TD + TE;
        T14 = Tp + Ts;
        Tt  = Tp - Ts;
        {
            SIMD_FLOAT TB, TM, Ti, T13, TG, TP, Tu, T16, TO, TW, Tj, T1f, T15,
                TR, TV;
            SIMD_FLOAT T1e, T18, TU, TS, TX, T10, T1i, T1g, T19, T1c, TT, TY,
                T1h, T1a, TZ;
            SIMD_FLOAT T1b;
            TB             = SIMD_FMADD(KP2_000000000, Tw, Tv) - Tz - TA;
            TM             = SIMD_FNMADD(KP500000000, Tz, TA);
            Ti             = Ta + Th;
            T13            = SIMD_FNMADD(KP500000000, Th, Ta);
            TG             = TC + TF;
            TP             = SIMD_FNMADD(KP500000000, TF, TC);
            Tu             = Tm + Tt;
            T16            = SIMD_FNMADD(KP500000000, Tt, Tm);
            TO             = SIMD_FNMADD(KP866025403, TN, TM);
            TW             = SIMD_FMADD(KP866025403, TN, TM);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, Ti, T7);
            Tj             = T7 + Ti;
            T1f            = SIMD_FNMADD(KP866025403, T14, T13);
            T15            = SIMD_FMADD(KP866025403, T14, T13);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP1_732050807, TG, TB);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_732050807, TG, TB);
            TR             = SIMD_FMADD(KP866025403, TQ, TP);
            TV             = SIMD_FNMADD(KP866025403, TQ, TP);
            T1e            = SIMD_FMADD(KP866025403, T17, T16);
            T18            = SIMD_FNMADD(KP866025403, T17, T16);
            R0[0]          = SIMD_FNMADD(KP1_732050807, Tu, Tj);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, Tu, Tj);
            TU             = SIMD_FMADD(KP839099631, TO, TR);
            TS             = SIMD_FNMADD(KP839099631, TR, TO);
            TX             = SIMD_FNMADD(KP176326980, TW, TV);
            T10            = SIMD_FMADD(KP176326980, TV, TW);
            T1i            = SIMD_FNMADD(KP176326980, T1e, T1f);
            T1g            = SIMD_FMADD(KP176326980, T1f, T1e);
            T19            = SIMD_FMADD(KP839099631, T18, T15);
            T1c            = SIMD_FNMADD(KP839099631, T15, T18);
            TT             = SIMD_FNMADD(KP766044443, TS, TL);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_532088886, TS, TL);
            TY             = SIMD_FMADD(KP568579021, TX, TK);
            T1h            = SIMD_FMADD(KP984807753, T1g, T1d);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_969615506, T1g, T1d);
            T1a            = SIMD_FNMADD(KP442275965, T19, T12);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_326827896, TU, TT);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_326827896, TU, TT);
            TZ             = SIMD_FMADD(KP1_732050807, TY, TH);
            R0[WS(rs, 14)] = SIMD_FNMADD(KP1_705737063, T1i, T1h);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_705737063, T1i, T1h);
            T1b            = SIMD_FNMADD(KP1_732050807, T1a, T11);
            R0[WS(rs, 11)] = SIMD_FNMADD(KP1_705737063, T10, TZ);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_705737063, T10, TZ);
            R0[WS(rs, 10)] = SIMD_FNMADD(KP1_326827896, T1c, T1b);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_326827896, T1c, T1b);
        }
    }
}

template <>
struct r2cb_traits<18, 4>
{
    static constexpr long_t flops           = 122;
    static constexpr long_t operations      = 78;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 92;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 4 -name
 * r2cb -standalone */

/*
 * This function contains 78 FP additions, 44 FP multiplications,
 * (or, 34 additions, 0 multiplications, 44 fused multiply/add),
 * 92 stack variables, 14 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 4>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Te, TW, To, Tj, Tk, Tq, Ta, TY, TF, Tr, Td, Tf, Tv, Tw, Ty;
        SIMD_FLOAT Tl, T7, TV, Tz, Tm, Tn, T1, T2, T4, T5, T8, T9, TD, TE, T3;
        SIMD_FLOAT T6, Tb, Tc, Ts, Tg, T10, Tx, Tp, TX, TZ, TA, TI, Tt, T13, Th;
        Tm  = Ci[WS(cs, 6)];
        Tn  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 3)];
        T5  = Cr[WS(cs, 6)];
        T8  = Cr[WS(cs, 7)];
        T9  = Cr[WS(cs, 2)];
        TD  = Ci[WS(cs, 2)];
        TE  = Ci[WS(cs, 7)];
        Tb  = Cr[WS(cs, 1)];
        Tc  = Cr[WS(cs, 8)];
        Te  = Cr[WS(cs, 5)];
        TW  = Tm + Tn;
        To  = Tm - Tn;
        Tj  = T1 + T2;
        T3  = T1 - T2;
        Tk  = T4 + T5;
        T6  = T4 - T5;
        Tq  = T8 + T9;
        Ta  = T8 - T9;
        TY  = TD + TE;
        TF  = TD - TE;
        Tr  = Tb + Tc;
        Td  = Tb - Tc;
        Tf  = Cr[WS(cs, 4)];
        Tv  = Ci[WS(cs, 8)];
        Tw  = Ci[WS(cs, 1)];
        Ty  = Ci[WS(cs, 5)];
        Tl  = Tj - Tk;
        T7  = SIMD_FNMADD(KP2_000000000, T6, T3);
        TV  = T3 + T6;
        Tz  = Ci[WS(cs, 4)];
        Ts  = Te + Tf;
        Tg  = Te - Tf;
        T10 = Tv + Tw;
        Tx  = Tv - Tw;
        Tp  = SIMD_FNMADD(KP1_732050807, To, Tl);
        TX  = SIMD_FMADD(KP1_732050807, TW, TV);
        TZ  = Ty + Tz;
        TA  = Ty - Tz;
        TI  = Tr - Ts;
        Tt  = Tr + Ts;
        T13 = Td - Tg;
        Th  = Td + Tg;
        {
            SIMD_FLOAT T16, T11, TB, TG, TT, Tu, Ti, T15, T12, TH, TU, TO, TC,
                T1b, T17;
            SIMD_FLOAT T1c, T14, TN, TJ, T18, T1a, T1g, T1d, TK, TM, TS, TP,
                T19, T1e, TL;
            SIMD_FLOAT TQ, T1f, TR;
            T16            = T10 + TZ;
            T11            = TZ - T10;
            TB             = Tx - TA;
            TG             = Tx + TA;
            TT             = SIMD_FMADD(KP2_000000000, Tk, Tj) - Tt - Tq;
            Tu             = SIMD_FNMADD(KP500000000, Tt, Tq);
            Ti             = Ta + Th;
            T15            = SIMD_FNMADD(KP500000000, Th, Ta);
            T12            = SIMD_FMADD(KP500000000, T11, TY);
            TH             = SIMD_FNMADD(KP500000000, TG, TF);
            TU             = TG + TF;
            TO             = SIMD_FMADD(KP866025403, TB, Tu);
            TC             = SIMD_FNMADD(KP866025403, TB, Tu);
            R0[WS(rs, 11)] = T7 + SIMD_FMADD(KP1_732050807, TY - T11, Ti);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP2_000000000, Ti, T7);
            T1b            = SIMD_FMADD(KP866025403, T16, T15);
            T17            = SIMD_FNMADD(KP866025403, T16, T15);
            T1c            = SIMD_FNMADD(KP866025403, T13, T12);
            T14            = SIMD_FMADD(KP866025403, T13, T12);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_732050807, TU, TT);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_732050807, TU, TT);
            TN             = SIMD_FNMADD(KP866025403, TI, TH);
            TJ             = SIMD_FMADD(KP866025403, TI, TH);
            T18            = SIMD_FMADD(KP176326980, T17, T14);
            T1a            = SIMD_FNMADD(KP176326980, T14, T17);
            T1g            = SIMD_FNMADD(KP839099631, T1b, T1c);
            T1d            = SIMD_FMADD(KP839099631, T1c, T1b);
            TK             = SIMD_FNMADD(KP839099631, TJ, TC);
            TM             = SIMD_FMADD(KP839099631, TC, TJ);
            TS             = SIMD_FMADD(KP176326980, TN, TO);
            TP             = SIMD_FNMADD(KP176326980, TO, TN);
            T19            = SIMD_FMADD(KP984807753, T18, TX);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_969615506, T18, TX);
            T1e            = SIMD_FNMADD(KP442275965, T1d, TW);
            TL             = SIMD_FNMADD(KP766044443, TK, Tp);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_532088886, TK, Tp);
            TQ             = SIMD_FMADD(KP568579021, TP, To);
            R0[WS(rs, 13)] = SIMD_FNMADD(KP1_705737063, T1a, T19);
            R0[WS(rs, 1)]  = SIMD_FMADD(KP1_705737063, T1a, T19);
            T1f            = SIMD_FNMADD(KP1_732050807, T1e, TV);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_326827896, TM, TL);
            R0[0]          = SIMD_FNMADD(KP1_326827896, TM, TL);
            TR             = SIMD_FMADD(KP1_732050807, TQ, Tl);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP1_326827896, T1g, T1f);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_326827896, T1g, T1f);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_705737063, TS, TR);
            R0[WS(rs, 10)] = SIMD_FNMADD(KP1_705737063, TS, TR);
        }
    }
}

template <>
struct r2cb_traits<18, 5>
{
    static constexpr long_t flops           = 118;
    static constexpr long_t operations      = 76;
    static constexpr long_t memory_accesses = 31;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 5 -name
 * r2cb -standalone */

/*
 * This function contains 76 FP additions, 42 FP multiplications,
 * (or, 34 additions, 0 multiplications, 42 fused multiply/add),
 * 90 stack variables, 13 constants, and 31 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 5>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Th, TP, Ta, T3, T6, TZ, Td, TQ, Tw, TV, Tg, Ti, Tm, Tn, Tp;
        SIMD_FLOAT TO, T1e, T7, Tq, T8, T9, T1, T2, T4, T5, Tb, Tc, Tu, Tv, TM;
        SIMD_FLOAT TN, Te, Tf, TW, Tj, TR, To, T18, TF, TS, Tr, TX, T10, Tz, Tk;
        T8  = Ci[WS(cs, 6)];
        T9  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 6)];
        T5  = Cr[WS(cs, 3)];
        Tb  = Ci[WS(cs, 2)];
        Tc  = Ci[WS(cs, 7)];
        Tu  = Cr[WS(cs, 2)];
        Tv  = Cr[WS(cs, 7)];
        Te  = Ci[WS(cs, 5)];
        Tf  = Ci[WS(cs, 4)];
        Th  = Ci[WS(cs, 8)];
        TP  = T8 + T9;
        Ta  = T8 - T9;
        TM  = T1 - T2;
        T3  = T1 + T2;
        TN  = T5 - T4;
        T6  = T4 + T5;
        TZ  = Tb + Tc;
        Td  = Tb - Tc;
        TQ  = Tv - Tu;
        Tw  = Tu + Tv;
        TV  = Te + Tf;
        Tg  = Te - Tf;
        Ti  = Ci[WS(cs, 1)];
        Tm  = Cr[WS(cs, 8)];
        Tn  = Cr[WS(cs, 1)];
        Tp  = Cr[WS(cs, 4)];
        TO  = TM + TN;
        T1e = SIMD_FNMADD(KP2_000000000, TN, TM);
        T7  = T3 - T6;
        Tq  = Cr[WS(cs, 5)];
        TW  = Th + Ti;
        Tj  = Th - Ti;
        TR  = Tn - Tm;
        To  = Tm + Tn;
        T18 = SIMD_FMADD(KP1_732050807, TP, TO);
        TF  = SIMD_FNMADD(KP1_732050807, Ta, T7);
        TS  = Tq - Tp;
        Tr  = Tp + Tq;
        TX  = TV + TW;
        T10 = TV - TW;
        Tz  = Tj - Tg;
        Tk  = Tg + Tj;
        {
            SIMD_FLOAT T12, TT, Ts, Tx, T11, Tl, TL, TU, T1f, TK, Ty, T13, T19,
                Tt, TG;
            SIMD_FLOAT TY, T1a, TA, TH, T1b, T1d, T17, T14, TI, TJ, TE, TB, T1c,
                T15, TC;
            SIMD_FLOAT T16, TD;
            T12            = TR - TS;
            TT             = TR + TS;
            Ts             = To - Tr;
            Tx             = To + Tr;
            T11            = SIMD_FMADD(KP500000000, T10, TZ);
            Tl             = SIMD_FNMADD(KP500000000, Tk, Td);
            TL             = Td + Tk;
            TU             = SIMD_FNMADD(KP500000000, TT, TQ);
            T1f            = TT + TQ;
            TK             = SIMD_FMADD(KP2_000000000, T6, T3) - Tw - Tx;
            Ty             = SIMD_FNMADD(KP500000000, Tx, Tw);
            T13            = SIMD_FNMADD(KP866025403, T12, T11);
            T19            = SIMD_FMADD(KP866025403, T12, T11);
            Tt             = SIMD_FNMADD(KP866025403, Ts, Tl);
            TG             = SIMD_FMADD(KP866025403, Ts, Tl);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, TZ - T10, T1e) + T1f;
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP2_000000000, T1f, T1e);
            TY             = SIMD_FMADD(KP866025403, TX, TU);
            T1a            = SIMD_FNMADD(KP866025403, TX, TU);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, TL, TK);
            R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, TL, TK);
            TA             = SIMD_FMADD(KP866025403, Tz, Ty);
            TH             = SIMD_FNMADD(KP866025403, Tz, Ty);
            T1b            = SIMD_FMADD(KP176326980, T1a, T19);
            T1d            = SIMD_FNMADD(KP176326980, T19, T1a);
            T17            = SIMD_FNMADD(KP839099631, TY, T13);
            T14            = SIMD_FMADD(KP839099631, T13, TY);
            TI             = SIMD_FMADD(KP176326980, TH, TG);
            TJ             = SIMD_FNMADD(KP839099631, TG, TH);
            TE             = SIMD_FMADD(KP176326980, Tt, TA);
            TB             = SIMD_FNMADD(KP176326980, TA, Tt);
            T1c            = SIMD_FMADD(KP984807753, T1b, T18);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_969615506, T1b, T18);
            T15            = SIMD_FNMADD(KP442275965, T14, TP);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_532088886, TJ, TF);
            R0[WS(rs, 11)] = SIMD_FMADD(KP1_969615506, TI, TF);
            TC             = SIMD_FMADD(KP568579021, TB, Ta);
            R0[0]          = SIMD_FMADD(KP1_705737063, T1d, T1c);
            R0[WS(rs, 12)] = SIMD_FNMADD(KP1_705737063, T1d, T1c);
            T16            = SIMD_FNMADD(KP1_732050807, T15, TO);
            TD             = SIMD_FMADD(KP1_732050807, TC, T7);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_326827896, T17, T16);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_326827896, T17, T16);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP1_705737063, TE, TD);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_705737063, TE, TD);
        }
    }
}

template <>
struct r2cb_traits<18, 6>
{
    static constexpr long_t flops           = 114;
    static constexpr long_t operations      = 74;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 88;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 6 -name
 * r2cb -standalone */

/*
 * This function contains 74 FP additions, 40 FP multiplications,
 * (or, 34 additions, 0 multiplications, 40 fused multiply/add),
 * 88 stack variables, 12 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 6>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Te, TZ, TI, Tj, Tk, To, Ta, TB, Ts, Tl, Td, Tf, Tt, Tu, Tw;
        SIMD_FLOAT TF, T7, TY, Tx, TG, TH, T1, T2, T4, T5, T8, T9, Tq, Tr, T3;
        SIMD_FLOAT T6, Tb, Tc, Tm, Tg, TC, Tv, TJ, T1a, TD, Ty, TO, Tn, T14, Th;
        TG  = Ci[WS(cs, 6)];
        TH  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 3)];
        T5  = Cr[WS(cs, 6)];
        T8  = Cr[WS(cs, 7)];
        T9  = Cr[WS(cs, 2)];
        Tq  = Ci[WS(cs, 2)];
        Tr  = Ci[WS(cs, 7)];
        Tb  = Cr[WS(cs, 1)];
        Tc  = Cr[WS(cs, 8)];
        Te  = Cr[WS(cs, 5)];
        TZ  = TG + TH;
        TI  = TG - TH;
        Tj  = T1 + T2;
        T3  = T1 - T2;
        Tk  = T5 + T4;
        T6  = T4 - T5;
        To  = T9 + T8;
        Ta  = T8 - T9;
        TB  = Tq + Tr;
        Ts  = Tq - Tr;
        Tl  = Tc + Tb;
        Td  = Tb - Tc;
        Tf  = Cr[WS(cs, 4)];
        Tt  = Ci[WS(cs, 8)];
        Tu  = Ci[WS(cs, 1)];
        Tw  = Ci[WS(cs, 5)];
        TF  = Tj - Tk;
        T7  = SIMD_FNMADD(KP2_000000000, T6, T3);
        TY  = T3 + T6;
        Tx  = Ci[WS(cs, 4)];
        Tm  = Tf + Te;
        Tg  = Te - Tf;
        TC  = Tt + Tu;
        Tv  = Tt - Tu;
        TJ  = SIMD_FNMADD(KP1_732050807, TI, TF);
        T1a = SIMD_FMADD(KP1_732050807, TZ, TY);
        TD  = Tw + Tx;
        Ty  = Tw - Tx;
        TO  = Tl - Tm;
        Tn  = Tl + Tm;
        T14 = Tg - Td;
        Th  = Td + Tg;
        {
            SIMD_FLOAT T11, TE, TL, Tz, Tp, TK, Ti, T10, T13, TN, TA, TT, TM,
                T12, T1c;
            SIMD_FLOAT T15, T1b, TS, TP, T1d, T1e, T19, T16, TQ, TR, TX, TU,
                T17, TV, T18;
            SIMD_FLOAT TW;
            T11            = TC + TD;
            TE             = TC - TD;
            TL             = Tv - Ty;
            Tz             = Tv + Ty;
            Tp             = SIMD_FMADD(KP2_000000000, Tk, Tj) - Tn - To;
            TK             = SIMD_FNMADD(KP500000000, Tn, To);
            Ti             = Ta + Th;
            T10            = SIMD_FNMADD(KP500000000, Th, Ta);
            T13            = SIMD_FNMADD(KP500000000, TE, TB);
            TN             = SIMD_FNMADD(KP500000000, Tz, Ts);
            TA             = Ts + Tz;
            TT             = SIMD_FMADD(KP866025403, TL, TK);
            TM             = SIMD_FNMADD(KP866025403, TL, TK);
            R0[WS(rs, 9)]  = T7 + SIMD_FMADD(KP1_732050807, TB + TE, Ti);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, Ti, T7);
            T12            = SIMD_FMADD(KP866025403, T11, T10);
            T1c            = SIMD_FNMADD(KP866025403, T11, T10);
            T15            = SIMD_FMADD(KP866025403, T14, T13);
            T1b            = SIMD_FNMADD(KP866025403, T14, T13);
            R0[0]          = SIMD_FMADD(KP1_732050807, TA, Tp);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, TA, Tp);
            TS             = SIMD_FNMADD(KP866025403, TO, TN);
            TP             = SIMD_FMADD(KP866025403, TO, TN);
            T1d            = SIMD_FMADD(KP176326980, T1c, T1b);
            T1e            = SIMD_FNMADD(KP839099631, T1b, T1c);
            T19            = SIMD_FNMADD(KP839099631, T12, T15);
            T16            = SIMD_FMADD(KP839099631, T15, T12);
            TQ             = SIMD_FNMADD(KP839099631, TP, TM);
            TR             = SIMD_FMADD(KP176326980, TM, TP);
            TX             = SIMD_FMADD(KP176326980, TS, TT);
            TU             = SIMD_FNMADD(KP176326980, TT, TS);
            R0[WS(rs, 11)] = SIMD_FNMADD(KP1_532088886, T1e, T1a);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_969615506, T1d, T1a);
            T17            = SIMD_FNMADD(KP442275965, T16, TZ);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_969615506, TR, TJ);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_532088886, TQ, TJ);
            TV             = SIMD_FMADD(KP568579021, TU, TI);
            T18            = SIMD_FNMADD(KP1_732050807, T17, TY);
            TW             = SIMD_FMADD(KP1_732050807, TV, TF);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_326827896, T19, T18);
            R0[WS(rs, 1)]  = SIMD_FMADD(KP1_326827896, T19, T18);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_705737063, TX, TW);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_705737063, TX, TW);
        }
    }
}

template <>
struct r2cb_traits<18, 7>
{
    static constexpr long_t flops           = 112;
    static constexpr long_t operations      = 73;
    static constexpr long_t memory_accesses = 29;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 7 -name
 * r2cb -standalone */

/*
 * This function contains 73 FP additions, 39 FP multiplications,
 * (or, 34 additions, 0 multiplications, 39 fused multiply/add),
 * 87 stack variables, 12 constants, and 29 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 7>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_326827896, +1.326827896337876792410842639271782594433726619);
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP442275965, +0.442275965445958930803614213090594198144575540);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Te, TY, Tw, TM, TN, TT, Ta, TR, Ts, TU, Td, Tf, Tj, Tk, Tm;
        SIMD_FLOAT TX, T7, Tt, Tn, Tu, Tv, T1, T2, T4, T5, T8, T9, Tq, Tr, T3;
        SIMD_FLOAT T6, Tb, Tc, TV, Tg, TO, Tl, T19, TH, TP, To, T10, TW, TB, Th;
        Tu  = Ci[WS(cs, 6)];
        Tv  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 3)];
        T5  = Cr[WS(cs, 6)];
        T8  = Cr[WS(cs, 7)];
        T9  = Cr[WS(cs, 2)];
        Tq  = Ci[WS(cs, 2)];
        Tr  = Ci[WS(cs, 7)];
        Tb  = Cr[WS(cs, 1)];
        Tc  = Cr[WS(cs, 8)];
        Te  = Cr[WS(cs, 5)];
        TY  = Tu - Tv;
        Tw  = Tu + Tv;
        TM  = T1 + T2;
        T3  = T1 - T2;
        TN  = T5 + T4;
        T6  = T4 - T5;
        TT  = T9 + T8;
        Ta  = T8 - T9;
        TR  = Tq - Tr;
        Ts  = Tq + Tr;
        TU  = Tc + Tb;
        Td  = Tb - Tc;
        Tf  = Cr[WS(cs, 4)];
        Tj  = Ci[WS(cs, 8)];
        Tk  = Ci[WS(cs, 1)];
        Tm  = Ci[WS(cs, 4)];
        TX  = TM - TN;
        T7  = SIMD_FNMADD(KP2_000000000, T6, T3);
        Tt  = T3 + T6;
        Tn  = Ci[WS(cs, 5)];
        TV  = Tf + Te;
        Tg  = Te - Tf;
        TO  = Tk - Tj;
        Tl  = Tj + Tk;
        T19 = SIMD_FNMADD(KP1_732050807, TY, TX);
        TH  = SIMD_FMADD(KP1_732050807, Tw, Tt);
        TP  = Tm - Tn;
        To  = Tm + Tn;
        T10 = TU - TV;
        TW  = TU + TV;
        TB  = Tg - Td;
        Th  = Td + Tg;
        {
            SIMD_FLOAT T13, TQ, Ty, Tp, T12, Tx, Ti, TZ, TS, TA, T1a, T14, TI,
                Tz, T11;
            SIMD_FLOAT T1b, TC, TJ, T1c, T1d, T18, T15, TK, TL, TG, TD, T16, TE,
                T17, TF;
            T13           = TP - TO;
            TQ            = TO + TP;
            Ty            = Tl + To;
            Tp            = Tl - To;
            T12           = SIMD_FNMADD(KP500000000, TW, TT);
            Tx            = SIMD_FNMADD(KP500000000, Th, Ta);
            Ti            = Ta + Th;
            TZ            = SIMD_FMADD(KP500000000, TQ, TR);
            TS            = TQ - TR;
            TA            = SIMD_FNMADD(KP500000000, Tp, Ts);
            T1a           = SIMD_FNMADD(KP866025403, T13, T12);
            T14           = SIMD_FMADD(KP866025403, T13, T12);
            R0[WS(rs, 8)] = T7 + SIMD_FMADD(KP1_732050807, Tp + Ts, Ti);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP2_000000000, Ti, T7);
            TI            = SIMD_FNMADD(KP866025403, Ty, Tx);
            Tz            = SIMD_FMADD(KP866025403, Ty, Tx);
            R0[WS(rs, 5)] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, TS, TN), TM) -
                TT - TW;
            T11            = SIMD_FNMADD(KP866025403, T10, TZ);
            T1b            = SIMD_FMADD(KP866025403, T10, TZ);
            TC             = SIMD_FMADD(KP866025403, TB, TA);
            TJ             = SIMD_FNMADD(KP866025403, TB, TA);
            T1c            = SIMD_FNMADD(KP839099631, T1b, T1a);
            T1d            = SIMD_FMADD(KP176326980, T1a, T1b);
            T18            = SIMD_FMADD(KP176326980, T11, T14);
            T15            = SIMD_FNMADD(KP176326980, T14, T11);
            TK             = SIMD_FNMADD(KP839099631, TJ, TI);
            TL             = SIMD_FMADD(KP176326980, TI, TJ);
            TG             = SIMD_FNMADD(KP839099631, Tz, TC);
            TD             = SIMD_FMADD(KP839099631, TC, Tz);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_969615506, T1d, T19);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP1_532088886, T1c, T19);
            T16            = SIMD_FMADD(KP568579021, T15, TY);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_969615506, TL, TH);
            R0[WS(rs, 10)] = SIMD_FNMADD(KP1_532088886, TK, TH);
            TE             = SIMD_FNMADD(KP442275965, TD, Tw);
            T17            = SIMD_FMADD(KP1_732050807, T16, TX);
            TF             = SIMD_FNMADD(KP1_732050807, TE, Tt);
            R0[WS(rs, 1)]  = SIMD_FMADD(KP1_705737063, T18, T17);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_705737063, T18, T17);
            R0[0]          = SIMD_FMADD(KP1_326827896, TG, TF);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_326827896, TG, TF);
        }
    }
}

template <>
struct r2cb_traits<18, 8>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 70;
    static constexpr long_t memory_accesses = 28;
    static constexpr long_t stack_vars      = 86;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 8 -name
 * r2cb -standalone */

/*
 * This function contains 70 FP additions, 36 FP multiplications,
 * (or, 34 additions, 0 multiplications, 36 fused multiply/add),
 * 86 stack variables, 13 constants, and 28 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 8>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_705737063, +1.705737063904886419256501927880148143872040591);
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Th, TT, Ta, T3, T6, TY, Td, TO, Tw, Tg, TV, Ti, Tm, Tn, Tp;
        SIMD_FLOAT TN, T1a, T7, Tq, T8, T9, T1, T2, T4, T5, Tb, Tc, Tu, Tv, TL;
        SIMD_FLOAT TM, Te, Tf, TW, Tj, TP, To, T15, TF, TQ, Tr;
        T8  = Ci[WS(cs, 6)];
        T9  = Ci[WS(cs, 3)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 9)];
        T4  = Cr[WS(cs, 6)];
        T5  = Cr[WS(cs, 3)];
        Tb  = Ci[WS(cs, 2)];
        Tc  = Ci[WS(cs, 7)];
        Tu  = Cr[WS(cs, 2)];
        Tv  = Cr[WS(cs, 7)];
        Te  = Ci[WS(cs, 1)];
        Tf  = Ci[WS(cs, 8)];
        Th  = Ci[WS(cs, 4)];
        TT  = T8 + T9;
        Ta  = T8 - T9;
        TL  = T1 - T2;
        T3  = T1 + T2;
        TM  = T5 - T4;
        T6  = T4 + T5;
        TY  = Tb + Tc;
        Td  = Tb - Tc;
        TO  = Tv - Tu;
        Tw  = Tu + Tv;
        Tg  = Te - Tf;
        TV  = Tf + Te;
        Ti  = Ci[WS(cs, 5)];
        Tm  = Cr[WS(cs, 8)];
        Tn  = Cr[WS(cs, 1)];
        Tp  = Cr[WS(cs, 4)];
        TN  = TL + TM;
        T1a = SIMD_FNMADD(KP2_000000000, TM, TL);
        T7  = T3 - T6;
        Tq  = Cr[WS(cs, 5)];
        TW  = Ti + Th;
        Tj  = Th - Ti;
        TP  = Tn - Tm;
        To  = Tm + Tn;
        T15 = SIMD_FMADD(KP1_732050807, TT, TN);
        TF  = SIMD_FNMADD(KP1_732050807, Ta, T7);
        TQ  = Tq - Tp;
        Tr  = Tp + Tq;
        {
            SIMD_FLOAT TZ, TX, Tz, Tk, TR, T11, Ts, Tx, T10, Tl, TK, TS, T1b,
                Ty, T16;
            SIMD_FLOAT T12, Tt, TG, T17, TU, TA, TH, T13, T19, T18, TJ, TI, TB,
                TE, T14;
            SIMD_FLOAT TC, TD;
            TZ  = TV - TW;
            TX  = TV + TW;
            Tz  = Tj - Tg;
            Tk  = Tg + Tj;
            TR  = TP + TQ;
            T11 = TQ - TP;
            Ts  = To - Tr;
            Tx  = To + Tr;
            T10 = SIMD_FNMADD(KP500000000, TZ, TY);
            Tl  = SIMD_FMADD(KP500000000, Tk, Td);
            TK  = Tk - Td;
            TS  = SIMD_FNMADD(KP500000000, TR, TO);
            T1b = TR + TO;
            Ty  = SIMD_FNMADD(KP500000000, Tx, Tw);
            T16 = SIMD_FNMADD(KP866025403, T11, T10);
            T12 = SIMD_FMADD(KP866025403, T11, T10);
            R0[WS(rs, 4)] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, TK, T6), T3) -
                Tx - Tw;
            Tt            = SIMD_FNMADD(KP866025403, Ts, Tl);
            TG            = SIMD_FMADD(KP866025403, Ts, Tl);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_732050807, TY + TZ, T1a) + T1b;
            R0[WS(rs, 1)] = SIMD_FNMADD(KP2_000000000, T1b, T1a);
            T17           = SIMD_FNMADD(KP866025403, TX, TS);
            TU            = SIMD_FNMADD(KP921604985, TT, TS);
            TA            = SIMD_FMADD(KP866025403, Tz, Ty);
            TH            = SIMD_FNMADD(KP866025403, Tz, Ty);
            T13           = SIMD_FNMADD(KP420276625, T12, TX);
            T19           = SIMD_FNMADD(KP839099631, T16, T17);
            T18           = SIMD_FMADD(KP176326980, T17, T16);
            TJ            = SIMD_FNMADD(KP839099631, TG, TH);
            TI            = SIMD_FMADD(KP176326980, TH, TG);
            TB            = SIMD_FNMADD(KP176326980, TA, Tt);
            TE            = SIMD_FMADD(KP176326980, Tt, TA);
            T14           = SIMD_FMADD(KP866025403, T13, TU);
            R0[WS(rs, 9)] = SIMD_FNMADD(KP1_532088886, T19, T15);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_969615506, T18, T15);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_532088886, TJ, TF);
            R0[WS(rs, 8)] = SIMD_FMADD(KP1_969615506, TI, TF);
            TC            = SIMD_FMADD(KP568579021, TB, Ta);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_879385241, T14, TN);
            TD            = SIMD_FMADD(KP1_732050807, TC, T7);
            R0[0]         = SIMD_FMADD(KP1_705737063, TE, TD);
            R0[WS(rs, 6)] = SIMD_FNMADD(KP1_705737063, TE, TD);
        }
    }
}

template <>
struct r2cb_traits<18, 9>
{
    static constexpr long_t flops           = 100;
    static constexpr long_t operations      = 67;
    static constexpr long_t memory_accesses = 27;
    static constexpr long_t stack_vars      = 83;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 9 -name
 * r2cb -standalone */

/*
 * This function contains 67 FP additions, 33 FP multiplications,
 * (or, 34 additions, 0 multiplications, 33 fused multiply/add),
 * 83 stack variables, 12 constants, and 27 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 9>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Te, TW, TD, Tj, Tk, Tw, Ta, TU, Tu, Tx, Td, Tf, Tl, Tm, To;
        SIMD_FLOAT TA, T7, TV, Tp, TB, TC, T1, T2, T4, T5, T8, T9, Ts, Tt, Tb;
        SIMD_FLOAT Tc, T3, T6, Ty, Tg, TS, Tn, TE, TX, TR, Tq;
        TB = Ci[WS(cs, 6)];
        TC = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        T4 = Cr[WS(cs, 3)];
        T5 = Cr[WS(cs, 6)];
        T8 = Cr[WS(cs, 7)];
        T9 = Cr[WS(cs, 2)];
        Ts = Ci[WS(cs, 2)];
        Tt = Ci[WS(cs, 7)];
        Tb = Cr[WS(cs, 1)];
        Tc = Cr[WS(cs, 8)];
        Te = Cr[WS(cs, 5)];
        TW = TB + TC;
        TD = TB - TC;
        Tj = T1 + T2;
        T3 = T1 - T2;
        Tk = T5 + T4;
        T6 = T4 - T5;
        Tw = T9 + T8;
        Ta = T8 - T9;
        TU = Ts + Tt;
        Tu = Ts - Tt;
        Tx = Tc + Tb;
        Td = Tb - Tc;
        Tf = Cr[WS(cs, 4)];
        Tl = Ci[WS(cs, 4)];
        Tm = Ci[WS(cs, 5)];
        To = Ci[WS(cs, 1)];
        TA = Tj - Tk;
        T7 = SIMD_FNMADD(KP2_000000000, T6, T3);
        TV = T3 + T6;
        Tp = Ci[WS(cs, 8)];
        Ty = Tf + Te;
        Tg = Te - Tf;
        TS = Tm + Tl;
        Tn = Tl - Tm;
        TE = SIMD_FNMADD(KP1_732050807, TD, TA);
        TX = SIMD_FMADD(KP1_732050807, TW, TV);
        TR = Tp + To;
        Tq = To - Tp;
        {
            SIMD_FLOAT TJ, Tz, Th, T12, TT, TZ, TG, Tr, TF, TY, Ti, T11, Tv, TI,
                TH;
            SIMD_FLOAT T10, T16, T17, T13, TK, TN, T15, T14, T18, TL, TM, TO,
                T19, TP, TQ;
            TJ            = Tx - Ty;
            Tz            = Tx + Ty;
            Th            = Td + Tg;
            T12           = Tg - Td;
            TT            = TR - TS;
            TZ            = TS + TR;
            TG            = Tq - Tn;
            Tr            = Tn + Tq;
            TF            = SIMD_FNMADD(KP500000000, Tz, Tw);
            TY            = SIMD_FNMADD(KP500000000, Th, Ta);
            Ti            = Ta + Th;
            T11           = SIMD_FNMADD(KP500000000, TT, TU);
            Tv            = Tr - Tu;
            TI            = SIMD_FMADD(KP500000000, Tr, Tu);
            TH            = SIMD_FMADD(KP866025403, TG, TF);
            R0[WS(rs, 6)] = T7 + SIMD_FMADD(KP1_732050807, TT + TU, Ti);
            R0[0]         = SIMD_FNMADD(KP2_000000000, Ti, T7);
            T10           = SIMD_FNMADD(KP866025403, TZ, TY);
            T16           = SIMD_FNMADD(KP921604985, TW, TY);
            T17           = SIMD_FMADD(KP866025403, T12, T11);
            T13           = SIMD_FNMADD(KP866025403, T12, T11);
            R0[WS(rs, 3)] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Tv, Tk), Tj) -
                Tw - Tz;
            TK            = SIMD_FMADD(KP866025403, TJ, TI);
            TN            = SIMD_FNMADD(KP866025403, TJ, TI);
            T15           = SIMD_FMADD(KP176326980, T10, T13);
            T14           = SIMD_FNMADD(KP839099631, T13, T10);
            T18           = SIMD_FNMADD(KP420276625, T17, TZ);
            TL            = SIMD_FNMADD(KP839099631, TK, TH);
            TM            = SIMD_FMADD(KP176326980, TH, TK);
            TO            = SIMD_FMADD(KP420276625, TN, TG);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_969615506, T15, TX);
            R0[WS(rs, 8)] = SIMD_FNMADD(KP1_532088886, T14, TX);
            T19           = SIMD_FMADD(KP866025403, T18, T16);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_969615506, TM, TE);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_532088886, TL, TE);
            TP            = SIMD_FMADD(KP939692620, TO, TD);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_879385241, T19, TV);
            TQ            = SIMD_FNMADD(KP921604985, TP, TF);
            R0[WS(rs, 5)] = SIMD_FNMADD(KP1_879385241, TQ, TA);
        }
    }
}

template <>
struct r2cb_traits<18, 10>
{
    static constexpr long_t flops           = 98;
    static constexpr long_t operations      = 66;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 82;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 10 -name
 * r2cb -standalone */

/*
 * This function contains 66 FP additions, 32 FP multiplications,
 * (or, 34 additions, 0 multiplications, 32 fused multiply/add),
 * 82 stack variables, 12 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 10>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    {
        SIMD_FLOAT To, TV, Tv, TJ, T3, TO, T6, TS, Tg, TK, Tk, TL, Tn, Tp, T7;
        SIMD_FLOAT T8, Ta, TU, Ts, Tb, Tt, Tu, T1, T2, T4, T5, Te, Tf, Ti, Tj;
        SIMD_FLOAT Tl, Tm, Tq, TM, T9, TQ, TW, Tw, Tc, TP;
        Tt = Ci[WS(cs, 6)];
        Tu = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        T4 = Cr[WS(cs, 6)];
        T5 = Cr[WS(cs, 3)];
        Te = Ci[WS(cs, 2)];
        Tf = Ci[WS(cs, 7)];
        Ti = Cr[WS(cs, 2)];
        Tj = Cr[WS(cs, 7)];
        Tl = Cr[WS(cs, 8)];
        Tm = Cr[WS(cs, 1)];
        To = Cr[WS(cs, 4)];
        TV = Tt + Tu;
        Tv = Tt - Tu;
        TJ = T1 - T2;
        T3 = T1 + T2;
        TO = T5 - T4;
        T6 = T4 + T5;
        TS = Te + Tf;
        Tg = Te - Tf;
        TK = Tj - Ti;
        Tk = Ti + Tj;
        TL = Tm - Tl;
        Tn = Tl + Tm;
        Tp = Cr[WS(cs, 5)];
        T7 = Ci[WS(cs, 4)];
        T8 = Ci[WS(cs, 5)];
        Ta = Ci[WS(cs, 1)];
        TU = TJ + TO;
        Ts = T3 - T6;
        Tb = Ci[WS(cs, 8)];
        Tq = To + Tp;
        TM = Tp - To;
        T9 = T7 - T8;
        TQ = T8 + T7;
        TW = SIMD_FMADD(KP1_732050807, TV, TU);
        Tw = SIMD_FNMADD(KP1_732050807, Tv, Ts);
        Tc = Ta - Tb;
        TP = Tb + Ta;
        {
            SIMD_FLOAT T11, TN, Tr, TB, TY, TR, Td, Ty, TX, Tx, T10, TT, TA, Th,
                TZ;
            SIMD_FLOAT T15, Tz, T16, T12, TC, TF, T14, T13, T17, TD, TE, TG,
                T18, TH, TI;
            T11           = TM - TL;
            TN            = TL + TM;
            Tr            = Tn + Tq;
            TB            = Tn - Tq;
            TY            = TQ + TP;
            TR            = TP - TQ;
            Td            = T9 + Tc;
            Ty            = Tc - T9;
            TX            = SIMD_FNMADD(KP500000000, TN, TK);
            Tx            = SIMD_FNMADD(KP500000000, Tr, Tk);
            T10           = SIMD_FNMADD(KP500000000, TR, TS);
            TT            = TR + TS;
            TA            = SIMD_FMADD(KP500000000, Td, Tg);
            Th            = Td - Tg;
            TZ            = SIMD_FNMADD(KP866025403, TY, TX);
            T15           = SIMD_FNMADD(KP921604985, TV, TX);
            Tz            = SIMD_FMADD(KP866025403, Ty, Tx);
            R0[WS(rs, 5)] = TJ + TK +
                            SIMD_FNMADD(KP2_000000000,
                                        SIMD_FNMADD(KP866025403, TT, TO), TN);
            T16 = SIMD_FMADD(KP866025403, T11, T10);
            T12 = SIMD_FNMADD(KP866025403, T11, T10);
            R0[WS(rs, 2)] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Th, T6), T3) -
                Tk - Tr;
            TC            = SIMD_FMADD(KP866025403, TB, TA);
            TF            = SIMD_FNMADD(KP866025403, TB, TA);
            T14           = SIMD_FMADD(KP176326980, TZ, T12);
            T13           = SIMD_FNMADD(KP839099631, T12, TZ);
            T17           = SIMD_FNMADD(KP420276625, T16, TY);
            TD            = SIMD_FNMADD(KP839099631, TC, Tz);
            TE            = SIMD_FMADD(KP176326980, Tz, TC);
            TG            = SIMD_FMADD(KP420276625, TF, Ty);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_969615506, T14, TW);
            R0[WS(rs, 7)] = SIMD_FNMADD(KP1_532088886, T13, TW);
            T18           = SIMD_FMADD(KP866025403, T17, T15);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_969615506, TE, Tw);
            R0[0]         = SIMD_FMADD(KP1_532088886, TD, Tw);
            TH            = SIMD_FMADD(KP939692620, TG, Tv);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_879385241, T18, TU);
            TI            = SIMD_FNMADD(KP921604985, TH, Tx);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_879385241, TI, Ts);
        }
    }
}

template <>
struct r2cb_traits<18, 11>
{
    static constexpr long_t flops           = 94;
    static constexpr long_t operations      = 64;
    static constexpr long_t memory_accesses = 25;
    static constexpr long_t stack_vars      = 84;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 11 -name
 * r2cb -standalone */

/*
 * This function contains 64 FP additions, 30 FP multiplications,
 * (or, 34 additions, 0 multiplications, 30 fused multiply/add),
 * 84 stack variables, 15 constants, and 25 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 11>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP1_532088886, +1.532088886237956070404785301110833347871664914);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    {
        SIMD_FLOAT Te, TW, Tl, TJ, T3, TK, T6, TT, Ta, TO, Tw, TQ, Td, Tf, Tn;
        SIMD_FLOAT To, Tq, Tr, T7, TU, Tj, Tk, T1, T2, T4, T5, T8, T9, Tu, Tv;
        SIMD_FLOAT Tb, Tc, TR, Tg, TL, Tp, TM, Ts, TD;
        Tj = Ci[WS(cs, 6)];
        Tk = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        T4 = Cr[WS(cs, 3)];
        T5 = Cr[WS(cs, 6)];
        T8 = Cr[WS(cs, 7)];
        T9 = Cr[WS(cs, 2)];
        Tu = Ci[WS(cs, 2)];
        Tv = Ci[WS(cs, 7)];
        Tb = Cr[WS(cs, 1)];
        Tc = Cr[WS(cs, 8)];
        Te = Cr[WS(cs, 5)];
        TW = Tj - Tk;
        Tl = Tj + Tk;
        TJ = T1 + T2;
        T3 = T1 - T2;
        TK = T5 + T4;
        T6 = T4 - T5;
        TT = T9 + T8;
        Ta = T8 - T9;
        TO = Tu - Tv;
        Tw = Tu + Tv;
        TQ = Tc + Tb;
        Td = Tb - Tc;
        Tf = Cr[WS(cs, 4)];
        Tn = Ci[WS(cs, 4)];
        To = Ci[WS(cs, 5)];
        Tq = Ci[WS(cs, 8)];
        Tr = Ci[WS(cs, 1)];
        T7 = T3 + T6;
        TU = TJ - TK;
        TR = Tf + Te;
        Tg = Te - Tf;
        TL = Tn - To;
        Tp = Tn + To;
        TM = Tr - Tq;
        Ts = Tq + Tr;
        TD = SIMD_FMADD(KP1_732050807, Tl, T7);
        {
            SIMD_FLOAT Th, Tz, TZ, TS, Tx, Tt, TX, TN, Ti, TV, TI, Ty, TP, TY,
                TF;
            SIMD_FLOAT Tm, T14, TE, TA, T10, T15, TG, TH, TB, T11, T16, TC, T12,
                T17, T13;
            Th            = Td + Tg;
            Tz            = Tg - Td;
            TZ            = TQ - TR;
            TS            = TQ + TR;
            Tx            = Ts - Tp;
            Tt            = Tp + Ts;
            TX            = TM - TL;
            TN            = TL + TM;
            Ti            = SIMD_FNMADD(KP500000000, Th, Ta);
            TV            = SIMD_FNMADD(KP500000000, TS, TT);
            TI            = Tw + Tx;
            Ty            = SIMD_FNMADD(KP500000000, Tx, Tw);
            TP            = TN - TO;
            TY            = SIMD_FMADD(KP500000000, TN, TO);
            TF            = SIMD_FNMADD(KP866025403, Tt, Ti);
            Tm            = SIMD_FNMADD(KP921604985, Tl, Ti);
            T14           = SIMD_FMADD(KP866025403, TX, TV);
            R0[WS(rs, 4)] = T3 + Th +
                            SIMD_FNMADD(KP2_000000000,
                                        SIMD_FNMADD(KP866025403, TI, T6), Ta);
            TE = SIMD_FNMADD(KP866025403, Tz, Ty);
            TA = SIMD_FMADD(KP866025403, Tz, Ty);
            R0[WS(rs, 1)] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, TP, TK), TJ) -
                TS - TT;
            T10           = SIMD_FNMADD(KP866025403, TZ, TY);
            T15           = SIMD_FMADD(KP203604859, T14, TZ);
            TG            = SIMD_FMADD(KP176326980, TF, TE);
            TH            = SIMD_FNMADD(KP839099631, TE, TF);
            TB            = SIMD_FNMADD(KP420276625, TA, Tt);
            T11           = SIMD_FMADD(KP420276625, T10, TX);
            T16           = SIMD_FNMADD(KP984807753, T15, TW);
            R0[WS(rs, 6)] = SIMD_FNMADD(KP1_532088886, TH, TD);
            R0[0]         = SIMD_FNMADD(KP1_969615506, TG, TD);
            TC            = SIMD_FMADD(KP866025403, TB, Tm);
            T12           = SIMD_FMADD(KP939692620, T11, TW);
            T17           = SIMD_FNMADD(KP879385241, T16, TY);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_879385241, TC, T7);
            T13           = SIMD_FNMADD(KP921604985, T12, TV);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_969615506, T17, TU);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_879385241, T13, TU);
        }
    }
}

template <>
struct r2cb_traits<18, 12>
{
    static constexpr long_t flops           = 90;
    static constexpr long_t operations      = 62;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 82;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 12 -name
 * r2cb -standalone */

/*
 * This function contains 62 FP additions, 28 FP multiplications,
 * (or, 34 additions, 0 multiplications, 28 fused multiply/add),
 * 82 stack variables, 14 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 12>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP884551930, +0.884551930891917861607228426181188396289151079);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ta, Ts, T3, TV, TH, Tx, T6, Ty, Tg, Tt, Tk, T9, TA, Tb, Tl;
        SIMD_FLOAT Tm, To, Tp, TD, TT, T1, T2, TF, TG, T4, T5, Te, Tf, Ti, Tj;
        SIMD_FLOAT T7, T8, Tc, Tz, Tn, Tu, Tq, Tv;
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        TF = Ci[WS(cs, 6)];
        TG = Ci[WS(cs, 3)];
        T4 = Cr[WS(cs, 6)];
        T5 = Cr[WS(cs, 3)];
        Te = Ci[WS(cs, 2)];
        Tf = Ci[WS(cs, 7)];
        Ti = Cr[WS(cs, 2)];
        Tj = Cr[WS(cs, 7)];
        T7 = Ci[WS(cs, 1)];
        T8 = Ci[WS(cs, 8)];
        Ta = Ci[WS(cs, 4)];
        Ts = T1 - T2;
        T3 = T1 + T2;
        TV = TF + TG;
        TH = TF - TG;
        Tx = T5 - T4;
        T6 = T4 + T5;
        Ty = Te + Tf;
        Tg = Te - Tf;
        Tt = Tj - Ti;
        Tk = Ti + Tj;
        T9 = T7 - T8;
        TA = T8 + T7;
        Tb = Ci[WS(cs, 5)];
        Tl = Cr[WS(cs, 8)];
        Tm = Cr[WS(cs, 1)];
        To = Cr[WS(cs, 4)];
        Tp = Cr[WS(cs, 5)];
        TD = T3 - T6;
        TT = Ts + Tx;
        Tc = Ta - Tb;
        Tz = Tb + Ta;
        Tn = Tl + Tm;
        Tu = Tm - Tl;
        Tq = To + Tp;
        Tv = Tp - To;
        {
            SIMD_FLOAT TX, TB, Td, TK, TZ, Tw, Tr, TI, TY, TC, TE, Th, TU, TJ,
                T14;
            SIMD_FLOAT T10, TP, T13, TW, TL, T11, TQ, T15, TM, T12, TR, T16, TN,
                TS, TO;
            TX            = TA + Tz;
            TB            = Tz - TA;
            Td            = T9 + Tc;
            TK            = T9 - Tc;
            TZ            = Tu - Tv;
            Tw            = Tu + Tv;
            Tr            = Tn + Tq;
            TI            = Tn - Tq;
            TY            = SIMD_FMADD(KP500000000, TB, Ty);
            TC            = Ty - TB;
            TE            = SIMD_FMADD(KP500000000, Td, Tg);
            Th            = Td - Tg;
            TU            = SIMD_FNMADD(KP500000000, Tw, Tt);
            TJ            = SIMD_FNMADD(KP500000000, Tr, Tk);
            R0[WS(rs, 3)] = Ts + Tt +
                            SIMD_FNMADD(KP2_000000000,
                                        SIMD_FNMADD(KP866025403, TC, Tx), Tw);
            T14 = SIMD_FMADD(KP866025403, TZ, TY);
            T10 = SIMD_FNMADD(KP866025403, TZ, TY);
            R0[0] =
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Th, T6), T3) -
                Tk - Tr;
            TP            = SIMD_FNMADD(KP866025403, TI, TE);
            T13           = SIMD_FNMADD(KP866025403, TX, TU);
            TW            = SIMD_FNMADD(KP921604985, TV, TU);
            TL            = SIMD_FMADD(KP866025403, TK, TJ);
            T11           = SIMD_FNMADD(KP420276625, T10, TX);
            TQ            = SIMD_FMADD(KP420276625, TP, TK);
            T15           = SIMD_FNMADD(KP839099631, T14, T13);
            TM            = SIMD_FMADD(KP203604859, TL, TI);
            T12           = SIMD_FMADD(KP866025403, T11, TW);
            TR            = SIMD_FMADD(KP939692620, TQ, TH);
            T16           = SIMD_FNMADD(KP884551930, T15, TV);
            TN            = SIMD_FNMADD(KP984807753, TM, TH);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_879385241, T12, TT);
            TS            = SIMD_FNMADD(KP921604985, TR, TJ);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_732050807, T16, TT);
            TO            = SIMD_FNMADD(KP879385241, TN, TE);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_879385241, TS, TD);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_969615506, TO, TD);
        }
    }
}

template <>
struct r2cb_traits<18, 13>
{
    static constexpr long_t flops           = 83;
    static constexpr long_t operations      = 57;
    static constexpr long_t memory_accesses = 23;
    static constexpr long_t stack_vars      = 79;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 13 -name
 * r2cb -standalone */

/*
 * This function contains 57 FP additions, 26 FP multiplications,
 * (or, 31 additions, 0 multiplications, 26 fused multiply/add),
 * 79 stack variables, 14 constants, and 23 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 13>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP884551930, +0.884551930891917861607228426181188396289151079);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TO, Tl, T3, TI, T6, TJ, Ta, TS, Tw, TK, Td, Tn, To, Tg, TL;
        SIMD_FLOAT Tq, Tr, T7, Tj, Tk, T1, T5, T2, T4, T8, T9, Tu, Tv, Te, Tf;
        SIMD_FLOAT Tb, Tc;
        Tj = Ci[WS(cs, 6)];
        Tk = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T5 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 9)];
        T4 = Cr[WS(cs, 3)];
        T8 = Cr[WS(cs, 7)];
        T9 = Cr[WS(cs, 2)];
        Tu = Ci[WS(cs, 2)];
        Tv = Ci[WS(cs, 7)];
        Tb = Cr[WS(cs, 1)];
        Tc = Cr[WS(cs, 8)];
        Te = Cr[WS(cs, 5)];
        TO = Tj - Tk;
        Tl = Tj + Tk;
        Tf = Cr[WS(cs, 4)];
        T3 = T1 - T2;
        TI = T1 + T2 - T4 - T5;
        T6 = T4 - T5;
        TJ = T9 + T8;
        Ta = T8 - T9;
        TS = Tu - Tv;
        Tw = Tu + Tv;
        TK = Tc + Tb;
        Td = Tb - Tc;
        Tn = Ci[WS(cs, 8)];
        To = Ci[WS(cs, 1)];
        Tg = Te - Tf;
        TL = Tf + Te;
        Tq = Ci[WS(cs, 4)];
        Tr = Ci[WS(cs, 5)];
        T7 = T3 + T6;
        {
            SIMD_FLOAT TP, Tp, Tz, Th, TM, TV, TQ, Ts, Ti, TN, Tt, Tx, TT, TR,
                Tm;
            SIMD_FLOAT TH, Ty, TD, T10, TU, TE, TA, T11, TW, TF, TB, T12, TX,
                TG, TC;
            SIMD_FLOAT T13, TY, TZ;
            TP            = To - Tn;
            Tp            = Tn + To;
            Tz            = Td - Tg;
            Th            = Td + Tg;
            TM            = TK + TL;
            TV            = TK - TL;
            TQ            = Tr - Tq;
            Ts            = Tq + Tr;
            Ti            = SIMD_FNMADD(KP500000000, Th, Ta);
            TN            = SIMD_FNMADD(KP500000000, TM, TJ);
            Tt            = Tp + Ts;
            Tx            = Ts - Tp;
            TT            = TP - TQ;
            TR            = TP + TQ;
            Tm            = SIMD_FNMADD(KP921604985, Tl, Ti);
            TH            = Tw - Tx;
            Ty            = SIMD_FMADD(KP500000000, Tx, Tw);
            TD            = SIMD_FNMADD(KP866025403, Tt, Ti);
            T10           = SIMD_FMADD(KP866025403, TR, TN);
            TU            = SIMD_FMADD(KP500000000, TT, TS);
            R0[WS(rs, 2)] = T3 + Ta +
                            SIMD_FNMADD(KP2_000000000,
                                        SIMD_FNMADD(KP866025403, TH, T6), Th);
            TE            = SIMD_FMADD(KP866025403, Tz, Ty);
            TA            = SIMD_FNMADD(KP866025403, Tz, Ty);
            T11           = SIMD_FMADD(KP203604859, T10, TV);
            TW            = SIMD_FNMADD(KP866025403, TV, TU);
            TF            = SIMD_FNMADD(KP839099631, TE, TD);
            TB            = SIMD_FNMADD(KP420276625, TA, Tt);
            T12           = SIMD_FNMADD(KP984807753, T11, TO);
            TX            = SIMD_FMADD(KP420276625, TW, TR);
            TG            = SIMD_FNMADD(KP884551930, TF, Tl);
            TC            = SIMD_FMADD(KP866025403, TB, Tm);
            T13           = SIMD_FNMADD(KP879385241, T12, TU);
            TY            = SIMD_FMADD(KP939692620, TX, TO);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_732050807, TG, T7);
            R0[0]         = SIMD_FMADD(KP1_879385241, TC, T7);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_969615506, T13, TI);
            TZ            = SIMD_FNMADD(KP921604985, TY, TN);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_879385241, TZ, TI);
        }
    }
}

template <>
struct r2cb_traits<18, 14>
{
    static constexpr long_t flops           = 71;
    static constexpr long_t operations      = 50;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 71;
    static constexpr long_t constants       = 16;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 14 -name
 * r2cb -standalone */

/*
 * This function contains 50 FP additions, 21 FP multiplications,
 * (or, 29 additions, 0 multiplications, 21 fused multiply/add),
 * 71 stack variables, 16 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 14>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_879385241, +1.879385241571816768108218554649462939872416269);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP884551930, +0.884551930891917861607228426181188396289151079);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP507713305, +0.507713305942872492617108842495900175404533673);
    {
        SIMD_FLOAT TO, Tj, TF, T5, TI, T8, TN, Tk, TJ, Tt, Tb, TG, Tl, Tn, To;
        SIMD_FLOAT TH, Te, Th, Ti, T1, T4, T2, T3, T6, T7, Tr, Ts, T9, Ta, Tc;
        SIMD_FLOAT Td, TK, Tm, TL, Tp, Tw, Tf, TP, TM, Tq, Tu, Tg, TQ, Tv, TB;
        SIMD_FLOAT TR, Tx, TC, TS, Ty, TD, TT, Tz, TE, TA;
        Th = Ci[WS(cs, 6)];
        Ti = Ci[WS(cs, 3)];
        T1 = Cr[0];
        T4 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 9)];
        T3 = Cr[WS(cs, 3)];
        T6 = Cr[WS(cs, 2)];
        T7 = Cr[WS(cs, 7)];
        Tr = Ci[WS(cs, 2)];
        Ts = Ci[WS(cs, 7)];
        T9 = Cr[WS(cs, 8)];
        Ta = Cr[WS(cs, 1)];
        Tc = Cr[WS(cs, 4)];
        TO = Th + Ti;
        Tj = Th - Ti;
        Td = Cr[WS(cs, 5)];
        TF = T1 - T2;
        T5 = T1 + T2 - T3 - T4;
        TI = T3 - T4;
        T8 = T6 + T7;
        TN = T6 - T7;
        Tk = Ci[WS(cs, 1)];
        TJ = Tr + Ts;
        Tt = Tr - Ts;
        Tb = T9 + Ta;
        TG = Ta - T9;
        Tl = Ci[WS(cs, 8)];
        Tn = Ci[WS(cs, 5)];
        To = Ci[WS(cs, 4)];
        TH = Td - Tc;
        Te = Tc + Td;
        TK = Tl + Tk;
        Tm = Tk - Tl;
        TL = Tn + To;
        Tp = Tn - To;
        Tw = Tb - Te;
        Tf = Tb + Te;
        TP = SIMD_FNMADD(KP507713305, TH, TK);
        TM = TJ + TK - TL;
        Tq = Tm + Tp;
        Tu = Tm - Tp;
        Tg = SIMD_FNMADD(KP500000000, Tf, T8);
        TQ = SIMD_FMADD(KP532088886, TP, TJ);
        R0[WS(rs, 1)] =
            TF + TG +
            SIMD_FNMADD(KP2_000000000, SIMD_FNMADD(KP866025403, TM, TI), TH) -
            TN;
        Tv = SIMD_FMADD(KP500000000, Tu, Tt);
        TB = SIMD_FMADD(KP866025403, Tq, Tg);
        TR = SIMD_FMADD(KP839099631, TQ, TN);
        Tx = SIMD_FNMADD(KP866025403, Tw, Tv);
        TC = SIMD_FMADD(KP203604859, TB, Tw);
        TS = SIMD_FMADD(KP884551930, TR, TO);
        Ty = SIMD_FMADD(KP420276625, Tx, Tq);
        TD = SIMD_FNMADD(KP984807753, TC, Tj);
        TT = SIMD_FMADD(KP921604985, TS, TG);
        Tz = SIMD_FMADD(KP939692620, Ty, Tj);
        TE = SIMD_FNMADD(KP879385241, TD, Tv);
        R0[WS(rs, 3)] =
            TF + SIMD_FMADD(KP1_969615506, SIMD_FMADD(KP954188894, TT, TL), TI);
        TA            = SIMD_FNMADD(KP921604985, Tz, Tg);
        R0[WS(rs, 2)] = SIMD_FMADD(KP1_969615506, TE, T5);
        R0[0]         = SIMD_FNMADD(KP1_879385241, TA, T5);
    }
}

template <>
struct r2cb_traits<18, 15>
{
    static constexpr long_t flops           = 59;
    static constexpr long_t operations      = 41;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 54;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 15 -name
 * r2cb -standalone */

/*
 * This function contains 41 FP additions, 18 FP multiplications,
 * (or, 23 additions, 0 multiplications, 18 fused multiply/add),
 * 54 stack variables, 10 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 15>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP884551930, +0.884551930891917861607228426181188396289151079);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP507713305, +0.507713305942872492617108842495900175404533673);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    {
        SIMD_FLOAT T1, T2, Ta, Tb, Tr, TB, T3, Tc, Td, Ts, T6, Te, Tg, T9, Tq;
        SIMD_FLOAT Th, Tu, Tl, TD, Tv, Tp, T4, T5, Tn, To, T7, T8, Tj, Tk, TC;
        SIMD_FLOAT Tf, Tt, Ti, Tw, Tm, TE, Tx, TF, Ty, TG, Tz, TH, TA, TI;
        T1 = Cr[0];
        T2 = Cr[WS(cs, 9)];
        Ta = Cr[WS(cs, 3)];
        Tb = Cr[WS(cs, 6)];
        T4 = Cr[WS(cs, 1)];
        T5 = Cr[WS(cs, 8)];
        Tr = Ci[WS(cs, 3)];
        TB = Ci[WS(cs, 6)];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 4)];
        Tj = Ci[WS(cs, 4)];
        Tk = Ci[WS(cs, 5)];
        Tn = Cr[WS(cs, 2)];
        T3 = T1 - T2;
        To = Cr[WS(cs, 7)];
        Tc = Ta - Tb;
        Td = Ci[WS(cs, 2)];
        Ts = T5 + T4;
        T6 = T4 - T5;
        Te = Ci[WS(cs, 7)];
        Tg = Ci[WS(cs, 8)];
        T9 = T7 - T8;
        Tq = T8 + T7;
        Th = Ci[WS(cs, 1)];
        Tu = Tj - Tk;
        Tl = Tj + Tk;
        TD = TB + Tr;
        Tv = Tn + To;
        Tp = Tn - To;
        TC = SIMD_FMADD(KP879385241, TB, Te);
        Tf = Td + Te;
        Tt = Th - Tg;
        Ti = Tg + Th;
        Tw = SIMD_FMADD(KP507713305, Tv, Tu);
        Tm = Tf + Ti - Tl;
        TE = SIMD_FNMADD(KP507713305, T9, Ti);
        Tx = SIMD_FMADD(KP532088886, Tw, Tt);
        R0[0] =
            T3 + T6 +
            SIMD_FNMADD(KP2_000000000, SIMD_FNMADD(KP866025403, Tm, Tc), T9) -
            Tp;
        TF = SIMD_FMADD(KP532088886, TE, Tf);
        Ty = SIMD_FMADD(KP839099631, Tx, Ts);
        TG = SIMD_FMADD(KP839099631, TF, Tp);
        Tz = SIMD_FMADD(KP884551930, Ty, Tr);
        TH = SIMD_FMADD(KP884551930, TG, TD);
        TA = SIMD_FNMADD(KP921604985, Tz, Tq);
        TI = SIMD_FMADD(KP921604985, TH, T6);
        R0[WS(rs, 1)] =
            T1 +
            SIMD_FMADD(KP1_969615506, SIMD_FNMADD(KP954188894, TA, Td), T2) -
            Tb - (SIMD_FMADD(KP1_969615506, TC, Ta));
        R0[WS(rs, 2)] =
            T3 + SIMD_FMADD(KP1_969615506, SIMD_FMADD(KP954188894, TI, Tl), Tc);
    }
}

template <>
struct r2cb_traits<18, 16>
{
    static constexpr long_t flops           = 48;
    static constexpr long_t operations      = 30;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 46;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 16 -name
 * r2cb -standalone */

/*
 * This function contains 30 FP additions, 18 FP multiplications,
 * (or, 12 additions, 0 multiplications, 18 fused multiply/add),
 * 46 stack variables, 8 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 16>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP507713305, +0.507713305942872492617108842495900175404533673);
    DK(KP684040286, +0.684040286651337466088199229364519161526166735);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    {
        SIMD_FLOAT T7, T8, Ta, Tr, Te, Tf, T5, Tp, T4, Tb, Tc, To, T6, Tq, T9;
        SIMD_FLOAT Tx, T1, T3, T2, Tl, Tn, Tm, Tv, Tg, Tw, Tu, Td, Ts, Ty, Th;
        SIMD_FLOAT Tt, Tz, Ti, TA, Tj, TB, Tk, TC;
        T1 = Cr[0];
        T3 = Cr[WS(cs, 6)];
        T2 = Ci[WS(cs, 3)];
        Tl = Cr[WS(cs, 3)];
        Tn = Cr[WS(cs, 9)];
        Tm = Ci[WS(cs, 6)];
        T7 = Cr[WS(cs, 8)];
        T8 = Cr[WS(cs, 1)];
        Ta = Ci[WS(cs, 1)];
        Tr = Ci[WS(cs, 8)];
        Te = Cr[WS(cs, 2)];
        Tf = Cr[WS(cs, 7)];
        T5 = Ci[WS(cs, 2)];
        Tp = Ci[WS(cs, 7)];
        T4 = SIMD_FMADD(KP1_732050807, T2, T1) - T3;
        Tb = Ci[WS(cs, 4)];
        Tc = Ci[WS(cs, 5)];
        To = SIMD_FMADD(KP1_732050807, Tm, Tl) - Tn;
        T6 = Cr[WS(cs, 5)];
        Tq = Cr[WS(cs, 4)];
        T9 = T7 + T8;
        Tx = Tr + Ta;
        Tv = T8 - (SIMD_FMADD(KP815207469, Tf, T7));
        Tg = Te + Tf;
        Tw = T5 + Tp;
        Tu = Tc + Tb;
        Td = Tb - Tc;
        Ts = SIMD_FMADD(KP684040286, Tr, Tq);
        Ty = Tq - T6;
        Th = SIMD_FMADD(KP507713305, Tg, Td);
        Tt = SIMD_FMADD(KP954188894, Ts, Tp);
        Tz = SIMD_FMADD(KP507713305, Ty, Tx);
        Ti = SIMD_FMADD(KP532088886, Th, Ta);
        TA = SIMD_FMADD(KP532088886, Tz, Tw);
        Tj = SIMD_FMADD(KP839099631, Ti, T9);
        TB = SIMD_FMADD(KP839099631, TA, Te);
        Tk = SIMD_FNMADD(KP815207469, Tj, T6);
        TC = SIMD_FMADD(KP815207469, TB, Tv);
        R0[0] =
            SIMD_FMADD(KP1_969615506, SIMD_FNMADD(KP954188894, Tk, T5), T4) -
            (SIMD_FMADD(KP1_969615506, Tt, To));
        R0[WS(rs, 1)] =
            To + SIMD_FMADD(KP1_969615506, SIMD_FMADD(KP954188894, TC, Tu), T4);
    }
}

template <>
struct r2cb_traits<18, 17>
{
    static constexpr long_t flops           = 24;
    static constexpr long_t operations      = 17;
    static constexpr long_t memory_accesses = 19;
    static constexpr long_t stack_vars      = 37;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 18 -skip-k 17 -name
 * r2cb -standalone */

/*
 * This function contains 17 FP additions, 7 FP multiplications,
 * (or, 10 additions, 0 multiplications, 7 fused multiply/add),
 * 37 stack variables, 7 constants, and 19 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && SkippedOutputs == 17>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP1_969615506, +1.969615506024416118733486049179046027341286503);
    DK(KP921604985, +0.921604985106876291294238937037692821924647985);
    DK(KP884551930, +0.884551930891917861607228426181188396289151079);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP507713305, +0.507713305942872492617108842495900175404533673);
    {
        SIMD_FLOAT T1, Tt, Tu, T2, T9, Ta, T6, T7, Tf, Tg, Tl, Tm, Ti, T5, Tj;
        SIMD_FLOAT Te, T3, T4, Tc, Td, Tb, T8, Th, Tn, Tk, To, Tp, Tq, Tr, Ts;
        T1    = Cr[0];
        Tt    = Cr[WS(cs, 9)];
        Tu    = Cr[WS(cs, 6)];
        T2    = Cr[WS(cs, 3)];
        T3    = Ci[WS(cs, 4)];
        T4    = Ci[WS(cs, 5)];
        Tc    = Cr[WS(cs, 2)];
        Td    = Cr[WS(cs, 7)];
        T9    = Ci[WS(cs, 6)];
        Ta    = Ci[WS(cs, 3)];
        T6    = Cr[WS(cs, 1)];
        T7    = Cr[WS(cs, 8)];
        Tf    = Ci[WS(cs, 2)];
        Tg    = Ci[WS(cs, 7)];
        Tl    = Cr[WS(cs, 4)];
        Tm    = Cr[WS(cs, 5)];
        Ti    = Ci[WS(cs, 8)];
        T5    = T3 + T4;
        Tj    = Ci[WS(cs, 1)];
        Te    = Tc - Td;
        Tb    = T9 + Ta;
        T8    = T6 - T7;
        Th    = Tf + Tg;
        Tn    = Tl - Tm;
        Tk    = Ti + Tj;
        To    = SIMD_FMADD(KP507713305, Tn, Tk);
        Tp    = SIMD_FMADD(KP532088886, To, Th);
        Tq    = SIMD_FMADD(KP839099631, Tp, Te);
        Tr    = SIMD_FMADD(KP884551930, Tq, Tb);
        Ts    = SIMD_FMADD(KP921604985, Tr, T8);
        R0[0] = T1 +
                SIMD_FMADD(KP1_969615506, SIMD_FMADD(KP954188894, Ts, T5), T2) -
                (Tt + Tu);
    }
}
