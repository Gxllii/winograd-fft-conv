//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<9, 0>
{
    static constexpr long_t flops           = 136;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 80 FP additions, 56 FP multiplications,
 * (or, 24 additions, 0 multiplications, 56 fused multiply/add),
 * 90 stack variables, 10 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP492403876, +0.492403876506104029683371512294761506835321626);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, Th, T6, Tz, Tb, Tt, T4, Tm, Tc, TM, Tk, Td, Tp, TE, T9;
        SIMD_FLOAT TH, TC, Tq, T2, T3, Ti, Tj, T7, T8, TA, TB, T5, TL, Tl, T1f;
        SIMD_FLOAT Te, Tw, Ta, TG, T1c, TD, Tr, Tu, TN, TV, Tn, T17, Tf, To, TI;
        SIMD_FLOAT TX, TF, TW, T1d, Tv;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        Th  = ii[0];
        Ti  = ii[WS(is, 3)];
        Tj  = ii[WS(is, 6)];
        T6  = ri[WS(is, 1)];
        Tz  = ii[WS(is, 1)];
        T7  = ri[WS(is, 4)];
        T8  = ri[WS(is, 7)];
        TA  = ii[WS(is, 4)];
        TB  = ii[WS(is, 7)];
        Tb  = ri[WS(is, 2)];
        Tt  = ii[WS(is, 2)];
        T4  = T2 + T3;
        Tm  = T3 - T2;
        Tc  = ri[WS(is, 5)];
        TM  = Ti - Tj;
        Tk  = Ti + Tj;
        Td  = ri[WS(is, 8)];
        Tp  = ii[WS(is, 5)];
        TE  = T7 - T8;
        T9  = T7 + T8;
        TH  = TB - TA;
        TC  = TA + TB;
        Tq  = ii[WS(is, 8)];
        T5  = T1 + T4;
        TL  = SIMD_FNMADD(KP500000000, T4, T1);
        Tl  = SIMD_FNMADD(KP500000000, Tk, Th);
        T1f = Th + Tk;
        Te  = Tc + Td;
        Tw  = Td - Tc;
        Ta  = T6 + T9;
        TG  = SIMD_FNMADD(KP500000000, T9, T6);
        T1c = Tz + TC;
        TD  = SIMD_FNMADD(KP500000000, TC, Tz);
        Tr  = Tp - Tq;
        Tu  = Tp + Tq;
        TN  = SIMD_FMADD(KP866025403, TM, TL);
        TV  = SIMD_FNMADD(KP866025403, TM, TL);
        Tn  = SIMD_FMADD(KP866025403, Tm, Tl);
        T17 = SIMD_FNMADD(KP866025403, Tm, Tl);
        Tf  = Tb + Te;
        To  = SIMD_FNMADD(KP500000000, Te, Tb);
        TI  = SIMD_FNMADD(KP866025403, TH, TG);
        TX  = SIMD_FMADD(KP866025403, TH, TG);
        TF  = SIMD_FNMADD(KP866025403, TE, TD);
        TW  = SIMD_FMADD(KP866025403, TE, TD);
        T1d = Tt + Tu;
        Tv  = SIMD_FNMADD(KP500000000, Tu, Tt);
        {
            SIMD_FLOAT Ts, TZ, Tg, T1i, TY, T14, TJ, TP, Tx, T10, T1e, T1g, T1b,
                T11, T15;
            SIMD_FLOAT Ty, TO, T1h, T16, T18, T12, T1a, TQ, TU, TK, TS, T19,
                T13, TR, TT;
            Ts            = SIMD_FMADD(KP866025403, Tr, To);
            TZ            = SIMD_FNMADD(KP866025403, Tr, To);
            Tg            = Ta + Tf;
            T1i           = Tf - Ta;
            TY            = SIMD_FMADD(KP176326980, TX, TW);
            T14           = SIMD_FNMADD(KP176326980, TW, TX);
            TJ            = SIMD_FNMADD(KP839099631, TI, TF);
            TP            = SIMD_FMADD(KP839099631, TF, TI);
            Tx            = SIMD_FMADD(KP866025403, Tw, Tv);
            T10           = SIMD_FNMADD(KP866025403, Tw, Tv);
            T1e           = T1c - T1d;
            T1g           = T1c + T1d;
            ro[0]         = T5 + Tg;
            T1b           = SIMD_FNMADD(KP500000000, Tg, T5);
            T11           = SIMD_FNMADD(KP363970234, T10, TZ);
            T15           = SIMD_FMADD(KP363970234, TZ, T10);
            Ty            = SIMD_FNMADD(KP176326980, Tx, Ts);
            TO            = SIMD_FMADD(KP176326980, Ts, Tx);
            io[0]         = T1f + T1g;
            T1h           = SIMD_FNMADD(KP500000000, T1g, T1f);
            ro[WS(os, 6)] = SIMD_FNMADD(KP866025403, T1e, T1b);
            ro[WS(os, 3)] = SIMD_FMADD(KP866025403, T1e, T1b);
            T16           = SIMD_FNMADD(KP954188894, T15, T14);
            T18           = SIMD_FMADD(KP954188894, T15, T14);
            T12           = SIMD_FNMADD(KP954188894, T11, TY);
            T1a           = SIMD_FMADD(KP954188894, T11, TY);
            TQ            = SIMD_FMADD(KP777861913, TP, TO);
            TU            = SIMD_FNMADD(KP777861913, TP, TO);
            TK            = SIMD_FNMADD(KP777861913, TJ, Ty);
            TS            = SIMD_FMADD(KP777861913, TJ, Ty);
            io[WS(os, 6)] = SIMD_FNMADD(KP866025403, T1i, T1h);
            io[WS(os, 3)] = SIMD_FMADD(KP866025403, T1i, T1h);
            T19           = SIMD_FMADD(KP492403876, T18, T17);
            io[WS(os, 2)] = SIMD_FNMADD(KP984807753, T18, T17);
            T13           = SIMD_FNMADD(KP492403876, T12, TV);
            ro[WS(os, 2)] = SIMD_FMADD(KP984807753, T12, TV);
            TR            = SIMD_FNMADD(KP492403876, TQ, TN);
            ro[WS(os, 1)] = SIMD_FMADD(KP984807753, TQ, TN);
            TT            = SIMD_FMADD(KP492403876, TK, Tn);
            io[WS(os, 1)] = SIMD_FNMADD(KP984807753, TK, Tn);
            io[WS(os, 8)] = SIMD_FMADD(KP852868531, T1a, T19);
            io[WS(os, 5)] = SIMD_FNMADD(KP852868531, T1a, T19);
            ro[WS(os, 8)] = SIMD_FMADD(KP852868531, T16, T13);
            ro[WS(os, 5)] = SIMD_FNMADD(KP852868531, T16, T13);
            ro[WS(os, 7)] = SIMD_FNMADD(KP852868531, TS, TR);
            ro[WS(os, 4)] = SIMD_FMADD(KP852868531, TS, TR);
            io[WS(os, 4)] = SIMD_FMADD(KP852868531, TU, TT);
            io[WS(os, 7)] = SIMD_FNMADD(KP852868531, TU, TT);
        }
    }
}

template <>
struct c2cb_traits<9, 1>
{
    static constexpr long_t flops           = 134;
    static constexpr long_t operations      = 78;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 86;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 78 FP additions, 56 FP multiplications,
 * (or, 22 additions, 0 multiplications, 56 fused multiply/add),
 * 86 stack variables, 10 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP492403876, +0.492403876506104029683371512294761506835321626);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, T5, Tj, Ta, To, T4, T14, Tb, Tu, T12, Tc, Tl, TH,
            T8;
        SIMD_FLOAT TE, Ti, Tm, T2, T3, Ts, Tt, T6, T7, Tg, Th, Tr, T13, Td, Tx;
        SIMD_FLOAT T9, Tk, Tn, TA, Tv, TP, T15, T19, Te, Tz, TF, TR, TI, TQ, TD;
        SIMD_FLOAT TG;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        T11 = ii[0];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        T5  = ri[WS(is, 1)];
        Tj  = ii[WS(is, 1)];
        T6  = ri[WS(is, 4)];
        T7  = ri[WS(is, 7)];
        Tg  = ii[WS(is, 4)];
        Th  = ii[WS(is, 7)];
        Ta  = ri[WS(is, 2)];
        To  = ii[WS(is, 2)];
        T4  = T2 + T3;
        T14 = T3 - T2;
        Tb  = ri[WS(is, 5)];
        Tu  = Ts - Tt;
        T12 = Ts + Tt;
        Tc  = ri[WS(is, 8)];
        Tl  = ii[WS(is, 5)];
        TH  = T6 - T7;
        T8  = T6 + T7;
        TE  = Th - Tg;
        Ti  = Tg + Th;
        Tm  = ii[WS(is, 8)];
        Tr  = SIMD_FNMADD(KP500000000, T4, T1);
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        Td  = Tb + Tc;
        Tx  = Tc - Tb;
        T9  = T5 + T8;
        TD  = SIMD_FNMADD(KP500000000, T8, T5);
        Tk  = Ti + Tj;
        TG  = SIMD_FNMADD(KP500000000, Ti, Tj);
        Tn  = Tl + Tm;
        TA  = Tl - Tm;
        Tv  = SIMD_FMADD(KP866025403, Tu, Tr);
        TP  = SIMD_FNMADD(KP866025403, Tu, Tr);
        T15 = SIMD_FMADD(KP866025403, T14, T13);
        T19 = SIMD_FNMADD(KP866025403, T14, T13);
        Te  = Ta + Td;
        Tz  = SIMD_FNMADD(KP500000000, Td, Ta);
        TF  = SIMD_FNMADD(KP866025403, TE, TD);
        TR  = SIMD_FMADD(KP866025403, TE, TD);
        TI  = SIMD_FNMADD(KP866025403, TH, TG);
        TQ  = SIMD_FMADD(KP866025403, TH, TG);
        {
            SIMD_FLOAT Tp, Tw, TB, TT, T1e, Tf, TS, TY, TJ, TN, Ty, TU, T1d, Tq,
                TV;
            SIMD_FLOAT TZ, TC, TM, T10, T1a, TW, T1c, TO, T16, TK, T18, T1b, TX,
                T17, TL;
            Tp            = Tn + To;
            Tw            = SIMD_FNMADD(KP500000000, Tn, To);
            TB            = SIMD_FMADD(KP866025403, TA, Tz);
            TT            = SIMD_FNMADD(KP866025403, TA, Tz);
            T1e           = Te - T9;
            Tf            = T1 + SIMD_FNMADD(KP500000000, T9 + Te, T4);
            TS            = SIMD_FMADD(KP176326980, TR, TQ);
            TY            = SIMD_FNMADD(KP176326980, TQ, TR);
            TJ            = SIMD_FMADD(KP839099631, TI, TF);
            TN            = SIMD_FNMADD(KP839099631, TF, TI);
            Ty            = SIMD_FMADD(KP866025403, Tx, Tw);
            TU            = SIMD_FNMADD(KP866025403, Tx, Tw);
            T1d           = T12 + SIMD_FNMADD(KP500000000, Tk + Tp, T11);
            Tq            = Tk - Tp;
            TV            = SIMD_FNMADD(KP363970234, TU, TT);
            TZ            = SIMD_FMADD(KP363970234, TT, TU);
            TC            = SIMD_FMADD(KP176326980, TB, Ty);
            TM            = SIMD_FNMADD(KP176326980, Ty, TB);
            io[WS(os, 5)] = SIMD_FNMADD(KP866025403, T1e, T1d);
            io[WS(os, 2)] = SIMD_FMADD(KP866025403, T1e, T1d);
            ro[WS(os, 2)] = SIMD_FMADD(KP866025403, Tq, Tf);
            ro[WS(os, 5)] = SIMD_FNMADD(KP866025403, Tq, Tf);
            T10           = SIMD_FNMADD(KP954188894, TZ, TY);
            T1a           = SIMD_FMADD(KP954188894, TZ, TY);
            TW            = SIMD_FNMADD(KP954188894, TV, TS);
            T1c           = SIMD_FMADD(KP954188894, TV, TS);
            TO            = SIMD_FMADD(KP777861913, TN, TM);
            T16           = SIMD_FNMADD(KP777861913, TN, TM);
            TK            = SIMD_FMADD(KP777861913, TJ, TC);
            T18           = SIMD_FNMADD(KP777861913, TJ, TC);
            T1b           = SIMD_FMADD(KP492403876, T1a, T19);
            io[WS(os, 1)] = SIMD_FNMADD(KP984807753, T1a, T19);
            TX            = SIMD_FNMADD(KP492403876, TW, TP);
            ro[WS(os, 1)] = SIMD_FMADD(KP984807753, TW, TP);
            T17           = SIMD_FMADD(KP492403876, T16, T15);
            io[0]         = SIMD_FNMADD(KP984807753, T16, T15);
            TL            = SIMD_FNMADD(KP492403876, TK, Tv);
            ro[0]         = SIMD_FMADD(KP984807753, TK, Tv);
            io[WS(os, 7)] = SIMD_FMADD(KP852868531, T1c, T1b);
            io[WS(os, 4)] = SIMD_FNMADD(KP852868531, T1c, T1b);
            ro[WS(os, 7)] = SIMD_FMADD(KP852868531, T10, TX);
            ro[WS(os, 4)] = SIMD_FNMADD(KP852868531, T10, TX);
            io[WS(os, 6)] = SIMD_FNMADD(KP852868531, T18, T17);
            io[WS(os, 3)] = SIMD_FMADD(KP852868531, T18, T17);
            ro[WS(os, 6)] = SIMD_FNMADD(KP852868531, TO, TL);
            ro[WS(os, 3)] = SIMD_FMADD(KP852868531, TO, TL);
        }
    }
}

template <>
struct c2cb_traits<9, 2>
{
    static constexpr long_t flops           = 130;
    static constexpr long_t operations      = 76;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 76 FP additions, 54 FP multiplications,
 * (or, 22 additions, 0 multiplications, 54 fused multiply/add),
 * 87 stack variables, 11 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP492403876, +0.492403876506104029683371512294761506835321626);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, T5, Tj, Ta, Tb, T4, T14, Tc, Tu, T12, To, T8, Tx,
            Tl;
        SIMD_FLOAT TA, Ti, Tm, T2, T3, Ts, Tt, T6, T7, Tg, Th, Tr, TH, Td, T13;
        SIMD_FLOAT Tz, T9, Tw, Tk, Tn, TE, Tv, Te, TD, T15, TB, TS;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        T11 = ii[0];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        T5  = ri[WS(is, 1)];
        T6  = ri[WS(is, 4)];
        T7  = ri[WS(is, 7)];
        Tj  = ii[WS(is, 1)];
        Tg  = ii[WS(is, 4)];
        Th  = ii[WS(is, 7)];
        Ta  = ri[WS(is, 2)];
        Tb  = ri[WS(is, 5)];
        T4  = T2 + T3;
        T14 = T3 - T2;
        Tc  = ri[WS(is, 8)];
        Tu  = Ts - Tt;
        T12 = Ts + Tt;
        To  = ii[WS(is, 2)];
        T8  = T6 + T7;
        Tx  = T6 - T7;
        Tl  = ii[WS(is, 5)];
        TA  = Th - Tg;
        Ti  = Tg + Th;
        Tm  = ii[WS(is, 8)];
        Tr  = SIMD_FNMADD(KP500000000, T4, T1);
        TH  = Tb - Tc;
        Td  = Tb + Tc;
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        Tz  = SIMD_FNMADD(KP500000000, T8, T5);
        T9  = T5 + T8;
        Tw  = SIMD_FNMADD(KP500000000, Ti, Tj);
        Tk  = Ti + Tj;
        Tn  = Tl + Tm;
        TE  = Tl - Tm;
        Tv  = SIMD_FNMADD(KP866025403, Tu, Tr);
        Te  = Ta + Td;
        TD  = SIMD_FMSUB(KP500000000, Td, Ta);
        T15 = SIMD_FNMADD(KP866025403, T14, T13);
        TB  = SIMD_FMADD(KP866025403, TA, Tz);
        TS  = SIMD_FNMADD(KP866025403, TA, Tz);
        {
            SIMD_FLOAT Ty, TT, TG, Tp, T1e, Tf, TF, TQ, TU, TZ, TC, TM, T1d, Tq,
                TI;
            SIMD_FLOAT TP, TR, TY, TJ, TN, T10, T19, TV, T1c, TO, T16, TK, T18,
                T1a, TW;
            SIMD_FLOAT T17, TL, T1b, TX;
            Ty            = SIMD_FMADD(KP866025403, Tx, Tw);
            TT            = SIMD_FNMADD(KP866025403, Tx, Tw);
            TG            = SIMD_FNMADD(KP500000000, Tn, To);
            Tp            = Tn + To;
            T1e           = Te - T9;
            Tf            = T1 + SIMD_FNMADD(KP500000000, T9 + Te, T4);
            TF            = SIMD_FMADD(KP866025403, TE, TD);
            TQ            = SIMD_FNMADD(KP866025403, TE, TD);
            TU            = SIMD_FMADD(KP839099631, TT, TS);
            TZ            = SIMD_FNMADD(KP839099631, TS, TT);
            TC            = SIMD_FMADD(KP176326980, TB, Ty);
            TM            = SIMD_FNMADD(KP176326980, Ty, TB);
            T1d           = T12 + SIMD_FNMADD(KP500000000, Tk + Tp, T11);
            Tq            = Tk - Tp;
            TI            = SIMD_FMADD(KP866025403, TH, TG);
            TP            = SIMD_FNMADD(KP866025403, TH, TG);
            io[WS(os, 4)] = SIMD_FNMADD(KP866025403, T1e, T1d);
            io[WS(os, 1)] = SIMD_FMADD(KP866025403, T1e, T1d);
            ro[WS(os, 1)] = SIMD_FMADD(KP866025403, Tq, Tf);
            ro[WS(os, 4)] = SIMD_FNMADD(KP866025403, Tq, Tf);
            TR            = SIMD_FNMADD(KP176326980, TQ, TP);
            TY            = SIMD_FMADD(KP176326980, TP, TQ);
            TJ            = SIMD_FMADD(KP363970234, TI, TF);
            TN            = SIMD_FNMADD(KP363970234, TF, TI);
            T10           = SIMD_FNMADD(KP777861913, TZ, TY);
            T19           = SIMD_FMADD(KP777861913, TZ, TY);
            TV            = SIMD_FMADD(KP777861913, TU, TR);
            T1c           = SIMD_FNMADD(KP777861913, TU, TR);
            TO            = SIMD_FNMADD(KP954188894, TN, TM);
            T16           = SIMD_FMADD(KP954188894, TN, TM);
            TK            = SIMD_FMADD(KP954188894, TJ, TC);
            T18           = SIMD_FNMADD(KP954188894, TJ, TC);
            T1a           = SIMD_FNMADD(KP568579021, T19, T14);
            TW            = SIMD_FNMADD(KP568579021, TV, Tu);
            T17           = SIMD_FMADD(KP492403876, T16, T15);
            io[0]         = SIMD_FNMADD(KP984807753, T16, T15);
            TL            = SIMD_FNMADD(KP492403876, TK, Tv);
            ro[0]         = SIMD_FMADD(KP984807753, TK, Tv);
            T1b           = SIMD_FMADD(KP866025403, T1a, T13);
            TX            = SIMD_FMADD(KP866025403, TW, Tr);
            io[WS(os, 6)] = SIMD_FMADD(KP852868531, T18, T17);
            io[WS(os, 3)] = SIMD_FNMADD(KP852868531, T18, T17);
            ro[WS(os, 6)] = SIMD_FMADD(KP852868531, TO, TL);
            ro[WS(os, 3)] = SIMD_FNMADD(KP852868531, TO, TL);
            io[WS(os, 5)] = SIMD_FNMADD(KP852868531, T1c, T1b);
            io[WS(os, 2)] = SIMD_FMADD(KP852868531, T1c, T1b);
            ro[WS(os, 5)] = SIMD_FMADD(KP852868531, T10, TX);
            ro[WS(os, 2)] = SIMD_FNMADD(KP852868531, T10, TX);
        }
    }
}

template <>
struct c2cb_traits<9, 3>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 74;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 85;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 74 FP additions, 52 FP multiplications,
 * (or, 22 additions, 0 multiplications, 52 fused multiply/add),
 * 85 stack variables, 9 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, T5, Tg, Ta, Tb, T4, T14, Tc, Tu, T12, Tl, T8, Tw,
            Tm;
        SIMD_FLOAT Tz, Tj, Tn, T2, T3, Ts, Tt, T6, T7, Th, Ti, Tr, TG, Td, T13;
        SIMD_FLOAT Ty, T9, Tv, Tk, To, TD, TC, Te, TA, TS;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        T11 = ii[0];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        T5  = ri[WS(is, 1)];
        T6  = ri[WS(is, 4)];
        T7  = ri[WS(is, 7)];
        Tg  = ii[WS(is, 1)];
        Th  = ii[WS(is, 4)];
        Ti  = ii[WS(is, 7)];
        Ta  = ri[WS(is, 2)];
        Tb  = ri[WS(is, 5)];
        T4  = T2 + T3;
        T14 = T3 - T2;
        Tc  = ri[WS(is, 8)];
        Tu  = Ts - Tt;
        T12 = Ts + Tt;
        Tl  = ii[WS(is, 2)];
        T8  = T6 + T7;
        Tw  = T6 - T7;
        Tm  = ii[WS(is, 5)];
        Tz  = Ti - Th;
        Tj  = Th + Ti;
        Tn  = ii[WS(is, 8)];
        Tr  = SIMD_FNMADD(KP500000000, T4, T1);
        TG  = Tc - Tb;
        Td  = Tb + Tc;
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        Ty  = SIMD_FNMADD(KP500000000, T8, T5);
        T9  = T5 + T8;
        Tv  = SIMD_FNMADD(KP500000000, Tj, Tg);
        Tk  = Tg + Tj;
        To  = Tm + Tn;
        TD  = Tm - Tn;
        TC  = SIMD_FNMADD(KP500000000, Td, Ta);
        Te  = Ta + Td;
        TA  = SIMD_FMADD(KP866025403, Tz, Ty);
        TS  = SIMD_FNMADD(KP866025403, Tz, Ty);
        {
            SIMD_FLOAT Tx, TT, TF, Tp, T1e, Tf, TE, TQ, TU, TZ, TB, TM, T1d, Tq,
                TH;
            SIMD_FLOAT TP, TR, TY, TI, TN, T15, T10, T18, TV, TO, T19, TJ, T1c,
                T16, TW;
            SIMD_FLOAT T1a, TK, T17, TX, T1b, TL;
            Tx            = SIMD_FMADD(KP866025403, Tw, Tv);
            TT            = SIMD_FNMADD(KP866025403, Tw, Tv);
            TF            = SIMD_FNMADD(KP500000000, To, Tl);
            Tp            = Tl + To;
            T1e           = Te - T9;
            Tf            = T1 + SIMD_FNMADD(KP500000000, T9 + Te, T4);
            TE            = SIMD_FNMADD(KP866025403, TD, TC);
            TQ            = SIMD_FMADD(KP866025403, TD, TC);
            TU            = SIMD_FMADD(KP839099631, TT, TS);
            TZ            = SIMD_FNMADD(KP839099631, TS, TT);
            TB            = SIMD_FMADD(KP176326980, TA, Tx);
            TM            = SIMD_FNMADD(KP176326980, Tx, TA);
            T1d           = T12 + SIMD_FNMADD(KP500000000, Tk + Tp, T11);
            Tq            = Tk - Tp;
            TH            = SIMD_FNMADD(KP866025403, TG, TF);
            TP            = SIMD_FMADD(KP866025403, TG, TF);
            io[WS(os, 3)] = SIMD_FNMADD(KP866025403, T1e, T1d);
            io[0]         = SIMD_FMADD(KP866025403, T1e, T1d);
            ro[0]         = SIMD_FMADD(KP866025403, Tq, Tf);
            ro[WS(os, 3)] = SIMD_FNMADD(KP866025403, Tq, Tf);
            TR            = SIMD_FMADD(KP176326980, TQ, TP);
            TY            = SIMD_FNMADD(KP176326980, TP, TQ);
            TI            = SIMD_FNMADD(KP363970234, TH, TE);
            TN            = SIMD_FMADD(KP363970234, TE, TH);
            T15           = SIMD_FNMADD(KP777861913, TZ, TY);
            T10           = SIMD_FMADD(KP777861913, TZ, TY);
            T18           = SIMD_FNMADD(KP777861913, TU, TR);
            TV            = SIMD_FMADD(KP777861913, TU, TR);
            TO            = SIMD_FNMADD(KP954188894, TN, TM);
            T19           = SIMD_FMADD(KP954188894, TN, TM);
            TJ            = SIMD_FNMADD(KP954188894, TI, TB);
            T1c           = SIMD_FMADD(KP954188894, TI, TB);
            T16           = SIMD_FMADD(KP568579021, T15, T14);
            TW            = SIMD_FNMADD(KP568579021, TV, Tu);
            T1a           = SIMD_FNMADD(KP568579021, T19, T14);
            TK            = SIMD_FMADD(KP568579021, TJ, Tu);
            T17           = SIMD_FMADD(KP866025403, T16, T13);
            TX            = SIMD_FMADD(KP866025403, TW, Tr);
            T1b           = SIMD_FNMADD(KP866025403, T1a, T13);
            TL            = SIMD_FNMADD(KP866025403, TK, Tr);
            io[WS(os, 4)] = SIMD_FNMADD(KP852868531, T18, T17);
            io[WS(os, 1)] = SIMD_FMADD(KP852868531, T18, T17);
            ro[WS(os, 4)] = SIMD_FNMADD(KP852868531, T10, TX);
            ro[WS(os, 1)] = SIMD_FMADD(KP852868531, T10, TX);
            io[WS(os, 5)] = SIMD_FMADD(KP852868531, T1c, T1b);
            io[WS(os, 2)] = SIMD_FNMADD(KP852868531, T1c, T1b);
            ro[WS(os, 5)] = SIMD_FMADD(KP852868531, TO, TL);
            ro[WS(os, 2)] = SIMD_FNMADD(KP852868531, TO, TL);
        }
    }
}

template <>
struct c2cb_traits<9, 4>
{
    static constexpr long_t flops           = 122;
    static constexpr long_t operations      = 72;
    static constexpr long_t memory_accesses = 28;
    static constexpr long_t stack_vars      = 86;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 72 FP additions, 50 FP multiplications,
 * (or, 22 additions, 0 multiplications, 50 fused multiply/add),
 * 86 stack variables, 10 constants, and 28 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, T9, Ti, To, Tp, T4, T14, Tq, T8, T12, Tx, Tc, Tl,
            Tt;
        SIMD_FLOAT Tg, Tj, Tu, T2, T3, T6, T7, Ta, Tb, Te, Tf, T5, TA, Tr, T13;
        SIMD_FLOAT Td, TV, Tk, TY, Ty, Tv, Ts, TZ, Th, TN;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        T11 = ii[0];
        T6  = ii[WS(is, 3)];
        T7  = ii[WS(is, 6)];
        T9  = ii[WS(is, 2)];
        Ta  = ii[WS(is, 5)];
        Tb  = ii[WS(is, 8)];
        Ti  = ri[WS(is, 2)];
        Te  = ri[WS(is, 8)];
        Tf  = ri[WS(is, 5)];
        To  = ri[WS(is, 1)];
        Tp  = ri[WS(is, 4)];
        T4  = T2 + T3;
        T14 = T3 - T2;
        Tq  = ri[WS(is, 7)];
        T8  = T6 - T7;
        T12 = T6 + T7;
        Tx  = ii[WS(is, 1)];
        Tc  = Ta + Tb;
        Tl  = Ta - Tb;
        Tt  = ii[WS(is, 7)];
        Tg  = Te - Tf;
        Tj  = Tf + Te;
        Tu  = ii[WS(is, 4)];
        T5  = SIMD_FNMADD(KP500000000, T4, T1);
        TA  = Tp - Tq;
        Tr  = Tp + Tq;
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        Td  = SIMD_FNMADD(KP500000000, Tc, T9);
        TV  = Tc + T9;
        Tk  = SIMD_FNMADD(KP500000000, Tj, Ti);
        TY  = Ti + Tj;
        Ty  = Tt + Tu;
        Tv  = Tt - Tu;
        Ts  = SIMD_FNMADD(KP500000000, Tr, To);
        TZ  = To + Tr;
        Th  = SIMD_FMADD(KP866025403, Tg, Td);
        TN  = SIMD_FNMADD(KP866025403, Tg, Td);
        {
            SIMD_FLOAT Tm, TM, Tz, TW, T10, T1d, Tw, TK, TO, TT, Tn, TG, TX,
                T1e, TB;
            SIMD_FLOAT TJ, TL, TS, TC, TH, T19, TU, T1c, TP, TI, T15, TD, T18,
                T1a, TQ;
            SIMD_FLOAT T16, TE, T1b, TR, T17, TF;
            Tm  = SIMD_FMADD(KP866025403, Tl, Tk);
            TM  = SIMD_FNMADD(KP866025403, Tl, Tk);
            Tz  = SIMD_FNMADD(KP500000000, Ty, Tx);
            TW  = Ty + Tx;
            T10 = TY + TZ;
            T1d = TZ - TY;
            Tw  = SIMD_FNMADD(KP866025403, Tv, Ts);
            TK  = SIMD_FMADD(KP866025403, Tv, Ts);
            TO  = SIMD_FNMADD(KP363970234, TN, TM);
            TT  = SIMD_FMADD(KP363970234, TM, TN);
            Tn  = SIMD_FMADD(KP176326980, Tm, Th);
            TG  = SIMD_FNMADD(KP176326980, Th, Tm);
            TX  = TV - TW;
            T1e = TV + TW;
            TB  = SIMD_FNMADD(KP866025403, TA, Tz);
            TJ  = SIMD_FMADD(KP866025403, TA, Tz);
            io[WS(os, 2)] =
                T12 + SIMD_FMADD(KP866025403,
                                 SIMD_FNMADD(KP577350269, T1e, T1d), T11);
            ro[WS(os, 2)] =
                T1 +
                SIMD_FMADD(KP866025403, SIMD_FNMADD(KP577350269, T10, TX), T4);
            TL            = SIMD_FMADD(KP176326980, TK, TJ);
            TS            = SIMD_FNMADD(KP176326980, TJ, TK);
            TC            = SIMD_FMADD(KP839099631, TB, Tw);
            TH            = SIMD_FNMADD(KP839099631, Tw, TB);
            T19           = SIMD_FMADD(KP954188894, TT, TS);
            TU            = SIMD_FNMADD(KP954188894, TT, TS);
            T1c           = SIMD_FMADD(KP954188894, TO, TL);
            TP            = SIMD_FNMADD(KP954188894, TO, TL);
            TI            = SIMD_FMADD(KP777861913, TH, TG);
            T15           = SIMD_FNMADD(KP777861913, TH, TG);
            TD            = SIMD_FMADD(KP777861913, TC, Tn);
            T18           = SIMD_FNMADD(KP777861913, TC, Tn);
            T1a           = SIMD_FNMADD(KP568579021, T19, T14);
            TQ            = SIMD_FMADD(KP568579021, TP, T8);
            T16           = SIMD_FMADD(KP568579021, T15, T14);
            TE            = SIMD_FNMADD(KP568579021, TD, T8);
            T1b           = SIMD_FNMADD(KP866025403, T1a, T13);
            TR            = SIMD_FNMADD(KP866025403, TQ, T5);
            T17           = SIMD_FMADD(KP866025403, T16, T13);
            TF            = SIMD_FMADD(KP866025403, TE, T5);
            io[WS(os, 4)] = SIMD_FMADD(KP852868531, T1c, T1b);
            io[WS(os, 1)] = SIMD_FNMADD(KP852868531, T1c, T1b);
            ro[WS(os, 4)] = SIMD_FMADD(KP852868531, TU, TR);
            ro[WS(os, 1)] = SIMD_FNMADD(KP852868531, TU, TR);
            io[WS(os, 3)] = SIMD_FNMADD(KP852868531, T18, T17);
            io[0]         = SIMD_FMADD(KP852868531, T18, T17);
            ro[0]         = SIMD_FMADD(KP852868531, TI, TF);
            ro[WS(os, 3)] = SIMD_FNMADD(KP852868531, TI, TF);
        }
    }
}

template <>
struct c2cb_traits<9, 5>
{
    static constexpr long_t flops           = 118;
    static constexpr long_t operations      = 70;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 88;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 70 FP additions, 48 FP multiplications,
 * (or, 22 additions, 0 multiplications, 48 fused multiply/add),
 * 88 stack variables, 12 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, T8, Tl, Td, Ta, T4, T14, Tb, Tu, T12, Tg, T7, TD,
            Th;
        SIMD_FLOAT TG, To, Ti, T2, T3, Ts, Tt, T5, T6, Tm, Tn, Tr, Tz, Tc, T13;
        SIMD_FLOAT TF, T9, TC, Tp, Tj, Tw, Tv, Te, TH, TQ;
        T1  = ri[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        T11 = ii[0];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        T8  = ii[WS(is, 2)];
        T5  = ii[WS(is, 5)];
        T6  = ii[WS(is, 8)];
        Tl  = ri[WS(is, 2)];
        Tm  = ri[WS(is, 5)];
        Tn  = ri[WS(is, 8)];
        Td  = ii[WS(is, 1)];
        Ta  = ii[WS(is, 7)];
        T4  = T2 + T3;
        T14 = T3 - T2;
        Tb  = ii[WS(is, 4)];
        Tu  = Ts - Tt;
        T12 = Ts + Tt;
        Tg  = ri[WS(is, 1)];
        T7  = T5 + T6;
        TD  = T5 - T6;
        Th  = ri[WS(is, 4)];
        TG  = Tm - Tn;
        To  = Tm + Tn;
        Ti  = ri[WS(is, 7)];
        Tr  = SIMD_FNMADD(KP500000000, T4, T1);
        Tz  = Ta - Tb;
        Tc  = Ta + Tb;
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        TF  = SIMD_FMSUB(KP500000000, T7, T8);
        T9  = T7 + T8;
        TC  = SIMD_FNMADD(KP500000000, To, Tl);
        Tp  = Tl + To;
        Tj  = Th + Ti;
        Tw  = Th - Ti;
        Tv  = SIMD_FNMADD(KP500000000, Tc, Td);
        Te  = Tc + Td;
        TH  = SIMD_FNMADD(KP866025403, TG, TF);
        TQ  = SIMD_FMADD(KP866025403, TG, TF);
        {
            SIMD_FLOAT TE, TP, Ty, Tk, Tf, T1e, Tx, TS, TR, TV, TI, TN, Tq, T1d,
                TA;
            SIMD_FLOAT TT, TU, TW, TB, TM, TX, T19, T15, TO, T18, TJ, TY, T1a,
                T16, TK;
            SIMD_FLOAT TZ, T1b, T17, TL, T10, T1c;
            TE  = SIMD_FNMADD(KP866025403, TD, TC);
            TP  = SIMD_FMADD(KP866025403, TD, TC);
            Ty  = SIMD_FNMADD(KP500000000, Tj, Tg);
            Tk  = Tg + Tj;
            Tf  = T9 - Te;
            T1e = Te + T9;
            Tx  = SIMD_FMADD(KP866025403, Tw, Tv);
            TS  = SIMD_FNMADD(KP866025403, Tw, Tv);
            TR  = SIMD_FMADD(KP176326980, TQ, TP);
            TV  = SIMD_FNMADD(KP176326980, TP, TQ);
            TI  = SIMD_FMADD(KP363970234, TH, TE);
            TN  = SIMD_FNMADD(KP363970234, TE, TH);
            Tq  = Tk + Tp;
            T1d = Tk - Tp;
            TA  = SIMD_FMADD(KP866025403, Tz, Ty);
            TT  = SIMD_FNMADD(KP866025403, Tz, Ty);
            io[WS(os, 1)] =
                T12 + SIMD_FMADD(KP866025403,
                                 SIMD_FNMADD(KP577350269, T1e, T1d), T11);
            ro[WS(os, 1)] =
                T1 +
                SIMD_FMADD(KP866025403, SIMD_FNMADD(KP577350269, Tq, Tf), T4);
            TU            = SIMD_FNMADD(KP839099631, TT, TS);
            TW            = SIMD_FMADD(KP839099631, TS, TT);
            TB            = SIMD_FMADD(KP176326980, TA, Tx);
            TM            = SIMD_FNMADD(KP176326980, Tx, TA);
            TX            = SIMD_FNMADD(KP777861913, TW, TV);
            T19           = SIMD_FNMADD(KP777861913, TU, TR);
            T15           = SIMD_FNMADD(KP954188894, TN, TM);
            TO            = SIMD_FMADD(KP954188894, TN, TM);
            T18           = SIMD_FMADD(KP954188894, TI, TB);
            TJ            = SIMD_FNMADD(KP954188894, TI, TB);
            TY            = SIMD_FNMADD(KP742227198, TX, TU);
            T1a           = SIMD_FMADD(KP742227198, T19, TW);
            T16           = SIMD_FNMADD(KP568579021, T15, T14);
            TK            = SIMD_FMADD(KP568579021, TJ, Tu);
            TZ            = SIMD_FMADD(KP777861913, TY, TR);
            T1b           = SIMD_FMADD(KP777861913, T1a, TV);
            T17           = SIMD_FNMADD(KP866025403, T16, T13);
            TL            = SIMD_FNMADD(KP866025403, TK, Tr);
            T10           = SIMD_FNMADD(KP984807753, TZ, Tu);
            T1c           = SIMD_FMADD(KP984807753, T1b, T14);
            io[WS(os, 3)] = SIMD_FMADD(KP852868531, T18, T17);
            io[0]         = SIMD_FNMADD(KP852868531, T18, T17);
            ro[WS(os, 3)] = SIMD_FMADD(KP852868531, TO, TL);
            ro[0]         = SIMD_FNMADD(KP852868531, TO, TL);
            ro[WS(os, 2)] = SIMD_FMADD(KP866025403, T10, Tr);
            io[WS(os, 2)] = SIMD_FMADD(KP866025403, T1c, T13);
        }
    }
}

template <>
struct c2cb_traits<9, 6>
{
    static constexpr long_t flops           = 114;
    static constexpr long_t operations      = 68;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 68 FP additions, 46 FP multiplications,
 * (or, 22 additions, 0 multiplications, 46 fused multiply/add),
 * 87 stack variables, 11 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T11, Ta, Tg, T5, T14, T4, T12, Tu, Tl, Td, Tw, Tm, Tz,
            Tj;
        SIMD_FLOAT Tn, T8, TG, Tr, T13, T2, T3, Ts, Tt, Tb, Tc, Th, Ti, T6, T7;
        SIMD_FLOAT Ty, Te, Tv, Tk, To, TD, TC, T9, TA, TS;
        T1  = ri[0];
        T11 = ii[0];
        T2  = ri[WS(is, 3)];
        T3  = ri[WS(is, 6)];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        Ta  = ii[WS(is, 1)];
        Tb  = ii[WS(is, 4)];
        Tc  = ii[WS(is, 7)];
        Tg  = ri[WS(is, 1)];
        Th  = ri[WS(is, 4)];
        Ti  = ri[WS(is, 7)];
        T5  = ii[WS(is, 2)];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 8)];
        T14 = T3 - T2;
        T4  = T2 + T3;
        T12 = Ts + Tt;
        Tu  = Ts - Tt;
        Tl  = ri[WS(is, 2)];
        Td  = Tb + Tc;
        Tw  = Tc - Tb;
        Tm  = ri[WS(is, 5)];
        Tz  = Th - Ti;
        Tj  = Th + Ti;
        Tn  = ri[WS(is, 8)];
        T8  = T6 + T7;
        TG  = T6 - T7;
        Tr  = SIMD_FNMADD(KP500000000, T4, T1);
        T13 = SIMD_FNMADD(KP500000000, T12, T11);
        Ty  = SIMD_FNMADD(KP500000000, Td, Ta);
        Te  = Ta + Td;
        Tv  = SIMD_FNMADD(KP500000000, Tj, Tg);
        Tk  = Tg + Tj;
        To  = Tm + Tn;
        TD  = Tm - Tn;
        TC  = SIMD_FMSUB(KP500000000, T8, T5);
        T9  = T5 + T8;
        TA  = SIMD_FMADD(KP866025403, Tz, Ty);
        TS  = SIMD_FNMADD(KP866025403, Tz, Ty);
        {
            SIMD_FLOAT Tx, TT, TF, Tp, Tf, T1e, TE, TQ, TU, TW, TB, TJ, Tq, T1d,
                TH;
            SIMD_FLOAT TP, TR, TV, TI, TK, TX, T15, TL, T19, TY, T16, TM, T1a,
                TZ, T17;
            SIMD_FLOAT TN, T1b, T10, T18, TO, T1c;
            Tx            = SIMD_FMADD(KP866025403, Tw, Tv);
            TT            = SIMD_FNMADD(KP866025403, Tw, Tv);
            TF            = SIMD_FNMADD(KP500000000, To, Tl);
            Tp            = Tl + To;
            Tf            = T9 - Te;
            T1e           = T9 + Te;
            TE            = SIMD_FNMADD(KP866025403, TD, TC);
            TQ            = SIMD_FMADD(KP866025403, TD, TC);
            TU            = SIMD_FNMADD(KP839099631, TT, TS);
            TW            = SIMD_FMADD(KP839099631, TS, TT);
            TB            = SIMD_FNMADD(KP176326980, TA, Tx);
            TJ            = SIMD_FMADD(KP176326980, Tx, TA);
            Tq            = Tk + Tp;
            T1d           = Tk - Tp;
            TH            = SIMD_FNMADD(KP866025403, TG, TF);
            TP            = SIMD_FMADD(KP866025403, TG, TF);
            io[0]         = T12 + SIMD_FMADD(KP866025403,
                                     SIMD_FNMADD(KP577350269, T1e, T1d), T11);
            ro[0]         = T1 + SIMD_FMADD(KP866025403,
                                    SIMD_FNMADD(KP577350269, Tq, Tf), T4);
            TR            = SIMD_FMADD(KP176326980, TQ, TP);
            TV            = SIMD_FNMADD(KP176326980, TP, TQ);
            TI            = SIMD_FNMADD(KP363970234, TH, TE);
            TK            = SIMD_FMADD(KP363970234, TE, TH);
            TX            = SIMD_FNMADD(KP777861913, TW, TV);
            T15           = SIMD_FNMADD(KP777861913, TU, TR);
            TL            = SIMD_FNMADD(KP954188894, TK, TJ);
            T19           = SIMD_FNMADD(KP954188894, TI, TB);
            TY            = SIMD_FNMADD(KP742227198, TX, TU);
            T16           = SIMD_FMADD(KP742227198, T15, TW);
            TM            = SIMD_FNMADD(KP605069156, TL, TI);
            T1a           = SIMD_FMADD(KP605069156, T19, TK);
            TZ            = SIMD_FMADD(KP777861913, TY, TR);
            T17           = SIMD_FMADD(KP777861913, T16, TV);
            TN            = SIMD_FMADD(KP954188894, TM, TB);
            T1b           = SIMD_FMADD(KP954188894, T1a, TJ);
            T10           = SIMD_FNMADD(KP984807753, TZ, Tu);
            T18           = SIMD_FMADD(KP984807753, T17, T14);
            TO            = SIMD_FNMADD(KP984807753, TN, Tu);
            T1c           = SIMD_FNMADD(KP984807753, T1b, T14);
            ro[WS(os, 1)] = SIMD_FMADD(KP866025403, T10, Tr);
            io[WS(os, 1)] = SIMD_FMADD(KP866025403, T18, T13);
            ro[WS(os, 2)] = SIMD_FNMADD(KP866025403, TO, Tr);
            io[WS(os, 2)] = SIMD_FNMADD(KP866025403, T1c, T13);
        }
    }
}

template <>
struct c2cb_traits<9, 7>
{
    static constexpr long_t flops           = 96;
    static constexpr long_t operations      = 54;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 78;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 54 FP additions, 42 FP multiplications,
 * (or, 12 additions, 0 multiplications, 42 fused multiply/add),
 * 78 stack variables, 10 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP777861913, +0.777861913430206160028177977318626690410586096);
    DK(KP954188894, +0.954188894138671133499268364187245676532219158);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP839099631, +0.839099631177280011763127298123181364687434283);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT To, Tx, T9, TY, T8, Ti, Tr, TA, Te, Tv, Ty, Tf, Tc, Tl, T5;
        SIMD_FLOAT TX, T1, TV, T4, TW, T2, T3, T6, T7, Tp, Tq, Tt, Tu, Ta, Tb;
        SIMD_FLOAT Ts, Tz, Tj, Tg, Td, TK, Tw;
        T1 = ri[0];
        TV = ii[0];
        T2 = ri[WS(is, 3)];
        T3 = ri[WS(is, 6)];
        T6 = ii[WS(is, 3)];
        T7 = ii[WS(is, 6)];
        To = ii[WS(is, 1)];
        Tp = ii[WS(is, 4)];
        Tq = ii[WS(is, 7)];
        Tx = ri[WS(is, 1)];
        Tt = ri[WS(is, 4)];
        Tu = ri[WS(is, 7)];
        T9 = ri[WS(is, 2)];
        Ta = ri[WS(is, 5)];
        Tb = ri[WS(is, 8)];
        TY = T3 - T2;
        T4 = T2 + T3;
        TW = T6 + T7;
        T8 = T6 - T7;
        Ti = ii[WS(is, 2)];
        Tr = Tp + Tq;
        TA = Tq - Tp;
        Te = ii[WS(is, 5)];
        Tv = Tt - Tu;
        Ty = Tt + Tu;
        Tf = ii[WS(is, 8)];
        Tc = Ta + Tb;
        Tl = Ta - Tb;
        T5 = SIMD_FNMADD(KP500000000, T4, T1);
        TX = SIMD_FNMADD(KP500000000, TW, TV);
        Ts = SIMD_FNMADD(KP500000000, Tr, To);
        Tz = SIMD_FNMADD(KP500000000, Ty, Tx);
        Tj = Te + Tf;
        Tg = Te - Tf;
        Td = SIMD_FNMADD(KP500000000, Tc, T9);
        TK = SIMD_FMADD(KP866025403, Tv, Ts);
        Tw = SIMD_FNMADD(KP866025403, Tv, Ts);
        {
            SIMD_FLOAT TJ, TB, Tk, Th, TN, TL, TP, TC, TE, Tm, TM, TO, TQ, Tn,
                TD;
            SIMD_FLOAT TR, T13, TF, TZ, TS, T14, TG, T10, TT, T15, TH, T11, TU,
                T16, TI;
            SIMD_FLOAT T12;
            TJ            = SIMD_FMADD(KP866025403, TA, Tz);
            TB            = SIMD_FNMADD(KP866025403, TA, Tz);
            Tk            = SIMD_FMSUB(KP500000000, Tj, Ti);
            Th            = SIMD_FMADD(KP866025403, Tg, Td);
            TN            = SIMD_FNMADD(KP866025403, Tg, Td);
            TL            = SIMD_FNMADD(KP176326980, TK, TJ);
            TP            = SIMD_FMADD(KP176326980, TJ, TK);
            TC            = SIMD_FNMADD(KP839099631, TB, Tw);
            TE            = SIMD_FMADD(KP839099631, Tw, TB);
            Tm            = SIMD_FMADD(KP866025403, Tl, Tk);
            TM            = SIMD_FNMADD(KP866025403, Tl, Tk);
            TO            = SIMD_FNMADD(KP363970234, TN, TM);
            TQ            = SIMD_FMADD(KP363970234, TM, TN);
            Tn            = SIMD_FMADD(KP176326980, Tm, Th);
            TD            = SIMD_FNMADD(KP176326980, Th, Tm);
            TR            = SIMD_FNMADD(KP954188894, TQ, TP);
            T13           = SIMD_FNMADD(KP954188894, TO, TL);
            TF            = SIMD_FNMADD(KP777861913, TE, TD);
            TZ            = SIMD_FNMADD(KP777861913, TC, Tn);
            TS            = SIMD_FNMADD(KP605069156, TR, TO);
            T14           = SIMD_FMADD(KP605069156, T13, TQ);
            TG            = SIMD_FNMADD(KP742227198, TF, TC);
            T10           = SIMD_FMADD(KP742227198, TZ, TE);
            TT            = SIMD_FMADD(KP954188894, TS, TL);
            T15           = SIMD_FMADD(KP954188894, T14, TP);
            TH            = SIMD_FMADD(KP777861913, TG, Tn);
            T11           = SIMD_FMADD(KP777861913, T10, TD);
            TU            = SIMD_FNMADD(KP984807753, TT, T8);
            T16           = SIMD_FNMADD(KP984807753, T15, TY);
            TI            = SIMD_FNMADD(KP984807753, TH, T8);
            T12           = SIMD_FMADD(KP984807753, T11, TY);
            ro[WS(os, 1)] = SIMD_FNMADD(KP866025403, TU, T5);
            io[WS(os, 1)] = SIMD_FNMADD(KP866025403, T16, TX);
            ro[0]         = SIMD_FMADD(KP866025403, TI, T5);
            io[0]         = SIMD_FMADD(KP866025403, T12, TX);
        }
    }
}

template <>
struct c2cb_traits<9, 8>
{
    static constexpr long_t flops           = 52;
    static constexpr long_t operations      = 32;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 54;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 9 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 32 FP additions, 20 FP multiplications,
 * (or, 12 additions, 0 multiplications, 20 fused multiply/add),
 * 54 stack variables, 6 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 9 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP176326980, +0.176326980708464973471090386868618986121633062);
    DK(KP363970234, +0.363970234266202361351047882776834043890471784);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, TJ, T2, TE, Tj, TB, T3, Tc, T4, T5, T7, T8, Tk, Tt, Tl;
        SIMD_FLOAT Tm, To, Tp;
        T1 = ri[0];
        TJ = ii[0];
        T2 = ii[WS(is, 6)];
        TE = ri[WS(is, 6)];
        Tj = ii[WS(is, 3)];
        TB = ri[WS(is, 3)];
        T3 = ii[WS(is, 2)];
        Tc = ri[WS(is, 2)];
        T4 = ri[WS(is, 5)];
        T5 = ri[WS(is, 8)];
        T7 = ii[WS(is, 5)];
        T8 = ii[WS(is, 8)];
        Tk = ri[WS(is, 1)];
        Tt = ii[WS(is, 1)];
        Tl = ii[WS(is, 7)];
        Tm = ii[WS(is, 4)];
        To = ri[WS(is, 4)];
        Tp = ri[WS(is, 7)];
        {
            SIMD_FLOAT T6, Te, T9, Td, Tn, Tv, Tq, Tu, Tf, Ta, Tw, Tr, Tg, Tb,
                Tx;
            SIMD_FLOAT Ts, Th, TF, Ty, TC, TG, Ti, TD, Tz, TH, TK, TA, TL, TM,
                TI;
            T6    = T4 - T5;
            Te    = T4 + T5;
            T9    = T7 + T8;
            Td    = T8 - T7;
            Tn    = Tl - Tm;
            Tv    = Tm + Tl;
            Tq    = To + Tp;
            Tu    = To - Tp;
            Tf    = SIMD_FNMADD(KP577350269, Te, Td);
            Ta    = SIMD_FNMADD(KP577350269, T9, T6);
            Tw    = SIMD_FNMADD(KP577350269, Tv, Tu);
            Tr    = SIMD_FNMADD(KP577350269, Tq, Tn);
            Tg    = SIMD_FMADD(KP866025403, Tf, Tc);
            Tb    = SIMD_FMADD(KP866025403, Ta, T3);
            Tx    = SIMD_FMADD(KP866025403, Tw, Tt);
            Ts    = SIMD_FMADD(KP866025403, Tr, Tk);
            Th    = SIMD_FMADD(KP363970234, Tg, Tb);
            TF    = SIMD_FNMADD(KP363970234, Tb, Tg);
            Ty    = SIMD_FNMADD(KP176326980, Tx, Ts);
            TC    = SIMD_FMADD(KP176326980, Ts, Tx);
            TG    = SIMD_FNMADD(KP939692620, TF, TE);
            Ti    = SIMD_FNMADD(KP939692620, Th, T2);
            TD    = SIMD_FMADD(KP984807753, TC, TB);
            Tz    = SIMD_FNMADD(KP984807753, Ty, Tj);
            TH    = TD + TG;
            TK    = TD - TG;
            TA    = Ti - Tz;
            TL    = Tz + Ti;
            TM    = SIMD_FNMADD(KP577350269, TL, TK);
            TI    = SIMD_FNMADD(KP577350269, TH, TA);
            io[0] = SIMD_FMADD(KP866025403, TM, TJ);
            ro[0] = SIMD_FMADD(KP866025403, TI, T1);
        }
    }
}
