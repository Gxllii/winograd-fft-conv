//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cb_traits<32, 0>
{
    static constexpr long_t flops           = 240;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 135;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 0 -name
 * r2cb -standalone */

/*
 * This function contains 156 FP additions, 84 FP multiplications,
 * (or, 72 additions, 0 multiplications, 84 fused multiply/add),
 * 135 stack variables, 9 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 0>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T29, T24, T1v, T1y, T1P, T1L, T1F, T1C, T1Q, T1O, T2b, T1Z,
            T2a, T2c, T1z;
        SIMD_FLOAT T1H, T1G, T1I;
        {
            SIMD_FLOAT T8, T1S, T1t, Tz, T1R, T5, TE, T1u, T1w, TP, T1U, Tg, TS,
                Tk, TY;
            SIMD_FLOAT T26, T1c, T2m, T1X, T1x, TK, T19, Tn, T27, TV, TX, Tr,
                TZ, Ts, Tt;
            SIMD_FLOAT T13, T14, T4, Ty, T1, T2, T6, T7, TB, TC;
            T4 = Cr[WS(cs, 8)];
            Ty = Ci[WS(cs, 8)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 16)];
            T6 = Cr[WS(cs, 4)];
            T7 = Cr[WS(cs, 12)];
            TB = Ci[WS(cs, 4)];
            TC = Ci[WS(cs, 12)];
            {
                SIMD_FLOAT TH, TG, Tc, T1V, TO, TL, Tf, TI, Ta, Tb, TM, TN, Td,
                    Te, TA;
                SIMD_FLOAT TD, Tx, T3, T1a, T1b, Tl, T1W, TJ, Tm, TT, TU, Ti,
                    Tj, Tp, Tq;
                Ta  = Cr[WS(cs, 2)];
                Tb  = Cr[WS(cs, 14)];
                TM  = Ci[WS(cs, 2)];
                TN  = Ci[WS(cs, 14)];
                Td  = Cr[WS(cs, 10)];
                Te  = Cr[WS(cs, 6)];
                TH  = Ci[WS(cs, 10)];
                Tx  = T1 - T2;
                T3  = T1 + T2;
                T8  = T6 + T7;
                TA  = T6 - T7;
                T1S = TB - TC;
                TD  = TB + TC;
                TG  = Ta - Tb;
                Tc  = Ta + Tb;
                T1V = TM - TN;
                TO  = TM + TN;
                TL  = Td - Te;
                Tf  = Td + Te;
                T1t = SIMD_FMADD(KP2_000000000, Ty, Tx);
                Tz  = SIMD_FNMADD(KP2_000000000, Ty, Tx);
                T1R = SIMD_FNMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FMADD(KP2_000000000, T4, T3);
                TI  = Ci[WS(cs, 6)];
                TE  = TA - TD;
                T1u = TA + TD;
                Ti  = Cr[WS(cs, 1)];
                Tj  = Cr[WS(cs, 15)];
                T1a = Ci[WS(cs, 1)];
                T1w = TO - TL;
                TP  = TL + TO;
                T1U = Tc - Tf;
                Tg  = Tc + Tf;
                T1b = Ci[WS(cs, 15)];
                Tl  = Cr[WS(cs, 9)];
                T1W = TH - TI;
                TJ  = TH + TI;
                Tm  = Cr[WS(cs, 7)];
                TT  = Ci[WS(cs, 9)];
                TS  = Ti - Tj;
                Tk  = Ti + Tj;
                TU  = Ci[WS(cs, 7)];
                Tp  = Cr[WS(cs, 5)];
                Tq  = Cr[WS(cs, 11)];
                TY  = Ci[WS(cs, 5)];
                T26 = T1a - T1b;
                T1c = T1a + T1b;
                T2m = T1W + T1V;
                T1X = T1V - T1W;
                T1x = TG + TJ;
                TK  = TG - TJ;
                T19 = Tl - Tm;
                Tn  = Tl + Tm;
                T27 = TT - TU;
                TV  = TT + TU;
                TX  = Tp - Tq;
                Tr  = Tp + Tq;
                TZ  = Ci[WS(cs, 11)];
                Ts  = Cr[WS(cs, 3)];
                Tt  = Cr[WS(cs, 13)];
                T13 = Ci[WS(cs, 3)];
                T14 = Ci[WS(cs, 13)];
            }
            {
                SIMD_FLOAT T1D, T1d, T1A, TW, Th, T2v, T1l, T1m, T1T, T1Y, T2n,
                    T2t, TR, T1j, T2j;
                SIMD_FLOAT T2f, T2g, T2o, Tw, T2r, T2w, T1E, T17, T1B, T1g, T2h,
                    T2l, T20, To, T2p;
                SIMD_FLOAT T28, T22, T10, T12, Tu, T21, T15, T9, TF, TQ, T1e,
                    T11, Tv, T25, T23;
                SIMD_FLOAT T2q, T1f, T16, T2d, T2e, T1n, T1r, T1q, T1s, T1i,
                    T1k, T1M, T1N, T18, T1p;
                SIMD_FLOAT T1h, T1o, T2i, T2k, T1J, T1K, T2s, T2u;
                T2l            = SIMD_FNMADD(KP2_000000000, T8, T5);
                T9             = SIMD_FMADD(KP2_000000000, T8, T5);
                T1D            = T1c - T19;
                T1d            = T19 + T1c;
                T20            = Tk - Tn;
                To             = Tk + Tn;
                T2p            = T27 + T26;
                T28            = T26 - T27;
                T1A            = TS + TV;
                TW             = TS - TV;
                T22            = TY - TZ;
                T10            = TY + TZ;
                T12            = Ts - Tt;
                Tu             = Ts + Tt;
                T21            = T14 - T13;
                T15            = T13 + T14;
                Th             = SIMD_FMADD(KP2_000000000, Tg, T9);
                T2v            = SIMD_FNMADD(KP2_000000000, Tg, T9);
                T1l            = SIMD_FNMADD(KP1_414213562, TE, Tz);
                TF             = SIMD_FMADD(KP1_414213562, TE, Tz);
                TQ             = SIMD_FNMADD(KP414213562, TP, TK);
                T1m            = SIMD_FMADD(KP414213562, TK, TP);
                T1T            = SIMD_FNMADD(KP2_000000000, T1S, T1R);
                T2d            = SIMD_FMADD(KP2_000000000, T1S, T1R);
                T2e            = T1U + T1X;
                T1Y            = T1U - T1X;
                T1e            = TX + T10;
                T11            = TX - T10;
                Tv             = Tr + Tu;
                T25            = Tr - Tu;
                T23            = T21 - T22;
                T2q            = T22 + T21;
                T1f            = T12 + T15;
                T16            = T12 - T15;
                T2n            = SIMD_FNMADD(KP2_000000000, T2m, T2l);
                T2t            = SIMD_FMADD(KP2_000000000, T2m, T2l);
                TR             = SIMD_FMADD(KP1_847759065, TQ, TF);
                T1j            = SIMD_FNMADD(KP1_847759065, TQ, TF);
                T2j            = SIMD_FMADD(KP1_414213562, T2e, T2d);
                T2f            = SIMD_FNMADD(KP1_414213562, T2e, T2d);
                T29            = T25 + T28;
                T2g            = T28 - T25;
                T2o            = To - Tv;
                Tw             = To + Tv;
                T2r            = T2p - T2q;
                T2w            = T2q + T2p;
                T1E            = T16 - T11;
                T17            = T11 + T16;
                T1B            = T1e + T1f;
                T1g            = T1e - T1f;
                T2h            = T20 - T23;
                T24            = T20 + T23;
                T1v            = SIMD_FNMADD(KP1_414213562, T1u, T1t);
                T1J            = SIMD_FMADD(KP1_414213562, T1u, T1t);
                T1K            = SIMD_FMADD(KP414213562, T1w, T1x);
                T1y            = SIMD_FNMADD(KP414213562, T1x, T1w);
                R0[0]          = SIMD_FMADD(KP2_000000000, Tw, Th);
                R0[WS(rs, 16)] = SIMD_FNMADD(KP2_000000000, Tw, Th);
                T2s            = T2o - T2r;
                T2u            = T2o + T2r;
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP2_000000000, T2w, T2v);
                R0[WS(rs, 24)] = SIMD_FMADD(KP2_000000000, T2w, T2v);
                T18            = SIMD_FMADD(KP707106781, T17, TW);
                T1p            = SIMD_FNMADD(KP707106781, T17, TW);
                T1h            = SIMD_FMADD(KP707106781, T1g, T1d);
                T1o            = SIMD_FNMADD(KP707106781, T1g, T1d);
                T2i            = SIMD_FNMADD(KP414213562, T2h, T2g);
                T2k            = SIMD_FMADD(KP414213562, T2g, T2h);
                T1n            = SIMD_FNMADD(KP1_847759065, T1m, T1l);
                T1r            = SIMD_FMADD(KP1_847759065, T1m, T1l);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP1_414213562, T2u, T2t);
                R0[WS(rs, 28)] = SIMD_FMADD(KP1_414213562, T2u, T2t);
                R0[WS(rs, 4)]  = SIMD_FMADD(KP1_414213562, T2s, T2n);
                R0[WS(rs, 20)] = SIMD_FNMADD(KP1_414213562, T2s, T2n);
                T1P            = SIMD_FMADD(KP1_847759065, T1K, T1J);
                T1L            = SIMD_FNMADD(KP1_847759065, T1K, T1J);
                T1q            = SIMD_FNMADD(KP668178637, T1p, T1o);
                T1s            = SIMD_FMADD(KP668178637, T1o, T1p);
                T1i            = SIMD_FNMADD(KP198912367, T1h, T18);
                T1k            = SIMD_FMADD(KP198912367, T18, T1h);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP1_847759065, T2k, T2j);
                R0[WS(rs, 30)] = SIMD_FMADD(KP1_847759065, T2k, T2j);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_847759065, T2i, T2f);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T2i, T2f);
                T1F            = SIMD_FNMADD(KP707106781, T1E, T1D);
                T1M            = SIMD_FMADD(KP707106781, T1E, T1D);
                T1N            = SIMD_FMADD(KP707106781, T1B, T1A);
                T1C            = SIMD_FNMADD(KP707106781, T1B, T1A);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_662939224, T1s, T1r);
                R0[WS(rs, 29)] = SIMD_FMADD(KP1_662939224, T1s, T1r);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_662939224, T1q, T1n);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_662939224, T1q, T1n);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_961570560, T1k, T1j);
                R0[WS(rs, 25)] = SIMD_FMADD(KP1_961570560, T1k, T1j);
                R0[WS(rs, 1)]  = SIMD_FMADD(KP1_961570560, T1i, TR);
                R0[WS(rs, 17)] = SIMD_FNMADD(KP1_961570560, T1i, TR);
                T1Q            = SIMD_FMADD(KP198912367, T1M, T1N);
                T1O            = SIMD_FNMADD(KP198912367, T1N, T1M);
                T2b            = SIMD_FNMADD(KP1_414213562, T1Y, T1T);
                T1Z            = SIMD_FMADD(KP1_414213562, T1Y, T1T);
            }
        }
        R0[WS(rs, 15)] = SIMD_FNMADD(KP1_961570560, T1Q, T1P);
        R0[WS(rs, 31)] = SIMD_FMADD(KP1_961570560, T1Q, T1P);
        R0[WS(rs, 23)] = SIMD_FMADD(KP1_961570560, T1O, T1L);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_961570560, T1O, T1L);
        T2a            = SIMD_FNMADD(KP414213562, T29, T24);
        T2c            = SIMD_FMADD(KP414213562, T24, T29);
        T1z            = SIMD_FNMADD(KP1_847759065, T1y, T1v);
        T1H            = SIMD_FMADD(KP1_847759065, T1y, T1v);
        T1G            = SIMD_FNMADD(KP668178637, T1F, T1C);
        T1I            = SIMD_FMADD(KP668178637, T1C, T1F);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_847759065, T2c, T2b);
        R0[WS(rs, 26)] = SIMD_FMADD(KP1_847759065, T2c, T2b);
        R0[WS(rs, 2)]  = SIMD_FMADD(KP1_847759065, T2a, T1Z);
        R0[WS(rs, 18)] = SIMD_FNMADD(KP1_847759065, T2a, T1Z);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_662939224, T1I, T1H);
        R0[WS(rs, 27)] = SIMD_FMADD(KP1_662939224, T1I, T1H);
        R0[WS(rs, 3)]  = SIMD_FMADD(KP1_662939224, T1G, T1z);
        R0[WS(rs, 19)] = SIMD_FNMADD(KP1_662939224, T1G, T1z);
    }
}

template <>
struct r2cb_traits<32, 1>
{
    static constexpr long_t flops           = 238;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 63;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 1 -name
 * r2cb -standalone */

/*
 * This function contains 156 FP additions, 82 FP multiplications,
 * (or, 74 additions, 0 multiplications, 82 fused multiply/add),
 * 133 stack variables, 9 constants, and 63 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 1>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1m, T1p, T1N, T23, T24, T22, T1j, T1r, T1s, T1q;
        {
            SIMD_FLOAT T2e, T1E, T1D, T2d, T1d, T5, Tc, T1e, T1I, T2r, T1h, Tk,
                T1R, Tw, TE;
            SIMD_FLOAT T1Y, TT, T1L, T2g, T1g, Tr, T1Z, Tz, T1S, TW, T1V, TD,
                TF, TI, TJ;
            SIMD_FLOAT TL, TM, T4, T1C, T1, T2, T6, T7, T9, Ta, T2f, T2q, T20,
                T2k, T1k;
            SIMD_FLOAT TA, T1T, T2i, T1n, TX, T1P, TG, T1W, TK, T1O, TN, T2s,
                Td, T15, T16;
            SIMD_FLOAT Ts, T25, T1F, T1M, T26;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            {
                SIMD_FLOAT To, T1J, Tg, T1G, Tn, T1H, Tj, Tp, Te, Tf, Tl, Tm,
                    Th, Ti, T8;
                SIMD_FLOAT Tb, T1B, T3, TR, TS, Tx, T1K, Tq, Ty, TU, TV, Tu, Tv,
                    TB, TC;
                Te  = Ci[WS(cs, 2)];
                Tf  = Ci[WS(cs, 14)];
                Tl  = Cr[WS(cs, 2)];
                Tm  = Cr[WS(cs, 14)];
                Th  = Cr[WS(cs, 10)];
                Ti  = Cr[WS(cs, 6)];
                To  = Ci[WS(cs, 10)];
                T1B = T1 + T2;
                T3  = T1 - T2;
                T2e = T6 + T7;
                T8  = T6 - T7;
                T1E = T9 - Ta;
                Tb  = T9 + Ta;
                T1J = Te - Tf;
                Tg  = Te + Tf;
                T1G = Tl + Tm;
                Tn  = Tl - Tm;
                T1H = Th + Ti;
                Tj  = Th - Ti;
                T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
                T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
                T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FMADD(KP2_000000000, T4, T3);
                Tp  = Ci[WS(cs, 6)];
                Tc  = T8 + Tb;
                T1e = T8 - Tb;
                Tu  = Cr[WS(cs, 1)];
                Tv  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                T1I = T1G - T1H;
                T2r = T1G + T1H;
                T1h = Tg + Tj;
                Tk  = Tg - Tj;
                TS  = Ci[WS(cs, 15)];
                Tx  = Ci[WS(cs, 9)];
                T1K = To - Tp;
                Tq  = To + Tp;
                Ty  = Ci[WS(cs, 7)];
                TU  = Cr[WS(cs, 9)];
                T1R = Tu + Tv;
                Tw  = Tu - Tv;
                TV  = Cr[WS(cs, 7)];
                TB  = Cr[WS(cs, 5)];
                TC  = Cr[WS(cs, 11)];
                TE  = Ci[WS(cs, 5)];
                T1Y = TR - TS;
                TT  = TR + TS;
                T1L = T1J - T1K;
                T2g = T1K + T1J;
                T1g = Tn - Tq;
                Tr  = Tn + Tq;
                T1Z = Tx - Ty;
                Tz  = Tx + Ty;
                T1S = TU + TV;
                TW  = TU - TV;
                T1V = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 11)];
                TI  = Cr[WS(cs, 3)];
                TJ  = Cr[WS(cs, 13)];
                TL  = Ci[WS(cs, 3)];
                TM  = Ci[WS(cs, 13)];
            }
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T20 = T1Y - T1Z;
            T2k = T1Z + T1Y;
            T1k = Tw - Tz;
            TA  = Tw + Tz;
            T1T = T1R - T1S;
            T2i = T1R + T1S;
            T1n = TT + TW;
            TX  = TT - TW;
            T1P = TE - TF;
            TG  = TE + TF;
            T1W = TI + TJ;
            TK  = TI - TJ;
            T1O = TM - TL;
            TN  = TL + TM;
            T2s = SIMD_FNMADD(KP2_000000000, T2r, T2q);
            Td  = SIMD_FNMADD(KP1_414213562, Tc, T5);
            T15 = SIMD_FMADD(KP1_414213562, Tc, T5);
            T16 = SIMD_FMADD(KP414213562, Tk, Tr);
            Ts  = SIMD_FNMADD(KP414213562, Tr, Tk);
            T25 = SIMD_FMADD(KP2_000000000, T1E, T1D);
            T1F = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T1M = T1I - T1L;
            T26 = T1L + T1I;
            {
                SIMD_FLOAT T2j, T2o, T2h, T13, Tt, T2b, T27, T21, T28, T2m, T2t,
                    T29, T1U, T10, T1l;
                SIMD_FLOAT TP, T1o, T1t, T1f, T1i, T1u, TH, TZ, T2u, T1X, T2l,
                    T1Q, TY, TO, T1b;
                SIMD_FLOAT T17, T1z, T1v, T1A, T1y, T1c, T1a, T14, T12, T2p,
                    T2n, T2c, T2a, T1x, T11;
                SIMD_FLOAT T18, T1w, T19, TQ;
                TH             = TD + TG;
                TZ             = TD - TG;
                T2j            = T2i - (T1V + T1W);
                T2u            = T2r - T2i - (T1V + T1W);
                T1X            = T1V - T1W;
                T2l            = T1P + T1O;
                T1Q            = T1O - T1P;
                TY             = TK - TN;
                TO             = TK + TN;
                T2o            = SIMD_FMADD(KP2_000000000, T2g, T2f);
                T2h            = SIMD_FNMADD(KP2_000000000, T2g, T2f);
                T13            = SIMD_FMADD(KP1_847759065, Ts, Td);
                Tt             = SIMD_FNMADD(KP1_847759065, Ts, Td);
                T2b            = SIMD_FMADD(KP1_414213562, T26, T25);
                T27            = SIMD_FNMADD(KP1_414213562, T26, T25);
                R0[WS(rs, 15)] = SIMD_FMADD(KP2_000000000, T2u, T2q);
                T21            = T1X + T20;
                T28            = T20 - T1X;
                T2m            = T2k - T2l;
                T2t            = T2l + T2k;
                T29            = T1T - T1Q;
                T1U            = T1Q + T1T;
                T10            = TY - TZ;
                T1l            = TZ + TY;
                TP             = TH + TO;
                T1o            = TH - TO;
                T1t            = SIMD_FNMADD(KP1_414213562, T1e, T1d);
                T1f            = SIMD_FMADD(KP1_414213562, T1e, T1d);
                T1i            = SIMD_FNMADD(KP414213562, T1h, T1g);
                T1u            = SIMD_FMADD(KP414213562, T1g, T1h);
                T2p            = T2m + T2j;
                T2n            = T2j - T2m;
                R0[WS(rs, 23)] = SIMD_FMADD(KP2_000000000, T2t, T2s);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, T2t, T2s);
                T2c            = SIMD_FMADD(KP414213562, T28, T29);
                T2a            = SIMD_FNMADD(KP414213562, T29, T28);
                T1x            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1m            = SIMD_FMADD(KP707106781, T1l, T1k);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T18            = SIMD_FMADD(KP707106781, T10, TX);
                T1p            = SIMD_FMADD(KP707106781, T1o, T1n);
                T1w            = SIMD_FNMADD(KP707106781, T1o, T1n);
                T19            = SIMD_FMADD(KP707106781, TP, TA);
                TQ             = SIMD_FNMADD(KP707106781, TP, TA);
                T1b            = SIMD_FMADD(KP1_847759065, T16, T15);
                T17            = SIMD_FNMADD(KP1_847759065, T16, T15);
                T1z            = SIMD_FMADD(KP1_847759065, T1u, T1t);
                T1v            = SIMD_FNMADD(KP1_847759065, T1u, T1t);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 27)] = SIMD_FMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 19)] = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 3)]  = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_847759065, T2c, T2b);
                R0[WS(rs, 29)] = SIMD_FMADD(KP1_847759065, T2c, T2b);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T2a, T27);
                T1A            = SIMD_FMADD(KP668178637, T1w, T1x);
                T1y            = SIMD_FNMADD(KP668178637, T1x, T1w);
                T1c            = SIMD_FMADD(KP198912367, T18, T19);
                T1a            = SIMD_FNMADD(KP198912367, T19, T18);
                T14            = SIMD_FMADD(KP668178637, TQ, T11);
                T12            = SIMD_FNMADD(KP668178637, T11, TQ);
                T1N            = SIMD_FMADD(KP1_414213562, T1M, T1F);
                T23            = SIMD_FNMADD(KP1_414213562, T1M, T1F);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP1_662939224, T1A, T1z);
                R0[WS(rs, 28)] = SIMD_FMADD(KP1_662939224, T1A, T1z);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_662939224, T1y, T1v);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_662939224, T1y, T1v);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP1_961570560, T1c, T1b);
                R0[WS(rs, 30)] = SIMD_FMADD(KP1_961570560, T1c, T1b);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_961570560, T1a, T17);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_961570560, T1a, T17);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_662939224, T14, T13);
                R0[WS(rs, 26)] = SIMD_FMADD(KP1_662939224, T14, T13);
                R0[WS(rs, 2)]  = SIMD_FMADD(KP1_662939224, T12, Tt);
                R0[WS(rs, 18)] = SIMD_FNMADD(KP1_662939224, T12, Tt);
                T24            = SIMD_FMADD(KP414213562, T1U, T21);
                T22            = SIMD_FNMADD(KP414213562, T21, T1U);
                T1j            = SIMD_FMADD(KP1_847759065, T1i, T1f);
                T1r            = SIMD_FNMADD(KP1_847759065, T1i, T1f);
            }
        }
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 17)] = SIMD_FNMADD(KP1_847759065, T22, T1N);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_847759065, T22, T1N);
        T1s            = SIMD_FMADD(KP198912367, T1m, T1p);
        T1q            = SIMD_FNMADD(KP198912367, T1p, T1m);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_961570560, T1s, T1r);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_961570560, T1s, T1r);
        R0[0]          = SIMD_FMADD(KP1_961570560, T1q, T1j);
        R0[WS(rs, 16)] = SIMD_FNMADD(KP1_961570560, T1q, T1j);
    }
}

template <>
struct r2cb_traits<32, 2>
{
    static constexpr long_t flops           = 236;
    static constexpr long_t operations      = 155;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 135;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 2 -name
 * r2cb -standalone */

/*
 * This function contains 155 FP additions, 81 FP multiplications,
 * (or, 74 additions, 0 multiplications, 81 fused multiply/add),
 * 135 stack variables, 11 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 2>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1d, TX, TY, T11, T10, T21, T1Y, T1G, T1V, T23, T22, T24, TZ,
            T13, T12;
        SIMD_FLOAT T14;
        {
            SIMD_FLOAT T8, T2e, T1P, T17, T2d, T5, T1c, T1Q, T1z, T1W, T2k, Tw,
                T1e, Tc, TP;
            SIMD_FLOAT T1i, Tj, T1Z, T1o, TL, T2i, T1h, Tf, T1f, Tm, T1p, Tz,
                TQ, TA, TB;
            SIMD_FLOAT TM, TN, T4, T16, T1, T2, T6, T7, T19, T1a, T2f, T2q, T2r,
                Tg, T2g;
            SIMD_FLOAT Tn, TR, T1s, TC, T1t, TO, T2s, T1H, T1k, T1I, T25, T1R,
                T1U, T26, T1B;
            SIMD_FLOAT T1r, T1S, T1T, T1q, T1j, T1g;
            T4  = Cr[WS(cs, 8)];
            T16 = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T19 = Cr[WS(cs, 4)];
            T1a = Cr[WS(cs, 12)];
            {
                SIMD_FLOAT TI, T1m, Ts, T1x, TH, T1y, Tv, TJ, Tq, Tr, TF, TG,
                    Tt, Tu, T18;
                SIMD_FLOAT T1b, T15, T3, Th, Ti, Td, T1n, TK, Te, Tk, Tl, Ta,
                    Tb, Tx, Ty;
                Tq  = Ci[WS(cs, 1)];
                Tr  = Ci[WS(cs, 15)];
                TF  = Cr[WS(cs, 1)];
                TG  = Cr[WS(cs, 15)];
                Tt  = Ci[WS(cs, 9)];
                Tu  = Ci[WS(cs, 7)];
                TI  = Cr[WS(cs, 9)];
                T15 = T1 - T2;
                T3  = T1 + T2;
                T8  = T6 - T7;
                T18 = T6 + T7;
                T2e = T19 + T1a;
                T1b = T19 - T1a;
                T1m = Tq + Tr;
                Ts  = Tq - Tr;
                T1x = TF - TG;
                TH  = TF + TG;
                T1y = Tt + Tu;
                Tv  = Tt - Tu;
                T1P = SIMD_FMADD(KP2_000000000, T16, T15);
                T17 = SIMD_FNMADD(KP2_000000000, T16, T15);
                T2d = SIMD_FMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
                TJ  = Cr[WS(cs, 7)];
                T1c = T18 - T1b;
                T1Q = T18 + T1b;
                Ta  = Cr[WS(cs, 2)];
                Tb  = Cr[WS(cs, 14)];
                Th  = Ci[WS(cs, 2)];
                T1z = T1x - T1y;
                T1W = T1y + T1x;
                T2k = Ts + Tv;
                Tw  = Ts - Tv;
                Ti  = Ci[WS(cs, 14)];
                Td  = Cr[WS(cs, 10)];
                T1n = TI - TJ;
                TK  = TI + TJ;
                Te  = Cr[WS(cs, 6)];
                Tk  = Ci[WS(cs, 10)];
                T1e = Ta - Tb;
                Tc  = Ta + Tb;
                Tl  = Ci[WS(cs, 6)];
                Tx  = Cr[WS(cs, 5)];
                Ty  = Cr[WS(cs, 11)];
                TP  = Ci[WS(cs, 5)];
                T1i = Th + Ti;
                Tj  = Th - Ti;
                T1Z = T1m - T1n;
                T1o = T1m + T1n;
                TL  = TH - TK;
                T2i = TH + TK;
                T1h = Td - Te;
                Tf  = Td + Te;
                T1f = Tk + Tl;
                Tm  = Tk - Tl;
                T1p = Tx - Ty;
                Tz  = Tx + Ty;
                TQ  = Ci[WS(cs, 11)];
                TA  = Cr[WS(cs, 3)];
                TB  = Cr[WS(cs, 13)];
                TM  = Ci[WS(cs, 13)];
                TN  = Ci[WS(cs, 3)];
            }
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T1j = T1h + T1i;
            T1S = T1i - T1h;
            T2r = Tc + Tf;
            Tg  = Tc - Tf;
            T1g = T1e - T1f;
            T1T = T1e + T1f;
            T2g = Tj + Tm;
            Tn  = Tj - Tm;
            T1q = TP + TQ;
            TR  = TP - TQ;
            T1s = TA - TB;
            TC  = TA + TB;
            T1t = TM + TN;
            TO  = TM - TN;
            T2s = SIMD_FNMADD(KP2_000000000, T2r, T2q);
            T1H = SIMD_FMADD(KP1_414213562, T1c, T17);
            T1d = SIMD_FNMADD(KP1_414213562, T1c, T17);
            T1k = SIMD_FNMADD(KP414213562, T1j, T1g);
            T1I = SIMD_FMADD(KP414213562, T1g, T1j);
            T25 = SIMD_FMADD(KP1_414213562, T1Q, T1P);
            T1R = SIMD_FNMADD(KP1_414213562, T1Q, T1P);
            T1U = SIMD_FNMADD(KP414213562, T1T, T1S);
            T26 = SIMD_FMADD(KP414213562, T1S, T1T);
            T1B = T1p - T1q;
            T1r = T1p + T1q;
            {
                SIMD_FLOAT T2j, T1l, T2h, T2o, T27, T2b, TE, T20, T1C, T1X, T1v,
                    T2m, T2t, TT, Tp;
                SIMD_FLOAT TV, T9, To, TD, T1A, T1u, TS, T2l, T2u, T28, T1D,
                    T1L, T29, T1K, T1w;
                SIMD_FLOAT T2p, T2n, TW, TU, T1N, T1J, T2a, T2c, T1M, T1O, T1F,
                    T1E;
                T9             = SIMD_FMADD(KP2_000000000, T8, T5);
                TX             = SIMD_FNMADD(KP2_000000000, T8, T5);
                T2j            = T2i - (Tz + TC);
                T2u            = T2r - T2i - (Tz + TC);
                TD             = Tz - TC;
                T1A            = T1s - T1t;
                T1u            = T1s + T1t;
                TS             = TO - TR;
                T2l            = TO + TR;
                T1l            = SIMD_FNMADD(KP1_847759065, T1k, T1d);
                T2h            = SIMD_FNMADD(KP2_000000000, T2g, T2f);
                T2o            = SIMD_FMADD(KP2_000000000, T2g, T2f);
                T27            = SIMD_FNMADD(KP1_847759065, T26, T25);
                T2b            = SIMD_FMADD(KP1_847759065, T26, T25);
                TY             = Tg - Tn;
                To             = Tg + Tn;
                R0[WS(rs, 14)] = SIMD_FMADD(KP2_000000000, T2u, T2q);
                T11            = Tw + TD;
                TE             = Tw - TD;
                T20            = T1A - T1B;
                T1C            = T1A + T1B;
                T1X            = T1u + T1r;
                T1v            = T1r - T1u;
                T2m            = T2k - T2l;
                T2t            = T2k + T2l;
                TT             = TL - TS;
                T10            = TL + TS;
                Tp             = SIMD_FNMADD(KP1_414213562, To, T9);
                TV             = SIMD_FMADD(KP1_414213562, To, T9);
                T28            = SIMD_FMADD(KP707106781, T20, T1Z);
                T21            = SIMD_FNMADD(KP707106781, T20, T1Z);
                T1D            = SIMD_FMADD(KP707106781, T1C, T1z);
                T1L            = SIMD_FNMADD(KP707106781, T1C, T1z);
                T1Y            = SIMD_FNMADD(KP707106781, T1X, T1W);
                T29            = SIMD_FMADD(KP707106781, T1X, T1W);
                T1K            = SIMD_FNMADD(KP707106781, T1v, T1o);
                T1w            = SIMD_FMADD(KP707106781, T1v, T1o);
                T2p            = T2j + T2m;
                T2n            = T2j - T2m;
                R0[WS(rs, 22)] = SIMD_FMADD(KP2_000000000, T2t, T2s);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, T2t, T2s);
                TW             = SIMD_FMADD(KP414213562, TE, TT);
                TU             = SIMD_FNMADD(KP414213562, TT, TE);
                T1N            = SIMD_FMADD(KP1_847759065, T1I, T1H);
                T1J            = SIMD_FNMADD(KP1_847759065, T1I, T1H);
                T2a            = SIMD_FNMADD(KP198912367, T29, T28);
                T2c            = SIMD_FMADD(KP198912367, T28, T29);
                T1M            = SIMD_FNMADD(KP668178637, T1L, T1K);
                T1O            = SIMD_FMADD(KP668178637, T1K, T1L);
                T1F            = SIMD_FMADD(KP211164242, T1w, T1k);
                T1E            = SIMD_FMADD(KP198912367, T1D, T1w);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 26)] = SIMD_FMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 18)] = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 2)]  = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP1_847759065, TW, TV);
                R0[WS(rs, 28)] = SIMD_FMADD(KP1_847759065, TW, TV);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_847759065, TU, Tp);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, TU, Tp);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_961570560, T2c, T2b);
                R0[WS(rs, 29)] = SIMD_FMADD(KP1_961570560, T2c, T2b);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_961570560, T2a, T27);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_961570560, T2a, T27);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP1_662939224, T1O, T1N);
                R0[WS(rs, 27)] = SIMD_FMADD(KP1_662939224, T1O, T1N);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_662939224, T1M, T1J);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_662939224, T1M, T1J);
                T1G            = SIMD_FNMADD(KP941979402, T1F, T1D);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_961570560, T1E, T1l);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_961570560, T1E, T1l);
                T1V            = SIMD_FNMADD(KP1_847759065, T1U, T1R);
                T23            = SIMD_FMADD(KP1_847759065, T1U, T1R);
            }
        }
        R0[WS(rs, 15)] = SIMD_FNMADD(KP1_961570560, T1G, T1d);
        T22            = SIMD_FNMADD(KP668178637, T21, T1Y);
        T24            = SIMD_FMADD(KP668178637, T1Y, T21);
        TZ             = SIMD_FMADD(KP1_414213562, TY, TX);
        T13            = SIMD_FNMADD(KP1_414213562, TY, TX);
        T12            = SIMD_FNMADD(KP414213562, T11, T10);
        T14            = SIMD_FMADD(KP414213562, T10, T11);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_662939224, T24, T23);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_662939224, T24, T23);
        R0[WS(rs, 17)] = SIMD_FNMADD(KP1_662939224, T22, T1V);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_662939224, T22, T1V);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_847759065, T14, T13);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_847759065, T14, T13);
        R0[0]          = SIMD_FMADD(KP1_847759065, T12, TZ);
        R0[WS(rs, 16)] = SIMD_FNMADD(KP1_847759065, T12, TZ);
    }
}

template <>
struct r2cb_traits<32, 3>
{
    static constexpr long_t flops           = 234;
    static constexpr long_t operations      = 154;
    static constexpr long_t memory_accesses = 61;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 3 -name
 * r2cb -standalone */

/*
 * This function contains 154 FP additions, 80 FP multiplications,
 * (or, 74 additions, 0 multiplications, 80 fused multiply/add),
 * 136 stack variables, 12 constants, and 61 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 3>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T15, T16, T19, T18, T23, T1N, T24, T22, T1b, T17, T1c, T1a;
        {
            SIMD_FLOAT T2e, T1E, T1D, T2d, T1d, T5, Tc, T1e, T2r, Tk, T2g, Tr,
                T1P, TD, T26;
            SIMD_FLOAT T1M, T1u, T1i, T1n, TA, T2i, T20, TX, T1k, T2k, T1T, T1V,
                TG, TK, T1O;
            SIMD_FLOAT T1W, TN, T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1J, Tg,
                T1G, Tn;
            SIMD_FLOAT T1H, Tj, Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3,
                T1F, T25;
            SIMD_FLOAT T1f, T1t, TZ, TH, T2j, T1X, T2l, TO, TY, T27, T2s, T1v,
                T2h, T2o, T28;
            SIMD_FLOAT T1U, T2q, T2f, T2u, T1Q;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            Te  = Ci[WS(cs, 2)];
            Tf  = Ci[WS(cs, 14)];
            Tl  = Cr[WS(cs, 2)];
            Tm  = Cr[WS(cs, 14)];
            Th  = Cr[WS(cs, 10)];
            Ti  = Cr[WS(cs, 6)];
            To  = Ci[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T2e = T6 + T7;
            T8  = T6 - T7;
            T1E = T9 - Ta;
            Tb  = T9 + Ta;
            T1J = Te - Tf;
            Tg  = Te + Tf;
            T1G = Tl + Tm;
            Tn  = Tl - Tm;
            T1H = Th + Ti;
            Tj  = Th - Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Ci[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = Tb - T8;
            {
                SIMD_FLOAT T1Y, Tw, TE, T1R, TT, T1S, Tz, T1Z, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1I, T1g, TS, Tx, T1K, Tq, Ty, TU, TV, Tu, Tv, T1L,
                    T1h, TB, TC;
                Tu  = Cr[WS(cs, 1)];
                Tv  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                T1I = T1G - T1H;
                T2r = T1H + T1G;
                T1g = Tg + Tj;
                Tk  = Tg - Tj;
                TS  = Ci[WS(cs, 15)];
                Tx  = Ci[WS(cs, 9)];
                T1K = To - Tp;
                Tq  = To + Tp;
                Ty  = Ci[WS(cs, 7)];
                TU  = Cr[WS(cs, 9)];
                T1Y = Tu + Tv;
                Tw  = Tu - Tv;
                TV  = Cr[WS(cs, 7)];
                TB  = Cr[WS(cs, 5)];
                TC  = Cr[WS(cs, 11)];
                TE  = Ci[WS(cs, 5)];
                T1R = TR - TS;
                TT  = TR + TS;
                T1L = T1J - T1K;
                T2g = T1J + T1K;
                T1h = Tn - Tq;
                Tr  = Tn + Tq;
                T1S = Tx - Ty;
                Tz  = Tx + Ty;
                T1Z = TU + TV;
                TW  = TU - TV;
                T1P = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 11)];
                TI  = Cr[WS(cs, 3)];
                T26 = T1L - T1I;
                T1M = T1I + T1L;
                TJ  = Cr[WS(cs, 13)];
                T1u = SIMD_FNMADD(KP414213562, T1g, T1h);
                T1i = SIMD_FMADD(KP414213562, T1h, T1g);
                TL  = Ci[WS(cs, 3)];
                TM  = Ci[WS(cs, 13)];
                T1n = Tw - Tz;
                TA  = Tw + Tz;
                T2i = T1Y + T1Z;
                T20 = T1Y - T1Z;
                TX  = TT - TW;
                T1k = TT + TW;
                T2k = T1S + T1R;
                T1T = T1R - T1S;
                T1V = TE - TF;
                TG  = TE + TF;
                TK  = TI - TJ;
                T1O = TI + TJ;
                T1W = TM - TL;
                TN  = TL + TM;
            }
            T1F            = SIMD_FMADD(KP2_000000000, T1E, T1D);
            T25            = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T2q            = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T2f            = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T1f            = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T1t            = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            TZ             = TD - TG;
            TH             = TD + TG;
            T2u            = T2r - T2i - (T1P + T1O);
            T1Q            = T1O - T1P;
            T2j            = T2i - (T1P + T1O);
            T1X            = T1V - T1W;
            T2l            = T1V + T1W;
            TO             = TK + TN;
            TY             = TK - TN;
            T27            = SIMD_FMADD(KP1_414213562, T26, T25);
            T2s            = SIMD_FNMADD(KP2_000000000, T2r, T2q);
            T1v            = SIMD_FNMADD(KP1_847759065, T1u, T1t);
            T2h            = SIMD_FNMADD(KP2_000000000, T2g, T2f);
            T2o            = SIMD_FMADD(KP2_000000000, T2g, T2f);
            R0[WS(rs, 13)] = SIMD_FMADD(KP2_000000000, T2u, T2q);
            T28            = T1T - T1Q;
            T1U            = T1Q + T1T;
            {
                SIMD_FLOAT Td, T29, T21, T2t, T2m, TP, T1l, T10, T1o, Ts, T1x,
                    T13, Tt, T1r, T1j;
                SIMD_FLOAT T1z, T1s, T1q, T1y, T12, T14, T2a, T2b, T2p, T2n,
                    T1m, T1w, TQ, T1p, T11;
                SIMD_FLOAT T2c, T1A;
                T15            = SIMD_FMADD(KP1_414213562, Tc, T5);
                Td             = SIMD_FNMADD(KP1_414213562, Tc, T5);
                T29            = T20 - T1X;
                T21            = T1X + T20;
                T2t            = T2l + T2k;
                T2m            = T2k - T2l;
                TP             = TH + TO;
                T1l            = TH - TO;
                T10            = TY - TZ;
                T1o            = TZ + TY;
                T16            = SIMD_FMADD(KP414213562, Tk, Tr);
                Ts             = SIMD_FNMADD(KP414213562, Tr, Tk);
                T2a            = SIMD_FMADD(KP414213562, T29, T28);
                T2b            = SIMD_FMADD(KP765366864, T26, T29);
                T2p            = T2m + T2j;
                T2n            = T2j - T2m;
                R0[WS(rs, 21)] = SIMD_FMADD(KP2_000000000, T2t, T2s);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP2_000000000, T2t, T2s);
                T1m            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1w            = SIMD_FMADD(KP707106781, T1l, T1k);
                TQ             = SIMD_FNMADD(KP707106781, TP, TA);
                T19            = SIMD_FMADD(KP707106781, TP, TA);
                T1x            = SIMD_FMADD(KP707106781, T1o, T1n);
                T1p            = SIMD_FNMADD(KP707106781, T1o, T1n);
                T18            = SIMD_FMADD(KP707106781, T10, TX);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T13            = SIMD_FMADD(KP1_847759065, Ts, Td);
                Tt             = SIMD_FNMADD(KP1_847759065, Ts, Td);
                T1r            = SIMD_FMADD(KP1_847759065, T1i, T1f);
                T1j            = SIMD_FNMADD(KP1_847759065, T1i, T1f);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_847759065, T2a, T27);
                T2c            = SIMD_FNMADD(KP414213562, T28, T2b);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 25)] = SIMD_FMADD(KP1_414213562, T2p, T2o);
                R0[WS(rs, 17)] = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 1)]  = SIMD_FMADD(KP1_414213562, T2n, T2h);
                T1z            = SIMD_FMADD(KP211164242, T1w, T1u);
                T1s            = SIMD_FMADD(KP668178637, T1m, T1p);
                T1q            = SIMD_FNMADD(KP668178637, T1p, T1m);
                T1y            = SIMD_FMADD(KP198912367, T1x, T1w);
                T12            = SIMD_FNMADD(KP668178637, T11, TQ);
                T14            = SIMD_FMADD(KP668178637, TQ, T11);
                T23            = SIMD_FMADD(KP1_414213562, T1M, T1F);
                T1N            = SIMD_FNMADD(KP1_414213562, T1M, T1F);
                R0[WS(rs, 15)] = SIMD_FNMADD(KP1_847759065, T2c, T25);
                T1A            = SIMD_FNMADD(KP941979402, T1z, T1x);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_662939224, T1s, T1r);
                R0[WS(rs, 26)] = SIMD_FMADD(KP1_662939224, T1s, T1r);
                R0[WS(rs, 18)] = SIMD_FMADD(KP1_662939224, T1q, T1j);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_662939224, T1q, T1j);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_961570560, T1y, T1v);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_961570560, T1y, T1v);
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_662939224, T14, T13);
                R0[WS(rs, 24)] = SIMD_FMADD(KP1_662939224, T14, T13);
                R0[0]          = SIMD_FMADD(KP1_662939224, T12, Tt);
                R0[WS(rs, 16)] = SIMD_FNMADD(KP1_662939224, T12, Tt);
                T24            = SIMD_FMADD(KP414213562, T1U, T21);
                T22            = SIMD_FNMADD(KP414213562, T21, T1U);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP1_961570560, T1A, T1t);
            }
        }
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 27)] = SIMD_FMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_847759065, T22, T1N);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
        T1b            = SIMD_FMADD(KP1_847759065, T16, T15);
        T17            = SIMD_FNMADD(KP1_847759065, T16, T15);
        T1c            = SIMD_FMADD(KP198912367, T18, T19);
        T1a            = SIMD_FNMADD(KP198912367, T19, T18);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_961570560, T1c, T1b);
        R0[WS(rs, 28)] = SIMD_FMADD(KP1_961570560, T1c, T1b);
        R0[WS(rs, 20)] = SIMD_FMADD(KP1_961570560, T1a, T17);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_961570560, T1a, T17);
    }
}

template <>
struct r2cb_traits<32, 4>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 153;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 4 -name
 * r2cb -standalone */

/*
 * This function contains 153 FP additions, 79 FP multiplications,
 * (or, 74 additions, 0 multiplications, 79 fused multiply/add),
 * 136 stack variables, 14 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 4>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T17, T1u, TW, T2l, T2m, T1j, T1q, T2o, T2k, T1z, T2n, T2p,
            T18, T1s, T1r;
        SIMD_FLOAT T1t;
        {
            SIMD_FLOAT T8, T21, T1C, TQ, T20, T5, TV, T1D, Tg, T2r, T1d, Tr,
                T2a, T2j, T1H;
            SIMD_FLOAT T1T, T1v, To, T23, T1m, T1M, T2c, TC, T1c, TF, T1b, T1J,
                Tu, T1f, TI;
            SIMD_FLOAT T1g, T4, TP, T1, T2, T6, T7, TS, TT, T13, T12, Tc, T27,
                T10, TX;
            SIMD_FLOAT Tf, T14, Ta, Tb, TY, TZ, Td, Te, TR, TU, TO, T3, T22,
                T2i, T9;
            SIMD_FLOAT T2q, T1e, T1n, T1S, T1E, T2u, T2d;
            T4  = Cr[WS(cs, 8)];
            TP  = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            TS  = Ci[WS(cs, 4)];
            TT  = Ci[WS(cs, 12)];
            Ta  = Ci[WS(cs, 2)];
            Tb  = Ci[WS(cs, 14)];
            TY  = Cr[WS(cs, 2)];
            TZ  = Cr[WS(cs, 14)];
            Td  = Ci[WS(cs, 10)];
            Te  = Ci[WS(cs, 6)];
            T13 = Cr[WS(cs, 10)];
            TO  = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 + T7;
            TR  = T6 - T7;
            T21 = TS - TT;
            TU  = TS + TT;
            T12 = Ta + Tb;
            Tc  = Ta - Tb;
            T27 = TY + TZ;
            T10 = TY - TZ;
            TX  = Td + Te;
            Tf  = Td - Te;
            T1C = SIMD_FNMADD(KP2_000000000, TP, TO);
            TQ  = SIMD_FMADD(KP2_000000000, TP, TO);
            T20 = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            T14 = Cr[WS(cs, 6)];
            TV  = TR + TU;
            T1D = TU - TR;
            {
                SIMD_FLOAT T1k, Tk, TD, T19, Ty, T1a, Tn, T1l, TB, TE, Ts, Tt,
                    TG, TH, Tw;
                SIMD_FLOAT T1F, T11, T26, Tx, Tl, T28, T15, Tm, Tz, TA, Ti, Tj,
                    T29, T1G, T16;
                SIMD_FLOAT Tp, Tq;
                Ti  = Cr[WS(cs, 1)];
                Tj  = Cr[WS(cs, 15)];
                Tw  = Ci[WS(cs, 1)];
                T1F = T10 - TX;
                T11 = TX + T10;
                T26 = Tc - Tf;
                Tg  = Tc + Tf;
                Tx  = Ci[WS(cs, 15)];
                Tl  = Cr[WS(cs, 9)];
                T28 = T13 + T14;
                T15 = T13 - T14;
                Tm  = Cr[WS(cs, 7)];
                Tz  = Ci[WS(cs, 9)];
                T1k = Ti - Tj;
                Tk  = Ti + Tj;
                TA  = Ci[WS(cs, 7)];
                Tp  = Cr[WS(cs, 5)];
                Tq  = Cr[WS(cs, 11)];
                TD  = Ci[WS(cs, 5)];
                T19 = Tw + Tx;
                Ty  = Tw - Tx;
                T29 = T27 - T28;
                T2r = T27 + T28;
                T1G = T12 + T15;
                T16 = T12 - T15;
                T1a = Tl - Tm;
                Tn  = Tl + Tm;
                T1l = Tz + TA;
                TB  = Tz - TA;
                T1d = Tp - Tq;
                Tr  = Tp + Tq;
                TE  = Ci[WS(cs, 11)];
                Ts  = Cr[WS(cs, 3)];
                T2a = T26 - T29;
                T2j = T26 + T29;
                Tt  = Cr[WS(cs, 13)];
                T1H = SIMD_FNMADD(KP414213562, T1G, T1F);
                T1T = SIMD_FMADD(KP414213562, T1F, T1G);
                T17 = SIMD_FMADD(KP414213562, T16, T11);
                T1v = SIMD_FNMADD(KP414213562, T11, T16);
                TG  = Ci[WS(cs, 13)];
                TH  = Ci[WS(cs, 3)];
                To  = Tk + Tn;
                T23 = Tk - Tn;
                T1m = T1k + T1l;
                T1M = T1k - T1l;
                T2c = Ty - TB;
                TC  = Ty + TB;
                T1c = TD + TE;
                TF  = TD - TE;
                T1b = T19 - T1a;
                T1J = T1a + T19;
                Tu  = Ts + Tt;
                T1f = Ts - Tt;
                TI  = TG - TH;
                T1g = TG + TH;
            }
            T22 = SIMD_FNMADD(KP2_000000000, T21, T20);
            T2i = SIMD_FMADD(KP2_000000000, T21, T20);
            T9  = SIMD_FNMADD(KP2_000000000, T8, T5);
            T2q = SIMD_FMADD(KP2_000000000, T8, T5);
            T1e = T1c - T1d;
            T1n = T1d + T1c;
            T1u = SIMD_FNMADD(KP1_414213562, TV, TQ);
            TW  = SIMD_FMADD(KP1_414213562, TV, TQ);
            T1S = SIMD_FMADD(KP1_414213562, T1D, T1C);
            T1E = SIMD_FNMADD(KP1_414213562, T1D, T1C);
            T2u = T2r - (Tr + Tu) - To;
            T2d = Tu - Tr;
            {
                SIMD_FLOAT T2g, T2s, Tv, T1A, T1I, T2e, TM, Th, T1N, T1i, T1K,
                    T1p, T25, T2t, TK;
                SIMD_FLOAT T1o, T1h, TJ, T24, T1R, T1W, T1O, T1y, T1L, T1V, T1w,
                    T2h, T2b, TN, TL;
                SIMD_FLOAT T1Y, T1U, T1Z, T1X, T1Q, T1P, T1B, T1x, T2f;
                T1o            = T1f + T1g;
                T1h            = T1f - T1g;
                TJ             = TF + TI;
                T24            = TF - TI;
                T2g            = SIMD_FMADD(KP1_414213562, T2a, T22);
                T2s            = SIMD_FNMADD(KP2_000000000, T2r, T2q);
                Tv             = To - (Tr + Tu);
                T1A            = SIMD_FMADD(KP1_847759065, T1v, T1u);
                T1I            = SIMD_FNMADD(KP1_847759065, T1H, T1E);
                R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T2u, T2q);
                T2l            = T2d + T2c;
                T2e            = T2c - T2d;
                TM             = SIMD_FMADD(KP2_000000000, Tg, T9);
                Th             = SIMD_FNMADD(KP2_000000000, Tg, T9);
                T1N            = T1h - T1e;
                T1i            = T1e + T1h;
                T1K            = T1n - T1o;
                T1p            = T1n + T1o;
                T25            = T23 - T24;
                T2m            = T23 + T24;
                T2t            = TC + TJ;
                TK             = TC - TJ;
                T1W            = SIMD_FNMADD(KP707106781, T1N, T1M);
                T1O            = SIMD_FMADD(KP707106781, T1N, T1M);
                T1y            = SIMD_FNMADD(KP707106781, T1i, T1b);
                T1j            = SIMD_FMADD(KP707106781, T1i, T1b);
                T1L            = SIMD_FMADD(KP707106781, T1K, T1J);
                T1V            = SIMD_FNMADD(KP707106781, T1K, T1J);
                T1q            = SIMD_FMADD(KP707106781, T1p, T1m);
                T1w            = SIMD_FNMADD(KP707106781, T1p, T1m);
                T2h            = SIMD_FMADD(KP414213562, T25, T2e);
                T2b            = SIMD_FMADD(KP765366864, T2a, T25);
                TN             = Tv + TK;
                TL             = Tv - TK;
                R0[WS(rs, 20)] = SIMD_FMADD(KP2_000000000, T2t, T2s);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP2_000000000, T2t, T2s);
                T1Y            = SIMD_FMADD(KP1_847759065, T1T, T1S);
                T1U            = SIMD_FNMADD(KP1_847759065, T1T, T1S);
                T2o            = SIMD_FMADD(KP1_414213562, T2j, T2i);
                T2k            = SIMD_FNMADD(KP1_414213562, T2j, T2i);
                T1Z            = SIMD_FMADD(KP668178637, T1V, T1W);
                T1X            = SIMD_FNMADD(KP668178637, T1W, T1V);
                T1Q            = SIMD_FMADD(KP211164242, T1L, T1H);
                T1P            = SIMD_FMADD(KP198912367, T1O, T1L);
                T1B            = SIMD_FMADD(KP668178637, T1w, T1y);
                T1x            = SIMD_FMADD(KP899976223, T1w, T1v);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T2h, T2g);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_847759065, T2h, T2g);
                T2f            = SIMD_FNMADD(KP414213562, T2e, T2b);
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_414213562, TN, TM);
                R0[WS(rs, 24)] = SIMD_FMADD(KP1_414213562, TN, TM);
                R0[0]          = SIMD_FMADD(KP1_414213562, TL, Th);
                R0[WS(rs, 16)] = SIMD_FNMADD(KP1_414213562, TL, Th);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_662939224, T1Z, T1Y);
                R0[WS(rs, 25)] = SIMD_FMADD(KP1_662939224, T1Z, T1Y);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_662939224, T1X, T1U);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_662939224, T1X, T1U);
                T1R            = SIMD_FNMADD(KP941979402, T1Q, T1O);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_961570560, T1P, T1I);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_961570560, T1P, T1I);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_662939224, T1B, T1A);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_662939224, T1B, T1A);
                T1z            = SIMD_FNMADD(KP601344886, T1y, T1x);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP1_847759065, T2f, T22);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_961570560, T1R, T1E);
            }
        }
        R0[WS(rs, 15)] = SIMD_FNMADD(KP1_847759065, T1z, T1u);
        T2n            = SIMD_FNMADD(KP414213562, T2m, T2l);
        T2p            = SIMD_FMADD(KP414213562, T2l, T2m);
        T18            = SIMD_FNMADD(KP1_847759065, T17, TW);
        T1s            = SIMD_FMADD(KP1_847759065, T17, TW);
        T1r            = SIMD_FNMADD(KP198912367, T1q, T1j);
        T1t            = SIMD_FMADD(KP198912367, T1j, T1q);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_847759065, T2p, T2o);
        R0[WS(rs, 26)] = SIMD_FMADD(KP1_847759065, T2p, T2o);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_847759065, T2n, T2k);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T2n, T2k);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_961570560, T1t, T1s);
        R0[WS(rs, 27)] = SIMD_FMADD(KP1_961570560, T1t, T1s);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_961570560, T1r, T18);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_961570560, T1r, T18);
    }
}

template <>
struct r2cb_traits<32, 5>
{
    static constexpr long_t flops           = 231;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 59;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 5 -name
 * r2cb -standalone */

/*
 * This function contains 152 FP additions, 79 FP multiplications,
 * (or, 73 additions, 0 multiplications, 79 fused multiply/add),
 * 136 stack variables, 14 constants, and 59 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 5>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ts, Td, TQ, T11, T1N, T23, T22, T24, T13, Tt, T14, T12;
        {
            SIMD_FLOAT T1E, T2e, T1D, T2d, T1d, T5, Tc, T1e, T2g, T2o, T1V, TD,
                T26, T1M, T1u;
            SIMD_FLOAT T1i, T17, TA, T1k, T1T, T2j, T1P, TG, TX, T1n, TK, T1W,
                T2l, T20, TN;
            SIMD_FLOAT T1O, T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1G, Tg, T1J,
                Tn, T1K;
            SIMD_FLOAT Tj, Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3, T25,
                T1F, T2n;
            SIMD_FLOAT T2f, TZ, TH, T2i, T1X, T1f, T1t;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T9  = Cr[WS(cs, 4)];
            Ta  = Cr[WS(cs, 12)];
            Te  = Ci[WS(cs, 2)];
            Tf  = Ci[WS(cs, 14)];
            Tl  = Cr[WS(cs, 2)];
            Tm  = Cr[WS(cs, 14)];
            Th  = Cr[WS(cs, 10)];
            Ti  = Cr[WS(cs, 6)];
            To  = Ci[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T1E = T6 - T7;
            T8  = T6 + T7;
            T2e = T9 + Ta;
            Tb  = T9 - Ta;
            T1G = Te - Tf;
            Tg  = Te + Tf;
            T1J = Tl + Tm;
            Tn  = Tl - Tm;
            T1K = Th + Ti;
            Tj  = Th - Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            Tp  = Ci[WS(cs, 6)];
            Tc  = T8 - Tb;
            T1e = T8 + Tb;
            {
                SIMD_FLOAT T1R, Tw, TE, T1Y, TT, T1Z, Tz, T1S, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1L, T1h, Tk, TS, Tx, T1H, Tq, Ty, TU, TV, Tu, Tv,
                    T1I, T1g, Tr;
                SIMD_FLOAT TB, TC;
                Tu  = Ci[WS(cs, 1)];
                Tv  = Ci[WS(cs, 15)];
                TR  = Cr[WS(cs, 1)];
                T1L = T1J - T1K;
                T2g = T1J + T1K;
                T1h = Tg - Tj;
                Tk  = Tg + Tj;
                TS  = Cr[WS(cs, 15)];
                Tx  = Cr[WS(cs, 9)];
                T1H = To - Tp;
                Tq  = To + Tp;
                Ty  = Cr[WS(cs, 7)];
                TU  = Ci[WS(cs, 9)];
                T1R = Tu - Tv;
                Tw  = Tu + Tv;
                TV  = Ci[WS(cs, 7)];
                TB  = Ci[WS(cs, 5)];
                TC  = Ci[WS(cs, 11)];
                TE  = Cr[WS(cs, 5)];
                T1Y = TR + TS;
                TT  = TR - TS;
                T1I = T1G - T1H;
                T2o = T1H + T1G;
                T1g = Tn + Tq;
                Tr  = Tn - Tq;
                T1Z = Tx + Ty;
                Tz  = Tx - Ty;
                T1S = TU - TV;
                TW  = TU + TV;
                T1V = TB - TC;
                TD  = TB + TC;
                TF  = Cr[WS(cs, 11)];
                TI  = Ci[WS(cs, 3)];
                T26 = T1I - T1L;
                T1M = T1I + T1L;
                TJ  = Ci[WS(cs, 13)];
                T1u = SIMD_FNMADD(KP414213562, T1g, T1h);
                T1i = SIMD_FMADD(KP414213562, T1h, T1g);
                Ts  = SIMD_FMADD(KP414213562, Tr, Tk);
                T17 = SIMD_FNMADD(KP414213562, Tk, Tr);
                TL  = Cr[WS(cs, 3)];
                TM  = Cr[WS(cs, 13)];
                TA  = Tw + Tz;
                T1k = Tw - Tz;
                T1T = T1R - T1S;
                T2j = T1R + T1S;
                T1P = TE + TF;
                TG  = TE - TF;
                TX  = TT - TW;
                T1n = TT + TW;
                TK  = TI + TJ;
                T1W = TJ - TI;
                T2l = T1Z + T1Y;
                T20 = T1Y - T1Z;
                TN  = TL - TM;
                T1O = TL + TM;
            }
            T25 = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T1F = SIMD_FMADD(KP2_000000000, T1E, T1D);
            T2n = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T2f = SIMD_FMADD(KP2_000000000, T2e, T2d);
            TZ  = TD - TG;
            TH  = TD + TG;
            T2i = T1V + T1W;
            T1X = T1V - T1W;
            T1f = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T1t = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            {
                SIMD_FLOAT T15, T21, T1z, T1U, T1b, T1p, T1x, T1m, T16, T1w,
                    T19, T1A, T1c, T1j, T1r;
                SIMD_FLOAT T27, T2p, T29, T2r, T2t, T28, T1o, TP, T1l, T10, T2b,
                    T2s, T2q, T2h, T2k;
                SIMD_FLOAT T2m, T1Q, TO, TY, T2u, T2a, T1v, T18, T2c, T1q, T1s,
                    T1y, T1a;
                T15            = SIMD_FNMADD(KP1_414213562, Tc, T5);
                Td             = SIMD_FMADD(KP1_414213562, Tc, T5);
                T2m            = T2g - T2l - (T1P + T1O);
                T2q            = T2l - (T1P + T1O);
                T1Q            = T1O - T1P;
                TO             = TK + TN;
                TY             = TN - TK;
                T27            = SIMD_FMADD(KP1_414213562, T26, T25);
                T2h            = SIMD_FNMADD(KP2_000000000, T2g, T2f);
                T2p            = SIMD_FMADD(KP2_000000000, T2o, T2n);
                T21            = T1X + T20;
                T29            = T20 - T1X;
                T2r            = T2j - T2i;
                T2k            = T2i + T2j;
                T1z            = SIMD_FMADD(KP1_847759065, T1u, T1t);
                R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T2m, T2f);
                T2t            = SIMD_FMADD(KP707106781, T2q, T2o);
                T1U            = T1Q + T1T;
                T28            = T1T - T1Q;
                T1o            = TH + TO;
                TP             = TH - TO;
                T1l            = TZ + TY;
                T10            = TY - TZ;
                T1b            = SIMD_FNMADD(KP1_847759065, T17, T15);
                T2b            = SIMD_FMADD(KP765366864, T26, T29);
                T2s            = T2q + T2r;
                R0[WS(rs, 19)] = SIMD_FMADD(KP2_000000000, T2k, T2h);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, T2k, T2h);
                T2u            = SIMD_FNMADD(KP707106781, T2r, T2t);
                T2a            = SIMD_FMADD(KP414213562, T29, T28);
                T1v            = SIMD_FNMADD(KP707106781, T1o, T1n);
                T1p            = SIMD_FMADD(KP707106781, T1o, T1n);
                TQ             = SIMD_FNMADD(KP707106781, TP, TA);
                T18            = SIMD_FMADD(KP707106781, TP, TA);
                T1x            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1m            = SIMD_FMADD(KP707106781, T1l, T1k);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T16            = SIMD_FMADD(KP707106781, T10, TX);
                T2c            = SIMD_FNMADD(KP414213562, T28, T2b);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_414213562, T2s, T2p);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_414213562, T2s, T2p);
                R0[WS(rs, 15)] = SIMD_FNMADD(KP2_000000000, T2u, T2n);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T2a, T27);
                T1w            = SIMD_FMADD(KP899976223, T1v, T1u);
                T19            = SIMD_FMADD(KP211164242, T18, T17);
                T1A            = SIMD_FMADD(KP668178637, T1v, T1x);
                T1c            = SIMD_FMADD(KP198912367, T16, T18);
                T1j            = SIMD_FNMADD(KP1_847759065, T1i, T1f);
                T1r            = SIMD_FMADD(KP1_847759065, T1i, T1f);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_847759065, T2c, T25);
                T1q            = SIMD_FNMADD(KP198912367, T1p, T1m);
                T1s            = SIMD_FMADD(KP198912367, T1m, T1p);
                T1y            = SIMD_FNMADD(KP601344886, T1x, T1w);
                T1a            = SIMD_FNMADD(KP941979402, T19, T16);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_662939224, T1A, T1z);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_662939224, T1A, T1z);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_961570560, T1c, T1b);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_961570560, T1c, T1b);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_961570560, T1s, T1r);
                R0[WS(rs, 26)] = SIMD_FMADD(KP1_961570560, T1s, T1r);
                R0[WS(rs, 18)] = SIMD_FMADD(KP1_961570560, T1q, T1j);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_961570560, T1q, T1j);
                T1N            = SIMD_FNMADD(KP1_414213562, T1M, T1F);
                T23            = SIMD_FMADD(KP1_414213562, T1M, T1F);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP1_847759065, T1y, T1t);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP1_961570560, T1a, T15);
                T22            = SIMD_FNMADD(KP414213562, T21, T1U);
                T24            = SIMD_FMADD(KP414213562, T1U, T21);
            }
        }
        T13            = SIMD_FMADD(KP1_847759065, Ts, Td);
        Tt             = SIMD_FNMADD(KP1_847759065, Ts, Td);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_847759065, T24, T23);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_847759065, T22, T1N);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
        T14            = SIMD_FMADD(KP668178637, TQ, T11);
        T12            = SIMD_FNMADD(KP668178637, T11, TQ);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_662939224, T14, T13);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_662939224, T14, T13);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_662939224, T12, Tt);
        R0[0]          = SIMD_FNMADD(KP1_662939224, T12, Tt);
    }
}

template <>
struct r2cb_traits<32, 6>
{
    static constexpr long_t flops           = 229;
    static constexpr long_t operations      = 151;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 6 -name
 * r2cb -standalone */

/*
 * This function contains 151 FP additions, 78 FP multiplications,
 * (or, 73 additions, 0 multiplications, 78 fused multiply/add),
 * 136 stack variables, 14 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 6>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1I, T1d, T1H, T1K, T1L, TZ, T13, T1G, T12, T14, T1J, T1N,
            T1M, T1O;
        {
            SIMD_FLOAT T8, T2e, T1P, T17, T2d, T5, T1c, T1Q, T2g, T2r, T1s, Tj,
                T26, T1U, T1k;
            SIMD_FLOAT TD, TY, T1Z, T1o, T2i, TL, T1t, TR, T1z, T1W, T2l, Tg,
                Tm, T1q, TO;
            SIMD_FLOAT T1p, T4, T16, T1, T2, T6, T7, T19, T1a, Tz, T1e, Tr, T1i,
                Ty, T1h;
            SIMD_FLOAT Tu, TA, Tp, Tq, Tw, Tx, Ts, Tt, T18, T1b, T15, T3, T9,
                TX, T2q;
            SIMD_FLOAT T2f, T1u, T1B, T1R, T25;
            T4  = Cr[WS(cs, 8)];
            T16 = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T19 = Cr[WS(cs, 4)];
            T1a = Cr[WS(cs, 12)];
            Tp  = Ci[WS(cs, 2)];
            Tq  = Ci[WS(cs, 14)];
            Tw  = Cr[WS(cs, 2)];
            Tx  = Cr[WS(cs, 14)];
            Ts  = Ci[WS(cs, 10)];
            Tt  = Ci[WS(cs, 6)];
            Tz  = Cr[WS(cs, 10)];
            T15 = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 - T7;
            T18 = T6 + T7;
            T2e = T19 + T1a;
            T1b = T19 - T1a;
            T1e = Tp + Tq;
            Tr  = Tp - Tq;
            T1i = Tw - Tx;
            Ty  = Tw + Tx;
            T1h = Ts + Tt;
            Tu  = Ts - Tt;
            T1P = SIMD_FNMADD(KP2_000000000, T16, T15);
            T17 = SIMD_FMADD(KP2_000000000, T16, T15);
            T2d = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            TA  = Cr[WS(cs, 6)];
            T1c = T18 + T1b;
            T1Q = T1b - T18;
            {
                SIMD_FLOAT T1x, Tc, TP, T1m, TH, T1n, Tf, T1y, TK, TQ, Tk, Tl,
                    TM, TN, TF;
                SIMD_FLOAT T1T, T1j, Tv, TG, Td, T1f, TB, Te, TI, TJ, Ta, Tb,
                    T1S, T1g, TC;
                SIMD_FLOAT Th, Ti;
                Ta  = Cr[WS(cs, 1)];
                Tb  = Cr[WS(cs, 15)];
                TF  = Ci[WS(cs, 1)];
                T1T = T1i - T1h;
                T1j = T1h + T1i;
                Tv  = Tr - Tu;
                T2g = Tr + Tu;
                TG  = Ci[WS(cs, 15)];
                Td  = Cr[WS(cs, 9)];
                T1f = Tz - TA;
                TB  = Tz + TA;
                Te  = Cr[WS(cs, 7)];
                TI  = Ci[WS(cs, 9)];
                T1x = Ta - Tb;
                Tc  = Ta + Tb;
                TJ  = Ci[WS(cs, 7)];
                Th  = Ci[WS(cs, 5)];
                Ti  = Ci[WS(cs, 11)];
                TP  = Cr[WS(cs, 5)];
                T1m = TF + TG;
                TH  = TF - TG;
                T1S = T1e + T1f;
                T1g = T1e - T1f;
                TC  = Ty - TB;
                T2r = Ty + TB;
                T1n = Td - Te;
                Tf  = Td + Te;
                T1y = TI + TJ;
                TK  = TI - TJ;
                T1s = Th + Ti;
                Tj  = Th - Ti;
                TQ  = Cr[WS(cs, 11)];
                Tk  = Ci[WS(cs, 13)];
                T26 = SIMD_FNMADD(KP414213562, T1S, T1T);
                T1U = SIMD_FMADD(KP414213562, T1T, T1S);
                T1I = SIMD_FMADD(KP414213562, T1g, T1j);
                T1k = SIMD_FNMADD(KP414213562, T1j, T1g);
                TD  = Tv - TC;
                TY  = Tv + TC;
                Tl  = Ci[WS(cs, 3)];
                TM  = Cr[WS(cs, 3)];
                TN  = Cr[WS(cs, 13)];
                T1Z = T1n + T1m;
                T1o = T1m - T1n;
                T2i = TH + TK;
                TL  = TH - TK;
                T1t = TP - TQ;
                TR  = TP + TQ;
                T1z = T1x + T1y;
                T1W = T1x - T1y;
                T2l = Tc + Tf;
                Tg  = Tc - Tf;
                Tm  = Tk - Tl;
                T1q = Tk + Tl;
                TO  = TM + TN;
                T1p = TM - TN;
            }
            T9  = SIMD_FNMADD(KP2_000000000, T8, T5);
            TX  = SIMD_FMADD(KP2_000000000, T8, T5);
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T1u = T1s - T1t;
            T1B = T1s + T1t;
            T1R = SIMD_FNMADD(KP1_414213562, T1Q, T1P);
            T25 = SIMD_FMADD(KP1_414213562, T1Q, T1P);
            {
                SIMD_FLOAT T2m, TV, T2h, T2s, T27, T1l, To, T11, T2k, T2t, T1v,
                    T1X, T1C, T20, T2o;
                SIMD_FLOAT T10, TT, Tn, T2j, T1r, T1A, T2u, TS, T24, T2c, T1Y,
                    T29, T1w, T28, T21;
                SIMD_FLOAT T1D, T2p, TW, T1V, TU, T2n, TE, T22, T23, T2b, T2a,
                    T1F, T1E;
                T1d            = SIMD_FNMADD(KP1_414213562, T1c, T17);
                T1H            = SIMD_FMADD(KP1_414213562, T1c, T17);
                Tn             = Tj - Tm;
                T2j            = Tj + Tm;
                T1r            = T1p - T1q;
                T1A            = T1q + T1p;
                T2u            = T2r - (TO + TR) - T2l;
                T2m            = T2l - (TO + TR);
                TS             = TO - TR;
                TV             = SIMD_FMADD(KP1_414213562, TD, T9);
                T2h            = SIMD_FMADD(KP2_000000000, T2g, T2f);
                T2s            = SIMD_FNMADD(KP2_000000000, T2r, T2q);
                T27            = SIMD_FNMADD(KP1_847759065, T26, T25);
                T1l            = SIMD_FMADD(KP1_847759065, T1k, T1d);
                To             = Tg - Tn;
                T11            = Tg + Tn;
                T2k            = T2i - T2j;
                T2t            = T2j + T2i;
                T1v            = T1r + T1u;
                T1X            = T1r - T1u;
                T1C            = T1A + T1B;
                T20            = T1B - T1A;
                R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T2u, T2q);
                T2o            = SIMD_FMADD(KP707106781, T2m, T2g);
                T10            = TL + TS;
                TT             = TL - TS;
                TE             = SIMD_FMADD(KP765366864, TD, To);
                R0[WS(rs, 18)] = SIMD_FMADD(KP2_000000000, T2t, T2s);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP2_000000000, T2t, T2s);
                T2n            = T2k + T2m;
                T1Y            = SIMD_FNMADD(KP707106781, T1X, T1W);
                T29            = SIMD_FMADD(KP707106781, T1X, T1W);
                T1w            = SIMD_FNMADD(KP707106781, T1v, T1o);
                T1K            = SIMD_FMADD(KP707106781, T1v, T1o);
                T28            = SIMD_FMADD(KP707106781, T20, T1Z);
                T21            = SIMD_FNMADD(KP707106781, T20, T1Z);
                T1L            = SIMD_FMADD(KP707106781, T1C, T1z);
                T1D            = SIMD_FNMADD(KP707106781, T1C, T1z);
                T2p            = SIMD_FNMADD(KP707106781, T2k, T2o);
                TW             = SIMD_FMADD(KP414213562, To, TT);
                T1V            = SIMD_FMADD(KP1_847759065, T1U, T1R);
                TU             = SIMD_FNMADD(KP414213562, TT, TE);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                T22            = SIMD_FMADD(KP668178637, T21, T1Y);
                T23            = SIMD_FNMADD(KP668178637, T1Y, T21);
                T2b            = SIMD_FMADD(KP211164242, T28, T26);
                T2a            = SIMD_FMADD(KP198912367, T29, T28);
                T1F            = SIMD_FMADD(KP899976223, T1D, T1k);
                T1E            = SIMD_FMADD(KP668178637, T1D, T1w);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP2_000000000, T2p, T2f);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, TW, TV);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_847759065, TW, TV);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP1_847759065, TU, T9);
                TZ             = SIMD_FNMADD(KP1_414213562, TY, TX);
                T13            = SIMD_FMADD(KP1_414213562, TY, TX);
                T24            = SIMD_FNMADD(KP899976223, T23, T1U);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_662939224, T22, T1V);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_662939224, T22, T1V);
                T2c            = SIMD_FNMADD(KP941979402, T2b, T29);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_961570560, T2a, T27);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_961570560, T2a, T27);
                T1G            = SIMD_FNMADD(KP601344886, T1w, T1F);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_662939224, T1E, T1l);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_662939224, T1E, T1l);
                T12            = SIMD_FNMADD(KP414213562, T11, T10);
                T14            = SIMD_FMADD(KP414213562, T10, T11);
                R0[WS(rs, 15)] = SIMD_FNMADD(KP1_847759065, T24, T1R);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP1_961570560, T2c, T25);
            }
        }
        R0[WS(rs, 13)] = SIMD_FNMADD(KP1_847759065, T1G, T1d);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_847759065, T12, TZ);
        R0[0]          = SIMD_FNMADD(KP1_847759065, T12, TZ);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_847759065, T14, T13);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_847759065, T14, T13);
        T1J            = SIMD_FNMADD(KP1_847759065, T1I, T1H);
        T1N            = SIMD_FMADD(KP1_847759065, T1I, T1H);
        T1M            = SIMD_FNMADD(KP198912367, T1L, T1K);
        T1O            = SIMD_FMADD(KP198912367, T1K, T1L);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_961570560, T1O, T1N);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_961570560, T1O, T1N);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_961570560, T1M, T1J);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_961570560, T1M, T1J);
    }
}

template <>
struct r2cb_traits<32, 7>
{
    static constexpr long_t flops           = 227;
    static constexpr long_t operations      = 150;
    static constexpr long_t memory_accesses = 57;
    static constexpr long_t stack_vars      = 138;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 7 -name
 * r2cb -standalone */

/*
 * This function contains 150 FP additions, 77 FP multiplications,
 * (or, 73 additions, 0 multiplications, 77 fused multiply/add),
 * 138 stack variables, 15 constants, and 57 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 7>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1u, T15, T1f, T1t, TQ, T11, T1a, T1q, T1z, T1A, T1x, T13,
            Tt, T12, T14;
        SIMD_FLOAT T1y;
        {
            SIMD_FLOAT T2e, T1E, T1D, T2d, T1d, T5, Tc, T1e, T2o, T2g, T1P, TD,
                T26, T1M, T1l;
            SIMD_FLOAT Ts, T16, T1m, TA, T2j, T1T, T1V, TG, T1g, TX, T20, T2l,
                T1W, TK, T1O;
            SIMD_FLOAT TN, T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1J, Tg, T1G,
                Tn, T1H;
            SIMD_FLOAT Tj, Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3, T25,
                T1F, T2f;
            SIMD_FLOAT T2n, TY, TH, Td, T1b, T19, T1i, T1w, T1o, T1v, T1r, T1c,
                T18, T1s, T1p;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            Te  = Cr[WS(cs, 2)];
            Tf  = Cr[WS(cs, 14)];
            Tl  = Ci[WS(cs, 2)];
            Tm  = Ci[WS(cs, 14)];
            Th  = Ci[WS(cs, 10)];
            Ti  = Ci[WS(cs, 6)];
            To  = Cr[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T2e = T6 + T7;
            T8  = T6 - T7;
            T1E = T9 - Ta;
            Tb  = T9 + Ta;
            T1J = Te + Tf;
            Tg  = Te - Tf;
            T1G = Tl - Tm;
            Tn  = Tl + Tm;
            T1H = Th - Ti;
            Tj  = Th + Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Cr[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = T8 - Tb;
            {
                SIMD_FLOAT T1R, Tw, TE, T1Y, TT, T1Z, Tz, T1S, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1I, T1j, Tk, TS, Tx, T1K, Tq, Ty, TU, TV, Tu, Tv,
                    T1L, T1k, Tr;
                SIMD_FLOAT TB, TC;
                Tu  = Ci[WS(cs, 1)];
                Tv  = Ci[WS(cs, 15)];
                TR  = Cr[WS(cs, 1)];
                T1I = T1G - T1H;
                T2o = T1H + T1G;
                T1j = Tg - Tj;
                Tk  = Tg + Tj;
                TS  = Cr[WS(cs, 15)];
                Tx  = Cr[WS(cs, 9)];
                T1K = To + Tp;
                Tq  = To - Tp;
                Ty  = Cr[WS(cs, 7)];
                TU  = Ci[WS(cs, 9)];
                T1R = Tu - Tv;
                Tw  = Tu + Tv;
                TV  = Ci[WS(cs, 7)];
                TB  = Cr[WS(cs, 3)];
                TC  = Cr[WS(cs, 13)];
                TE  = Ci[WS(cs, 3)];
                T1Y = TR + TS;
                TT  = TR - TS;
                T1L = T1J - T1K;
                T2g = T1J + T1K;
                T1k = Tn + Tq;
                Tr  = Tn - Tq;
                T1Z = Tx + Ty;
                Tz  = Tx - Ty;
                T1S = TU - TV;
                TW  = TU + TV;
                T1P = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 13)];
                TI  = Ci[WS(cs, 5)];
                T26 = T1I + T1L;
                T1M = T1I - T1L;
                T1l = SIMD_FNMADD(KP414213562, T1k, T1j);
                T1u = SIMD_FMADD(KP414213562, T1j, T1k);
                Ts  = SIMD_FMADD(KP414213562, Tr, Tk);
                T16 = SIMD_FNMADD(KP414213562, Tk, Tr);
                TJ  = Ci[WS(cs, 11)];
                TL  = Cr[WS(cs, 5)];
                TM  = Cr[WS(cs, 11)];
                T1m = Tw + Tz;
                TA  = Tw - Tz;
                T2j = T1S + T1R;
                T1T = T1R - T1S;
                T1V = TF - TE;
                TG  = TE + TF;
                T1g = TT - TW;
                TX  = TT + TW;
                T20 = T1Y - T1Z;
                T2l = T1Y + T1Z;
                T1W = TI - TJ;
                TK  = TI + TJ;
                T1O = TL + TM;
                TN  = TL - TM;
            }
            T25 = SIMD_FMADD(KP2_000000000, T1E, T1D);
            T1F = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T2f = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T2n = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            TY  = TD + TG;
            TH  = TD - TG;
            {
                SIMD_FLOAT T1N, T2p, T27, T29, T1U, T1h, TP, T1n, T10, T2b, T23,
                    T2s, T2u, T2a, T22;
                SIMD_FLOAT T1X, T2i, T2m, T2r, T1Q, TZ, TO, T2h, T28, T21, T2q,
                    T2k, T2t, T17, T2c;
                SIMD_FLOAT T24;
                Td             = SIMD_FMADD(KP1_414213562, Tc, T5);
                T15            = SIMD_FNMADD(KP1_414213562, Tc, T5);
                T1X            = T1V - T1W;
                T2i            = T1V + T1W;
                T2m            = T2g - T2l - (T1P + T1O);
                T2r            = T2l - (T1P + T1O);
                T1Q            = T1O - T1P;
                TZ             = TK + TN;
                TO             = TK - TN;
                T1N            = SIMD_FMADD(KP1_414213562, T1M, T1F);
                T2h            = SIMD_FNMADD(KP2_000000000, T2g, T2f);
                T2p            = SIMD_FMADD(KP2_000000000, T2o, T2n);
                T27            = SIMD_FMADD(KP1_414213562, T26, T25);
                T1b            = SIMD_FMADD(KP1_847759065, T16, T15);
                T28            = T20 - T1X;
                T21            = T1X + T20;
                T2q            = T2j - T2i;
                T2k            = T2i + T2j;
                R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, T2m, T2f);
                T2t            = SIMD_FMADD(KP707106781, T2r, T2o);
                T29            = T1T - T1Q;
                T1U            = T1Q + T1T;
                T1h            = TH - TO;
                TP             = TH + TO;
                T1n            = TZ - TY;
                T10            = TY + TZ;
                T2b            = SIMD_FMADD(KP541196100, T28, T26);
                T23            = SIMD_FMADD(KP765366864, T1M, T21);
                T2s            = T2q + T2r;
                R0[WS(rs, 17)] = SIMD_FMADD(KP2_000000000, T2k, T2h);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP2_000000000, T2k, T2h);
                T2u            = SIMD_FNMADD(KP707106781, T2q, T2t);
                T2a            = SIMD_FMADD(KP414213562, T29, T28);
                T22            = SIMD_FMADD(KP414213562, T21, T1U);
                T1f            = SIMD_FMADD(KP1_414213562, T1e, T1d);
                T1t            = SIMD_FNMADD(KP1_414213562, T1e, T1d);
                TQ             = SIMD_FMADD(KP707106781, TP, TA);
                T19            = SIMD_FNMADD(KP707106781, TP, TA);
                T1i            = SIMD_FMADD(KP707106781, T1h, T1g);
                T1w            = SIMD_FNMADD(KP707106781, T1h, T1g);
                T11            = SIMD_FMADD(KP707106781, T10, TX);
                T17            = SIMD_FNMADD(KP707106781, T10, TX);
                T2c            = SIMD_FNMADD(KP765366864, T2b, T29);
                T24            = SIMD_FNMADD(KP414213562, T1U, T23);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_414213562, T2s, T2p);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_414213562, T2s, T2p);
                T1o            = SIMD_FMADD(KP707106781, T1n, T1m);
                T1v            = SIMD_FNMADD(KP707106781, T1n, T1m);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP2_000000000, T2u, T2n);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_847759065, T22, T1N);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
                T1r            = SIMD_FNMADD(KP1_847759065, T1l, T1f);
                T1c            = SIMD_FMADD(KP668178637, T17, T19);
                T18            = SIMD_FMADD(KP899976223, T17, T16);
                R0[WS(rs, 15)] = SIMD_FMADD(KP1_847759065, T2c, T25);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP1_847759065, T24, T1F);
            }
            T1s            = SIMD_FMADD(KP198912367, T1i, T1o);
            T1p            = SIMD_FMADD(KP211164242, T1o, T1l);
            R0[WS(rs, 20)] = SIMD_FMADD(KP1_662939224, T1c, T1b);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_662939224, T1c, T1b);
            T1a            = SIMD_FNMADD(KP601344886, T19, T18);
            R0[WS(rs, 18)] = SIMD_FMADD(KP1_961570560, T1s, T1r);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_961570560, T1s, T1r);
            T1q            = SIMD_FNMADD(KP941979402, T1p, T1i);
            T1z            = SIMD_FMADD(KP1_847759065, T1u, T1t);
            T1A            = SIMD_FMADD(KP668178637, T1v, T1w);
            T1x            = SIMD_FNMADD(KP668178637, T1w, T1v);
            T13            = SIMD_FMADD(KP1_847759065, Ts, Td);
            Tt             = SIMD_FNMADD(KP1_847759065, Ts, Td);
        }
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_847759065, T1a, T15);
        T12            = SIMD_FNMADD(KP198912367, T11, TQ);
        T14            = SIMD_FMADD(KP198912367, TQ, T11);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_961570560, T1q, T1f);
        R0[WS(rs, 22)] = SIMD_FMADD(KP1_662939224, T1A, T1z);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_662939224, T1A, T1z);
        T1y            = SIMD_FNMADD(KP899976223, T1x, T1u);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_961570560, T14, T13);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_961570560, T14, T13);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_961570560, T12, Tt);
        R0[0]          = SIMD_FNMADD(KP1_961570560, T12, Tt);
        R0[WS(rs, 14)] = SIMD_FNMADD(KP1_847759065, T1y, T1t);
    }
}

template <>
struct r2cb_traits<32, 8>
{
    static constexpr long_t flops           = 225;
    static constexpr long_t operations      = 149;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 137;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 8 -name
 * r2cb -standalone */

/*
 * This function contains 149 FP additions, 76 FP multiplications,
 * (or, 73 additions, 0 multiplications, 76 fused multiply/add),
 * 137 stack variables, 15 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 8>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1K, TF, T1l, T1v, T1J, T1N, T1F, T1M, T1z, T1s, T1k, T1H,
            T1G, T1L, T1I;
        SIMD_FLOAT T1P, T1O, T1Q;
        {
            SIMD_FLOAT T8, T1S, T1t, Tz, T1R, T5, TE, T1u, Tg, T2o, T15, Tr,
                T2f, T23, T1m;
            SIMD_FLOAT TQ, T1y, To, T25, T1d, T1D, T26, T14, TW, T1A, T2l, T1X,
                Tu, T10, TZ;
            SIMD_FLOAT T27, T4, Ty, T1, T2, T6, T7, TB, TC, TM, TL, Tc, T1Z, TI,
                TJ;
            SIMD_FLOAT Tf, TN, Ta, Tb, TG, TH, Td, Te, TA, TD, Tx, T3, T9, T2n,
                T1e;
            SIMD_FLOAT T16, T1T, T2d;
            T4  = Cr[WS(cs, 8)];
            Ty  = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            TB  = Ci[WS(cs, 4)];
            TC  = Ci[WS(cs, 12)];
            Ta  = Cr[WS(cs, 2)];
            Tb  = Cr[WS(cs, 14)];
            TG  = Ci[WS(cs, 2)];
            TH  = Ci[WS(cs, 14)];
            Td  = Cr[WS(cs, 10)];
            Te  = Cr[WS(cs, 6)];
            TM  = Ci[WS(cs, 10)];
            Tx  = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 + T7;
            TA  = T6 - T7;
            T1S = TB - TC;
            TD  = TB + TC;
            TL  = Ta - Tb;
            Tc  = Ta + Tb;
            T1Z = TG - TH;
            TI  = TG + TH;
            TJ  = Td - Te;
            Tf  = Td + Te;
            T1t = SIMD_FNMADD(KP2_000000000, Ty, Tx);
            Tz  = SIMD_FMADD(KP2_000000000, Ty, Tx);
            T1R = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            TN  = Ci[WS(cs, 6)];
            TE  = TA + TD;
            T1u = TA - TD;
            {
                SIMD_FLOAT TS, Tk, T12, T1V, T1c, T19, Tn, T1W, TV, T13, Ts, Tt,
                    TX, TY, T1a;
                SIMD_FLOAT TK, T1x, T22, T1b, Tl, T20, TO, Tm, TT, TU, Ti, Tj,
                    T21, TP, T1w;
                SIMD_FLOAT Tp, Tq;
                Ti  = Ci[WS(cs, 1)];
                Tj  = Ci[WS(cs, 15)];
                T1a = Cr[WS(cs, 1)];
                TK  = TI - TJ;
                T1x = TJ + TI;
                T22 = Tc - Tf;
                Tg  = Tc + Tf;
                T1b = Cr[WS(cs, 15)];
                Tl  = Ci[WS(cs, 9)];
                T20 = TM - TN;
                TO  = TM + TN;
                Tm  = Ci[WS(cs, 7)];
                TT  = Cr[WS(cs, 9)];
                TS  = Ti + Tj;
                Tk  = Ti - Tj;
                TU  = Cr[WS(cs, 7)];
                Tp  = Ci[WS(cs, 5)];
                Tq  = Ci[WS(cs, 11)];
                T12 = Cr[WS(cs, 5)];
                T1V = T1a + T1b;
                T1c = T1a - T1b;
                T21 = T1Z - T20;
                T2o = T1Z + T20;
                TP  = TL + TO;
                T1w = TL - TO;
                T19 = Tl + Tm;
                Tn  = Tl - Tm;
                T1W = TT + TU;
                TV  = TT - TU;
                T15 = Tp + Tq;
                Tr  = Tp - Tq;
                T13 = Cr[WS(cs, 11)];
                Ts  = Ci[WS(cs, 13)];
                T2f = T22 + T21;
                T23 = T21 - T22;
                T1m = SIMD_FMADD(KP414213562, TK, TP);
                TQ  = SIMD_FNMADD(KP414213562, TP, TK);
                T1y = SIMD_FNMADD(KP414213562, T1x, T1w);
                T1K = SIMD_FMADD(KP414213562, T1w, T1x);
                Tt  = Ci[WS(cs, 3)];
                TX  = Cr[WS(cs, 3)];
                TY  = Cr[WS(cs, 13)];
                To  = Tk + Tn;
                T25 = Tk - Tn;
                T1d = T19 + T1c;
                T1D = T1c - T19;
                T26 = T12 + T13;
                T14 = T12 - T13;
                TW  = TS - TV;
                T1A = TS + TV;
                T2l = T1V + T1W;
                T1X = T1V - T1W;
                Tu  = Ts - Tt;
                T10 = Ts + Tt;
                TZ  = TX - TY;
                T27 = TX + TY;
            }
            T9  = SIMD_FMADD(KP2_000000000, T8, T5);
            T2n = SIMD_FNMADD(KP2_000000000, T8, T5);
            T1e = T15 + T14;
            T16 = T14 - T15;
            T1T = SIMD_FNMADD(KP2_000000000, T1S, T1R);
            T2d = SIMD_FMADD(KP2_000000000, T1S, T1R);
            {
                SIMD_FLOAT TR, T1E, T1B, T1n, T1p, T18, T1h, T1o, T2i, T2a, T2j,
                    T2t, T2b, T29, T2e;
                SIMD_FLOAT T17, T1g, T2h, T24, T2u, T2s, T2c, T2k, T1U, Tv, T2m,
                    T2p, T28, T1f, T11;
                SIMD_FLOAT Th, T2g, T1Y, T2r, Tw, T2q, T1r, T1q, T1j, T1i, T1C;
                TF             = SIMD_FNMADD(KP1_414213562, TE, Tz);
                T1l            = SIMD_FMADD(KP1_414213562, TE, Tz);
                T1U            = Tu - Tr;
                Tv             = Tr + Tu;
                T2m            = Tg - T2l - (T26 + T27);
                T2p            = T2l - (T26 + T27);
                T28            = T26 - T27;
                T1f            = T10 + TZ;
                T11            = TZ - T10;
                Th             = SIMD_FNMADD(KP2_000000000, Tg, T9);
                T2j            = SIMD_FMADD(KP1_414213562, T2f, T2d);
                T2t            = SIMD_FMADD(KP2_000000000, T2o, T2n);
                T2b            = SIMD_FMADD(KP1_414213562, T23, T1T);
                TR             = SIMD_FMADD(KP1_847759065, TQ, TF);
                T2g            = T1X - T1U;
                T1Y            = T1U + T1X;
                T2r            = To - Tv;
                Tw             = To + Tv;
                R0[WS(rs, 8)]  = SIMD_FMADD(KP2_000000000, T2m, T9);
                T2q            = SIMD_FMADD(KP707106781, T2p, T2o);
                T29            = T25 + T28;
                T2e            = T25 - T28;
                T1E            = T16 + T11;
                T17            = T11 - T16;
                T1B            = T1e - T1f;
                T1g            = T1e + T1f;
                T2h            = SIMD_FMADD(KP541196100, T2g, T2f);
                T24            = SIMD_FMADD(KP765366864, T23, T1Y);
                T2u            = T2r + T2p;
                R0[WS(rs, 16)] = SIMD_FMADD(KP2_000000000, Tw, Th);
                R0[0]          = SIMD_FNMADD(KP2_000000000, Tw, Th);
                T2s            = SIMD_FNMADD(KP707106781, T2r, T2q);
                T2c            = SIMD_FMADD(KP414213562, T1Y, T29);
                T2k            = SIMD_FMADD(KP414213562, T2e, T2g);
                T1n            = SIMD_FMADD(KP1_847759065, T1m, T1l);
                T1p            = SIMD_FMADD(KP707106781, T17, TW);
                T18            = SIMD_FNMADD(KP707106781, T17, TW);
                T1h            = SIMD_FNMADD(KP707106781, T1g, T1d);
                T1o            = SIMD_FMADD(KP707106781, T1g, T1d);
                T2i            = SIMD_FNMADD(KP765366864, T2h, T2e);
                T2a            = SIMD_FNMADD(KP414213562, T29, T24);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_414213562, T2u, T2t);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_414213562, T2u, T2t);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP2_000000000, T2s, T2n);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T2c, T2b);
                R0[WS(rs, 18)] = SIMD_FMADD(KP1_847759065, T2c, T2b);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T2k, T2j);
                R0[WS(rs, 22)] = SIMD_FMADD(KP1_847759065, T2k, T2j);
                T1v            = SIMD_FMADD(KP1_414213562, T1u, T1t);
                T1J            = SIMD_FNMADD(KP1_414213562, T1u, T1t);
                T1r            = SIMD_FMADD(KP211164242, T1o, T1m);
                T1q            = SIMD_FMADD(KP198912367, T1p, T1o);
                T1j            = SIMD_FMADD(KP899976223, T1h, TQ);
                T1i            = SIMD_FMADD(KP668178637, T1h, T18);
                R0[WS(rs, 14)] = SIMD_FMADD(KP1_847759065, T2i, T2d);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_847759065, T2a, T1T);
                T1N            = SIMD_FNMADD(KP707106781, T1B, T1A);
                T1C            = SIMD_FMADD(KP707106781, T1B, T1A);
                T1F            = SIMD_FMADD(KP707106781, T1E, T1D);
                T1M            = SIMD_FNMADD(KP707106781, T1E, T1D);
                T1z            = SIMD_FNMADD(KP1_847759065, T1y, T1v);
                T1s            = SIMD_FNMADD(KP941979402, T1r, T1p);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_961570560, T1q, T1n);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_961570560, T1q, T1n);
                T1k            = SIMD_FNMADD(KP601344886, T18, T1j);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_662939224, T1i, TR);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_662939224, T1i, TR);
                T1H            = SIMD_FMADD(KP211164242, T1C, T1y);
                T1G            = SIMD_FMADD(KP198912367, T1F, T1C);
                T1L            = SIMD_FMADD(KP1_847759065, T1K, T1J);
            }
        }
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_961570560, T1s, T1l);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_847759065, T1k, TF);
        T1I            = SIMD_FNMADD(KP941979402, T1H, T1F);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_961570560, T1G, T1z);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_961570560, T1G, T1z);
        T1P            = SIMD_FNMADD(KP668178637, T1M, T1N);
        T1O            = SIMD_FMADD(KP668178637, T1N, T1M);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_961570560, T1I, T1v);
        T1Q            = SIMD_FNMADD(KP899976223, T1P, T1K);
        R0[WS(rs, 21)] = SIMD_FMADD(KP1_662939224, T1O, T1L);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_662939224, T1O, T1L);
        R0[WS(rs, 13)] = SIMD_FNMADD(KP1_847759065, T1Q, T1J);
    }
}

template <>
struct r2cb_traits<32, 9>
{
    static constexpr long_t flops           = 222;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 55;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 9 -name
 * r2cb -standalone */

/*
 * This function contains 148 FP additions, 74 FP multiplications,
 * (or, 74 additions, 0 multiplications, 74 fused multiply/add),
 * 136 stack variables, 15 constants, and 55 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 9>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1u, Td, T15, Tt, T17, T1f, T1t, T1p, T1w, TQ, T19, T1x, T1j,
            T1r, T1q;
        SIMD_FLOAT T1b, T1a, T13, T12, T1v, T1s, T1c, T14, T1z, T1y, T1A;
        {
            SIMD_FLOAT T2e, T1E, T1D, T2d, T1d, T5, Tc, T1e, T2r, T2g, T1P, TD,
                T26, T1M, T16;
            SIMD_FLOAT Ts, T1i, TA, T1k, T2i, T1T, T1V, TG, TX, T1n, T2l, T20,
                TK, T1O, TN;
            SIMD_FLOAT T1W, T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1G, Tg, T1J,
                Tn, T1K;
            SIMD_FLOAT Tj, Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3, T2q,
                T2f, TZ;
            SIMD_FLOAT TH, T1F, T25;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            Te  = Ci[WS(cs, 2)];
            Tf  = Ci[WS(cs, 14)];
            Tl  = Cr[WS(cs, 2)];
            Tm  = Cr[WS(cs, 14)];
            Th  = Cr[WS(cs, 10)];
            Ti  = Cr[WS(cs, 6)];
            To  = Ci[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T2e = T6 + T7;
            T8  = T6 - T7;
            T1E = T9 - Ta;
            Tb  = T9 + Ta;
            T1G = Te - Tf;
            Tg  = Te + Tf;
            T1J = Tl + Tm;
            Tn  = Tl - Tm;
            T1K = Th + Ti;
            Tj  = Th - Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Ci[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = T8 - Tb;
            {
                SIMD_FLOAT T1R, Tw, TE, T1Y, TT, T1Z, Tz, T1S, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1L, Tk, T1h, TS, Tx, T1H, Tq, Ty, TU, TV, Tu, Tv,
                    T1I, Tr, T1g;
                SIMD_FLOAT TB, TC;
                Tu  = Ci[WS(cs, 1)];
                Tv  = Ci[WS(cs, 15)];
                TR  = Cr[WS(cs, 1)];
                T1L = T1J - T1K;
                T2r = T1K + T1J;
                Tk  = Tg - Tj;
                T1h = Tg + Tj;
                TS  = Cr[WS(cs, 15)];
                Tx  = Cr[WS(cs, 9)];
                T1H = To - Tp;
                Tq  = To + Tp;
                Ty  = Cr[WS(cs, 7)];
                TU  = Ci[WS(cs, 9)];
                T1R = Tu - Tv;
                Tw  = Tu + Tv;
                TV  = Ci[WS(cs, 7)];
                TB  = Cr[WS(cs, 3)];
                TC  = Cr[WS(cs, 13)];
                TE  = Ci[WS(cs, 3)];
                T1Y = TR + TS;
                TT  = TR - TS;
                T1I = T1G - T1H;
                T2g = T1G + T1H;
                Tr  = Tn + Tq;
                T1g = Tn - Tq;
                T1Z = Tx + Ty;
                Tz  = Tx - Ty;
                T1S = TU - TV;
                TW  = TU + TV;
                T1P = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 13)];
                TI  = Cr[WS(cs, 5)];
                T26 = T1L + T1I;
                T1M = T1I - T1L;
                T16 = SIMD_FMADD(KP414213562, Tk, Tr);
                Ts  = SIMD_FNMADD(KP414213562, Tr, Tk);
                T1i = SIMD_FNMADD(KP414213562, T1h, T1g);
                T1u = SIMD_FMADD(KP414213562, T1g, T1h);
                TJ  = Cr[WS(cs, 11)];
                TL  = Ci[WS(cs, 5)];
                TM  = Ci[WS(cs, 11)];
                TA  = Tw - Tz;
                T1k = Tw + Tz;
                T2i = T1S + T1R;
                T1T = T1R - T1S;
                T1V = TF - TE;
                TG  = TE + TF;
                TX  = TT + TW;
                T1n = TT - TW;
                T2l = T1Y + T1Z;
                T20 = T1Y - T1Z;
                TK  = TI - TJ;
                T1O = TI + TJ;
                TN  = TL + TM;
                T1W = TL - TM;
            }
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            TZ  = TD + TG;
            TH  = TD - TG;
            T1F = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T25 = SIMD_FMADD(KP2_000000000, T1E, T1D);
            {
                SIMD_FLOAT T2m, T27, T2h, T1N, T2o, T29, T1U, T21, T28, T2k,
                    T2t, TP, T1o, T10, T1l;
                SIMD_FLOAT T2s, T1Q, T1X, T2j, TO, TY, T24, T2a, T2b, T22, T23,
                    T2p, T2n, T1m, T18;
                SIMD_FLOAT T11, T2c;
                Td             = SIMD_FNMADD(KP1_414213562, Tc, T5);
                T15            = SIMD_FMADD(KP1_414213562, Tc, T5);
                T2s            = T2r - T2l - (T1O + T1P);
                T2m            = T2l - (T1O + T1P);
                T1Q            = T1O - T1P;
                T1X            = T1V - T1W;
                T2j            = T1W + T1V;
                TO             = TK - TN;
                TY             = TK + TN;
                T27            = SIMD_FMADD(KP1_414213562, T26, T25);
                T2h            = SIMD_FMADD(KP2_000000000, T2g, T2f);
                T1N            = SIMD_FMADD(KP1_414213562, T1M, T1F);
                Tt             = SIMD_FMADD(KP1_847759065, Ts, Td);
                R0[WS(rs, 7)]  = SIMD_FMADD(KP2_000000000, T2s, T2q);
                T2o            = SIMD_FMADD(KP707106781, T2m, T2g);
                T29            = T1T - T1Q;
                T1U            = T1Q + T1T;
                T21            = T1X + T20;
                T28            = T20 - T1X;
                T2k            = T2i - T2j;
                T2t            = T2j + T2i - T2r;
                TP             = TH - TO;
                T1o            = TO + TH;
                T10            = TY + TZ;
                T1l            = TY - TZ;
                T17            = SIMD_FMADD(KP1_847759065, T16, T15);
                T1f            = SIMD_FMADD(KP1_414213562, T1e, T1d);
                T1t            = SIMD_FNMADD(KP1_414213562, T1e, T1d);
                T2a            = SIMD_FMADD(KP414213562, T29, T28);
                T2b            = SIMD_FMADD(KP541196100, T28, T26);
                T22            = SIMD_FMADD(KP414213562, T21, T1U);
                T23            = SIMD_FMADD(KP765366864, T1M, T21);
                T2p            = SIMD_FNMADD(KP707106781, T2k, T2o);
                T2n            = T2k + T2m;
                R0[WS(rs, 15)] = SIMD_FMADD(KP2_000000000, T2t, T2q);
                T1p            = SIMD_FMADD(KP707106781, T1o, T1n);
                T1w            = SIMD_FNMADD(KP707106781, T1o, T1n);
                TQ             = SIMD_FNMADD(KP707106781, TP, TA);
                T19            = SIMD_FMADD(KP707106781, TP, TA);
                T1x            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1m            = SIMD_FMADD(KP707106781, T1l, T1k);
                T18            = SIMD_FMADD(KP707106781, T10, TX);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T1j            = SIMD_FNMADD(KP1_847759065, T1i, T1f);
                R0[WS(rs, 21)] = SIMD_FMADD(KP1_847759065, T2a, T27);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T2a, T27);
                T2c            = SIMD_FNMADD(KP765366864, T2b, T29);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_847759065, T22, T1N);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
                T24            = SIMD_FNMADD(KP414213562, T1U, T23);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP2_000000000, T2p, T2f);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                T1r            = SIMD_FMADD(KP211164242, T1m, T1i);
                T1q            = SIMD_FMADD(KP198912367, T1p, T1m);
                T1b            = SIMD_FMADD(KP211164242, T18, T16);
                T1a            = SIMD_FMADD(KP198912367, T19, T18);
                T13            = SIMD_FMADD(KP899976223, T11, Ts);
                T12            = SIMD_FMADD(KP668178637, T11, TQ);
                R0[WS(rs, 13)] = SIMD_FMADD(KP1_847759065, T2c, T25);
                T1v            = SIMD_FMADD(KP1_847759065, T1u, T1t);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_847759065, T24, T1F);
            }
        }
        T1s            = SIMD_FNMADD(KP941979402, T1r, T1p);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_961570560, T1q, T1j);
        R0[0]          = SIMD_FNMADD(KP1_961570560, T1q, T1j);
        T1c            = SIMD_FNMADD(KP941979402, T1b, T19);
        R0[WS(rs, 22)] = SIMD_FMADD(KP1_961570560, T1a, T17);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_961570560, T1a, T17);
        T14            = SIMD_FNMADD(KP601344886, TQ, T13);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_662939224, T12, Tt);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_662939224, T12, Tt);
        T1z            = SIMD_FNMADD(KP668178637, T1w, T1x);
        T1y            = SIMD_FMADD(KP668178637, T1x, T1w);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_961570560, T1s, T1f);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_961570560, T1c, T15);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_847759065, T14, Td);
        T1A            = SIMD_FNMADD(KP899976223, T1z, T1u);
        R0[WS(rs, 20)] = SIMD_FMADD(KP1_662939224, T1y, T1v);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_662939224, T1y, T1v);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_847759065, T1A, T1t);
    }
}

template <>
struct r2cb_traits<32, 10>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 147;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 134;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 10 -name
 * r2cb -standalone */

/*
 * This function contains 147 FP additions, 73 FP multiplications,
 * (or, 74 additions, 0 multiplications, 73 fused multiply/add),
 * 134 stack variables, 15 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 10>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1I, T1d, T1H, T25, T1R, T28, T1L, T29, T1K, T27, T24, T1E,
            T1G, T2b, T2a;
        SIMD_FLOAT T2c, T1J, T1M, T1N, T1O;
        {
            SIMD_FLOAT T8, T2e, T1P, T17, T2d, T5, T1c, T1Q, T2g, T2r, Tz, T26,
                T1U, T1v, To;
            SIMD_FLOAT TY, TL, T2i, T1g, T1Z, TR, T1y, T1W, T2l, Tw, TC, T1i,
                TO, T1h, T1m;
            SIMD_FLOAT T1A, T4, T16, T1, T2, T6, T7, T19, T1a, Tk, T1s, Tc, T1p,
                Tj, T1q;
            SIMD_FLOAT Tf, Tl, Ta, Tb, Th, Ti, Td, Te, T18, T1b, T15, T3, T2q,
                T2f, T9;
            SIMD_FLOAT TX;
            T4  = Cr[WS(cs, 8)];
            T16 = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T19 = Cr[WS(cs, 4)];
            T1a = Cr[WS(cs, 12)];
            Ta  = Ci[WS(cs, 2)];
            Tb  = Ci[WS(cs, 14)];
            Th  = Cr[WS(cs, 2)];
            Ti  = Cr[WS(cs, 14)];
            Td  = Ci[WS(cs, 10)];
            Te  = Ci[WS(cs, 6)];
            Tk  = Cr[WS(cs, 10)];
            T15 = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 - T7;
            T18 = T6 + T7;
            T2e = T19 + T1a;
            T1b = T19 - T1a;
            T1s = Ta + Tb;
            Tc  = Ta - Tb;
            T1p = Th - Ti;
            Tj  = Th + Ti;
            T1q = Td + Te;
            Tf  = Td - Te;
            T1P = SIMD_FMADD(KP2_000000000, T16, T15);
            T17 = SIMD_FNMADD(KP2_000000000, T16, T15);
            T2d = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            Tl  = Cr[WS(cs, 6)];
            T1c = T18 - T1b;
            T1Q = T18 + T1b;
            {
                SIMD_FLOAT T1e, Ts, TP, T1x, TH, T1w, Tv, T1f, TK, T1l, TQ, TA,
                    TB, TM, TN;
                SIMD_FLOAT TF, T1T, T1r, Tg, TG, Tt, T1t, Tm, Tu, TI, TJ, Tq,
                    Tr, T1S, T1u;
                SIMD_FLOAT Tn, Tx, Ty, T1k;
                Tq  = Cr[WS(cs, 1)];
                Tr  = Cr[WS(cs, 15)];
                TF  = Ci[WS(cs, 1)];
                T1T = T1q + T1p;
                T1r = T1p - T1q;
                Tg  = Tc - Tf;
                T2g = Tc + Tf;
                TG  = Ci[WS(cs, 15)];
                Tt  = Cr[WS(cs, 9)];
                T1t = Tk - Tl;
                Tm  = Tk + Tl;
                Tu  = Cr[WS(cs, 7)];
                TI  = Ci[WS(cs, 9)];
                T1e = Tq - Tr;
                Ts  = Tq + Tr;
                TJ  = Ci[WS(cs, 7)];
                Tx  = Ci[WS(cs, 13)];
                Ty  = Ci[WS(cs, 3)];
                TP  = Cr[WS(cs, 3)];
                T1x = TF + TG;
                TH  = TF - TG;
                T1S = T1s - T1t;
                T1u = T1s + T1t;
                Tn  = Tj - Tm;
                T2r = Tj + Tm;
                T1w = Tt - Tu;
                Tv  = Tt + Tu;
                T1f = TI + TJ;
                TK  = TI - TJ;
                T1l = Tx + Ty;
                Tz  = Tx - Ty;
                TQ  = Cr[WS(cs, 13)];
                TA  = Ci[WS(cs, 5)];
                T26 = SIMD_FMADD(KP414213562, T1S, T1T);
                T1U = SIMD_FNMADD(KP414213562, T1T, T1S);
                T1v = SIMD_FNMADD(KP414213562, T1u, T1r);
                T1I = SIMD_FMADD(KP414213562, T1r, T1u);
                To  = Tg + Tn;
                TY  = Tg - Tn;
                TB  = Ci[WS(cs, 11)];
                TM  = Cr[WS(cs, 5)];
                TN  = Cr[WS(cs, 11)];
                TL  = TH - TK;
                T2i = TH + TK;
                T1g = T1e - T1f;
                T1Z = T1e + T1f;
                T1k = TP - TQ;
                TR  = TP + TQ;
                T1y = T1w + T1x;
                T1W = T1x - T1w;
                T2l = Ts + Tv;
                Tw  = Ts - Tv;
                TC  = TA - TB;
                T1i = TA + TB;
                TO  = TM + TN;
                T1h = TM - TN;
                T1m = T1k - T1l;
                T1A = T1l + T1k;
            }
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T9  = SIMD_FMADD(KP2_000000000, T8, T5);
            TX  = SIMD_FNMADD(KP2_000000000, T8, T5);
            {
                SIMD_FLOAT TD, T2j, T1z, T1j, T2s, T2m, TS, TZ, T2h, Tp, T1V,
                    T11, TE, T2k, T2o;
                SIMD_FLOAT TT, T10, T13, TV, T2n, T21, T1C, T1Y, T1o, T2t, T20,
                    T1B, T1X, T1n, T2p;
                SIMD_FLOAT TU, T12, T14, TW, T23, T1D, T22, T1F;
                T1d            = SIMD_FNMADD(KP1_414213562, T1c, T17);
                T1H            = SIMD_FMADD(KP1_414213562, T1c, T17);
                T25            = SIMD_FMADD(KP1_414213562, T1Q, T1P);
                T1R            = SIMD_FNMADD(KP1_414213562, T1Q, T1P);
                TD             = Tz - TC;
                T2j            = Tz + TC;
                T1z            = T1i + T1h;
                T1j            = T1h - T1i;
                T2s            = T2r - (TO + TR) - T2l;
                T2m            = T2l - (TO + TR);
                TS             = TO - TR;
                TZ             = SIMD_FMADD(KP1_414213562, TY, TX);
                T2h            = SIMD_FMADD(KP2_000000000, T2g, T2f);
                Tp             = SIMD_FMADD(KP1_414213562, To, T9);
                T1V            = SIMD_FMADD(KP1_847759065, T1U, T1R);
                T11            = Tw + TD;
                TE             = Tw - TD;
                T2k            = T2i - T2j;
                T2t            = T2j + T2i - T2r;
                T20            = T1z + T1A;
                T1B            = T1z - T1A;
                T1X            = T1m - T1j;
                T1n            = T1j + T1m;
                R0[WS(rs, 6)]  = SIMD_FMADD(KP2_000000000, T2s, T2q);
                T2o            = SIMD_FMADD(KP707106781, T2m, T2g);
                TT             = TL - TS;
                T10            = TL + TS;
                T13            = SIMD_FMADD(KP765366864, TY, T11);
                TV             = SIMD_FMADD(KP541196100, TE, To);
                T2n            = T2k + T2m;
                R0[WS(rs, 14)] = SIMD_FMADD(KP2_000000000, T2t, T2q);
                T21            = SIMD_FNMADD(KP707106781, T20, T1Z);
                T28            = SIMD_FMADD(KP707106781, T20, T1Z);
                T1L            = SIMD_FNMADD(KP707106781, T1B, T1y);
                T1C            = SIMD_FMADD(KP707106781, T1B, T1y);
                T1Y            = SIMD_FNMADD(KP707106781, T1X, T1W);
                T29            = SIMD_FMADD(KP707106781, T1X, T1W);
                T1K            = SIMD_FNMADD(KP707106781, T1n, T1g);
                T1o            = SIMD_FMADD(KP707106781, T1n, T1g);
                T27            = SIMD_FMADD(KP1_847759065, T26, T25);
                T2p            = SIMD_FNMADD(KP707106781, T2k, T2o);
                TU             = SIMD_FMADD(KP414213562, TT, TE);
                T12            = SIMD_FMADD(KP414213562, T11, T10);
                T14            = SIMD_FNMADD(KP414213562, T10, T13);
                TW             = SIMD_FNMADD(KP765366864, TV, TT);
                R0[WS(rs, 18)] = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                T23            = SIMD_FMADD(KP899976223, T21, T1U);
                T1D            = SIMD_FMADD(KP211164242, T1C, T1v);
                T22            = SIMD_FMADD(KP668178637, T21, T1Y);
                T1F            = SIMD_FNMADD(KP211164242, T1o, T1v);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP2_000000000, T2p, T2f);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_847759065, TU, Tp);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, TU, Tp);
                R0[WS(rs, 16)] = SIMD_FMADD(KP1_847759065, T12, TZ);
                R0[0]          = SIMD_FNMADD(KP1_847759065, T12, TZ);
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_847759065, T14, TX);
                R0[WS(rs, 12)] = SIMD_FMADD(KP1_847759065, TW, T9);
                T24            = SIMD_FNMADD(KP601344886, T1Y, T23);
                T1E            = SIMD_FNMADD(KP941979402, T1D, T1o);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_662939224, T22, T1V);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_662939224, T22, T1V);
                T1G            = SIMD_FNMADD(KP941979402, T1F, T1C);
                T2b            = SIMD_FMADD(KP211164242, T28, T26);
            }
        }
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_847759065, T24, T1R);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_961570560, T1E, T1d);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_961570560, T1G, T1d);
        T2a            = SIMD_FMADD(KP198912367, T29, T28);
        T2c            = SIMD_FNMADD(KP941979402, T2b, T29);
        T1J            = SIMD_FMADD(KP1_847759065, T1I, T1H);
        T1M            = SIMD_FMADD(KP668178637, T1L, T1K);
        T1N            = SIMD_FNMADD(KP668178637, T1K, T1L);
        R0[WS(rs, 21)] = SIMD_FMADD(KP1_961570560, T2a, T27);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_961570560, T2a, T27);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_961570560, T2c, T25);
        T1O            = SIMD_FNMADD(KP899976223, T1N, T1I);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_662939224, T1M, T1J);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_662939224, T1M, T1J);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_847759065, T1O, T1H);
    }
}

template <>
struct r2cb_traits<32, 11>
{
    static constexpr long_t flops           = 218;
    static constexpr long_t operations      = 146;
    static constexpr long_t memory_accesses = 53;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 11 -name
 * r2cb -standalone */

/*
 * This function contains 146 FP additions, 72 FP multiplications,
 * (or, 74 additions, 0 multiplications, 72 fused multiply/add),
 * 136 stack variables, 15 constants, and 53 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 11>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1i, T1t, T1f, Td, T15, T1m, T1p, T1j, T1A, T1y, T1c, T14,
            T1q, T1r, T1s;
        {
            SIMD_FLOAT T2e, T1E, T1D, T2d, T1d, T5, Tc, T1e, T2r, T2g, T1V, TD,
                T27, T1M, T16;
            SIMD_FLOAT Ts, T1v, TA, T1n, TX, T1k, T1P, TG, T20, T2i, T1T, T2l,
                TK, T1W, TN;
            SIMD_FLOAT T1O, T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1J, Tg, T1G,
                Tn, T1H;
            SIMD_FLOAT Tj, Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3, T25,
                T1F, TZ;
            SIMD_FLOAT TH, T2f, T2q, T2s, T1X, T2m, T1Q, T2j, TO, TY, T1N, T2h;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            Te  = Ci[WS(cs, 2)];
            Tf  = Ci[WS(cs, 14)];
            Tl  = Cr[WS(cs, 2)];
            Tm  = Cr[WS(cs, 14)];
            Th  = Cr[WS(cs, 10)];
            Ti  = Cr[WS(cs, 6)];
            To  = Ci[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T2e = T6 + T7;
            T8  = T6 - T7;
            T1E = T9 - Ta;
            Tb  = T9 + Ta;
            T1J = Te - Tf;
            Tg  = Te + Tf;
            T1G = Tl + Tm;
            Tn  = Tl - Tm;
            T1H = Th + Ti;
            Tj  = Th - Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Ci[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = Tb - T8;
            {
                SIMD_FLOAT T1Y, Tw, TE, T1R, TT, T1S, Tz, T1Z, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1I, Tk, T1g, TS, Tx, T1K, Tq, Ty, TU, TV, Tu, Tv,
                    T1L, Tr, T1h;
                SIMD_FLOAT TB, TC;
                Tu  = Ci[WS(cs, 1)];
                Tv  = Ci[WS(cs, 15)];
                TR  = Cr[WS(cs, 1)];
                T1I = T1G - T1H;
                T2r = T1H + T1G;
                Tk  = Tg - Tj;
                T1g = Tg + Tj;
                TS  = Cr[WS(cs, 15)];
                Tx  = Cr[WS(cs, 9)];
                T1K = To - Tp;
                Tq  = To + Tp;
                Ty  = Cr[WS(cs, 7)];
                TU  = Ci[WS(cs, 9)];
                T1Y = Tu - Tv;
                Tw  = Tu + Tv;
                TV  = Ci[WS(cs, 7)];
                TB  = Cr[WS(cs, 3)];
                TC  = Cr[WS(cs, 13)];
                TE  = Ci[WS(cs, 3)];
                T1R = TR + TS;
                TT  = TR - TS;
                T1L = T1J - T1K;
                T2g = T1J + T1K;
                Tr  = Tn + Tq;
                T1h = Tn - Tq;
                T1S = Tx + Ty;
                Tz  = Tx - Ty;
                T1Z = TU - TV;
                TW  = TU + TV;
                T1V = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 13)];
                TI  = Cr[WS(cs, 5)];
                T27 = T1I - T1L;
                T1M = T1I + T1L;
                T16 = SIMD_FMADD(KP414213562, Tk, Tr);
                Ts  = SIMD_FNMADD(KP414213562, Tr, Tk);
                T1v = SIMD_FNMADD(KP414213562, T1g, T1h);
                T1i = SIMD_FMADD(KP414213562, T1h, T1g);
                TJ  = Cr[WS(cs, 11)];
                TL  = Ci[WS(cs, 5)];
                TM  = Ci[WS(cs, 11)];
                TA  = Tw - Tz;
                T1n = Tw + Tz;
                TX  = TT + TW;
                T1k = TT - TW;
                T1P = TF - TE;
                TG  = TE + TF;
                T20 = T1Y - T1Z;
                T2i = T1Z + T1Y;
                T1T = T1R - T1S;
                T2l = T1R + T1S;
                TK  = TI - TJ;
                T1W = TI + TJ;
                TN  = TL + TM;
                T1O = TL - TM;
            }
            T25 = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T1F = SIMD_FMADD(KP2_000000000, T1E, T1D);
            TZ  = TD + TG;
            TH  = TD - TG;
            T2f = SIMD_FNMADD(KP2_000000000, T2e, T2d);
            T2q = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T1t = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            T1f = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T2s = T2r - T2l - (T1W + T1V);
            T1X = T1V - T1W;
            T2m = T2l - (T1W + T1V);
            T1Q = T1O - T1P;
            T2j = T1O + T1P;
            TO  = TK - TN;
            TY  = TK + TN;
            Td  = SIMD_FNMADD(KP1_414213562, Tc, T5);
            T15 = SIMD_FMADD(KP1_414213562, Tc, T5);
            T1N = SIMD_FMADD(KP1_414213562, T1M, T1F);
            T2h = SIMD_FMADD(KP2_000000000, T2g, T2f);
            {
                SIMD_FLOAT Tt, T17, T1u, T19, TQ, T1w, T1z, T1x, T1b, T1a, T13,
                    T12, T21, T28, T2o;
                SIMD_FLOAT T1U, T26, T2k, T2t, TP, T1l, T10, T1o, T29, T2b, T22,
                    T23, T2p, T2n, T11;
                SIMD_FLOAT T18, T2a, T2c, T24;
                R0[WS(rs, 5)]  = SIMD_FMADD(KP2_000000000, T2s, T2q);
                T21            = T1X + T20;
                T28            = T20 - T1X;
                T2o            = SIMD_FMADD(KP707106781, T2m, T2g);
                T1U            = T1Q + T1T;
                T26            = T1T - T1Q;
                T2k            = T2i - T2j;
                T2t            = T2j + T2i - T2r;
                TP             = TH - TO;
                T1l            = TO + TH;
                T10            = TY + TZ;
                T1o            = TY - TZ;
                Tt             = SIMD_FMADD(KP1_847759065, Ts, Td);
                T17            = SIMD_FMADD(KP1_847759065, T16, T15);
                T29            = SIMD_FMADD(KP541196100, T28, T27);
                T2b            = SIMD_FNMADD(KP541196100, T26, T27);
                T22            = SIMD_FMADD(KP414213562, T21, T1U);
                T23            = SIMD_FMADD(KP541196100, T1U, T1M);
                T2p            = SIMD_FNMADD(KP707106781, T2k, T2o);
                T2n            = T2k + T2m;
                R0[WS(rs, 13)] = SIMD_FMADD(KP2_000000000, T2t, T2q);
                T1m            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1u            = SIMD_FMADD(KP707106781, T1l, T1k);
                T19            = SIMD_FMADD(KP707106781, TP, TA);
                TQ             = SIMD_FNMADD(KP707106781, TP, TA);
                T1w            = SIMD_FMADD(KP707106781, T1o, T1n);
                T1p            = SIMD_FNMADD(KP707106781, T1o, T1n);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T18            = SIMD_FMADD(KP707106781, T10, TX);
                T2a            = SIMD_FNMADD(KP765366864, T29, T26);
                T2c            = SIMD_FNMADD(KP765366864, T2b, T28);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_847759065, T22, T1N);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
                T24            = SIMD_FNMADD(KP765366864, T23, T21);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP2_000000000, T2p, T2f);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_414213562, T2n, T2h);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_414213562, T2n, T2h);
                T1z            = SIMD_FNMADD(KP211164242, T1u, T1v);
                T1x            = SIMD_FMADD(KP211164242, T1w, T1v);
                T1b            = SIMD_FMADD(KP211164242, T18, T16);
                T1a            = SIMD_FMADD(KP198912367, T19, T18);
                T13            = SIMD_FMADD(KP899976223, T11, Ts);
                T12            = SIMD_FMADD(KP668178637, T11, TQ);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_847759065, T2a, T25);
                R0[WS(rs, 15)] = SIMD_FMADD(KP1_847759065, T2c, T25);
                R0[WS(rs, 11)] = SIMD_FMADD(KP1_847759065, T24, T1F);
                T1j            = SIMD_FMADD(KP1_847759065, T1i, T1f);
                T1A            = SIMD_FNMADD(KP941979402, T1z, T1w);
                T1y            = SIMD_FNMADD(KP941979402, T1x, T1u);
                T1c            = SIMD_FNMADD(KP941979402, T1b, T19);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_961570560, T1a, T17);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_961570560, T1a, T17);
                T14            = SIMD_FNMADD(KP601344886, TQ, T13);
                R0[WS(rs, 16)] = SIMD_FMADD(KP1_662939224, T12, Tt);
                R0[0]          = SIMD_FNMADD(KP1_662939224, T12, Tt);
            }
        }
        T1q            = SIMD_FMADD(KP668178637, T1p, T1m);
        T1r            = SIMD_FNMADD(KP668178637, T1m, T1p);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_961570560, T1A, T1t);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_961570560, T1y, T1t);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_961570560, T1c, T15);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_847759065, T14, Td);
        T1s            = SIMD_FNMADD(KP899976223, T1r, T1i);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_662939224, T1q, T1j);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_662939224, T1q, T1j);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_847759065, T1s, T1f);
    }
}

template <>
struct r2cb_traits<32, 12>
{
    static constexpr long_t flops           = 216;
    static constexpr long_t operations      = 145;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 138;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 12 -name
 * r2cb -standalone */

/*
 * This function contains 145 FP additions, 71 FP multiplications,
 * (or, 74 additions, 0 multiplications, 71 fused multiply/add),
 * 138 stack variables, 15 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 12>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2k, T2a, T1v, T1i, T1K, T1T, T1F, TZ, T1L, T1l, T2i, T22,
            T9, T2q, T1u;
        SIMD_FLOAT TW, T1S, T1E, Tv, Th, T2g, T2j, T25, TM, T1M, T16, T1G, T1o,
            T2l, T2d;
        SIMD_FLOAT TK, T2s, T1s, T1Y, T2o;
        {
            SIMD_FLOAT T8, T21, T1C, TQ, T20, T5, TV, T1D, Tg, T2r, Tr, TC, T24,
                TF, T2b;
            SIMD_FLOAT To, Tu, T13, TI, T14, T1m, T12, T4, TP, T1, T2, T6, T7,
                TS, TT;
            SIMD_FLOAT T1e, T1d, Tc, T27, T1b, T18, Tf, T1f, Ta, Tb, T19, T1a,
                Td, Te, TR;
            SIMD_FLOAT TU, TO, T3, T2t, T23, T1n, T15, TJ, T2c;
            T4  = Cr[WS(cs, 8)];
            TP  = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            TS  = Ci[WS(cs, 4)];
            TT  = Ci[WS(cs, 12)];
            Ta  = Ci[WS(cs, 2)];
            Tb  = Ci[WS(cs, 14)];
            T19 = Cr[WS(cs, 2)];
            T1a = Cr[WS(cs, 14)];
            Td  = Ci[WS(cs, 10)];
            Te  = Ci[WS(cs, 6)];
            T1e = Cr[WS(cs, 10)];
            TO  = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 + T7;
            TR  = T6 - T7;
            T21 = TS - TT;
            TU  = TS + TT;
            T1d = Ta + Tb;
            Tc  = Ta - Tb;
            T27 = T19 + T1a;
            T1b = T19 - T1a;
            T18 = Td + Te;
            Tf  = Td - Te;
            T1C = SIMD_FNMADD(KP2_000000000, TP, TO);
            TQ  = SIMD_FMADD(KP2_000000000, TP, TO);
            T20 = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            T1f = Cr[WS(cs, 6)];
            TV  = TR + TU;
            T1D = TU - TR;
            {
                SIMD_FLOAT T1j, Tk, TD, TX, Ty, TY, Tn, T1k, TB, T11, TE, Ts,
                    Tt, TG, TH;
                SIMD_FLOAT Tw, T1c, T1I, T26, Tx, Tl, T28, T1g, Tm, Tz, TA, Ti,
                    Tj, T29, T1h;
                SIMD_FLOAT T1J, Tp, Tq, T10;
                Ti  = Cr[WS(cs, 1)];
                Tj  = Cr[WS(cs, 15)];
                Tw  = Ci[WS(cs, 1)];
                T1c = T18 + T1b;
                T1I = T1b - T18;
                T26 = Tc - Tf;
                Tg  = Tc + Tf;
                Tx  = Ci[WS(cs, 15)];
                Tl  = Cr[WS(cs, 9)];
                T28 = T1e + T1f;
                T1g = T1e - T1f;
                Tm  = Cr[WS(cs, 7)];
                Tz  = Ci[WS(cs, 9)];
                T1j = Ti - Tj;
                Tk  = Ti + Tj;
                TA  = Ci[WS(cs, 7)];
                Tp  = Cr[WS(cs, 5)];
                Tq  = Cr[WS(cs, 11)];
                TD  = Ci[WS(cs, 5)];
                TX  = Tw + Tx;
                Ty  = Tw - Tx;
                T29 = T27 - T28;
                T2r = T27 + T28;
                T1h = T1d - T1g;
                T1J = T1d + T1g;
                TY  = Tl - Tm;
                Tn  = Tl + Tm;
                T1k = Tz + TA;
                TB  = Tz - TA;
                T11 = Tp - Tq;
                Tr  = Tp + Tq;
                TE  = Ci[WS(cs, 11)];
                Ts  = Cr[WS(cs, 3)];
                T2k = T29 - T26;
                T2a = T26 + T29;
                T1v = SIMD_FNMADD(KP414213562, T1c, T1h);
                T1i = SIMD_FMADD(KP414213562, T1h, T1c);
                T1K = SIMD_FNMADD(KP414213562, T1J, T1I);
                T1T = SIMD_FMADD(KP414213562, T1I, T1J);
                Tt  = Cr[WS(cs, 13)];
                TG  = Ci[WS(cs, 13)];
                TH  = Ci[WS(cs, 3)];
                TC  = Ty + TB;
                T24 = Ty - TB;
                T1F = TY + TX;
                TZ  = TX - TY;
                T10 = TD + TE;
                TF  = TD - TE;
                T1L = T1j - T1k;
                T1l = T1j + T1k;
                T2b = Tk - Tn;
                To  = Tk + Tn;
                Tu  = Ts + Tt;
                T13 = Ts - Tt;
                TI  = TG - TH;
                T14 = TG + TH;
                T1m = T11 + T10;
                T12 = T10 - T11;
            }
            T2i           = SIMD_FNMADD(KP2_000000000, T21, T20);
            T22           = SIMD_FMADD(KP2_000000000, T21, T20);
            T9            = SIMD_FNMADD(KP2_000000000, T8, T5);
            T2q           = SIMD_FMADD(KP2_000000000, T8, T5);
            T1u           = SIMD_FNMADD(KP1_414213562, TV, TQ);
            TW            = SIMD_FMADD(KP1_414213562, TV, TQ);
            T1S           = SIMD_FMADD(KP1_414213562, T1D, T1C);
            T1E           = SIMD_FNMADD(KP1_414213562, T1D, T1C);
            T2t           = T2r - (Tr + Tu) - To;
            T23           = Tu - Tr;
            Tv            = To - (Tr + Tu);
            T1n           = T13 + T14;
            T15           = T13 - T14;
            TJ            = TF + TI;
            T2c           = TF - TI;
            Th            = SIMD_FMADD(KP2_000000000, Tg, T9);
            T2g           = SIMD_FMADD(KP1_414213562, T2a, T22);
            R0[WS(rs, 4)] = SIMD_FMADD(KP2_000000000, T2t, T2q);
            T2j           = T24 - T23;
            T25           = T23 + T24;
            TM            = SIMD_FMADD(KP707106781, Tv, Tg);
            T1M           = T15 - T12;
            T16           = T12 + T15;
            T1G           = T1m - T1n;
            T1o           = T1m + T1n;
            T2l           = T2b - T2c;
            T2d           = T2b + T2c;
            TK            = TC - TJ;
            T2s           = TC + TJ - T2r;
            T1s           = SIMD_FMADD(KP1_847759065, T1i, TW);
            T1Y           = SIMD_FMADD(KP1_847759065, T1T, T1S);
            T2o           = SIMD_FMADD(KP541196100, T2j, T2k);
        }
        {
            SIMD_FLOAT T1X, T1R, T1r, T1B, T1z, T1N, T1V, T1y, T17, T1H, T1U,
                T1w, T1p, T2m, T2h;
            SIMD_FLOAT T2e, TN, TL, T2p, T1O, T1W, T1Z, T1Q, T1t, T1q, T1A, T1x,
                T2n, T2f, T1P;
            T1N            = SIMD_FMADD(KP707106781, T1M, T1L);
            T1V            = SIMD_FNMADD(KP707106781, T1M, T1L);
            T1y            = SIMD_FNMADD(KP707106781, T16, TZ);
            T17            = SIMD_FMADD(KP707106781, T16, TZ);
            T1H            = SIMD_FMADD(KP707106781, T1G, T1F);
            T1U            = SIMD_FNMADD(KP707106781, T1G, T1F);
            T1w            = SIMD_FNMADD(KP707106781, T1o, T1l);
            T1p            = SIMD_FMADD(KP707106781, T1o, T1l);
            T2m            = SIMD_FNMADD(KP541196100, T2l, T2k);
            T2h            = SIMD_FMADD(KP414213562, T25, T2d);
            T2e            = SIMD_FMADD(KP541196100, T2d, T2a);
            TN             = SIMD_FNMADD(KP707106781, TK, TM);
            TL             = Tv + TK;
            R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T2s, T2q);
            T2p            = SIMD_FNMADD(KP765366864, T2o, T2l);
            T1O            = SIMD_FNMADD(KP211164242, T1N, T1K);
            T1W            = SIMD_FNMADD(KP668178637, T1V, T1U);
            T1Z            = SIMD_FMADD(KP668178637, T1U, T1V);
            T1Q            = SIMD_FMADD(KP211164242, T1H, T1K);
            T1t            = SIMD_FMADD(KP198912367, T17, T1p);
            T1q            = SIMD_FMADD(KP211164242, T1p, T1i);
            T1A            = SIMD_FMADD(KP668178637, T1w, T1y);
            T1x            = SIMD_FMADD(KP899976223, T1w, T1v);
            T2n            = SIMD_FNMADD(KP765366864, T2m, T2j);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T2h, T2g);
            R0[WS(rs, 18)] = SIMD_FMADD(KP1_847759065, T2h, T2g);
            T2f            = SIMD_FNMADD(KP765366864, T2e, T25);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP2_000000000, TN, T9);
            R0[WS(rs, 16)] = SIMD_FMADD(KP1_414213562, TL, Th);
            R0[0]          = SIMD_FNMADD(KP1_414213562, TL, Th);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T2p, T2i);
            T1P            = SIMD_FNMADD(KP941979402, T1O, T1H);
            R0[WS(rs, 17)] = SIMD_FMADD(KP1_662939224, T1Z, T1Y);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_662939224, T1Z, T1Y);
            T1X            = SIMD_FNMADD(KP899976223, T1W, T1T);
            T1R            = SIMD_FNMADD(KP941979402, T1Q, T1N);
            R0[WS(rs, 19)] = SIMD_FMADD(KP1_961570560, T1t, T1s);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_961570560, T1t, T1s);
            T1r            = SIMD_FNMADD(KP941979402, T1q, T17);
            T1B            = SIMD_FMADD(KP899976223, T1A, T1v);
            T1z            = SIMD_FNMADD(KP601344886, T1y, T1x);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_847759065, T2n, T2i);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_847759065, T2f, T22);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_961570560, T1P, T1E);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_847759065, T1X, T1S);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_961570560, T1R, T1E);
            R0[WS(rs, 11)] = SIMD_FMADD(KP1_961570560, T1r, TW);
            R0[WS(rs, 15)] = SIMD_FMADD(KP1_847759065, T1B, T1u);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_847759065, T1z, T1u);
        }
    }
}

template <>
struct r2cb_traits<32, 13>
{
    static constexpr long_t flops           = 211;
    static constexpr long_t operations      = 142;
    static constexpr long_t memory_accesses = 51;
    static constexpr long_t stack_vars      = 122;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 13 -name
 * r2cb -standalone */

/*
 * This function contains 142 FP additions, 69 FP multiplications,
 * (or, 73 additions, 0 multiplications, 69 fused multiply/add),
 * 122 stack variables, 15 constants, and 51 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 13>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_662939224, +1.662939224605090474157576755235811513477121624);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2e, T2d, T2p, T2g, T27, T1M, T16, Ts, T1v, T1i, TA, T1k,
            T1T, T1n, TX;
        SIMD_FLOAT T20, T2k, T25, T1F, TH, TY, T2f, Td, T15, T1t, T1f, T2j, T1Q,
            T2q, T2i;
        SIMD_FLOAT T1X, TZ, TO, T1N;
        {
            SIMD_FLOAT T1E, T1D, T1d, T5, Tc, T1e, T1O, TD, T1W, TG, T2h, TK,
                T1P, TN, T1V;
            SIMD_FLOAT T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1J, Tg, T1G, Tn,
                T1H, Tj;
            SIMD_FLOAT Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T9  = Cr[WS(cs, 4)];
            Ta  = Cr[WS(cs, 12)];
            Te  = Cr[WS(cs, 2)];
            Tf  = Cr[WS(cs, 14)];
            Tl  = Ci[WS(cs, 2)];
            Tm  = Ci[WS(cs, 14)];
            Th  = Ci[WS(cs, 10)];
            Ti  = Ci[WS(cs, 6)];
            To  = Cr[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T1E = T6 - T7;
            T8  = T6 + T7;
            T2e = T9 + Ta;
            Tb  = T9 - Ta;
            T1J = Te + Tf;
            Tg  = Te - Tf;
            T1G = Tl - Tm;
            Tn  = Tl + Tm;
            T1H = Th - Ti;
            Tj  = Th + Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Cr[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = T8 - Tb;
            {
                SIMD_FLOAT T1R, Tw, TE, T1Y, TT, T1Z, Tz, T1S, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1I, Tk, T1h, TS, Tx, T1K, Tq, Ty, TU, TV, Tu, Tv,
                    T1L, Tr, T1g;
                SIMD_FLOAT TB, TC;
                Tu  = Cr[WS(cs, 1)];
                Tv  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                T1I = T1G - T1H;
                T2p = T1H + T1G;
                Tk  = Tg + Tj;
                T1h = Tg - Tj;
                TS  = Ci[WS(cs, 15)];
                Tx  = Ci[WS(cs, 9)];
                T1K = To + Tp;
                Tq  = To - Tp;
                Ty  = Ci[WS(cs, 7)];
                TU  = Cr[WS(cs, 9)];
                T1R = Tu + Tv;
                Tw  = Tu - Tv;
                TV  = Cr[WS(cs, 7)];
                TB  = Ci[WS(cs, 5)];
                TC  = Ci[WS(cs, 11)];
                TE  = Cr[WS(cs, 5)];
                T1Y = TR - TS;
                TT  = TR + TS;
                T1L = T1J - T1K;
                T2g = T1J + T1K;
                Tr  = Tn - Tq;
                T1g = Tn + Tq;
                T1Z = Tx - Ty;
                Tz  = Tx + Ty;
                T1S = TU + TV;
                TW  = TU - TV;
                T1O = TB - TC;
                TD  = TB + TC;
                TF  = Cr[WS(cs, 11)];
                TI  = Ci[WS(cs, 3)];
                T27 = T1L - T1I;
                T1M = T1I + T1L;
                T16 = SIMD_FNMADD(KP414213562, Tk, Tr);
                Ts  = SIMD_FMADD(KP414213562, Tr, Tk);
                T1v = SIMD_FNMADD(KP414213562, T1g, T1h);
                T1i = SIMD_FMADD(KP414213562, T1h, T1g);
                TJ  = Ci[WS(cs, 13)];
                TL  = Cr[WS(cs, 3)];
                TM  = Cr[WS(cs, 13)];
                TA  = Tw + Tz;
                T1k = Tw - Tz;
                T1W = TE + TF;
                TG  = TE - TF;
                T2h = T1R + T1S;
                T1T = T1R - T1S;
                T1n = TT + TW;
                TX  = TT - TW;
                T20 = T1Y - T1Z;
                T2k = T1Z + T1Y;
                TK  = TI + TJ;
                T1P = TJ - TI;
                TN  = TL - TM;
                T1V = TL + TM;
            }
            T25 = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T1F = SIMD_FMADD(KP2_000000000, T1E, T1D);
            TH  = TD + TG;
            TY  = TD - TG;
            T2f = SIMD_FMADD(KP2_000000000, T2e, T2d);
            Td  = SIMD_FMADD(KP1_414213562, Tc, T5);
            T15 = SIMD_FNMADD(KP1_414213562, Tc, T5);
            T1t = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            T1f = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T2j = T1O + T1P;
            T1Q = T1O - T1P;
            T2q = T2h - (T1W + T1V);
            T2i = T2g - T2h - (T1W + T1V);
            T1X = T1V - T1W;
            TZ  = TN - TK;
            TO  = TK + TN;
            T1N = SIMD_FMADD(KP1_414213562, T1M, T1F);
        }
        {
            SIMD_FLOAT T2r, Tt, T1j, T1m, T1u, T11, T19, T1p, T1w, TQ, T17, T2c,
                T24, T2o, T2a;
            SIMD_FLOAT T1z, T26, T1U, T2l, T2m, T21, T28, T1l, T10, T1o, TP,
                T2b, T23, T2n, T22;
            SIMD_FLOAT T29, T1A, T1s, T1y, T14, T1c, T1a, T1q, T1r, T1x, T13,
                T12, T1b, T18;
            T26            = T1T - T1Q;
            T1U            = T1Q + T1T;
            T2l            = T2j + T2k - T2g;
            T2m            = T2k - T2j;
            T2r            = SIMD_FMADD(KP707106781, T2q, T2p);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP2_000000000, T2i, T2f);
            T21            = T1X + T20;
            T28            = T20 - T1X;
            T1l            = TZ - TY;
            T10            = TY + TZ;
            T1o            = TH - TO;
            TP             = TH + TO;
            Tt             = SIMD_FMADD(KP1_847759065, Ts, Td);
            T1j            = SIMD_FMADD(KP1_847759065, T1i, T1f);
            T2b            = SIMD_FNMADD(KP541196100, T26, T27);
            T23            = SIMD_FMADD(KP541196100, T1U, T1M);
            R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T2l, T2f);
            T2n            = SIMD_FNMADD(KP707106781, T2m, T2e);
            T22            = SIMD_FMADD(KP414213562, T21, T1U);
            T29            = SIMD_FMADD(KP541196100, T28, T27);
            T1m            = SIMD_FNMADD(KP707106781, T1l, T1k);
            T1u            = SIMD_FMADD(KP707106781, T1l, T1k);
            T11            = SIMD_FMADD(KP707106781, T10, TX);
            T19            = SIMD_FNMADD(KP707106781, T10, TX);
            T1p            = SIMD_FNMADD(KP707106781, T1o, T1n);
            T1w            = SIMD_FMADD(KP707106781, T1o, T1n);
            TQ             = SIMD_FMADD(KP707106781, TP, TA);
            T17            = SIMD_FNMADD(KP707106781, TP, TA);
            T2c            = SIMD_FNMADD(KP765366864, T2b, T28);
            T24            = SIMD_FNMADD(KP765366864, T23, T21);
            T2o            = SIMD_FNMADD(KP2_000000000, T2n, T2d);
            R0[WS(rs, 17)] = SIMD_FMADD(KP1_847759065, T22, T1N);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T22, T1N);
            T2a            = SIMD_FNMADD(KP765366864, T29, T26);
            T1z            = SIMD_FNMADD(KP211164242, T1u, T1v);
            T1q            = SIMD_FMADD(KP668178637, T1p, T1m);
            T1r            = SIMD_FNMADD(KP668178637, T1m, T1p);
            T1x            = SIMD_FMADD(KP211164242, T1w, T1v);
            T13            = SIMD_FMADD(KP211164242, TQ, Ts);
            T12            = SIMD_FMADD(KP198912367, T11, TQ);
            T1b            = SIMD_FMADD(KP668178637, T17, T19);
            T18            = SIMD_FMADD(KP899976223, T17, T16);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_847759065, T2c, T25);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_847759065, T24, T1F);
            R0[WS(rs, 15)] = SIMD_FMADD(KP2_000000000, T2r, T2o);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, T2r, T2o);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T2a, T25);
            T1A            = SIMD_FNMADD(KP941979402, T1z, T1w);
            T1s            = SIMD_FNMADD(KP899976223, T1r, T1i);
            R0[WS(rs, 16)] = SIMD_FMADD(KP1_662939224, T1q, T1j);
            R0[0]          = SIMD_FNMADD(KP1_662939224, T1q, T1j);
            T1y            = SIMD_FNMADD(KP941979402, T1x, T1u);
            T14            = SIMD_FNMADD(KP941979402, T13, T11);
            R0[WS(rs, 18)] = SIMD_FMADD(KP1_961570560, T12, Tt);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_961570560, T12, Tt);
            T1c            = SIMD_FMADD(KP899976223, T1b, T16);
            T1a            = SIMD_FNMADD(KP601344886, T19, T18);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_961570560, T1A, T1t);
            R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_847759065, T1s, T1f);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_961570560, T1y, T1t);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_961570560, T14, Td);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_847759065, T1c, T15);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T1a, T15);
        }
    }
}

template <>
struct r2cb_traits<32, 14>
{
    static constexpr long_t flops           = 209;
    static constexpr long_t operations      = 141;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 135;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 14 -name
 * r2cb -standalone */

/*
 * This function contains 141 FP additions, 68 FP multiplications,
 * (or, 73 additions, 0 multiplications, 68 fused multiply/add),
 * 135 stack variables, 14 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 14>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2e, T2d, T2p, T2k, T1I, T1k, T27, T1U, TD, TY, T1n, T1Y,
            T1z, T1V, Tg;
        SIMD_FLOAT TK, T2f, T1B, T1t, T9, TX, T2o, T1H, T1d, T25, T1R, Tn, T2g,
            T1q, T1A;
        SIMD_FLOAT T2q, T2m, TR, TZ, T2a, T1O, T1E, T24, T22, T2c, T1G, T1J, To,
            T10, T2r;
        SIMD_FLOAT T2h, T1u, T1W;
        {
            SIMD_FLOAT T8, T1P, T17, T5, T1c, T1Q, Tj, TQ, T2l, Tm, T1o, TN,
                T1p, T4, T16;
            SIMD_FLOAT T1, T2, T6, T7, T19, T1a, Tz, T1h, Tr, T1e, Ty, T1f, Tu,
                TA, Tp;
            SIMD_FLOAT Tq, Tw, Tx, Ts, Tt, T18, T1b, T15, T3;
            T4  = Cr[WS(cs, 8)];
            T16 = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T19 = Cr[WS(cs, 4)];
            T1a = Cr[WS(cs, 12)];
            Tp  = Cr[WS(cs, 2)];
            Tq  = Cr[WS(cs, 14)];
            Tw  = Ci[WS(cs, 2)];
            Tx  = Ci[WS(cs, 14)];
            Ts  = Cr[WS(cs, 10)];
            Tt  = Cr[WS(cs, 6)];
            Tz  = Ci[WS(cs, 10)];
            T15 = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 - T7;
            T18 = T6 + T7;
            T2e = T19 + T1a;
            T1b = T19 - T1a;
            T1h = Tp - Tq;
            Tr  = Tp + Tq;
            T1e = Tw + Tx;
            Ty  = Tw - Tx;
            T1f = Ts - Tt;
            Tu  = Ts + Tt;
            T1P = SIMD_FNMADD(KP2_000000000, T16, T15);
            T17 = SIMD_FMADD(KP2_000000000, T16, T15);
            T2d = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            TA  = Ci[WS(cs, 6)];
            T1c = T18 + T1b;
            T1Q = T1b - T18;
            {
                SIMD_FLOAT T1l, Tc, TO, T1x, TG, T1y, Tf, T1m, TJ, T1r, TP, Tk,
                    Tl, TL, TM;
                SIMD_FLOAT TE, T1g, T1S, Tv, TF, Td, T1i, TB, Te, TH, TI, Ta,
                    Tb, T1j, T1T;
                SIMD_FLOAT TC, Th, Ti, T1s;
                Ta  = Cr[WS(cs, 1)];
                Tb  = Cr[WS(cs, 15)];
                TE  = Ci[WS(cs, 1)];
                T1g = T1e - T1f;
                T1S = T1f + T1e;
                Tv  = Tr - Tu;
                T2p = Tr + Tu;
                TF  = Ci[WS(cs, 15)];
                Td  = Cr[WS(cs, 9)];
                T1i = Tz + TA;
                TB  = Tz - TA;
                Te  = Cr[WS(cs, 7)];
                TH  = Ci[WS(cs, 9)];
                T1l = Ta - Tb;
                Tc  = Ta + Tb;
                TI  = Ci[WS(cs, 7)];
                Th  = Ci[WS(cs, 5)];
                Ti  = Ci[WS(cs, 11)];
                TO  = Cr[WS(cs, 5)];
                T1x = TE + TF;
                TG  = TE - TF;
                T1j = T1h + T1i;
                T1T = T1h - T1i;
                TC  = Ty - TB;
                T2k = Ty + TB;
                T1y = Td - Te;
                Tf  = Td + Te;
                T1m = TH + TI;
                TJ  = TH - TI;
                T1r = Th + Ti;
                Tj  = Th - Ti;
                TP  = Cr[WS(cs, 11)];
                Tk  = Ci[WS(cs, 13)];
                T1I = SIMD_FMADD(KP414213562, T1g, T1j);
                T1k = SIMD_FNMADD(KP414213562, T1j, T1g);
                T27 = SIMD_FNMADD(KP414213562, T1S, T1T);
                T1U = SIMD_FMADD(KP414213562, T1T, T1S);
                TD  = Tv - TC;
                TY  = Tv + TC;
                Tl  = Ci[WS(cs, 3)];
                TL  = Cr[WS(cs, 3)];
                TM  = Cr[WS(cs, 13)];
                T1n = T1l + T1m;
                T1Y = T1l - T1m;
                T1z = T1x - T1y;
                T1V = T1y + T1x;
                T1s = TO - TP;
                TQ  = TO + TP;
                T2l = Tc + Tf;
                Tg  = Tc - Tf;
                TK  = TG - TJ;
                T2f = TG + TJ;
                Tm  = Tk - Tl;
                T1o = Tk + Tl;
                TN  = TL + TM;
                T1p = TL - TM;
                T1B = T1r - T1s;
                T1t = T1r + T1s;
            }
            T9  = SIMD_FNMADD(KP2_000000000, T8, T5);
            TX  = SIMD_FMADD(KP2_000000000, T8, T5);
            T2o = SIMD_FMADD(KP2_000000000, T2e, T2d);
            T1H = SIMD_FMADD(KP1_414213562, T1c, T17);
            T1d = SIMD_FNMADD(KP1_414213562, T1c, T17);
            T25 = SIMD_FMADD(KP1_414213562, T1Q, T1P);
            T1R = SIMD_FNMADD(KP1_414213562, T1Q, T1P);
            Tn  = Tj - Tm;
            T2g = Tj + Tm;
            T1q = T1o + T1p;
            T1A = T1p - T1o;
            T2q = T2p - (TN + TQ) - T2l;
            T2m = T2l - (TN + TQ);
            TR  = TN - TQ;
            TZ  = SIMD_FMADD(KP1_414213562, TY, TX);
        }
        T1J = SIMD_FMADD(KP1_847759065, T1I, T1H);
        To  = Tg - Tn;
        T10 = Tg + Tn;
        T2r = T2g + T2f - T2p;
        T2h = T2f - T2g;
        T1u = T1q + T1t;
        T1W = T1t - T1q;
        {
            SIMD_FLOAT T1C, T1Z, T2n, TS, T11, T13, TV, T2i, T28, T1X, T1v, T1K,
                T26, T20, T1D;
            SIMD_FLOAT T1L, T12, TT, T14, TW, T2j, T29, T1N, T1w, T21, T23, T2b,
                T1M, T1F, TU;
            T1C            = T1A + T1B;
            T1Z            = T1A - T1B;
            R0[WS(rs, 2)]  = SIMD_FMADD(KP2_000000000, T2q, T2o);
            T2n            = SIMD_FMADD(KP707106781, T2m, T2k);
            TS             = TK - TR;
            T11            = TK + TR;
            T13            = SIMD_FMADD(KP541196100, T10, TY);
            TV             = SIMD_FNMADD(KP541196100, To, TD);
            R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T2r, T2o);
            T2i            = SIMD_FNMADD(KP707106781, T2h, T2e);
            T28            = SIMD_FMADD(KP707106781, T1W, T1V);
            T1X            = SIMD_FNMADD(KP707106781, T1W, T1V);
            T1v            = SIMD_FNMADD(KP707106781, T1u, T1n);
            T1K            = SIMD_FMADD(KP707106781, T1u, T1n);
            T26            = SIMD_FMADD(KP707106781, T1Z, T1Y);
            T20            = SIMD_FNMADD(KP707106781, T1Z, T1Y);
            T1D            = SIMD_FNMADD(KP707106781, T1C, T1z);
            T1L            = SIMD_FMADD(KP707106781, T1C, T1z);
            T12            = SIMD_FMADD(KP414213562, T11, T10);
            TT             = SIMD_FMADD(KP541196100, TS, TD);
            T14            = SIMD_FNMADD(KP765366864, T13, T11);
            TW             = SIMD_FNMADD(KP765366864, TV, TS);
            T2j            = SIMD_FNMADD(KP2_000000000, T2i, T2d);
            T29            = SIMD_FMADD(KP211164242, T28, T27);
            T1N            = SIMD_FMADD(KP211164242, T1K, T1I);
            T1w            = SIMD_FMADD(KP899976223, T1v, T1k);
            T21            = SIMD_FNMADD(KP668178637, T20, T1X);
            T23            = SIMD_FMADD(KP668178637, T1X, T20);
            T2b            = SIMD_FNMADD(KP211164242, T26, T27);
            T1M            = SIMD_FMADD(KP198912367, T1L, T1K);
            T1F            = SIMD_FMADD(KP668178637, T1v, T1D);
            R0[WS(rs, 16)] = SIMD_FMADD(KP1_847759065, T12, TZ);
            R0[0]          = SIMD_FNMADD(KP1_847759065, T12, TZ);
            TU             = SIMD_FNMADD(KP765366864, TT, To);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_847759065, T14, TX);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_847759065, TW, T9);
            R0[WS(rs, 14)] = SIMD_FMADD(KP2_000000000, T2n, T2j);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, T2n, T2j);
            T2a            = SIMD_FNMADD(KP941979402, T29, T26);
            T1O            = SIMD_FNMADD(KP941979402, T1N, T1L);
            T1E            = SIMD_FNMADD(KP601344886, T1D, T1w);
            T24            = SIMD_FMADD(KP899976223, T23, T1U);
            T22            = SIMD_FNMADD(KP899976223, T21, T1U);
            T2c            = SIMD_FNMADD(KP941979402, T2b, T28);
            R0[WS(rs, 17)] = SIMD_FMADD(KP1_961570560, T1M, T1J);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_961570560, T1M, T1J);
            T1G            = SIMD_FMADD(KP899976223, T1F, T1k);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, TU, T9);
        }
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_961570560, T2a, T25);
        R0[WS(rs, 9)]  = SIMD_FMADD(KP1_961570560, T1O, T1H);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T1E, T1d);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_847759065, T24, T1R);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_847759065, T22, T1R);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_961570560, T2c, T25);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_847759065, T1G, T1d);
    }
}

template <>
struct r2cb_traits<32, 15>
{
    static constexpr long_t flops           = 207;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 49;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 15 -name
 * r2cb -standalone */

/*
 * This function contains 140 FP additions, 67 FP multiplications,
 * (or, 73 additions, 0 multiplications, 67 fused multiply/add),
 * 132 stack variables, 14 constants, and 49 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 15>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2e, T2d, T2p, T2g, T27, T1T, T16, Ts, T1l, T1u, TA, T1g,
            T1L, T1m, TX;
        SIMD_FLOAT T1Z, T2k, T1F, T25, TH, TY, T2f, Td, T15, T1f, T1t, T2q, T2i,
            T1W, T1I;
        SIMD_FLOAT T2j, TZ, TO, T2r, T20, T26, T1M, T28, T2l, T2m, T10, T1h, TP,
            T1n, Tt;
        {
            SIMD_FLOAT T1E, T1D, T1d, T5, Tc, T1e, T1U, TD, T1H, TG, T2h, TK,
                T1V, TN, T1G;
            SIMD_FLOAT T4, T1C, T1, T2, T6, T7, T9, Ta, To, T1N, Tg, T1Q, Tn,
                T1R, Tj;
            SIMD_FLOAT Tp, Te, Tf, Tl, Tm, Th, Ti, T8, Tb, T1B, T3;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            Te  = Cr[WS(cs, 2)];
            Tf  = Cr[WS(cs, 14)];
            Tl  = Ci[WS(cs, 2)];
            Tm  = Ci[WS(cs, 14)];
            Th  = Ci[WS(cs, 10)];
            Ti  = Ci[WS(cs, 6)];
            To  = Cr[WS(cs, 10)];
            T1B = T1 + T2;
            T3  = T1 - T2;
            T2e = T6 + T7;
            T8  = T6 - T7;
            T1E = T9 - Ta;
            Tb  = T9 + Ta;
            T1N = Te + Tf;
            Tg  = Te - Tf;
            T1Q = Tl - Tm;
            Tn  = Tl + Tm;
            T1R = Th - Ti;
            Tj  = Th + Ti;
            T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
            T2d = SIMD_FMADD(KP2_000000000, T1C, T1B);
            T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            Tp  = Cr[WS(cs, 6)];
            Tc  = T8 + Tb;
            T1e = T8 - Tb;
            {
                SIMD_FLOAT T1J, Tw, TE, T1X, TT, T1Y, Tz, T1K, TW, TF, TI, TJ,
                    TL, TM, TR;
                SIMD_FLOAT T1S, Tk, T1j, TS, Tx, T1O, Tq, Ty, TU, TV, Tu, Tv,
                    T1P, Tr, T1k;
                SIMD_FLOAT TB, TC;
                Tu  = Cr[WS(cs, 1)];
                Tv  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                T1S = T1Q - T1R;
                T2p = T1R + T1Q;
                Tk  = Tg + Tj;
                T1j = Tg - Tj;
                TS  = Ci[WS(cs, 15)];
                Tx  = Ci[WS(cs, 9)];
                T1O = To + Tp;
                Tq  = To - Tp;
                Ty  = Ci[WS(cs, 7)];
                TU  = Cr[WS(cs, 9)];
                T1J = Tu + Tv;
                Tw  = Tu - Tv;
                TV  = Cr[WS(cs, 7)];
                TB  = Cr[WS(cs, 5)];
                TC  = Cr[WS(cs, 11)];
                TE  = Ci[WS(cs, 5)];
                T1X = TR - TS;
                TT  = TR + TS;
                T1P = T1N - T1O;
                T2g = T1N + T1O;
                Tr  = Tn - Tq;
                T1k = Tn + Tq;
                T1Y = Tx - Ty;
                Tz  = Tx + Ty;
                T1K = TU + TV;
                TW  = TU - TV;
                T1U = TB + TC;
                TD  = TB - TC;
                TF  = Ci[WS(cs, 11)];
                TI  = Cr[WS(cs, 3)];
                T27 = T1S + T1P;
                T1T = T1P - T1S;
                T16 = SIMD_FNMADD(KP414213562, Tk, Tr);
                Ts  = SIMD_FMADD(KP414213562, Tr, Tk);
                T1l = SIMD_FNMADD(KP414213562, T1k, T1j);
                T1u = SIMD_FMADD(KP414213562, T1j, T1k);
                TJ  = Cr[WS(cs, 13)];
                TL  = Ci[WS(cs, 3)];
                TM  = Ci[WS(cs, 13)];
                TA  = Tw + Tz;
                T1g = Tw - Tz;
                T1H = TE - TF;
                TG  = TE + TF;
                T2h = T1J + T1K;
                T1L = T1J - T1K;
                T1m = TT + TW;
                TX  = TT - TW;
                T1Z = T1X - T1Y;
                T2k = T1Y + T1X;
                TK  = TI - TJ;
                T1V = TI + TJ;
                TN  = TL + TM;
                T1G = TM - TL;
            }
            T1F = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T25 = SIMD_FMADD(KP2_000000000, T1E, T1D);
            TH  = TD + TG;
            TY  = TG - TD;
            T2f = SIMD_FMADD(KP2_000000000, T2e, T2d);
            Td  = SIMD_FMADD(KP1_414213562, Tc, T5);
            T15 = SIMD_FNMADD(KP1_414213562, Tc, T5);
            T1f = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T1t = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            T2q = T2h - (T1U + T1V);
            T2i = T2g - T2h - (T1U + T1V);
            T1W = T1U - T1V;
            T1I = T1G - T1H;
            T2j = T1H + T1G;
            TZ  = TK - TN;
            TO  = TK + TN;
        }
        T2r           = SIMD_FMADD(KP707106781, T2q, T2p);
        R0[WS(rs, 1)] = SIMD_FMADD(KP2_000000000, T2i, T2f);
        T20           = T1W + T1Z;
        T26           = T1Z - T1W;
        T1M           = T1I + T1L;
        T28           = T1L - T1I;
        T2l           = T2j + T2k - T2g;
        T2m           = T2k - T2j;
        T10           = TY + TZ;
        T1h           = TZ - TY;
        TP            = TH + TO;
        T1n           = TH - TO;
        Tt            = SIMD_FMADD(KP1_847759065, Ts, Td);
        {
            SIMD_FLOAT T1w, T1i, T11, T19, T1v, T1o, TQ, T17, T2c, T22, T2a,
                T24, T2o, T1r, T2b;
            SIMD_FLOAT T21, T29, T23, T2n, T1s, T1A, T1y, T1q, T14, T1c, T1a,
                T1z, T1x, T1p, T13;
            SIMD_FLOAT T12, T1b, T18;
            T2b            = SIMD_FMADD(KP541196100, T26, T27);
            T21            = SIMD_FMADD(KP541196100, T20, T1T);
            T29            = SIMD_FMADD(KP541196100, T28, T27);
            T23            = SIMD_FNMADD(KP541196100, T1M, T1T);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, T2l, T2f);
            T2n            = SIMD_FNMADD(KP707106781, T2m, T2e);
            T1w            = SIMD_FNMADD(KP707106781, T1h, T1g);
            T1i            = SIMD_FMADD(KP707106781, T1h, T1g);
            T11            = SIMD_FMADD(KP707106781, T10, TX);
            T19            = SIMD_FNMADD(KP707106781, T10, TX);
            T1v            = SIMD_FNMADD(KP707106781, T1n, T1m);
            T1o            = SIMD_FMADD(KP707106781, T1n, T1m);
            TQ             = SIMD_FMADD(KP707106781, TP, TA);
            T17            = SIMD_FNMADD(KP707106781, TP, TA);
            T2c            = SIMD_FMADD(KP765366864, T2b, T28);
            T22            = SIMD_FNMADD(KP765366864, T21, T1M);
            T2a            = SIMD_FNMADD(KP765366864, T29, T26);
            T24            = SIMD_FNMADD(KP765366864, T23, T20);
            T2o            = SIMD_FNMADD(KP2_000000000, T2n, T2d);
            T1r            = SIMD_FNMADD(KP211164242, T1i, T1l);
            T1z            = SIMD_FMADD(KP668178637, T1v, T1w);
            T1x            = SIMD_FNMADD(KP668178637, T1w, T1v);
            T1p            = SIMD_FMADD(KP211164242, T1o, T1l);
            T13            = SIMD_FMADD(KP211164242, TQ, Ts);
            T12            = SIMD_FMADD(KP198912367, T11, TQ);
            T1b            = SIMD_FMADD(KP668178637, T17, T19);
            T18            = SIMD_FMADD(KP899976223, T17, T16);
            R0[WS(rs, 15)] = SIMD_FMADD(KP1_847759065, T2c, T25);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T22, T1F);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_847759065, T2a, T25);
            R0[WS(rs, 11)] = SIMD_FMADD(KP1_847759065, T24, T1F);
            R0[WS(rs, 13)] = SIMD_FMADD(KP2_000000000, T2r, T2o);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP2_000000000, T2r, T2o);
            T1s            = SIMD_FNMADD(KP941979402, T1r, T1o);
            T1A            = SIMD_FMADD(KP899976223, T1z, T1u);
            T1y            = SIMD_FNMADD(KP899976223, T1x, T1u);
            T1q            = SIMD_FNMADD(KP941979402, T1p, T1i);
            T14            = SIMD_FNMADD(KP941979402, T13, T11);
            R0[WS(rs, 16)] = SIMD_FMADD(KP1_961570560, T12, Tt);
            R0[0]          = SIMD_FNMADD(KP1_961570560, T12, Tt);
            T1c            = SIMD_FMADD(KP899976223, T1b, T16);
            T1a            = SIMD_FNMADD(KP601344886, T19, T18);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_961570560, T1s, T1f);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_847759065, T1A, T1t);
            R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_847759065, T1y, T1t);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_961570560, T1q, T1f);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_961570560, T14, Td);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_847759065, T1c, T15);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, T1a, T15);
        }
    }
}

template <>
struct r2cb_traits<32, 16>
{
    static constexpr long_t flops           = 205;
    static constexpr long_t operations      = 139;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 130;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 16 -name
 * r2cb -standalone */

/*
 * This function contains 139 FP additions, 66 FP multiplications,
 * (or, 73 additions, 0 multiplications, 66 fused multiply/add),
 * 130 stack variables, 13 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 16>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T8, T5, Tg, T2o, T2d, T21, T1J, T1w, T15, T1k, T1S, T1B, T1a,
            T1x, TI;
        SIMD_FLOAT T25, T2j, T1R, T2b, TN, T1b, T9, T1j, TD, T1t, T1H, T2p, Tu,
            T22, T2k;
        SIMD_FLOAT T1V, TS, T1c, T2q, T26, T2c, T1W, T2e, T2r, T2l, T1d, T1y,
            TT, T1C;
        {
            SIMD_FLOAT T1Q, T1r, Tx, T1P, TC, T1s, TJ, Tq, Tn, T1U, TM, Tt, TO,
                TR, T1T;
            SIMD_FLOAT T4, Tw, T1, T2, T6, T7, Tz, TA, TW, TV, Tc, T1Y, T13,
                T10, Tf;
            SIMD_FLOAT TX, Ta, Tb, T11, T12, Td, Te, Ty, TB, Tv, T3;
            T4  = Cr[WS(cs, 8)];
            Tw  = Ci[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            Tz  = Ci[WS(cs, 4)];
            TA  = Ci[WS(cs, 12)];
            Ta  = Cr[WS(cs, 2)];
            Tb  = Cr[WS(cs, 14)];
            T11 = Ci[WS(cs, 2)];
            T12 = Ci[WS(cs, 14)];
            Td  = Cr[WS(cs, 10)];
            Te  = Cr[WS(cs, 6)];
            TW  = Ci[WS(cs, 10)];
            Tv  = T1 - T2;
            T3  = T1 + T2;
            T8  = T6 + T7;
            Ty  = T6 - T7;
            T1Q = Tz - TA;
            TB  = Tz + TA;
            TV  = Ta - Tb;
            Tc  = Ta + Tb;
            T1Y = T11 - T12;
            T13 = T11 + T12;
            T10 = Td - Te;
            Tf  = Td + Te;
            T1r = SIMD_FMADD(KP2_000000000, Tw, Tv);
            Tx  = SIMD_FNMADD(KP2_000000000, Tw, Tv);
            T1P = SIMD_FNMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            TX  = Ci[WS(cs, 6)];
            TC  = Ty - TB;
            T1s = Ty + TB;
            {
                SIMD_FLOAT TE, Tj, TK, T23, T19, T16, Tm, T24, TH, TL, Tr, Ts,
                    TP, TQ, T17;
                SIMD_FLOAT T1u, T14, T1X, T18, Tk, T1Z, TY, Tl, TF, TG, Th, Ti,
                    T20, T1v, TZ;
                SIMD_FLOAT To, Tp;
                Th  = Cr[WS(cs, 1)];
                Ti  = Cr[WS(cs, 15)];
                T17 = Ci[WS(cs, 1)];
                T1u = T13 - T10;
                T14 = T10 + T13;
                T1X = Tc - Tf;
                Tg  = Tc + Tf;
                T18 = Ci[WS(cs, 15)];
                Tk  = Cr[WS(cs, 9)];
                T1Z = TW - TX;
                TY  = TW + TX;
                Tl  = Cr[WS(cs, 7)];
                TF  = Ci[WS(cs, 9)];
                TE  = Th - Ti;
                Tj  = Th + Ti;
                TG  = Ci[WS(cs, 7)];
                To  = Cr[WS(cs, 5)];
                Tp  = Cr[WS(cs, 11)];
                TK  = Ci[WS(cs, 5)];
                T23 = T17 - T18;
                T19 = T17 + T18;
                T20 = T1Y - T1Z;
                T2o = T1Z + T1Y;
                T1v = TV + TY;
                TZ  = TV - TY;
                T16 = Tk - Tl;
                Tm  = Tk + Tl;
                T24 = TF - TG;
                TH  = TF + TG;
                TJ  = To - Tp;
                Tq  = To + Tp;
                TL  = Ci[WS(cs, 11)];
                Tr  = Cr[WS(cs, 3)];
                T2d = T1X + T20;
                T21 = T1X - T20;
                T1J = SIMD_FMADD(KP414213562, T1u, T1v);
                T1w = SIMD_FNMADD(KP414213562, T1v, T1u);
                T15 = SIMD_FNMADD(KP414213562, T14, TZ);
                T1k = SIMD_FMADD(KP414213562, TZ, T14);
                Ts  = Cr[WS(cs, 13)];
                TP  = Ci[WS(cs, 3)];
                TQ  = Ci[WS(cs, 13)];
                Tn  = Tj + Tm;
                T1S = Tj - Tm;
                T1B = T19 - T16;
                T1a = T16 + T19;
                T1U = TK - TL;
                TM  = TK + TL;
                T1x = TE + TH;
                TI  = TE - TH;
                T25 = T23 - T24;
                T2j = T24 + T23;
                Tt  = Tr + Ts;
                TO  = Tr - Ts;
                TR  = TP + TQ;
                T1T = TQ - TP;
            }
            T1R = SIMD_FNMADD(KP2_000000000, T1Q, T1P);
            T2b = SIMD_FMADD(KP2_000000000, T1Q, T1P);
            TN  = TJ - TM;
            T1b = TJ + TM;
            T9  = SIMD_FMADD(KP2_000000000, T8, T5);
            T1j = SIMD_FNMADD(KP1_414213562, TC, Tx);
            TD  = SIMD_FMADD(KP1_414213562, TC, Tx);
            T1t = SIMD_FNMADD(KP1_414213562, T1s, T1r);
            T1H = SIMD_FMADD(KP1_414213562, T1s, T1r);
            T2p = Tn - (Tq + Tt);
            Tu  = Tg - Tn - (Tq + Tt);
            T22 = Tq - Tt;
            T2k = T1U + T1T;
            T1V = T1T - T1U;
            TS  = TO - TR;
            T1c = TO + TR;
        }
        T2q   = SIMD_FMADD(KP707106781, T2p, T2o);
        R0[0] = SIMD_FMADD(KP2_000000000, Tu, T9);
        T26   = T22 + T25;
        T2c   = T25 - T22;
        T1W   = T1S + T1V;
        T2e   = T1S - T1V;
        T2r   = T2k + T2j - Tg;
        T2l   = T2j - T2k;
        T1d   = T1b - T1c;
        T1y   = T1b + T1c;
        TT    = TN + TS;
        T1C   = TS - TN;
        {
            SIMD_FLOAT T1M, T1E, T1g, T1O, T1G, T1q, T1o, T1i, T2h, T27, T2f,
                T29, T2m, T1z, T1K;
            SIMD_FLOAT T1e, T1l, T1D, T1I, TU, T1m, T2i, T28, T2g, T2a, T2n,
                T1L, T1A, T1f, T1N;
            SIMD_FLOAT T1F, T1n, T1p, T1h;
            T2h            = SIMD_FMADD(KP541196100, T2c, T2d);
            T27            = SIMD_FMADD(KP541196100, T26, T21);
            T2f            = SIMD_FMADD(KP541196100, T2e, T2d);
            T29            = SIMD_FNMADD(KP541196100, T1W, T21);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP2_000000000, T2r, T9);
            T2m            = SIMD_FNMADD(KP707106781, T2l, T8);
            T1z            = SIMD_FNMADD(KP707106781, T1y, T1x);
            T1K            = SIMD_FMADD(KP707106781, T1y, T1x);
            T1e            = SIMD_FMADD(KP707106781, T1d, T1a);
            T1l            = SIMD_FNMADD(KP707106781, T1d, T1a);
            T1D            = SIMD_FNMADD(KP707106781, T1C, T1B);
            T1I            = SIMD_FMADD(KP707106781, T1C, T1B);
            TU             = SIMD_FMADD(KP707106781, TT, TI);
            T1m            = SIMD_FNMADD(KP707106781, TT, TI);
            T2i            = SIMD_FMADD(KP765366864, T2h, T2e);
            T28            = SIMD_FNMADD(KP765366864, T27, T1W);
            T2g            = SIMD_FNMADD(KP765366864, T2f, T2c);
            T2a            = SIMD_FNMADD(KP765366864, T29, T26);
            T2n            = SIMD_FNMADD(KP2_000000000, T2m, T5);
            T1L            = SIMD_FMADD(KP211164242, T1K, T1J);
            T1A            = SIMD_FMADD(KP899976223, T1z, T1w);
            T1f            = SIMD_FMADD(KP211164242, T1e, T15);
            T1N            = SIMD_FMADD(KP211164242, T1I, T1J);
            T1F            = SIMD_FMADD(KP668178637, T1z, T1D);
            T1n            = SIMD_FNMADD(KP668178637, T1m, T1l);
            T1p            = SIMD_FMADD(KP668178637, T1l, T1m);
            T1h            = SIMD_FNMADD(KP211164242, TU, T15);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_847759065, T2i, T2b);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T28, T1R);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_847759065, T2g, T2b);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_847759065, T2a, T1R);
            R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T2q, T2n);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP2_000000000, T2q, T2n);
            T1M            = SIMD_FNMADD(KP941979402, T1L, T1I);
            T1E            = SIMD_FNMADD(KP601344886, T1D, T1A);
            T1g            = SIMD_FNMADD(KP941979402, T1f, TU);
            T1O            = SIMD_FMADD(KP941979402, T1N, T1K);
            T1G            = SIMD_FMADD(KP899976223, T1F, T1w);
            T1q            = SIMD_FMADD(KP899976223, T1p, T1k);
            T1o            = SIMD_FNMADD(KP899976223, T1n, T1k);
            T1i            = SIMD_FNMADD(KP941979402, T1h, T1e);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_961570560, T1M, T1H);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T1E, T1t);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_961570560, T1g, TD);
            R0[WS(rs, 15)] = SIMD_FMADD(KP1_961570560, T1O, T1H);
            R0[WS(rs, 11)] = SIMD_FMADD(KP1_847759065, T1G, T1t);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_847759065, T1q, T1j);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_847759065, T1o, T1j);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_961570560, T1i, TD);
        }
    }
}

template <>
struct r2cb_traits<32, 17>
{
    static constexpr long_t flops           = 202;
    static constexpr long_t operations      = 138;
    static constexpr long_t memory_accesses = 47;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 17 -name
 * r2cb -standalone */

/*
 * This function contains 138 FP additions, 64 FP multiplications,
 * (or, 74 additions, 0 multiplications, 64 fused multiply/add),
 * 125 stack variables, 13 constants, and 47 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 17>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Th, Ti, T2b, T2a, T1M, T2h, T1G, T1R, T24, Ts, T17, T1u, T1l,
            TY, TN;
        SIMD_FLOAT T1F, T22, T1K, Tz, T1g, TC, T2c, T1W, T1m, TX, TF, T1H, T15,
            Td, T1t;
        SIMD_FLOAT T1f, T1T, T2i, T1I, T2d, TG, TZ, T23, T1X, T2j, T1L, T25,
            T2k, T2e, TO;
        SIMD_FLOAT T1n, T10, T1h, T28, T1Y;
        {
            SIMD_FLOAT T1E, T1D, T1d, T5, TH, Tc, T1e, TI, TU, TV, TW, T1V, Ty,
                T1J, Tv;
            SIMD_FLOAT TA, TB, T1U, TT, TD, TE, T4, T1C, T1, T2, T6, T7, T9, Ta,
                T1S;
            T4  = Ci[WS(cs, 8)];
            T1C = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            T6  = Cr[WS(cs, 4)];
            T7  = Cr[WS(cs, 12)];
            T9  = Ci[WS(cs, 4)];
            Ta  = Ci[WS(cs, 12)];
            {
                SIMD_FLOAT Tl, T8, Tb, Tj, Tm, T1P, Tq, T1O, Tg, To, Tp, Te, Tf,
                    T1B, T3;
                SIMD_FLOAT TJ, TM, T1Q, Tk, T1k, TK, TL, Tw, T1N, Tr, T1j, Tx,
                    Tn, TR, TS;
                SIMD_FLOAT Tt, Tu;
                Th  = Cr[WS(cs, 10)];
                Ti  = Cr[WS(cs, 6)];
                To  = Ci[WS(cs, 10)];
                Tp  = Ci[WS(cs, 6)];
                Te  = Ci[WS(cs, 2)];
                Tf  = Ci[WS(cs, 14)];
                Tl  = Cr[WS(cs, 2)];
                T1B = T1 + T2;
                T3  = T1 - T2;
                T2b = T6 + T7;
                T8  = T6 - T7;
                T1E = T9 - Ta;
                Tb  = T9 + Ta;
                Tj  = Th - Ti;
                Tm  = Cr[WS(cs, 14)];
                T1P = To - Tp;
                Tq  = To + Tp;
                T1O = Te - Tf;
                Tg  = Te + Tf;
                T1D = SIMD_FNMADD(KP2_000000000, T1C, T1B);
                T2a = SIMD_FMADD(KP2_000000000, T1C, T1B);
                T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FMADD(KP2_000000000, T4, T3);
                TH  = Cr[WS(cs, 3)];
                Tc  = T8 + Tb;
                T1e = T8 - Tb;
                Tn  = Tl - Tm;
                T1M = Tl + Tm;
                TI  = Cr[WS(cs, 13)];
                T1Q = T1O - T1P;
                T2h = T1O + T1P;
                Tk  = Tg - Tj;
                T1k = Tg + Tj;
                TK  = Ci[WS(cs, 3)];
                TL  = Ci[WS(cs, 13)];
                TU  = Cr[WS(cs, 9)];
                TV  = Cr[WS(cs, 7)];
                Tw  = Ci[WS(cs, 9)];
                T1N = T1M - (Th + Ti);
                Tr  = Tn + Tq;
                T1j = Tn - Tq;
                TJ  = TH - TI;
                Tx  = Ci[WS(cs, 7)];
                Tt  = Cr[WS(cs, 1)];
                Tu  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                TM  = TK + TL;
                T1G = TL - TK;
                TW  = TU - TV;
                TS  = Ci[WS(cs, 15)];
                T1R = T1N - T1Q;
                T24 = T1N + T1Q;
                Ts  = SIMD_FNMADD(KP414213562, Tr, Tk);
                T17 = SIMD_FMADD(KP414213562, Tk, Tr);
                T1u = SIMD_FMADD(KP414213562, T1j, T1k);
                T1l = SIMD_FNMADD(KP414213562, T1k, T1j);
                T1V = Tw - Tx;
                Ty  = Tw + Tx;
                T1J = Tt + Tu;
                Tv  = Tt - Tu;
                TA  = Cr[WS(cs, 5)];
                TB  = Cr[WS(cs, 11)];
                T1U = TR - TS;
                TT  = TR + TS;
                TD  = Ci[WS(cs, 5)];
                TE  = Ci[WS(cs, 11)];
                TY  = TJ - TM;
                TN  = TJ + TM;
            }
            T1F = SIMD_FNMADD(KP2_000000000, T1E, T1D);
            T22 = SIMD_FMADD(KP2_000000000, T1E, T1D);
            T1K = T1J - (TU + TV);
            Tz  = Tv + Ty;
            T1g = Tv - Ty;
            TC  = TA - TB;
            T1S = TA + TB;
            T2c = T1V + T1U;
            T1W = T1U - T1V;
            T1m = TT + TW;
            TX  = TT - TW;
            TF  = TD + TE;
            T1H = TD - TE;
            T15 = SIMD_FMADD(KP1_414213562, Tc, T5);
            Td  = SIMD_FNMADD(KP1_414213562, Tc, T5);
            T1t = SIMD_FNMADD(KP1_414213562, T1e, T1d);
            T1f = SIMD_FMADD(KP1_414213562, T1e, T1d);
            T1T = T1S - (TH + TI);
            T2i = T1J - (T1S - (TU + TV)) - (TH + TI);
        }
        T1I = T1G - T1H;
        T2d = T1H + T1G;
        TG  = TC + TF;
        TZ  = TC - TF;
        T23 = T1W - T1T;
        T1X = T1T + T1W;
        T2j = SIMD_FMADD(KP707106781, T2i, T2h);
        T1L = T1I + T1K;
        T25 = T1K - T1I;
        T2k = T2b + T2d + T2c - T1M - (Th + Ti);
        T2e = T2c - T2d;
        TO  = TG + TN;
        T1n = TG - TN;
        T10 = TY - TZ;
        T1h = TZ + TY;
        T28 = SIMD_FMADD(KP541196100, T23, T24);
        T1Y = SIMD_FMADD(KP541196100, T1X, T1R);
        {
            SIMD_FLOAT T1q, T1a, T12, T1A, T1y, T1s, T1c, T14, T26, T20, T2f,
                T1o, T1v, TP, T18;
            SIMD_FLOAT T1i, T1w, T11, T16, T29, T1Z, T27, T21, T2g, T1p, T19,
                TQ, T1x, T1z, T1r;
            SIMD_FLOAT T1b, T13;
            T26            = SIMD_FMADD(KP541196100, T25, T24);
            T20            = SIMD_FNMADD(KP541196100, T1L, T1R);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP2_000000000, T2k, T2a);
            T2f            = SIMD_FNMADD(KP707106781, T2e, T2b);
            T1o            = SIMD_FMADD(KP707106781, T1n, T1m);
            T1v            = SIMD_FNMADD(KP707106781, T1n, T1m);
            TP             = SIMD_FNMADD(KP707106781, TO, Tz);
            T18            = SIMD_FMADD(KP707106781, TO, Tz);
            T1i            = SIMD_FMADD(KP707106781, T1h, T1g);
            T1w            = SIMD_FNMADD(KP707106781, T1h, T1g);
            T11            = SIMD_FNMADD(KP707106781, T10, TX);
            T16            = SIMD_FMADD(KP707106781, T10, TX);
            T29            = SIMD_FMADD(KP765366864, T28, T25);
            T1Z            = SIMD_FNMADD(KP765366864, T1Y, T1L);
            T27            = SIMD_FNMADD(KP765366864, T26, T23);
            T21            = SIMD_FNMADD(KP765366864, T20, T1X);
            T2g            = SIMD_FNMADD(KP2_000000000, T2f, T2a);
            T1p            = SIMD_FMADD(KP211164242, T1o, T1l);
            T19            = SIMD_FMADD(KP211164242, T18, T17);
            TQ             = SIMD_FMADD(KP899976223, TP, Ts);
            T1x            = SIMD_FNMADD(KP668178637, T1w, T1v);
            T1z            = SIMD_FMADD(KP668178637, T1v, T1w);
            T1r            = SIMD_FNMADD(KP211164242, T1i, T1l);
            T1b            = SIMD_FMADD(KP211164242, T16, T17);
            T13            = SIMD_FMADD(KP668178637, TP, T11);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_847759065, T29, T22);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T1Z, T1F);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_847759065, T27, T22);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_847759065, T21, T1F);
            R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T2j, T2g);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, T2j, T2g);
            T1q            = SIMD_FNMADD(KP941979402, T1p, T1i);
            T1a            = SIMD_FNMADD(KP941979402, T19, T16);
            T12            = SIMD_FNMADD(KP601344886, T11, TQ);
            T1A            = SIMD_FMADD(KP899976223, T1z, T1u);
            T1y            = SIMD_FNMADD(KP899976223, T1x, T1u);
            T1s            = SIMD_FNMADD(KP941979402, T1r, T1o);
            T1c            = SIMD_FMADD(KP941979402, T1b, T18);
            T14            = SIMD_FMADD(KP899976223, T13, Ts);
            R0[0]          = SIMD_FNMADD(KP1_961570560, T1q, T1f);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_961570560, T1a, T15);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T12, Td);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_847759065, T1A, T1t);
            R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_847759065, T1y, T1t);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_961570560, T1s, T1f);
            R0[WS(rs, 14)] = SIMD_FMADD(KP1_961570560, T1c, T15);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_847759065, T14, Td);
        }
    }
}

template <>
struct r2cb_traits<32, 18>
{
    static constexpr long_t flops           = 196;
    static constexpr long_t operations      = 135;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 18 -name
 * r2cb -standalone */

/*
 * This function contains 135 FP additions, 61 FP multiplications,
 * (or, 74 additions, 0 multiplications, 61 fused multiply/add),
 * 125 stack variables, 15 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 18>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tr, Ts, Tq, T14, T28, T29, T1a, T1r, T2f, T1P, T22, TB, TW,
            T17, T1U;
        SIMD_FLOAT T1u, T1Q, T1f, T2a, Tg, TH, TU, T9, T1i, T1w, Tm, T2g, TO,
            T2b, T1l;
        SIMD_FLOAT T1v, T1M, T20, T1C, T1D, T8, TF, T1K, T5, TG, Tk, Tl, TE,
            T1g, T1L;
        SIMD_FLOAT T1h, TK, T1j, Tj, TN, T1k, T4, T13, T1, T2, Tx, Ty, To, Tp,
            Tu;
        SIMD_FLOAT Tv, TX, Tn, T2h, TP, TV, T2i, T2c, T1R, T1m, T1V, T1x, TY,
            TS;
        T4  = Cr[WS(cs, 8)];
        T13 = Ci[WS(cs, 8)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 16)];
        Tr  = Cr[WS(cs, 10)];
        Ts  = Cr[WS(cs, 6)];
        Tx  = Ci[WS(cs, 10)];
        Ty  = Ci[WS(cs, 6)];
        To  = Cr[WS(cs, 2)];
        Tp  = Cr[WS(cs, 14)];
        Tu  = Ci[WS(cs, 2)];
        Tv  = Ci[WS(cs, 14)];
        {
            SIMD_FLOAT T1b, T1e, T16, T1t, Tf, T15, Tc, TI, T1s, TJ, Th, Ti, TL,
                TM, T1O;
            SIMD_FLOAT Tt, T1N, TA, Td, Te, T1c, T12, T3, T1p, T1d, T19, Tz,
                T18, T1q, Tw;
            SIMD_FLOAT T6, T7, Ta, Tb, TC, TD;
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            T1c = Cr[WS(cs, 4)];
            T12 = T1 - T2;
            T3  = T1 + T2;
            T1p = Tr - Ts;
            T1d = Cr[WS(cs, 12)];
            T19 = Tx + Ty;
            Tz  = Tx - Ty;
            T18 = To - Tp;
            Tq  = To + Tp;
            T1q = Tu + Tv;
            Tw  = Tu - Tv;
            T1b = T6 + T7;
            T8  = T6 - T7;
            TF  = Cr[WS(cs, 9)];
            T1K = SIMD_FMADD(KP2_000000000, T13, T12);
            T14 = SIMD_FNMADD(KP2_000000000, T13, T12);
            T28 = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            T1e = T1c - T1d;
            T29 = T1c + T1d;
            TG  = Cr[WS(cs, 7)];
            T1O = T18 + T19;
            T1a = T18 - T19;
            Tt  = Tq - (Tr + Ts);
            T1r = T1p + T1q;
            T1N = T1q - T1p;
            T2f = Tw + Tz;
            TA  = Tw - Tz;
            Td  = Ci[WS(cs, 9)];
            Te  = Ci[WS(cs, 7)];
            Ta  = Ci[WS(cs, 1)];
            Tb  = Ci[WS(cs, 15)];
            T16 = TF - TG;
            TC  = Cr[WS(cs, 1)];
            TD  = Cr[WS(cs, 15)];
            Tk  = Cr[WS(cs, 3)];
            T1P = SIMD_FNMADD(KP414213562, T1O, T1N);
            T22 = SIMD_FMADD(KP414213562, T1N, T1O);
            TB  = Tt + TA;
            TW  = Tt - TA;
            Tl  = Cr[WS(cs, 13)];
            T1t = Td + Te;
            Tf  = Td - Te;
            T15 = Ta + Tb;
            Tc  = Ta - Tb;
            TI  = Ci[WS(cs, 13)];
            TE  = TC + TD;
            T1s = TC - TD;
            TJ  = Ci[WS(cs, 3)];
            Th  = Cr[WS(cs, 5)];
            Ti  = Cr[WS(cs, 11)];
            TL  = Ci[WS(cs, 5)];
            T1g = Tk - Tl;
            TM  = Ci[WS(cs, 11)];
            T17 = T15 + T16;
            T1U = T15 - T16;
            T1u = T1s - T1t;
            T1Q = T1t + T1s;
            T1L = T1b + T1e;
            T1f = T1b - T1e;
            T1h = TI + TJ;
            TK  = TI - TJ;
            T1j = Th - Ti;
            Tj  = Th + Ti;
            TN  = TL - TM;
            T1k = TL + TM;
            T2a = Tc + Tf;
            Tg  = Tc - Tf;
            TH  = TE - (TF + TG);
        }
        TU  = SIMD_FNMADD(KP2_000000000, T8, T5);
        T9  = SIMD_FMADD(KP2_000000000, T8, T5);
        T1i = T1g + T1h;
        T1w = T1g - T1h;
        Tm  = Tj - (Tk + Tl);
        T2g = TE - (Tj - (TF + TG)) - (Tk + Tl);
        TO  = TK - TN;
        T2b = TK + TN;
        T1l = T1j + T1k;
        T1v = T1k - T1j;
        T1M = SIMD_FNMADD(KP1_414213562, T1L, T1K);
        T20 = SIMD_FMADD(KP1_414213562, T1L, T1K);
        T1C = SIMD_FMADD(KP1_414213562, T1f, T14);
        T1D = SIMD_FMADD(KP414213562, T1a, T1r);
        TX  = Tg + Tm;
        Tn  = Tg - Tm;
        T2h = SIMD_FMADD(KP707106781, T2g, T2f);
        TP  = TH - TO;
        TV  = TH + TO;
        T2i = T2a + T2b + T29 - (Tr + Ts) - Tq;
        T2c = T2a - T2b;
        T1R = T1i + T1l;
        T1m = T1i - T1l;
        T1V = T1w + T1v;
        T1x = T1v - T1w;
        TY  = SIMD_FMADD(KP541196100, TX, TW);
        TS  = SIMD_FMADD(KP541196100, Tn, TB);
        {
            SIMD_FLOAT T25, T1X, T1J, T1H, T1A, T27, T1Z, T10, TQ, T2d, T1E,
                T1n, T1S, T23, T1y;
            SIMD_FLOAT T1F, T1W, T21, TZ, TT, T11, TR, T2e, T1o, T24, T1T, T1G,
                T1I, T1z, T26;
            SIMD_FLOAT T1Y, T1B;
            T10            = SIMD_FNMADD(KP541196100, TV, TW);
            TQ             = SIMD_FMADD(KP541196100, TP, TB);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP2_000000000, T2i, T28);
            T2d            = SIMD_FNMADD(KP707106781, T2c, T29);
            T1E            = SIMD_FMADD(KP707106781, T1m, T17);
            T1n            = SIMD_FMADD(KP980785280, T1m, T1f);
            T1S            = SIMD_FNMADD(KP707106781, T1R, T1Q);
            T23            = SIMD_FMADD(KP707106781, T1R, T1Q);
            T1y            = SIMD_FNMADD(KP707106781, T1x, T1u);
            T1F            = SIMD_FMADD(KP707106781, T1x, T1u);
            T1W            = SIMD_FNMADD(KP707106781, T1V, T1U);
            T21            = SIMD_FMADD(KP707106781, T1V, T1U);
            TZ             = SIMD_FNMADD(KP765366864, TY, TV);
            TT             = SIMD_FMADD(KP765366864, TS, TP);
            T11            = SIMD_FNMADD(KP765366864, T10, TX);
            TR             = SIMD_FNMADD(KP765366864, TQ, Tn);
            T2e            = SIMD_FNMADD(KP2_000000000, T2d, T28);
            T1o            = SIMD_FMADD(KP765366864, T1n, T1a);
            T24            = SIMD_FMADD(KP211164242, T23, T22);
            T1T            = SIMD_FMADD(KP899976223, T1S, T1P);
            T1G            = SIMD_FNMADD(KP668178637, T1F, T1E);
            T1I            = SIMD_FMADD(KP668178637, T1E, T1F);
            T1z            = SIMD_FMADD(KP509795579, T1y, T1r);
            T26            = SIMD_FMADD(KP211164242, T21, T22);
            T1Y            = SIMD_FMADD(KP668178637, T1S, T1W);
            R0[0]          = SIMD_FNMADD(KP1_847759065, TZ, TU);
            R0[WS(rs, 12)] = SIMD_FMADD(KP1_847759065, TT, T9);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_847759065, T11, TU);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_847759065, TR, T9);
            R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T2h, T2e);
            R0[WS(rs, 2)]  = SIMD_FNMADD(KP2_000000000, T2h, T2e);
            T25            = SIMD_FNMADD(KP941979402, T24, T21);
            T1X            = SIMD_FNMADD(KP601344886, T1W, T1T);
            T1J            = SIMD_FMADD(KP899976223, T1I, T1D);
            T1H            = SIMD_FNMADD(KP899976223, T1G, T1D);
            T1A            = SIMD_FNMADD(KP414213562, T1z, T1o);
            T27            = SIMD_FMADD(KP941979402, T26, T23);
            T1Z            = SIMD_FMADD(KP899976223, T1Y, T1P);
            R0[WS(rs, 5)]  = SIMD_FMADD(KP1_961570560, T25, T20);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T1X, T1M);
            R0[WS(rs, 11)] = SIMD_FMADD(KP1_847759065, T1J, T1C);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_847759065, T1H, T1C);
            T1B            = SIMD_FNMADD(KP941979402, T1A, T17);
            R0[WS(rs, 13)] = SIMD_FMADD(KP1_961570560, T27, T20);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_847759065, T1Z, T1M);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP1_961570560, T1B, T14);
        }
    }
}

template <>
struct r2cb_traits<32, 19>
{
    static constexpr long_t flops           = 192;
    static constexpr long_t operations      = 132;
    static constexpr long_t memory_accesses = 45;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 16;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 19 -name
 * r2cb -standalone */

/*
 * This function contains 132 FP additions, 60 FP multiplications,
 * (or, 72 additions, 0 multiplications, 60 fused multiply/add),
 * 121 stack variables, 16 constants, and 45 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 19>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1B, T1d, T1j, T15, Td, T1o, T1f, T1i, T1l, T1x, T14, T12,
            T25, T1a, T1c;
        SIMD_FLOAT T1y, T1r, T1p, T1s, T1q;
        {
            SIMD_FLOAT Th, Ti, T27, T1C, T26, T5, T1K, Tc, T1e, T1O, T2d, T1m,
                Tz, TX, TG;
            SIMD_FLOAT TY, Tr, T1h, T1g, Tk, T2e, T28, T1I, T1S, T29, TZ, TN,
                T1U, T1F, T1L;
            SIMD_FLOAT T4, T1A, T1, T2, T2f;
            T4  = Ci[WS(cs, 8)];
            T1A = Cr[WS(cs, 8)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 16)];
            {
                SIMD_FLOAT TU, TV, T8, Tb, Tj, TW, T1H, Ty, T1N, Tq, Tg, T1M,
                    TA, TB, TH;
                SIMD_FLOAT Tn, TI, TK, T1T, Tv, T1G, TT, TC, TL, T1Q, TF, Tw,
                    Tx, To, T1z;
                SIMD_FLOAT T3, Tp, T6, T7, T9, Ta, Tl, Tm, Tt, Tu, Te, Tf, TR,
                    TS, TD;
                SIMD_FLOAT TE, T1E, TJ, TM, T1R;
                T6  = Cr[WS(cs, 4)];
                T7  = Cr[WS(cs, 12)];
                T9  = Ci[WS(cs, 4)];
                Ta  = Ci[WS(cs, 12)];
                Th  = Cr[WS(cs, 10)];
                Ti  = Cr[WS(cs, 6)];
                TU  = Cr[WS(cs, 9)];
                TV  = Cr[WS(cs, 7)];
                Tw  = Ci[WS(cs, 9)];
                Tx  = Ci[WS(cs, 7)];
                To  = Ci[WS(cs, 10)];
                T1z = T1 + T2;
                T3  = T1 - T2;
                T8  = T6 - T7;
                T27 = T6 + T7;
                Tp  = Ci[WS(cs, 6)];
                Tb  = T9 + Ta;
                T1C = T9 - Ta;
                Te  = Ci[WS(cs, 2)];
                Tj  = Th - Ti;
                Tf  = Ci[WS(cs, 14)];
                TW  = TU - TV;
                Tl  = Cr[WS(cs, 2)];
                T1H = Tw - Tx;
                Ty  = Tw + Tx;
                T1B = SIMD_FNMADD(KP2_000000000, T1A, T1z);
                T26 = SIMD_FMADD(KP2_000000000, T1A, T1z);
                T1d = SIMD_FNMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FMADD(KP2_000000000, T4, T3);
                T1N = To - Tp;
                Tq  = To + Tp;
                Tm  = Cr[WS(cs, 14)];
                Tg  = Te + Tf;
                T1M = Te - Tf;
                Tt  = Cr[WS(cs, 1)];
                Tu  = Cr[WS(cs, 15)];
                TR  = Ci[WS(cs, 1)];
                TS  = Ci[WS(cs, 15)];
                TA  = Cr[WS(cs, 5)];
                TB  = Cr[WS(cs, 11)];
                TD  = Ci[WS(cs, 5)];
                TE  = Ci[WS(cs, 11)];
                TH  = Cr[WS(cs, 3)];
                T1K = Tl + Tm;
                Tn  = Tl - Tm;
                TI  = Cr[WS(cs, 13)];
                TK  = Ci[WS(cs, 3)];
                T1T = Tt + Tu;
                Tv  = Tt - Tu;
                T1G = TR - TS;
                TT  = TR + TS;
                TC  = TA - TB;
                TL  = Ci[WS(cs, 13)];
                T1Q = TD - TE;
                TF  = TD + TE;
                Tc  = T8 + Tb;
                T1e = Tb - T8;
                T1O = T1M - T1N;
                T2d = T1M + T1N;
                T1E = TH + TI;
                TJ  = TH - TI;
                T1m = Tv - Ty;
                Tz  = Tv + Ty;
                T1j = TT + TW;
                TX  = TT - TW;
                TM  = TK + TL;
                T1R = TL - TK;
                TG  = TC + TF;
                TY  = TF - TC;
                Tr  = Tn + Tq;
                T1h = Tn - Tq;
                T1g = Tg + Tj;
                Tk  = Tg - Tj;
                T2e = T1T - (T1E - (TU + TV)) - (TA + TB);
                T28 = T1H + T1G;
                T1I = T1G - T1H;
                T1S = T1Q - T1R;
                T29 = T1Q + T1R;
                TZ  = TJ - TM;
                TN  = TJ + TM;
                T1U = T1T - (TU + TV);
                T1F = T1E - (TA + TB);
                T1L = T1K - (Th + Ti);
            }
            T2f = SIMD_FMADD(KP707106781, T2e, T2d);
            {
                SIMD_FLOAT T1D, T17, Ts, T1k, T1V, T1J, T1P, T20, T2b, T1v, T16,
                    T11, T1t, T18, TP;
                SIMD_FLOAT T23, T2g, T2a, T1n, T10, TO, T22, T1W, T1Y, T21, T2c,
                    T1w, T1u, T13, TQ;
                SIMD_FLOAT T24, T19, T1X, T1Z, T1b;
                T1D            = SIMD_FMADD(KP2_000000000, T1C, T1B);
                T17            = SIMD_FMADD(KP414213562, Tk, Tr);
                Ts             = SIMD_FNMADD(KP414213562, Tr, Tk);
                T2g            = T27 + T29 + T28 - T1K - (Th + Ti);
                T2a            = T28 - T29;
                T1n            = TY - TZ;
                T10            = TY + TZ;
                T1k            = TN - TG;
                TO             = TG + TN;
                T22            = T1U - T1S;
                T1V            = T1S + T1U;
                T1J            = T1F + T1I;
                T1P            = T1L + T1O;
                T20            = SIMD_FMADD(KP765366864, T1L, T1F);
                T15            = SIMD_FMADD(KP1_414213562, Tc, T5);
                Td             = SIMD_FNMADD(KP1_414213562, Tc, T5);
                R0[WS(rs, 5)]  = SIMD_FMADD(KP2_000000000, T2g, T26);
                T2b            = SIMD_FNMADD(KP707106781, T2a, T27);
                T1v            = SIMD_FNMADD(KP707106781, T1n, T1m);
                T1o            = SIMD_FMADD(KP707106781, T1n, T1m);
                T16            = SIMD_FMADD(KP707106781, T10, TX);
                T11            = SIMD_FNMADD(KP707106781, T10, TX);
                T1t            = SIMD_FMADD(KP980785280, T1k, T1e);
                T18            = SIMD_FMADD(KP707106781, TO, Tz);
                TP             = SIMD_FNMADD(KP707106781, TO, Tz);
                T23            = SIMD_FMADD(KP541196100, T22, T1O);
                T1W            = SIMD_FMADD(KP541196100, T1V, T1P);
                T1Y            = SIMD_FMADD(KP541196100, T1J, T1P);
                T21            = SIMD_FMADD(KP923879532, T20, T1C);
                T2c            = SIMD_FNMADD(KP2_000000000, T2b, T26);
                T1w            = SIMD_FMADD(KP509795579, T1v, T1g);
                T1f            = SIMD_FMADD(KP1_414213562, T1e, T1d);
                T1u            = SIMD_FMADD(KP765366864, T1t, T1h);
                T13            = SIMD_FMADD(KP668178637, TP, T11);
                TQ             = SIMD_FMADD(KP899976223, TP, Ts);
                T24            = SIMD_FMADD(KP765366864, T23, T1I);
                T19            = SIMD_FMADD(KP211164242, T18, T17);
                T1X            = SIMD_FNMADD(KP765366864, T1W, T1J);
                T1Z            = SIMD_FMADD(KP765366864, T1Y, T1V);
                T1i            = SIMD_FMADD(KP414213562, T1h, T1g);
                T1b            = SIMD_FMADD(KP211164242, T16, T17);
                R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, T2f, T2c);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP2_000000000, T2f, T2c);
                T1l            = SIMD_FMADD(KP707106781, T1k, T1j);
                T1x            = SIMD_FNMADD(KP414213562, T1w, T1u);
                T14            = SIMD_FMADD(KP899976223, T13, Ts);
                T12            = SIMD_FNMADD(KP601344886, T11, TQ);
                T25            = SIMD_FNMADD(KP923879532, T24, T21);
                T1a            = SIMD_FNMADD(KP941979402, T19, T16);
                R0[WS(rs, 3)]  = SIMD_FMADD(KP1_847759065, T1X, T1D);
                R0[WS(rs, 11)] = SIMD_FMADD(KP1_847759065, T1Z, T1D);
                T1c            = SIMD_FMADD(KP941979402, T1b, T18);
            }
        }
        T1y            = SIMD_FNMADD(KP941979402, T1x, T1j);
        R0[WS(rs, 8)]  = SIMD_FMADD(KP1_847759065, T14, Td);
        R0[0]          = SIMD_FNMADD(KP1_847759065, T12, Td);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, T25, T1B);
        R0[WS(rs, 4)]  = SIMD_FMADD(KP1_961570560, T1a, T15);
        T1r            = SIMD_FMADD(KP668178637, T1l, T1o);
        T1p            = SIMD_FNMADD(KP668178637, T1o, T1l);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_961570560, T1c, T15);
        R0[WS(rs, 6)]  = SIMD_FMADD(KP1_961570560, T1y, T1d);
        T1s            = SIMD_FMADD(KP899976223, T1r, T1i);
        T1q            = SIMD_FNMADD(KP899976223, T1p, T1i);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_847759065, T1s, T1f);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_847759065, T1q, T1f);
    }
}

template <>
struct r2cb_traits<32, 20>
{
    static constexpr long_t flops           = 186;
    static constexpr long_t operations      = 129;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 156;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 20 -name
 * r2cb -standalone */

/*
 * This function contains 129 FP additions, 57 FP multiplications,
 * (or, 72 additions, 0 multiplications, 57 fused multiply/add),
 * 156 stack variables, 18 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 20>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1v, TL, T1R, T1B, T1c, TQ, T26, TR, T1x, T1G, T12, T1p, T1k,
            T1A, T1O;
        SIMD_FLOAT T1n, T1D, T1M, T1l, T1r, T2b, T2d, T25, T1o, T1P, T1m, T1s,
            T1H, T1J, T1Q;
        SIMD_FLOAT T1t, T1K, T1I, T1u;
        {
            SIMD_FLOAT T19, T1a, T8, T1S, T5, T1U, TU, T1y, Tw, T1Z, T1w, T1z,
                T17, T10, T1i;
            SIMD_FLOAT T1g, T1E, Tf, T1Y, T21, Tm, T20, TH, T1h, TX, T1d, T1T,
                T1V, Tn, T4;
            SIMD_FLOAT TK, T1, T2, T2e, T29, T22, TI, T11, T1F, T1j, T1C, T27,
                T28, T1W, To;
            SIMD_FLOAT T23, T1N, T1L, T1q, T2a, T2c, T1X, Tp, T24;
            T4 = Cr[WS(cs, 8)];
            TK = Ci[WS(cs, 8)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 16)];
            {
                SIMD_FLOAT TF, TG, TM, TP, TT, T1b, T13, Tv, T1e, Te, Tb, TS,
                    TA, TB, Tj;
                SIMD_FLOAT T1f, Tz, Tk, TC, T18, Ts, T16, Ti, TY, TZ, TD, Tt,
                    Tu, Tc, TJ;
                SIMD_FLOAT T3, Td, T6, T7, TN, TO, Tx, Ty, Tq, Tr, T9, Ta, T14,
                    T15, Tg;
                SIMD_FLOAT Th, Tl, TW, TE, TV;
                T6  = Cr[WS(cs, 4)];
                T7  = Cr[WS(cs, 12)];
                TN  = Ci[WS(cs, 4)];
                TO  = Ci[WS(cs, 12)];
                TF  = Cr[WS(cs, 9)];
                TG  = Cr[WS(cs, 7)];
                T19 = Cr[WS(cs, 10)];
                T1a = Cr[WS(cs, 6)];
                Tt  = Ci[WS(cs, 10)];
                Tu  = Ci[WS(cs, 6)];
                Tc  = Ci[WS(cs, 9)];
                TJ  = T1 - T2;
                T3  = T1 + T2;
                TM  = T6 - T7;
                T8  = T6 + T7;
                Td  = Ci[WS(cs, 7)];
                TP  = TN + TO;
                T1S = TN - TO;
                T9  = Ci[WS(cs, 1)];
                TT  = TF - TG;
                Ta  = Ci[WS(cs, 15)];
                T1b = T19 - T1a;
                Tx  = Cr[WS(cs, 1)];
                T13 = Tt + Tu;
                Tv  = Tt - Tu;
                T1v = SIMD_FNMADD(KP2_000000000, TK, TJ);
                TL  = SIMD_FMADD(KP2_000000000, TK, TJ);
                T1R = SIMD_FNMADD(KP2_000000000, T4, T3);
                T5  = SIMD_FMADD(KP2_000000000, T4, T3);
                T1e = Tc + Td;
                Te  = Tc - Td;
                Ty  = Cr[WS(cs, 15)];
                Tb  = T9 - Ta;
                TS  = T9 + Ta;
                Tq  = Ci[WS(cs, 2)];
                Tr  = Ci[WS(cs, 14)];
                T14 = Cr[WS(cs, 2)];
                T15 = Cr[WS(cs, 14)];
                Tg  = Ci[WS(cs, 5)];
                Th  = Ci[WS(cs, 11)];
                TA  = Cr[WS(cs, 5)];
                TB  = Cr[WS(cs, 11)];
                Tj  = Ci[WS(cs, 13)];
                T1f = Tx - Ty;
                Tz  = Tx + Ty;
                Tk  = Ci[WS(cs, 3)];
                TC  = Cr[WS(cs, 3)];
                T18 = Tq + Tr;
                Ts  = Tq - Tr;
                T1U = T14 + T15;
                T16 = T14 - T15;
                Ti  = Tg - Th;
                TY  = Tg + Th;
                TZ  = TA - TB;
                TD  = Cr[WS(cs, 13)];
                T1B = TS + TT;
                TU  = TS - TT;
                Tl  = Tj - Tk;
                TW  = Tj + Tk;
                T1y = T18 + T1b;
                T1c = T18 - T1b;
                Tw  = Ts + Tv;
                T1Z = Ts - Tv;
                T1w = TP - TM;
                TQ  = TM + TP;
                T1z = T16 - T13;
                T17 = T13 + T16;
                T10 = TY - TZ;
                T1i = TY + TZ;
                TE  = TC + TD;
                TV  = TC - TD;
                T1g = T1e + T1f;
                T1E = T1f - T1e;
                Tf  = Tb + Te;
                T1Y = Tb - Te;
                T21 = Ti - Tl;
                Tm  = Ti + Tl;
                T20 = Tz - (TF + TG);
                TH  = Tz - (TA + TB) - (TE - (TF + TG));
                T1h = TW + TV;
                TX  = TV - TW;
                T1d = SIMD_FMADD(KP414213562, T1c, T17);
                T1T = TE - (TA + TB);
                T1V = T1U - (T19 + T1a);
                Tn  = Tf - Tm;
            }
            T2e           = T8 + Tf + Tm - (T19 + T1a) - T1U;
            T26           = SIMD_FMADD(KP2_000000000, T1S, T1R);
            T29           = T21 + T20;
            T22           = T20 - T21;
            TI            = SIMD_FMADD(KP707106781, TH, Tw);
            T11           = TX + T10;
            T1F           = T10 - TX;
            T1j           = T1h + T1i;
            T1C           = T1h - T1i;
            T27           = T1Y + T1T;
            T28           = T1Z + T1V;
            T1W           = SIMD_FMADD(KP765366864, T1V, T1T);
            To            = SIMD_FNMADD(KP707106781, Tn, T8);
            R0[WS(rs, 4)] = SIMD_FMADD(KP2_000000000, T2e, T5);
            TR            = SIMD_FMADD(KP1_414213562, TQ, TL);
            T23           = SIMD_FMADD(KP541196100, T22, T1Z);
            T1x           = SIMD_FMADD(KP1_414213562, T1w, T1v);
            T1G           = SIMD_FMADD(KP707106781, T1F, T1E);
            T1N           = SIMD_FNMADD(KP707106781, T1F, T1E);
            T12           = SIMD_FMADD(KP707106781, T11, TU);
            T1p           = SIMD_FNMADD(KP707106781, T11, TU);
            T1L           = SIMD_FMADD(KP980785280, T1C, T1w);
            T1q           = SIMD_FNMADD(KP707106781, T1j, T1g);
            T1k           = SIMD_FMADD(KP707106781, T1j, T1g);
            T2a           = SIMD_FMADD(KP541196100, T29, T28);
            T2c           = SIMD_FMADD(KP541196100, T27, T28);
            T1X           = SIMD_FMADD(KP923879532, T1W, T1S);
            Tp            = SIMD_FNMADD(KP2_000000000, To, T5);
            T24           = SIMD_FMADD(KP765366864, T23, T1Y);
            T1A           = SIMD_FMADD(KP414213562, T1z, T1y);
            T1O           = SIMD_FMADD(KP509795579, T1N, T1y);
            T1n           = SIMD_FMADD(KP211164242, T12, T1d);
            T1D           = SIMD_FMADD(KP707106781, T1C, T1B);
            T1M           = SIMD_FMADD(KP765366864, T1L, T1z);
            T1l           = SIMD_FMADD(KP211164242, T1k, T1d);
            T1r           = SIMD_FNMADD(KP688811980, T17, T1q);
            T2b           = SIMD_FNMADD(KP765366864, T2a, T27);
            T2d           = SIMD_FMADD(KP765366864, T2c, T29);
            R0[WS(rs, 8)] = SIMD_FMADD(KP2_000000000, TI, Tp);
            R0[0]         = SIMD_FNMADD(KP2_000000000, TI, Tp);
            T25           = SIMD_FNMADD(KP923879532, T24, T1X);
        }
        T1o            = SIMD_FMADD(KP941979402, T1n, T1k);
        T1P            = SIMD_FNMADD(KP414213562, T1O, T1M);
        T1m            = SIMD_FNMADD(KP941979402, T1l, T12);
        T1s            = SIMD_FNMADD(KP785694958, T1r, TQ);
        R0[WS(rs, 2)]  = SIMD_FMADD(KP1_847759065, T2b, T26);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_847759065, T2d, T26);
        T1H            = SIMD_FNMADD(KP668178637, T1G, T1D);
        T1J            = SIMD_FMADD(KP668178637, T1D, T1G);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, T25, T1R);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_961570560, T1o, TR);
        T1Q            = SIMD_FNMADD(KP941979402, T1P, T1B);
        R0[WS(rs, 3)]  = SIMD_FMADD(KP1_961570560, T1m, TR);
        T1t            = SIMD_FNMADD(KP850430094, T1s, T1p);
        T1K            = SIMD_FMADD(KP899976223, T1J, T1A);
        T1I            = SIMD_FNMADD(KP899976223, T1H, T1A);
        R0[WS(rs, 5)]  = SIMD_FMADD(KP1_961570560, T1Q, T1v);
        T1u            = SIMD_FMADD(KP899976223, T1t, T1c);
        R0[WS(rs, 9)]  = SIMD_FMADD(KP1_847759065, T1K, T1x);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_847759065, T1I, T1x);
        R0[WS(rs, 7)]  = SIMD_FMADD(KP1_847759065, T1u, TL);
    }
}

template <>
struct r2cb_traits<32, 21>
{
    static constexpr long_t flops           = 182;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 43;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 21 -name
 * r2cb -standalone */

/*
 * This function contains 128 FP additions, 54 FP multiplications,
 * (or, 74 additions, 0 multiplications, 54 fused multiply/add),
 * 121 stack variables, 18 constants, and 43 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 21>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1A, T1z, T24, T5, T1b, Tk, T1i, Tc, T1c, T1G, T1h, Tr, Tz,
            T1e, T29;
        SIMD_FLOAT T1k, TW, T1B, T1j, T1d, Td, Ts, T1T, T1H, T1f, TZ, TO, T1l,
            T1N, T1Y;
        SIMD_FLOAT T28, T2a, T21, Th, Ti, Tw, Tx, T25, TK, TL, T1L, T1R, T27,
            TX, TN;
        SIMD_FLOAT T1C, T26, T1Q, T1S, T1K, T1D, TG, TY, T1M, T4, T1y, T1, T2,
            T20;
        T4  = Ci[WS(cs, 8)];
        T1y = Cr[WS(cs, 8)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT T8, Tj, Tb, Ty, T1F, TV, Tq, T1J, Tg, T1I, TA, Tn, T1E,
                Tv, TB;
            SIMD_FLOAT TD, TS, T1O, TJ, TM, TE, T9, Ta, TT, TU, To, T1x, T3, Tp,
                T6;
            SIMD_FLOAT T7, Tl, Tm, Tt, Tu, Te, Tf, TQ, TR, TH, TI, T1P, TC, TF;
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            Th  = Cr[WS(cs, 10)];
            Ti  = Cr[WS(cs, 6)];
            T9  = Cr[WS(cs, 4)];
            Ta  = Cr[WS(cs, 12)];
            Tw  = Cr[WS(cs, 9)];
            Tx  = Cr[WS(cs, 7)];
            TT  = Ci[WS(cs, 9)];
            TU  = Ci[WS(cs, 7)];
            To  = Ci[WS(cs, 10)];
            T1x = T1 + T2;
            T3  = T1 - T2;
            T8  = T6 + T7;
            T1A = T6 - T7;
            Tp  = Ci[WS(cs, 6)];
            Tj  = Th - Ti;
            Te  = Ci[WS(cs, 2)];
            T25 = T9 + Ta;
            Tb  = T9 - Ta;
            Ty  = Tw - Tx;
            Tf  = Ci[WS(cs, 14)];
            T1F = TT - TU;
            TV  = TT + TU;
            T1z = SIMD_FNMADD(KP2_000000000, T1y, T1x);
            T24 = SIMD_FMADD(KP2_000000000, T1y, T1x);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            T1b = SIMD_FMADD(KP2_000000000, T4, T3);
            Tq  = To + Tp;
            T1J = To - Tp;
            Tl  = Cr[WS(cs, 2)];
            Tm  = Cr[WS(cs, 14)];
            Tt  = Ci[WS(cs, 1)];
            Tu  = Ci[WS(cs, 15)];
            Tg  = Te + Tf;
            T1I = Te - Tf;
            TQ  = Cr[WS(cs, 1)];
            TR  = Cr[WS(cs, 15)];
            TH  = Ci[WS(cs, 5)];
            TI  = Ci[WS(cs, 11)];
            TK  = Cr[WS(cs, 5)];
            TL  = Cr[WS(cs, 11)];
            TA  = Ci[WS(cs, 3)];
            T1L = Tl + Tm;
            Tn  = Tl - Tm;
            T1E = Tt - Tu;
            Tv  = Tt + Tu;
            TB  = Ci[WS(cs, 13)];
            TD  = Cr[WS(cs, 3)];
            T1R = TQ + TR;
            TS  = TQ - TR;
            T1O = TH - TI;
            TJ  = TH + TI;
            TM  = TK - TL;
            TE  = Cr[WS(cs, 13)];
            Tk  = Tg + Tj;
            T1i = Tg - Tj;
            Tc  = T8 - Tb;
            T1c = T8 + Tb;
            T27 = T1E + T1F;
            T1G = T1E - T1F;
            T1h = Tn + Tq;
            Tr  = Tn - Tq;
            T1P = TB - TA;
            TC  = TA + TB;
            Tz  = Tv + Ty;
            T1e = Tv - Ty;
            T29 = T1J + T1I - T25;
            TX  = TJ - TM;
            TN  = TJ + TM;
            T1C = TD + TE;
            TF  = TD - TE;
            T26 = T1P + T1O;
            T1Q = T1O - T1P;
            T1k = TS + TV;
            TW  = TS - TV;
            T1S = T1R - (Tw + Tx);
            T1K = T1I - T1J;
            T1D = T1C - (TK + TL);
            TG  = TC + TF;
            TY  = TF - TC;
            T1M = T1L - (Th + Ti);
        }
        T1B = SIMD_FMADD(KP2_000000000, T1A, T1z);
        T1j = SIMD_FMADD(KP414213562, T1i, T1h);
        T1d = SIMD_FMADD(KP1_414213562, T1c, T1b);
        Td  = SIMD_FMADD(KP1_414213562, Tc, T5);
        Ts  = SIMD_FMADD(KP414213562, Tr, Tk);
        T1T = T1Q + T1S;
        T20 = T1S - T1Q;
        T1H = T1D + T1G;
        T1f = TY + TX;
        TZ  = TX - TY;
        TO  = TG - TN;
        T1l = TG + TN;
        T1N = T1K + T1M;
        T1Y = SIMD_FMADD(KP765366864, T1M, T1D);
        T28 = T25 + T26 + T27 - (Th + Ti) - T1L;
        T2a = (T1R - (TK + TL) - (T1C - (Tw + Tx))) + (T27 - T26);
        T21 = SIMD_FMADD(KP541196100, T20, T1K);
        {
            SIMD_FLOAT T1g, T1r, T1m, T1Z, T2b, T22, T18, T1p, T1n, T1t, T13,
                T11, T16, T1V, T1X;
            SIMD_FLOAT T10, T17, T1s, TP, T15, T1U, T1W, T23, T1q, T1o, T1u,
                T14, T12, T19, T1v;
            SIMD_FLOAT T1a, T1w;
            T10            = SIMD_FMADD(KP707106781, TZ, TW);
            T17            = SIMD_FNMADD(KP707106781, TZ, TW);
            T1g            = SIMD_FMADD(KP707106781, T1f, T1e);
            T1r            = SIMD_FNMADD(KP707106781, T1f, T1e);
            T1m            = SIMD_FMADD(KP707106781, T1l, T1k);
            T1s            = SIMD_FNMADD(KP707106781, T1l, T1k);
            TP             = SIMD_FMADD(KP707106781, TO, Tz);
            T15            = SIMD_FMADD(KP980785280, TO, Tc);
            T1U            = SIMD_FMADD(KP541196100, T1T, T1N);
            T1W            = SIMD_FMADD(KP541196100, T1H, T1N);
            T1Z            = SIMD_FMADD(KP923879532, T1Y, T1A);
            R0[WS(rs, 3)]  = SIMD_FMADD(KP2_000000000, T28, T24);
            T2b            = SIMD_FMADD(KP707106781, T2a, T29);
            T22            = SIMD_FMADD(KP765366864, T21, T1G);
            T18            = SIMD_FMADD(KP509795579, T17, Tk);
            T1p            = SIMD_FMADD(KP211164242, T1g, T1j);
            T1n            = SIMD_FMADD(KP211164242, T1m, T1j);
            T1t            = SIMD_FNMADD(KP688811980, T1h, T1s);
            T13            = SIMD_FMADD(KP668178637, TP, T10);
            T11            = SIMD_FNMADD(KP668178637, T10, TP);
            T16            = SIMD_FMADD(KP765366864, T15, Tr);
            T1V            = SIMD_FNMADD(KP765366864, T1U, T1H);
            T1X            = SIMD_FMADD(KP765366864, T1W, T1T);
            R0[WS(rs, 7)]  = SIMD_FMADD(KP2_000000000, T2b, T24);
            T23            = SIMD_FNMADD(KP923879532, T22, T1Z);
            T1q            = SIMD_FMADD(KP941979402, T1p, T1m);
            T1o            = SIMD_FNMADD(KP941979402, T1n, T1g);
            T1u            = SIMD_FNMADD(KP785694958, T1t, T1c);
            T14            = SIMD_FMADD(KP899976223, T13, Ts);
            T12            = SIMD_FNMADD(KP899976223, T11, Ts);
            T19            = SIMD_FNMADD(KP414213562, T18, T16);
            R0[WS(rs, 1)]  = SIMD_FMADD(KP1_847759065, T1V, T1B);
            R0[WS(rs, 9)]  = SIMD_FMADD(KP1_847759065, T1X, T1B);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP2_000000000, T23, T1z);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_961570560, T1q, T1d);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_961570560, T1o, T1d);
            T1v            = SIMD_FNMADD(KP850430094, T1u, T1r);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_847759065, T14, Td);
            R0[0]          = SIMD_FNMADD(KP1_847759065, T12, Td);
            T1a            = SIMD_FNMADD(KP941979402, T19, Tz);
            T1w            = SIMD_FMADD(KP899976223, T1v, T1i);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_961570560, T1a, T5);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_847759065, T1w, T1b);
        }
    }
}

template <>
struct r2cb_traits<32, 22>
{
    static constexpr long_t flops           = 176;
    static constexpr long_t operations      = 125;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 119;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 22 -name
 * r2cb -standalone */

/*
 * This function contains 125 FP additions, 51 FP multiplications,
 * (or, 74 additions, 0 multiplications, 51 fused multiply/add),
 * 119 stack variables, 19 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 22>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T8, T12, T1I, T22, T5, T1l, T1L, T1v, T1R, Tt, T1O, T18, T1K,
            T1o, T24;
        SIMD_FLOAT T15, T1J, TA, T1C, TS, T1A, TV, TO, T27, T29, T1M, T1f, T1P,
            T1r, TT;
        SIMD_FLOAT TU, Tl, Ti, Tj, TE, TF, Th, Tc, Td, T23, TD, Tb, T25, T1b,
            T1p;
        SIMD_FLOAT TG, TN, T26, T1e, T1q, Te, Tk, T4, T11, T1, T2;
        T4  = Cr[WS(cs, 8)];
        T11 = Ci[WS(cs, 8)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT T1h, T14, T17, T1u, Tz, T1t, Tw, T13, Tp, T16, T9, T1k,
                Ta, TK, T1m;
            SIMD_FLOAT Ts, T1n, T1a, TL, T19, TJ, T6, T7, Tx, Ty, Tf, Tg, Tn,
                To, T1i;
            SIMD_FLOAT T1j, Tu, T10, T3, Tv, Tq, Tr, TB, TC, TH, TI, T1c, TM,
                T1d;
            T6  = Ci[WS(cs, 4)];
            T7  = Ci[WS(cs, 12)];
            Ti  = Cr[WS(cs, 10)];
            Tj  = Cr[WS(cs, 6)];
            TE  = Cr[WS(cs, 9)];
            TF  = Cr[WS(cs, 7)];
            Tx  = Ci[WS(cs, 10)];
            Ty  = Ci[WS(cs, 6)];
            Tf  = Cr[WS(cs, 2)];
            Tg  = Cr[WS(cs, 14)];
            Tu  = Ci[WS(cs, 2)];
            T10 = T1 - T2;
            T3  = T1 + T2;
            T1h = T6 + T7;
            T8  = T6 - T7;
            Tv  = Ci[WS(cs, 14)];
            T14 = Ti - Tj;
            Tn  = Ci[WS(cs, 1)];
            T17 = TE - TF;
            To  = Ci[WS(cs, 15)];
            T1u = Tx + Ty;
            Tz  = Tx - Ty;
            T1t = Tf - Tg;
            Th  = Tf + Tg;
            T12 = SIMD_FMADD(KP2_000000000, T11, T10);
            T1I = SIMD_FNMADD(KP2_000000000, T11, T10);
            T22 = SIMD_FMADD(KP2_000000000, T4, T3);
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            T1i = Cr[WS(cs, 4)];
            Tw  = Tu - Tv;
            T13 = Tu + Tv;
            T1j = Cr[WS(cs, 12)];
            Tq  = Ci[WS(cs, 9)];
            Tp  = Tn - To;
            T16 = Tn + To;
            Tr  = Ci[WS(cs, 7)];
            TB  = Cr[WS(cs, 1)];
            TC  = Cr[WS(cs, 15)];
            Tc  = Cr[WS(cs, 5)];
            Td  = Cr[WS(cs, 11)];
            TH  = Ci[WS(cs, 5)];
            TI  = Ci[WS(cs, 11)];
            T9  = Cr[WS(cs, 3)];
            T1k = T1i - T1j;
            T23 = T1i + T1j;
            Ta  = Cr[WS(cs, 13)];
            TK  = Ci[WS(cs, 13)];
            T1m = Tq + Tr;
            Ts  = Tq - Tr;
            T1n = TB - TC;
            TD  = TB + TC;
            T1a = Tc - Td;
            TL  = Ci[WS(cs, 3)];
            T19 = TH + TI;
            TJ  = TH - TI;
            T1l = T1h + T1k;
            T1L = T1k - T1h;
            T1c = T9 - Ta;
            Tb  = T9 + Ta;
            T1v = T1t + T1u;
            T1R = T1t - T1u;
            T25 = Tp + Ts;
            Tt  = Tp - Ts;
            T1O = T16 + T17;
            T18 = T16 - T17;
            T1K = T1n - T1m;
            T1o = T1m + T1n;
            T24 = Tw + Tz - T23;
            TM  = TK - TL;
            T1d = TK + TL;
            T1b = T19 - T1a;
            T1p = T1a + T19;
            T15 = T13 - T14;
            T1J = T14 + T13;
            TG  = TD - (TE + TF);
            TN  = TJ - TM;
            T26 = TJ + TM;
            T1e = T1c - T1d;
            T1q = T1c + T1d;
            TA  = Tw - Tz;
            T1C = SIMD_FMADD(KP414213562, T15, T1v);
            Te  = Tb - (Tc + Td);
            Tk  = Th - (Ti + Tj);
        }
        TS  = SIMD_FMADD(KP2_000000000, T8, T5);
        T1A = SIMD_FMADD(KP1_414213562, T1l, T12);
        TV  = TG + TN;
        TO  = TG - TN;
        T27 = (TD - (Tb - (TE + TF)) - (Tc + Td)) + (T25 - T26);
        T29 = T25 + T26 + T23 - (Ti + Tj) - Th;
        T1M = T1e - T1b;
        T1f = T1b + T1e;
        T1P = T1p - T1q;
        T1r = T1p + T1q;
        TT  = Te + Tt;
        TU  = Tk + TA;
        Tl  = SIMD_FMADD(KP765366864, Tk, Te);
        {
            SIMD_FLOAT T1N, T1W, T1B, T1g, T1Q, T1s, T1D, TW, TY, Tm, TQ, TP,
                T28, T1X, T1G;
            SIMD_FLOAT T1S, T1E, T1w, TX, TZ, TR, T1Y, T1H, T1T, T1F, T1x, T1Z,
                T1U, T1y, T20;
            SIMD_FLOAT T1V, T1z, T21;
            TP            = SIMD_FMADD(KP541196100, TO, TA);
            T28           = SIMD_FMADD(KP707106781, T27, T24);
            R0[WS(rs, 2)] = SIMD_FMADD(KP2_000000000, T29, T22);
            T1N           = SIMD_FMADD(KP831469612, T1M, T1L);
            T1W           = SIMD_FMADD(KP707106781, T1M, T1K);
            T1B           = SIMD_FMADD(KP707106781, T1f, T18);
            T1g           = SIMD_FNMADD(KP707106781, T1f, T18);
            T1Q           = SIMD_FNMADD(KP707106781, T1P, T1O);
            T1s           = SIMD_FNMADD(KP707106781, T1r, T1o);
            T1D           = SIMD_FMADD(KP707106781, T1r, T1o);
            TW            = SIMD_FMADD(KP541196100, TV, TU);
            TY            = SIMD_FMADD(KP541196100, TT, TU);
            Tm            = SIMD_FMADD(KP923879532, Tl, T8);
            TQ            = SIMD_FMADD(KP765366864, TP, Tt);
            R0[WS(rs, 6)] = SIMD_FMADD(KP2_000000000, T28, T22);
            T1X           = SIMD_FMADD(KP509795579, T1W, T1J);
            T1G           = SIMD_FMADD(KP211164242, T1B, T1C);
            T1S           = SIMD_FMADD(KP688811980, T1R, T1Q);
            T1E           = SIMD_FMADD(KP211164242, T1D, T1C);
            T1w           = SIMD_FNMADD(KP688811980, T1v, T1s);
            TX            = SIMD_FNMADD(KP765366864, TW, TT);
            TZ            = SIMD_FMADD(KP765366864, TY, TV);
            TR            = SIMD_FNMADD(KP923879532, TQ, Tm);
            T1Y           = SIMD_FMADD(KP551798758, T1X, T1P);
            T1H           = SIMD_FMADD(KP941979402, T1G, T1D);
            T1T           = SIMD_FNMADD(KP785694958, T1S, T1N);
            T1F           = SIMD_FNMADD(KP941979402, T1E, T1B);
            T1x           = SIMD_FNMADD(KP785694958, T1w, T1l);
            R0[0]         = SIMD_FMADD(KP1_847759065, TX, TS);
            R0[WS(rs, 8)] = SIMD_FMADD(KP1_847759065, TZ, TS);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP2_000000000, TR, T5);
            T1Z           = SIMD_FMADD(KP980785280, T1Y, T1L);
            R0[WS(rs, 9)] = SIMD_FMADD(KP1_961570560, T1H, T1A);
            T1U           = SIMD_FNMADD(KP850430094, T1T, T1K);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_961570560, T1F, T1A);
            T1y           = SIMD_FNMADD(KP850430094, T1x, T1g);
            T20           = SIMD_FNMADD(KP765366864, T1Z, T1R);
            T1V           = SIMD_FMADD(KP899976223, T1U, T1J);
            T1z           = SIMD_FMADD(KP899976223, T1y, T15);
            T21           = SIMD_FNMADD(KP941979402, T20, T1O);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_847759065, T1V, T1I);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_847759065, T1z, T12);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_961570560, T21, T1I);
        }
    }
}

template <>
struct r2cb_traits<32, 23>
{
    static constexpr long_t flops           = 166;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 41;
    static constexpr long_t stack_vars      = 147;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 23 -name
 * r2cb -standalone */

/*
 * This function contains 120 FP additions, 46 FP multiplications,
 * (or, 74 additions, 0 multiplications, 46 fused multiply/add),
 * 147 stack variables, 18 constants, and 41 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 23>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP211164242, +0.211164242902788744847152086955177353211872654);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T5, T19, Tj, T1f, T1a, Tq, Tc, T1c, T1i, TT, T23, T1g, TM,
            T1b, T1h;
        SIMD_FLOAT T1F, T1Y, T1R, T1U, T1d, TW, TF, T1j, T1L, T1V, T1B, T22,
            T24, T1w, T9;
        SIMD_FLOAT Ta, TJ, TK, T1v, T1C, T1Z, T1D, Ty, Tz, T1P, T1z, T21, T1K,
            T1G, T1E;
        SIMD_FLOAT TE, TU, T20, T1O, T1Q, TV, Tx, T1H, T4, T1, T2, T1A, T13, TX,
            T1p;
        SIMD_FLOAT T1e, T1q, T1k, T14, T1W, T1S, T25, TY, T1n, T1l, T1r, T15,
            T1X, T1T, TZ;
        SIMD_FLOAT T1o, T1m, T1s, T16, T10, T1t, T17, T11, T1u, T18, T12;
        T1w = Cr[WS(cs, 8)];
        T4  = Ci[WS(cs, 8)];
        T1  = Cr[0];
        T2  = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT Tb, Tp, TL, T1y, Ti, Tm, TI, T1x, Tf, TB, T1I, T8, TC,
                Tr, TP;
            SIMD_FLOAT Ts, Tu, T1J, TS, TA, Tv, Tn, To, Tg, Th, Tk, Tl, Td, Te,
                T6;
            SIMD_FLOAT T7, TG, T3, TH, TN, TO, TQ, TR, T1M, TD, T1N, Tt, Tw;
            T9  = Cr[WS(cs, 9)];
            Ta  = Cr[WS(cs, 7)];
            Tn  = Ci[WS(cs, 4)];
            To  = Ci[WS(cs, 12)];
            TJ  = Cr[WS(cs, 10)];
            TK  = Cr[WS(cs, 6)];
            Tg  = Ci[WS(cs, 10)];
            Th  = Ci[WS(cs, 6)];
            Tk  = Cr[WS(cs, 4)];
            Tl  = Cr[WS(cs, 12)];
            TG  = Ci[WS(cs, 2)];
            T1v = T1 + T2;
            T3  = T1 - T2;
            Tb  = T9 - Ta;
            TH  = Ci[WS(cs, 14)];
            Tp  = Tn + To;
            T1C = Tn - To;
            Td  = Cr[WS(cs, 2)];
            TL  = TJ - TK;
            Te  = Cr[WS(cs, 14)];
            T1y = Tg - Th;
            Ti  = Tg + Th;
            T1Z = Tk + Tl;
            Tm  = Tk - Tl;
            T6  = Ci[WS(cs, 1)];
            T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
            T19 = SIMD_FMADD(KP2_000000000, T4, T3);
            T7  = Ci[WS(cs, 15)];
            TI  = TG + TH;
            T1x = TG - TH;
            TN  = Cr[WS(cs, 1)];
            TO  = Cr[WS(cs, 15)];
            Tf  = Td - Te;
            T1D = Td + Te;
            TQ  = Ci[WS(cs, 9)];
            TR  = Ci[WS(cs, 7)];
            Ty  = Cr[WS(cs, 3)];
            Tz  = Cr[WS(cs, 13)];
            TB  = Ci[WS(cs, 3)];
            T1I = T6 - T7;
            T8  = T6 + T7;
            TC  = Ci[WS(cs, 13)];
            Tr  = Ci[WS(cs, 5)];
            T1P = TN + TO;
            TP  = TN - TO;
            Ts  = Ci[WS(cs, 11)];
            Tu  = Cr[WS(cs, 5)];
            T1J = TQ - TR;
            TS  = TQ + TR;
            TA  = Ty - Tz;
            Tv  = Cr[WS(cs, 11)];
            Tj  = Tf - Ti;
            T1f = Tf + Ti;
            T1z = T1x - T1y;
            T1M = TC - TB;
            TD  = TB + TC;
            T1a = Tm + Tp;
            Tq  = Tm - Tp;
            Tc  = T8 + Tb;
            T1c = T8 - Tb;
            T1N = Tr - Ts;
            Tt  = Tr + Ts;
            T21 = T1I + T1J;
            T1K = T1I - T1J;
            T1i = TP + TS;
            TT  = TP - TS;
            Tw  = Tu - Tv;
            T1G = Tu + Tv;
            T1E = T1D - (TJ + TK);
            T23 = T1y + T1x - T1Z;
            TE  = TA + TD;
            TU  = TA - TD;
            T20 = T1N + T1M;
            T1O = T1M - T1N;
            T1g = TI - TL;
            TM  = TI + TL;
            T1Q = T1P - (T9 + Ta);
            TV  = Tt - Tw;
            Tx  = Tt + Tw;
            T1H = T1G - (Ty + Tz);
        }
        T1b           = SIMD_FMADD(KP1_414213562, T1a, T19);
        T1A           = SIMD_FMSUB(KP707106781, T1z, T1w);
        T1h           = SIMD_FMADD(KP414213562, T1g, T1f);
        T1F           = SIMD_FMADD(KP707106781, T1E, T1C);
        T1Y           = SIMD_FMADD(KP2_000000000, T1w, T1v);
        T1R           = T1O + T1Q;
        T1U           = T1Q - T1O;
        T1d           = TV + TU;
        TW            = TU - TV;
        TF            = Tx - TE;
        T1j           = Tx + TE;
        T1L           = T1H + T1K;
        T1V           = T1K - T1H;
        T1B           = SIMD_FMADD(KP2_000000000, T1A, T1v);
        T22           = T1Z + T20 + T21 - (TJ + TK) - T1D;
        T24           = (T1P - (Ty + Tz) - (T1G - (T9 + Ta))) + (T21 - T20);
        T13           = SIMD_FMADD(KP831469612, TW, Tq);
        TX            = SIMD_FMADD(KP707106781, TW, TT);
        T1p           = SIMD_FNMADD(KP707106781, T1d, T1c);
        T1e           = SIMD_FMADD(KP707106781, T1d, T1c);
        T1q           = SIMD_FNMADD(KP707106781, T1j, T1i);
        T1k           = SIMD_FMADD(KP707106781, T1j, T1i);
        T14           = SIMD_FNMADD(KP707106781, TF, Tc);
        T1W           = SIMD_FMADD(KP414213562, T1V, T1U);
        T1S           = SIMD_FMADD(KP414213562, T1R, T1L);
        R0[WS(rs, 1)] = SIMD_FMADD(KP2_000000000, T22, T1Y);
        T25           = SIMD_FMADD(KP707106781, T24, T23);
        TY            = SIMD_FMADD(KP509795579, TX, TM);
        T1n           = SIMD_FMADD(KP211164242, T1e, T1h);
        T1l           = SIMD_FMADD(KP211164242, T1k, T1h);
        T1r           = SIMD_FNMADD(KP688811980, T1f, T1q);
        T15           = SIMD_FMADD(KP688811980, Tj, T14);
        T1X           = SIMD_FMADD(KP923879532, T1W, T1F);
        T1T           = SIMD_FNMADD(KP923879532, T1S, T1F);
        R0[WS(rs, 5)] = SIMD_FMADD(KP2_000000000, T25, T1Y);
        TZ            = SIMD_FMADD(KP551798758, TY, TF);
        T1o           = SIMD_FMADD(KP941979402, T1n, T1k);
        T1m           = SIMD_FNMADD(KP941979402, T1l, T1e);
        T1s           = SIMD_FNMADD(KP785694958, T1r, T1a);
        T16           = SIMD_FNMADD(KP785694958, T15, T13);
        R0[WS(rs, 7)] = SIMD_FMADD(KP2_000000000, T1X, T1B);
        R0[WS(rs, 3)] = SIMD_FNMADD(KP2_000000000, T1T, T1B);
        T10           = SIMD_FMADD(KP980785280, TZ, Tq);
        R0[WS(rs, 8)] = SIMD_FMADD(KP1_961570560, T1o, T1b);
        R0[0]         = SIMD_FMADD(KP1_961570560, T1m, T1b);
        T1t           = SIMD_FNMADD(KP850430094, T1s, T1p);
        T17           = SIMD_FNMADD(KP850430094, T16, TT);
        T11           = SIMD_FNMADD(KP765366864, T10, Tj);
        T1u           = SIMD_FMADD(KP899976223, T1t, T1g);
        T18           = SIMD_FMADD(KP899976223, T17, TM);
        T12           = SIMD_FNMADD(KP941979402, T11, Tc);
        R0[WS(rs, 4)] = SIMD_FMADD(KP1_847759065, T1u, T19);
        R0[WS(rs, 6)] = SIMD_FMADD(KP1_847759065, T18, T5);
        R0[WS(rs, 2)] = SIMD_FMADD(KP1_961570560, T12, T5);
    }
}

template <>
struct r2cb_traits<32, 24>
{
    static constexpr long_t flops           = 160;
    static constexpr long_t operations      = 117;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 144;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 24 -name
 * r2cb -standalone */

/*
 * This function contains 117 FP additions, 43 FP multiplications,
 * (or, 74 additions, 0 multiplications, 43 fused multiply/add),
 * 144 stack variables, 17 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 24>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1n, TA, TK, T1o, T1t, TF, T1q, T15, T21, T1m, T10, T1M, T5,
            T1X, T1U;
        SIMD_FLOAT Ts, T1p, T18, TV, T1r, T1Q, T1Y, T1J, T22, T1l, Tv, T1f, T19,
            T1z, T1s;
        SIMD_FLOAT T1g, T1Z, T1V, T23, T1a, T1A, T1u, T1h, T20, T1W, T1b, T1B,
            T1v, T1i, T1c;
        SIMD_FLOAT T1C, T1w, T1j, T1d, T1D, T1x, T1k, T1e, T1E, T1y;
        {
            SIMD_FLOAT T4, Tu, Tq, Tr, Tt, T3, T1K, T8, Tp, Tx, Ty, TR, TS, T1S,
                TU;
            SIMD_FLOAT T17, Tf, T1N, T1O, T1H, T1L, Tm, T1R, T1T, TP, T16, T1P,
                T1, T2, T1I;
            T4 = Cr[WS(cs, 8)];
            Tu = Ci[WS(cs, 8)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 16)];
            {
                SIMD_FLOAT TW, T1G, TE, TJ, TG, TB, TZ, T1F, T11, Tb, Tw, Tz,
                    T12, Tg, Th;
                SIMD_FLOAT Tl, TQ, TT, TM, Te, T14, TN, TC, TD, TH, TI, T6, T7,
                    Tn, To;
                SIMD_FLOAT T9, Ta, TX, TY, Tj, Tk, Tc, Td, T13, TL, Ti, TO;
                Tq  = Cr[WS(cs, 10)];
                Tr  = Cr[WS(cs, 6)];
                TC  = Ci[WS(cs, 10)];
                TD  = Ci[WS(cs, 6)];
                TH  = Ci[WS(cs, 4)];
                TI  = Ci[WS(cs, 12)];
                T6  = Cr[WS(cs, 4)];
                T7  = Cr[WS(cs, 12)];
                Tn  = Cr[WS(cs, 2)];
                To  = Cr[WS(cs, 14)];
                TX  = Ci[WS(cs, 2)];
                Tt  = T1 - T2;
                T3  = T1 + T2;
                TW  = Tq - Tr;
                TY  = Ci[WS(cs, 14)];
                T1G = TC - TD;
                TE  = TC + TD;
                TJ  = TH + TI;
                T1K = TH - TI;
                T9  = Ci[WS(cs, 1)];
                TG  = T6 - T7;
                T8  = T6 + T7;
                TB  = Tn - To;
                Tp  = Tn + To;
                Ta  = Ci[WS(cs, 15)];
                Tx  = Cr[WS(cs, 9)];
                Ty  = Cr[WS(cs, 7)];
                TZ  = TX + TY;
                T1F = TX - TY;
                Tj  = Ci[WS(cs, 13)];
                Tk  = Ci[WS(cs, 3)];
                TR  = Cr[WS(cs, 3)];
                TS  = Cr[WS(cs, 13)];
                Tc  = Ci[WS(cs, 9)];
                Td  = Ci[WS(cs, 7)];
                T11 = Cr[WS(cs, 1)];
                Tb  = T9 - Ta;
                Tw  = T9 + Ta;
                Tz  = Tx - Ty;
                T12 = Cr[WS(cs, 15)];
                Tg  = Ci[WS(cs, 5)];
                Th  = Ci[WS(cs, 11)];
                Tl  = Tj - Tk;
                TQ  = Tj + Tk;
                TT  = TR - TS;
                TM  = Cr[WS(cs, 5)];
                Te  = Tc - Td;
                T14 = Tc + Td;
                TN  = Cr[WS(cs, 11)];
                T1n = Tw - Tz;
                TA  = Tw + Tz;
                T13 = T11 - T12;
                T1S = T11 + T12;
                TL  = Tg + Th;
                Ti  = Tg - Th;
                TK  = TG - TJ;
                T1o = TG + TJ;
                TU  = TQ + TT;
                T17 = TT - TQ;
                Tf  = Tb + Te;
                T1N = Tb - Te;
                T1t = TB + TE;
                TF  = TB - TE;
                T1O = TM + TN;
                TO  = TM - TN;
                T1H = T1F - T1G;
                T1L = Tp - (Tq + Tr);
                T1q = T14 + T13;
                T15 = T13 - T14;
                Tm  = Ti + Tl;
                T1R = Tl - Ti;
                T21 = T1F + T1G - T8;
                T1T = T1S - (Tx + Ty);
                TP  = TL + TO;
                T16 = TO - TL;
                T1P = T1O - (TR + TS);
                T1m = TZ - TW;
                T10 = TW + TZ;
            }
            T1I = SIMD_FMSUB(KP707106781, T1H, T4);
            T1M = SIMD_FMADD(KP707106781, T1L, T1K);
            T5  = SIMD_FMADD(KP2_000000000, T4, T3);
            T1X = T1T - T1R;
            T1U = T1R + T1T;
            Ts  = T8 + Tf + Tm - Tp - (Tq + Tr);
            T1p = T16 - T17;
            T18 = T16 + T17;
            TV  = TP - TU;
            T1r = TP + TU;
            T1Q = T1N + T1P;
            T1Y = T1N - T1P;
            T1J = SIMD_FMADD(KP2_000000000, T1I, T3);
            T22 = (Tf - Tm) + (T1S - (TR + TS) - (T1O - (Tx + Ty)));
            T1l = SIMD_FMADD(KP2_000000000, Tu, Tt);
            Tv  = SIMD_FNMADD(KP2_000000000, Tu, Tt);
        }
        R0[0]         = SIMD_FMADD(KP2_000000000, Ts, T5);
        T1f           = SIMD_FMADD(KP831469612, T18, TK);
        T19           = SIMD_FMADD(KP707106781, T18, T15);
        T1z           = SIMD_FNMADD(KP707106781, T1p, T1n);
        T1s           = SIMD_FNMADD(KP707106781, T1r, T1q);
        T1g           = SIMD_FNMADD(KP707106781, TV, TA);
        T1Z           = SIMD_FMADD(KP414213562, T1Y, T1X);
        T1V           = SIMD_FMADD(KP414213562, T1U, T1Q);
        T23           = SIMD_FMADD(KP707106781, T22, T21);
        T1a           = SIMD_FMADD(KP509795579, T19, T10);
        T1A           = SIMD_FMADD(KP509795579, T1z, T1m);
        T1u           = SIMD_FNMADD(KP688811980, T1t, T1s);
        T1h           = SIMD_FMADD(KP688811980, TF, T1g);
        T20           = SIMD_FMADD(KP923879532, T1Z, T1M);
        T1W           = SIMD_FNMADD(KP923879532, T1V, T1M);
        R0[WS(rs, 4)] = SIMD_FMADD(KP2_000000000, T23, T5);
        T1b           = SIMD_FMADD(KP551798758, T1a, TV);
        T1B           = SIMD_FMADD(KP551798758, T1A, T1r);
        T1v           = SIMD_FMADD(KP944947291, T1u, T1p);
        T1i           = SIMD_FNMADD(KP785694958, T1h, T1f);
        R0[WS(rs, 6)] = SIMD_FMADD(KP2_000000000, T20, T1J);
        R0[WS(rs, 2)] = SIMD_FNMADD(KP2_000000000, T1W, T1J);
        T1c           = SIMD_FMADD(KP980785280, T1b, TK);
        T1C           = SIMD_FMADD(KP980785280, T1B, T1o);
        T1w           = SIMD_FNMADD(KP831469612, T1v, T1o);
        T1j           = SIMD_FNMADD(KP850430094, T1i, T15);
        T1d           = SIMD_FNMADD(KP765366864, T1c, TF);
        T1D           = SIMD_FMADD(KP765366864, T1C, T1t);
        T1x           = SIMD_FNMADD(KP850430094, T1w, T1n);
        T1k           = SIMD_FMADD(KP899976223, T1j, T10);
        T1e           = SIMD_FNMADD(KP941979402, T1d, TA);
        T1E           = SIMD_FMADD(KP941979402, T1D, T1q);
        T1y           = SIMD_FMADD(KP899976223, T1x, T1m);
        R0[WS(rs, 5)] = SIMD_FMADD(KP1_847759065, T1k, Tv);
        R0[WS(rs, 1)] = SIMD_FMADD(KP1_961570560, T1e, Tv);
        R0[WS(rs, 7)] = SIMD_FMADD(KP1_961570560, T1E, T1l);
        R0[WS(rs, 3)] = SIMD_FMADD(KP1_847759065, T1y, T1l);
    }
}

template <>
struct r2cb_traits<32, 25>
{
    static constexpr long_t flops           = 152;
    static constexpr long_t operations      = 111;
    static constexpr long_t memory_accesses = 39;
    static constexpr long_t stack_vars      = 102;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 25 -name
 * r2cb -standalone */

/*
 * This function contains 111 FP additions, 41 FP multiplications,
 * (or, 70 additions, 0 multiplications, 41 fused multiply/add),
 * 102 stack variables, 17 constants, and 39 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 25>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1t, T1h, Tj, T1b, Tc, T1C, TE, TV, Tq, T1c, T1V, T1e, TT,
            T1a, TM;
        SIMD_FLOAT T1N, T1H, T1E, T1W, T1L, TU, Tx, T1y, T5, T19, T4, T1u, T3,
            T1x, T1;
        SIMD_FLOAT T2, T1S, T1I;
        T4 = Ci[WS(cs, 8)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT Tk, Tl, Tm, T1A, Tp, T1v, TI, T1w, Ti, T9, Tf, Ta, T1B,
                TL, Ty;
            SIMD_FLOAT Tz, T8, T1F, TQ, Tb, TR, Tr, Ts, TA, Tu, T1K, TD, T1M,
                TP, Tv;
            SIMD_FLOAT Tn, To, TG, TH, Tg, Th, T6, T7, Td, TK, Te, TJ, TB, TC,
                TN;
            SIMD_FLOAT TO, T1G, Tt, T1D, T1J, Tw, TS;
            T1u = Cr[WS(cs, 8)];
            Tk  = Cr[WS(cs, 4)];
            Tl  = Cr[WS(cs, 12)];
            Tn  = Ci[WS(cs, 4)];
            To  = Ci[WS(cs, 12)];
            TG  = Ci[WS(cs, 2)];
            TH  = Ci[WS(cs, 14)];
            Tg  = Ci[WS(cs, 10)];
            Th  = Ci[WS(cs, 6)];
            Td  = Cr[WS(cs, 2)];
            TK  = Cr[WS(cs, 6)];
            T3  = T1 - T2;
            T1t = T1 + T2;
            Te  = Cr[WS(cs, 14)];
            Tm  = Tk - Tl;
            TJ  = Cr[WS(cs, 10)];
            T1A = Tn - To;
            Tp  = Tn + To;
            T1v = TG - TH;
            TI  = TG + TH;
            T1w = Tg - Th;
            Ti  = Tg + Th;
            T6  = Ci[WS(cs, 1)];
            T7  = Ci[WS(cs, 15)];
            T9  = Cr[WS(cs, 9)];
            Tf  = Td - Te;
            Ta  = Cr[WS(cs, 7)];
            T1B = Td - (TJ - Te) - TK;
            TL  = TJ - TK;
            Ty  = Cr[WS(cs, 3)];
            Tz  = Cr[WS(cs, 13)];
            TB  = Ci[WS(cs, 3)];
            TC  = Ci[WS(cs, 13)];
            TN  = Cr[WS(cs, 1)];
            TO  = Cr[WS(cs, 15)];
            T8  = T6 + T7;
            T1F = T6 - T7;
            TQ  = Ci[WS(cs, 9)];
            Tb  = T9 - Ta;
            TR  = Ci[WS(cs, 7)];
            Tr  = Cr[WS(cs, 5)];
            Ts  = Cr[WS(cs, 11)];
            TA  = Ty - Tz;
            Tu  = Ci[WS(cs, 5)];
            T1K = TC - TB;
            TD  = TB + TC;
            T1M = TN + TO;
            TP  = TN - TO;
            Tv  = Ci[WS(cs, 11)];
            T1h = Tf + Ti;
            Tj  = Tf - Ti;
            T1b = T8 - Tb;
            Tc  = T8 + Tb;
            TS  = TQ + TR;
            T1G = TR - TQ;
            Tt  = Tr - Ts;
            T1D = Tr + Ts;
            T1C = SIMD_FMADD(KP707106781, T1B, T1A);
            T1x = T1v - T1w;
            TE  = TA + TD;
            TV  = TA - TD;
            Tq  = Tm - Tp;
            T1c = Tm + Tp;
            T1J = Tv - Tu;
            Tw  = Tu + Tv;
            T1V = T1v + T1w + T1u - Tl - Tk;
            T1e = TP + TS;
            TT  = TP - TS;
            T1a = TI - TL;
            TM  = TI + TL;
            T1N = T1M - (T9 + Ta);
            T1H = T1F + T1G;
            T1E = T1D - (Ty + Tz);
            T1W = T1F + T1J + T1M - (T1D + T1K + T1G - (T9 + Ta)) - (Ty + Tz);
            T1L = T1J + T1K;
            TU  = Tt - Tw;
            Tx  = Tt + Tw;
        }
        T1y = SIMD_FMSUB(KP707106781, T1x, T1u);
        T5  = SIMD_FNMADD(KP2_000000000, T4, T3);
        T19 = SIMD_FMADD(KP2_000000000, T4, T3);
        T1S = T1H - T1E;
        T1I = T1E + T1H;
        {
            SIMD_FLOAT T1X, T1O, T1R, T1d, TW, TF, T1f, T1z, T1T, T1P, T13, TX,
                T1n, T1g, T14;
            SIMD_FLOAT T1U, T1Q, TY, T1o, T1i, T15, TZ, T1p, T1j, T16, T10, T1q,
                T1k, T17, T11;
            SIMD_FLOAT T1r, T1l, T18, T12, T1s, T1m;
            T1X           = SIMD_FMADD(KP707106781, T1W, T1V);
            T1O           = T1L + T1N;
            T1R           = T1N - T1L;
            T1d           = TU - TV;
            TW            = TU + TV;
            TF            = Tx - TE;
            T1f           = Tx + TE;
            T1z           = SIMD_FMADD(KP2_000000000, T1y, T1t);
            R0[WS(rs, 3)] = SIMD_FMADD(KP2_000000000, T1X, T1t);
            T1T           = SIMD_FMADD(KP414213562, T1S, T1R);
            T1P           = SIMD_FMADD(KP414213562, T1O, T1I);
            T13           = SIMD_FMADD(KP831469612, TW, Tq);
            TX            = SIMD_FMADD(KP707106781, TW, TT);
            T1n           = SIMD_FNMADD(KP707106781, T1d, T1b);
            T1g           = SIMD_FNMADD(KP707106781, T1f, T1e);
            T14           = SIMD_FNMADD(KP707106781, TF, Tc);
            T1U           = SIMD_FMADD(KP923879532, T1T, T1C);
            T1Q           = SIMD_FNMADD(KP923879532, T1P, T1C);
            TY            = SIMD_FMADD(KP509795579, TX, TM);
            T1o           = SIMD_FMADD(KP509795579, T1n, T1a);
            T1i           = SIMD_FNMADD(KP688811980, T1h, T1g);
            T15           = SIMD_FMADD(KP688811980, Tj, T14);
            R0[WS(rs, 5)] = SIMD_FMADD(KP2_000000000, T1U, T1z);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP2_000000000, T1Q, T1z);
            TZ            = SIMD_FMADD(KP551798758, TY, TF);
            T1p           = SIMD_FMADD(KP551798758, T1o, T1f);
            T1j           = SIMD_FMADD(KP944947291, T1i, T1d);
            T16           = SIMD_FNMADD(KP785694958, T15, T13);
            T10           = SIMD_FMADD(KP980785280, TZ, Tq);
            T1q           = SIMD_FMADD(KP980785280, T1p, T1c);
            T1k           = SIMD_FNMADD(KP831469612, T1j, T1c);
            T17           = SIMD_FNMADD(KP850430094, T16, TT);
            T11           = SIMD_FNMADD(KP765366864, T10, Tj);
            T1r           = SIMD_FMADD(KP765366864, T1q, T1h);
            T1l           = SIMD_FNMADD(KP850430094, T1k, T1b);
            T18           = SIMD_FMADD(KP899976223, T17, TM);
            T12           = SIMD_FNMADD(KP941979402, T11, Tc);
            T1s           = SIMD_FMADD(KP941979402, T1r, T1e);
            T1m           = SIMD_FMADD(KP899976223, T1l, T1a);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_847759065, T18, T5);
            R0[0]         = SIMD_FMADD(KP1_961570560, T12, T5);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_961570560, T1s, T19);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_847759065, T1m, T19);
        }
    }
}

template <>
struct r2cb_traits<32, 26>
{
    static constexpr long_t flops           = 140;
    static constexpr long_t operations      = 104;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 26 -name
 * r2cb -standalone */

/*
 * This function contains 104 FP additions, 36 FP multiplications,
 * (or, 68 additions, 0 multiplications, 36 fused multiply/add),
 * 132 stack variables, 17 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 26>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP974127244, +0.974127244371463514366219301249100471150992551);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    {
        SIMD_FLOAT T3, TV, T1b, T1h, T1x, T1a, T1A, T1y, T1e, T1z, T1B, T1k,
            T17, T1w, Tm;
        SIMD_FLOAT T1D, T1n, TR, TO, TS, TA, T1J, T1R, T1C, T14, Tc, T1v, TW,
            T4, TZ;
        SIMD_FLOAT Tg, T15, T1i, T1m, T1j, T12, T16, TH, Tl, T1l, TN, Tz, Ts,
            T1P, Tb;
        SIMD_FLOAT T1Q, T1, T2, T13, T1o, TT, TP, T1K, T1E, Td, T1p, TU, TQ,
            T1L, T1F;
        SIMD_FLOAT T1q, T1M, T1G, T1r, T1N, T1H, T1s, T1O, T1I, T1t, T1u;
        TW = Ci[WS(cs, 8)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT TX, TY, Tq, Tr, T7, TD, Tp, TL, TM, TG, Tv, T1c, Ti, T8,
                T1d;
            SIMD_FLOAT T9, Ty, T11, TK, T10, Tk, Th, Tj, Te, Tf, T5, T6, Tn, To,
                T1g;
            SIMD_FLOAT TE, T1f, TF, TB, TC, Tt, Tu, T18, Tw, Tx, TI, TJ, T19,
                Ta;
            T4  = Cr[WS(cs, 8)];
            TX  = Cr[WS(cs, 4)];
            TY  = Cr[WS(cs, 12)];
            Te  = Ci[WS(cs, 4)];
            Tf  = Ci[WS(cs, 12)];
            T5  = Ci[WS(cs, 2)];
            T6  = Ci[WS(cs, 14)];
            Tq  = Cr[WS(cs, 9)];
            Tr  = Cr[WS(cs, 7)];
            TB  = Ci[WS(cs, 1)];
            TC  = Ci[WS(cs, 15)];
            T3  = T1 + T2;
            TV  = T1 - T2;
            Tn  = Cr[WS(cs, 1)];
            TZ  = TX - TY;
            To  = Cr[WS(cs, 15)];
            T1b = Te + Tf;
            Tg  = Te - Tf;
            T15 = T5 + T6;
            T7  = T5 - T6;
            T1g = Tr - Tq;
            TE  = Ci[WS(cs, 7)];
            TD  = TB - TC;
            T1f = TB + TC;
            TF  = Ci[WS(cs, 9)];
            Tt  = Ci[WS(cs, 13)];
            Tu  = Ci[WS(cs, 3)];
            T18 = Tn - To;
            Tp  = Tn + To;
            TL  = Cr[WS(cs, 3)];
            TM  = Cr[WS(cs, 13)];
            Tw  = Ci[WS(cs, 11)];
            Tx  = Ci[WS(cs, 5)];
            TI  = Cr[WS(cs, 5)];
            TJ  = Cr[WS(cs, 11)];
            T1h = T1f - T1g;
            T1x = T1g + T1f;
            TG  = TE - TF;
            T19 = TE + TF;
            Tv  = Tt - Tu;
            T1c = Tt + Tu;
            Ti  = Cr[WS(cs, 10)];
            T8  = Ci[WS(cs, 10)];
            T1d = TL - TM;
            T9  = Ci[WS(cs, 6)];
            Ty  = Tw - Tx;
            T11 = Tw + Tx;
            TK  = TI + TJ;
            T10 = TI - TJ;
            Tk  = Cr[WS(cs, 6)];
            T1a = T18 - T19;
            T1A = T18 + T19;
            Th  = Cr[WS(cs, 2)];
            Tj  = Cr[WS(cs, 14)];
            T1y = T1b + TZ;
            T1e = T1c - T1d;
            T1i = T1c + T1d;
            Ta  = T8 - T9;
            T1m = T8 + T9;
            T1j = T11 + T10;
            T12 = T10 - T11;
            T16 = Ti - Tk;
            TH  = TD + TG;
            Tl  = Th - (Ti - Tj) - Tk;
            T1l = Th - Tj;
            TN  = TK - (TL + TM);
            Tz  = Tv + Ty;
            Ts  = Tp - (Tq + Tr);
            T1P = T7 + Ta + T4 - TY - TX;
            Tb  = T7 - Ta;
            T1Q = Tp + Ty + TD - (TL + TM) - (Tv + TG + TK - (Tq + Tr));
        }
        T1z           = T12 + T1e;
        T13           = SIMD_FMADD(KP831469612, T12, TZ);
        T1B           = T1j + T1i;
        T1k           = T1i - T1j;
        T17           = T15 + T16;
        T1w           = T15 - T16;
        Tm            = SIMD_FMADD(KP707106781, Tl, Tg);
        T1D           = T1m + T1l;
        T1n           = T1l - T1m;
        TR            = TH + TN;
        TO            = TH - TN;
        TS            = Ts + Tz;
        TA            = Ts - Tz;
        T1J           = SIMD_FNMADD(KP707106781, T1z, T1x);
        T1R           = SIMD_FMADD(KP707106781, T1Q, T1P);
        T1C           = SIMD_FNMADD(KP707106781, T1B, T1A);
        T14           = SIMD_FMADD(KP707106781, T13, TW);
        Tc            = SIMD_FMSUB(KP707106781, Tb, T4);
        T1v           = SIMD_FMADD(KP2_000000000, TW, TV);
        T1o           = SIMD_FMADD(KP974127244, T1n, T1k);
        TT            = SIMD_FMADD(KP414213562, TS, TR);
        TP            = SIMD_FMADD(KP414213562, TO, TA);
        T1K           = SIMD_FMADD(KP509795579, T1J, T1w);
        R0[WS(rs, 2)] = SIMD_FMADD(KP2_000000000, T1R, T3);
        T1E           = SIMD_FNMADD(KP688811980, T1D, T1C);
        Td            = SIMD_FMADD(KP2_000000000, Tc, T3);
        T1p           = SIMD_FMADD(KP707106781, T1o, T1h);
        TU            = SIMD_FNMADD(KP923879532, TT, Tm);
        TQ            = SIMD_FMADD(KP923879532, TP, Tm);
        T1L           = SIMD_FMADD(KP551798758, T1K, T1B);
        T1F           = SIMD_FMADD(KP944947291, T1E, T1z);
        T1q           = SIMD_FMADD(KP944947291, T1p, T1e);
        R0[0]         = SIMD_FNMADD(KP2_000000000, TU, Td);
        R0[WS(rs, 4)] = SIMD_FMADD(KP2_000000000, TQ, Td);
        T1M           = SIMD_FMADD(KP980785280, T1L, T1y);
        T1G           = SIMD_FNMADD(KP831469612, T1F, T1y);
        T1r           = SIMD_FMADD(KP831469612, T1q, T1b);
        T1N           = SIMD_FMADD(KP765366864, T1M, T1D);
        T1H           = SIMD_FNMADD(KP850430094, T1G, T1x);
        T1s           = SIMD_FMADD(KP850430094, T1r, T1a);
        T1O           = SIMD_FMADD(KP941979402, T1N, T1A);
        T1I           = SIMD_FMADD(KP899976223, T1H, T1w);
        T1t           = SIMD_FMADD(KP899976223, T1s, T17);
        R0[WS(rs, 5)] = SIMD_FMADD(KP1_961570560, T1O, T1v);
        R0[WS(rs, 1)] = SIMD_FMADD(KP1_847759065, T1I, T1v);
        T1u           = SIMD_FNMADD(KP923879532, T1t, T14);
        R0[WS(rs, 3)] = SIMD_FNMADD(KP2_000000000, T1u, TV);
    }
}

template <>
struct r2cb_traits<32, 27>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 93;
    static constexpr long_t memory_accesses = 37;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 27 -name
 * r2cb -standalone */

/*
 * This function contains 93 FP additions, 33 FP multiplications,
 * (or, 60 additions, 0 multiplications, 33 fused multiply/add),
 * 87 stack variables, 17 constants, and 37 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 27>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP1_847759065, +1.847759065022573512256366378793576573644833252);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP974127244, +0.974127244371463514366219301249100471150992551);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T4, Tv, T3, T1n, T7, T1p, Tx, T1s, T1b, TV, T16, Tn, T14, TM,
            TE;
        SIMD_FLOAT T1x, TH, T1C, T18, Tu, T1q, TK, Te, TN, T1v, T13, T1y, T1w,
            T1, T2;
        T4 = Ci[WS(cs, 8)];
        T1 = Cr[0];
        T2 = Cr[WS(cs, 16)];
        {
            SIMD_FLOAT T5, T6, Tk, Tl, T1o, TP, TQ, Tm, Tj, T1t, T1u, T8, T9,
                Tb, Tq;
            SIMD_FLOAT Tc, TD, TF, TA, TG, Tt, Ta, TI, TJ, Td, Th, Ti, Tw, TS,
                TT;
            SIMD_FLOAT To, TR, Tp, TB, TC, Ty, Tz, TU, Tr, Ts;
            T5  = Cr[WS(cs, 4)];
            T6  = Cr[WS(cs, 12)];
            Tk  = Cr[WS(cs, 10)];
            Tl  = Cr[WS(cs, 6)];
            Th  = Ci[WS(cs, 2)];
            Ti  = Ci[WS(cs, 14)];
            Tv  = Ci[WS(cs, 4)];
            T1o = Cr[WS(cs, 8)];
            Tw  = Ci[WS(cs, 12)];
            TP  = Cr[WS(cs, 2)];
            TQ  = Cr[WS(cs, 14)];
            T3  = T1 - T2;
            T1n = T1 + T2;
            T7  = T5 - T6;
            TS  = Ci[WS(cs, 10)];
            Tm  = Tk - Tl;
            TT  = Ci[WS(cs, 6)];
            Tj  = Th + Ti;
            T1t = Th - Ti;
            To  = Cr[WS(cs, 1)];
            T1p = Tw + T1o;
            Tx  = Tv + Tw;
            TR  = TP - TQ;
            Tp  = Cr[WS(cs, 15)];
            TB  = Cr[WS(cs, 3)];
            TC  = Cr[WS(cs, 13)];
            Ty  = Ci[WS(cs, 3)];
            Tz  = Ci[WS(cs, 13)];
            T1u = TS - TT;
            TU  = TS + TT;
            Tr  = Ci[WS(cs, 9)];
            Ts  = Ci[WS(cs, 7)];
            T8  = Cr[WS(cs, 5)];
            T9  = Cr[WS(cs, 11)];
            Tb  = Ci[WS(cs, 5)];
            Tq  = To - Tp;
            Tc  = Ci[WS(cs, 11)];
            TD  = TB - TC;
            TF  = Ci[WS(cs, 1)];
            T1s = (To + Tp) + Ty - Tz;
            TA  = Ty + Tz;
            T1b = TR + TU;
            TV  = TR - TU;
            TG  = Ci[WS(cs, 15)];
            T1w = (Ts - Tr) + TB + TC;
            Tt  = Tr + Ts;
            Ta  = T8 - T9;
            TI  = Cr[WS(cs, 7)];
            TJ  = Cr[WS(cs, 9)];
            Td  = Tb + Tc;
            T16 = T7 + Tx;
            Tn  = Tj + Tm;
            T14 = Tj - Tm;
            TM  = TA + TD;
            TE  = TA - TD;
            T1x = (TF - TG) - T9 - T8;
            TH  = TF + TG;
            T1C = T1t + T1u + T1o - (SIMD_FMADD(KP707106781, T1w, T5)) - T6;
            T18 = Tq + Tt;
            Tu  = Tq - Tt;
            T1q = Tc + TI + TJ - Tb;
            TK  = TI - TJ;
            Te  = Ta - Td;
            TN  = Ta + Td;
            T1v = (TP - (Tk - TQ) - Tl) + (T1t - T1u);
        }
        T13 = SIMD_FMADD(KP2_000000000, T4, T3);
        T1y = T1w + T1x;
        {
            SIMD_FLOAT T1D, T1r, T15, TL, T19, TO, T17, Tf, T1z, T1E, TW, T1a,
                T1h, Tg, T1A;
            SIMD_FLOAT TX, T1c, T1i, T1B, TY, T1d, T1j, TZ, T1e, T1k, T10, T1f,
                T1l, T11, T1g;
            SIMD_FLOAT T1m, T12;
            T1D           = T1x + (T1s + T1q);
            T1r           = Tv - (SIMD_FMADD(KP923879532, T1q, T1p));
            T15           = TH + TK;
            TL            = TH - TK;
            T19           = TN + TM;
            TO            = TM - TN;
            T17           = Te + TE;
            Tf            = SIMD_FMADD(KP831469612, Te, T7);
            T1z           = SIMD_FMADD(KP541196100, T1y, T1v);
            T1E           = SIMD_FMADD(KP707106781, T1D, T1C);
            TW            = SIMD_FMADD(KP974127244, TV, TO);
            T1a           = SIMD_FNMADD(KP707106781, T19, T18);
            T1h           = SIMD_FNMADD(KP707106781, T17, T15);
            Tg            = SIMD_FMADD(KP707106781, Tf, T4);
            T1A           = SIMD_FMADD(KP765366864, T1z, T1s);
            R0[WS(rs, 1)] = SIMD_FMADD(KP2_000000000, T1E, T1n);
            TX            = SIMD_FMADD(KP707106781, TW, TL);
            T1c           = SIMD_FNMADD(KP688811980, T1b, T1a);
            T1i           = SIMD_FMADD(KP509795579, T1h, T14);
            T1B           = SIMD_FMADD(KP923879532, T1A, T1r);
            TY            = SIMD_FMADD(KP944947291, TX, TE);
            T1d           = SIMD_FMADD(KP944947291, T1c, T17);
            T1j           = SIMD_FMADD(KP551798758, T1i, T19);
            R0[WS(rs, 3)] = SIMD_FMADD(KP2_000000000, T1B, T1n);
            TZ            = SIMD_FMADD(KP831469612, TY, Tx);
            T1e           = SIMD_FNMADD(KP831469612, T1d, T16);
            T1k           = SIMD_FMADD(KP980785280, T1j, T16);
            T10           = SIMD_FMADD(KP850430094, TZ, Tu);
            T1f           = SIMD_FNMADD(KP850430094, T1e, T15);
            T1l           = SIMD_FMADD(KP765366864, T1k, T1b);
            T11           = SIMD_FMADD(KP899976223, T10, Tn);
            T1g           = SIMD_FMADD(KP899976223, T1f, T14);
            T1m           = SIMD_FMADD(KP941979402, T1l, T18);
            T12           = SIMD_FNMADD(KP923879532, T11, Tg);
            R0[0]         = SIMD_FMADD(KP1_847759065, T1g, T13);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_961570560, T1m, T13);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP2_000000000, T12, T3);
        }
    }
}

template <>
struct r2cb_traits<32, 28>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 84;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 106;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 28 -name
 * r2cb -standalone */

/*
 * This function contains 84 FP additions, 22 FP multiplications,
 * (or, 62 additions, 0 multiplications, 22 fused multiply/add),
 * 106 stack variables, 14 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 28>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP750660555, +0.750660555035730492591115682425555115302628809);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP974127244, +0.974127244371463514366219301249100471150992551);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1h, TN, Ts, Tn, T3, Ti, TO, TZ, T1c, TF, T1d, TI, TT, T14,
            Tx;
        SIMD_FLOAT TP, T1f, T12, T1o, TC, Td, T1r, T1q, Ty, T1p, TQ, T13, T1s,
            Tz, T1e;
        SIMD_FLOAT T15, TU, T1g, T1t, T16, T1i, T1u, T17, T1j, T18, T1k, T19,
            T1l, T1a, T1m;
        SIMD_FLOAT T1b, T1n;
        {
            SIMD_FLOAT T1, TD, TA, T4, T2, TB, Tb, Tc, TW, TX, TK, TL, TE, TY,
                TV;
            SIMD_FLOAT T7, Ta, TH, TG, Te, Tf, Tv, Tw, Tg, Th, TS, TR, Tt, Tu,
                T10;
            SIMD_FLOAT T5, T6, T8, T9, Tj, Tk, Tp, To, Tq, TJ, TM, Tr, Tl, Tm,
                T11;
            T1  = Cr[0];
            TD  = Ci[WS(cs, 8)];
            TA  = Ci[WS(cs, 4)];
            T4  = Cr[WS(cs, 8)];
            T2  = Cr[WS(cs, 16)];
            TB  = Ci[WS(cs, 12)];
            Tb  = Cr[WS(cs, 12)];
            Tc  = Cr[WS(cs, 4)];
            TW  = Cr[WS(cs, 10)];
            TX  = Cr[WS(cs, 6)];
            T5  = Ci[WS(cs, 2)];
            T6  = Ci[WS(cs, 14)];
            T8  = Ci[WS(cs, 10)];
            T9  = Ci[WS(cs, 6)];
            TK  = Cr[WS(cs, 2)];
            TL  = Cr[WS(cs, 14)];
            Tj  = Ci[WS(cs, 9)];
            Tk  = Ci[WS(cs, 7)];
            Tp  = Cr[WS(cs, 15)];
            TE  = Tc - Tb;
            To  = Cr[WS(cs, 1)];
            TY  = TW - TX;
            Tq  = Ci[WS(cs, 3)];
            TV  = T5 + T6;
            T7  = T5 - T6;
            Ta  = T8 - T9;
            TJ  = T8 + T9;
            TM  = TK - TL;
            Tr  = Ci[WS(cs, 13)];
            Tl  = Cr[WS(cs, 13)];
            Tm  = Cr[WS(cs, 3)];
            TH  = Tj + Tk;
            TG  = To - Tp;
            Te  = Ci[WS(cs, 1)];
            Tf  = Ci[WS(cs, 15)];
            Tv  = Cr[WS(cs, 7)];
            Tw  = Cr[WS(cs, 9)];
            Tg  = Cr[WS(cs, 11)];
            Th  = Cr[WS(cs, 5)];
            T1h = TM - TJ;
            TN  = TJ + TM;
            Ts  = (To + Tp) + Tq - Tr;
            TS  = Tr + Tq;
            Tn  = (Tj - Tk) - Tl - Tm;
            TR  = Tm - Tl;
            Tt  = Ci[WS(cs, 5)];
            Tu  = Ci[WS(cs, 11)];
            T10 = Te + Tf;
            T3  = T1 + T2;
            T11 = Tw - Tv;
            Ti  = Te - Tf - Tg - Th;
            TO  = Th - Tg;
            TZ  = TV - TY;
            T1c = TV + TY;
            TF  = SIMD_FMADD(KP707106781, TE, TD);
            T1d = TG - TH;
            TI  = TG + TH;
            TT  = TR + TS;
            T14 = TS - TR;
            Tx  = Tt - Tu - Tv - Tw;
            TP  = Tt + Tu;
            T1f = T11 + T10;
            T12 = T10 - T11;
            T1o = TA - (T4 + TB);
            TC  = SIMD_FMADD(KP1_414213562, TA + TB, T1) - T2;
            Td  = T4 + T7 + Ta - Tb - Tc;
            T1r = Ti - Tn;
            T1q = (T7 - Ta) + (TK - TX - (TW - TL));
        }
        Ty            = Ti + Tn + (Ts - Tx);
        T1p           = Tx + Ts;
        TQ            = TO + TP;
        T13           = TP - TO;
        T1s           = SIMD_FMADD(KP541196100, T1r, T1q);
        Tz            = SIMD_FMADD(KP707106781, Ty, Td);
        T1e           = T13 + T14;
        T15           = T13 - T14;
        TU            = TQ + TT;
        T1g           = TT - TQ;
        T1t           = SIMD_FMADD(KP765366864, T1s, T1p);
        R0[0]         = SIMD_FMADD(KP2_000000000, Tz, T3);
        T16           = SIMD_FMADD(KP707106781, T15, T12);
        T1i           = SIMD_FMADD(KP974127244, T1h, T1g);
        T1u           = SIMD_FMADD(KP923879532, T1t, T1o);
        T17           = SIMD_FMADD(KP509795579, T16, TZ);
        T1j           = SIMD_FMADD(KP707106781, T1i, T1f);
        R0[WS(rs, 2)] = SIMD_FMADD(KP2_000000000, T1u, T3);
        T18           = SIMD_FMADD(KP551798758, T17, TU);
        T1k           = SIMD_FMADD(KP944947291, T1j, T1e);
        T19           = SIMD_FMADD(KP750660555, T18, TN);
        T1l           = SIMD_FMADD(KP707106781, T1k, T1d);
        T1a           = SIMD_FMADD(KP941979402, T19, TI);
        T1m           = SIMD_FMADD(KP899976223, T1l, T1c);
        T1b           = SIMD_FMADD(KP980785280, T1a, TF);
        T1n           = SIMD_FNMADD(KP923879532, T1m, TF);
        R0[WS(rs, 3)] = SIMD_FMADD(KP2_000000000, T1b, TC);
        R0[WS(rs, 1)] = SIMD_FNMADD(KP2_000000000, T1n, TC);
    }
}

template <>
struct r2cb_traits<32, 29>
{
    static constexpr long_t flops           = 96;
    static constexpr long_t operations      = 75;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 96;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 29 -name
 * r2cb -standalone */

/*
 * This function contains 75 FP additions, 21 FP multiplications,
 * (or, 54 additions, 0 multiplications, 21 fused multiply/add),
 * 96 stack variables, 14 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 29>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP750660555, +0.750660555035730492591115682425555115302628809);
    DK(KP551798758, +0.551798758565886024671915127338745764727247242);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP974127244, +0.974127244371463514366219301249100471150992551);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP1_414213562, +1.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1d, T1, T4, T2, T3, T5, Ta, T1h, T16, To, Tr, T11, TK, Tu,
            T1g;
        SIMD_FLOAT T1e, Ty, T1i, TB, T12, Th, TR, T14, T6, T7, T8, TS, Tv, T1f,
            T1j;
        SIMD_FLOAT TC, TT, T1k, TD, T15, T13, TU, T17, TV, T18, TW, T19, TX,
            T1a, TY;
        SIMD_FLOAT T1b, TZ, T1c, T10;
        T1d = Cr[WS(cs, 8)];
        T6  = Ci[WS(cs, 8)];
        T7  = Cr[WS(cs, 4)];
        T8  = Cr[WS(cs, 12)];
        T1  = Cr[0];
        T4  = Cr[WS(cs, 16)];
        T2  = Ci[WS(cs, 4)];
        T3  = Ci[WS(cs, 12)];
        {
            SIMD_FLOAT Tb, Tc, Te, Td, Tf, TG, TO, TP, TJ, TL, TM, Tp, Tq, Ts,
                Tt;
            SIMD_FLOAT Tw, TQ, Tx, Tz, TA, Tg, TN, TE, TF, Ti, Tj, TI, T9, TH,
                Tl;
            SIMD_FLOAT Tm, Tk, Tn;
            Tb  = Cr[WS(cs, 1)];
            Tc  = Cr[WS(cs, 15)];
            TE  = Ci[WS(cs, 2)];
            TF  = Ci[WS(cs, 14)];
            Ti  = Cr[WS(cs, 2)];
            Tj  = Cr[WS(cs, 14)];
            TI  = Cr[WS(cs, 6)];
            T9  = T7 - T8;
            TH  = Cr[WS(cs, 10)];
            Tl  = Ci[WS(cs, 10)];
            Tm  = Ci[WS(cs, 6)];
            T5  = SIMD_FMADD(KP1_414213562, T2 + T3, T1) - T4;
            Te  = Ci[WS(cs, 9)];
            Td  = Tb - Tc;
            Tf  = Ci[WS(cs, 7)];
            TG  = TE + TF;
            TO  = Cr[WS(cs, 9)];
            Tk  = Ti - Tj;
            TP  = Cr[WS(cs, 7)];
            Ta  = SIMD_FMADD(KP707106781, T9, T6);
            TJ  = TH - TI;
            TL  = Ci[WS(cs, 1)];
            T1h = Ti + Tm + TE - TI - (Tl + TF + TH - Tj);
            Tn  = Tl + Tm;
            TM  = Ci[WS(cs, 15)];
            Tp  = Ci[WS(cs, 5)];
            Tq  = Ci[WS(cs, 11)];
            Ts  = Cr[WS(cs, 5)];
            Tt  = Cr[WS(cs, 11)];
            Tw  = Ci[WS(cs, 3)];
            TQ  = TO - TP;
            Tx  = Ci[WS(cs, 13)];
            Tz  = Cr[WS(cs, 3)];
            TA  = Cr[WS(cs, 13)];
            Tg  = Te + Tf;
            T16 = Tk - Tn;
            To  = Tk + Tn;
            TN  = TL + TM;
            Tr  = Tp + Tq;
            T11 = TG + TJ;
            TK  = TG - TJ;
            Tu  = Ts - Tt;
            T1g = (Tb + Tc) + Tp + Tw - TP;
            T1e = Tq + Tx + TO;
            Ty  = Tw + Tx;
            T1i = (Tf - Te) + (Tz - (Ts - TA) - Tt) + (TL - TM);
            TB  = Tz - TA;
            T12 = Td - Tg;
            Th  = Td + Tg;
            TR  = TN - TQ;
            T14 = TN + TQ;
        }
        TS            = Tr - Tu;
        Tv            = Tr + Tu;
        T1f           = T2 - T1d - (SIMD_FMADD(KP923879532, T1e, T3));
        T1j           = SIMD_FMADD(KP541196100, T1i, T1h);
        TC            = Ty + TB;
        TT            = Ty - TB;
        T1k           = SIMD_FMADD(KP765366864, T1j, T1g);
        TD            = Tv + TC;
        T15           = TC - Tv;
        T13           = TS + TT;
        TU            = TS - TT;
        R0[WS(rs, 1)] = T1 + SIMD_FMADD(KP2_000000000,
                                        SIMD_FMADD(KP923879532, T1k, T1f), T4);
        T17           = SIMD_FMADD(KP974127244, T16, T15);
        TV            = SIMD_FMADD(KP707106781, TU, TR);
        T18           = SIMD_FMADD(KP707106781, T17, T14);
        TW            = SIMD_FMADD(KP509795579, TV, TK);
        T19           = SIMD_FMADD(KP944947291, T18, T13);
        TX            = SIMD_FMADD(KP551798758, TW, TD);
        T1a           = SIMD_FMADD(KP707106781, T19, T12);
        TY            = SIMD_FMADD(KP750660555, TX, To);
        T1b           = SIMD_FMADD(KP899976223, T1a, T11);
        TZ            = SIMD_FMADD(KP941979402, TY, Th);
        T1c           = SIMD_FNMADD(KP923879532, T1b, Ta);
        T10           = SIMD_FMADD(KP980785280, TZ, Ta);
        R0[0]         = SIMD_FNMADD(KP2_000000000, T1c, T5);
        R0[WS(rs, 2)] = SIMD_FMADD(KP2_000000000, T10, T5);
    }
}

template <>
struct r2cb_traits<32, 30>
{
    static constexpr long_t flops           = 71;
    static constexpr long_t operations      = 54;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 72;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 30 -name
 * r2cb -standalone */

/*
 * This function contains 54 FP additions, 17 FP multiplications,
 * (or, 37 additions, 0 multiplications, 17 fused multiply/add),
 * 72 stack variables, 13 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 30>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_961570560, +1.961570560806460898252364472268478073947867462);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    {
        SIMD_FLOAT T1, Tf, TH, T2, T3, T4, TN, TO, Tc, Tn, To, Ts, TX, Tv, TK;
        SIMD_FLOAT T8, TI, TE, Tm, TQ, Tb, Tj, Tk, Ti, Th, T5, Tx, Tl, T9, Ta;
        SIMD_FLOAT TL, TM, T6, T7, TD, TC, Ty, Tz, TA, TB, Tt, Tu, Tq, Tr, Tp;
        SIMD_FLOAT TJ, Td, Tw, TP, Te, TF, TR, Tg, TG, TS, TT, TU, TV, TW;
        T1 = Cr[0];
        Tf = Cr[WS(cs, 8)];
        TH = Ci[WS(cs, 8)];
        T2 = Cr[WS(cs, 16)];
        T3 = Ci[WS(cs, 4)];
        TL = Cr[WS(cs, 4)];
        T4 = Ci[WS(cs, 12)];
        TM = Cr[WS(cs, 12)];
        T6 = Ci[WS(cs, 11)];
        Tj = Ci[WS(cs, 5)];
        T7 = Ci[WS(cs, 13)];
        TD = Cr[WS(cs, 11)];
        Tk = Ci[WS(cs, 3)];
        TC = Cr[WS(cs, 5)];
        Ty = Ci[WS(cs, 7)];
        Tz = Ci[WS(cs, 9)];
        TA = Cr[WS(cs, 3)];
        TB = Cr[WS(cs, 13)];
        Ti = Cr[WS(cs, 15)];
        TN = (T3 + T4) + (TL - TM);
        Th = Cr[WS(cs, 1)];
        Tq = Cr[WS(cs, 2)];
        Tr = Ci[WS(cs, 6)];
        Tt = Ci[WS(cs, 10)];
        Tu = Cr[WS(cs, 14)];
        TO = (T7 + Tk) + TC - TD;
        T5 = Cr[WS(cs, 7)];
        Tx = Ci[WS(cs, 1)];
        Tc = Ci[WS(cs, 15)];
        Tl = Cr[WS(cs, 9)];
        T9 = Cr[WS(cs, 6)];
        Ta = Ci[WS(cs, 14)];
        Tn = Ci[WS(cs, 2)];
        To = Cr[WS(cs, 10)];
        Ts = Tq + Tr;
        TX = SIMD_FMADD(KP847759065, TB, Ti);
        Tv = Tt - Tu;
        TK = (Tj + T6) + TA;
        T8 = T5 + T6 + T7;
        TI = Th + Tz + Ty;
        TE = Tx + (Ty - Tz) + (TA + TB) - (TC + TD);
        Tm = (Th + Ti) + Tj + Tk - Tl;
        TQ = (T5 - Tl) + (Tx + Tc);
        Tb = T9 + Ta;
        Tp = Tn - To;
        TJ = Tv + Ts;
        Td = SIMD_FMADD(KP541196100, Tc, Tb);
        Tw = Tp + (Ts - Tv);
        TP = Tp + Tb;
        Te = SIMD_FMADD(KP765366864, Td, T8);
        TF = SIMD_FMADD(KP541196100, TE, Tw);
        TR = SIMD_FMADD(KP509795579, TQ, TP);
        Tg = T3 - (SIMD_FMADD(KP923879532, Te, T4)) - Tf;
        TG = SIMD_FMADD(KP765366864, TF, Tm);
        TS = SIMD_FMADD(KP688811980, TR, TO);
        R0[0] =
            T1 + SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP923879532, TG, Tg), T2);
        TT = SIMD_FMADD(KP785694958, TS, TN);
        TU = SIMD_FMADD(KP850430094, TT, TK);
        TV = SIMD_FMADD(KP899976223, TU, TJ);
        TW = SIMD_FMADD(KP941979402, TV, TI);
        R0[WS(rs, 1)] =
            SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP980785280, TW, TH), T1) -
            (SIMD_FMADD(KP1_961570560, TX, T2));
    }
}

template <>
struct r2cb_traits<32, 31>
{
    static constexpr long_t flops           = 38;
    static constexpr long_t operations      = 30;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 52;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 32 -skip-k 31 -name
 * r2cb -standalone */

/*
 * This function contains 30 FP additions, 8 FP multiplications,
 * (or, 22 additions, 0 multiplications, 8 fused multiply/add),
 * 52 stack variables, 8 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && SkippedOutputs == 31>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    {
        SIMD_FLOAT T1, T2, TI, Th, Tn, Tq, Tc, To, Tp, Ts, T7, Tv, Tt, Tu, Tx;
        SIMD_FLOAT Tm, TA, Ty, Tz, Td, Tg, Te, Tf, T8, Tb, T9, Ta, T3, T6, T4;
        SIMD_FLOAT T5, Ti, Tj, Tk, Tl, Tr, Tw, TB, TC, TD, TE, TF, TG, TH;
        T1 = Cr[0];
        T2 = Ci[WS(cs, 8)];
        TI = Cr[WS(cs, 16)];
        Td = Ci[WS(cs, 5)];
        Tg = Cr[WS(cs, 13)];
        Te = Ci[WS(cs, 11)];
        Tf = Cr[WS(cs, 3)];
        T8 = Cr[WS(cs, 2)];
        Tb = Cr[WS(cs, 14)];
        T9 = Ci[WS(cs, 10)];
        Ta = Ci[WS(cs, 6)];
        T3 = Cr[WS(cs, 1)];
        T6 = Cr[WS(cs, 15)];
        T4 = Ci[WS(cs, 9)];
        T5 = Ci[WS(cs, 7)];
        Ti = Cr[WS(cs, 4)];
        Tj = Ci[WS(cs, 4)];
        Tk = Ci[WS(cs, 12)];
        Th = Td + Te + Tf - Tg;
        Tl = Cr[WS(cs, 12)];
        Tn = Cr[WS(cs, 5)];
        Tq = Cr[WS(cs, 11)];
        Tc = T8 + T9 + Ta - Tb;
        To = Ci[WS(cs, 3)];
        Tp = Ci[WS(cs, 13)];
        Ts = Ci[WS(cs, 2)];
        T7 = T3 + T4 + T5 - T6;
        Tv = Cr[WS(cs, 10)];
        Tt = Ci[WS(cs, 14)];
        Tu = Cr[WS(cs, 6)];
        Tx = Ci[WS(cs, 1)];
        Tm = Ti + Tj + Tk - Tl;
        TA = Cr[WS(cs, 9)];
        Ty = Ci[WS(cs, 15)];
        Tz = Cr[WS(cs, 7)];
        Tr = Tn + To + Tp - Tq;
        Tw = Ts + Tt + Tu - Tv;
        TB = Tx + Ty + Tz - TA;
        TC = SIMD_FMADD(KP509795579, TB, Tw);
        TD = SIMD_FMADD(KP688811980, TC, Tr);
        TE = SIMD_FMADD(KP785694958, TD, Tm);
        TF = SIMD_FMADD(KP850430094, TE, Th);
        TG = SIMD_FMADD(KP899976223, TF, Tc);
        TH = SIMD_FMADD(KP941979402, TG, T7);
        R0[0] =
            SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP980785280, TH, T2), T1) - TI;
    }
}
