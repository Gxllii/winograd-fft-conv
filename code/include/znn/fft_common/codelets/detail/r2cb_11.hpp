//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cb_traits<11, 0>
{
    static constexpr long_t flops           = 116;
    static constexpr long_t operations      = 60;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 68;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 0 -name
 * r2cb -standalone */

/*
 * This function contains 60 FP additions, 56 FP multiplications,
 * (or, 4 additions, 0 multiplications, 56 fused multiply/add),
 * 68 stack variables, 11 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 0>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, Td, Th, Te, Tf, Tg, T2, T6, T3, T4, T5, Tr, TJ, TA, TS;
        SIMD_FLOAT Ti, TE, Tv, T8, T7, Tm, TN, Ts;
        T1 = Cr[0];
        Td = Ci[WS(cs, 3)];
        Th = Ci[WS(cs, 5)];
        Te = Ci[WS(cs, 2)];
        Tf = Ci[WS(cs, 4)];
        Tg = Ci[WS(cs, 1)];
        T2 = Cr[WS(cs, 1)];
        T6 = Cr[WS(cs, 5)];
        T3 = Cr[WS(cs, 2)];
        T4 = Cr[WS(cs, 3)];
        T5 = Cr[WS(cs, 4)];
        Tr = SIMD_FMADD(KP521108558, Td, Th);
        TJ = SIMD_FMADD(KP521108558, Tf, Td);
        TA = SIMD_FNMADD(KP521108558, Te, Tf);
        TS = SIMD_FMSUB(KP521108558, Tg, Te);
        Ti = SIMD_FMADD(KP521108558, Th, Tg);
        TE = SIMD_FNMADD(KP342584725, T3, T6);
        Tv = SIMD_FNMADD(KP342584725, T2, T4);
        T8 = SIMD_FNMADD(KP342584725, T4, T3);
        T7 = T2 + T3 + T4 + T5 + T6;
        Tm = SIMD_FNMADD(KP342584725, T5, T2);
        TN = SIMD_FNMADD(KP342584725, T6, T5);
        Ts = SIMD_FNMADD(KP715370323, Tr, Te);
        {
            SIMD_FLOAT TK, TB, TT, Tj, TF, Tw, T9, Tn, TO, Tt, TL, TC, TU, Tk,
                TG;
            SIMD_FLOAT Tx, Ta, To, TP, Tu, TM, TD, TV, Tl, TH, Ty, Tb, Tp, TQ,
                TI;
            SIMD_FLOAT Tz, Tc, Tq, TR;
            TK             = SIMD_FMADD(KP715370323, TJ, Tg);
            TB             = SIMD_FMADD(KP715370323, TA, Th);
            TT             = SIMD_FMADD(KP715370323, TS, Td);
            Tj             = SIMD_FMADD(KP715370323, Ti, Tf);
            TF             = SIMD_FNMADD(KP634356270, TE, T2);
            Tw             = SIMD_FNMADD(KP634356270, Tv, T6);
            T9             = SIMD_FNMADD(KP634356270, T8, T5);
            R0[0]          = SIMD_FMADD(KP2_000000000, T7, T1);
            Tn             = SIMD_FNMADD(KP634356270, Tm, T3);
            TO             = SIMD_FNMADD(KP634356270, TN, T4);
            Tt             = SIMD_FMADD(KP830830026, Ts, Tg);
            TL             = SIMD_FNMADD(KP830830026, TK, Th);
            TC             = SIMD_FNMADD(KP830830026, TB, Td);
            TU             = SIMD_FNMADD(KP830830026, TT, Tf);
            Tk             = SIMD_FMADD(KP830830026, Tj, Te);
            TG             = SIMD_FNMADD(KP778434453, TF, T4);
            Tx             = SIMD_FNMADD(KP778434453, Tw, T5);
            Ta             = SIMD_FNMADD(KP778434453, T9, T2);
            To             = SIMD_FNMADD(KP778434453, Tn, T6);
            TP             = SIMD_FNMADD(KP778434453, TO, T3);
            Tu             = SIMD_FNMADD(KP918985947, Tt, Tf);
            TM             = SIMD_FMADD(KP918985947, TL, Te);
            TD             = SIMD_FNMADD(KP918985947, TC, Tg);
            TV             = SIMD_FNMADD(KP918985947, TU, Th);
            Tl             = SIMD_FMADD(KP918985947, Tk, Td);
            TH             = SIMD_FNMADD(KP876768831, TG, T5);
            Ty             = SIMD_FNMADD(KP876768831, Tx, T3);
            Tb             = SIMD_FNMADD(KP876768831, Ta, T6);
            Tp             = SIMD_FNMADD(KP876768831, To, T4);
            TQ             = SIMD_FNMADD(KP876768831, TP, T2);
            TI             = SIMD_FNMADD(KP1_918985947, TH, T1);
            Tz             = SIMD_FNMADD(KP1_918985947, Ty, T1);
            Tc             = SIMD_FNMADD(KP1_918985947, Tb, T1);
            Tq             = SIMD_FNMADD(KP1_918985947, Tp, T1);
            TR             = SIMD_FNMADD(KP1_918985947, TQ, T1);
            R0[WS(rs, 4)]  = SIMD_FMADD(KP1_979642883, TM, TI);
            R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_979642883, TM, TI);
            R0[WS(rs, 8)]  = SIMD_FMADD(KP1_979642883, TD, Tz);
            R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_979642883, TD, Tz);
            R0[WS(rs, 10)] = SIMD_FMADD(KP1_979642883, Tl, Tc);
            R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_979642883, Tl, Tc);
            R0[WS(rs, 2)]  = SIMD_FMADD(KP1_979642883, Tu, Tq);
            R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_979642883, Tu, Tq);
            R0[WS(rs, 6)]  = SIMD_FMADD(KP1_979642883, TV, TR);
            R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_979642883, TV, TR);
        }
    }
}

template <>
struct r2cb_traits<11, 1>
{
    static constexpr long_t flops           = 110;
    static constexpr long_t operations      = 55;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 66;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 1 -name
 * r2cb -standalone */

/*
 * This function contains 55 FP additions, 55 FP multiplications,
 * (or, 0 additions, 0 multiplications, 55 fused multiply/add),
 * 66 stack variables, 10 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 1>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, Tc, Tg, Td, Te, Tf, T2, T6, T3, T4, T5, Tq, TI, Tz, TR;
        SIMD_FLOAT Th, Tu, Tl, TM, TD, T7, Tr;
        T1 = Cr[0];
        Tc = Ci[WS(cs, 3)];
        Tg = Ci[WS(cs, 5)];
        Td = Ci[WS(cs, 2)];
        Te = Ci[WS(cs, 4)];
        Tf = Ci[WS(cs, 1)];
        T2 = Cr[WS(cs, 5)];
        T6 = Cr[WS(cs, 3)];
        T3 = Cr[WS(cs, 1)];
        T4 = Cr[WS(cs, 4)];
        T5 = Cr[WS(cs, 2)];
        Tq = SIMD_FMADD(KP521108558, Tc, Tg);
        TI = SIMD_FMADD(KP521108558, Te, Tc);
        Tz = SIMD_FNMADD(KP521108558, Td, Te);
        TR = SIMD_FMSUB(KP521108558, Tf, Td);
        Th = SIMD_FMADD(KP521108558, Tg, Tf);
        Tu = SIMD_FNMADD(KP342584725, T3, T6);
        Tl = SIMD_FNMADD(KP342584725, T4, T3);
        TM = SIMD_FNMADD(KP342584725, T2, T4);
        TD = SIMD_FNMADD(KP342584725, T5, T2);
        T7 = SIMD_FNMADD(KP342584725, T6, T5);
        Tr = SIMD_FNMADD(KP715370323, Tq, Td);
        {
            SIMD_FLOAT TJ, TA, TS, Ti, Tv, Tm, TN, TE, T8, Ts, TK, TB, TT, Tj,
                Tw;
            SIMD_FLOAT Tn, TO, TF, T9, Tt, TL, TC, TU, Tk, Tx, To, TP, TG, Ta,
                Ty;
            SIMD_FLOAT Tp, TQ, TH, Tb;
            TJ            = SIMD_FMADD(KP715370323, TI, Tf);
            TA            = SIMD_FMADD(KP715370323, Tz, Tg);
            TS            = SIMD_FMADD(KP715370323, TR, Tc);
            Ti            = SIMD_FMADD(KP715370323, Th, Te);
            Tv            = SIMD_FNMADD(KP634356270, Tu, T2);
            Tm            = SIMD_FNMADD(KP634356270, Tl, T5);
            TN            = SIMD_FNMADD(KP634356270, TM, T6);
            TE            = SIMD_FNMADD(KP634356270, TD, T3);
            T8            = SIMD_FNMADD(KP634356270, T7, T4);
            Ts            = SIMD_FMADD(KP830830026, Tr, Tf);
            TK            = SIMD_FNMADD(KP830830026, TJ, Tg);
            TB            = SIMD_FNMADD(KP830830026, TA, Tc);
            TT            = SIMD_FNMADD(KP830830026, TS, Te);
            Tj            = SIMD_FMADD(KP830830026, Ti, Td);
            Tw            = SIMD_FNMADD(KP778434453, Tv, T4);
            Tn            = SIMD_FNMADD(KP778434453, Tm, T2);
            TO            = SIMD_FNMADD(KP778434453, TN, T5);
            TF            = SIMD_FNMADD(KP778434453, TE, T6);
            T9            = SIMD_FNMADD(KP778434453, T8, T3);
            Tt            = SIMD_FNMADD(KP918985947, Ts, Te);
            TL            = SIMD_FMADD(KP918985947, TK, Td);
            TC            = SIMD_FNMADD(KP918985947, TB, Tf);
            TU            = SIMD_FNMADD(KP918985947, TT, Tg);
            Tk            = SIMD_FMADD(KP918985947, Tj, Tc);
            Tx            = SIMD_FNMADD(KP876768831, Tw, T5);
            To            = SIMD_FNMADD(KP876768831, Tn, T6);
            TP            = SIMD_FNMADD(KP876768831, TO, T3);
            TG            = SIMD_FNMADD(KP876768831, TF, T4);
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            Ty            = SIMD_FNMADD(KP1_918985947, Tx, T1);
            Tp            = SIMD_FNMADD(KP1_918985947, To, T1);
            TQ            = SIMD_FNMADD(KP1_918985947, TP, T1);
            TH            = SIMD_FNMADD(KP1_918985947, TG, T1);
            Tb            = SIMD_FNMADD(KP1_918985947, Ta, T1);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_979642883, TC, Ty);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_979642883, TC, Ty);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_979642883, Tt, Tp);
            R0[WS(rs, 8)] = SIMD_FNMADD(KP1_979642883, Tt, Tp);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_979642883, TU, TQ);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_979642883, TU, TQ);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_979642883, TL, TH);
            R0[WS(rs, 6)] = SIMD_FNMADD(KP1_979642883, TL, TH);
            R0[WS(rs, 9)] = SIMD_FMADD(KP1_979642883, Tk, Tb);
            R0[0]         = SIMD_FNMADD(KP1_979642883, Tk, Tb);
        }
    }
}

template <>
struct r2cb_traits<11, 2>
{
    static constexpr long_t flops           = 108;
    static constexpr long_t operations      = 54;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 75;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 2 -name
 * r2cb -standalone */

/*
 * This function contains 54 FP additions, 54 FP multiplications,
 * (or, 0 additions, 0 multiplications, 54 fused multiply/add),
 * 75 stack variables, 19 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 2>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T3, T2, Tf, Tg, Te, T4, T6, Tc, Td, T5, Tl, Th, TD, TM;
        SIMD_FLOAT TI, Tz, TR, Tu, T7, Tm, Ti;
        T1 = Cr[0];
        T3 = Cr[WS(cs, 5)];
        T2 = Cr[WS(cs, 3)];
        Tf = Ci[WS(cs, 5)];
        Tg = Ci[WS(cs, 3)];
        Te = Ci[WS(cs, 2)];
        T4 = Cr[WS(cs, 2)];
        T6 = Cr[WS(cs, 4)];
        Tc = Ci[WS(cs, 4)];
        Td = Ci[WS(cs, 1)];
        T5 = Cr[WS(cs, 1)];
        Tl = SIMD_FNMADD(KP505141613, T2, Tf);
        Th = SIMD_FMADD(KP521108558, Tg, Tf);
        TD = SIMD_FNMADD(KP342584725, T4, T3);
        TM = SIMD_FNMADD(KP342584725, T3, T6);
        TI = SIMD_FMADD(KP521108558, Tc, Tg);
        Tz = SIMD_FNMADD(KP521108558, Te, Tc);
        TR = SIMD_FMSUB(KP521108558, Td, Te);
        Tu = SIMD_FNMADD(KP342584725, T5, T2);
        T7 = SIMD_FNMADD(KP342584725, T6, T5);
        Tm = SIMD_FMADD(KP678195414, Tl, T4);
        Ti = SIMD_FNMADD(KP715370323, Th, Te);
        {
            SIMD_FLOAT TE, TN, TJ, TA, TS, Tv, T8, Tn, Tj, TF, TO, TK, TB, TT,
                Tw;
            SIMD_FLOAT T9, To, Tk, TG, TP, TL, TC, TU, Tx, Ta, Tp, TH, TQ, Ty,
                Tb;
            SIMD_FLOAT Tq, Tr, Ts, Tt;
            TE            = SIMD_FNMADD(KP634356270, TD, T5);
            TN            = SIMD_FNMADD(KP634356270, TM, T2);
            TJ            = SIMD_FMADD(KP715370323, TI, Td);
            TA            = SIMD_FMADD(KP715370323, Tz, Tf);
            TS            = SIMD_FMADD(KP715370323, TR, Tg);
            Tv            = SIMD_FNMADD(KP634356270, Tu, T3);
            T8            = SIMD_FNMADD(KP634356270, T7, T4);
            Tn            = SIMD_FMADD(KP768375231, Tm, Td);
            Tj            = SIMD_FMADD(KP830830026, Ti, Td);
            TF            = SIMD_FNMADD(KP778434453, TE, T2);
            TO            = SIMD_FNMADD(KP778434453, TN, T4);
            TK            = SIMD_FNMADD(KP830830026, TJ, Tf);
            TB            = SIMD_FNMADD(KP830830026, TA, Tg);
            TT            = SIMD_FNMADD(KP830830026, TS, Tc);
            Tw            = SIMD_FNMADD(KP778434453, Tv, T6);
            T9            = SIMD_FNMADD(KP778434453, T8, T3);
            To            = SIMD_FNMADD(KP825581363, Tn, T6);
            Tk            = SIMD_FNMADD(KP918985947, Tj, Tc);
            TG            = SIMD_FNMADD(KP876768831, TF, T6);
            TP            = SIMD_FNMADD(KP876768831, TO, T5);
            TL            = SIMD_FMADD(KP918985947, TK, Te);
            TC            = SIMD_FNMADD(KP918985947, TB, Td);
            TU            = SIMD_FNMADD(KP918985947, TT, Tf);
            Tx            = SIMD_FNMADD(KP876768831, Tw, T4);
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            Tp            = SIMD_FNMADD(KP866504932, To, Tc);
            TH            = SIMD_FNMADD(KP1_918985947, TG, T1);
            TQ            = SIMD_FNMADD(KP1_918985947, TP, T1);
            Ty            = SIMD_FNMADD(KP1_918985947, Tx, T1);
            Tb            = SIMD_FNMADD(KP1_918985947, Ta, T1);
            Tq            = SIMD_FMADD(KP898361248, Tp, T5);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_979642883, TL, TH);
            R0[WS(rs, 5)] = SIMD_FNMADD(KP1_979642883, TL, TH);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_979642883, TU, TQ);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_979642883, TU, TQ);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_979642883, TC, Ty);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_979642883, TC, Ty);
            R0[0]         = SIMD_FMADD(KP1_979642883, Tk, Tb);
            R0[WS(rs, 7)] = SIMD_FNMADD(KP1_979642883, Tk, Tb);
            Tr            = SIMD_FMADD(KP924828432, Tq, Te);
            Ts            = SIMD_FNMADD(KP948034035, Tr, T3);
            Tt            = SIMD_FNMADD(KP969359657, Ts, Tg);
            R0[WS(rs, 8)] = SIMD_FMADD(KP1_979642883, Tt, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 3>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 53;
    static constexpr long_t memory_accesses = 19;
    static constexpr long_t stack_vars      = 75;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 3 -name
 * r2cb -standalone */

/*
 * This function contains 53 FP additions, 53 FP multiplications,
 * (or, 0 additions, 0 multiplications, 53 fused multiply/add),
 * 75 stack variables, 19 constants, and 19 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 3>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    {
        SIMD_FLOAT T1, T4, Te, T5, Tg, T6, Tc, T2, Tf, T3, Td, T7, Tz, TI, Tu;
        SIMD_FLOAT Th, Tl, TD, TM;
        T1 = Cr[0];
        T4 = Cr[WS(cs, 1)];
        Te = Ci[WS(cs, 1)];
        T5 = Cr[WS(cs, 5)];
        Tg = Ci[WS(cs, 4)];
        T6 = Cr[WS(cs, 2)];
        Tc = Ci[WS(cs, 2)];
        T2 = Cr[WS(cs, 4)];
        Tf = Ci[WS(cs, 3)];
        T3 = Cr[WS(cs, 3)];
        Td = Ci[WS(cs, 5)];
        T7 = SIMD_FNMADD(KP342584725, T6, T5);
        Tz = SIMD_FMSUB(KP521108558, Te, Tc);
        TI = SIMD_FNMADD(KP521108558, Tc, Tg);
        Tu = SIMD_FNMADD(KP342584725, T5, T2);
        Th = SIMD_FMADD(KP521108558, Tg, Tf);
        Tl = SIMD_FMADD(KP505141613, T2, Tf);
        TD = SIMD_FNMADD(KP342584725, T4, T3);
        TM = SIMD_FNMADD(KP505141613, T3, Td);
        {
            SIMD_FLOAT T8, TA, TJ, Tv, Ti, Tm, TE, TN, T9, TB, TK, Tw, Tj, Tn,
                TF;
            SIMD_FLOAT TO, Ta, TC, TL, Tx, Tk, To, TG, TP, Tb, Ty, Tp, TH, TQ,
                Tq;
            SIMD_FLOAT TR, Tr, TS, Ts, TT, Tt, TU;
            T8            = SIMD_FNMADD(KP634356270, T7, T4);
            TA            = SIMD_FMADD(KP715370323, Tz, Tf);
            TJ            = SIMD_FMADD(KP715370323, TI, Td);
            Tv            = SIMD_FNMADD(KP634356270, Tu, T3);
            Ti            = SIMD_FMADD(KP715370323, Th, Te);
            Tm            = SIMD_FNMADD(KP678195414, Tl, T4);
            TE            = SIMD_FNMADD(KP634356270, TD, T5);
            TN            = SIMD_FMADD(KP678195414, TM, T6);
            T9            = SIMD_FNMADD(KP778434453, T8, T3);
            TB            = SIMD_FNMADD(KP830830026, TA, Tg);
            TK            = SIMD_FNMADD(KP830830026, TJ, Tf);
            Tw            = SIMD_FNMADD(KP778434453, Tv, T6);
            Tj            = SIMD_FNMADD(KP830830026, Ti, Td);
            Tn            = SIMD_FNMADD(KP768375231, Tm, Td);
            TF            = SIMD_FNMADD(KP778434453, TE, T2);
            TO            = SIMD_FMADD(KP768375231, TN, Te);
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            TC            = SIMD_FNMADD(KP918985947, TB, Td);
            TL            = SIMD_FNMADD(KP918985947, TK, Te);
            Tx            = SIMD_FNMADD(KP876768831, Tw, T4);
            Tk            = SIMD_FMADD(KP918985947, Tj, Tc);
            To            = SIMD_FMADD(KP825581363, Tn, T6);
            TG            = SIMD_FNMADD(KP876768831, TF, T6);
            TP            = SIMD_FNMADD(KP825581363, TO, T2);
            Tb            = SIMD_FNMADD(KP1_918985947, Ta, T1);
            Ty            = SIMD_FNMADD(KP1_918985947, Tx, T1);
            Tp            = SIMD_FNMADD(KP866504932, To, Tc);
            TH            = SIMD_FNMADD(KP1_918985947, TG, T1);
            TQ            = SIMD_FNMADD(KP866504932, TP, Tg);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_979642883, Tk, Tb);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_979642883, Tk, Tb);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_979642883, TC, Ty);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_979642883, TC, Ty);
            Tq            = SIMD_FMADD(KP898361248, Tp, T5);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_979642883, TL, TH);
            R0[0]         = SIMD_FNMADD(KP1_979642883, TL, TH);
            TR            = SIMD_FMADD(KP898361248, TQ, T4);
            Tr            = SIMD_FMADD(KP924828432, Tq, Te);
            TS            = SIMD_FMADD(KP924828432, TR, Tc);
            Ts            = SIMD_FNMADD(KP948034035, Tr, T3);
            TT            = SIMD_FNMADD(KP948034035, TS, T5);
            Tt            = SIMD_FMADD(KP969359657, Ts, Tg);
            TU            = SIMD_FNMADD(KP969359657, TT, Tf);
            R0[WS(rs, 6)] = SIMD_FNMADD(KP1_979642883, Tt, T1);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_979642883, TU, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 4>
{
    static constexpr long_t flops           = 104;
    static constexpr long_t operations      = 52;
    static constexpr long_t memory_accesses = 18;
    static constexpr long_t stack_vars      = 75;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 4 -name
 * r2cb -standalone */

/*
 * This function contains 52 FP additions, 52 FP multiplications,
 * (or, 0 additions, 0 multiplications, 52 fused multiply/add),
 * 75 stack variables, 19 constants, and 18 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 4>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    {
        SIMD_FLOAT T1, T5, T6, T3, Td, Tg, Te, T4, Tc, T2, Tf, T7, Tu, TI, Tl;
        SIMD_FLOAT TD, Th, TM, T8, Tv, TJ, Tm, TE, Ti, TN, T9;
        T1 = Cr[0];
        T5 = Cr[WS(cs, 5)];
        T6 = Cr[WS(cs, 2)];
        T3 = Cr[WS(cs, 3)];
        Td = Ci[WS(cs, 5)];
        Tg = Ci[WS(cs, 4)];
        Te = Ci[WS(cs, 1)];
        T4 = Cr[WS(cs, 1)];
        Tc = Ci[WS(cs, 2)];
        T2 = Cr[WS(cs, 4)];
        Tf = Ci[WS(cs, 3)];
        T7 = SIMD_FNMADD(KP342584725, T6, T5);
        Tu = SIMD_FNMADD(KP505141613, T3, Td);
        TI = SIMD_FMSUB(KP521108558, Te, Tc);
        Tl = SIMD_FMADD(KP505141613, T4, Tc);
        TD = SIMD_FNMADD(KP342584725, T5, T2);
        Th = SIMD_FMADD(KP521108558, Tg, Tf);
        TM = SIMD_FMADD(KP505141613, T2, Tf);
        T8 = SIMD_FNMADD(KP634356270, T7, T4);
        Tv = SIMD_FMADD(KP678195414, Tu, T6);
        TJ = SIMD_FMADD(KP715370323, TI, Tf);
        Tm = SIMD_FNMADD(KP678195414, Tl, T3);
        TE = SIMD_FNMADD(KP634356270, TD, T3);
        Ti = SIMD_FMADD(KP715370323, Th, Te);
        TN = SIMD_FNMADD(KP678195414, TM, T4);
        T9 = SIMD_FNMADD(KP778434453, T8, T3);
        {
            SIMD_FLOAT Tw, TK, Tn, TF, Tj, TO, Ta, Tx, TL, To, TG, Tk, TP, Tb,
                Ty;
            SIMD_FLOAT Tp, TH, TQ, Tz, Tq, TR, TA, Tr, TS, TB, Ts, TT, TC, Tt,
                TU;
            Tw            = SIMD_FMADD(KP768375231, Tv, Te);
            TK            = SIMD_FNMADD(KP830830026, TJ, Tg);
            Tn            = SIMD_FMADD(KP768375231, Tm, Tg);
            TF            = SIMD_FNMADD(KP778434453, TE, T6);
            Tj            = SIMD_FNMADD(KP830830026, Ti, Td);
            TO            = SIMD_FNMADD(KP768375231, TN, Td);
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            Tx            = SIMD_FNMADD(KP825581363, Tw, T2);
            TL            = SIMD_FNMADD(KP918985947, TK, Td);
            To            = SIMD_FNMADD(KP825581363, Tn, T5);
            TG            = SIMD_FNMADD(KP876768831, TF, T4);
            Tk            = SIMD_FMADD(KP918985947, Tj, Tc);
            TP            = SIMD_FMADD(KP825581363, TO, T6);
            Tb            = SIMD_FNMADD(KP1_918985947, Ta, T1);
            Ty            = SIMD_FNMADD(KP866504932, Tx, Tg);
            Tp            = SIMD_FNMADD(KP866504932, To, Td);
            TH            = SIMD_FNMADD(KP1_918985947, TG, T1);
            TQ            = SIMD_FNMADD(KP866504932, TP, Tc);
            R0[0]         = SIMD_FMADD(KP1_979642883, Tk, Tb);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_979642883, Tk, Tb);
            Tz            = SIMD_FMADD(KP898361248, Ty, T4);
            Tq            = SIMD_FMADD(KP898361248, Tp, T2);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_979642883, TL, TH);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_979642883, TL, TH);
            TR            = SIMD_FMADD(KP898361248, TQ, T5);
            TA            = SIMD_FMADD(KP924828432, Tz, Tc);
            Tr            = SIMD_FNMADD(KP924828432, Tq, Tf);
            TS            = SIMD_FMADD(KP924828432, TR, Te);
            TB            = SIMD_FNMADD(KP948034035, TA, T5);
            Ts            = SIMD_FMADD(KP948034035, Tr, T6);
            TT            = SIMD_FNMADD(KP948034035, TS, T3);
            TC            = SIMD_FNMADD(KP969359657, TB, Tf);
            Tt            = SIMD_FNMADD(KP969359657, Ts, Te);
            TU            = SIMD_FMADD(KP969359657, TT, Tg);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_979642883, TC, T1);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_979642883, Tt, T1);
            R0[WS(rs, 5)] = SIMD_FNMADD(KP1_979642883, TU, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 5>
{
    static constexpr long_t flops           = 102;
    static constexpr long_t operations      = 51;
    static constexpr long_t memory_accesses = 17;
    static constexpr long_t stack_vars      = 75;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 5 -name
 * r2cb -standalone */

/*
 * This function contains 51 FP additions, 51 FP multiplications,
 * (or, 0 additions, 0 multiplications, 51 fused multiply/add),
 * 75 stack variables, 19 constants, and 17 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 5>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP1_918985947, +1.918985947228994779780736114132655398124909697);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T6, Tg, T4, Tc, T2, Tf, T3, Td, T5, Te, Tl, Th, TM, Tu;
        SIMD_FLOAT T7, TD, Tm, Ti, TN, Tv, T8, TE, Tn;
        T1 = Cr[0];
        T6 = Cr[WS(cs, 5)];
        Tg = Ci[WS(cs, 1)];
        T4 = Cr[WS(cs, 3)];
        Tc = Ci[WS(cs, 5)];
        T2 = Cr[WS(cs, 1)];
        Tf = Ci[WS(cs, 2)];
        T3 = Cr[WS(cs, 2)];
        Td = Ci[WS(cs, 4)];
        T5 = Cr[WS(cs, 4)];
        Te = Ci[WS(cs, 3)];
        Tl = SIMD_FNMADD(KP505141613, T4, Tc);
        Th = SIMD_FMSUB(KP521108558, Tg, Tf);
        TM = SIMD_FMADD(KP505141613, T2, Tf);
        Tu = SIMD_FNMADD(KP505141613, T3, Td);
        T7 = SIMD_FNMADD(KP342584725, T6, T5);
        TD = SIMD_FMADD(KP505141613, T5, Te);
        Tm = SIMD_FMADD(KP678195414, Tl, T3);
        Ti = SIMD_FMADD(KP715370323, Th, Te);
        TN = SIMD_FNMADD(KP678195414, TM, T4);
        Tv = SIMD_FMADD(KP678195414, Tu, T6);
        T8 = SIMD_FNMADD(KP634356270, T7, T4);
        TE = SIMD_FNMADD(KP678195414, TD, T2);
        Tn = SIMD_FMADD(KP768375231, Tm, Tg);
        {
            SIMD_FLOAT Tj, TO, Tw, T9, TF, To, Tk, TP, Tx, Ta, TG, Tp, TQ, Ty,
                Tb;
            SIMD_FLOAT TH, Tq, TR, Tz, TI, Tr, TS, TA, TJ, Ts, TT, TB, TK, Tt,
                TU;
            SIMD_FLOAT TC, TL;
            Tj            = SIMD_FNMADD(KP830830026, Ti, Td);
            TO            = SIMD_FMADD(KP768375231, TN, Td);
            Tw            = SIMD_FMADD(KP768375231, Tv, Te);
            T9            = SIMD_FNMADD(KP778434453, T8, T3);
            TF            = SIMD_FNMADD(KP768375231, TE, Tc);
            To            = SIMD_FNMADD(KP825581363, Tn, T5);
            Tk            = SIMD_FNMADD(KP918985947, Tj, Tc);
            TP            = SIMD_FNMADD(KP825581363, TO, T6);
            Tx            = SIMD_FNMADD(KP825581363, Tw, T2);
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            TG            = SIMD_FMADD(KP825581363, TF, T3);
            Tp            = SIMD_FNMADD(KP866504932, To, Td);
            TQ            = SIMD_FNMADD(KP866504932, TP, Tc);
            Ty            = SIMD_FNMADD(KP866504932, Tx, Tg);
            Tb            = SIMD_FNMADD(KP1_918985947, Ta, T1);
            TH            = SIMD_FNMADD(KP866504932, TG, Tf);
            Tq            = SIMD_FMADD(KP898361248, Tp, T2);
            TR            = SIMD_FMADD(KP898361248, TQ, T5);
            Tz            = SIMD_FMADD(KP898361248, Ty, T4);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_979642883, Tk, Tb);
            R0[0]         = SIMD_FNMADD(KP1_979642883, Tk, Tb);
            TI            = SIMD_FMADD(KP898361248, TH, T6);
            Tr            = SIMD_FMADD(KP924828432, Tq, Tf);
            TS            = SIMD_FNMADD(KP924828432, TR, Te);
            TA            = SIMD_FNMADD(KP924828432, Tz, Tc);
            TJ            = SIMD_FMADD(KP924828432, TI, Tg);
            Ts            = SIMD_FNMADD(KP948034035, Tr, T6);
            TT            = SIMD_FMADD(KP948034035, TS, T3);
            TB            = SIMD_FMADD(KP948034035, TA, T5);
            TK            = SIMD_FNMADD(KP948034035, TJ, T4);
            Tt            = SIMD_FNMADD(KP969359657, Ts, Te);
            TU            = SIMD_FNMADD(KP969359657, TT, Tg);
            TC            = SIMD_FMADD(KP969359657, TB, Tf);
            TL            = SIMD_FMADD(KP969359657, TK, Td);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_979642883, Tt, T1);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_979642883, TU, T1);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_979642883, TC, T1);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_979642883, TL, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 6>
{
    static constexpr long_t flops           = 100;
    static constexpr long_t operations      = 50;
    static constexpr long_t memory_accesses = 16;
    static constexpr long_t stack_vars      = 66;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 6 -name
 * r2cb -standalone */

/*
 * This function contains 50 FP additions, 50 FP multiplications,
 * (or, 0 additions, 0 multiplications, 50 fused multiply/add),
 * 66 stack variables, 10 constants, and 16 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 6>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T2, T7, Ta, Tb, T3, T8, T4, T5, T6, T9, Tl, Tc, TM, Tu;
        SIMD_FLOAT TD, Tm, Td, TN, Tv, TE, Tn, Te, TO, Tw, TF;
        T1 = Cr[0];
        T2 = Ci[WS(cs, 5)];
        T7 = Cr[WS(cs, 3)];
        Ta = Ci[WS(cs, 1)];
        Tb = Cr[WS(cs, 5)];
        T3 = Cr[WS(cs, 1)];
        T8 = Ci[WS(cs, 2)];
        T4 = Ci[WS(cs, 4)];
        T5 = Cr[WS(cs, 2)];
        T6 = Ci[WS(cs, 3)];
        T9 = Cr[WS(cs, 4)];
        Tl = SIMD_FNMADD(KP505141613, T7, T2);
        Tc = SIMD_FNMADD(KP505141613, Tb, Ta);
        TM = SIMD_FMADD(KP505141613, T3, T8);
        Tu = SIMD_FNMADD(KP505141613, T5, T4);
        TD = SIMD_FMADD(KP505141613, T9, T6);
        Tm = SIMD_FMADD(KP678195414, Tl, T5);
        Td = SIMD_FMADD(KP678195414, Tc, T9);
        TN = SIMD_FNMADD(KP678195414, TM, T7);
        Tv = SIMD_FMADD(KP678195414, Tu, Tb);
        TE = SIMD_FNMADD(KP678195414, TD, T3);
        Tn = SIMD_FMADD(KP768375231, Tm, Ta);
        Te = SIMD_FNMADD(KP768375231, Td, T8);
        TO = SIMD_FMADD(KP768375231, TN, T4);
        Tw = SIMD_FMADD(KP768375231, Tv, T6);
        TF = SIMD_FNMADD(KP768375231, TE, T2);
        {
            SIMD_FLOAT To, Tf, TP, Tx, TG, Tp, Tg, TQ, Ty, TH, Tq, Th, TR, Tz,
                TI;
            SIMD_FLOAT Tr, Ti, TS, TA, TJ, Ts, Tj, TT, TB, TK, Tt, Tk, TU, TC,
                TL;
            To            = SIMD_FNMADD(KP825581363, Tn, T9);
            Tf            = SIMD_FMADD(KP825581363, Te, T7);
            TP            = SIMD_FNMADD(KP825581363, TO, Tb);
            Tx            = SIMD_FNMADD(KP825581363, Tw, T3);
            TG            = SIMD_FMADD(KP825581363, TF, T5);
            Tp            = SIMD_FNMADD(KP866504932, To, T4);
            Tg            = SIMD_FNMADD(KP866504932, Tf, T6);
            TQ            = SIMD_FNMADD(KP866504932, TP, T2);
            Ty            = SIMD_FNMADD(KP866504932, Tx, Ta);
            TH            = SIMD_FNMADD(KP866504932, TG, T8);
            Tq            = SIMD_FMADD(KP898361248, Tp, T3);
            Th            = SIMD_FMADD(KP898361248, Tg, T5);
            TR            = SIMD_FMADD(KP898361248, TQ, T9);
            Tz            = SIMD_FMADD(KP898361248, Ty, T7);
            TI            = SIMD_FMADD(KP898361248, TH, Tb);
            Tr            = SIMD_FMADD(KP924828432, Tq, T8);
            Ti            = SIMD_FNMADD(KP924828432, Th, T4);
            TS            = SIMD_FNMADD(KP924828432, TR, T6);
            TA            = SIMD_FNMADD(KP924828432, Tz, T2);
            TJ            = SIMD_FMADD(KP924828432, TI, Ta);
            Ts            = SIMD_FNMADD(KP948034035, Tr, Tb);
            Tj            = SIMD_FMADD(KP948034035, Ti, T3);
            TT            = SIMD_FMADD(KP948034035, TS, T5);
            TB            = SIMD_FMADD(KP948034035, TA, T9);
            TK            = SIMD_FNMADD(KP948034035, TJ, T7);
            Tt            = SIMD_FNMADD(KP969359657, Ts, T6);
            Tk            = SIMD_FNMADD(KP969359657, Tj, T2);
            TU            = SIMD_FNMADD(KP969359657, TT, Ta);
            TC            = SIMD_FMADD(KP969359657, TB, T8);
            TL            = SIMD_FMADD(KP969359657, TK, T4);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_979642883, Tt, T1);
            R0[0]         = SIMD_FMADD(KP1_979642883, Tk, T1);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_979642883, TU, T1);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_979642883, TC, T1);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_979642883, TL, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 7>
{
    static constexpr long_t flops           = 80;
    static constexpr long_t operations      = 40;
    static constexpr long_t memory_accesses = 15;
    static constexpr long_t stack_vars      = 57;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 7 -name
 * r2cb -standalone */

/*
 * This function contains 40 FP additions, 40 FP multiplications,
 * (or, 0 additions, 0 multiplications, 40 fused multiply/add),
 * 57 stack variables, 10 constants, and 15 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 7>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T4, T5, T3, T8, Ta, Tb, T2, T7, T6, T9, TD, Tc, Tl, Tu;
        SIMD_FLOAT TE, Td;
        T1 = Cr[0];
        T4 = Ci[WS(cs, 1)];
        T5 = Cr[WS(cs, 5)];
        T3 = Cr[WS(cs, 3)];
        T8 = Ci[WS(cs, 5)];
        Ta = Ci[WS(cs, 3)];
        Tb = Cr[WS(cs, 4)];
        T2 = Ci[WS(cs, 4)];
        T7 = Cr[WS(cs, 2)];
        T6 = Ci[WS(cs, 2)];
        T9 = Cr[WS(cs, 1)];
        TD = SIMD_FNMADD(KP505141613, T3, T8);
        Tc = SIMD_FMADD(KP505141613, Tb, Ta);
        Tl = SIMD_FNMADD(KP505141613, T7, T2);
        Tu = SIMD_FMADD(KP505141613, T9, T6);
        TE = SIMD_FMADD(KP678195414, TD, T7);
        Td = SIMD_FNMADD(KP678195414, Tc, T9);
        {
            SIMD_FLOAT Tm, Tv, TF, Te, Tn, Tw, TG, Tf, To, Tx, TH, Tg, Tp, Ty,
                TI;
            SIMD_FLOAT Th, Tq, Tz, TJ, Ti, Tr, TA, TK, Tj, Ts, TB, TL, Tk, Tt,
                TC;
            Tm            = SIMD_FMADD(KP678195414, Tl, T5);
            Tv            = SIMD_FNMADD(KP678195414, Tu, T3);
            TF            = SIMD_FMADD(KP768375231, TE, T4);
            Te            = SIMD_FNMADD(KP768375231, Td, T8);
            Tn            = SIMD_FMADD(KP768375231, Tm, Ta);
            Tw            = SIMD_FMADD(KP768375231, Tv, T2);
            TG            = SIMD_FNMADD(KP825581363, TF, Tb);
            Tf            = SIMD_FMADD(KP825581363, Te, T7);
            To            = SIMD_FNMADD(KP825581363, Tn, T9);
            Tx            = SIMD_FNMADD(KP825581363, Tw, T5);
            TH            = SIMD_FNMADD(KP866504932, TG, T2);
            Tg            = SIMD_FNMADD(KP866504932, Tf, T6);
            Tp            = SIMD_FNMADD(KP866504932, To, T4);
            Ty            = SIMD_FNMADD(KP866504932, Tx, T8);
            TI            = SIMD_FMADD(KP898361248, TH, T9);
            Th            = SIMD_FMADD(KP898361248, Tg, T5);
            Tq            = SIMD_FMADD(KP898361248, Tp, T3);
            Tz            = SIMD_FMADD(KP898361248, Ty, Tb);
            TJ            = SIMD_FMADD(KP924828432, TI, T6);
            Ti            = SIMD_FMADD(KP924828432, Th, T4);
            Tr            = SIMD_FNMADD(KP924828432, Tq, T8);
            TA            = SIMD_FNMADD(KP924828432, Tz, Ta);
            TK            = SIMD_FNMADD(KP948034035, TJ, T5);
            Tj            = SIMD_FNMADD(KP948034035, Ti, T3);
            Ts            = SIMD_FMADD(KP948034035, Tr, Tb);
            TB            = SIMD_FMADD(KP948034035, TA, T7);
            TL            = SIMD_FNMADD(KP969359657, TK, Ta);
            Tk            = SIMD_FMADD(KP969359657, Tj, T2);
            Tt            = SIMD_FMADD(KP969359657, Ts, T6);
            TC            = SIMD_FNMADD(KP969359657, TB, T4);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_979642883, TL, T1);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_979642883, Tk, T1);
            R0[0]         = SIMD_FNMADD(KP1_979642883, Tt, T1);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_979642883, TC, T1);
        }
    }
}

template <>
struct r2cb_traits<11, 8>
{
    static constexpr long_t flops           = 60;
    static constexpr long_t operations      = 30;
    static constexpr long_t memory_accesses = 14;
    static constexpr long_t stack_vars      = 49;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 8 -name
 * r2cb -standalone */

/*
 * This function contains 30 FP additions, 30 FP multiplications,
 * (or, 0 additions, 0 multiplications, 30 fused multiply/add),
 * 49 stack variables, 11 constants, and 14 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 8>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T2, T3, Ta, Tb, T4, T5, T6, T9, T7, T8, Tc, Tv, Tu, Tl;
        SIMD_FLOAT Td, Tw, Tm, Te, Tx, Tn, Tf, Ty, To, Tg, Tz, Tp, Th, TA, Tq;
        SIMD_FLOAT Ti, TB, Tr, Tj, TC, Ts, Tk, Tt;
        T1            = Cr[0];
        T2            = Ci[WS(cs, 1)];
        T3            = Cr[WS(cs, 2)];
        Ta            = Ci[WS(cs, 2)];
        Tb            = Cr[WS(cs, 1)];
        T4            = Ci[WS(cs, 3)];
        T5            = Cr[WS(cs, 4)];
        T6            = Ci[WS(cs, 5)];
        T9            = Cr[WS(cs, 3)];
        T7            = Cr[WS(cs, 5)];
        T8            = Ci[WS(cs, 4)];
        Tc            = SIMD_FMADD(KP505141613, Tb, Ta);
        Tv            = SIMD_FMADD(KP505141613, T5, T4);
        Tu            = SIMD_FMADD(KP825581363, T6, T3);
        Tl            = SIMD_FNMADD(KP505141613, T9, T6);
        Td            = SIMD_FNMADD(KP678195414, Tc, T9);
        Tw            = SIMD_FNMADD(KP678195414, Tv, Tb);
        Tm            = SIMD_FMADD(KP678195414, Tl, T3);
        Te            = SIMD_FMADD(KP768375231, Td, T8);
        Tx            = SIMD_FNMADD(KP634356270, Tw, Tu);
        Tn            = SIMD_FMADD(KP768375231, Tm, T2);
        Tf            = SIMD_FNMADD(KP825581363, Te, T7);
        Ty            = SIMD_FNMADD(KP866504932, Tx, Ta);
        To            = SIMD_FNMADD(KP825581363, Tn, T5);
        Tg            = SIMD_FNMADD(KP866504932, Tf, T6);
        Tz            = SIMD_FMADD(KP898361248, Ty, T7);
        Tp            = SIMD_FNMADD(KP866504932, To, T8);
        Th            = SIMD_FMADD(KP898361248, Tg, T5);
        TA            = SIMD_FMADD(KP924828432, Tz, T2);
        Tq            = SIMD_FMADD(KP898361248, Tp, Tb);
        Ti            = SIMD_FNMADD(KP924828432, Th, T4);
        TB            = SIMD_FNMADD(KP948034035, TA, T9);
        Tr            = SIMD_FMADD(KP924828432, Tq, Ta);
        Tj            = SIMD_FMADD(KP948034035, Ti, T3);
        TC            = SIMD_FMADD(KP969359657, TB, T8);
        Ts            = SIMD_FNMADD(KP948034035, Tr, T7);
        Tk            = SIMD_FNMADD(KP969359657, Tj, T2);
        R0[WS(rs, 1)] = SIMD_FNMADD(KP1_979642883, TC, T1);
        Tt            = SIMD_FNMADD(KP969359657, Ts, T4);
        R0[0]         = SIMD_FMADD(KP1_979642883, Tk, T1);
        R0[WS(rs, 2)] = SIMD_FMADD(KP1_979642883, Tt, T1);
    }
}

template <>
struct r2cb_traits<11, 9>
{
    static constexpr long_t flops           = 40;
    static constexpr long_t operations      = 20;
    static constexpr long_t memory_accesses = 13;
    static constexpr long_t stack_vars      = 41;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 9 -name
 * r2cb -standalone */

/*
 * This function contains 20 FP additions, 20 FP multiplications,
 * (or, 0 additions, 0 multiplications, 20 fused multiply/add),
 * 41 stack variables, 12 constants, and 13 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 9>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP549672837, +0.549672837535943181976026476842489594988382388);
    DK(KP661594815, +0.661594815223309085457969653633252453045438196);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T2, T8, Ta, T9, Tb, Tc, Td, T3, T4, T7, Te, T5, Tl, Tf;
        SIMD_FLOAT T6, Tm, Tg, Tn, Th, To, Ti, Tp, Tj, Tq, Tk, Tr, Ts, Tt;
        T1            = Cr[0];
        T2            = Ci[WS(cs, 4)];
        T8            = Ci[WS(cs, 1)];
        Ta            = Ci[WS(cs, 2)];
        T9            = Cr[WS(cs, 5)];
        Tb            = Cr[WS(cs, 1)];
        Tc            = Ci[WS(cs, 3)];
        Td            = Cr[WS(cs, 4)];
        T3            = Cr[WS(cs, 2)];
        T4            = Ci[WS(cs, 5)];
        T7            = Cr[WS(cs, 3)];
        Te            = SIMD_FMADD(KP505141613, Td, Tc);
        T5            = SIMD_FMADD(KP825581363, T4, T3);
        Tl            = SIMD_FNMADD(KP505141613, T7, T4);
        Tf            = SIMD_FNMADD(KP678195414, Te, Tb);
        T6            = SIMD_FMADD(KP661594815, T5, T2);
        Tm            = SIMD_FMADD(KP678195414, Tl, T3);
        Tg            = SIMD_FMADD(KP549672837, Tf, Ta);
        Tn            = SIMD_FMADD(KP768375231, Tm, T8);
        Th            = SIMD_FMADD(KP898361248, Tg, T9);
        To            = SIMD_FNMADD(KP825581363, Tn, Td);
        Ti            = SIMD_FMADD(KP924828432, Th, T8);
        Tp            = SIMD_FNMADD(KP866504932, To, T2);
        Tj            = SIMD_FNMADD(KP948034035, Ti, T7);
        Tq            = SIMD_FMADD(KP898361248, Tp, Tb);
        Tk            = SIMD_FMADD(KP969359657, Tj, T6);
        Tr            = SIMD_FMADD(KP924828432, Tq, Ta);
        R0[0]         = SIMD_FNMADD(KP1_979642883, Tk, T1);
        Ts            = SIMD_FNMADD(KP948034035, Tr, T9);
        Tt            = SIMD_FNMADD(KP969359657, Ts, Tc);
        R0[WS(rs, 1)] = SIMD_FMADD(KP1_979642883, Tt, T1);
    }
}

template <>
struct r2cb_traits<11, 10>
{
    static constexpr long_t flops           = 20;
    static constexpr long_t operations      = 10;
    static constexpr long_t memory_accesses = 12;
    static constexpr long_t stack_vars      = 30;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 11 -skip-k 10 -name
 * r2cb -standalone */

/*
 * This function contains 10 FP additions, 10 FP multiplications,
 * (or, 0 additions, 0 multiplications, 10 fused multiply/add),
 * 30 stack variables, 10 constants, and 12 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 10>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_979642883, +1.979642883761865464752184075553437574753038744);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T2, T5, T4, T3, T6, T7, T8, T9, Ta, Tb, Tc, Td, Te, Tf;
        SIMD_FLOAT Tg, Th, Ti, Tj, Tk;
        T1    = Cr[0];
        T2    = Ci[WS(cs, 3)];
        T5    = Cr[WS(cs, 1)];
        T4    = Ci[WS(cs, 2)];
        T3    = Cr[WS(cs, 5)];
        T6    = Ci[WS(cs, 4)];
        T7    = Cr[WS(cs, 4)];
        T8    = Ci[WS(cs, 1)];
        T9    = Cr[WS(cs, 2)];
        Ta    = Ci[WS(cs, 5)];
        Tb    = Cr[WS(cs, 3)];
        Tc    = SIMD_FNMADD(KP505141613, Tb, Ta);
        Td    = SIMD_FMADD(KP678195414, Tc, T9);
        Te    = SIMD_FMADD(KP768375231, Td, T8);
        Tf    = SIMD_FNMADD(KP825581363, Te, T7);
        Tg    = SIMD_FNMADD(KP866504932, Tf, T6);
        Th    = SIMD_FMADD(KP898361248, Tg, T5);
        Ti    = SIMD_FMADD(KP924828432, Th, T4);
        Tj    = SIMD_FNMADD(KP948034035, Ti, T3);
        Tk    = SIMD_FNMADD(KP969359657, Tj, T2);
        R0[0] = SIMD_FMADD(KP1_979642883, Tk, T1);
    }
}
