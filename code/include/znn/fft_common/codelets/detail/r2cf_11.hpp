//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cf_traits<11, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 7;
    static constexpr long_t stack_vars      = 1;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 1 -name r2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 1 stack variables, 0 constants, and 7 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 1>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    {
        SIMD_FLOAT T1;
        T1            = R0[0];
        Cr[WS(cs, 2)] = T1;
        Cr[WS(cs, 3)] = T1;
        Cr[WS(cs, 4)] = T1;
        Cr[WS(cs, 5)] = T1;
        Cr[WS(cs, 1)] = T1;
        Cr[0]         = T1;
    }
}

template <>
struct r2cf_traits<11, 2>
{
    static constexpr long_t flops           = 16;
    static constexpr long_t operations      = 11;
    static constexpr long_t memory_accesses = 13;
    static constexpr long_t stack_vars      = 12;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 2 -name r2cf
 * -standalone */

/*
 * This function contains 6 FP additions, 10 FP multiplications,
 * (or, 1 additions, 5 multiplications, 5 fused multiply/add),
 * 12 stack variables, 10 constants, and 13 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 2>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP654860733, +0.654860733945285064056925072466293553183791199);
    DK(KP415415013, +0.415415013001886425529274149229623203524004910);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP142314838, +0.142314838273285140443792668616369668791051361);
    DK(KP841253532, +0.841253532831181168861811648919367717513292498);
    DK(KP281732556, +0.281732556841429697711417915346616899035777899);
    DK(KP755749574, +0.755749574354258283774035843972344420179717445);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP540640817, +0.540640817455597582107635954318691695431770608);
    DK(KP909631995, +0.909631995354518371411715383079028460060241051);
    {
        SIMD_FLOAT T1, T2;
        T1            = R0[WS(rs, 1)];
        T2            = R0[0];
        Ci[WS(cs, 2)] = -(KP909631995 * T1);
        Ci[WS(cs, 1)] = -(KP540640817 * T1);
        Ci[WS(cs, 3)] = -(KP989821441 * T1);
        Ci[WS(cs, 4)] = -(KP755749574 * T1);
        Ci[WS(cs, 5)] = -(KP281732556 * T1);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP841253532, T1, T2);
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP142314838, T1, T2);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, T1, T2);
        Cr[0]         = T2 + T1;
        Cr[WS(cs, 2)] = SIMD_FMADD(KP415415013, T1, T2);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP654860733, T1, T2);
    }
}

template <>
struct r2cf_traits<11, 3>
{
    static constexpr long_t flops           = 37;
    static constexpr long_t operations      = 22;
    static constexpr long_t memory_accesses = 14;
    static constexpr long_t stack_vars      = 24;
    static constexpr long_t constants       = 16;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 3 -name r2cf
 * -standalone */

/*
 * This function contains 17 FP additions, 20 FP multiplications,
 * (or, 2 additions, 5 multiplications, 15 fused multiply/add),
 * 24 stack variables, 16 constants, and 14 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 3>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP841253532, +0.841253532831181168861811648919367717513292498);
    DK(KP654860733, +0.654860733945285064056925072466293553183791199);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP217320768, +0.217320768976164987771924222479572967435768201);
    DK(KP148322960, +0.148322960341410513334925000620510972021424824);
    DK(KP493804776, +0.493804776788081519720752333508082547127214755);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP763521118, +0.763521118433367557942887183706080036901675300);
    DK(KP284629676, +0.284629676546570280887585337232739337582102722);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP594351144, +0.594351144437140409001435482165326443949685121);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP909631995, +0.909631995354518371411715383079028460060241051);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP540640817, +0.540640817455597582107635954318691695431770608);
    {
        SIMD_FLOAT T1, T2, T3, T7, T6, T5, T8, T4;
        T1            = R0[0];
        T2            = R0[WS(rs, 1)];
        T3            = R0[WS(rs, 2)];
        Cr[0]         = T1 + T2 + T3;
        Ci[WS(cs, 5)] = KP540640817 * (SIMD_FNMADD(KP521108558, T2, T3));
        Ci[WS(cs, 2)] = -(KP909631995 * (SIMD_FMADD(KP830830026, T3, T2)));
        Ci[WS(cs, 1)] = -(KP909631995 * (SIMD_FMADD(KP594351144, T2, T3)));
        Ci[WS(cs, 3)] = KP989821441 * (SIMD_FMSUB(KP284629676, T3, T2));
        Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP763521118, T2, T3));
        T7            = SIMD_FMSUB(KP876768831, T3, T2);
        T6            = SIMD_FMSUB(KP634356270, T2, T3);
        T5            = SIMD_FMADD(KP493804776, T3, T2);
        T8            = SIMD_FMADD(KP148322960, T2, T3);
        T4            = SIMD_FMADD(KP217320768, T3, T2);
        Cr[WS(cs, 5)] = SIMD_FMADD(KP959492973, T7, T1);
        Cr[WS(cs, 2)] = SIMD_FMADD(KP654860733, T6, T1);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP841253532, T5, T1);
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, T8, T1);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP654860733, T4, T1);
    }
}

template <>
struct r2cf_traits<11, 4>
{
    static constexpr long_t flops           = 58;
    static constexpr long_t operations      = 33;
    static constexpr long_t memory_accesses = 15;
    static constexpr long_t stack_vars      = 40;
    static constexpr long_t constants       = 21;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 4 -name r2cf
 * -standalone */

/*
 * This function contains 28 FP additions, 30 FP multiplications,
 * (or, 3 additions, 5 multiplications, 25 fused multiply/add),
 * 40 stack variables, 21 constants, and 15 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 4>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP841253532, +0.841253532831181168861811648919367717513292498);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP493804776, +0.493804776788081519720752333508082547127214755);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP909631995, +0.909631995354518371411715383079028460060241051);
    DK(KP682507065, +0.682507065662362337723623297838735435026584997);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP755749574, +0.755749574354258283774035843972344420179717445);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP432952636, +0.432952636887980794222510337853250309603527546);
    DK(KP763521118, +0.763521118433367557942887183706080036901675300);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP217320768, +0.217320768976164987771924222479572967435768201);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP594351144, +0.594351144437140409001435482165326443949685121);
    DK(KP372785597, +0.372785597771792209609773152906148328659002598);
    DK(KP309721467, +0.309721467890570128113850144932587106367582399);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    {
        SIMD_FLOAT T1, T2, T4, T3, T8, Ta, Tb, Tg, T7, T5, Tj, Th, Td, Te, T9;
        SIMD_FLOAT Tc, Tf, Ti, T6;
        T1            = R0[0];
        T2            = R0[WS(rs, 1)];
        T4            = R0[WS(rs, 3)];
        T3            = R0[WS(rs, 2)];
        T8            = SIMD_FNMADD(KP342584725, T2, T4);
        Ta            = SIMD_FMADD(KP715370323, T4, T2);
        Cr[0]         = T1 + T2 + T3 + T4;
        Tb            = SIMD_FNMADD(KP778434453, T4, T3);
        Tg            = SIMD_FMADD(KP309721467, T3, T4);
        T7            = SIMD_FMSUB(KP372785597, T4, T3);
        T5            = SIMD_FNMADD(KP342584725, T4, T3);
        Tj            = SIMD_FMADD(KP594351144, T2, T3);
        Th            = SIMD_FMSUB(KP634356270, T2, T3);
        Td            = SIMD_FNMADD(KP521108558, T2, T3);
        Te            = SIMD_FMADD(KP217320768, T3, T2);
        Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP763521118, Ta, T3));
        T9            = SIMD_FNMADD(KP432952636, T8, T3);
        Tc            = SIMD_FNMADD(KP876768831, Tb, T2);
        Tf            = SIMD_FNMADD(KP778434453, Te, T4);
        Ci[WS(cs, 5)] = -(KP755749574 * (SIMD_FNMADD(KP715370323, Td, T4)));
        Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, Tg, T2)));
        Ti            = SIMD_FNMADD(KP682507065, Th, T4);
        Ci[WS(cs, 2)] = -(KP909631995 * (SIMD_FNMADD(KP830830026, T7, T2)));
        Ci[WS(cs, 1)] = -(KP989821441 * (SIMD_FMADD(KP918985947, Tj, T4)));
        T6            = SIMD_FMADD(KP493804776, T5, T2);
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, T9, T1);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Tc, T1);
        Cr[WS(cs, 4)] = SIMD_FMADD(KP841253532, Tf, T1);
        Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Ti, T1);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP841253532, T6, T1);
    }
}

template <>
struct r2cf_traits<11, 5>
{
    static constexpr long_t flops           = 79;
    static constexpr long_t operations      = 44;
    static constexpr long_t memory_accesses = 16;
    static constexpr long_t stack_vars      = 48;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 5 -name r2cf
 * -standalone */

/*
 * This function contains 39 FP additions, 40 FP multiplications,
 * (or, 4 additions, 5 multiplications, 35 fused multiply/add),
 * 48 stack variables, 18 constants, and 16 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 5>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP841253532, +0.841253532831181168861811648919367717513292498);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP763521118, +0.763521118433367557942887183706080036901675300);
    DK(KP682507065, +0.682507065662362337723623297838735435026584997);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP909631995, +0.909631995354518371411715383079028460060241051);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP493804776, +0.493804776788081519720752333508082547127214755);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP594351144, +0.594351144437140409001435482165326443949685121);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP372785597, +0.372785597771792209609773152906148328659002598);
    DK(KP217320768, +0.217320768976164987771924222479572967435768201);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T7, T1, T4, T2, T3, Te, T8, Tj, To, Tq, Tt, Tg, Tb, T5, Tl;
        SIMD_FLOAT Tf, Tk, Tp, Tr, T9, Tu, T6, Tm, Th, Tc, Ts, Ta, Tn, Ti, Td;
        T7            = R0[0];
        T1            = R0[WS(rs, 2)];
        T4            = R0[WS(rs, 4)];
        T2            = R0[WS(rs, 1)];
        T3            = R0[WS(rs, 3)];
        Te            = SIMD_FMSUB(KP521108558, T1, T4);
        T8            = SIMD_FNMADD(KP342584725, T4, T2);
        Tj            = SIMD_FMADD(KP715370323, T2, T4);
        To            = SIMD_FNMADD(KP521108558, T2, T1);
        Tq            = SIMD_FMADD(KP217320768, T1, T2);
        Cr[0]         = T7 + T2 + T1 + T3 + T4;
        Tt            = SIMD_FMSUB(KP372785597, T3, T1);
        Tg            = SIMD_FNMADD(KP342584725, T3, T1);
        Tb            = SIMD_FMSUB(KP634356270, T4, T3);
        T5            = SIMD_FMADD(KP521108558, T4, T3);
        Tl            = SIMD_FNMADD(KP342584725, T2, T3);
        Tf            = SIMD_FMADD(KP594351144, Te, T3);
        Tk            = SIMD_FMADD(KP830830026, Tj, T1);
        Tp            = SIMD_FNMADD(KP715370323, To, T3);
        Tr            = SIMD_FNMADD(KP778434453, Tq, T3);
        T9            = SIMD_FNMADD(KP634356270, T8, T1);
        Tu            = SIMD_FNMADD(KP830830026, Tt, T2);
        T6            = SIMD_FMADD(KP715370323, T5, T2);
        Tm            = SIMD_FMADD(KP493804776, Tl, T4);
        Th            = SIMD_FNMADD(KP634356270, Tg, T4);
        Tc            = SIMD_FMADD(KP778434453, Tb, T1);
        Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, Tf, T2)));
        Ci[WS(cs, 1)] = -(KP989821441 * (SIMD_FMADD(KP918985947, Tk, T3)));
        Ci[WS(cs, 5)] = KP909631995 * (SIMD_FNMADD(KP830830026, Tp, T4));
        Ts            = SIMD_FNMADD(KP876768831, Tr, T4);
        Ta            = SIMD_FMADD(KP682507065, T9, T3);
        Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, Tu, T4));
        Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP763521118, T6, T1));
        Tn            = SIMD_FNMADD(KP876768831, Tm, T1);
        Ti            = SIMD_FNMADD(KP778434453, Th, T2);
        Td            = SIMD_FNMADD(KP876768831, Tc, T2);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Ts, T7);
        Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Ta, T7);
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, Tn, T7);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP841253532, Ti, T7);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Td, T7);
    }
}

template <>
struct r2cf_traits<11, 6>
{
    static constexpr long_t flops           = 100;
    static constexpr long_t operations      = 55;
    static constexpr long_t memory_accesses = 17;
    static constexpr long_t stack_vars      = 51;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 6 -name r2cf
 * -standalone */

/*
 * This function contains 50 FP additions, 50 FP multiplications,
 * (or, 5 additions, 5 multiplications, 45 fused multiply/add),
 * 51 stack variables, 10 constants, and 17 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 6>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T2, T6, T3, T4, T5;
        T1 = R0[0];
        T2 = R0[WS(rs, 1)];
        T6 = R0[WS(rs, 5)];
        T3 = R0[WS(rs, 2)];
        T4 = R0[WS(rs, 3)];
        T5 = R0[WS(rs, 4)];
        {
            SIMD_FLOAT Tb, TD, Te, Tl, Ti, Tz, Ts, Tp, Tw, T7, Tc, TE, Tf, Tm,
                Tj;
            SIMD_FLOAT TA, Tt, Tq, Tx, T8, Td, TF, Tg, Tn, Tk, TB, Tu, Tr, Ty,
                T9;
            SIMD_FLOAT Th, To, TC, Tv, Ta;
            Tb            = SIMD_FMADD(KP521108558, T6, T2);
            TD            = SIMD_FNMADD(KP521108558, T2, T3);
            Te            = SIMD_FNMADD(KP342584725, T3, T6);
            Tl            = SIMD_FNMADD(KP342584725, T2, T4);
            Ti            = SIMD_FMADD(KP521108558, T4, T6);
            Tz            = SIMD_FNMADD(KP342584725, T4, T3);
            Cr[0]         = T1 + T2 + T3 + T4 + T5 + T6;
            Ts            = SIMD_FNMADD(KP342584725, T5, T2);
            Tp            = SIMD_FMSUB(KP521108558, T3, T5);
            Tw            = SIMD_FMADD(KP521108558, T5, T4);
            T7            = SIMD_FNMADD(KP342584725, T6, T5);
            Tc            = SIMD_FMADD(KP715370323, Tb, T5);
            TE            = SIMD_FNMADD(KP715370323, TD, T4);
            Tf            = SIMD_FNMADD(KP634356270, Te, T2);
            Tm            = SIMD_FNMADD(KP634356270, Tl, T6);
            Tj            = SIMD_FNMADD(KP715370323, Ti, T3);
            TA            = SIMD_FNMADD(KP634356270, Tz, T5);
            Tt            = SIMD_FNMADD(KP634356270, Ts, T3);
            Tq            = SIMD_FNMADD(KP715370323, Tp, T6);
            Tx            = SIMD_FMADD(KP715370323, Tw, T2);
            T8            = SIMD_FNMADD(KP634356270, T7, T4);
            Td            = SIMD_FMADD(KP830830026, Tc, T3);
            TF            = SIMD_FNMADD(KP830830026, TE, T5);
            Tg            = SIMD_FNMADD(KP778434453, Tf, T4);
            Tn            = SIMD_FNMADD(KP778434453, Tm, T5);
            Tk            = SIMD_FMADD(KP830830026, Tj, T2);
            TB            = SIMD_FNMADD(KP778434453, TA, T2);
            Tu            = SIMD_FNMADD(KP778434453, Tt, T6);
            Tr            = SIMD_FNMADD(KP830830026, Tq, T4);
            Ty            = SIMD_FNMADD(KP830830026, Tx, T6);
            T9            = SIMD_FNMADD(KP778434453, T8, T3);
            Ci[WS(cs, 1)] = -(KP989821441 * (SIMD_FMADD(KP918985947, Td, T4)));
            Ci[WS(cs, 5)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, TF, T6)));
            Th            = SIMD_FNMADD(KP876768831, Tg, T5);
            To            = SIMD_FNMADD(KP876768831, Tn, T3);
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, Tk, T5));
            TC            = SIMD_FNMADD(KP876768831, TB, T6);
            Tv            = SIMD_FNMADD(KP876768831, Tu, T4);
            Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, Tr, T2)));
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FMADD(KP918985947, Ty, T3));
            Ta            = SIMD_FNMADD(KP876768831, T9, T2);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Th, T1);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, To, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, TC, T1);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Tv, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Ta, T1);
        }
    }
}

template <>
struct r2cf_traits<11, 7>
{
    static constexpr long_t flops           = 102;
    static constexpr long_t operations      = 57;
    static constexpr long_t memory_accesses = 18;
    static constexpr long_t stack_vars      = 54;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 7 -name r2cf
 * -standalone */

/*
 * This function contains 52 FP additions, 50 FP multiplications,
 * (or, 7 additions, 5 multiplications, 45 fused multiply/add),
 * 54 stack variables, 10 constants, and 18 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 7>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    {
        SIMD_FLOAT T1, T6, T7, T2, T5, T3, T4;
        T1 = R0[0];
        T6 = R0[WS(rs, 5)];
        T7 = R0[WS(rs, 6)];
        T2 = R0[WS(rs, 1)];
        T5 = R0[WS(rs, 4)];
        T3 = R0[WS(rs, 2)];
        T4 = R0[WS(rs, 3)];
        {
            SIMD_FLOAT Tt, T8, Tl, TA, TG, Tp, TD, Th, Tu, Tx, Td, T9, Tm, TB,
                TH;
            SIMD_FLOAT Tq, TE, Ti, Tv, Ty, Te, Ta, Tn, TC, TI, Tr, TF, Tj, Tw,
                Tz;
            SIMD_FLOAT Tf, Tb, To, Ts, Tk, Tg, Tc;
            Tt            = T7 - T6;
            T8            = T6 + T7;
            Tl            = SIMD_FNMADD(KP342584725, T5, T2);
            TA            = SIMD_FMSUB(KP521108558, T3, T5);
            TG            = SIMD_FNMADD(KP521108558, T2, T3);
            Tp            = SIMD_FNMADD(KP342584725, T4, T3);
            TD            = SIMD_FMADD(KP521108558, T5, T4);
            Th            = SIMD_FNMADD(KP342584725, T2, T4);
            Tu            = SIMD_FNMADD(KP521108558, T4, Tt);
            Tx            = SIMD_FMSUB(KP521108558, Tt, T2);
            Cr[0]         = T1 + T2 + T3 + T4 + T5 + T8;
            Td            = SIMD_FNMADD(KP342584725, T3, T8);
            T9            = SIMD_FNMADD(KP342584725, T8, T5);
            Tm            = SIMD_FNMADD(KP634356270, Tl, T3);
            TB            = SIMD_FMADD(KP715370323, TA, Tt);
            TH            = SIMD_FNMADD(KP715370323, TG, T4);
            Tq            = SIMD_FNMADD(KP634356270, Tp, T5);
            TE            = SIMD_FMADD(KP715370323, TD, T2);
            Ti            = SIMD_FNMADD(KP634356270, Th, T8);
            Tv            = SIMD_FMADD(KP715370323, Tu, T3);
            Ty            = SIMD_FNMADD(KP715370323, Tx, T5);
            Te            = SIMD_FNMADD(KP634356270, Td, T2);
            Ta            = SIMD_FNMADD(KP634356270, T9, T4);
            Tn            = SIMD_FNMADD(KP778434453, Tm, T8);
            TC            = SIMD_FMADD(KP830830026, TB, T4);
            TI            = SIMD_FNMADD(KP830830026, TH, T5);
            Tr            = SIMD_FNMADD(KP778434453, Tq, T2);
            TF            = SIMD_FMADD(KP830830026, TE, Tt);
            Tj            = SIMD_FNMADD(KP778434453, Ti, T5);
            Tw            = SIMD_FMADD(KP830830026, Tv, T2);
            Tz            = SIMD_FMADD(KP830830026, Ty, T3);
            Tf            = SIMD_FNMADD(KP778434453, Te, T4);
            Tb            = SIMD_FNMADD(KP778434453, Ta, T3);
            To            = SIMD_FNMADD(KP876768831, Tn, T4);
            Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, TC, T2)));
            Ci[WS(cs, 5)] = KP989821441 * (SIMD_FMADD(KP918985947, TI, Tt));
            Ts            = SIMD_FNMADD(KP876768831, Tr, T8);
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP918985947, TF, T3));
            Tk            = SIMD_FNMADD(KP876768831, Tj, T3);
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, Tw, T5));
            Ci[WS(cs, 1)] = -(KP989821441 * (SIMD_FMADD(KP918985947, Tz, T4)));
            Tg            = SIMD_FNMADD(KP876768831, Tf, T5);
            Tc            = SIMD_FNMADD(KP876768831, Tb, T2);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, To, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, Ts, T1);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, Tk, T1);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Tg, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Tc, T1);
        }
    }
}

template <>
struct r2cf_traits<11, 8>
{
    static constexpr long_t flops           = 104;
    static constexpr long_t operations      = 59;
    static constexpr long_t memory_accesses = 19;
    static constexpr long_t stack_vars      = 57;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 8 -name r2cf
 * -standalone */

/*
 * This function contains 54 FP additions, 50 FP multiplications,
 * (or, 9 additions, 5 multiplications, 45 fused multiply/add),
 * 57 stack variables, 10 constants, and 19 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 8>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    {
        SIMD_FLOAT T1, T5, T6, T8, T9, T2, T4, T3, T7, Tv, Ta, Tw, Tj, Tr, TJ;
        T1 = R0[0];
        T5 = R0[WS(rs, 4)];
        T6 = R0[WS(rs, 7)];
        T8 = R0[WS(rs, 5)];
        T9 = R0[WS(rs, 6)];
        T2 = R0[WS(rs, 1)];
        T4 = R0[WS(rs, 3)];
        T3 = R0[WS(rs, 2)];
        T7 = T5 + T6;
        Tv = T5 - T6;
        Ta = T8 + T9;
        Tw = T9 - T8;
        Tj = SIMD_FNMADD(KP342584725, T2, T4);
        Tr = SIMD_FNMADD(KP342584725, T4, T3);
        TJ = SIMD_FNMADD(KP521108558, T2, T3);
        {
            SIMD_FLOAT TD, TG, Tn, TA, Tx, Tf, Tb, Tk, Ts, TK, TE, TH, To, TB,
                Ty;
            SIMD_FLOAT Tg, Tc, Tl, Tt, TL, TF, TI, Tp, TC, Tz, Th, Td, Tm, Tu,
                Tq;
            SIMD_FLOAT Ti, Te;
            TD            = SIMD_FNMADD(KP521108558, T3, Tv);
            TG            = SIMD_FMADD(KP521108558, Tv, T4);
            Tn            = SIMD_FNMADD(KP342584725, T7, T2);
            TA            = SIMD_FMSUB(KP521108558, Tw, T2);
            Tx            = SIMD_FNMADD(KP521108558, T4, Tw);
            Cr[0]         = T1 + T2 + T3 + T4 + T7 + Ta;
            Tf            = SIMD_FNMADD(KP342584725, T3, Ta);
            Tb            = SIMD_FNMADD(KP342584725, Ta, T7);
            Tk            = SIMD_FNMADD(KP634356270, Tj, Ta);
            Ts            = SIMD_FNMADD(KP634356270, Tr, T7);
            TK            = SIMD_FNMADD(KP715370323, TJ, T4);
            TE            = SIMD_FNMADD(KP715370323, TD, Tw);
            TH            = SIMD_FMADD(KP715370323, TG, T2);
            To            = SIMD_FNMADD(KP634356270, Tn, T3);
            TB            = SIMD_FNMADD(KP715370323, TA, Tv);
            Ty            = SIMD_FMADD(KP715370323, Tx, T3);
            Tg            = SIMD_FNMADD(KP634356270, Tf, T2);
            Tc            = SIMD_FNMADD(KP634356270, Tb, T4);
            Tl            = SIMD_FNMADD(KP778434453, Tk, T7);
            Tt            = SIMD_FNMADD(KP778434453, Ts, T2);
            TL            = SIMD_FNMADD(KP830830026, TK, Tv);
            TF            = SIMD_FMADD(KP830830026, TE, T4);
            TI            = SIMD_FMADD(KP830830026, TH, Tw);
            Tp            = SIMD_FNMADD(KP778434453, To, Ta);
            TC            = SIMD_FMADD(KP830830026, TB, T3);
            Tz            = SIMD_FMADD(KP830830026, Ty, T2);
            Th            = SIMD_FNMADD(KP778434453, Tg, T4);
            Td            = SIMD_FNMADD(KP778434453, Tc, T3);
            Tm            = SIMD_FNMADD(KP876768831, Tl, T3);
            Tu            = SIMD_FNMADD(KP876768831, Tt, Ta);
            Ci[WS(cs, 5)] = KP989821441 * (SIMD_FMADD(KP918985947, TL, Tw));
            Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FNMADD(KP918985947, TF, T2)));
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP918985947, TI, T3));
            Tq            = SIMD_FNMADD(KP876768831, Tp, T4);
            Ci[WS(cs, 1)] = -(KP989821441 * (SIMD_FMADD(KP918985947, TC, T4)));
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, Tz, Tv));
            Ti            = SIMD_FNMADD(KP876768831, Th, T7);
            Te            = SIMD_FNMADD(KP876768831, Td, T2);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, Tm, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, Tu, T1);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Tq, T1);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Ti, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Te, T1);
        }
    }
}

template <>
struct r2cf_traits<11, 9>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 61;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 60;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 9 -name r2cf
 * -standalone */

/*
 * This function contains 56 FP additions, 50 FP multiplications,
 * (or, 11 additions, 5 multiplications, 45 fused multiply/add),
 * 60 stack variables, 10 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 9>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T2, T3, Ta, Tb, T4, T5, T7, T8, TM, Tc, Ty, T6, Tz, T9;
        SIMD_FLOAT Tx;
        T1 = R0[0];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 2)];
        Ta = R0[WS(rs, 5)];
        Tb = R0[WS(rs, 6)];
        T4 = R0[WS(rs, 3)];
        T5 = R0[WS(rs, 8)];
        T7 = R0[WS(rs, 4)];
        T8 = R0[WS(rs, 7)];
        TM = SIMD_FNMADD(KP521108558, T2, T3);
        Tc = Ta + Tb;
        Ty = Tb - Ta;
        T6 = T4 + T5;
        Tz = T5 - T4;
        T9 = T7 + T8;
        Tx = T7 - T8;
        {
            SIMD_FLOAT TD, Th, TN, TA, Tl, Tt, TJ, TG, Tp, Td, TE, Ti, TO, TB,
                Tm;
            SIMD_FLOAT Tu, TK, TH, Tq, Te, TF, Tj, TC, Tn, Tv, TL, TI, Tr, Tf,
                Tk;
            SIMD_FLOAT To, Tw, Ts, Tg;
            TD            = SIMD_FMSUB(KP521108558, Ty, T2);
            Th            = SIMD_FNMADD(KP342584725, T3, Tc);
            TN            = SIMD_FMADD(KP715370323, TM, Tz);
            TA            = SIMD_FMADD(KP521108558, Tz, Ty);
            Tl            = SIMD_FNMADD(KP342584725, T2, T6);
            Tt            = SIMD_FNMADD(KP342584725, T6, T3);
            TJ            = SIMD_FNMADD(KP521108558, Tx, Tz);
            TG            = SIMD_FNMADD(KP521108558, T3, Tx);
            Cr[0]         = T1 + T2 + T3 + T6 + T9 + Tc;
            Tp            = SIMD_FNMADD(KP342584725, T9, T2);
            Td            = SIMD_FNMADD(KP342584725, Tc, T9);
            TE            = SIMD_FNMADD(KP715370323, TD, Tx);
            Ti            = SIMD_FNMADD(KP634356270, Th, T2);
            TO            = SIMD_FMADD(KP830830026, TN, Tx);
            TB            = SIMD_FMADD(KP715370323, TA, T3);
            Tm            = SIMD_FNMADD(KP634356270, Tl, Tc);
            Tu            = SIMD_FNMADD(KP634356270, Tt, T9);
            TK            = SIMD_FNMADD(KP715370323, TJ, T2);
            TH            = SIMD_FNMADD(KP715370323, TG, Ty);
            Tq            = SIMD_FNMADD(KP634356270, Tp, T3);
            Te            = SIMD_FNMADD(KP634356270, Td, T6);
            TF            = SIMD_FMADD(KP830830026, TE, T3);
            Tj            = SIMD_FNMADD(KP778434453, Ti, T6);
            Ci[WS(cs, 5)] = KP989821441 * (SIMD_FMADD(KP918985947, TO, Ty));
            TC            = SIMD_FMADD(KP830830026, TB, T2);
            Tn            = SIMD_FNMADD(KP778434453, Tm, T9);
            Tv            = SIMD_FNMADD(KP778434453, Tu, T2);
            TL            = SIMD_FMADD(KP830830026, TK, Ty);
            TI            = SIMD_FNMADD(KP830830026, TH, Tz);
            Tr            = SIMD_FNMADD(KP778434453, Tq, Tc);
            Tf            = SIMD_FNMADD(KP778434453, Te, T3);
            Ci[WS(cs, 1)] = KP989821441 * (SIMD_FNMADD(KP918985947, TF, Tz));
            Tk            = SIMD_FNMADD(KP876768831, Tj, T9);
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, TC, Tx));
            To            = SIMD_FNMADD(KP876768831, Tn, T3);
            Tw            = SIMD_FNMADD(KP876768831, Tv, Tc);
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP918985947, TL, T3));
            Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FMADD(KP918985947, TI, T2)));
            Ts            = SIMD_FNMADD(KP876768831, Tr, T6);
            Tg            = SIMD_FNMADD(KP876768831, Tf, T2);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Tk, T1);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, To, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, Tw, T1);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Ts, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Tg, T1);
        }
    }
}

template <>
struct r2cf_traits<11, 10>
{
    static constexpr long_t flops           = 108;
    static constexpr long_t operations      = 63;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 63;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 10 -name r2cf
 * -standalone */

/*
 * This function contains 58 FP additions, 50 FP multiplications,
 * (or, 13 additions, 5 multiplications, 45 fused multiply/add),
 * 63 stack variables, 10 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 10>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T2, Tc, Td, T3, T4, T6, T7, T9, Ta, Te, TB, T5, TA, T8;
        SIMD_FLOAT TC, Tb, Tz, TG;
        T1 = R0[0];
        T2 = R0[WS(rs, 1)];
        Tc = R0[WS(rs, 5)];
        Td = R0[WS(rs, 6)];
        T3 = R0[WS(rs, 2)];
        T4 = R0[WS(rs, 9)];
        T6 = R0[WS(rs, 3)];
        T7 = R0[WS(rs, 8)];
        T9 = R0[WS(rs, 4)];
        Ta = R0[WS(rs, 7)];
        Te = Tc + Td;
        TB = Td - Tc;
        T5 = T3 + T4;
        TA = T3 - T4;
        T8 = T6 + T7;
        TC = T7 - T6;
        Tb = T9 + Ta;
        Tz = T9 - Ta;
        TG = SIMD_FMSUB(KP521108558, TB, T2);
        {
            SIMD_FLOAT TP, Tj, TD, Tn, Tv, TM, TJ, Tr, Tf, TH, TQ, Tk, TE, To,
                Tw;
            SIMD_FLOAT TN, TK, Ts, Tg, TI, TR, Tl, TF, Tp, Tx, TO, TL, Tt, Th,
                Tm;
            SIMD_FLOAT Tq, Ty, Tu, Ti;
            TP            = SIMD_FNMADD(KP521108558, T2, TA);
            Tj            = SIMD_FNMADD(KP342584725, T5, Te);
            TD            = SIMD_FMADD(KP521108558, TC, TB);
            Tn            = SIMD_FNMADD(KP342584725, T2, T8);
            Tv            = SIMD_FNMADD(KP342584725, T8, T5);
            TM            = SIMD_FNMADD(KP521108558, Tz, TC);
            TJ            = SIMD_FNMADD(KP521108558, TA, Tz);
            Cr[0]         = T1 + T2 + T5 + T8 + Tb + Te;
            Tr            = SIMD_FNMADD(KP342584725, Tb, T2);
            Tf            = SIMD_FNMADD(KP342584725, Te, Tb);
            TH            = SIMD_FNMADD(KP715370323, TG, Tz);
            TQ            = SIMD_FMADD(KP715370323, TP, TC);
            Tk            = SIMD_FNMADD(KP634356270, Tj, T2);
            TE            = SIMD_FMADD(KP715370323, TD, TA);
            To            = SIMD_FNMADD(KP634356270, Tn, Te);
            Tw            = SIMD_FNMADD(KP634356270, Tv, Tb);
            TN            = SIMD_FNMADD(KP715370323, TM, T2);
            TK            = SIMD_FNMADD(KP715370323, TJ, TB);
            Ts            = SIMD_FNMADD(KP634356270, Tr, T5);
            Tg            = SIMD_FNMADD(KP634356270, Tf, T8);
            TI            = SIMD_FMADD(KP830830026, TH, TA);
            TR            = SIMD_FMADD(KP830830026, TQ, Tz);
            Tl            = SIMD_FNMADD(KP778434453, Tk, T8);
            TF            = SIMD_FMADD(KP830830026, TE, T2);
            Tp            = SIMD_FNMADD(KP778434453, To, Tb);
            Tx            = SIMD_FNMADD(KP778434453, Tw, T2);
            TO            = SIMD_FMADD(KP830830026, TN, TB);
            TL            = SIMD_FNMADD(KP830830026, TK, TC);
            Tt            = SIMD_FNMADD(KP778434453, Ts, Te);
            Th            = SIMD_FNMADD(KP778434453, Tg, T5);
            Ci[WS(cs, 1)] = KP989821441 * (SIMD_FNMADD(KP918985947, TI, TC));
            Ci[WS(cs, 5)] = KP989821441 * (SIMD_FMADD(KP918985947, TR, TB));
            Tm            = SIMD_FNMADD(KP876768831, Tl, Tb);
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FNMADD(KP918985947, TF, Tz));
            Tq            = SIMD_FNMADD(KP876768831, Tp, T5);
            Ty            = SIMD_FNMADD(KP876768831, Tx, Te);
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP918985947, TO, TA));
            Ci[WS(cs, 3)] = -(KP989821441 * (SIMD_FMADD(KP918985947, TL, T2)));
            Tu            = SIMD_FNMADD(KP876768831, Tt, T8);
            Ti            = SIMD_FNMADD(KP876768831, Th, T2);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, Tm, T1);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, Tq, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, Ty, T1);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Tu, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Ti, T1);
        }
    }
}

template <>
struct r2cf_traits<11, 11>
{
    static constexpr long_t flops           = 110;
    static constexpr long_t operations      = 65;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 66;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -first-k 11 -name r2cf
 * -standalone */

/*
 * This function contains 60 FP additions, 50 FP multiplications,
 * (or, 15 additions, 5 multiplications, 45 fused multiply/add),
 * 66 stack variables, 10 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && ProvidedElements == 11>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T2, T3, Te, Tf, T5, T6, T8, T9, Tb, Tc, TC, T4, TE, Tg;
        SIMD_FLOAT TD, T7, TF, Ta, TB, Td, TJ;
        T1 = R0[0];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 10)];
        Te = R0[WS(rs, 5)];
        Tf = R0[WS(rs, 6)];
        T5 = R0[WS(rs, 2)];
        T6 = R0[WS(rs, 9)];
        T8 = R0[WS(rs, 3)];
        T9 = R0[WS(rs, 8)];
        Tb = R0[WS(rs, 4)];
        Tc = R0[WS(rs, 7)];
        TC = T3 - T2;
        T4 = T2 + T3;
        TE = Tf - Te;
        Tg = Te + Tf;
        TD = T5 - T6;
        T7 = T5 + T6;
        TF = T9 - T8;
        Ta = T8 + T9;
        TB = Tb - Tc;
        Td = Tb + Tc;
        TJ = SIMD_FMADD(KP521108558, TE, TC);
        {
            SIMD_FLOAT TS, Tl, TG, Tp, Tx, TP, TM, Tt, Th, TK, TT, Tm, TH, Tq,
                Ty;
            SIMD_FLOAT TQ, TN, Tu, Ti, TL, TU, Tn, TI, Tr, Tz, TR, TO, Tv, Tj,
                To;
            SIMD_FLOAT Ts, TA, Tw, Tk;
            TS            = SIMD_FMADD(KP521108558, TC, TD);
            Tl            = SIMD_FNMADD(KP342584725, T7, Tg);
            TG            = SIMD_FMADD(KP521108558, TF, TE);
            Tp            = SIMD_FNMADD(KP342584725, T4, Ta);
            Tx            = SIMD_FNMADD(KP342584725, Ta, T7);
            TP            = SIMD_FNMADD(KP521108558, TB, TF);
            TM            = SIMD_FNMADD(KP521108558, TD, TB);
            Cr[0]         = T1 + T4 + T7 + Ta + Td + Tg;
            Tt            = SIMD_FNMADD(KP342584725, Td, T4);
            Th            = SIMD_FNMADD(KP342584725, Tg, Td);
            TK            = SIMD_FNMADD(KP715370323, TJ, TB);
            TT            = SIMD_FMADD(KP715370323, TS, TF);
            Tm            = SIMD_FNMADD(KP634356270, Tl, T4);
            TH            = SIMD_FMADD(KP715370323, TG, TD);
            Tq            = SIMD_FNMADD(KP634356270, Tp, Tg);
            Ty            = SIMD_FNMADD(KP634356270, Tx, Td);
            TQ            = SIMD_FMADD(KP715370323, TP, TC);
            TN            = SIMD_FNMADD(KP715370323, TM, TE);
            Tu            = SIMD_FNMADD(KP634356270, Tt, T7);
            Ti            = SIMD_FNMADD(KP634356270, Th, Ta);
            TL            = SIMD_FMADD(KP830830026, TK, TD);
            TU            = SIMD_FMADD(KP830830026, TT, TB);
            Tn            = SIMD_FNMADD(KP778434453, Tm, Ta);
            TI            = SIMD_FNMADD(KP830830026, TH, TC);
            Tr            = SIMD_FNMADD(KP778434453, Tq, Td);
            Tz            = SIMD_FNMADD(KP778434453, Ty, T4);
            TR            = SIMD_FNMADD(KP830830026, TQ, TE);
            TO            = SIMD_FNMADD(KP830830026, TN, TF);
            Tv            = SIMD_FNMADD(KP778434453, Tu, Tg);
            Tj            = SIMD_FNMADD(KP778434453, Ti, T7);
            Ci[WS(cs, 1)] = KP989821441 * (SIMD_FNMADD(KP918985947, TL, TF));
            Ci[WS(cs, 5)] = KP989821441 * (SIMD_FMADD(KP918985947, TU, TE));
            To            = SIMD_FNMADD(KP876768831, Tn, Td);
            Ci[WS(cs, 2)] = KP989821441 * (SIMD_FMADD(KP918985947, TI, TB));
            Ts            = SIMD_FNMADD(KP876768831, Tr, T7);
            TA            = SIMD_FNMADD(KP876768831, Tz, Tg);
            Ci[WS(cs, 4)] = KP989821441 * (SIMD_FNMADD(KP918985947, TR, TD));
            Ci[WS(cs, 3)] = KP989821441 * (SIMD_FNMADD(KP918985947, TO, TC));
            Tw            = SIMD_FNMADD(KP876768831, Tv, Ta);
            Tk            = SIMD_FNMADD(KP876768831, Tj, T4);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP959492973, To, T1);
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP959492973, Ts, T1);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP959492973, TA, T1);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP959492973, Tw, T1);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP959492973, Tk, T1);
        }
    }
}
