//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cf_traits<32, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 18;
    static constexpr long_t stack_vars      = 1;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 1 -name r2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 1 stack variables, 0 constants, and 18 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 1>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    {
        SIMD_FLOAT T1;
        T1             = R0[0];
        Cr[WS(cs, 10)] = T1;
        Cr[WS(cs, 11)] = T1;
        Cr[WS(cs, 7)]  = T1;
        Cr[WS(cs, 6)]  = T1;
        Cr[WS(cs, 5)]  = T1;
        Cr[WS(cs, 12)] = T1;
        Cr[WS(cs, 8)]  = T1;
        Cr[WS(cs, 9)]  = T1;
        Cr[WS(cs, 4)]  = T1;
        Cr[WS(cs, 15)] = T1;
        Cr[WS(cs, 14)] = T1;
        Cr[WS(cs, 2)]  = T1;
        Cr[WS(cs, 1)]  = T1;
        Cr[WS(cs, 16)] = T1;
        Cr[WS(cs, 13)] = T1;
        Cr[WS(cs, 3)]  = T1;
        Cr[0]          = T1;
    }
}

template <>
struct r2cf_traits<32, 2>
{
    static constexpr long_t flops           = 44;
    static constexpr long_t operations      = 30;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 9;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 2 -name r2cf
 * -standalone */

/*
 * This function contains 16 FP additions, 28 FP multiplications,
 * (or, 2 additions, 14 multiplications, 14 fused multiply/add),
 * 9 stack variables, 7 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 2>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP555570233, +0.555570233019602224742830813948532874374937191);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP382683432, +0.382683432365089771728459984030398866761344562);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP195090322, +0.195090322016128267848284868477022240927691618);
    {
        SIMD_FLOAT T1, T2;
        T1             = R0[0];
        T2             = R0[WS(rs, 1)];
        Cr[WS(cs, 8)]  = T1;
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP195090322, T2, T1);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2, T1);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP382683432, T2, T1);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T2, T1);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T2, T1);
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP382683432, T2, T1);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2, T1);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP555570233, T2, T1);
        Cr[WS(cs, 16)] = T1 - T2;
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T2, T1);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP555570233, T2, T1);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T2, T1);
        Cr[0]          = T1 + T2;
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP195090322, T2, T1);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T2, T1);
        Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T2, T1);
        Ci[WS(cs, 11)] = -(KP831469612 * T2);
        Ci[WS(cs, 3)]  = -(KP555570233 * T2);
        Ci[WS(cs, 10)] = -(KP923879532 * T2);
        Ci[WS(cs, 2)]  = -(KP382683432 * T2);
        Ci[WS(cs, 13)] = -(KP555570233 * T2);
        Ci[WS(cs, 6)]  = -(KP923879532 * T2);
        Ci[WS(cs, 14)] = -(KP382683432 * T2);
        Ci[WS(cs, 7)]  = -(KP980785280 * T2);
        Ci[WS(cs, 9)]  = -(KP980785280 * T2);
        Ci[WS(cs, 15)] = -(KP195090322 * T2);
        Ci[WS(cs, 4)]  = -(KP707106781 * T2);
        Ci[WS(cs, 12)] = -(KP707106781 * T2);
        Ci[WS(cs, 5)]  = -(KP831469612 * T2);
        Ci[WS(cs, 1)]  = -(KP195090322 * T2);
        Ci[WS(cs, 8)]  = -T2;
    }
}

template <>
struct r2cf_traits<32, 3>
{
    static constexpr long_t flops           = 84;
    static constexpr long_t operations      = 50;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 23;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 3 -name r2cf
 * -standalone */

/*
 * This function contains 38 FP additions, 46 FP multiplications,
 * (or, 4 additions, 12 multiplications, 34 fused multiply/add),
 * 23 stack variables, 13 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 3>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP555570233, +0.555570233019602224742830813948532874374937191);
    DK(KP195090322, +0.195090322016128267848284868477022240927691618);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP509795579, +0.509795579104159168941939803987843913682618492);
    DK(KP382683432, +0.382683432365089771728459984030398866761344562);
    DK(KP390180644, +0.390180644032256535696569736954044481855383236);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP601344886, +0.601344886935045280543721823909221835067255890);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T3, T1, T2, T8, T6, T7, T9, Ta, T5, T4;
        T3             = R0[WS(rs, 1)];
        T1             = R0[0];
        T2             = R0[WS(rs, 2)];
        Ci[WS(cs, 8)]  = -T3;
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T3, T1);
        Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T3, T1);
        Ci[WS(cs, 4)]  = -(SIMD_FMADD(KP707106781, T3, T2));
        Ci[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T3, T2);
        Ci[WS(cs, 5)]  = -(KP923879532 * (SIMD_FMADD(KP899976223, T3, T2)));
        Ci[WS(cs, 11)] = KP923879532 * (SIMD_FNMADD(KP899976223, T3, T2));
        Ci[WS(cs, 13)] = KP923879532 * (SIMD_FNMADD(KP601344886, T3, T2));
        Ci[WS(cs, 3)]  = -(KP923879532 * (SIMD_FMADD(KP601344886, T3, T2)));
        Ci[WS(cs, 7)]  = -(KP980785280 * (SIMD_FMADD(KP390180644, T2, T3)));
        Ci[WS(cs, 15)] = KP382683432 * (SIMD_FNMADD(KP509795579, T3, T2));
        Ci[WS(cs, 2)]  = -(KP707106781 * (SIMD_FMADD(KP541196100, T3, T2)));
        Ci[WS(cs, 14)] = KP707106781 * (SIMD_FNMADD(KP541196100, T3, T2));
        Ci[WS(cs, 6)]  = -(KP923879532 * (SIMD_FMADD(KP765366864, T2, T3)));
        Ci[WS(cs, 1)]  = -(KP382683432 * (SIMD_FMADD(KP509795579, T3, T2)));
        Ci[WS(cs, 10)] = KP923879532 * (SIMD_FMSUB(KP765366864, T2, T3));
        Ci[WS(cs, 9)]  = KP980785280 * (SIMD_FMSUB(KP390180644, T2, T3));
        Cr[WS(cs, 8)]  = T1 - T2;
        T8             = SIMD_FMADD(KP382683432, T2, T1);
        T6             = SIMD_FNMADD(KP923879532, T2, T1);
        T7             = SIMD_FNMADD(KP382683432, T2, T1);
        T9             = SIMD_FMADD(KP707106781, T2, T1);
        Ta             = SIMD_FMADD(KP923879532, T2, T1);
        T5             = SIMD_FNMADD(KP707106781, T2, T1);
        T4             = T1 + T2;
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T3, T8);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T3, T8);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP195090322, T3, T6);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP195090322, T3, T6);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP555570233, T3, T7);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP555570233, T3, T7);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T3, T9);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T3, T9);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T3, Ta);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T3, Ta);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP382683432, T3, T5);
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP382683432, T3, T5);
        Cr[0]          = T4 + T3;
        Cr[WS(cs, 16)] = T4 - T3;
    }
}

template <>
struct r2cf_traits<32, 4>
{
    static constexpr long_t flops           = 110;
    static constexpr long_t operations      = 64;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 41;
    static constexpr long_t constants       = 16;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 4 -name r2cf
 * -standalone */

/*
 * This function contains 52 FP additions, 58 FP multiplications,
 * (or, 6 additions, 12 multiplications, 46 fused multiply/add),
 * 41 stack variables, 16 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 4>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP688811980, +0.688811980233626959791357453986711042326129073);
    DK(KP555570233, +0.555570233019602224742830813948532874374937191);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP390180644, +0.390180644032256535696569736954044481855383236);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP382683432, +0.382683432365089771728459984030398866761344562);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1, T2, T4, T5, Tj, Tc, Th, Tl, Tn, T8, T3, T6, Tp, Ta, Tm;
        SIMD_FLOAT To, T7, T9, Tk, Tb, Tf, Te, Td, Ti, Tg;
        T1             = R0[0];
        T2             = R0[WS(rs, 2)];
        T4             = R0[WS(rs, 1)];
        T5             = R0[WS(rs, 3)];
        Cr[WS(cs, 8)]  = T1 - T2;
        Tj             = SIMD_FNMADD(KP707106781, T2, T1);
        Tc             = SIMD_FMADD(KP923879532, T2, T1);
        Th             = T1 + T2;
        Tl             = SIMD_FNMADD(KP923879532, T2, T1);
        Tn             = SIMD_FNMADD(KP382683432, T2, T1);
        T8             = SIMD_FMADD(KP707106781, T2, T1);
        T3             = SIMD_FMADD(KP382683432, T2, T1);
        T6             = SIMD_FNMADD(KP234633135, T5, T4);
        Tp             = T5 - T4;
        Ta             = SIMD_FMSUB(KP414213562, T5, T4);
        Tm             = SIMD_FMSUB(KP351153302, T4, T5);
        To             = SIMD_FMSUB(KP566454497, T4, T5);
        T7             = SIMD_FMADD(KP234633135, T5, T4);
        T9             = SIMD_FMADD(KP414213562, T5, T4);
        Tk             = SIMD_FMSUB(KP414213562, T4, T5);
        Tb             = SIMD_FMADD(KP351153302, T4, T5);
        Tf             = SIMD_FMADD(KP414213562, T4, T5);
        Te             = SIMD_FMSUB(KP847759065, T5, T4);
        Td             = SIMD_FMADD(KP847759065, T5, T4);
        Ti             = T4 + T5;
        Tg             = SIMD_FMADD(KP566454497, T4, T5);
        Ci[WS(cs, 3)]  = -(KP980785280 * (SIMD_FMADD(KP941979402, T2, Tg)));
        Ci[WS(cs, 13)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, T2, Tg)));
        Ci[WS(cs, 4)]  = -(SIMD_FMADD(KP707106781, Ti, T2));
        Cr[0]          = Th + Ti;
        Ci[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Ti, T2);
        Cr[WS(cs, 16)] = Th - Ti;
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Td, Tc);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, Td, Tc);
        Ci[WS(cs, 9)]  = KP980785280 * (SIMD_FMADD(KP390180644, T2, Te));
        Ci[WS(cs, 7)]  = KP980785280 * (SIMD_FNMADD(KP390180644, T2, Te));
        Ci[WS(cs, 2)]  = -(KP923879532 * (SIMD_FMADD(KP765366864, T2, Tf)));
        Ci[WS(cs, 14)] = -(KP923879532 * (SIMD_FNMADD(KP765366864, T2, Tf)));
        Ci[WS(cs, 15)] = -(KP555570233 * (SIMD_FNMADD(KP688811980, T2, Tb)));
        Ci[WS(cs, 1)]  = -(KP555570233 * (SIMD_FMADD(KP688811980, T2, Tb)));
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, Tk, Tj);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Tk, Tj);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T9, T8);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T9, T8);
        Ci[WS(cs, 11)] = KP923879532 * (SIMD_FNMADD(KP899976223, T7, T2));
        Ci[WS(cs, 5)]  = -(KP923879532 * (SIMD_FMADD(KP899976223, T7, T2)));
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, To, Tn);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, To, Tn);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP555570233, Tm, Tl);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP555570233, Tm, Tl);
        Ci[WS(cs, 10)] = KP923879532 * (SIMD_FMADD(KP765366864, T2, Ta));
        Ci[WS(cs, 6)]  = KP923879532 * (SIMD_FNMADD(KP765366864, T2, Ta));
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP707106781, Tp, T1);
        Cr[WS(cs, 12)] = SIMD_FMADD(KP707106781, Tp, T1);
        Ci[WS(cs, 8)]  = Tp;
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T6, T3);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T6, T3);
    }
}

template <>
struct r2cf_traits<32, 5>
{
    static constexpr long_t flops           = 124;
    static constexpr long_t operations      = 70;
    static constexpr long_t memory_accesses = 37;
    static constexpr long_t stack_vars      = 53;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 5 -name r2cf
 * -standalone */

/*
 * This function contains 62 FP additions, 62 FP multiplications,
 * (or, 8 additions, 8 multiplications, 54 fused multiply/add),
 * 53 stack variables, 17 constants, and 37 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 5>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP555570233, +0.555570233019602224742830813948532874374937191);
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP785694958, +0.785694958387102181277897367657216796046242113);
    DK(KP720959822, +0.720959822006947913789091890943021266894491146);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP382683432, +0.382683432365089771728459984030398866761344562);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1, T4, T2, T7, T8;
        T1 = R0[0];
        T4 = R0[WS(rs, 2)];
        T2 = R0[WS(rs, 4)];
        T7 = R0[WS(rs, 1)];
        T8 = R0[WS(rs, 3)];
        {
            SIMD_FLOAT Tc, Tt, Te, Tm, Tg, Tn, Ta, Tq, T3, Tz, T5, Ti, Tp, Ts,
                Tk;
            SIMD_FLOAT Tl, To, Th, Tu, Td, Tb, Ty, Tw, Tf, TA, T9, Tj, Tv, T6,
                Tx;
            SIMD_FLOAT Tr;
            Tc            = SIMD_FMADD(KP707106781, T4, T1);
            Tt            = SIMD_FNMADD(KP707106781, T4, T1);
            Te            = SIMD_FNMADD(KP707106781, T4, T2);
            Tm            = SIMD_FNMADD(KP541196100, T4, T2);
            Tg            = SIMD_FMADD(KP541196100, T4, T2);
            Tn            = SIMD_FMADD(KP707106781, T4, T2);
            Ta            = SIMD_FMSUB(KP765366864, T2, T4);
            Tq            = SIMD_FMADD(KP765366864, T2, T4);
            T3            = T1 + T2;
            Tz            = T1 - T2;
            T5            = SIMD_FNMADD(KP707106781, T2, T1);
            Ti            = SIMD_FMADD(KP707106781, T2, T1);
            Tp            = SIMD_FMADD(KP566454497, T7, T8);
            Ts            = T7 + T8;
            Tk            = SIMD_FMADD(KP847759065, T8, T7);
            Tl            = SIMD_FMSUB(KP847759065, T8, T7);
            To            = SIMD_FMADD(KP414213562, T7, T8);
            Th            = SIMD_FMADD(KP351153302, T7, T8);
            Tu            = SIMD_FMSUB(KP414213562, T7, T8);
            Td            = SIMD_FMADD(KP414213562, T8, T7);
            Tb            = SIMD_FMADD(KP234633135, T8, T7);
            Ty            = SIMD_FMSUB(KP566454497, T7, T8);
            Tw            = SIMD_FMSUB(KP351153302, T7, T8);
            Tf            = SIMD_FMSUB(KP414213562, T8, T7);
            TA            = T8 - T7;
            T9            = SIMD_FNMADD(KP234633135, T8, T7);
            Tj            = SIMD_FMADD(KP923879532, T4, Ti);
            Tv            = SIMD_FNMADD(KP923879532, T4, Ti);
            T6            = SIMD_FMADD(KP382683432, T4, T5);
            Tx            = SIMD_FNMADD(KP382683432, T4, T5);
            Tr            = T3 + T4;
            Cr[WS(cs, 8)] = T3 - T4;
            Ci[WS(cs, 3)] = -(KP980785280 * (SIMD_FMADD(KP941979402, Tq, Tp)));
            Ci[WS(cs, 13)] =
                -(KP980785280 * (SIMD_FNMADD(KP941979402, Tq, Tp)));
            Ci[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Ts, T4);
            Ci[WS(cs, 4)]  = -(SIMD_FMADD(KP707106781, Ts, T4));
            Ci[WS(cs, 9)]  = KP980785280 * (SIMD_FNMADD(KP720959822, Tm, Tl));
            Ci[WS(cs, 7)]  = KP980785280 * (SIMD_FMADD(KP720959822, Tm, Tl));
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, To, Tn);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, To, Tn));
            Ci[WS(cs, 15)] = KP707106781 * (SIMD_FNMADD(KP785694958, Th, Tg));
            Ci[WS(cs, 1)]  = -(KP707106781 * (SIMD_FMADD(KP785694958, Th, Tg)));
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, Tu, Tt);
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Tu, Tt);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Td, Tc);
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, Td, Tc);
            Ci[WS(cs, 11)] = -(KP923879532 * (SIMD_FMADD(KP899976223, Tb, Ta)));
            Ci[WS(cs, 5)]  = KP923879532 * (SIMD_FNMADD(KP899976223, Tb, Ta));
            Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, Tf, Te);
            Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Tf, Te);
            Cr[WS(cs, 12)] = SIMD_FMADD(KP707106781, TA, Tz);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP707106781, TA, Tz);
            Ci[WS(cs, 8)]  = TA;
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, Tk, Tj);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Tk, Tj);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP555570233, Tw, Tv);
            Cr[WS(cs, 9)]  = SIMD_FNMADD(KP555570233, Tw, Tv);
            Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T9, T6);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T9, T6);
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, Ty, Tx);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, Ty, Tx);
            Cr[0]          = Tr + Ts;
            Cr[WS(cs, 16)] = Tr - Ts;
        }
    }
}

template <>
struct r2cf_traits<32, 6>
{
    static constexpr long_t flops           = 138;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 63;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 6 -name r2cf
 * -standalone */

/*
 * This function contains 72 FP additions, 66 FP multiplications,
 * (or, 14 additions, 8 multiplications, 58 fused multiply/add),
 * 63 stack variables, 17 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 6>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP850430094, +0.850430094767256448766702844371412325197993080);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP720959822, +0.720959822006947913789091890943021266894491146);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP382683432, +0.382683432365089771728459984030398866761344562);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP541196100, +0.541196100146196984399723205366389420061072063);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    {
        SIMD_FLOAT Ta, T7, T8, T1, T4, T2, T9, Tz, TJ, Tf, Tj, Ts, Tx, Tp, TE;
        SIMD_FLOAT Te;
        Ta = R0[WS(rs, 3)];
        T7 = R0[WS(rs, 5)];
        T8 = R0[WS(rs, 1)];
        T1 = R0[0];
        T4 = R0[WS(rs, 2)];
        T2 = R0[WS(rs, 4)];
        T9 = SIMD_FMSUB(KP847759065, T8, T7);
        Tz = SIMD_FMADD(KP351153302, T7, T8);
        TJ = T8 + T7;
        Tf = SIMD_FNMADD(KP414213562, T7, T8);
        Tj = SIMD_FMADD(KP234633135, T8, T7);
        Ts = SIMD_FMADD(KP566454497, T7, T8);
        Tx = SIMD_FMADD(KP414213562, T8, T7);
        Tp = T8 - T7;
        TE = SIMD_FNMADD(KP707106781, T4, T1);
        Te = SIMD_FMADD(KP707106781, T4, T1);
        {
            SIMD_FLOAT TB, Td, Tw, Tl, Tv, Th, Tm, T5, TC, T3, TD, Tq, TF, Ty,
                Tu;
            SIMD_FLOAT Tt, Tk, To, Ti, Tg, TK, TA, TH, Tc, Tb, Tn, Tr, TG, T6,
                TI;
            TB             = SIMD_FMADD(KP765366864, T2, T4);
            Td             = SIMD_FMSUB(KP765366864, T2, T4);
            Tw             = SIMD_FMADD(KP707106781, T4, T2);
            Tl             = SIMD_FMADD(KP541196100, T4, T2);
            Tv             = SIMD_FNMADD(KP541196100, T4, T2);
            Th             = SIMD_FNMADD(KP707106781, T4, T2);
            Tm             = SIMD_FMADD(KP707106781, T2, T1);
            T5             = SIMD_FNMADD(KP707106781, T2, T1);
            TC             = T1 - T2;
            T3             = T1 + T2;
            TD             = Tp - Ta;
            Tq             = Tp + Ta;
            TF             = Tx - Ta;
            Ty             = Tx + Ta;
            Tu             = SIMD_FNMADD(KP847759065, Ta, Ts);
            Tt             = SIMD_FMADD(KP847759065, Ta, Ts);
            Tk             = SIMD_FMADD(KP668178637, Ta, Tj);
            To             = SIMD_FNMADD(KP668178637, Ta, Tj);
            Ti             = SIMD_FNMADD(KP414213562, Ta, Tf);
            Tg             = SIMD_FMADD(KP414213562, Ta, Tf);
            TK             = TJ + Ta;
            Ci[WS(cs, 8)]  = Ta - TJ;
            TA             = SIMD_FMADD(KP566454497, Tz, Ta);
            TH             = SIMD_FMSUB(KP566454497, Tz, Ta);
            Tc             = SIMD_FMADD(KP198912367, Ta, T9);
            Tb             = SIMD_FNMADD(KP198912367, Ta, T9);
            Tn             = SIMD_FNMADD(KP923879532, T4, Tm);
            Tr             = SIMD_FMADD(KP923879532, T4, Tm);
            TG             = SIMD_FNMADD(KP382683432, T4, T5);
            T6             = SIMD_FMADD(KP382683432, T4, T5);
            TI             = T3 + T4;
            Cr[WS(cs, 8)]  = T3 - T4;
            Ci[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tq, T4);
            Ci[WS(cs, 4)]  = -(SIMD_FMADD(KP707106781, Tq, T4));
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TD, TC);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TD, TC);
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Ty, Tw);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, Ty, Tw));
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, TF, TE);
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, TF, TE);
            Ci[WS(cs, 9)]  = -(KP980785280 * (SIMD_FMADD(KP720959822, Tv, Tu)));
            Ci[WS(cs, 7)] = -(KP980785280 * (SIMD_FNMADD(KP720959822, Tv, Tu)));
            Ci[WS(cs, 15)] =
                -(KP831469612 * (SIMD_FNMADD(KP850430094, Tl, Tk)));
            Ci[WS(cs, 1)]  = -(KP831469612 * (SIMD_FMADD(KP850430094, Tl, Tk)));
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, Tg, Te);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Tg, Te);
            Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, Ti, Th));
            Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, Ti, Th);
            Ci[WS(cs, 13)] =
                -(KP980785280 * (SIMD_FNMADD(KP941979402, TB, TA)));
            Ci[WS(cs, 3)]  = -(KP980785280 * (SIMD_FMADD(KP941979402, TB, TA)));
            Ci[WS(cs, 11)] = -(KP980785280 * (SIMD_FMADD(KP941979402, Td, Tc)));
            Ci[WS(cs, 5)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, Td, Tc)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP980785280, Tt, Tr);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Tt, Tr);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP831469612, To, Tn);
            Cr[WS(cs, 9)]  = SIMD_FNMADD(KP831469612, To, Tn);
            Cr[WS(cs, 3)]  = SIMD_FMADD(KP980785280, Tb, T6);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP980785280, Tb, T6);
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, TH, TG);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, TH, TG);
            Cr[0]          = TI + TK;
            Cr[WS(cs, 16)] = TI - TK;
        }
    }
}

template <>
struct r2cf_traits<32, 7>
{
    static constexpr long_t flops           = 148;
    static constexpr long_t operations      = 86;
    static constexpr long_t memory_accesses = 39;
    static constexpr long_t stack_vars      = 67;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 7 -name r2cf
 * -standalone */

/*
 * This function contains 78 FP additions, 70 FP multiplications,
 * (or, 16 additions, 8 multiplications, 62 fused multiply/add),
 * 67 stack variables, 14 constants, and 39 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 7>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP899976223, +0.899976223136415704638509540941888395538001727);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT Td, T1, T2, T4, T5, Ta, Tb, Ts, T7, TJ, T3, Tg, Ti, To, Tt;
        SIMD_FLOAT T8, T6;
        Td = R0[WS(rs, 3)];
        T1 = R0[0];
        T2 = R0[WS(rs, 4)];
        T4 = R0[WS(rs, 2)];
        T5 = R0[WS(rs, 6)];
        Ta = R0[WS(rs, 5)];
        Tb = R0[WS(rs, 1)];
        Ts = SIMD_FMADD(KP707106781, T2, T1);
        T7 = SIMD_FNMADD(KP707106781, T2, T1);
        TJ = T1 - T2;
        T3 = T1 + T2;
        Tg = SIMD_FMSUB(KP414213562, T5, T4);
        Ti = T4 - T5;
        To = SIMD_FMADD(KP414213562, T4, T5);
        Tt = SIMD_FMADD(KP414213562, T5, T4);
        T8 = SIMD_FMSUB(KP414213562, T4, T5);
        T6 = T4 + T5;
        {
            SIMD_FLOAT Tw, TE, Tz, Tq, Tk, TQ, TG, Tc, Th, TI, TL, Tj, TC, Tp,
                Tu;
            SIMD_FLOAT Ty, TN, T9, TP, TD, Tm, TK, Tx, TM, TF, TB, TA, Tv, Tr,
                Tn;
            SIMD_FLOAT Tl, TR, TO, TH, Tf, Te;
            Tw             = Tb - Ta;
            TE             = SIMD_FMADD(KP414213562, Tb, Ta);
            Tz             = SIMD_FMADD(KP566454497, Ta, Tb);
            Tq             = SIMD_FMADD(KP234633135, Tb, Ta);
            Tk             = SIMD_FNMADD(KP414213562, Ta, Tb);
            TQ             = Tb + Ta;
            TG             = SIMD_FMADD(KP351153302, Ta, Tb);
            Tc             = SIMD_FMSUB(KP847759065, Tb, Ta);
            Th             = SIMD_FMADD(KP765366864, T2, Tg);
            TI             = SIMD_FNMADD(KP765366864, T2, Tg);
            TL             = SIMD_FNMADD(KP707106781, Ti, T1);
            Tj             = SIMD_FMADD(KP707106781, Ti, T1);
            TC             = SIMD_FNMADD(KP765366864, T2, To);
            Tp             = SIMD_FMADD(KP765366864, T2, To);
            Tu             = SIMD_FNMADD(KP923879532, Tt, Ts);
            Ty             = SIMD_FMADD(KP923879532, Tt, Ts);
            TN             = SIMD_FNMADD(KP923879532, T8, T7);
            T9             = SIMD_FMADD(KP923879532, T8, T7);
            TP             = T3 + T6;
            TD             = SIMD_FMADD(KP707106781, T6, T2);
            Tm             = SIMD_FNMADD(KP707106781, T6, T2);
            Cr[WS(cs, 8)]  = T3 - T6;
            TK             = Tw - Td;
            Tx             = Tw + Td;
            TM             = TE - Td;
            TF             = TE + Td;
            TB             = SIMD_FNMADD(KP847759065, Td, Tz);
            TA             = SIMD_FMADD(KP847759065, Td, Tz);
            Tv             = SIMD_FNMADD(KP668178637, Td, Tq);
            Tr             = SIMD_FMADD(KP668178637, Td, Tq);
            Tn             = SIMD_FNMADD(KP414213562, Td, Tk);
            Tl             = SIMD_FMADD(KP414213562, Td, Tk);
            TR             = TQ + Td;
            Ci[WS(cs, 8)]  = Td - TQ;
            TO             = SIMD_FMSUB(KP566454497, TG, Td);
            TH             = SIMD_FMADD(KP566454497, TG, Td);
            Tf             = SIMD_FMADD(KP198912367, Td, Tc);
            Te             = SIMD_FNMADD(KP198912367, Td, Tc);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TK, TJ);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TK, TJ);
            Ci[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tx, Ti);
            Ci[WS(cs, 4)]  = -(SIMD_FMADD(KP707106781, Tx, Ti));
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, TM, TL);
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, TM, TL);
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TF, TD);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, TF, TD));
            Ci[WS(cs, 9)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, TC, TB)));
            Ci[WS(cs, 7)] = -(KP980785280 * (SIMD_FMADD(KP941979402, TC, TB)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP980785280, TA, Ty);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TA, Ty);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP831469612, Tv, Tu);
            Cr[WS(cs, 9)]  = SIMD_FNMADD(KP831469612, Tv, Tu);
            Ci[WS(cs, 15)] = KP923879532 * (SIMD_FNMADD(KP899976223, Tr, Tp));
            Ci[WS(cs, 1)]  = -(KP923879532 * (SIMD_FMADD(KP899976223, Tr, Tp)));
            Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, Tn, Tm));
            Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, Tn, Tm);
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, Tl, Tj);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Tl, Tj);
            Cr[0]          = TP + TR;
            Cr[WS(cs, 16)] = TP - TR;
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, TO, TN);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, TO, TN);
            Ci[WS(cs, 13)] = -(KP980785280 * (SIMD_FMADD(KP941979402, TI, TH)));
            Ci[WS(cs, 3)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, TI, TH)));
            Ci[WS(cs, 11)] = -(KP980785280 * (SIMD_FMADD(KP941979402, Th, Tf)));
            Ci[WS(cs, 5)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, Th, Tf)));
            Cr[WS(cs, 3)] = SIMD_FMADD(KP980785280, Te, T9);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP980785280, Te, T9);
        }
    }
}

template <>
struct r2cf_traits<32, 8>
{
    static constexpr long_t flops           = 160;
    static constexpr long_t operations      = 94;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 72;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 8 -name r2cf
 * -standalone */

/*
 * This function contains 86 FP additions, 74 FP multiplications,
 * (or, 20 additions, 8 multiplications, 66 fused multiply/add),
 * 72 stack variables, 10 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 8>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP941979402, +0.941979402598142560368484864292790246582630478);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP765366864, +0.765366864730179543456919968060797733522689125);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1, T2, T4, T5, T9, Ta, Tc, Td, T3, TG, Tn, Tr, T6, T7, Ty;
        SIMD_FLOAT Ts, To, Tl, Tb, TS, TY, Tj, Tu, TH, TM, TB;
        T1 = R0[0];
        T2 = R0[WS(rs, 4)];
        T4 = R0[WS(rs, 2)];
        T5 = R0[WS(rs, 6)];
        T9 = R0[WS(rs, 1)];
        Ta = R0[WS(rs, 5)];
        Tc = R0[WS(rs, 7)];
        Td = R0[WS(rs, 3)];
        T3 = T1 + T2;
        TG = T1 - T2;
        Tn = SIMD_FMADD(KP707106781, T2, T1);
        Tr = SIMD_FNMADD(KP707106781, T2, T1);
        T6 = T4 + T5;
        T7 = T4 - T5;
        Ty = SIMD_FMSUB(KP414213562, T5, T4);
        Ts = SIMD_FMSUB(KP414213562, T4, T5);
        To = SIMD_FMADD(KP414213562, T5, T4);
        Tl = SIMD_FMADD(KP414213562, T4, T5);
        Tb = SIMD_FNMADD(KP414213562, Ta, T9);
        TS = SIMD_FMADD(KP351153302, Ta, T9);
        TY = T9 + Ta;
        Tj = SIMD_FMADD(KP234633135, T9, Ta);
        Tu = SIMD_FMSUB(KP847759065, T9, Ta);
        TH = T9 - Ta;
        TM = SIMD_FMADD(KP414213562, T9, Ta);
        TB = SIMD_FMADD(KP566454497, Ta, T9);
        {
            SIMD_FLOAT Te, TR, TZ, Ti, Tv, TI, TN, TC, Tm, TF, TA, Tp, Tt, TV,
                TU;
            SIMD_FLOAT Tz, T8, TP, TX, Tg, TL, TD, TE, TO, TQ, TJ, TK, Tw, Tx,
                Tk;
            SIMD_FLOAT Tq, T10, TT, TW, Tf, Th;
            Te            = SIMD_FMSUB(KP414213562, Td, Tc);
            TR            = SIMD_FMSUB(KP847759065, Tc, Td);
            TZ            = Tc + Td;
            Ti            = SIMD_FMADD(KP566454497, Td, Tc);
            Tv            = SIMD_FMADD(KP351153302, Td, Tc);
            TI            = Tc - Td;
            TN            = SIMD_FMADD(KP414213562, Tc, Td);
            TC            = SIMD_FMADD(KP234633135, Tc, Td);
            Tm            = SIMD_FMADD(KP765366864, T2, Tl);
            TF            = SIMD_FNMADD(KP765366864, T2, Tl);
            TA            = SIMD_FMADD(KP923879532, To, Tn);
            Tp            = SIMD_FNMADD(KP923879532, To, Tn);
            Tt            = SIMD_FMADD(KP923879532, Ts, Tr);
            TV            = SIMD_FNMADD(KP923879532, Ts, Tr);
            TU            = SIMD_FNMADD(KP765366864, T2, Ty);
            Tz            = SIMD_FMADD(KP765366864, T2, Ty);
            T8            = SIMD_FMADD(KP707106781, T7, T1);
            TP            = SIMD_FNMADD(KP707106781, T7, T1);
            TX            = T3 + T6;
            Tg            = SIMD_FNMADD(KP707106781, T6, T2);
            TL            = SIMD_FMADD(KP707106781, T6, T2);
            Cr[WS(cs, 8)] = T3 - T6;
            TD            = SIMD_FMADD(KP847759065, TC, TB);
            TE            = SIMD_FNMADD(KP847759065, TC, TB);
            TO            = TM + TN;
            TQ            = TM - TN;
            TJ            = TH + TI;
            TK            = TI - TH;
            Tw            = SIMD_FNMADD(KP566454497, Tv, Tu);
            Tx            = SIMD_FMADD(KP566454497, Tv, Tu);
            Tk            = SIMD_FMADD(KP847759065, Tj, Ti);
            Tq            = SIMD_FNMADD(KP847759065, Tj, Ti);
            T10           = TY + TZ;
            Ci[WS(cs, 8)] = TZ - TY;
            TT            = SIMD_FNMADD(KP566454497, TS, TR);
            TW            = SIMD_FMADD(KP566454497, TS, TR);
            Tf            = Tb + Te;
            Th            = Te - Tb;
            Ci[WS(cs, 9)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, TF, TE)));
            Ci[WS(cs, 7)] = -(KP980785280 * (SIMD_FMADD(KP941979402, TF, TE)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP980785280, TD, TA);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TD, TA);
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, TQ, TP);
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, TQ, TP);
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TO, TL);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, TO, TL));
            Ci[WS(cs, 12)] = SIMD_FMADD(KP707106781, TK, T7);
            Ci[WS(cs, 4)]  = SIMD_FMSUB(KP707106781, TK, T7);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TJ, TG);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TJ, TG);
            Ci[WS(cs, 11)] = -(KP980785280 * (SIMD_FMADD(KP941979402, Tz, Tx)));
            Ci[WS(cs, 5)] = -(KP980785280 * (SIMD_FNMADD(KP941979402, Tz, Tx)));
            Cr[WS(cs, 3)] = SIMD_FMADD(KP980785280, Tw, Tt);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP980785280, Tw, Tt);
            Cr[WS(cs, 9)]  = SIMD_FMADD(KP980785280, Tq, Tp);
            Cr[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, Tq, Tp);
            Ci[WS(cs, 15)] =
                -(KP980785280 * (SIMD_FNMADD(KP941979402, Tm, Tk)));
            Ci[WS(cs, 1)]  = -(KP980785280 * (SIMD_FMADD(KP941979402, Tm, Tk)));
            Cr[0]          = TX + T10;
            Cr[WS(cs, 16)] = TX - T10;
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, TW, TV);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, TW, TV);
            Ci[WS(cs, 13)] = KP980785280 * (SIMD_FNMADD(KP941979402, TU, TT));
            Ci[WS(cs, 3)]  = KP980785280 * (SIMD_FMADD(KP941979402, TU, TT));
            Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, Th, Tg);
            Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Th, Tg);
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, Tf, T8);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Tf, T8);
        }
    }
}

template <>
struct r2cf_traits<32, 9>
{
    static constexpr long_t flops           = 158;
    static constexpr long_t operations      = 90;
    static constexpr long_t memory_accesses = 41;
    static constexpr long_t stack_vars      = 75;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 9 -name r2cf
 * -standalone */

/*
 * This function contains 90 FP additions, 68 FP multiplications,
 * (or, 22 additions, 0 multiplications, 68 fused multiply/add),
 * 75 stack variables, 8 constants, and 41 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 9>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T6, T7, Tf, Tg, Tc, Td, T4, T1, T2, T15, T12, Tm, Ts, Tw, TC;
        SIMD_FLOAT Ta, T8, TH, TS, TN, Tz, To, T14, TX, Th, TG, TR, TM, Ty, Tp;
        SIMD_FLOAT T13, TY, Te, Tr, Tv, Tl, TB;
        T6  = R0[WS(rs, 2)];
        T7  = R0[WS(rs, 6)];
        Tf  = R0[WS(rs, 7)];
        Tg  = R0[WS(rs, 3)];
        Tc  = R0[WS(rs, 1)];
        Td  = R0[WS(rs, 5)];
        T4  = R0[WS(rs, 4)];
        T1  = R0[0];
        T2  = R0[WS(rs, 8)];
        Tm  = SIMD_FMADD(KP414213562, T6, T7);
        Ts  = SIMD_FMADD(KP414213562, T7, T6);
        Tw  = SIMD_FMSUB(KP414213562, T6, T7);
        TC  = SIMD_FMSUB(KP414213562, T7, T6);
        Ta  = T6 - T7;
        T8  = T6 + T7;
        TH  = SIMD_FMADD(KP234633135, Tf, Tg);
        TS  = SIMD_FMADD(KP414213562, Tf, Tg);
        TN  = Tf - Tg;
        Tz  = SIMD_FMADD(KP351153302, Tg, Tf);
        To  = SIMD_FMADD(KP566454497, Tg, Tf);
        T14 = Tf + Tg;
        TX  = SIMD_FMSUB(KP847759065, Tf, Tg);
        Th  = SIMD_FMSUB(KP414213562, Tg, Tf);
        TG  = SIMD_FMADD(KP566454497, Td, Tc);
        TR  = SIMD_FMADD(KP414213562, Tc, Td);
        TM  = Tc - Td;
        Ty  = SIMD_FMSUB(KP847759065, Tc, Td);
        Tp  = SIMD_FMADD(KP234633135, Tc, Td);
        T13 = Tc + Td;
        TY  = SIMD_FMADD(KP351153302, Td, Tc);
        Te  = SIMD_FNMADD(KP414213562, Td, Tc);
        Tr  = SIMD_FMADD(KP707106781, T4, T1);
        Tv  = SIMD_FNMADD(KP707106781, T4, T1);
        Tl  = SIMD_FMADD(KP707106781, T4, T2);
        TB  = SIMD_FNMADD(KP707106781, T4, T2);
        {
            SIMD_FLOAT T9, T3, Tj, TQ, TK, TI, TV, TT, TO, TP, TE, TA, Tu, Tq,
                T11;
            SIMD_FLOAT TZ, Tk, Ti, Tt, TF, T10, Tx, TJ, Tn, TD, TW, TU, Tb, TL,
                T5;
            T9             = T1 - T2;
            T3             = T1 + T2;
            Tj             = SIMD_FNMADD(KP707106781, T8, T4);
            TQ             = SIMD_FMADD(KP707106781, T8, T4);
            TK             = SIMD_FNMADD(KP847759065, TH, TG);
            TI             = SIMD_FMADD(KP847759065, TH, TG);
            TV             = TR - TS;
            TT             = TR + TS;
            TO             = TM + TN;
            TP             = TN - TM;
            TE             = SIMD_FMADD(KP566454497, Tz, Ty);
            TA             = SIMD_FNMADD(KP566454497, Tz, Ty);
            Tu             = SIMD_FNMADD(KP847759065, Tp, To);
            Tq             = SIMD_FMADD(KP847759065, Tp, To);
            T15            = T13 + T14;
            Ci[WS(cs, 8)]  = T14 - T13;
            T11            = SIMD_FMADD(KP566454497, TY, TX);
            TZ             = SIMD_FNMADD(KP566454497, TY, TX);
            Tk             = Th - Te;
            Ti             = Te + Th;
            Tt             = SIMD_FNMADD(KP923879532, Ts, Tr);
            TF             = SIMD_FMADD(KP923879532, Ts, Tr);
            T10            = SIMD_FNMADD(KP923879532, Tw, Tv);
            Tx             = SIMD_FMADD(KP923879532, Tw, Tv);
            TJ             = SIMD_FNMADD(KP923879532, Tm, Tl);
            Tn             = SIMD_FMADD(KP923879532, Tm, Tl);
            TD             = SIMD_FNMADD(KP923879532, TC, TB);
            TW             = SIMD_FMADD(KP923879532, TC, TB);
            TU             = SIMD_FNMADD(KP707106781, Ta, T9);
            Tb             = SIMD_FMADD(KP707106781, Ta, T9);
            TL             = T3 - T4;
            T5             = T3 + T4;
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TT, TQ);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, TT, TQ));
            Ci[WS(cs, 12)] = SIMD_FMADD(KP707106781, TP, Ta);
            Ci[WS(cs, 4)]  = SIMD_FMSUB(KP707106781, TP, Ta);
            Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, Tk, Tj);
            Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Tk, Tj);
            Cr[WS(cs, 9)]  = SIMD_FMADD(KP980785280, Tu, Tt);
            Cr[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, Tu, Tt);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TI, TF);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TI, TF);
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, T11, T10);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, T11, T10);
            Cr[WS(cs, 3)]  = SIMD_FMADD(KP980785280, TA, Tx);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP980785280, TA, Tx);
            Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, TK, TJ));
            Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, TK, TJ);
            Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Tq, Tn);
            Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, Tq, Tn));
            Ci[WS(cs, 11)] = SIMD_FNMADD(KP980785280, TE, TD);
            Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP980785280, TE, TD));
            Ci[WS(cs, 13)] = SIMD_FMSUB(KP980785280, TZ, TW);
            Ci[WS(cs, 3)]  = SIMD_FMADD(KP980785280, TZ, TW);
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, TV, TU);
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, TV, TU);
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, Ti, Tb);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Ti, Tb);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TO, TL);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TO, TL);
            T12            = T5 + T8;
            Cr[WS(cs, 8)]  = T5 - T8;
        }
        Cr[0]          = T12 + T15;
        Cr[WS(cs, 16)] = T12 - T15;
    }
}

template <>
struct r2cf_traits<32, 10>
{
    static constexpr long_t flops           = 166;
    static constexpr long_t operations      = 96;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 83;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 10 -name r2cf
 * -standalone */

/*
 * This function contains 96 FP additions, 70 FP multiplications,
 * (or, 26 additions, 0 multiplications, 70 fused multiply/add),
 * 83 stack variables, 9 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 10>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T6, T7, Th, Ti, T4, T1, T2, Tc, Te, Td;
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 6)];
        Th = R0[WS(rs, 3)];
        Ti = R0[WS(rs, 7)];
        T4 = R0[WS(rs, 4)];
        T1 = R0[0];
        T2 = R0[WS(rs, 8)];
        Tc = R0[WS(rs, 1)];
        Te = R0[WS(rs, 9)];
        Td = R0[WS(rs, 5)];
        {
            SIMD_FLOAT T8, Tv, Tj, T15, T1b, Ts, TD, TQ, TY, TM, Tp, T10, TU,
                TH, Tb;
            SIMD_FLOAT T17, T12, Tn, TW, Tw, TA, TP, T5, TJ, TC, TL, T1a, TX,
                Tr, TS;
            SIMD_FLOAT T14, Tg, Ta, TG, Tz, Tm, T9, TF, Ty, Tl, Tu, T3, Tq, TK,
                TB;
            SIMD_FLOAT TR, T13, Tf, T19, TE, TI, TO, TN, T1c, TZ, T11, Tt, Tx,
                TV, TT;
            SIMD_FLOAT T16, T18, Tk, To;
            T8             = T6 + T7;
            Ta             = SIMD_FMADD(KP414213562, T7, T6);
            TG             = SIMD_FMSUB(KP414213562, T6, T7);
            Tz             = SIMD_FMSUB(KP414213562, T7, T6);
            Tv             = T6 - T7;
            Tm             = SIMD_FMADD(KP414213562, T6, T7);
            Tj             = SIMD_FMADD(KP234633135, Ti, Th);
            T15            = SIMD_FMADD(KP566454497, Th, Ti);
            T1b            = Th + Ti;
            Ts             = SIMD_FMADD(KP414213562, Ti, Th);
            TD             = SIMD_FMADD(KP351153302, Th, Ti);
            TQ             = SIMD_FMSUB(KP847759065, Ti, Th);
            TY             = SIMD_FMSUB(KP414213562, Th, Ti);
            TM             = Ti - Th;
            T9             = SIMD_FMADD(KP707106781, T4, T1);
            TF             = SIMD_FNMADD(KP707106781, T4, T1);
            Ty             = SIMD_FNMADD(KP707106781, T4, T2);
            Tl             = SIMD_FMADD(KP707106781, T4, T2);
            Tu             = T1 - T2;
            T3             = T1 + T2;
            Tq             = Tc - Te;
            TK             = Tc + Te;
            TB             = SIMD_FMADD(KP668178637, Te, Tc);
            TR             = SIMD_FMADD(KP351153302, Td, Tc);
            T13            = SIMD_FMADD(KP234633135, Tc, Td);
            Tf             = SIMD_FNMADD(KP351153302, Te, Td);
            Tp             = SIMD_FMADD(KP707106781, T8, T4);
            T10            = SIMD_FNMADD(KP707106781, T8, T4);
            TU             = SIMD_FNMADD(KP923879532, TG, TF);
            TH             = SIMD_FMADD(KP923879532, TG, TF);
            Tb             = SIMD_FMADD(KP923879532, Ta, T9);
            T17            = SIMD_FNMADD(KP923879532, Ta, T9);
            T12            = SIMD_FMADD(KP923879532, Tm, Tl);
            Tn             = SIMD_FNMADD(KP923879532, Tm, Tl);
            TW             = SIMD_FMADD(KP707106781, Tv, Tu);
            Tw             = SIMD_FNMADD(KP707106781, Tv, Tu);
            TA             = SIMD_FNMADD(KP923879532, Tz, Ty);
            TP             = SIMD_FMADD(KP923879532, Tz, Ty);
            T5             = T3 + T4;
            TJ             = T3 - T4;
            TC             = SIMD_FNMADD(KP847759065, TB, Td);
            TL             = TK - Td;
            T1a            = TK + Td;
            TX             = SIMD_FNMADD(KP414213562, Td, Tq);
            Tr             = SIMD_FMADD(KP414213562, Tq, Td);
            TS             = SIMD_FNMADD(KP668178637, TR, Te);
            T14            = SIMD_FMADD(KP847759065, T13, Te);
            Tg             = SIMD_FMADD(KP566454497, Tf, Tc);
            T19            = T5 + T8;
            Cr[WS(cs, 8)]  = T5 - T8;
            TE             = SIMD_FNMADD(KP566454497, TD, TC);
            TI             = SIMD_FMADD(KP566454497, TD, TC);
            TO             = TM - TL;
            TN             = TL + TM;
            T1c            = T1a + T1b;
            Ci[WS(cs, 8)]  = T1b - T1a;
            TZ             = TX + TY;
            T11            = TY - TX;
            Tt             = Tr + Ts;
            Tx             = Tr - Ts;
            TV             = SIMD_FNMADD(KP847759065, TS, TQ);
            TT             = SIMD_FMADD(KP847759065, TS, TQ);
            T16            = T14 + T15;
            T18            = T14 - T15;
            Tk             = SIMD_FMADD(KP847759065, Tj, Tg);
            To             = SIMD_FNMADD(KP847759065, Tj, Tg);
            Cr[WS(cs, 13)] = SIMD_FMADD(KP980785280, TI, TH);
            Cr[WS(cs, 3)]  = SIMD_FNMADD(KP980785280, TI, TH);
            Ci[WS(cs, 11)] = SIMD_FMADD(KP980785280, TE, TA);
            Ci[WS(cs, 5)]  = SIMD_FMSUB(KP980785280, TE, TA);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TN, TJ);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TN, TJ);
            Ci[WS(cs, 12)] = SIMD_FMADD(KP707106781, TO, Tv);
            Ci[WS(cs, 4)]  = SIMD_FMSUB(KP707106781, TO, Tv);
            Cr[0]          = T19 + T1c;
            Cr[WS(cs, 16)] = T19 - T1c;
            Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T11, T10);
            Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T11, T10);
            Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, TZ, TW);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TZ, TW);
            Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, Tx, Tw);
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, Tx, Tw);
            Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Tt, Tp);
            Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, Tt, Tp));
            Ci[WS(cs, 13)] = SIMD_FMSUB(KP980785280, TT, TP);
            Ci[WS(cs, 3)]  = SIMD_FMADD(KP980785280, TT, TP);
            Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, TV, TU);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, TV, TU);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T18, T17);
            Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T18, T17);
            Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T16, T12);
            Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T16, T12));
            Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, To, Tn));
            Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, To, Tn);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, Tk, Tb);
            Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Tk, Tb);
        }
    }
}

template <>
struct r2cf_traits<32, 11>
{
    static constexpr long_t flops           = 172;
    static constexpr long_t operations      = 102;
    static constexpr long_t memory_accesses = 43;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 11 -name r2cf
 * -standalone */

/*
 * This function contains 102 FP additions, 70 FP multiplications,
 * (or, 32 additions, 0 multiplications, 70 fused multiply/add),
 * 90 stack variables, 9 constants, and 43 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 11>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT Tk, Tl, T4, T1, T2, T9, T6, T7, Tf, Th, Tg;
        Tk = R0[WS(rs, 3)];
        Tl = R0[WS(rs, 7)];
        T4 = R0[WS(rs, 4)];
        T1 = R0[0];
        T2 = R0[WS(rs, 8)];
        T9 = R0[WS(rs, 6)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 10)];
        Tf = R0[WS(rs, 1)];
        Th = R0[WS(rs, 9)];
        Tg = R0[WS(rs, 5)];
        {
            SIMD_FLOAT TS, T15, TX, TJ, Ty, T1i, T1c, Tm, TL, Tb, To, TE, T3,
                TA, Tp;
            SIMD_FLOAT Tc, Tt, T8, TH, TQ, Tw, T1a, TY, Ti, TP, T5, Tq, TM, TF,
                Td;
            SIMD_FLOAT TB, Tu, TU, Ta, TI, T1h, TR, Tx, T14, TZ;
            TS  = Tl - Tk;
            T15 = SIMD_FMSUB(KP414213562, Tk, Tl);
            TX  = SIMD_FMSUB(KP847759065, Tl, Tk);
            TJ  = SIMD_FMADD(KP351153302, Tk, Tl);
            Ty  = SIMD_FMADD(KP414213562, Tl, Tk);
            T1i = Tk + Tl;
            T1c = SIMD_FMADD(KP566454497, Tk, Tl);
            Tm  = SIMD_FMADD(KP234633135, Tl, Tk);
            TL  = SIMD_FNMADD(KP707106781, T4, T1);
            Tb  = SIMD_FMADD(KP707106781, T4, T1);
            To  = SIMD_FMADD(KP707106781, T4, T2);
            TE  = SIMD_FNMADD(KP707106781, T4, T2);
            T3  = T1 + T2;
            TA  = T1 - T2;
            Tp  = SIMD_FMADD(KP414213562, T6, T7);
            Tc  = SIMD_FNMADD(KP414213562, T7, T6);
            Tt  = T6 - T7;
            T8  = T6 + T7;
            TH  = SIMD_FMADD(KP668178637, Th, Tf);
            TQ  = Tf + Th;
            Tw  = Tf - Th;
            T1a = SIMD_FMADD(KP234633135, Tf, Tg);
            TY  = SIMD_FMADD(KP351153302, Tg, Tf);
            Ti  = SIMD_FNMADD(KP351153302, Th, Tg);
            TP  = T3 - T4;
            T5  = T3 + T4;
            Tq  = Tp + T9;
            TM  = Tp - T9;
            TF  = SIMD_FNMADD(KP414213562, T9, Tc);
            Td  = SIMD_FMADD(KP414213562, T9, Tc);
            TB  = Tt - T9;
            Tu  = Tt + T9;
            TU  = T9 - T8;
            Ta  = T8 + T9;
            TI  = SIMD_FNMADD(KP847759065, TH, Tg);
            T1h = TQ + Tg;
            TR  = TQ - Tg;
            Tx  = SIMD_FMADD(KP414213562, Tw, Tg);
            T14 = SIMD_FNMADD(KP414213562, Tg, Tw);
            TZ  = SIMD_FNMADD(KP668178637, TY, Th);
            {
                SIMD_FLOAT T1b, Tj, Tr, T19, TN, T11, TW, TG, T1e, Te, TC, T13,
                    T17, Tv, T1g;
                SIMD_FLOAT TO, TK, TV, TT, T1j, T18, T16, TD, Tz, T10, T12, T1f,
                    T1d, Ts, Tn;
                T1b            = SIMD_FMADD(KP847759065, T1a, Th);
                Tj             = SIMD_FMADD(KP566454497, Ti, Tf);
                Tr             = SIMD_FNMADD(KP923879532, Tq, To);
                T19            = SIMD_FMADD(KP923879532, Tq, To);
                TN             = SIMD_FMADD(KP923879532, TM, TL);
                T11            = SIMD_FNMADD(KP923879532, TM, TL);
                TW             = SIMD_FNMADD(KP923879532, TF, TE);
                TG             = SIMD_FMADD(KP923879532, TF, TE);
                T1e            = SIMD_FNMADD(KP923879532, Td, Tb);
                Te             = SIMD_FMADD(KP923879532, Td, Tb);
                TC             = SIMD_FNMADD(KP707106781, TB, TA);
                T13            = SIMD_FMADD(KP707106781, TB, TA);
                T17            = SIMD_FNMADD(KP707106781, Tu, T4);
                Tv             = SIMD_FMADD(KP707106781, Tu, T4);
                T1g            = T5 + Ta;
                Cr[WS(cs, 8)]  = T5 - Ta;
                TO             = SIMD_FMADD(KP566454497, TJ, TI);
                TK             = SIMD_FNMADD(KP566454497, TJ, TI);
                TV             = TS - TR;
                TT             = TR + TS;
                T1j            = T1h + T1i;
                Ci[WS(cs, 8)]  = T1i - T1h;
                T18            = T15 - T14;
                T16            = T14 + T15;
                TD             = Tx - Ty;
                Tz             = Tx + Ty;
                T10            = SIMD_FMADD(KP847759065, TZ, TX);
                T12            = SIMD_FNMADD(KP847759065, TZ, TX);
                T1f            = T1b - T1c;
                T1d            = T1b + T1c;
                Ts             = SIMD_FNMADD(KP847759065, Tm, Tj);
                Tn             = SIMD_FMADD(KP847759065, Tm, Tj);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP980785280, TO, TN);
                Cr[WS(cs, 3)]  = SIMD_FNMADD(KP980785280, TO, TN);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP980785280, TK, TG);
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP980785280, TK, TG);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, TV, TU);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TV, TU);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TT, TP);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TT, TP);
                Cr[0]          = T1g + T1j;
                Cr[WS(cs, 16)] = T1g - T1j;
                Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T18, T17);
                Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T18, T17);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T16, T13);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T16, T13);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, TD, TC);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, TD, TC);
                Ci[WS(cs, 14)] = SIMD_FNMADD(KP923879532, Tz, Tv);
                Ci[WS(cs, 2)]  = -(SIMD_FMADD(KP923879532, Tz, Tv));
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP980785280, T10, TW);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP980785280, T10, TW);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP980785280, T12, T11);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP980785280, T12, T11);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1f, T1e);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1f, T1e);
                Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1d, T19);
                Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T1d, T19));
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, Ts, Tr));
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, Ts, Tr);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, Tn, Te);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, Tn, Te);
            }
        }
    }
}

template <>
struct r2cf_traits<32, 12>
{
    static constexpr long_t flops           = 176;
    static constexpr long_t operations      = 106;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 101;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 12 -name r2cf
 * -standalone */

/*
 * This function contains 106 FP additions, 70 FP multiplications,
 * (or, 36 additions, 0 multiplications, 70 fused multiply/add),
 * 101 stack variables, 15 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 12>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP599456183, +0.599456183689829003455798811322338114298925251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP472473645, +0.472473645916727067857764330165646772807525063);
    DK(KP281304567, +0.281304567672051975711044033377455068719994628);
    DK(KP140652283, +0.140652283836025987855522016688727534359997314);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T4, T1, T2, Th, Ti, Tj, T9, T6, T7, Tc, Tf, Td, T11, TO, TT;
        SIMD_FLOAT TF, T3, Tt, Tk, Tz, T8, TP, Tu, TG, TW, TJ;
        T4  = R0[WS(rs, 4)];
        T1  = R0[0];
        T2  = R0[WS(rs, 8)];
        Th  = R0[WS(rs, 7)];
        Ti  = R0[WS(rs, 3)];
        Tj  = R0[WS(rs, 11)];
        T9  = R0[WS(rs, 6)];
        T6  = R0[WS(rs, 2)];
        T7  = R0[WS(rs, 10)];
        Tc  = R0[WS(rs, 1)];
        Tf  = R0[WS(rs, 5)];
        Td  = R0[WS(rs, 9)];
        T11 = SIMD_FNMADD(KP707106781, T4, T1);
        TO  = SIMD_FMADD(KP707106781, T4, T1);
        TT  = SIMD_FNMADD(KP707106781, T4, T2);
        TF  = SIMD_FMADD(KP707106781, T4, T2);
        T3  = T1 + T2;
        Tt  = T1 - T2;
        Tk  = Ti + Tj;
        Tz  = Tj - Ti;
        T8  = T6 + T7;
        TP  = SIMD_FNMADD(KP414213562, T7, T6);
        Tu  = T6 - T7;
        TG  = SIMD_FMADD(KP414213562, T6, T7);
        TW  = SIMD_FMADD(KP351153302, Tf, Tc);
        TJ  = SIMD_FMADD(KP234633135, Tc, Tf);
        {
            SIMD_FLOAT Te, Tx, T16, T1d, T5, Tb, T1k, TA, Tl, Tr, TY, TL, T12,
                TH, Tv;
            SIMD_FLOAT TC, TU, TQ, Ta, Tn, TK, TX, T17, T1e, T1l, Ty, Tg, Tq,
                TM, T1f;
            Te  = Tc + Td;
            Tx  = Tc - Td;
            T16 = SIMD_FMADD(KP668178637, Td, Tc);
            T1d = SIMD_FNMADD(KP351153302, Td, Tf);
            T5  = T3 + T4;
            Tb  = T3 - T4;
            T1k = SIMD_FNMADD(KP414213562, Th, Tz);
            TA  = SIMD_FMADD(KP414213562, Tz, Th);
            Tl  = Th - Tk;
            Tr  = Th + Tk;
            TY  = SIMD_FNMADD(KP707106781, Tk, Th);
            TL  = SIMD_FMADD(KP707106781, Tk, Th);
            T12 = TG - T9;
            TH  = TG + T9;
            Tv  = Tu - T9;
            TC  = Tu + T9;
            TU  = SIMD_FNMADD(KP414213562, T9, TP);
            TQ  = SIMD_FMADD(KP414213562, T9, TP);
            Ta  = T8 + T9;
            Tn  = T9 - T8;
            TK  = SIMD_FMADD(KP847759065, TJ, Td);
            TX  = SIMD_FNMADD(KP668178637, TW, Td);
            T17 = SIMD_FNMADD(KP847759065, T16, Tf);
            T1e = SIMD_FMADD(KP566454497, T1d, Tc);
            T1l = SIMD_FMADD(KP414213562, Tx, Tf);
            Ty  = SIMD_FNMADD(KP414213562, Tf, Tx);
            Tg  = Te - Tf;
            Tq  = Te + Tf;
            TM  = SIMD_FMADD(KP140652283, Tz, TL);
            T1f = SIMD_FNMADD(KP281304567, TL, Tz);
            {
                SIMD_FLOAT TZ, T18, TI, T1h, T13, T15, TD, T1j, T1n, Tw, TR,
                    T1c, TV, T1a, Tp;
                SIMD_FLOAT TE, TB, T1o, T1m, Ts, Tm, To, T1g, T1i, TN, TS, T19,
                    T1b, T10, T14;
                TZ             = SIMD_FMADD(KP472473645, Tz, TY);
                T18            = SIMD_FNMADD(KP944947291, TY, Tz);
                TI             = SIMD_FMADD(KP923879532, TH, TF);
                T1h            = SIMD_FNMADD(KP923879532, TH, TF);
                T13            = SIMD_FNMADD(KP923879532, T12, T11);
                T15            = SIMD_FMADD(KP923879532, T12, T11);
                TD             = SIMD_FNMADD(KP707106781, TC, T4);
                T1j            = SIMD_FMADD(KP707106781, TC, T4);
                T1n            = SIMD_FNMADD(KP707106781, Tv, Tt);
                Tw             = SIMD_FMADD(KP707106781, Tv, Tt);
                TR             = SIMD_FNMADD(KP923879532, TQ, TO);
                T1c            = SIMD_FMADD(KP923879532, TQ, TO);
                TV             = SIMD_FNMADD(KP923879532, TU, TT);
                T1a            = SIMD_FMADD(KP923879532, TU, TT);
                Tp             = T5 + Ta;
                Cr[WS(cs, 8)]  = T5 - Ta;
                TE             = Ty + TA;
                TB             = Ty - TA;
                T1o            = T1l + T1k;
                T1m            = T1k - T1l;
                Ts             = Tq + Tr;
                Ci[WS(cs, 8)]  = Tr - Tq;
                Tm             = Tg + Tl;
                To             = Tl - Tg;
                T1g            = SIMD_FNMADD(KP707106781, T1f, T1e);
                T1i            = SIMD_FMADD(KP707106781, T1f, T1e);
                TN             = TK + TM;
                TS             = TK - TM;
                T19            = SIMD_FNMADD(KP599456183, T18, T17);
                T1b            = SIMD_FMADD(KP599456183, T18, T17);
                T10            = TX + TZ;
                T14            = TZ - TX;
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, TB, Tw);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TB, Tw);
                Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, TE, TD));
                Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, TE, TD);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1m, T1j);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1m, T1j);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1o, T1n);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1o, T1n);
                Cr[0]          = Tp + Ts;
                Cr[WS(cs, 16)] = Tp - Ts;
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, To, Tn);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, To, Tn);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tm, Tb);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tm, Tb);
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1i, T1h);
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1i, T1h));
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1g, T1c);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1g, T1c);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, TS, TR);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TS, TR);
                Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TN, TI);
                Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, TN, TI));
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP980785280, T1b, T1a);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP980785280, T1b, T1a);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP980785280, T19, T15);
                Cr[WS(cs, 3)]  = SIMD_FNMADD(KP980785280, T19, T15);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T14, T13);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T14, T13);
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T10, TV);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T10, TV);
            }
        }
    }
}

template <>
struct r2cf_traits<32, 13>
{
    static constexpr long_t flops           = 178;
    static constexpr long_t operations      = 108;
    static constexpr long_t memory_accesses = 45;
    static constexpr long_t stack_vars      = 104;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 13 -name r2cf
 * -standalone */

/*
 * This function contains 108 FP additions, 70 FP multiplications,
 * (or, 38 additions, 0 multiplications, 70 fused multiply/add),
 * 104 stack variables, 15 constants, and 45 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 13>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP599456183, +0.599456183689829003455798811322338114298925251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP472473645, +0.472473645916727067857764330165646772807525063);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP140652283, +0.140652283836025987855522016688727534359997314);
    DK(KP281304567, +0.281304567672051975711044033377455068719994628);
    DK(KP566454497, +0.566454497350521536545322345416121504924838624);
    DK(KP847759065, +0.847759065022573512256366378793576573644833252);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP351153302, +0.351153302357084494655231243851099654953017250);
    DK(KP234633135, +0.234633135269820456543080031939202266477310875);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT Tj, Tk, Tl, Tb, T8, T9, T1, T2, T4, T5, Te, Th, Tf, TB, Tm;
        SIMD_FLOAT TJ, Tw, TS, Ta, Tv, T3, TE, T6, TM, TZ, T19, Tz, Tg, T1g;
        Tj  = R0[WS(rs, 7)];
        Tk  = R0[WS(rs, 3)];
        Tl  = R0[WS(rs, 11)];
        Tb  = R0[WS(rs, 6)];
        T8  = R0[WS(rs, 2)];
        T9  = R0[WS(rs, 10)];
        T1  = R0[0];
        T2  = R0[WS(rs, 8)];
        T4  = R0[WS(rs, 4)];
        T5  = R0[WS(rs, 12)];
        Te  = R0[WS(rs, 1)];
        Th  = R0[WS(rs, 5)];
        Tf  = R0[WS(rs, 9)];
        TB  = Tl - Tk;
        Tm  = Tk + Tl;
        TJ  = SIMD_FMADD(KP414213562, T8, T9);
        Tw  = T8 - T9;
        TS  = SIMD_FNMADD(KP414213562, T9, T8);
        Ta  = T8 + T9;
        Tv  = T1 - T2;
        T3  = T1 + T2;
        TE  = T4 - T5;
        T6  = T4 + T5;
        TM  = SIMD_FMADD(KP234633135, Te, Th);
        TZ  = SIMD_FMADD(KP351153302, Th, Te);
        T19 = SIMD_FMADD(KP668178637, Tf, Te);
        Tz  = Te - Tf;
        Tg  = Te + Tf;
        T1g = SIMD_FNMADD(KP351153302, Tf, Th);
        {
            SIMD_FLOAT TC, T1n, TO, T11, Tt, Tn, TK, T15, TF, Tx, TT, TX, Tp,
                Tc, TR;
            SIMD_FLOAT T14, Td, T7, TW, TI, TN, T10, T1a, T1h, TA, T1o, Ts, Ti,
                T1i, TP;
            TC  = SIMD_FMADD(KP414213562, TB, Tj);
            T1n = SIMD_FNMADD(KP414213562, Tj, TB);
            TO  = SIMD_FMADD(KP707106781, Tm, Tj);
            T11 = SIMD_FNMADD(KP707106781, Tm, Tj);
            Tt  = Tj + Tm;
            Tn  = Tj - Tm;
            TK  = TJ + Tb;
            T15 = TJ - Tb;
            TF  = Tw + Tb;
            Tx  = Tw - Tb;
            TT  = SIMD_FMADD(KP414213562, Tb, TS);
            TX  = SIMD_FNMADD(KP414213562, Tb, TS);
            Tp  = Tb - Ta;
            Tc  = Ta + Tb;
            TR  = SIMD_FMADD(KP707106781, TE, T1);
            T14 = SIMD_FNMADD(KP707106781, TE, T1);
            Td  = T3 - T6;
            T7  = T3 + T6;
            TW  = SIMD_FNMADD(KP707106781, T6, T2);
            TI  = SIMD_FMADD(KP707106781, T6, T2);
            TN  = SIMD_FMADD(KP847759065, TM, Tf);
            T10 = SIMD_FNMADD(KP668178637, TZ, Tf);
            T1a = SIMD_FNMADD(KP847759065, T19, Th);
            T1h = SIMD_FMADD(KP566454497, T1g, Te);
            TA  = SIMD_FNMADD(KP414213562, Th, Tz);
            T1o = SIMD_FMADD(KP414213562, Tz, Th);
            Ts  = Tg + Th;
            Ti  = Tg - Th;
            T1i = SIMD_FNMADD(KP281304567, TO, TB);
            TP  = SIMD_FMADD(KP140652283, TB, TO);
            {
                SIMD_FLOAT T1b, T12, T1m, TG, Ty, T1q, T1f, TU, T18, T16, T1k,
                    TL, T1d, TY, Tr;
                SIMD_FLOAT TD, TH, T1p, T1r, Tu, Tq, To, T1l, T1j, TV, TQ, T1e,
                    T1c, T17, T13;
                T1b            = SIMD_FNMADD(KP944947291, T11, TB);
                T12            = SIMD_FMADD(KP472473645, TB, T11);
                T1m            = SIMD_FMADD(KP707106781, TF, TE);
                TG             = SIMD_FNMADD(KP707106781, TF, TE);
                Ty             = SIMD_FMADD(KP707106781, Tx, Tv);
                T1q            = SIMD_FNMADD(KP707106781, Tx, Tv);
                T1f            = SIMD_FMADD(KP923879532, TT, TR);
                TU             = SIMD_FNMADD(KP923879532, TT, TR);
                T18            = SIMD_FMADD(KP923879532, T15, T14);
                T16            = SIMD_FNMADD(KP923879532, T15, T14);
                T1k            = SIMD_FNMADD(KP923879532, TK, TI);
                TL             = SIMD_FMADD(KP923879532, TK, TI);
                T1d            = SIMD_FMADD(KP923879532, TX, TW);
                TY             = SIMD_FNMADD(KP923879532, TX, TW);
                Tr             = T7 + Tc;
                Cr[WS(cs, 8)]  = T7 - Tc;
                TD             = TA - TC;
                TH             = TA + TC;
                T1p            = T1n - T1o;
                T1r            = T1o + T1n;
                Tu             = Ts + Tt;
                Ci[WS(cs, 8)]  = Tt - Ts;
                Tq             = Tn - Ti;
                To             = Ti + Tn;
                T1l            = SIMD_FMADD(KP707106781, T1i, T1h);
                T1j            = SIMD_FNMADD(KP707106781, T1i, T1h);
                TV             = TN - TP;
                TQ             = TN + TP;
                T1e            = SIMD_FMADD(KP599456183, T1b, T1a);
                T1c            = SIMD_FNMADD(KP599456183, T1b, T1a);
                T17            = T12 - T10;
                T13            = T10 + T12;
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, TD, Ty);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TD, Ty);
                Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, TH, TG));
                Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, TH, TG);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1p, T1m);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1p, T1m);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1r, T1q);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1r, T1q);
                Cr[0]          = Tr + Tu;
                Cr[WS(cs, 16)] = Tr - Tu;
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, Tq, Tp);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tq, Tp);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, To, Td);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, To, Td);
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1l, T1k);
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1l, T1k));
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1j, T1f);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1j, T1f);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, TV, TU);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TV, TU);
                Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TQ, TL);
                Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, TQ, TL));
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP980785280, T1e, T1d);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP980785280, T1e, T1d);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP980785280, T1c, T18);
                Cr[WS(cs, 3)]  = SIMD_FNMADD(KP980785280, T1c, T18);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T17, T16);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T17, T16);
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T13, TY);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T13, TY);
            }
        }
    }
}

template <>
struct r2cf_traits<32, 14>
{
    static constexpr long_t flops           = 180;
    static constexpr long_t operations      = 110;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 103;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 14 -name r2cf
 * -standalone */

/*
 * This function contains 110 FP additions, 70 FP multiplications,
 * (or, 40 additions, 0 multiplications, 70 fused multiply/add),
 * 103 stack variables, 11 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 14>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP472473645, +0.472473645916727067857764330165646772807525063);
    DK(KP281304567, +0.281304567672051975711044033377455068719994628);
    DK(KP140652283, +0.140652283836025987855522016688727534359997314);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT Tl, Tb, T8, T9, T1, T2, T4, T5, Te, Tf, Th, Ti, To, TG, Tm;
        SIMD_FLOAT Tn, Ta, TQ, Ty, TL, T3, TP, T6, TJ, Tg, TT, Tj, TC, T1q, TV;
        Tl  = R0[WS(rs, 7)];
        Tm  = R0[WS(rs, 3)];
        Tn  = R0[WS(rs, 11)];
        Tb  = R0[WS(rs, 6)];
        T8  = R0[WS(rs, 2)];
        T9  = R0[WS(rs, 10)];
        T1  = R0[0];
        T2  = R0[WS(rs, 8)];
        T4  = R0[WS(rs, 4)];
        T5  = R0[WS(rs, 12)];
        Te  = R0[WS(rs, 1)];
        Tf  = R0[WS(rs, 9)];
        Th  = R0[WS(rs, 5)];
        Ti  = R0[WS(rs, 13)];
        To  = Tm + Tn;
        TG  = Tn - Tm;
        Ta  = T8 + T9;
        TQ  = T8 - T9;
        Ty  = SIMD_FMADD(KP414213562, T8, T9);
        TL  = SIMD_FNMADD(KP414213562, T9, T8);
        T3  = T1 + T2;
        TP  = T1 - T2;
        T6  = T4 + T5;
        TJ  = T4 - T5;
        Tg  = Te + Tf;
        TT  = Te - Tf;
        Tj  = Th + Ti;
        TC  = Th - Ti;
        T1q = SIMD_FNMADD(KP414213562, Tl, TG);
        TV  = SIMD_FMADD(KP414213562, TG, Tl);
        {
            SIMD_FLOAT Tp, Tv, T16, TF, T11, TM, Tz, T1a, TR, TX, Tc, Tr, T19,
                TK, T7;
            SIMD_FLOAT Td, T10, Tx, T14, TD, TU, T1r, TB, T13, Tk, Tu, TH, T1l,
                T17, T1f;
            SIMD_FLOAT TY, T1p;
            Tp  = Tl - To;
            Tv  = Tl + To;
            T16 = SIMD_FNMADD(KP707106781, To, Tl);
            TF  = SIMD_FMADD(KP707106781, To, Tl);
            T11 = SIMD_FNMADD(KP414213562, Tb, TL);
            TM  = SIMD_FMADD(KP414213562, Tb, TL);
            Tz  = Ty + Tb;
            T1a = Ty - Tb;
            TR  = TQ - Tb;
            TX  = TQ + Tb;
            Tc  = Ta + Tb;
            Tr  = Tb - Ta;
            T19 = SIMD_FNMADD(KP707106781, TJ, T1);
            TK  = SIMD_FMADD(KP707106781, TJ, T1);
            T7  = T3 + T6;
            Td  = T3 - T6;
            T10 = SIMD_FNMADD(KP707106781, T6, T2);
            Tx  = SIMD_FMADD(KP707106781, T6, T2);
            T14 = SIMD_FNMADD(KP707106781, TC, Te);
            TD  = SIMD_FMADD(KP707106781, TC, Te);
            TU  = SIMD_FNMADD(KP414213562, TC, TT);
            T1r = SIMD_FMADD(KP414213562, TT, TC);
            TB  = SIMD_FMADD(KP707106781, Tj, Tf);
            T13 = SIMD_FNMADD(KP707106781, Tj, Tf);
            Tk  = Tg - Tj;
            Tu  = Tg + Tj;
            TH  = SIMD_FMADD(KP140652283, TG, TF);
            T1l = SIMD_FNMADD(KP281304567, TF, TG);
            T17 = SIMD_FMADD(KP472473645, TG, T16);
            T1f = SIMD_FNMADD(KP944947291, T16, TG);
            TY  = SIMD_FNMADD(KP707106781, TX, TJ);
            T1p = SIMD_FMADD(KP707106781, TX, TJ);
            {
                SIMD_FLOAT T1t, TS, TN, T1j, T1b, T1d, T12, T1h, TA, T1n, Tt,
                    TZ, TW, T1u, T1s;
                SIMD_FLOAT T15, T1e, TE, T1k, Tw, Tq, Ts, T1g, T1i, T18, T1c,
                    T1m, T1o, TI, TO;
                T1t            = SIMD_FNMADD(KP707106781, TR, TP);
                TS             = SIMD_FMADD(KP707106781, TR, TP);
                TN             = SIMD_FNMADD(KP923879532, TM, TK);
                T1j            = SIMD_FMADD(KP923879532, TM, TK);
                T1b            = SIMD_FNMADD(KP923879532, T1a, T19);
                T1d            = SIMD_FMADD(KP923879532, T1a, T19);
                T12            = SIMD_FNMADD(KP923879532, T11, T10);
                T1h            = SIMD_FMADD(KP923879532, T11, T10);
                TA             = SIMD_FMADD(KP923879532, Tz, Tx);
                T1n            = SIMD_FNMADD(KP923879532, Tz, Tx);
                Tt             = T7 + Tc;
                Cr[WS(cs, 8)]  = T7 - Tc;
                TZ             = TU + TV;
                TW             = TU - TV;
                T1u            = T1r + T1q;
                T1s            = T1q - T1r;
                T15            = SIMD_FNMADD(KP668178637, T14, T13);
                T1e            = SIMD_FMADD(KP668178637, T13, T14);
                TE             = SIMD_FMADD(KP198912367, TD, TB);
                T1k            = SIMD_FNMADD(KP198912367, TB, TD);
                Tw             = Tu + Tv;
                Ci[WS(cs, 8)]  = Tv - Tu;
                Tq             = Tk + Tp;
                Ts             = Tp - Tk;
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, TW, TS);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, TW, TS);
                Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, TZ, TY));
                Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, TZ, TY);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1s, T1p);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1s, T1p);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1u, T1t);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1u, T1t);
                T1g            = SIMD_FMADD(KP707106781, T1f, T1e);
                T1i            = SIMD_FNMADD(KP707106781, T1f, T1e);
                T18            = T15 + T17;
                T1c            = T17 - T15;
                T1m            = SIMD_FNMADD(KP707106781, T1l, T1k);
                T1o            = SIMD_FMADD(KP707106781, T1l, T1k);
                TI             = TE + TH;
                TO             = TE - TH;
                Cr[0]          = Tt + Tw;
                Cr[WS(cs, 16)] = Tt - Tw;
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, Ts, Tr);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Ts, Tr);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tq, Td);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tq, Td);
                Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1i, T1h));
                Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1i, T1h);
                Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1g, T1d);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1g, T1d);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1c, T1b);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1c, T1b);
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T18, T12);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T18, T12);
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1o, T1n);
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1o, T1n));
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1m, T1j);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1m, T1j);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, TO, TN);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TO, TN);
                Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TI, TA);
                Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, TI, TA));
            }
        }
    }
}

template <>
struct r2cf_traits<32, 15>
{
    static constexpr long_t flops           = 184;
    static constexpr long_t operations      = 114;
    static constexpr long_t memory_accesses = 47;
    static constexpr long_t stack_vars      = 108;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 15 -name r2cf
 * -standalone */

/*
 * This function contains 114 FP additions, 70 FP multiplications,
 * (or, 44 additions, 0 multiplications, 70 fused multiply/add),
 * 108 stack variables, 11 constants, and 47 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 15>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP281304567, +0.281304567672051975711044033377455068719994628);
    DK(KP140652283, +0.140652283836025987855522016688727534359997314);
    DK(KP944947291, +0.944947291833454135715528660331293545615050125);
    DK(KP472473645, +0.472473645916727067857764330165646772807525063);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT TT, TM, T1e, TN, Tz, T15, T7, T1q, T14, T11, T1z, T1x, T1p,
            Ty, Tu;
        SIMD_FLOAT T1l, T1n, T1d, T1h, TL, TS, T16, TQ, TC, T1f, TW, T12, Te,
            Tt, T1o;
        SIMD_FLOAT TR, T1m, T17, T1i, T1g, T1s, TD, T1u, T13, TX, T1y, Tv, T1t,
            T1r;
        {
            SIMD_FLOAT Tb, TJ, Ta, TU, TA, TO, T1v, T10, Tr, Tx, T1b, TI, Tf,
                TG, T19;
            SIMD_FLOAT T1w, TZ, T18, TE, Tw, Tm, Tc, Tn, To, Tp, T1, T2, T4, T5,
                Tg;
            SIMD_FLOAT Th, Tj, Tk, T8, T9, Tq, T3, T6, Ti, TY, Tl, TF, T1c, T1k,
                TK;
            SIMD_FLOAT T1a, T1j, TH, Ts, TP, TB, TV, Td;
            Tn             = R0[WS(rs, 7)];
            To             = R0[WS(rs, 3)];
            Tp             = R0[WS(rs, 11)];
            T1             = R0[0];
            T2             = R0[WS(rs, 8)];
            T4             = R0[WS(rs, 4)];
            T5             = R0[WS(rs, 12)];
            Tg             = R0[WS(rs, 1)];
            Th             = R0[WS(rs, 9)];
            Tj             = R0[WS(rs, 5)];
            Tk             = R0[WS(rs, 13)];
            T8             = R0[WS(rs, 2)];
            T9             = R0[WS(rs, 10)];
            Tb             = R0[WS(rs, 14)];
            Tq             = To + Tp;
            TJ             = Tp - To;
            T3             = T1 + T2;
            TT             = T1 - T2;
            T6             = T4 + T5;
            TM             = T4 - T5;
            Ti             = Tg + Th;
            TY             = Tg - Th;
            Tl             = Tj + Tk;
            TF             = Tj - Tk;
            Ta             = T8 + T9;
            TU             = T8 - T9;
            TA             = SIMD_FMADD(KP414213562, T8, T9);
            TO             = SIMD_FNMADD(KP414213562, T9, T8);
            T1v            = SIMD_FNMADD(KP414213562, Tn, TJ);
            T10            = SIMD_FMADD(KP414213562, TJ, Tn);
            Tr             = Tn - Tq;
            Tx             = Tn + Tq;
            T1b            = SIMD_FNMADD(KP707106781, Tq, Tn);
            TI             = SIMD_FMADD(KP707106781, Tq, Tn);
            T1e            = SIMD_FNMADD(KP707106781, TM, T1);
            TN             = SIMD_FMADD(KP707106781, TM, T1);
            Tz             = SIMD_FMADD(KP707106781, T6, T2);
            T15            = SIMD_FNMADD(KP707106781, T6, T2);
            Tf             = T3 - T6;
            T7             = T3 + T6;
            TG             = SIMD_FMADD(KP707106781, TF, Tg);
            T19            = SIMD_FNMADD(KP707106781, TF, Tg);
            T1w            = SIMD_FMADD(KP414213562, TY, TF);
            TZ             = SIMD_FNMADD(KP414213562, TF, TY);
            T18            = SIMD_FNMADD(KP707106781, Tl, Th);
            TE             = SIMD_FMADD(KP707106781, Tl, Th);
            Tw             = Ti + Tl;
            Tm             = Ti - Tl;
            Tc             = R0[WS(rs, 6)];
            T1c            = SIMD_FMADD(KP472473645, TJ, T1b);
            T1k            = SIMD_FNMADD(KP944947291, T1b, TJ);
            TK             = SIMD_FMADD(KP140652283, TJ, TI);
            T1q            = SIMD_FNMADD(KP281304567, TI, TJ);
            T14            = TZ + T10;
            T11            = TZ - T10;
            T1z            = T1w + T1v;
            T1x            = T1v - T1w;
            T1a            = SIMD_FNMADD(KP668178637, T19, T18);
            T1j            = SIMD_FMADD(KP668178637, T18, T19);
            T1p            = SIMD_FNMADD(KP198912367, TE, TG);
            TH             = SIMD_FMADD(KP198912367, TG, TE);
            Ty             = Tw + Tx;
            Ci[WS(cs, 8)]  = Tx - Tw;
            Tu             = Tr - Tm;
            Ts             = Tm + Tr;
            TP             = SIMD_FMSUB(KP414213562, Tc, Tb);
            TB             = SIMD_FMADD(KP414213562, Tb, Tc);
            TV             = Tb - Tc;
            Td             = Tb + Tc;
            T1l            = SIMD_FMADD(KP707106781, T1k, T1j);
            T1n            = SIMD_FNMADD(KP707106781, T1k, T1j);
            T1d            = T1a + T1c;
            T1h            = T1c - T1a;
            TL             = TH + TK;
            TS             = TH - TK;
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Ts, Tf);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Ts, Tf);
            T16            = TP - TO;
            TQ             = TO + TP;
            TC             = TA + TB;
            T1f            = TA - TB;
            TW             = TU + TV;
            T12            = TV - TU;
            Te             = Ta + Td;
            Tt             = Td - Ta;
        }
        T1o            = SIMD_FMADD(KP923879532, TQ, TN);
        TR             = SIMD_FNMADD(KP923879532, TQ, TN);
        T1m            = SIMD_FNMADD(KP923879532, T16, T15);
        T17            = SIMD_FMADD(KP923879532, T16, T15);
        T1i            = SIMD_FMADD(KP923879532, T1f, T1e);
        T1g            = SIMD_FNMADD(KP923879532, T1f, T1e);
        T1s            = SIMD_FNMADD(KP923879532, TC, Tz);
        TD             = SIMD_FMADD(KP923879532, TC, Tz);
        T1u            = SIMD_FNMADD(KP707106781, T12, TM);
        T13            = SIMD_FMADD(KP707106781, T12, TM);
        TX             = SIMD_FMADD(KP707106781, TW, TT);
        T1y            = SIMD_FNMADD(KP707106781, TW, TT);
        Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, Tu, Tt);
        Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tu, Tt);
        Tv             = T7 + Te;
        Cr[WS(cs, 8)]  = T7 - Te;
        T1t            = SIMD_FMADD(KP707106781, T1q, T1p);
        T1r            = SIMD_FNMADD(KP707106781, T1q, T1p);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, TS, TR);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TS, TR);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1n, T1m));
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1n, T1m);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1d, T17);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1d, T17);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1l, T1i);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1l, T1i);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1h, T1g);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1h, T1g);
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TL, TD);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, TL, TD));
        Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1x, T1u);
        Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1x, T1u);
        Ci[WS(cs, 10)] = -(SIMD_FMADD(KP923879532, T14, T13));
        Ci[WS(cs, 6)]  = SIMD_FNMADD(KP923879532, T14, T13);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T11, TX);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T11, TX);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1z, T1y);
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1z, T1y);
        Cr[0]          = Tv + Ty;
        Cr[WS(cs, 16)] = Tv - Ty;
        Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1t, T1s);
        Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1t, T1s));
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1r, T1o);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1r, T1o);
    }
}

template <>
struct r2cf_traits<32, 16>
{
    static constexpr long_t flops           = 186;
    static constexpr long_t operations      = 118;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 109;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 16 -name r2cf
 * -standalone */

/*
 * This function contains 118 FP additions, 68 FP multiplications,
 * (or, 50 additions, 0 multiplications, 68 fused multiply/add),
 * 109 stack variables, 7 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 16>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1h, T1i, T1k, T1g, T1j, T1l;
        {
            SIMD_FLOAT T1m, TB, Tb, T12, TC, TQ, T1c, T7, Tf, TM, T18, T1u, T1A,
                T19, TN;
            SIMD_FLOAT Tt, Tz, TI, T15, T1s, T1B, T16, TJ, Tm, Ty, Ta, T1n, TD,
                TS, Tc;
            SIMD_FLOAT T1, T2, T4, T5, Tn, To, Tq, Tr, Tg, Th, Tj, Tk, T8, T3,
                T6;
            SIMD_FLOAT T1t, Tp, TL, Ts, T1r, Ti, TH, Tl, T9, T1C, T1E, T1y, T1v,
                TA, Tu;
            SIMD_FLOAT Tw;
            T1            = R0[0];
            T2            = R0[WS(rs, 8)];
            T4            = R0[WS(rs, 4)];
            T5            = R0[WS(rs, 12)];
            Tn            = R0[WS(rs, 15)];
            To            = R0[WS(rs, 7)];
            Tq            = R0[WS(rs, 3)];
            Tr            = R0[WS(rs, 11)];
            Tg            = R0[WS(rs, 1)];
            Th            = R0[WS(rs, 9)];
            Tj            = R0[WS(rs, 5)];
            Tk            = R0[WS(rs, 13)];
            T8            = R0[WS(rs, 2)];
            T1m           = T1 - T2;
            T3            = T1 + T2;
            TB            = T4 - T5;
            T6            = T4 + T5;
            T1t           = Tn - To;
            Tp            = Tn + To;
            TL            = Tr - Tq;
            Ts            = Tq + Tr;
            T1r           = Tg - Th;
            Ti            = Tg + Th;
            TH            = Tj - Tk;
            Tl            = Tj + Tk;
            T9            = R0[WS(rs, 10)];
            Tb            = R0[WS(rs, 14)];
            T12           = SIMD_FMADD(KP707106781, TB, T1);
            TC            = SIMD_FNMADD(KP707106781, TB, T1);
            TQ            = SIMD_FNMADD(KP707106781, T6, T2);
            T1c           = SIMD_FMADD(KP707106781, T6, T2);
            T7            = T3 + T6;
            Tf            = T3 - T6;
            TM            = SIMD_FMSUB(KP707106781, TL, Tn);
            T18           = SIMD_FMADD(KP707106781, TL, Tn);
            T1u           = SIMD_FNMADD(KP414213562, TL, T1t);
            T1A           = SIMD_FMADD(KP414213562, T1t, TL);
            T19           = SIMD_FMADD(KP707106781, Ts, To);
            TN            = SIMD_FNMADD(KP707106781, Ts, To);
            Tt            = Tp - Ts;
            Tz            = Tp + Ts;
            TI            = SIMD_FNMADD(KP707106781, TH, Tg);
            T15           = SIMD_FMADD(KP707106781, TH, Tg);
            T1s           = SIMD_FNMADD(KP414213562, TH, T1r);
            T1B           = SIMD_FMADD(KP414213562, T1r, TH);
            T16           = SIMD_FMADD(KP707106781, Tl, Th);
            TJ            = SIMD_FNMADD(KP707106781, Tl, Th);
            Tm            = Ti - Tl;
            Ty            = Ti + Tl;
            Ta            = T8 + T9;
            T1n           = T8 - T9;
            TD            = SIMD_FMADD(KP414213562, T8, T9);
            TS            = SIMD_FNMADD(KP414213562, T9, T8);
            Tc            = R0[WS(rs, 6)];
            T1C           = T1A - T1B;
            T1E           = T1B + T1A;
            T1y           = T1u - T1s;
            T1v           = T1s + T1u;
            TA            = Ty + Tz;
            Ci[WS(cs, 8)] = Tz - Ty;
            Tu            = Tm + Tt;
            Tw            = Tt - Tm;
            {
                SIMD_FLOAT TX, TK, TO, TY, Td, T1o, TE, TR, T17, T1a, TV, TP,
                    TT, T13, T1d;
                SIMD_FLOAT TF, T1p, T1w, Tv, Te, T11, TZ, T1f, T1b, TW, TU, T14,
                    T1e, T10, TG;
                SIMD_FLOAT T1q, T1D, T1z, T1x, Tx;
                TX             = SIMD_FNMADD(KP668178637, TI, TJ);
                TK             = SIMD_FMADD(KP668178637, TJ, TI);
                TO             = SIMD_FNMADD(KP668178637, TN, TM);
                TY             = SIMD_FMADD(KP668178637, TM, TN);
                Td             = Tb + Tc;
                T1o            = Tb - Tc;
                TE             = SIMD_FMADD(KP414213562, Tb, Tc);
                TR             = SIMD_FMSUB(KP414213562, Tc, Tb);
                T1h            = SIMD_FMADD(KP198912367, T15, T16);
                T17            = SIMD_FNMADD(KP198912367, T16, T15);
                T1a            = SIMD_FNMADD(KP198912367, T19, T18);
                T1i            = SIMD_FMADD(KP198912367, T18, T19);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tu, Tf);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tu, Tf);
                TV             = TO - TK;
                TP             = TK + TO;
                TT             = TR - TS;
                T13            = TS + TR;
                T1d            = TD + TE;
                TF             = TD - TE;
                T1p            = T1n + T1o;
                T1w            = T1o - T1n;
                Tv             = Td - Ta;
                Te             = Ta + Td;
                T11            = TY - TX;
                TZ             = TX + TY;
                T1f            = T17 + T1a;
                T1b            = T17 - T1a;
                TW             = SIMD_FMADD(KP923879532, TT, TQ);
                TU             = SIMD_FNMADD(KP923879532, TT, TQ);
                T1k            = SIMD_FNMADD(KP923879532, T13, T12);
                T14            = SIMD_FMADD(KP923879532, T13, T12);
                T1g            = SIMD_FMADD(KP923879532, T1d, T1c);
                T1e            = SIMD_FNMADD(KP923879532, T1d, T1c);
                T10            = SIMD_FNMADD(KP923879532, TF, TC);
                TG             = SIMD_FMADD(KP923879532, TF, TC);
                T1q            = SIMD_FMADD(KP707106781, T1p, T1m);
                T1D            = SIMD_FNMADD(KP707106781, T1p, T1m);
                T1z            = SIMD_FNMADD(KP707106781, T1w, TB);
                T1x            = SIMD_FMADD(KP707106781, T1w, TB);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, Tw, Tv);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tw, Tv);
                Tx             = T7 + Te;
                Cr[WS(cs, 8)]  = T7 - Te;
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, TZ, TW);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, TZ, TW);
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP831469612, TV, TU);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP831469612, TV, TU);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1b, T14);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1b, T14);
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1f, T1e);
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1f, T1e));
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T11, T10);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T11, T10);
                Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, TP, TG);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, TP, TG);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1v, T1q);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1v, T1q);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1E, T1D);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1E, T1D);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1C, T1z);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1C, T1z);
                Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T1y, T1x);
                Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1y, T1x);
                Cr[0]          = Tx + TA;
                Cr[WS(cs, 16)] = Tx - TA;
            }
        }
        T1j            = T1h + T1i;
        T1l            = T1h - T1i;
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1l, T1k);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1l, T1k);
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1j, T1g);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T1j, T1g));
    }
}

template <>
struct r2cf_traits<32, 17>
{
    static constexpr long_t flops           = 188;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 49;
    static constexpr long_t stack_vars      = 112;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 17 -name r2cf
 * -standalone */

/*
 * This function contains 120 FP additions, 68 FP multiplications,
 * (or, 52 additions, 0 multiplications, 68 fused multiply/add),
 * 112 stack variables, 7 constants, and 49 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 17>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1a, T1d, T17, T1h, T1i, T1e;
        {
            SIMD_FLOAT T8, TE, TT, T1f, T15, TF, T1p, T5, T1b, TP, T1D, T1x, TQ,
                T1c, TB;
            SIMD_FLOAT Tv, T18, TL, T1E, T1v, TM, T19, TA, To, Tc, T1q, TG, TV,
                Td, Te;
            SIMD_FLOAT T4, T6, T7, T1, T2, Tp, Tq, Ts, Tt, Ti, Tj, Tl, Tm, Ta,
                T3;
            SIMD_FLOAT TD, Tr, T1w, Tu, TO, Tk, T1u, Tn, TK, Tb, Th, T9, T1F,
                T1H, T1B;
            SIMD_FLOAT T1y, TC, Ty, Tw;
            T4            = R0[WS(rs, 8)];
            T6            = R0[WS(rs, 4)];
            T7            = R0[WS(rs, 12)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            Tp            = R0[WS(rs, 15)];
            Tq            = R0[WS(rs, 7)];
            Ts            = R0[WS(rs, 3)];
            Tt            = R0[WS(rs, 11)];
            Ti            = R0[WS(rs, 1)];
            Tj            = R0[WS(rs, 9)];
            Tl            = R0[WS(rs, 5)];
            Tm            = R0[WS(rs, 13)];
            Ta            = R0[WS(rs, 2)];
            T8            = T6 + T7;
            TE            = T6 - T7;
            T3            = T1 + T2;
            TD            = T1 - T2;
            Tr            = Tp + Tq;
            T1w           = Tp - Tq;
            Tu            = Ts + Tt;
            TO            = Tt - Ts;
            Tk            = Ti + Tj;
            T1u           = Ti - Tj;
            Tn            = Tl + Tm;
            TK            = Tl - Tm;
            Tb            = R0[WS(rs, 10)];
            TT            = SIMD_FNMADD(KP707106781, T8, T4);
            T1f           = SIMD_FMADD(KP707106781, T8, T4);
            T15           = SIMD_FMADD(KP707106781, TE, TD);
            TF            = SIMD_FNMADD(KP707106781, TE, TD);
            T1p           = T3 - T4;
            T5            = T3 + T4;
            T1b           = SIMD_FMADD(KP707106781, TO, Tp);
            TP            = SIMD_FMSUB(KP707106781, TO, Tp);
            T1D           = SIMD_FMADD(KP414213562, T1w, TO);
            T1x           = SIMD_FNMADD(KP414213562, TO, T1w);
            TQ            = SIMD_FNMADD(KP707106781, Tu, Tq);
            T1c           = SIMD_FMADD(KP707106781, Tu, Tq);
            TB            = Tr + Tu;
            Tv            = Tr - Tu;
            T18           = SIMD_FMADD(KP707106781, TK, Ti);
            TL            = SIMD_FNMADD(KP707106781, TK, Ti);
            T1E           = SIMD_FMADD(KP414213562, T1u, TK);
            T1v           = SIMD_FNMADD(KP414213562, TK, T1u);
            TM            = SIMD_FNMADD(KP707106781, Tn, Tj);
            T19           = SIMD_FMADD(KP707106781, Tn, Tj);
            TA            = Tk + Tn;
            To            = Tk - Tn;
            Tc            = Ta + Tb;
            T1q           = Ta - Tb;
            TG            = SIMD_FMADD(KP414213562, Ta, Tb);
            TV            = SIMD_FNMADD(KP414213562, Tb, Ta);
            Td            = R0[WS(rs, 14)];
            Te            = R0[WS(rs, 6)];
            Th            = T5 - T8;
            T9            = T5 + T8;
            T1F           = T1D - T1E;
            T1H           = T1E + T1D;
            T1B           = T1x - T1v;
            T1y           = T1v + T1x;
            TC            = TA + TB;
            Ci[WS(cs, 8)] = TB - TA;
            Ty            = Tv - To;
            Tw            = To + Tv;
            {
                SIMD_FLOAT TN, T10, Tf, T1r, TH, TU, T11, TR, T1k, T1l, T16, TW,
                    TI, T1g, T1z;
                SIMD_FLOAT T1s, Tg, Tx, TS, TY, T12, T14, T1m, T1o, TX, TZ, T1n,
                    T1j, TJ, T13;
                SIMD_FLOAT T1t, T1G, T1C, T1A, Tz;
                TN             = SIMD_FMADD(KP668178637, TM, TL);
                T10            = SIMD_FNMADD(KP668178637, TL, TM);
                Tf             = Td + Te;
                T1r            = Td - Te;
                TH             = SIMD_FMADD(KP414213562, Td, Te);
                TU             = SIMD_FMSUB(KP414213562, Te, Td);
                T11            = SIMD_FMADD(KP668178637, TP, TQ);
                TR             = SIMD_FNMADD(KP668178637, TQ, TP);
                T1k            = SIMD_FMADD(KP198912367, T18, T19);
                T1a            = SIMD_FNMADD(KP198912367, T19, T18);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Tw, Th);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Tw, Th);
                T1d            = SIMD_FNMADD(KP198912367, T1c, T1b);
                T1l            = SIMD_FMADD(KP198912367, T1b, T1c);
                T16            = TV + TU;
                TW             = TU - TV;
                TI             = TG - TH;
                T1g            = TG + TH;
                T1z            = T1r - T1q;
                T1s            = T1q + T1r;
                Tg             = Tc + Tf;
                Tx             = Tf - Tc;
                TS             = TN + TR;
                TY             = TR - TN;
                T12            = T10 + T11;
                T14            = T11 - T10;
                T1m            = T1k + T1l;
                T1o            = T1k - T1l;
                TX             = SIMD_FNMADD(KP923879532, TW, TT);
                TZ             = SIMD_FMADD(KP923879532, TW, TT);
                T1n            = SIMD_FNMADD(KP923879532, T16, T15);
                T17            = SIMD_FMADD(KP923879532, T16, T15);
                T1j            = SIMD_FMADD(KP923879532, T1g, T1f);
                T1h            = SIMD_FNMADD(KP923879532, T1g, T1f);
                TJ             = SIMD_FMADD(KP923879532, TI, TF);
                T13            = SIMD_FNMADD(KP923879532, TI, TF);
                T1t            = SIMD_FMADD(KP707106781, T1s, T1p);
                T1G            = SIMD_FNMADD(KP707106781, T1s, T1p);
                T1C            = SIMD_FNMADD(KP707106781, T1z, TE);
                T1A            = SIMD_FMADD(KP707106781, T1z, TE);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, Ty, Tx);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Ty, Tx);
                Cr[WS(cs, 8)]  = T9 - Tg;
                Tz             = T9 + Tg;
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T12, TZ);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T12, TZ);
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP831469612, TY, TX);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP831469612, TY, TX);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1o, T1n);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1o, T1n);
                Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1m, T1j);
                Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T1m, T1j));
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T14, T13);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T14, T13);
                Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, TS, TJ);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, TS, TJ);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1H, T1G);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1H, T1G);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1y, T1t);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1y, T1t);
                Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T1B, T1A);
                Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1B, T1A);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1F, T1C);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1F, T1C);
                Cr[WS(cs, 16)] = Tz - TC;
                Cr[0]          = Tz + TC;
            }
        }
        T1i            = T1a + T1d;
        T1e            = T1a - T1d;
        Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1i, T1h);
        Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1i, T1h));
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1e, T17);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1e, T17);
    }
}

template <>
struct r2cf_traits<32, 18>
{
    static constexpr long_t flops           = 190;
    static constexpr long_t operations      = 122;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 115;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 18 -name r2cf
 * -standalone */

/*
 * This function contains 122 FP additions, 68 FP multiplications,
 * (or, 54 additions, 0 multiplications, 68 fused multiply/add),
 * 115 stack variables, 7 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 18>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    {
        SIMD_FLOAT T1o, T1n, T1q, T1m, T1p, T1r;
        {
            SIMD_FLOAT T8, TG, Ta, TN, Tp, TW, T1i, T18, TH, T1s, T5, T1e, TS,
                T1G, T1A;
            SIMD_FLOAT TT, T1f, TD, Tx, TP, T1c, T1b, TO, T1x, Tm, Tb, Td, Te,
                T4, T6;
            SIMD_FLOAT T7, T1, T2, Tr, Ts, Tu, Tv, Tl, Tn, To, Ti, Tj, T3, TF,
                Tt;
            SIMD_FLOAT T1z, Tw, TR, TM, Tk, Th, T9, T14, TU;
            T4  = R0[WS(rs, 8)];
            T6  = R0[WS(rs, 4)];
            T7  = R0[WS(rs, 12)];
            T1  = R0[0];
            T2  = R0[WS(rs, 16)];
            Tr  = R0[WS(rs, 15)];
            Ts  = R0[WS(rs, 7)];
            Tu  = R0[WS(rs, 3)];
            Tv  = R0[WS(rs, 11)];
            Tl  = R0[WS(rs, 9)];
            Tn  = R0[WS(rs, 5)];
            To  = R0[WS(rs, 13)];
            Ti  = R0[WS(rs, 1)];
            Tj  = R0[WS(rs, 17)];
            T8  = T6 + T7;
            TG  = T6 - T7;
            T3  = T1 + T2;
            TF  = T1 - T2;
            Tt  = Tr + Ts;
            T1z = Tr - Ts;
            Tw  = Tu + Tv;
            TR  = Tv - Tu;
            Ta  = R0[WS(rs, 2)];
            TN  = Tn - To;
            Tp  = Tn + To;
            TM  = Ti - Tj;
            Tk  = Ti + Tj;
            TW  = SIMD_FNMADD(KP707106781, T8, T4);
            T1i = SIMD_FMADD(KP707106781, T8, T4);
            T18 = SIMD_FMADD(KP707106781, TG, TF);
            TH  = SIMD_FNMADD(KP707106781, TG, TF);
            T1s = T3 - T4;
            T5  = T3 + T4;
            T1e = SIMD_FMADD(KP707106781, TR, Tr);
            TS  = SIMD_FMSUB(KP707106781, TR, Tr);
            T1G = SIMD_FMADD(KP414213562, T1z, TR);
            T1A = SIMD_FNMADD(KP414213562, TR, T1z);
            TT  = SIMD_FNMADD(KP707106781, Tw, Ts);
            T1f = SIMD_FMADD(KP707106781, Tw, Ts);
            TD  = Tt + Tw;
            Tx  = Tt - Tw;
            TP  = SIMD_FNMADD(KP707106781, Tp, Tl);
            T1c = SIMD_FMADD(KP707106781, Tp, Tl);
            T1b = SIMD_FMADD(KP707106781, TN, TM);
            TO  = SIMD_FNMADD(KP707106781, TN, TM);
            T1x = Tk - Tl;
            Tm  = Tk + Tl;
            Tb  = R0[WS(rs, 10)];
            Td  = R0[WS(rs, 14)];
            Te  = R0[WS(rs, 6)];
            Th  = T5 - T8;
            T9  = T5 + T8;
            T14 = SIMD_FMADD(KP668178637, TS, TT);
            TU  = SIMD_FNMADD(KP668178637, TT, TS);
            {
                SIMD_FLOAT T15, T17, TV, T11, T1B, T1E, T1I, T1K, TA, TE, T19,
                    TZ, TK, T1j, T1C;
                SIMD_FLOAT T1v, Tg, Tz, T1l, T1h, T1g, T1d, TQ, T13, T1H, T1y,
                    TC, Tq, Tc, T1t;
                SIMD_FLOAT TI, TY, Tf, T1u, TJ, TX, Ty, T10, T12, T1a, T1k, TL,
                    T16, T1J, T1w;
                SIMD_FLOAT T1F, T1D, TB;
                T1o            = SIMD_FMADD(KP198912367, T1e, T1f);
                T1g            = SIMD_FNMADD(KP198912367, T1f, T1e);
                T1d            = SIMD_FNMADD(KP198912367, T1c, T1b);
                T1n            = SIMD_FMADD(KP198912367, T1b, T1c);
                TQ             = SIMD_FMADD(KP668178637, TP, TO);
                T13            = SIMD_FNMADD(KP668178637, TO, TP);
                T1H            = SIMD_FMADD(KP414213562, T1x, TN);
                T1y            = SIMD_FNMADD(KP414213562, TN, T1x);
                TC             = Tm + Tp;
                Tq             = Tm - Tp;
                Tc             = Ta + Tb;
                T1t            = Ta - Tb;
                TI             = SIMD_FMADD(KP414213562, Ta, Tb);
                TY             = SIMD_FNMADD(KP414213562, Tb, Ta);
                Tf             = Td + Te;
                T1u            = Td - Te;
                TJ             = SIMD_FMADD(KP414213562, Td, Te);
                TX             = SIMD_FMSUB(KP414213562, Te, Td);
                T15            = T13 + T14;
                T17            = T14 - T13;
                TV             = TQ + TU;
                T11            = TU - TQ;
                T1B            = T1y + T1A;
                T1E            = T1A - T1y;
                T1I            = T1G - T1H;
                T1K            = T1H + T1G;
                Ty             = Tq + Tx;
                TA             = Tx - Tq;
                Ci[WS(cs, 8)]  = TD - TC;
                TE             = TC + TD;
                T19            = TY + TX;
                TZ             = TX - TY;
                TK             = TI - TJ;
                T1j            = TI + TJ;
                T1C            = T1u - T1t;
                T1v            = T1t + T1u;
                Tg             = Tc + Tf;
                Tz             = Tf - Tc;
                T1l            = T1d + T1g;
                T1h            = T1d - T1g;
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, Ty, Th);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, Ty, Th);
                T10            = SIMD_FNMADD(KP923879532, TZ, TW);
                T12            = SIMD_FMADD(KP923879532, TZ, TW);
                T1q            = SIMD_FNMADD(KP923879532, T19, T18);
                T1a            = SIMD_FMADD(KP923879532, T19, T18);
                T1k            = SIMD_FNMADD(KP923879532, T1j, T1i);
                T1m            = SIMD_FMADD(KP923879532, T1j, T1i);
                TL             = SIMD_FMADD(KP923879532, TK, TH);
                T16            = SIMD_FNMADD(KP923879532, TK, TH);
                T1J            = SIMD_FNMADD(KP707106781, T1v, T1s);
                T1w            = SIMD_FMADD(KP707106781, T1v, T1s);
                T1F            = SIMD_FNMADD(KP707106781, T1C, TG);
                T1D            = SIMD_FMADD(KP707106781, T1C, TG);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TA, Tz);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, TA, Tz);
                Cr[WS(cs, 8)]  = T9 - Tg;
                TB             = T9 + Tg;
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T15, T12);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T15, T12);
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP831469612, T11, T10);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP831469612, T11, T10);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T17, T16);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T17, T16);
                Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, TV, TL);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, TV, TL);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1B, T1w);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1B, T1w);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1K, T1J);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1K, T1J);
                Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1E, T1D);
                Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T1E, T1D);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1I, T1F);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1I, T1F);
                Cr[0]          = TB + TE;
                Cr[WS(cs, 16)] = TB - TE;
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1h, T1a);
                Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1l, T1k));
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1h, T1a);
                Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1l, T1k);
            }
        }
        T1p            = T1n + T1o;
        T1r            = T1n - T1o;
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1r, T1q);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1r, T1q);
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1p, T1m);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T1p, T1m));
    }
}

template <>
struct r2cf_traits<32, 19>
{
    static constexpr long_t flops           = 192;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 51;
    static constexpr long_t stack_vars      = 118;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 19 -name r2cf
 * -standalone */

/*
 * This function contains 124 FP additions, 68 FP multiplications,
 * (or, 56 additions, 0 multiplications, 68 fused multiply/add),
 * 118 stack variables, 7 constants, and 51 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 19>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1t, T1d, T1n, T1p, T1g, T1q, T1r, T1j, T1o, T1k, T1u, T1s;
        {
            SIMD_FLOAT Tn, T10, TM, T1x, Th, TI, T8, Tr, TQ, Tt, Tu, T11, TL,
                T1w, Te;
            SIMD_FLOAT TZ, T1l, T1b, TJ, T1v, T5, TS, T1f, TP, Tm, Tv, T1C, Tw,
                Tx, Tf;
            SIMD_FLOAT Tg, Td, Ta, Tb, T4, T6, T7, T1, T2, TK, Tc, TH, T3, Tk,
                Tl;
            SIMD_FLOAT Tp, Tq, Ti, TB, T1y, T1F, T9, Tj, T1e, TR, T1A, To;
            Tf  = R0[WS(rs, 14)];
            Tg  = R0[WS(rs, 6)];
            Td  = R0[WS(rs, 10)];
            Ta  = R0[WS(rs, 2)];
            Tb  = R0[WS(rs, 18)];
            T4  = R0[WS(rs, 8)];
            T6  = R0[WS(rs, 4)];
            T7  = R0[WS(rs, 12)];
            T1  = R0[0];
            T2  = R0[WS(rs, 16)];
            Tn  = R0[WS(rs, 9)];
            Tp  = R0[WS(rs, 5)];
            Tq  = R0[WS(rs, 13)];
            T10 = SIMD_FMSUB(KP414213562, Tg, Tf);
            TM  = SIMD_FMADD(KP414213562, Tf, Tg);
            T1x = Tf - Tg;
            Th  = Tf + Tg;
            TK  = Ta - Tb;
            Tc  = Ta + Tb;
            TI  = T6 - T7;
            T8  = T6 + T7;
            TH  = T1 - T2;
            T3  = T1 + T2;
            Tk  = R0[WS(rs, 1)];
            Tr  = Tp + Tq;
            TQ  = Tp - Tq;
            Tl  = R0[WS(rs, 17)];
            Tt  = R0[WS(rs, 15)];
            Tu  = R0[WS(rs, 7)];
            T11 = SIMD_FNMADD(KP414213562, Td, TK);
            TL  = SIMD_FMADD(KP414213562, TK, Td);
            T1w = Tc - Td;
            Te  = Tc + Td;
            TZ  = SIMD_FNMADD(KP707106781, T8, T4);
            T1l = SIMD_FMADD(KP707106781, T8, T4);
            T1b = SIMD_FMADD(KP707106781, TI, TH);
            TJ  = SIMD_FNMADD(KP707106781, TI, TH);
            T1v = T3 - T4;
            T5  = T3 + T4;
            TS  = SIMD_FNMADD(KP707106781, Tr, Tn);
            T1f = SIMD_FMADD(KP707106781, Tr, Tn);
            TP  = Tk - Tl;
            Tm  = Tk + Tl;
            Tv  = Tt + Tu;
            T1C = Tt - Tu;
            Tw  = R0[WS(rs, 3)];
            Tx  = R0[WS(rs, 11)];
            Ti  = Te + Th;
            TB  = Th - Te;
            T1y = T1w + T1x;
            T1F = T1x - T1w;
            T9  = T5 + T8;
            Tj  = T5 - T8;
            T1e = SIMD_FMADD(KP707106781, TQ, TP);
            TR  = SIMD_FNMADD(KP707106781, TQ, TP);
            T1A = Tm - Tn;
            To  = Tm + Tn;
            {
                SIMD_FLOAT T1m, T1c, T1M, T1z, TD, T1I, T1G, T1B, T1K, Ts, TE,
                    T19, TO, T1h, TV;
                SIMD_FLOAT T1J, T1D, TW, T1i, TF, Tz, T13, T15, TT, T16, TN, Ty,
                    TU, T12, T1a;
                SIMD_FLOAT T18, T14, TY, T1N, T1L, T1H, T1E, T17, TX, TG, TC,
                    TA;
                TN             = TL - TM;
                T1m            = TL + TM;
                Ty             = Tw + Tx;
                TU             = Tx - Tw;
                T1c            = T11 + T10;
                T12            = T10 - T11;
                T1M            = SIMD_FNMADD(KP707106781, T1y, T1v);
                T1z            = SIMD_FMADD(KP707106781, T1y, T1v);
                Cr[WS(cs, 8)]  = T9 - Ti;
                TD             = T9 + Ti;
                T1I            = SIMD_FNMADD(KP707106781, T1F, TI);
                T1G            = SIMD_FMADD(KP707106781, T1F, TI);
                T1B            = SIMD_FNMADD(KP414213562, TQ, T1A);
                T1K            = SIMD_FMADD(KP414213562, T1A, TQ);
                Ts             = To - Tr;
                TE             = To + Tr;
                T19            = SIMD_FNMADD(KP923879532, TN, TJ);
                TO             = SIMD_FMADD(KP923879532, TN, TJ);
                T1h            = SIMD_FMADD(KP707106781, TU, Tt);
                TV             = SIMD_FMSUB(KP707106781, TU, Tt);
                T1J            = SIMD_FMADD(KP414213562, T1C, TU);
                T1D            = SIMD_FNMADD(KP414213562, TU, T1C);
                TW             = SIMD_FNMADD(KP707106781, Ty, Tu);
                T1i            = SIMD_FMADD(KP707106781, Ty, Tu);
                TF             = Tv + Ty;
                Tz             = Tv - Ty;
                T13            = SIMD_FNMADD(KP923879532, T12, TZ);
                T15            = SIMD_FMADD(KP923879532, T12, TZ);
                TT             = SIMD_FMADD(KP668178637, TS, TR);
                T16            = SIMD_FNMADD(KP668178637, TR, TS);
                T1N            = T1K + T1J;
                T1L            = T1J - T1K;
                T1H            = T1D - T1B;
                T1E            = T1B + T1D;
                T17            = SIMD_FMADD(KP668178637, TV, TW);
                TX             = SIMD_FNMADD(KP668178637, TW, TV);
                Ci[WS(cs, 8)]  = TF - TE;
                TG             = TE + TF;
                TC             = Tz - Ts;
                TA             = Ts + Tz;
                T1t            = SIMD_FNMADD(KP923879532, T1c, T1b);
                T1d            = SIMD_FMADD(KP923879532, T1c, T1b);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1N, T1M);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1N, T1M);
                Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1L, T1I);
                Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1L, T1I);
                Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T1H, T1G);
                Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1H, T1G);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1E, T1z);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1E, T1z);
                T1a            = T17 - T16;
                T18            = T16 + T17;
                T14            = TX - TT;
                TY             = TT + TX;
                Cr[0]          = TD + TG;
                Cr[WS(cs, 16)] = TD - TG;
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TC, TB);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, TC, TB);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, TA, Tj);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, TA, Tj);
                T1n            = SIMD_FNMADD(KP923879532, T1m, T1l);
                T1p            = SIMD_FMADD(KP923879532, T1m, T1l);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1a, T19);
                Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1a, T19);
                Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T18, T15);
                Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T18, T15);
                Ci[WS(cs, 11)] = SIMD_FMADD(KP831469612, T14, T13);
                Ci[WS(cs, 5)]  = SIMD_FMSUB(KP831469612, T14, T13);
                Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, TY, TO);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, TY, TO);
                T1g            = SIMD_FNMADD(KP198912367, T1f, T1e);
                T1q            = SIMD_FMADD(KP198912367, T1e, T1f);
                T1r            = SIMD_FMADD(KP198912367, T1h, T1i);
                T1j            = SIMD_FNMADD(KP198912367, T1i, T1h);
            }
        }
        T1o            = T1g + T1j;
        T1k            = T1g - T1j;
        T1u            = T1q - T1r;
        T1s            = T1q + T1r;
        Ci[WS(cs, 9)]  = -(SIMD_FMADD(KP980785280, T1o, T1n));
        Ci[WS(cs, 7)]  = SIMD_FNMADD(KP980785280, T1o, T1n);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1k, T1d);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1k, T1d);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1u, T1t);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1u, T1t);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T1s, T1p));
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1s, T1p);
    }
}

template <>
struct r2cf_traits<32, 20>
{
    static constexpr long_t flops           = 196;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 123;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 20 -name r2cf
 * -standalone */

/*
 * This function contains 128 FP additions, 68 FP multiplications,
 * (or, 60 additions, 0 multiplications, 68 fused multiply/add),
 * 123 stack variables, 7 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 20>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1a, T1N, T1G, T1b, T1P, T1E, T1o, T1C, T1r, T1I, T1Q, TV,
            TB, T1A, T1y;
        SIMD_FLOAT TY, Tq, TU, TS, T12, T1i, T1L, T1R, T1B, T1v, T16, TI, T17,
            TL, T1f;
        SIMD_FLOAT T15, T1c, T1e, T1h, T1j, T19, T1d, TX, TZ, TN, TT, T1M, T1O,
            T1S, T1D;
        SIMD_FLOAT T1F, T1w, T1z, T18, T1g, TM, TW;
        {
            SIMD_FLOAT Ty, TQ, To, T1m, Th, Tk, T8, Tw, Tz, TC, TJ, TP, Tn, T1l,
                Te;
            SIMD_FLOAT TO, T10, Tl, T1k, T5, T14, TA, T1p, Tt, TG, TD, TE, T1J,
                T1s, Tf;
            SIMD_FLOAT Tg, Td, Ta, Tb, T4, T6, T7, T1, T2, Tm, Tc, Tj, T3, Tr,
                Ts;
            SIMD_FLOAT Tu, Tv, Ti, T9, T1x, T1n, T1q, T1H, T13, Tx, T1t, TF, Tp,
                TR, T11;
            SIMD_FLOAT T1K, T1u, TH, TK;
            Tf            = R0[WS(rs, 14)];
            Tg            = R0[WS(rs, 6)];
            Td            = R0[WS(rs, 10)];
            Ta            = R0[WS(rs, 2)];
            Tb            = R0[WS(rs, 18)];
            T4            = R0[WS(rs, 8)];
            T6            = R0[WS(rs, 4)];
            T7            = R0[WS(rs, 12)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            Ty            = R0[WS(rs, 9)];
            Tu            = R0[WS(rs, 5)];
            Tv            = R0[WS(rs, 13)];
            TQ            = SIMD_FMADD(KP414213562, Tf, Tg);
            To            = SIMD_FMSUB(KP414213562, Tg, Tf);
            T1m           = Tf - Tg;
            Th            = Tf + Tg;
            Tm            = Ta - Tb;
            Tc            = Ta + Tb;
            Tk            = T6 - T7;
            T8            = T6 + T7;
            Tj            = T1 - T2;
            T3            = T1 + T2;
            Tr            = R0[WS(rs, 1)];
            Tw            = Tu - Tv;
            Tz            = Tu + Tv;
            Ts            = R0[WS(rs, 17)];
            TC            = R0[WS(rs, 15)];
            TJ            = R0[WS(rs, 7)];
            TP            = SIMD_FMADD(KP414213562, Tm, Td);
            Tn            = SIMD_FNMADD(KP414213562, Td, Tm);
            T1l           = Tc - Td;
            Te            = Tc + Td;
            TO            = SIMD_FMADD(KP707106781, T8, T4);
            T1a           = SIMD_FNMADD(KP707106781, T8, T4);
            T10           = SIMD_FNMADD(KP707106781, Tk, Tj);
            Tl            = SIMD_FMADD(KP707106781, Tk, Tj);
            T1k           = T3 - T4;
            T5            = T3 + T4;
            T14           = SIMD_FNMADD(KP707106781, Tz, Ty);
            TA            = SIMD_FMADD(KP707106781, Tz, Ty);
            T1p           = Tr + Ts;
            Tt            = Tr - Ts;
            TG            = R0[WS(rs, 11)];
            TD            = R0[WS(rs, 3)];
            TE            = R0[WS(rs, 19)];
            T1J           = TC + TJ;
            T1s           = TC - TJ;
            T1N           = Th - Te;
            Ti            = Te + Th;
            T9            = T5 + T8;
            T1G           = T5 - T8;
            T1x           = T1m - T1l;
            T1n           = T1l + T1m;
            T1q           = T1p - Ty;
            T1H           = T1p + Ty;
            T13           = SIMD_FNMADD(KP707106781, Tw, Tt);
            Tx            = SIMD_FMADD(KP707106781, Tw, Tt);
            T1t           = TD + TE;
            TF            = TD - TE;
            T1b           = To - Tn;
            Tp            = Tn + To;
            TR            = TP + TQ;
            T11           = TP - TQ;
            Cr[WS(cs, 8)] = T9 - Ti;
            T1P           = T9 + Ti;
            T1E           = SIMD_FNMADD(KP707106781, T1n, T1k);
            T1o           = SIMD_FMADD(KP707106781, T1n, T1k);
            T1C           = SIMD_FMADD(KP414213562, T1q, Tw);
            T1r           = SIMD_FNMADD(KP414213562, Tw, T1q);
            T1I           = T1H - Tz;
            T1Q           = T1H + Tz;
            TV            = SIMD_FMADD(KP198912367, Tx, TA);
            TB            = SIMD_FNMADD(KP198912367, TA, Tx);
            T1K           = T1t + TG;
            T1u           = TG - T1t;
            TH            = TF - TG;
            TK            = TF + TG;
            T1A           = SIMD_FNMADD(KP707106781, T1x, Tk);
            T1y           = SIMD_FMADD(KP707106781, T1x, Tk);
            TY            = SIMD_FNMADD(KP923879532, Tp, Tl);
            Tq            = SIMD_FMADD(KP923879532, Tp, Tl);
            TU            = SIMD_FMADD(KP923879532, TR, TO);
            TS            = SIMD_FNMADD(KP923879532, TR, TO);
            T12           = SIMD_FMADD(KP923879532, T11, T10);
            T1i           = SIMD_FNMADD(KP923879532, T11, T10);
            T1L           = T1J - T1K;
            T1R           = T1J + T1K;
            T1B           = SIMD_FMADD(KP414213562, T1s, T1u);
            T1v           = SIMD_FNMADD(KP414213562, T1u, T1s);
            T16           = SIMD_FMADD(KP707106781, TH, TC);
            TI            = SIMD_FMSUB(KP707106781, TH, TC);
            T17           = SIMD_FNMADD(KP707106781, TK, TJ);
            TL            = SIMD_FMADD(KP707106781, TK, TJ);
            T1f           = SIMD_FNMADD(KP668178637, T13, T14);
            T15           = SIMD_FMADD(KP668178637, T14, T13);
        }
        T1M            = T1I + T1L;
        T1O            = T1L - T1I;
        Ci[WS(cs, 8)]  = T1R - T1Q;
        T1S            = T1Q + T1R;
        T1D            = T1B - T1C;
        T1F            = T1C + T1B;
        T1w            = T1r + T1v;
        T1z            = T1v - T1r;
        T18            = SIMD_FMADD(KP668178637, T17, T16);
        T1g            = SIMD_FNMADD(KP668178637, T16, T17);
        TM             = SIMD_FMADD(KP198912367, TL, TI);
        TW             = SIMD_FNMADD(KP198912367, TI, TL);
        T1c            = SIMD_FNMADD(KP923879532, T1b, T1a);
        T1e            = SIMD_FMADD(KP923879532, T1b, T1a);
        Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1O, T1N);
        Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T1O, T1N);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1M, T1G);
        Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1M, T1G);
        Cr[0]          = T1P + T1S;
        Cr[WS(cs, 16)] = T1P - T1S;
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1F, T1E);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1F, T1E);
        Ci[WS(cs, 2)]  = SIMD_FMSUB(KP923879532, T1D, T1A);
        Ci[WS(cs, 14)] = SIMD_FMADD(KP923879532, T1D, T1A);
        Ci[WS(cs, 10)] = SIMD_FMSUB(KP923879532, T1z, T1y);
        Ci[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1z, T1y);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1w, T1o);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1w, T1o);
        T1h            = T1f + T1g;
        T1j            = T1g - T1f;
        T19            = T15 - T18;
        T1d            = T15 + T18;
        TX             = TV + TW;
        TZ             = TV - TW;
        TN             = TB + TM;
        TT             = TM - TB;
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1j, T1i);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1j, T1i);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1h, T1e);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1h, T1e);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1d, T1c);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1d, T1c));
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T19, T12);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T19, T12);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, TZ, TY);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TZ, TY);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, TX, TU));
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TX, TU);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, TT, TS);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TT, TS);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TN, Tq);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TN, Tq);
    }
}

template <>
struct r2cf_traits<32, 21>
{
    static constexpr long_t flops           = 200;
    static constexpr long_t operations      = 132;
    static constexpr long_t memory_accesses = 53;
    static constexpr long_t stack_vars      = 128;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 21 -name r2cf
 * -standalone */

/*
 * This function contains 132 FP additions, 68 FP multiplications,
 * (or, 64 additions, 0 multiplications, 68 fused multiply/add),
 * 128 stack variables, 7 constants, and 53 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 21>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1f, T1e, Tt, T12, TW, TY, T16, T1m, T1d, T1h, T1l, T1n, TQ,
            TX, T11;
        SIMD_FLOAT T13, T1i, T1g;
        {
            SIMD_FLOAT T4, TB, TU, Tr, T1q, Tj, Tl, TF, TM, TJ, TG, T5, T1o, Tn,
                TR;
            SIMD_FLOAT Ta, T1B, Tz, TC, Tq, TT, Tg, T1p, Tw, T1t, TH, T1w, T1O,
                Th, Ti;
            SIMD_FLOAT T1, T2, T9, T6, T7, Tf, Tc, Td, Tx, T3, Tm, T8, Ty, Te,
                Tp;
            SIMD_FLOAT Tu, Tv, Tb, T1L, TD, T18;
            Th  = R0[WS(rs, 14)];
            Ti  = R0[WS(rs, 6)];
            T4  = R0[WS(rs, 8)];
            T1  = R0[0];
            T2  = R0[WS(rs, 16)];
            T9  = R0[WS(rs, 12)];
            T6  = R0[WS(rs, 4)];
            T7  = R0[WS(rs, 20)];
            Tf  = R0[WS(rs, 10)];
            Tc  = R0[WS(rs, 2)];
            Td  = R0[WS(rs, 18)];
            TB  = R0[WS(rs, 9)];
            Tx  = R0[WS(rs, 5)];
            TU  = SIMD_FMADD(KP414213562, Th, Ti);
            Tr  = SIMD_FMSUB(KP414213562, Ti, Th);
            T1q = Th - Ti;
            Tj  = Th + Ti;
            Tl  = T1 - T2;
            T3  = T1 + T2;
            Tm  = T6 - T7;
            T8  = T6 + T7;
            Ty  = R0[WS(rs, 13)];
            Te  = Tc + Td;
            Tp  = Tc - Td;
            Tu  = R0[WS(rs, 1)];
            Tv  = R0[WS(rs, 17)];
            TF  = R0[WS(rs, 15)];
            TM  = R0[WS(rs, 7)];
            TJ  = R0[WS(rs, 11)];
            TG  = R0[WS(rs, 3)];
            T5  = T3 + T4;
            T1o = T3 - T4;
            Tn  = Tm - T9;
            TR  = Tm + T9;
            Ta  = T8 + T9;
            T1B = T9 - T8;
            Tz  = Tx - Ty;
            TC  = Tx + Ty;
            Tq  = SIMD_FNMADD(KP414213562, Tf, Tp);
            TT  = SIMD_FMADD(KP414213562, Tp, Tf);
            Tg  = Te + Tf;
            T1p = Te - Tf;
            Tw  = Tu - Tv;
            T1t = Tu + Tv;
            TH  = R0[WS(rs, 19)];
            T1w = TF - TM;
            T1O = TF + TM;
            Tb  = T5 + Ta;
            T1L = T5 - Ta;
            TD  = SIMD_FMADD(KP707106781, TC, TB);
            T18 = SIMD_FNMADD(KP707106781, TC, TB);
            {
                SIMD_FLOAT T14, T1S, T17, TS, T1D, T1F, T1s, T1J, T1U, T1v, T1H,
                    T1V, T1N, TZ, TE;
                SIMD_FLOAT T1y, T1P, TN, TK, T15, TV, To, T1r, T1C, Tk, T1M,
                    T1u, TA, TI, T1x;
                SIMD_FLOAT Ts, T1j, T19, T1W, T1Q, T1z, T1G, TL, T1a, TO, T1b,
                    T1R, T1T, T1X, T1I;
                SIMD_FLOAT T1K, T1A, T1E, T1k, T1c, T10, TP;
                To             = SIMD_FMADD(KP707106781, Tn, Tl);
                T14            = SIMD_FNMADD(KP707106781, Tn, Tl);
                T1r            = T1p + T1q;
                T1C            = T1q - T1p;
                Tk             = Tg + Tj;
                T1S            = Tj - Tg;
                T1M            = T1t + TB;
                T1u            = T1t - TB;
                TA             = SIMD_FMADD(KP707106781, Tz, Tw);
                T17            = SIMD_FNMADD(KP707106781, Tz, Tw);
                TI             = TG - TH;
                T1x            = TG + TH;
                T1f            = Tr - Tq;
                Ts             = Tq + Tr;
                TS             = SIMD_FMADD(KP707106781, TR, T4);
                T1e            = SIMD_FNMADD(KP707106781, TR, T4);
                T1D            = SIMD_FNMADD(KP707106781, T1C, T1B);
                T1F            = SIMD_FMADD(KP707106781, T1C, T1B);
                T1s            = SIMD_FMADD(KP707106781, T1r, T1o);
                T1J            = SIMD_FNMADD(KP707106781, T1r, T1o);
                Cr[WS(cs, 8)]  = Tb - Tk;
                T1U            = Tb + Tk;
                T1v            = SIMD_FNMADD(KP414213562, Tz, T1u);
                T1H            = SIMD_FMADD(KP414213562, T1u, Tz);
                T1V            = T1M + TC;
                T1N            = T1M - TC;
                TZ             = SIMD_FMADD(KP198912367, TA, TD);
                TE             = SIMD_FNMADD(KP198912367, TD, TA);
                T1y            = TJ - T1x;
                T1P            = T1x + TJ;
                TN             = TI + TJ;
                TK             = TI - TJ;
                Tt             = SIMD_FMADD(KP923879532, Ts, To);
                T12            = SIMD_FNMADD(KP923879532, Ts, To);
                T15            = TT - TU;
                TV             = TT + TU;
                T1j            = SIMD_FNMADD(KP668178637, T17, T18);
                T19            = SIMD_FMADD(KP668178637, T18, T17);
                T1W            = T1O + T1P;
                T1Q            = T1O - T1P;
                T1z            = SIMD_FNMADD(KP414213562, T1y, T1w);
                T1G            = SIMD_FMADD(KP414213562, T1w, T1y);
                TL             = SIMD_FMSUB(KP707106781, TK, TF);
                T1a            = SIMD_FMADD(KP707106781, TK, TF);
                TO             = SIMD_FMADD(KP707106781, TN, TM);
                T1b            = SIMD_FNMADD(KP707106781, TN, TM);
                TW             = SIMD_FNMADD(KP923879532, TV, TS);
                TY             = SIMD_FMADD(KP923879532, TV, TS);
                T16            = SIMD_FMADD(KP923879532, T15, T14);
                T1m            = SIMD_FNMADD(KP923879532, T15, T14);
                T1R            = T1N + T1Q;
                T1T            = T1Q - T1N;
                Ci[WS(cs, 8)]  = T1W - T1V;
                T1X            = T1V + T1W;
                T1I            = T1G - T1H;
                T1K            = T1H + T1G;
                T1A            = T1v + T1z;
                T1E            = T1z - T1v;
                T1k            = SIMD_FNMADD(KP668178637, T1a, T1b);
                T1c            = SIMD_FMADD(KP668178637, T1b, T1a);
                T10            = SIMD_FNMADD(KP198912367, TL, TO);
                TP             = SIMD_FMADD(KP198912367, TO, TL);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1T, T1S);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T1T, T1S);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1R, T1L);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1R, T1L);
                Cr[0]          = T1U + T1X;
                Cr[WS(cs, 16)] = T1U - T1X;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1K, T1J);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1K, T1J);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1I, T1F);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1I, T1F);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1E, T1D);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1E, T1D);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1A, T1s);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1A, T1s);
                T1d            = T19 - T1c;
                T1h            = T19 + T1c;
                T1l            = T1j + T1k;
                T1n            = T1k - T1j;
                TQ             = TE + TP;
                TX             = TP - TE;
                T11            = TZ + T10;
                T13            = TZ - T10;
            }
        }
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1d, T16);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1d, T16);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1n, T1m);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1n, T1m);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, TX, TW);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TX, TW);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TQ, Tt);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TQ, Tt);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T13, T12);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T13, T12);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T11, TY));
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T11, TY);
        T1i            = SIMD_FMADD(KP923879532, T1f, T1e);
        T1g            = SIMD_FNMADD(KP923879532, T1f, T1e);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1l, T1i);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1l, T1i);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1h, T1g);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1h, T1g));
    }
}

template <>
struct r2cf_traits<32, 22>
{
    static constexpr long_t flops           = 204;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 22 -name r2cf
 * -standalone */

/*
 * This function contains 136 FP additions, 68 FP multiplications,
 * (or, 68 additions, 0 multiplications, 68 fused multiply/add),
 * 133 stack variables, 7 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 22>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1h, T14, Tt, T1g, TY, T10, T1e, T1o, T18, T1b, T1p, T1n, TZ,
            TS, T15;
        SIMD_FLOAT T13, T1f, T1j, T1i, T1k;
        {
            SIMD_FLOAT T4, TH, TO, TW, Tr, T1s, Tj, Tl, TL, T1T, T1A, TA, TD,
                T5, T1q;
            SIMD_FLOAT Tn, TT, Ta, T1F, Tq, TV, Tg, T1r, TK, T1B, Tu, Tv, Tx,
                Ty, Th;
            SIMD_FLOAT Ti, T1, T2, T9, T6, T7, Tf, Tc, Td, T3, Tm, T8, Te, Tp,
                TI;
            SIMD_FLOAT TJ;
            Th  = R0[WS(rs, 14)];
            Ti  = R0[WS(rs, 6)];
            T4  = R0[WS(rs, 8)];
            T1  = R0[0];
            T2  = R0[WS(rs, 16)];
            T9  = R0[WS(rs, 12)];
            T6  = R0[WS(rs, 4)];
            T7  = R0[WS(rs, 20)];
            Tf  = R0[WS(rs, 10)];
            Tc  = R0[WS(rs, 2)];
            Td  = R0[WS(rs, 18)];
            TH  = R0[WS(rs, 15)];
            TO  = R0[WS(rs, 7)];
            TW  = SIMD_FMADD(KP414213562, Th, Ti);
            Tr  = SIMD_FMSUB(KP414213562, Ti, Th);
            T1s = Th - Ti;
            Tj  = Th + Ti;
            Tl  = T1 - T2;
            T3  = T1 + T2;
            Tm  = T6 - T7;
            T8  = T6 + T7;
            TL  = R0[WS(rs, 11)];
            Te  = Tc + Td;
            Tp  = Tc - Td;
            TI  = R0[WS(rs, 3)];
            TJ  = R0[WS(rs, 19)];
            T1T = TH + TO;
            T1A = TH - TO;
            TA  = R0[WS(rs, 13)];
            TD  = R0[WS(rs, 9)];
            T5  = T3 + T4;
            T1q = T3 - T4;
            Tn  = Tm - T9;
            TT  = Tm + T9;
            Ta  = T8 + T9;
            T1F = T9 - T8;
            Tq  = SIMD_FNMADD(KP414213562, Tf, Tp);
            TV  = SIMD_FMADD(KP414213562, Tp, Tf);
            Tg  = Te + Tf;
            T1r = Te - Tf;
            TK  = TI - TJ;
            T1B = TI + TJ;
            Tu  = R0[WS(rs, 1)];
            Tv  = R0[WS(rs, 17)];
            Tx  = R0[WS(rs, 5)];
            Ty  = R0[WS(rs, 21)];
            {
                SIMD_FLOAT T16, T1P, T1X, Tw, T1H, T1J, T1u, T1N, T1Z, T21, T1V,
                    T1D, T1L, TN, T1c;
                SIMD_FLOAT TQ, T1d, T1w, T1Q, T1y, T1R, TE, TB, TU, TX, T17, To,
                    Tb, Ts, T1t;
                SIMD_FLOAT T1G, Tk, T1C, T1U, TP, TM, T1v, Tz, T1x, TR, T12,
                    T1m, T1Y, T1W, T22;
                SIMD_FLOAT T1O, T1M, T1I, T1E, T1l, T11, TG, T20, T1S, T1z, T1K,
                    TC, T19, TF, T1a;
                T16            = SIMD_FNMADD(KP707106781, Tn, Tl);
                To             = SIMD_FMADD(KP707106781, Tn, Tl);
                T1P            = T5 - Ta;
                Tb             = T5 + Ta;
                Ts             = Tq + Tr;
                T1h            = Tr - Tq;
                T1t            = T1r + T1s;
                T1G            = T1s - T1r;
                Tk             = Tg + Tj;
                T1X            = Tj - Tg;
                T1C            = TL - T1B;
                T1U            = T1B + TL;
                TP             = TK + TL;
                TM             = TK - TL;
                Tw             = Tu - Tv;
                T1v            = Tu + Tv;
                Tz             = Tx - Ty;
                T1x            = Tx + Ty;
                T1H            = SIMD_FNMADD(KP707106781, T1G, T1F);
                T1J            = SIMD_FMADD(KP707106781, T1G, T1F);
                T1u            = SIMD_FMADD(KP707106781, T1t, T1q);
                T1N            = SIMD_FNMADD(KP707106781, T1t, T1q);
                Cr[WS(cs, 8)]  = Tb - Tk;
                T1Z            = Tb + Tk;
                T21            = T1T + T1U;
                T1V            = T1T - T1U;
                T1D            = SIMD_FNMADD(KP414213562, T1C, T1A);
                T1L            = SIMD_FMADD(KP414213562, T1A, T1C);
                TN             = SIMD_FMSUB(KP707106781, TM, TH);
                T1c            = SIMD_FMADD(KP707106781, TM, TH);
                TQ             = SIMD_FMADD(KP707106781, TP, TO);
                T1d            = SIMD_FNMADD(KP707106781, TP, TO);
                T1w            = T1v - TD;
                T1Q            = T1v + TD;
                T1y            = TA - T1x;
                T1R            = T1x + TA;
                TE             = Tz + TA;
                TB             = Tz - TA;
                T14            = SIMD_FNMADD(KP923879532, Ts, To);
                Tt             = SIMD_FMADD(KP923879532, Ts, To);
                T1g            = SIMD_FNMADD(KP707106781, TT, T4);
                TU             = SIMD_FMADD(KP707106781, TT, T4);
                TX             = TV + TW;
                T17            = TV - TW;
                TR             = SIMD_FMADD(KP198912367, TQ, TN);
                T12            = SIMD_FNMADD(KP198912367, TN, TQ);
                T20            = T1Q + T1R;
                T1S            = T1Q - T1R;
                T1z            = SIMD_FMADD(KP414213562, T1y, T1w);
                T1K            = SIMD_FNMADD(KP414213562, T1w, T1y);
                TC             = SIMD_FMADD(KP707106781, TB, Tw);
                T19            = SIMD_FNMADD(KP707106781, TB, Tw);
                TF             = SIMD_FMADD(KP707106781, TE, TD);
                T1a            = SIMD_FNMADD(KP707106781, TE, TD);
                TY             = SIMD_FNMADD(KP923879532, TX, TU);
                T10            = SIMD_FMADD(KP923879532, TX, TU);
                T1e            = SIMD_FMADD(KP668178637, T1d, T1c);
                T1m            = SIMD_FNMADD(KP668178637, T1c, T1d);
                T1o            = SIMD_FNMADD(KP923879532, T17, T16);
                T18            = SIMD_FMADD(KP923879532, T17, T16);
                T1Y            = T1V - T1S;
                T1W            = T1S + T1V;
                Ci[WS(cs, 8)]  = T21 - T20;
                T22            = T20 + T21;
                T1O            = T1L - T1K;
                T1M            = T1K + T1L;
                T1I            = T1D - T1z;
                T1E            = T1z + T1D;
                T1l            = SIMD_FNMADD(KP668178637, T19, T1a);
                T1b            = SIMD_FMADD(KP668178637, T1a, T19);
                T11            = SIMD_FMADD(KP198912367, TC, TF);
                TG             = SIMD_FNMADD(KP198912367, TF, TC);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1Y, T1X);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T1Y, T1X);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1W, T1P);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1W, T1P);
                Cr[0]          = T1Z + T22;
                Cr[WS(cs, 16)] = T1Z - T22;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1O, T1N);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1O, T1N);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1M, T1J);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1M, T1J);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1I, T1H);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1I, T1H);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1E, T1u);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1E, T1u);
                T1p            = T1m - T1l;
                T1n            = T1l + T1m;
                TZ             = TR - TG;
                TS             = TG + TR;
                T15            = T11 - T12;
                T13            = T11 + T12;
            }
        }
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1p, T1o);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1p, T1o);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, TZ, TY);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, TZ, TY);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TS, Tt);
        Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TS, Tt);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T15, T14);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T15, T14);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T13, T10));
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T13, T10);
        T1f            = T1b - T1e;
        T1j            = T1b + T1e;
        T1i            = SIMD_FNMADD(KP923879532, T1h, T1g);
        T1k            = SIMD_FMADD(KP923879532, T1h, T1g);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1f, T18);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1f, T18);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1n, T1k);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1n, T1k);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1j, T1i);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1j, T1i));
    }
}

template <>
struct r2cf_traits<32, 23>
{
    static constexpr long_t flops           = 206;
    static constexpr long_t operations      = 138;
    static constexpr long_t memory_accesses = 55;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 23 -name r2cf
 * -standalone */

/*
 * This function contains 138 FP additions, 68 FP multiplications,
 * (or, 70 additions, 0 multiplications, 68 fused multiply/add),
 * 136 stack variables, 7 constants, and 55 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 23>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1k, T1j, T16, T12, T13, T11, T1r, T1b, T1s, T1q, T1m, T1i,
            T1n, T1l;
        {
            SIMD_FLOAT T4, TK, TR, Tn, T1D, T1W, T1t, T5, TW, Tp, T1I, Ta, TZ,
                Tu, T1v;
            SIMD_FLOAT Tl, TY, Ts, T1u, Tg, TD, TG, Tx, Ty, TA, TB, T1X, T1F,
                TP, TS;
            SIMD_FLOAT T1, T2, T9, T6, T7, Th, Ti, Tj, Tf, Tc, Td, TO, T1E, TN,
                T3;
            SIMD_FLOAT To, T8, TL, Tk, Tt, TM, Tr, Te, Tb, T1S, T20, Tm, T1J,
                Tz, T24;
            SIMD_FLOAT T1Y, TQ, T1f, TT, T1g, T22, T1z, T1T, T1B, T1U, TH, TE,
                T1Q, T1x, T1G;
            SIMD_FLOAT T1O, T1w, T1y, TC, T1A;
            T4            = R0[WS(rs, 8)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            T9            = R0[WS(rs, 12)];
            T6            = R0[WS(rs, 4)];
            T7            = R0[WS(rs, 20)];
            Th            = R0[WS(rs, 14)];
            Ti            = R0[WS(rs, 6)];
            Tj            = R0[WS(rs, 22)];
            Tf            = R0[WS(rs, 10)];
            Tc            = R0[WS(rs, 2)];
            Td            = R0[WS(rs, 18)];
            TK            = R0[WS(rs, 15)];
            TR            = R0[WS(rs, 7)];
            T3            = T1 + T2;
            Tn            = T1 - T2;
            TO            = R0[WS(rs, 11)];
            To            = T6 - T7;
            T8            = T6 + T7;
            TL            = R0[WS(rs, 3)];
            Tk            = Ti + Tj;
            Tt            = Ti - Tj;
            TM            = R0[WS(rs, 19)];
            Tr            = Tc - Td;
            Te            = Tc + Td;
            T1D           = TK - TR;
            T1W           = TK + TR;
            T1t           = T3 - T4;
            T5            = T3 + T4;
            TW            = To + T9;
            Tp            = To - T9;
            T1I           = T9 - T8;
            Ta            = T8 + T9;
            TZ            = SIMD_FMADD(KP414213562, Th, Tt);
            Tu            = SIMD_FMSUB(KP414213562, Tt, Th);
            T1v           = Th - Tk;
            Tl            = Th + Tk;
            T1E           = TL + TM;
            TN            = TL - TM;
            TY            = SIMD_FMADD(KP414213562, Tr, Tf);
            Ts            = SIMD_FNMADD(KP414213562, Tf, Tr);
            T1u           = Te - Tf;
            Tg            = Te + Tf;
            TD            = R0[WS(rs, 13)];
            TG            = R0[WS(rs, 9)];
            Tx            = R0[WS(rs, 1)];
            Ty            = R0[WS(rs, 17)];
            TA            = R0[WS(rs, 5)];
            TB            = R0[WS(rs, 21)];
            T1X           = T1E + TO;
            T1F           = TO - T1E;
            TP            = TN - TO;
            TS            = TN + TO;
            Tb            = T5 + Ta;
            T1S           = T5 - Ta;
            T20           = Tl - Tg;
            Tm            = Tg + Tl;
            T1w           = T1u + T1v;
            T1J           = T1v - T1u;
            Tz            = Tx - Ty;
            T1y           = Tx + Ty;
            TC            = TA - TB;
            T1A           = TA + TB;
            T24           = T1W + T1X;
            T1Y           = T1W - T1X;
            TQ            = SIMD_FMSUB(KP707106781, TP, TK);
            T1f           = SIMD_FMADD(KP707106781, TP, TK);
            TT            = SIMD_FMADD(KP707106781, TS, TR);
            T1g           = SIMD_FNMADD(KP707106781, TS, TR);
            Cr[WS(cs, 8)] = Tb - Tm;
            T22           = Tb + Tm;
            T1z           = T1y - TG;
            T1T           = T1y + TG;
            T1B           = TD - T1A;
            T1U           = T1A + TD;
            TH            = TC + TD;
            TE            = TC - TD;
            T1Q           = SIMD_FNMADD(KP707106781, T1w, T1t);
            T1x           = SIMD_FMADD(KP707106781, T1w, T1t);
            T1G           = SIMD_FNMADD(KP414213562, T1F, T1D);
            T1O           = SIMD_FMADD(KP414213562, T1D, T1F);
            {
                SIMD_FLOAT T19, T1c, T1d, Tw, T17, TX, T18, TV, T1a, T10, T15,
                    TU, T1K, T1M, T1Z;
                SIMD_FLOAT T21, T25, T1P, T1R, T1H, T1L, TJ, T14, Tq, Tv, T23,
                    T1V, T1C, T1N, TF;
                SIMD_FLOAT TI, T1o, T1e, T1h, T1p;
                Tq             = SIMD_FMADD(KP707106781, Tp, Tn);
                T19            = SIMD_FNMADD(KP707106781, Tp, Tn);
                T1k            = Tu - Ts;
                Tv             = Ts + Tu;
                T15            = SIMD_FNMADD(KP198912367, TQ, TT);
                TU             = SIMD_FMADD(KP198912367, TT, TQ);
                T23            = T1T + T1U;
                T1V            = T1T - T1U;
                T1C            = SIMD_FMADD(KP414213562, T1B, T1z);
                T1N            = SIMD_FNMADD(KP414213562, T1z, T1B);
                TF             = SIMD_FMADD(KP707106781, TE, Tz);
                T1c            = SIMD_FNMADD(KP707106781, TE, Tz);
                TI             = SIMD_FMADD(KP707106781, TH, TG);
                T1d            = SIMD_FNMADD(KP707106781, TH, TG);
                T1K            = SIMD_FNMADD(KP707106781, T1J, T1I);
                T1M            = SIMD_FMADD(KP707106781, T1J, T1I);
                Tw             = SIMD_FMADD(KP923879532, Tv, Tq);
                T17            = SIMD_FNMADD(KP923879532, Tv, Tq);
                T1Z            = T1V + T1Y;
                T21            = T1Y - T1V;
                Ci[WS(cs, 8)]  = T24 - T23;
                T25            = T23 + T24;
                T1P            = T1N + T1O;
                T1R            = T1O - T1N;
                T1H            = T1C + T1G;
                T1L            = T1G - T1C;
                TJ             = SIMD_FNMADD(KP198912367, TI, TF);
                T14            = SIMD_FMADD(KP198912367, TF, TI);
                TX             = SIMD_FMADD(KP707106781, TW, T4);
                T1j            = SIMD_FNMADD(KP707106781, TW, T4);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T21, T20);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T21, T20);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1Z, T1S);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1Z, T1S);
                Cr[0]          = T22 + T25;
                Cr[WS(cs, 16)] = T22 - T25;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1R, T1Q);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1R, T1Q);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1P, T1M);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1P, T1M);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1L, T1K);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1L, T1K);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1H, T1x);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1H, T1x);
                T16            = T14 + T15;
                T18            = T14 - T15;
                TV             = TJ + TU;
                T12            = TU - TJ;
                T1a            = TY - TZ;
                T10            = TY + TZ;
                T1o            = SIMD_FNMADD(KP668178637, T1c, T1d);
                T1e            = SIMD_FMADD(KP668178637, T1d, T1c);
                T1h            = SIMD_FMADD(KP668178637, T1g, T1f);
                T1p            = SIMD_FNMADD(KP668178637, T1f, T1g);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T18, T17);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T18, T17);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TV, Tw);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TV, Tw);
                T13            = SIMD_FMADD(KP923879532, T10, TX);
                T11            = SIMD_FNMADD(KP923879532, T10, TX);
                T1r            = SIMD_FNMADD(KP923879532, T1a, T19);
                T1b            = SIMD_FMADD(KP923879532, T1a, T19);
                T1s            = T1p - T1o;
                T1q            = T1o + T1p;
                T1m            = T1e + T1h;
                T1i            = T1e - T1h;
            }
        }
        T1n            = SIMD_FMADD(KP923879532, T1k, T1j);
        T1l            = SIMD_FNMADD(KP923879532, T1k, T1j);
        Ci[WS(cs, 1)]  = -(SIMD_FMADD(KP980785280, T16, T13));
        Ci[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T16, T13);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T12, T11);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T12, T11);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1s, T1r);
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP831469612, T1s, T1r);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1i, T1b);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1i, T1b);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1q, T1n);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1q, T1n);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1m, T1l);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1m, T1l));
    }
}

template <>
struct r2cf_traits<32, 24>
{
    static constexpr long_t flops           = 208;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 139;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 24 -name r2cf
 * -standalone */

/*
 * This function contains 140 FP additions, 68 FP multiplications,
 * (or, 72 additions, 0 multiplications, 68 fused multiply/add),
 * 139 stack variables, 7 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 24>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1d, T1t, T1s, T1u, T1k, T1o, T1p, T1n;
        {
            SIMD_FLOAT T4, TK, Tn, TD, T1v, T5, TY, Tp, T1L, Ta, T11, Tu, T1x,
                Tl, T10;
            SIMD_FLOAT Ts, T1w, Tg, T1F, TT, T20, T1I, TP, TU, TG, Tx, Ty, TA,
                TB, T1;
            SIMD_FLOAT T2, T9, T6, T7, Th, Ti, Tj, Tf, Tc, Td, TO, T3, TL, To,
                T8;
            SIMD_FLOAT TM, Tk, Tt, TR, Tr, Te, TS, T1H, TN, T1V, T1G, T23, T1h,
                TQ, T1i;
            SIMD_FLOAT TV, T1A, Tz, T1C, TC, T27, T21, T25, Tb, T1Z, Tm, T1M,
                T1y, T1R, T1J;
            SIMD_FLOAT T1W, T1B, T1X, T1D, TE, TH;
            T4            = R0[WS(rs, 8)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            T9            = R0[WS(rs, 12)];
            T6            = R0[WS(rs, 4)];
            T7            = R0[WS(rs, 20)];
            Th            = R0[WS(rs, 14)];
            Ti            = R0[WS(rs, 6)];
            Tj            = R0[WS(rs, 22)];
            Tf            = R0[WS(rs, 10)];
            Tc            = R0[WS(rs, 2)];
            Td            = R0[WS(rs, 18)];
            TK            = R0[WS(rs, 15)];
            TO            = R0[WS(rs, 11)];
            T3            = T1 + T2;
            Tn            = T1 - T2;
            TL            = R0[WS(rs, 3)];
            To            = T6 - T7;
            T8            = T6 + T7;
            TM            = R0[WS(rs, 19)];
            Tk            = Ti + Tj;
            Tt            = Ti - Tj;
            TR            = R0[WS(rs, 23)];
            Tr            = Tc - Td;
            Te            = Tc + Td;
            TS            = R0[WS(rs, 7)];
            TD            = R0[WS(rs, 13)];
            T1v           = T3 - T4;
            T5            = T3 + T4;
            TY            = To + T9;
            Tp            = To - T9;
            T1L           = T9 - T8;
            Ta            = T8 + T9;
            T1H           = TL + TM;
            TN            = TL - TM;
            T11           = SIMD_FMADD(KP414213562, Th, Tt);
            Tu            = SIMD_FMSUB(KP414213562, Tt, Th);
            T1x           = Th - Tk;
            Tl            = Th + Tk;
            T10           = SIMD_FMADD(KP414213562, Tr, Tf);
            Ts            = SIMD_FNMADD(KP414213562, Tf, Tr);
            T1w           = Te - Tf;
            Tg            = Te + Tf;
            T1F           = TS + TR;
            TT            = TR - TS;
            T20           = T1H + TO;
            T1I           = TO - T1H;
            TP            = TN - TO;
            TU            = TN + TO;
            TG            = R0[WS(rs, 9)];
            Tx            = R0[WS(rs, 1)];
            Ty            = R0[WS(rs, 17)];
            TA            = R0[WS(rs, 5)];
            TB            = R0[WS(rs, 21)];
            T1V           = T5 - Ta;
            Tb            = T5 + Ta;
            T1Z           = TK + T1F;
            T1G           = TK - T1F;
            Tm            = Tg + Tl;
            T23           = Tl - Tg;
            T1h           = SIMD_FMADD(KP707106781, TP, TK);
            TQ            = SIMD_FMSUB(KP707106781, TP, TK);
            T1i           = SIMD_FMADD(KP707106781, TU, TT);
            TV            = SIMD_FNMADD(KP707106781, TU, TT);
            T1A           = Tx + Ty;
            Tz            = Tx - Ty;
            T1C           = TA + TB;
            TC            = TA - TB;
            T27           = T1Z + T20;
            T21           = T1Z - T20;
            Cr[WS(cs, 8)] = Tb - Tm;
            T25           = Tb + Tm;
            T1M           = T1x - T1w;
            T1y           = T1w + T1x;
            T1R           = SIMD_FMADD(KP414213562, T1G, T1I);
            T1J           = SIMD_FNMADD(KP414213562, T1I, T1G);
            T1W           = T1A + TG;
            T1B           = T1A - TG;
            T1X           = T1C + TD;
            T1D           = TD - T1C;
            TE            = TC - TD;
            TH            = TC + TD;
            {
                SIMD_FLOAT T1b, T1m, T1z, T1T, T1N, T1P, TW, T16, T1e, T1f, T19,
                    Tw, T1l, TZ, T24;
                SIMD_FLOAT T22, T28, T1U, T1S, T1O, T1K, TJ, T17, T12, T1c, T1Y,
                    T26, T1Q, T1E, TF;
                SIMD_FLOAT TI, Tq, Tv, T14, TX, T1a, T18, T15, T13, T1g, T1q,
                    T1r, T1j;
                T1b            = SIMD_FNMADD(KP707106781, Tp, Tn);
                Tq             = SIMD_FMADD(KP707106781, Tp, Tn);
                Tv             = Ts + Tu;
                T1m            = Tu - Ts;
                T1z            = SIMD_FMADD(KP707106781, T1y, T1v);
                T1T            = SIMD_FNMADD(KP707106781, T1y, T1v);
                T1N            = SIMD_FNMADD(KP707106781, T1M, T1L);
                T1P            = SIMD_FMADD(KP707106781, T1M, T1L);
                TW             = SIMD_FNMADD(KP198912367, TV, TQ);
                T16            = SIMD_FMADD(KP198912367, TQ, TV);
                T1Y            = T1W - T1X;
                T26            = T1W + T1X;
                T1Q            = SIMD_FNMADD(KP414213562, T1B, T1D);
                T1E            = SIMD_FMADD(KP414213562, T1D, T1B);
                T1e            = SIMD_FNMADD(KP707106781, TE, Tz);
                TF             = SIMD_FMADD(KP707106781, TE, Tz);
                T1f            = SIMD_FNMADD(KP707106781, TH, TG);
                TI             = SIMD_FMADD(KP707106781, TH, TG);
                T19            = SIMD_FNMADD(KP923879532, Tv, Tq);
                Tw             = SIMD_FMADD(KP923879532, Tv, Tq);
                T1l            = SIMD_FNMADD(KP707106781, TY, T4);
                TZ             = SIMD_FMADD(KP707106781, TY, T4);
                T24            = T21 - T1Y;
                T22            = T1Y + T21;
                Ci[WS(cs, 8)]  = T27 - T26;
                T28            = T26 + T27;
                T1U            = T1R - T1Q;
                T1S            = T1Q + T1R;
                T1O            = T1J - T1E;
                T1K            = T1E + T1J;
                TJ             = SIMD_FNMADD(KP198912367, TI, TF);
                T17            = SIMD_FMADD(KP198912367, TF, TI);
                T12            = T10 + T11;
                T1c            = T10 - T11;
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T24, T23);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T24, T23);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T22, T1V);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T22, T1V);
                Cr[0]          = T25 + T28;
                Cr[WS(cs, 16)] = T25 - T28;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1U, T1T);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1U, T1T);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1S, T1P);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1S, T1P);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1O, T1N);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1O, T1N);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1K, T1z);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1K, T1z);
                T14            = TW - TJ;
                TX             = TJ + TW;
                T1a            = T17 + T16;
                T18            = T16 - T17;
                T15            = SIMD_FMADD(KP923879532, T12, TZ);
                T13            = SIMD_FNMADD(KP923879532, T12, TZ);
                T1g            = SIMD_FMADD(KP668178637, T1f, T1e);
                T1q            = SIMD_FNMADD(KP668178637, T1e, T1f);
                T1r            = SIMD_FMADD(KP668178637, T1h, T1i);
                T1j            = SIMD_FNMADD(KP668178637, T1i, T1h);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TX, Tw);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TX, Tw);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1a, T19);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1a, T19);
                Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T18, T15);
                Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T18, T15);
                Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T14, T13);
                Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T14, T13);
                T1d            = SIMD_FMADD(KP923879532, T1c, T1b);
                T1t            = SIMD_FNMADD(KP923879532, T1c, T1b);
                T1s            = T1q - T1r;
                T1u            = T1q + T1r;
                T1k            = T1g - T1j;
                T1o            = T1g + T1j;
                T1p            = SIMD_FMADD(KP923879532, T1m, T1l);
                T1n            = SIMD_FNMADD(KP923879532, T1m, T1l);
            }
        }
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1u, T1t);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1u, T1t);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1k, T1d);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1k, T1d);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1o, T1n);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1o, T1n));
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1s, T1p);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1s, T1p);
    }
}

template <>
struct r2cf_traits<32, 25>
{
    static constexpr long_t flops           = 210;
    static constexpr long_t operations      = 142;
    static constexpr long_t memory_accesses = 57;
    static constexpr long_t stack_vars      = 142;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 25 -name r2cf
 * -standalone */

/*
 * This function contains 142 FP additions, 68 FP multiplications,
 * (or, 74 additions, 0 multiplications, 68 fused multiply/add),
 * 142 stack variables, 7 constants, and 57 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 25>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T17, T1b, T18, T16, T1w, T1g, T1x, T1v, T1r, T1n, T1q, T1s;
        {
            SIMD_FLOAT TM, TQ, TN, Tp, T10, Tr, T11, Tc, T1O, Tu, T13, Ti, T1z,
                Tw, T14;
            SIMD_FLOAT Tn, T1A, T7, T1y, TO, TT, TU, TF, TI, Tz, TA, TC, TD, Tb,
                T8;
            SIMD_FLOAT T9, Th, Te, Tf, Tj, Tk, Tl, T1, T2, T4, T5, Ta, Tq, Tt,
                Tg;
            SIMD_FLOAT Tm, Tv, T3, T6;
            Tb  = R0[WS(rs, 12)];
            T8  = R0[WS(rs, 4)];
            T9  = R0[WS(rs, 20)];
            Th  = R0[WS(rs, 10)];
            Te  = R0[WS(rs, 2)];
            Tf  = R0[WS(rs, 18)];
            Tj  = R0[WS(rs, 14)];
            Tk  = R0[WS(rs, 6)];
            Tl  = R0[WS(rs, 22)];
            T1  = R0[0];
            T2  = R0[WS(rs, 16)];
            T4  = R0[WS(rs, 8)];
            T5  = R0[WS(rs, 24)];
            TM  = R0[WS(rs, 15)];
            Ta  = T8 + T9;
            Tq  = T8 - T9;
            TQ  = R0[WS(rs, 11)];
            Tt  = Te - Tf;
            Tg  = Te + Tf;
            TN  = R0[WS(rs, 3)];
            Tm  = Tk + Tl;
            Tv  = Tk - Tl;
            T3  = T1 + T2;
            Tp  = T1 - T2;
            T6  = T4 + T5;
            T10 = T4 - T5;
            Tr  = Tq - Tb;
            T11 = Tq + Tb;
            Tc  = Ta + Tb;
            T1O = Tb - Ta;
            Tu  = SIMD_FNMADD(KP414213562, Th, Tt);
            T13 = SIMD_FMADD(KP414213562, Tt, Th);
            Ti  = Tg + Th;
            T1z = Tg - Th;
            Tw  = SIMD_FMSUB(KP414213562, Tv, Tj);
            T14 = SIMD_FMADD(KP414213562, Tj, Tv);
            Tn  = Tj + Tm;
            T1A = Tj - Tm;
            T7  = T3 + T6;
            T1y = T3 - T6;
            TO  = R0[WS(rs, 19)];
            TT  = R0[WS(rs, 23)];
            TU  = R0[WS(rs, 7)];
            TF  = R0[WS(rs, 13)];
            TI  = R0[WS(rs, 9)];
            Tz  = R0[WS(rs, 1)];
            TA  = R0[WS(rs, 17)];
            TC  = R0[WS(rs, 5)];
            TD  = R0[WS(rs, 21)];
            {
                SIMD_FLOAT To, T26, T1Y, Td, T1K, TP, T1I, TV, T1B, T1P, TB,
                    T1D, TE, T1F, T1e;
                SIMD_FLOAT T1k, T1l, T1h, T1i, T1p, T12, T1o, Ty, T1c, TZ, T1d,
                    T1f, T15, T1t, T1j;
                SIMD_FLOAT T1m, T1u;
                To  = Ti + Tn;
                T26 = Tn - Ti;
                T1Y = T7 - Tc;
                Td  = T7 + Tc;
                T1K = TN + TO;
                TP  = TN - TO;
                T1I = TU + TT;
                TV  = TT - TU;
                T1B = T1z + T1A;
                T1P = T1A - T1z;
                TB  = Tz - TA;
                T1D = Tz + TA;
                TE  = TC - TD;
                T1F = TC + TD;
                {
                    SIMD_FLOAT Ts, T28, T1C, T1W, T1Q, T1S, T2a, T24, T1M, T1U,
                        T29, T21, T1H, T1T, TH;
                    SIMD_FLOAT TK, Tx, T19, TY, TS, TX, T1L, T23, TW, TR, T1J,
                        T22, T1E, T1Z, T1G;
                    SIMD_FLOAT T20, TJ, TG, T25, T27, T2b, T1V, T1X, T1N, T1R,
                        T1a, TL;
                    Ts             = SIMD_FMADD(KP707106781, Tr, Tp);
                    T1e            = SIMD_FNMADD(KP707106781, Tr, Tp);
                    Cr[WS(cs, 8)]  = Td - To;
                    T28            = Td + To;
                    T1L            = TQ - T1K;
                    T23            = T1K + TQ;
                    TW             = TP + TQ;
                    TR             = TP - TQ;
                    T1J            = TM - T1I;
                    T22            = TM + T1I;
                    T1C            = SIMD_FMADD(KP707106781, T1B, T1y);
                    T1W            = SIMD_FNMADD(KP707106781, T1B, T1y);
                    T1E            = T1D - TI;
                    T1Z            = T1D + TI;
                    T1G            = TF - T1F;
                    T20            = T1F + TF;
                    TJ             = TE + TF;
                    TG             = TE - TF;
                    T1Q            = SIMD_FNMADD(KP707106781, T1P, T1O);
                    T1S            = SIMD_FMADD(KP707106781, T1P, T1O);
                    TS             = SIMD_FMSUB(KP707106781, TR, TM);
                    T1k            = SIMD_FMADD(KP707106781, TR, TM);
                    TX             = SIMD_FNMADD(KP707106781, TW, TV);
                    T1l            = SIMD_FMADD(KP707106781, TW, TV);
                    T2a            = T22 + T23;
                    T24            = T22 - T23;
                    T1M            = SIMD_FNMADD(KP414213562, T1L, T1J);
                    T1U            = SIMD_FMADD(KP414213562, T1J, T1L);
                    T29            = T1Z + T20;
                    T21            = T1Z - T20;
                    T1H            = SIMD_FMADD(KP414213562, T1G, T1E);
                    T1T            = SIMD_FNMADD(KP414213562, T1E, T1G);
                    TH             = SIMD_FMADD(KP707106781, TG, TB);
                    T1h            = SIMD_FNMADD(KP707106781, TG, TB);
                    TK             = SIMD_FMADD(KP707106781, TJ, TI);
                    T1i            = SIMD_FNMADD(KP707106781, TJ, TI);
                    T1p            = Tw - Tu;
                    Tx             = Tu + Tw;
                    T19            = SIMD_FMADD(KP198912367, TS, TX);
                    TY             = SIMD_FNMADD(KP198912367, TX, TS);
                    T12            = SIMD_FMADD(KP707106781, T11, T10);
                    T1o            = SIMD_FNMADD(KP707106781, T11, T10);
                    T25            = T21 + T24;
                    T27            = T24 - T21;
                    Ci[WS(cs, 8)]  = T2a - T29;
                    T2b            = T29 + T2a;
                    T1V            = T1T + T1U;
                    T1X            = T1U - T1T;
                    T1N            = T1H + T1M;
                    T1R            = T1M - T1H;
                    T1a            = SIMD_FMADD(KP198912367, TH, TK);
                    TL             = SIMD_FNMADD(KP198912367, TK, TH);
                    Ty             = SIMD_FMADD(KP923879532, Tx, Ts);
                    T1c            = SIMD_FNMADD(KP923879532, Tx, Ts);
                    Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T27, T26);
                    Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T27, T26);
                    Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T25, T1Y);
                    Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T25, T1Y);
                    Cr[0]          = T28 + T2b;
                    Cr[WS(cs, 16)] = T28 - T2b;
                    Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T1X, T1W);
                    Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T1X, T1W);
                    Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1V, T1S);
                    Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1V, T1S);
                    Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1R, T1Q);
                    Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1R, T1Q);
                    Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1N, T1C);
                    Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1N, T1C);
                    TZ             = TL + TY;
                    T17            = TY - TL;
                    T1b            = T19 - T1a;
                    T1d            = T1a + T19;
                    T1f            = T13 - T14;
                    T15            = T13 + T14;
                }
                T1t            = SIMD_FNMADD(KP668178637, T1h, T1i);
                T1j            = SIMD_FMADD(KP668178637, T1i, T1h);
                T1m            = SIMD_FNMADD(KP668178637, T1l, T1k);
                T1u            = SIMD_FMADD(KP668178637, T1k, T1l);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, TZ, Ty);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, TZ, Ty);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1d, T1c);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1d, T1c);
                T18            = SIMD_FMADD(KP923879532, T15, T12);
                T16            = SIMD_FNMADD(KP923879532, T15, T12);
                T1w            = SIMD_FNMADD(KP923879532, T1f, T1e);
                T1g            = SIMD_FMADD(KP923879532, T1f, T1e);
                T1x            = T1t + T1u;
                T1v            = T1t - T1u;
                T1r            = T1j + T1m;
                T1n            = T1j - T1m;
                T1q            = SIMD_FNMADD(KP923879532, T1p, T1o);
                T1s            = SIMD_FMADD(KP923879532, T1p, T1o);
            }
        }
        Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1b, T18);
        Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1b, T18);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T17, T16);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T17, T16);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1x, T1w);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1x, T1w);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1n, T1g);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1n, T1g);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1r, T1q);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1r, T1q));
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1v, T1s);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1v, T1s);
    }
}

template <>
struct r2cf_traits<32, 26>
{
    static constexpr long_t flops           = 212;
    static constexpr long_t operations      = 144;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 145;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 26 -name r2cf
 * -standalone */

/*
 * This function contains 144 FP additions, 68 FP multiplications,
 * (or, 76 additions, 0 multiplications, 68 fused multiply/add),
 * 145 stack variables, 7 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 26>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1r, T1q, T1y, T1i, T1x, T1z, T1p, T1t, T1s, T1u;
        {
            SIMD_FLOAT TO, TS, TP, Tp, T12, Tr, T13, Tc, T1R, Tu, T15, Ti, T1B,
                Tw, T16;
            SIMD_FLOAT Tn, T1C, T7, T1A, TQ, TV, TW, TF, TI, TJ, Tz, TA, TC, TD,
                Tb;
            SIMD_FLOAT T8, T9, Th, Te, Tf, Tj, Tk, Tl, T1, T2, T4, T5, Ta, Tq,
                Tt;
            SIMD_FLOAT Tg, Tm, Tv, T3, T6, T29, T21, TX, TK, TB, T2b, T26, T1O,
                TT, TY;
            SIMD_FLOAT T25, T1M, T22, T1H, T23, T1J, TG, TL, To, Td, TR, T1N,
                T1L, T1G, T1F;
            SIMD_FLOAT T1I, TE;
            Tb            = R0[WS(rs, 12)];
            T8            = R0[WS(rs, 4)];
            T9            = R0[WS(rs, 20)];
            Th            = R0[WS(rs, 10)];
            Te            = R0[WS(rs, 2)];
            Tf            = R0[WS(rs, 18)];
            Tj            = R0[WS(rs, 14)];
            Tk            = R0[WS(rs, 6)];
            Tl            = R0[WS(rs, 22)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            T4            = R0[WS(rs, 8)];
            T5            = R0[WS(rs, 24)];
            TO            = R0[WS(rs, 15)];
            Ta            = T8 + T9;
            Tq            = T8 - T9;
            TS            = R0[WS(rs, 11)];
            Tt            = Te - Tf;
            Tg            = Te + Tf;
            TP            = R0[WS(rs, 3)];
            Tm            = Tk + Tl;
            Tv            = Tk - Tl;
            T3            = T1 + T2;
            Tp            = T1 - T2;
            T6            = T4 + T5;
            T12           = T4 - T5;
            Tr            = Tq - Tb;
            T13           = Tq + Tb;
            Tc            = Ta + Tb;
            T1R           = Tb - Ta;
            Tu            = SIMD_FNMADD(KP414213562, Th, Tt);
            T15           = SIMD_FMADD(KP414213562, Tt, Th);
            Ti            = Tg + Th;
            T1B           = Tg - Th;
            Tw            = SIMD_FMSUB(KP414213562, Tv, Tj);
            T16           = SIMD_FMADD(KP414213562, Tj, Tv);
            Tn            = Tj + Tm;
            T1C           = Tj - Tm;
            T7            = T3 + T6;
            T1A           = T3 - T6;
            TQ            = R0[WS(rs, 19)];
            TV            = R0[WS(rs, 23)];
            TW            = R0[WS(rs, 7)];
            TF            = R0[WS(rs, 13)];
            TI            = R0[WS(rs, 9)];
            TJ            = R0[WS(rs, 25)];
            Tz            = R0[WS(rs, 1)];
            TA            = R0[WS(rs, 17)];
            TC            = R0[WS(rs, 5)];
            TD            = R0[WS(rs, 21)];
            T29           = Tn - Ti;
            To            = Ti + Tn;
            Td            = T7 + Tc;
            T21           = T7 - Tc;
            TR            = TP - TQ;
            T1N           = TP + TQ;
            TX            = TV - TW;
            T1L           = TW + TV;
            T1G           = TI + TJ;
            TK            = TI - TJ;
            T1F           = Tz + TA;
            TB            = Tz - TA;
            T1I           = TC + TD;
            TE            = TC - TD;
            Cr[WS(cs, 8)] = Td - To;
            T2b           = Td + To;
            T26           = T1N + TS;
            T1O           = TS - T1N;
            TT            = TR - TS;
            TY            = TR + TS;
            T25           = TO + T1L;
            T1M           = TO - T1L;
            T22           = T1F + T1G;
            T1H           = T1F - T1G;
            T23           = T1I + TF;
            T1J           = TF - T1I;
            TG            = TE - TF;
            TL            = TE + TF;
            {
                SIMD_FLOAT T1S, T1m, TU, T1n, TZ, T1j, TH, T1k, TM, T1E, T1Z,
                    T1W, T1K, T1P, T1X;
                SIMD_FLOAT T2a, T28, T2e, T27, T2d, T24, T2c, T1D, T1g, T10,
                    T1b, T1e, Ty, T1c, TN;
                SIMD_FLOAT T14, T17, T1h, T1V, T20, T1Y, Ts, Tx, T1T, T1U, T1Q,
                    T1l, T1v, T1f, T1d;
                SIMD_FLOAT T19, T11, T1w, T1o, T1a, T18;
                T1S            = T1C - T1B;
                T1D            = T1B + T1C;
                T1m            = SIMD_FMADD(KP707106781, TT, TO);
                TU             = SIMD_FMSUB(KP707106781, TT, TO);
                T1n            = SIMD_FMADD(KP707106781, TY, TX);
                TZ             = SIMD_FNMADD(KP707106781, TY, TX);
                T27            = T25 - T26;
                T2d            = T25 + T26;
                T24            = T22 - T23;
                T2c            = T22 + T23;
                T1j            = SIMD_FNMADD(KP707106781, TG, TB);
                TH             = SIMD_FMADD(KP707106781, TG, TB);
                T1k            = SIMD_FNMADD(KP707106781, TL, TK);
                TM             = SIMD_FMADD(KP707106781, TL, TK);
                T1E            = SIMD_FMADD(KP707106781, T1D, T1A);
                T1Z            = SIMD_FNMADD(KP707106781, T1D, T1A);
                T1W            = SIMD_FNMADD(KP414213562, T1H, T1J);
                T1K            = SIMD_FMADD(KP414213562, T1J, T1H);
                T1P            = SIMD_FNMADD(KP414213562, T1O, T1M);
                T1X            = SIMD_FMADD(KP414213562, T1M, T1O);
                T2a            = T27 - T24;
                T28            = T24 + T27;
                Ci[WS(cs, 8)]  = T2d - T2c;
                T2e            = T2c + T2d;
                T1g            = SIMD_FNMADD(KP707106781, Tr, Tp);
                Ts             = SIMD_FMADD(KP707106781, Tr, Tp);
                Tx             = Tu + Tw;
                T1r            = Tw - Tu;
                T10            = SIMD_FNMADD(KP198912367, TZ, TU);
                T1b            = SIMD_FMADD(KP198912367, TU, TZ);
                T1V            = SIMD_FMADD(KP707106781, T1S, T1R);
                T1T            = SIMD_FNMADD(KP707106781, T1S, T1R);
                T1U            = T1P - T1K;
                T1Q            = T1K + T1P;
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T2a, T29);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T2a, T29);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T28, T21);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T28, T21);
                Cr[0]          = T2b + T2e;
                Cr[WS(cs, 16)] = T2b - T2e;
                T20            = T1X - T1W;
                T1Y            = T1W + T1X;
                T1e            = SIMD_FNMADD(KP923879532, Tx, Ts);
                Ty             = SIMD_FMADD(KP923879532, Tx, Ts);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1U, T1T);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1U, T1T);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1Q, T1E);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1Q, T1E);
                T1c            = SIMD_FMADD(KP198912367, TH, TM);
                TN             = SIMD_FNMADD(KP198912367, TM, TH);
                T1q            = SIMD_FNMADD(KP707106781, T13, T12);
                T14            = SIMD_FMADD(KP707106781, T13, T12);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T20, T1Z);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T20, T1Z);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1Y, T1V);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T1Y, T1V);
                T17            = T15 + T16;
                T1h            = T15 - T16;
                T1l            = SIMD_FMADD(KP668178637, T1k, T1j);
                T1v            = SIMD_FNMADD(KP668178637, T1j, T1k);
                T1f            = T1c + T1b;
                T1d            = T1b - T1c;
                T19            = T10 - TN;
                T11            = TN + T10;
                T1w            = SIMD_FMADD(KP668178637, T1m, T1n);
                T1o            = SIMD_FNMADD(KP668178637, T1n, T1m);
                T1a            = SIMD_FMADD(KP923879532, T17, T14);
                T18            = SIMD_FNMADD(KP923879532, T17, T14);
                T1y            = SIMD_FNMADD(KP923879532, T1h, T1g);
                T1i            = SIMD_FMADD(KP923879532, T1h, T1g);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1f, T1e);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1f, T1e);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T11, Ty);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T11, Ty);
                T1x            = T1v - T1w;
                T1z            = T1v + T1w;
                T1p            = T1l - T1o;
                T1t            = T1l + T1o;
                Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1d, T1a);
                Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1d, T1a);
                Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T19, T18);
                Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T19, T18);
            }
        }
        T1s            = SIMD_FNMADD(KP923879532, T1r, T1q);
        T1u            = SIMD_FMADD(KP923879532, T1r, T1q);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1z, T1y);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1z, T1y);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1p, T1i);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1p, T1i);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1x, T1u);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1x, T1u);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1t, T1s);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1t, T1s));
    }
}

template <>
struct r2cf_traits<32, 27>
{
    static constexpr long_t flops           = 214;
    static constexpr long_t operations      = 146;
    static constexpr long_t memory_accesses = 59;
    static constexpr long_t stack_vars      = 148;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 27 -name r2cf
 * -standalone */

/*
 * This function contains 146 FP additions, 68 FP multiplications,
 * (or, 78 additions, 0 multiplications, 68 fused multiply/add),
 * 148 stack variables, 7 constants, and 59 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 27>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1u, T1t, T1l, T1B, T1C, T1A, T1w, T1s, T1x, T1v;
        {
            SIMD_FLOAT TR, Tr, T15, T16, Tt, T1U, Tc, T19, Tz, T1F, Tp, T1D, T7,
                T18, Tx;
            SIMD_FLOAT T1E, Tk, TV, TS, TT, TY, TZ, TI, TL, TM, TC, TD, TF, TG,
                Tb;
            SIMD_FLOAT T8, T9, Tl, Tm, Tn, T1, T2, T4, T5, Te, Tf, Th, Ti, Ta,
                Ts;
            SIMD_FLOAT Ty, To, T3, T6, Tv, Tg, Tw, Tj, T24, T2c, T10, TN, TE,
                T2e, T1R;
            SIMD_FLOAT T29, T11, TW, T1P, T28, T1K, T25, T1M, T26, TO, TJ, Td,
                Tq, T1Q, TU;
            SIMD_FLOAT T1O, T1J, T1I, TH, T1L;
            Tb            = R0[WS(rs, 12)];
            T8            = R0[WS(rs, 4)];
            T9            = R0[WS(rs, 20)];
            Tl            = R0[WS(rs, 14)];
            Tm            = R0[WS(rs, 6)];
            Tn            = R0[WS(rs, 22)];
            T1            = R0[0];
            T2            = R0[WS(rs, 16)];
            T4            = R0[WS(rs, 8)];
            T5            = R0[WS(rs, 24)];
            Te            = R0[WS(rs, 2)];
            Tf            = R0[WS(rs, 18)];
            Th            = R0[WS(rs, 10)];
            Ti            = R0[WS(rs, 26)];
            Ta            = T8 + T9;
            Ts            = T8 - T9;
            TR            = R0[WS(rs, 15)];
            Ty            = Tm - Tn;
            To            = Tm + Tn;
            Tr            = T1 - T2;
            T3            = T1 + T2;
            T15           = T4 - T5;
            T6            = T4 + T5;
            Tv            = Te - Tf;
            Tg            = Te + Tf;
            Tw            = Th - Ti;
            Tj            = Th + Ti;
            T16           = Ts + Tb;
            Tt            = Ts - Tb;
            T1U           = Tb - Ta;
            Tc            = Ta + Tb;
            T19           = SIMD_FMADD(KP414213562, Tl, Ty);
            Tz            = SIMD_FMSUB(KP414213562, Ty, Tl);
            T1F           = Tl - To;
            Tp            = Tl + To;
            T1D           = T3 - T6;
            T7            = T3 + T6;
            T18           = SIMD_FMADD(KP414213562, Tv, Tw);
            Tx            = SIMD_FNMADD(KP414213562, Tw, Tv);
            T1E           = Tg - Tj;
            Tk            = Tg + Tj;
            TV            = R0[WS(rs, 11)];
            TS            = R0[WS(rs, 3)];
            TT            = R0[WS(rs, 19)];
            TY            = R0[WS(rs, 23)];
            TZ            = R0[WS(rs, 7)];
            TI            = R0[WS(rs, 13)];
            TL            = R0[WS(rs, 9)];
            TM            = R0[WS(rs, 25)];
            TC            = R0[WS(rs, 1)];
            TD            = R0[WS(rs, 17)];
            TF            = R0[WS(rs, 5)];
            TG            = R0[WS(rs, 21)];
            Td            = T7 + Tc;
            T24           = T7 - Tc;
            T2c           = Tp - Tk;
            Tq            = Tk + Tp;
            T1Q           = TS + TT;
            TU            = TS - TT;
            T1O           = TZ + TY;
            T10           = TY - TZ;
            TN            = TL - TM;
            T1J           = TL + TM;
            TE            = TC - TD;
            T1I           = TC + TD;
            TH            = TF - TG;
            T1L           = TF + TG;
            Cr[WS(cs, 8)] = Td - Tq;
            T2e           = Td + Tq;
            T1R           = TV - T1Q;
            T29           = T1Q + TV;
            T11           = TU + TV;
            TW            = TU - TV;
            T1P           = TR - T1O;
            T28           = TR + T1O;
            T1K           = T1I - T1J;
            T25           = T1I + T1J;
            T1M           = TI - T1L;
            T26           = T1L + TI;
            TO            = TH + TI;
            TJ            = TH - TI;
            {
                SIMD_FLOAT T1V, TX, T1p, T12, T1q, TK, T1m, TP, T1n, T22, T1H,
                    T1N, T1Z, T20, T1S;
                SIMD_FLOAT T2b, T2d, T2h, T2g, T2a, T2f, T27, T1G, T1j, T1e,
                    T13, TB, T1h, TQ, T1f;
                SIMD_FLOAT T17, T1k, T1a, T1Y, T21, T23, Tu, TA, T1W, T1T, T1X,
                    T1y, T1o, T1g, T1i;
                SIMD_FLOAT T14, T1c, T1r, T1z, T1b, T1d;
                T1G            = T1E + T1F;
                T1V            = T1F - T1E;
                TX             = SIMD_FMSUB(KP707106781, TW, TR);
                T1p            = SIMD_FMADD(KP707106781, TW, TR);
                T12            = SIMD_FNMADD(KP707106781, T11, T10);
                T1q            = SIMD_FMADD(KP707106781, T11, T10);
                T2g            = T28 + T29;
                T2a            = T28 - T29;
                T2f            = T25 + T26;
                T27            = T25 - T26;
                TK             = SIMD_FMADD(KP707106781, TJ, TE);
                T1m            = SIMD_FNMADD(KP707106781, TJ, TE);
                TP             = SIMD_FMADD(KP707106781, TO, TN);
                T1n            = SIMD_FNMADD(KP707106781, TO, TN);
                T22            = SIMD_FNMADD(KP707106781, T1G, T1D);
                T1H            = SIMD_FMADD(KP707106781, T1G, T1D);
                T1N            = SIMD_FMADD(KP414213562, T1M, T1K);
                T1Z            = SIMD_FNMADD(KP414213562, T1K, T1M);
                T20            = SIMD_FMADD(KP414213562, T1P, T1R);
                T1S            = SIMD_FNMADD(KP414213562, T1R, T1P);
                T2b            = T27 + T2a;
                T2d            = T2a - T27;
                Ci[WS(cs, 8)]  = T2g - T2f;
                T2h            = T2f + T2g;
                Tu             = SIMD_FMADD(KP707106781, Tt, Tr);
                T1j            = SIMD_FNMADD(KP707106781, Tt, Tr);
                T1u            = Tz - Tx;
                TA             = Tx + Tz;
                T1e            = SIMD_FMADD(KP198912367, TX, T12);
                T13            = SIMD_FNMADD(KP198912367, T12, TX);
                T1W            = SIMD_FNMADD(KP707106781, T1V, T1U);
                T1Y            = SIMD_FMADD(KP707106781, T1V, T1U);
                T1T            = T1N + T1S;
                T1X            = T1S - T1N;
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T2d, T2c);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T2d, T2c);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T2b, T24);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T2b, T24);
                Cr[0]          = T2e + T2h;
                Cr[WS(cs, 16)] = T2e - T2h;
                T21            = T1Z + T20;
                T23            = T20 - T1Z;
                TB             = SIMD_FMADD(KP923879532, TA, Tu);
                T1h            = SIMD_FNMADD(KP923879532, TA, Tu);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T1X, T1W);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T1X, T1W);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T1T, T1H);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T1T, T1H);
                TQ             = SIMD_FNMADD(KP198912367, TP, TK);
                T1f            = SIMD_FMADD(KP198912367, TK, TP);
                T17            = SIMD_FMADD(KP707106781, T16, T15);
                T1t            = SIMD_FNMADD(KP707106781, T16, T15);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T23, T22);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T23, T22);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T21, T1Y);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T21, T1Y);
                T1k            = T18 - T19;
                T1a            = T18 + T19;
                T1y            = SIMD_FNMADD(KP668178637, T1m, T1n);
                T1o            = SIMD_FMADD(KP668178637, T1n, T1m);
                T1g            = T1e - T1f;
                T1i            = T1f + T1e;
                T14            = TQ + T13;
                T1c            = T13 - TQ;
                T1r            = SIMD_FNMADD(KP668178637, T1q, T1p);
                T1z            = SIMD_FMADD(KP668178637, T1p, T1q);
                T1b            = SIMD_FNMADD(KP923879532, T1a, T17);
                T1d            = SIMD_FMADD(KP923879532, T1a, T17);
                T1l            = SIMD_FMADD(KP923879532, T1k, T1j);
                T1B            = SIMD_FNMADD(KP923879532, T1k, T1j);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1i, T1h);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1i, T1h);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T14, TB);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T14, TB);
                T1C            = T1y + T1z;
                T1A            = T1y - T1z;
                T1w            = T1o + T1r;
                T1s            = T1o - T1r;
                Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1g, T1d);
                Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1g, T1d);
                Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1c, T1b);
                Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1c, T1b);
            }
        }
        T1x            = SIMD_FMADD(KP923879532, T1u, T1t);
        T1v            = SIMD_FNMADD(KP923879532, T1u, T1t);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1C, T1B);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1C, T1B);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1s, T1l);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1s, T1l);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1A, T1x);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1A, T1x);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1w, T1v);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1w, T1v));
    }
}

template <>
struct r2cf_traits<32, 28>
{
    static constexpr long_t flops           = 216;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 28 -name r2cf
 * -standalone */

/*
 * This function contains 148 FP additions, 68 FP multiplications,
 * (or, 80 additions, 0 multiplications, 68 fused multiply/add),
 * 121 stack variables, 7 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 28>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1w, T1v, T1n, T1C, T1y, T1u, T1x, T1z;
        {
            SIMD_FLOAT TR, Tr, T17, T18, Tt, T2b, Tc, T1b, Tz, T21, Tp, T1Z, T7,
                T1a, Tx;
            SIMD_FLOAT T20, Tk, TI, TL, TM, TC, TD, TF, TG, T12, T1M, TU, T1O,
                TX, T1P;
            {
                SIMD_FLOAT Tb, T8, T9, Tl, Tm, Tn, T1, T2, T4, T5, Te, Tf, Th,
                    Ti, Ta;
                SIMD_FLOAT Ts, T10, T11, TS, TT, TV, TW, Ty, To, T3, T6, Tv, Tg,
                    Tw, Tj;
                Tb  = R0[WS(rs, 12)];
                T8  = R0[WS(rs, 4)];
                T9  = R0[WS(rs, 20)];
                Tl  = R0[WS(rs, 14)];
                Tm  = R0[WS(rs, 6)];
                Tn  = R0[WS(rs, 22)];
                T1  = R0[0];
                T2  = R0[WS(rs, 16)];
                T4  = R0[WS(rs, 8)];
                T5  = R0[WS(rs, 24)];
                Te  = R0[WS(rs, 2)];
                Tf  = R0[WS(rs, 18)];
                Th  = R0[WS(rs, 10)];
                Ti  = R0[WS(rs, 26)];
                Ta  = T8 + T9;
                Ts  = T8 - T9;
                TR  = R0[WS(rs, 15)];
                Ty  = Tm - Tn;
                To  = Tm + Tn;
                Tr  = T1 - T2;
                T3  = T1 + T2;
                T17 = T4 - T5;
                T6  = T4 + T5;
                Tv  = Te - Tf;
                Tg  = Te + Tf;
                Tw  = Th - Ti;
                Tj  = Th + Ti;
                T18 = Ts + Tb;
                Tt  = Ts - Tb;
                T2b = Tb - Ta;
                Tc  = Ta + Tb;
                T1b = SIMD_FMADD(KP414213562, Tl, Ty);
                Tz  = SIMD_FMSUB(KP414213562, Ty, Tl);
                T21 = Tl - To;
                Tp  = Tl + To;
                T1Z = T3 - T6;
                T7  = T3 + T6;
                T1a = SIMD_FMADD(KP414213562, Tv, Tw);
                Tx  = SIMD_FNMADD(KP414213562, Tw, Tv);
                T20 = Tg - Tj;
                Tk  = Tg + Tj;
                T10 = R0[WS(rs, 23)];
                T11 = R0[WS(rs, 7)];
                TS  = R0[WS(rs, 3)];
                TT  = R0[WS(rs, 19)];
                TV  = R0[WS(rs, 27)];
                TW  = R0[WS(rs, 11)];
                TI  = R0[WS(rs, 13)];
                TL  = R0[WS(rs, 9)];
                TM  = R0[WS(rs, 25)];
                TC  = R0[WS(rs, 1)];
                TD  = R0[WS(rs, 17)];
                TF  = R0[WS(rs, 5)];
                TG  = R0[WS(rs, 21)];
                T12 = T10 - T11;
                T1M = T11 + T10;
                TU  = TS - TT;
                T1O = TS + TT;
                TX  = TV - TW;
                T1P = TV + TW;
            }
            {
                SIMD_FLOAT T1F, T27, T1T, T28, T24, T25, T1V, T1X, T1R, TZ, T1r,
                    T14, T1s, T1W, T1L;
                SIMD_FLOAT TK, T1o, TP, T1p, Td, T1H, TN, T1G, TE, T1J, TH, T1N,
                    Tq, T1Q, T13;
                SIMD_FLOAT TY, T1I, T1K, TJ, TO, T2c, T22, T2g, T26, T29, T2h,
                    T1S, T1U, T1Y;
                T1F           = T7 - Tc;
                Td            = T7 + Tc;
                T1H           = TL + TM;
                TN            = TL - TM;
                T1G           = TC + TD;
                TE            = TC - TD;
                T1J           = TF + TG;
                TH            = TF - TG;
                T27           = TR - T1M;
                T1N           = TR + T1M;
                Tq            = Tk + Tp;
                T1T           = Tp - Tk;
                T1Q           = T1O + T1P;
                T28           = T1P - T1O;
                T13           = TX - TU;
                TY            = TU + TX;
                T24           = T1G - T1H;
                T1I           = T1G + T1H;
                T25           = TI - T1J;
                T1K           = T1J + TI;
                TJ            = TH - TI;
                TO            = TH + TI;
                Cr[WS(cs, 8)] = Td - Tq;
                T1V           = Td + Tq;
                T1X           = T1N + T1Q;
                T1R           = T1N - T1Q;
                TZ            = SIMD_FMSUB(KP707106781, TY, TR);
                T1r           = SIMD_FMADD(KP707106781, TY, TR);
                T14           = SIMD_FMADD(KP707106781, T13, T12);
                T1s           = SIMD_FNMADD(KP707106781, T13, T12);
                T1W           = T1I + T1K;
                T1L           = T1I - T1K;
                TK            = SIMD_FMADD(KP707106781, TJ, TE);
                T1o           = SIMD_FNMADD(KP707106781, TJ, TE);
                TP            = SIMD_FMADD(KP707106781, TO, TN);
                T1p           = SIMD_FNMADD(KP707106781, TO, TN);
                T2c           = T21 - T20;
                T22           = T20 + T21;
                T2g           = SIMD_FNMADD(KP414213562, T24, T25);
                T26           = SIMD_FMADD(KP414213562, T25, T24);
                T29           = SIMD_FNMADD(KP414213562, T28, T27);
                T2h           = SIMD_FMADD(KP414213562, T27, T28);
                T1S           = T1L + T1R;
                T1U           = T1R - T1L;
                Ci[WS(cs, 8)] = T1X - T1W;
                T1Y           = T1W + T1X;
                {
                    SIMD_FLOAT T1l, T1j, TB, T15, T1g, T1h, TQ, T19, T1c, T1m,
                        T23, T2j, T2d, T2f, T2a;
                    SIMD_FLOAT T2e, T2i, T2k, Tu, TA, T1D, T1E, T1q, T1A, T1B,
                        T1t, T1i, T1e, T16, T1f;
                    SIMD_FLOAT T1d, T1k;
                    T1l            = SIMD_FNMADD(KP707106781, Tt, Tr);
                    Tu             = SIMD_FMADD(KP707106781, Tt, Tr);
                    TA             = Tx + Tz;
                    T1w            = Tz - Tx;
                    T23            = SIMD_FMADD(KP707106781, T22, T1Z);
                    T2j            = SIMD_FNMADD(KP707106781, T22, T1Z);
                    T2d            = SIMD_FNMADD(KP707106781, T2c, T2b);
                    T2f            = SIMD_FMADD(KP707106781, T2c, T2b);
                    T2a            = T26 + T29;
                    T2e            = T29 - T26;
                    T2i            = T2g + T2h;
                    T2k            = T2h - T2g;
                    Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1U, T1T);
                    Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T1U, T1T);
                    Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1S, T1F);
                    Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1S, T1F);
                    Cr[0]          = T1V + T1Y;
                    Cr[WS(cs, 16)] = T1V - T1Y;
                    T1j            = SIMD_FNMADD(KP923879532, TA, Tu);
                    TB             = SIMD_FMADD(KP923879532, TA, Tu);
                    Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T2e, T2d);
                    Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T2e, T2d);
                    Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2a, T23);
                    Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2a, T23);
                    Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T2k, T2j);
                    Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T2k, T2j);
                    Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2i, T2f);
                    Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T2i, T2f);
                    T15            = SIMD_FNMADD(KP198912367, T14, TZ);
                    T1g            = SIMD_FMADD(KP198912367, TZ, T14);
                    T1h            = SIMD_FMADD(KP198912367, TK, TP);
                    TQ             = SIMD_FNMADD(KP198912367, TP, TK);
                    T1v            = SIMD_FNMADD(KP707106781, T18, T17);
                    T19            = SIMD_FMADD(KP707106781, T18, T17);
                    T1c            = T1a + T1b;
                    T1m            = T1a - T1b;
                    T1q            = SIMD_FMADD(KP668178637, T1p, T1o);
                    T1A            = SIMD_FNMADD(KP668178637, T1o, T1p);
                    T1B            = SIMD_FMADD(KP668178637, T1r, T1s);
                    T1t            = SIMD_FNMADD(KP668178637, T1s, T1r);
                    T1k            = T1h + T1g;
                    T1i            = T1g - T1h;
                    T1e            = T15 - TQ;
                    T16            = TQ + T15;
                    T1f            = SIMD_FMADD(KP923879532, T1c, T19);
                    T1d            = SIMD_FNMADD(KP923879532, T1c, T19);
                    T1D            = SIMD_FNMADD(KP923879532, T1m, T1l);
                    T1n            = SIMD_FMADD(KP923879532, T1m, T1l);
                    T1E            = T1A + T1B;
                    T1C            = T1A - T1B;
                    T1y            = T1q + T1t;
                    T1u            = T1q - T1t;
                    Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1k, T1j);
                    Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1k, T1j);
                    Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T16, TB);
                    Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T16, TB);
                    Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1i, T1f);
                    Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1i, T1f);
                    Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1e, T1d);
                    Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1e, T1d);
                    Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1E, T1D);
                    Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1E, T1D);
                }
            }
        }
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1u, T1n);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1u, T1n);
        T1x            = SIMD_FNMADD(KP923879532, T1w, T1v);
        T1z            = SIMD_FMADD(KP923879532, T1w, T1v);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1C, T1z);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1C, T1z);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1y, T1x);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1y, T1x));
    }
}

template <>
struct r2cf_traits<32, 29>
{
    static constexpr long_t flops           = 218;
    static constexpr long_t operations      = 150;
    static constexpr long_t memory_accesses = 61;
    static constexpr long_t stack_vars      = 116;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 29 -name r2cf
 * -standalone */

/*
 * This function contains 150 FP additions, 68 FP multiplications,
 * (or, 82 additions, 0 multiplications, 68 fused multiply/add),
 * 116 stack variables, 7 constants, and 61 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 29>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1G, T1q, T1H, T1F, T1B, T1x, T1A, T1C;
        {
            SIMD_FLOAT Tt, T1a, TC, T1e, Tr, T24, T22, T7, TU, Tw, T1b, Te, T2e,
                TL, T15;
            SIMD_FLOAT T1R, TX, T1d, TA, T23, Tm, T1S, T10, T1K, TQ, T2a, T1Q,
                TH, T1J, TI;
            SIMD_FLOAT TJ, Tf, T1I, T1W, Ts, T2b, T1T, T11, T16, T2f, T1L, T27,
                T1Y, T20, T1U;
            SIMD_FLOAT T12, T1u, T17, T1v, T2m, T26, T1N, T28, TR, TM, T2c, T2k,
                TK, T1M, T25;
            {
                SIMD_FLOAT Tn, To, Tp, T1, T2, T4, T5, T8, T9, Tb, Tc, Tj, Ta,
                    Tu, Td;
                SIMD_FLOAT Tv, Ti, Ty, Tk, Tg, Th, T3, T6, Tq, TB, T13, T14, TV,
                    TW, Tl;
                SIMD_FLOAT Tz, TY, TZ, TO, TP, TF, TG, T1P;
                Tn  = R0[WS(rs, 14)];
                To  = R0[WS(rs, 6)];
                Tp  = R0[WS(rs, 22)];
                T1  = R0[0];
                T2  = R0[WS(rs, 16)];
                T4  = R0[WS(rs, 8)];
                T5  = R0[WS(rs, 24)];
                T8  = R0[WS(rs, 4)];
                T9  = R0[WS(rs, 20)];
                Tb  = R0[WS(rs, 28)];
                Tc  = R0[WS(rs, 12)];
                Tg  = R0[WS(rs, 2)];
                Th  = R0[WS(rs, 18)];
                Tj  = R0[WS(rs, 10)];
                Tq  = To + Tp;
                TB  = To - Tp;
                T3  = T1 + T2;
                Tt  = T1 - T2;
                T6  = T4 + T5;
                T1a = T4 - T5;
                Ta  = T8 + T9;
                Tu  = T8 - T9;
                Td  = Tb + Tc;
                Tv  = Tb - Tc;
                Ti  = Tg + Th;
                Ty  = Tg - Th;
                TC  = SIMD_FMSUB(KP414213562, TB, Tn);
                T1e = SIMD_FMADD(KP414213562, Tn, TB);
                Tr  = Tn + Tq;
                T24 = Tn - Tq;
                Tk  = R0[WS(rs, 26)];
                T22 = T3 - T6;
                T7  = T3 + T6;
                TU  = R0[WS(rs, 15)];
                Tw  = Tu + Tv;
                T1b = Tv - Tu;
                Te  = Ta + Td;
                T2e = Td - Ta;
                T13 = R0[WS(rs, 23)];
                T14 = R0[WS(rs, 7)];
                TV  = R0[WS(rs, 3)];
                TW  = R0[WS(rs, 19)];
                Tl  = Tj + Tk;
                Tz  = Tj - Tk;
                TY  = R0[WS(rs, 27)];
                TZ  = R0[WS(rs, 11)];
                TL  = R0[WS(rs, 13)];
                TO  = R0[WS(rs, 9)];
                TP  = R0[WS(rs, 25)];
                TF  = R0[WS(rs, 1)];
                TG  = R0[WS(rs, 17)];
                T1P = T14 + T13;
                T15 = T13 - T14;
                T1R = TV + TW;
                TX  = TV - TW;
                T1d = SIMD_FMADD(KP414213562, Ty, Tz);
                TA  = SIMD_FNMADD(KP414213562, Tz, Ty);
                T23 = Ti - Tl;
                Tm  = Ti + Tl;
                T1S = TY + TZ;
                T10 = TY - TZ;
                T1K = TO + TP;
                TQ  = TO - TP;
                T2a = TU - T1P;
                T1Q = TU + T1P;
                TH  = TF - TG;
                T1J = TF + TG;
                TI  = R0[WS(rs, 5)];
                TJ  = R0[WS(rs, 21)];
            }
            Tf            = T7 + Te;
            T1I           = T7 - Te;
            T1W           = Tr - Tm;
            Ts            = Tm + Tr;
            T2b           = T1S - T1R;
            T1T           = T1R + T1S;
            T11           = TX + T10;
            T16           = T10 - TX;
            T25           = T23 + T24;
            T2f           = T24 - T23;
            T1L           = T1J + T1K;
            T27           = T1J - T1K;
            TK            = TI - TJ;
            T1M           = TI + TJ;
            Cr[WS(cs, 8)] = Tf - Ts;
            T1Y           = Tf + Ts;
            T20           = T1Q + T1T;
            T1U           = T1Q - T1T;
            T12           = SIMD_FMSUB(KP707106781, T11, TU);
            T1u           = SIMD_FMADD(KP707106781, T11, TU);
            T17           = SIMD_FMADD(KP707106781, T16, T15);
            T1v           = SIMD_FNMADD(KP707106781, T16, T15);
            T2m           = SIMD_FNMADD(KP707106781, T25, T22);
            T26           = SIMD_FMADD(KP707106781, T25, T22);
            T1N           = T1M + TL;
            T28           = TL - T1M;
            TR            = TK + TL;
            TM            = TK - TL;
            T2c           = SIMD_FNMADD(KP414213562, T2b, T2a);
            T2k           = SIMD_FMADD(KP414213562, T2a, T2b);
            {
                SIMD_FLOAT T1o, T1z, T1j, T18, T1c, T1y, T1r, T1s, T2g, T2i, TE,
                    T1m, T2l, T2n, T2d;
                SIMD_FLOAT T2h, T1V, T1X, T21, T1k, TT, T1p, T1f, Tx, TD, T29,
                    T2j, T1Z, T1O, TN;
                SIMD_FLOAT TS, T19, T1h, T1l, T1n, T1g, T1i, T1D, T1t, T1w, T1E;
                Tx             = SIMD_FMADD(KP707106781, Tw, Tt);
                T1o            = SIMD_FNMADD(KP707106781, Tw, Tt);
                T1z            = TC - TA;
                TD             = TA + TC;
                T1j            = SIMD_FMADD(KP198912367, T12, T17);
                T18            = SIMD_FNMADD(KP198912367, T17, T12);
                T1c            = SIMD_FNMADD(KP707106781, T1b, T1a);
                T1y            = SIMD_FMADD(KP707106781, T1b, T1a);
                T29            = SIMD_FMADD(KP414213562, T28, T27);
                T2j            = SIMD_FNMADD(KP414213562, T27, T28);
                T1Z            = T1L + T1N;
                T1O            = T1L - T1N;
                TN             = SIMD_FMADD(KP707106781, TM, TH);
                T1r            = SIMD_FNMADD(KP707106781, TM, TH);
                TS             = SIMD_FMADD(KP707106781, TR, TQ);
                T1s            = SIMD_FNMADD(KP707106781, TR, TQ);
                T2g            = SIMD_FNMADD(KP707106781, T2f, T2e);
                T2i            = SIMD_FMADD(KP707106781, T2f, T2e);
                TE             = SIMD_FMADD(KP923879532, TD, Tx);
                T1m            = SIMD_FNMADD(KP923879532, TD, Tx);
                T2l            = T2j + T2k;
                T2n            = T2k - T2j;
                T2d            = T29 + T2c;
                T2h            = T2c - T29;
                T1V            = T1O + T1U;
                T1X            = T1U - T1O;
                Ci[WS(cs, 8)]  = T20 - T1Z;
                T21            = T1Z + T20;
                T1k            = SIMD_FMADD(KP198912367, TN, TS);
                TT             = SIMD_FNMADD(KP198912367, TS, TN);
                T1p            = T1d - T1e;
                T1f            = T1d + T1e;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T2n, T2m);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T2n, T2m);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2l, T2i);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T2l, T2i);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T2h, T2g);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T2h, T2g);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2d, T26);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2d, T26);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1X, T1W);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T1X, T1W);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1V, T1I);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1V, T1I);
                Cr[0]          = T1Y + T21;
                Cr[WS(cs, 16)] = T1Y - T21;
                T19            = TT + T18;
                T1h            = T18 - TT;
                T1l            = T1j - T1k;
                T1n            = T1k + T1j;
                T1g            = SIMD_FNMADD(KP923879532, T1f, T1c);
                T1i            = SIMD_FMADD(KP923879532, T1f, T1c);
                T1D            = SIMD_FNMADD(KP668178637, T1r, T1s);
                T1t            = SIMD_FMADD(KP668178637, T1s, T1r);
                T1w            = SIMD_FNMADD(KP668178637, T1v, T1u);
                T1E            = SIMD_FMADD(KP668178637, T1u, T1v);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T19, TE);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T19, TE);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1n, T1m);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1n, T1m);
                Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1l, T1i);
                Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1l, T1i);
                Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1h, T1g);
                Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1h, T1g);
                T1G            = SIMD_FNMADD(KP923879532, T1p, T1o);
                T1q            = SIMD_FMADD(KP923879532, T1p, T1o);
                T1H            = T1D + T1E;
                T1F            = T1D - T1E;
                T1B            = T1t + T1w;
                T1x            = T1t - T1w;
                T1A            = SIMD_FNMADD(KP923879532, T1z, T1y);
                T1C            = SIMD_FMADD(KP923879532, T1z, T1y);
            }
        }
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1H, T1G);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1H, T1G);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1x, T1q);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1x, T1q);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1B, T1A);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1B, T1A));
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1F, T1C);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1F, T1C);
    }
}

template <>
struct r2cf_traits<32, 30>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 119;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 30 -name r2cf
 * -standalone */

/*
 * This function contains 152 FP additions, 68 FP multiplications,
 * (or, 84 additions, 0 multiplications, 68 fused multiply/add),
 * 119 stack variables, 7 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 30>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1B, T1A, T1I, T1s, T1J, T1H, T1D, T1z, T1C, T1E;
        {
            SIMD_FLOAT Tt, T1c, TC, T1g, Tr, T27, T25, T7, TW, Tw, T1d, Te, T2h,
                TI, T17;
            SIMD_FLOAT T1U, TZ, T1f, TA, T26, Tm, T1V, T12, T1L, TH, T1M, TS,
                T2d, T1T, TJ;
            SIMD_FLOAT TL, TM, T1K, T2e, T2a, T1N, T1Z, T1O, TK, T1P, TN, T1X,
                T23, T1w, T14;
            SIMD_FLOAT T1x, T19, T21, Tf, T1W, T13, T18, Ts, T2i, T28, T2b, T1Q,
                TO, TT, T2n;
            SIMD_FLOAT T2f;
            {
                SIMD_FLOAT Tn, To, Tp, T1, T2, T4, T5, T8, T9, Tb, Tc, Tj, Ta,
                    Tu, Td;
                SIMD_FLOAT Tv, Ti, Ty, Tk, Tg, Th, T3, T6, Tq, TB, T15, T16, TX,
                    TY, Tl;
                SIMD_FLOAT Tz, T10, T11, TF, TG, TQ, TR, T1S;
                Tn  = R0[WS(rs, 14)];
                To  = R0[WS(rs, 6)];
                Tp  = R0[WS(rs, 22)];
                T1  = R0[0];
                T2  = R0[WS(rs, 16)];
                T4  = R0[WS(rs, 8)];
                T5  = R0[WS(rs, 24)];
                T8  = R0[WS(rs, 4)];
                T9  = R0[WS(rs, 20)];
                Tb  = R0[WS(rs, 28)];
                Tc  = R0[WS(rs, 12)];
                Tg  = R0[WS(rs, 2)];
                Th  = R0[WS(rs, 18)];
                Tj  = R0[WS(rs, 10)];
                Tq  = To + Tp;
                TB  = To - Tp;
                T3  = T1 + T2;
                Tt  = T1 - T2;
                T6  = T4 + T5;
                T1c = T4 - T5;
                Ta  = T8 + T9;
                Tu  = T8 - T9;
                Td  = Tb + Tc;
                Tv  = Tb - Tc;
                Ti  = Tg + Th;
                Ty  = Tg - Th;
                TC  = SIMD_FMSUB(KP414213562, TB, Tn);
                T1g = SIMD_FMADD(KP414213562, Tn, TB);
                Tr  = Tn + Tq;
                T27 = Tn - Tq;
                Tk  = R0[WS(rs, 26)];
                T25 = T3 - T6;
                T7  = T3 + T6;
                TW  = R0[WS(rs, 15)];
                Tw  = Tu + Tv;
                T1d = Tv - Tu;
                Te  = Ta + Td;
                T2h = Td - Ta;
                T15 = R0[WS(rs, 23)];
                T16 = R0[WS(rs, 7)];
                TX  = R0[WS(rs, 3)];
                TY  = R0[WS(rs, 19)];
                Tl  = Tj + Tk;
                Tz  = Tj - Tk;
                T10 = R0[WS(rs, 27)];
                T11 = R0[WS(rs, 11)];
                TF  = R0[WS(rs, 1)];
                TG  = R0[WS(rs, 17)];
                TQ  = R0[WS(rs, 9)];
                TR  = R0[WS(rs, 25)];
                TI  = R0[WS(rs, 5)];
                T1S = T16 + T15;
                T17 = T15 - T16;
                T1U = TX + TY;
                TZ  = TX - TY;
                T1f = SIMD_FMADD(KP414213562, Ty, Tz);
                TA  = SIMD_FNMADD(KP414213562, Tz, Ty);
                T26 = Ti - Tl;
                Tm  = Ti + Tl;
                T1V = T10 + T11;
                T12 = T10 - T11;
                T1L = TF + TG;
                TH  = TF - TG;
                T1M = TQ + TR;
                TS  = TQ - TR;
                T2d = TW - T1S;
                T1T = TW + T1S;
                TJ  = R0[WS(rs, 21)];
                TL  = R0[WS(rs, 29)];
                TM  = R0[WS(rs, 13)];
            }
            T1K           = T7 - Te;
            Tf            = T7 + Te;
            T2e           = T1V - T1U;
            T1W           = T1U + T1V;
            T13           = TZ + T12;
            T18           = T12 - TZ;
            T2a           = T1L - T1M;
            T1N           = T1L + T1M;
            Ts            = Tm + Tr;
            T1Z           = Tr - Tm;
            T1O           = TI + TJ;
            TK            = TI - TJ;
            T1P           = TL + TM;
            TN            = TL - TM;
            T1X           = T1T - T1W;
            T23           = T1T + T1W;
            T1w           = SIMD_FMADD(KP707106781, T13, TW);
            T14           = SIMD_FMSUB(KP707106781, T13, TW);
            T1x           = SIMD_FNMADD(KP707106781, T18, T17);
            T19           = SIMD_FMADD(KP707106781, T18, T17);
            Cr[WS(cs, 8)] = Tf - Ts;
            T21           = Tf + Ts;
            T2i           = T27 - T26;
            T28           = T26 + T27;
            T2b           = T1P - T1O;
            T1Q           = T1O + T1P;
            TO            = TK + TN;
            TT            = TK - TN;
            T2n           = SIMD_FMADD(KP414213562, T2d, T2e);
            T2f           = SIMD_FNMADD(KP414213562, T2e, T2d);
            {
                SIMD_FLOAT T1q, T1t, T1u, TE, T1o, T1r, T1b, T1j, T1n, T1p, T1k,
                    T1i, Tx, TD, T1a;
                SIMD_FLOAT T1l, T29, T2p, T2j, T2l, T2o, T2q, T2g, T2k, T1Y,
                    T20, T24, T1m, TV, T2c;
                SIMD_FLOAT T2m, T22, T1R, TP, TU, T1e, T1h, T1v, T1F, T1G, T1y;
                T1q            = SIMD_FNMADD(KP707106781, Tw, Tt);
                Tx             = SIMD_FMADD(KP707106781, Tw, Tt);
                TD             = TA + TC;
                T1B            = TC - TA;
                T1a            = SIMD_FNMADD(KP198912367, T19, T14);
                T1l            = SIMD_FMADD(KP198912367, T14, T19);
                T29            = SIMD_FMADD(KP707106781, T28, T25);
                T2p            = SIMD_FNMADD(KP707106781, T28, T25);
                T2c            = SIMD_FMADD(KP414213562, T2b, T2a);
                T2m            = SIMD_FNMADD(KP414213562, T2a, T2b);
                T22            = T1N + T1Q;
                T1R            = T1N - T1Q;
                TP             = SIMD_FMADD(KP707106781, TO, TH);
                T1t            = SIMD_FNMADD(KP707106781, TO, TH);
                TU             = SIMD_FMADD(KP707106781, TT, TS);
                T1u            = SIMD_FNMADD(KP707106781, TT, TS);
                T2j            = SIMD_FNMADD(KP707106781, T2i, T2h);
                T2l            = SIMD_FMADD(KP707106781, T2i, T2h);
                TE             = SIMD_FMADD(KP923879532, TD, Tx);
                T1o            = SIMD_FNMADD(KP923879532, TD, Tx);
                T2o            = T2m + T2n;
                T2q            = T2n - T2m;
                T2g            = T2c + T2f;
                T2k            = T2f - T2c;
                T1Y            = T1R + T1X;
                T20            = T1X - T1R;
                Ci[WS(cs, 8)]  = T23 - T22;
                T24            = T22 + T23;
                T1m            = SIMD_FMADD(KP198912367, TP, TU);
                TV             = SIMD_FNMADD(KP198912367, TU, TP);
                T1A            = SIMD_FMADD(KP707106781, T1d, T1c);
                T1e            = SIMD_FNMADD(KP707106781, T1d, T1c);
                T1h            = T1f + T1g;
                T1r            = T1f - T1g;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T2q, T2p);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T2q, T2p);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2o, T2l);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T2o, T2l);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T2k, T2j);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T2k, T2j);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2g, T29);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2g, T29);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T20, T1Z);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T20, T1Z);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T1Y, T1K);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T1Y, T1K);
                Cr[0]          = T21 + T24;
                Cr[WS(cs, 16)] = T21 - T24;
                T1b            = TV + T1a;
                T1j            = T1a - TV;
                T1n            = T1l - T1m;
                T1p            = T1m + T1l;
                T1k            = SIMD_FMADD(KP923879532, T1h, T1e);
                T1i            = SIMD_FNMADD(KP923879532, T1h, T1e);
                T1v            = SIMD_FMADD(KP668178637, T1u, T1t);
                T1F            = SIMD_FNMADD(KP668178637, T1t, T1u);
                T1G            = SIMD_FMADD(KP668178637, T1w, T1x);
                T1y            = SIMD_FNMADD(KP668178637, T1x, T1w);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1b, TE);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1b, TE);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1p, T1o);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1p, T1o);
                Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1j, T1i);
                Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1j, T1i);
                Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1n, T1k);
                Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1n, T1k);
                T1I            = SIMD_FNMADD(KP923879532, T1r, T1q);
                T1s            = SIMD_FMADD(KP923879532, T1r, T1q);
                T1J            = T1F + T1G;
                T1H            = T1F - T1G;
                T1D            = T1v + T1y;
                T1z            = T1v - T1y;
            }
        }
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1J, T1I);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1J, T1I);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1z, T1s);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1z, T1s);
        T1C            = SIMD_FNMADD(KP923879532, T1B, T1A);
        T1E            = SIMD_FMADD(KP923879532, T1B, T1A);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1H, T1E);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1H, T1E);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1D, T1C);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1D, T1C));
    }
}

template <>
struct r2cf_traits<32, 31>
{
    static constexpr long_t flops           = 222;
    static constexpr long_t operations      = 154;
    static constexpr long_t memory_accesses = 63;
    static constexpr long_t stack_vars      = 127;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 31 -name r2cf
 * -standalone */

/*
 * This function contains 154 FP additions, 68 FP multiplications,
 * (or, 86 additions, 0 multiplications, 68 fused multiply/add),
 * 127 stack variables, 7 constants, and 63 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 31>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1E, T1D, T1q, T1m, T1n, T1l, T1L, T1v, T1M, T1K, T1G, T1C,
            T1H, T1F;
        {
            SIMD_FLOAT Tv, T1f, T7, T28, TZ, T1g, Ty, T2k, Te, T1j, TF, T2a, Tt,
                T1i, TC;
            SIMD_FLOAT T29, Tm, T1a, T1O, TK, TV, T1P, TL, TM, T2g, T1W, TO, TP,
                T2h, T1Z;
            SIMD_FLOAT T16, T1b, T1, T2, T4, T5, T8, T9, Tb, Tc, Tn, To, Tq, Tr,
                Tf;
            SIMD_FLOAT T1N, T1Q, T2d, TN, T1R, T22, Tu, TQ, T1S, T20, T26, T1z,
                T17, T1A, T1c;
            SIMD_FLOAT T2b, T2l, T24, T1T, T2e, TW, TR, T2i, T2q;
            T1 = R0[0];
            T2 = R0[WS(rs, 16)];
            T4 = R0[WS(rs, 8)];
            T5 = R0[WS(rs, 24)];
            T8 = R0[WS(rs, 4)];
            T9 = R0[WS(rs, 20)];
            Tb = R0[WS(rs, 28)];
            Tc = R0[WS(rs, 12)];
            Tn = R0[WS(rs, 30)];
            To = R0[WS(rs, 14)];
            Tq = R0[WS(rs, 6)];
            Tr = R0[WS(rs, 22)];
            {
                SIMD_FLOAT Tg, Tw, Ta, Tx, Td, TD, Tp, TE, Ts, Th, Tj, Tk, T3,
                    T6, TA;
                SIMD_FLOAT Ti, TB, Tl, T18, T19, T10, T11, T13, T14, T1V, T1X,
                    T12, T1Y, T15, TI;
                SIMD_FLOAT TJ, TT, TU;
                Tg  = R0[WS(rs, 2)];
                Tv  = T1 - T2;
                T3  = T1 + T2;
                T1f = T4 - T5;
                T6  = T4 + T5;
                Tw  = T8 - T9;
                Ta  = T8 + T9;
                Tx  = Tb - Tc;
                Td  = Tb + Tc;
                TD  = Tn - To;
                Tp  = Tn + To;
                TE  = Tq - Tr;
                Ts  = Tq + Tr;
                Th  = R0[WS(rs, 18)];
                Tj  = R0[WS(rs, 10)];
                Tk  = R0[WS(rs, 26)];
                T7  = T3 + T6;
                T28 = T3 - T6;
                TZ  = R0[WS(rs, 15)];
                T1g = Tx - Tw;
                Ty  = Tw + Tx;
                T2k = Td - Ta;
                Te  = Ta + Td;
                T1j = SIMD_FNMADD(KP414213562, TD, TE);
                TF  = SIMD_FMADD(KP414213562, TE, TD);
                T2a = Tp - Ts;
                Tt  = Tp + Ts;
                TA  = Tg - Th;
                Ti  = Tg + Th;
                TB  = Tj - Tk;
                Tl  = Tj + Tk;
                T18 = R0[WS(rs, 23)];
                T19 = R0[WS(rs, 7)];
                T10 = R0[WS(rs, 3)];
                T11 = R0[WS(rs, 19)];
                T13 = R0[WS(rs, 27)];
                T14 = R0[WS(rs, 11)];
                TI  = R0[WS(rs, 1)];
                TJ  = R0[WS(rs, 17)];
                TT  = R0[WS(rs, 9)];
                TU  = R0[WS(rs, 25)];
                T1i = SIMD_FMADD(KP414213562, TA, TB);
                TC  = SIMD_FNMADD(KP414213562, TB, TA);
                T29 = Ti - Tl;
                Tm  = Ti + Tl;
                T1V = T19 + T18;
                T1a = T18 - T19;
                T1X = T10 + T11;
                T12 = T10 - T11;
                T1Y = T13 + T14;
                T15 = T13 - T14;
                T1O = TI + TJ;
                TK  = TI - TJ;
                TV  = TT - TU;
                T1P = TT + TU;
                TL  = R0[WS(rs, 5)];
                TM  = R0[WS(rs, 21)];
                T2g = TZ - T1V;
                T1W = TZ + T1V;
                TO  = R0[WS(rs, 29)];
                TP  = R0[WS(rs, 13)];
                T2h = T1Y - T1X;
                T1Z = T1X + T1Y;
                T16 = T12 + T15;
                T1b = T15 - T12;
            }
            Tf            = T7 + Te;
            T1N           = T7 - Te;
            T1Q           = T1O + T1P;
            T2d           = T1O - T1P;
            TN            = TL - TM;
            T1R           = TL + TM;
            T22           = Tt - Tm;
            Tu            = Tm + Tt;
            TQ            = TO - TP;
            T1S           = TO + TP;
            T20           = T1W - T1Z;
            T26           = T1W + T1Z;
            T1z           = SIMD_FMADD(KP707106781, T16, TZ);
            T17           = SIMD_FMSUB(KP707106781, T16, TZ);
            T1A           = SIMD_FNMADD(KP707106781, T1b, T1a);
            T1c           = SIMD_FMADD(KP707106781, T1b, T1a);
            T2b           = T29 + T2a;
            T2l           = T2a - T29;
            Cr[WS(cs, 8)] = Tf - Tu;
            T24           = Tf + Tu;
            T1T           = T1R + T1S;
            T2e           = T1S - T1R;
            TW            = TN - TQ;
            TR            = TN + TQ;
            T2i           = SIMD_FNMADD(KP414213562, T2h, T2g);
            T2q           = SIMD_FMADD(KP414213562, T2g, T2h);
            {
                SIMD_FLOAT T1t, T1w, T1x, TH, T1r, T1h, T1s, T1e, T1u, T1k, T2s,
                    T2c, T1o, T1d, T2m;
                SIMD_FLOAT T2o, T2r, T2t, T2j, T2n, T21, T23, T27, TY, T1p, Tz,
                    TG, T2f, T2p, T25;
                SIMD_FLOAT T1U, TS, TX, T1I, T1y, T1B, T1J;
                Tz             = SIMD_FMADD(KP707106781, Ty, Tv);
                T1t            = SIMD_FNMADD(KP707106781, Ty, Tv);
                T1E            = TF - TC;
                TG             = TC + TF;
                T2s            = SIMD_FNMADD(KP707106781, T2b, T28);
                T2c            = SIMD_FMADD(KP707106781, T2b, T28);
                T1o            = SIMD_FMADD(KP198912367, T17, T1c);
                T1d            = SIMD_FNMADD(KP198912367, T1c, T17);
                T2f            = SIMD_FMADD(KP414213562, T2e, T2d);
                T2p            = SIMD_FNMADD(KP414213562, T2d, T2e);
                T25            = T1Q + T1T;
                T1U            = T1Q - T1T;
                TS             = SIMD_FMADD(KP707106781, TR, TK);
                T1w            = SIMD_FNMADD(KP707106781, TR, TK);
                TX             = SIMD_FMADD(KP707106781, TW, TV);
                T1x            = SIMD_FNMADD(KP707106781, TW, TV);
                T2m            = SIMD_FNMADD(KP707106781, T2l, T2k);
                T2o            = SIMD_FMADD(KP707106781, T2l, T2k);
                TH             = SIMD_FMADD(KP923879532, TG, Tz);
                T1r            = SIMD_FNMADD(KP923879532, TG, Tz);
                T2r            = T2p + T2q;
                T2t            = T2q - T2p;
                T2j            = T2f + T2i;
                T2n            = T2i - T2f;
                T21            = T1U + T20;
                T23            = T20 - T1U;
                Ci[WS(cs, 8)]  = T26 - T25;
                T27            = T25 + T26;
                TY             = SIMD_FNMADD(KP198912367, TX, TS);
                T1p            = SIMD_FMADD(KP198912367, TS, TX);
                T1h            = SIMD_FNMADD(KP707106781, T1g, T1f);
                T1D            = SIMD_FMADD(KP707106781, T1g, T1f);
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T2t, T2s);
                Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T2t, T2s);
                Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2r, T2o);
                Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T2r, T2o);
                Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T2n, T2m);
                Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T2n, T2m);
                Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2j, T2c);
                Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2j, T2c);
                Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T23, T22);
                Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T23, T22);
                Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T21, T1N);
                Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T21, T1N);
                Cr[0]          = T24 + T27;
                Cr[WS(cs, 16)] = T24 - T27;
                T1q            = T1o - T1p;
                T1s            = T1p + T1o;
                T1e            = TY + T1d;
                T1m            = T1d - TY;
                T1u            = T1i - T1j;
                T1k            = T1i + T1j;
                T1I            = SIMD_FNMADD(KP668178637, T1w, T1x);
                T1y            = SIMD_FMADD(KP668178637, T1x, T1w);
                T1B            = SIMD_FNMADD(KP668178637, T1A, T1z);
                T1J            = SIMD_FMADD(KP668178637, T1z, T1A);
                Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1s, T1r);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1s, T1r);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1e, TH);
                Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1e, TH);
                T1n            = SIMD_FMADD(KP923879532, T1k, T1h);
                T1l            = SIMD_FNMADD(KP923879532, T1k, T1h);
                T1L            = SIMD_FNMADD(KP923879532, T1u, T1t);
                T1v            = SIMD_FMADD(KP923879532, T1u, T1t);
                T1M            = T1I + T1J;
                T1K            = T1I - T1J;
                T1G            = T1y + T1B;
                T1C            = T1y - T1B;
            }
        }
        T1H            = SIMD_FMADD(KP923879532, T1E, T1D);
        T1F            = SIMD_FNMADD(KP923879532, T1E, T1D);
        Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1q, T1n);
        Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1q, T1n);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1m, T1l);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1m, T1l);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1M, T1L);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1M, T1L);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1C, T1v);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1C, T1v);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1K, T1H);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1K, T1H);
        Ci[WS(cs, 11)] = SIMD_FNMADD(KP831469612, T1G, T1F);
        Ci[WS(cs, 5)]  = -(SIMD_FMADD(KP831469612, T1G, T1F));
    }
}

template <>
struct r2cf_traits<32, 32>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 32 -first-k 32 -name r2cf
 * -standalone */

/*
 * This function contains 156 FP additions, 68 FP multiplications,
 * (or, 88 additions, 0 multiplications, 68 fused multiply/add),
 * 133 stack variables, 7 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 32 && ProvidedElements == 32>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP831469612, +0.831469612302545237078788377617905756738560812);
    DK(KP980785280, +0.980785280403230449126182236134239036973933731);
    DK(KP668178637, +0.668178637919298919997757686523080761552472251);
    DK(KP923879532, +0.923879532511286756128183189396788286822416626);
    DK(KP198912367, +0.198912367379658006911597622644676228597850501);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP414213562, +0.414213562373095048801688724209698078569671875);
    {
        SIMD_FLOAT T1G, T1F, T1s, T1o, T1n, T1p, T1x, T1N, T1M, T1O, T1E, T1I,
            T1H, T1J;
        {
            SIMD_FLOAT Tv, T1h, T7, T2b, T1i, Ty, T2n, Te, T1l, TF, T2d, Tt, TT,
                T1k, TC;
            SIMD_FLOAT T2c, Tm, T11, T1c, T20, T14, T21, T17, T1Q, TK, TU, TL,
                TM, TO, T2j;
            SIMD_FLOAT T1Z, TP, T1, T2, T4, T5, T8, T9, Tb, Tc, Tn, To, Tq, Tr;
            T1 = R0[0];
            T2 = R0[WS(rs, 16)];
            T4 = R0[WS(rs, 8)];
            T5 = R0[WS(rs, 24)];
            T8 = R0[WS(rs, 4)];
            T9 = R0[WS(rs, 20)];
            Tb = R0[WS(rs, 28)];
            Tc = R0[WS(rs, 12)];
            Tn = R0[WS(rs, 30)];
            To = R0[WS(rs, 14)];
            Tq = R0[WS(rs, 6)];
            Tr = R0[WS(rs, 22)];
            {
                SIMD_FLOAT Tg, Tw, Ta, Tx, Td, TD, Tp, TE, Ts, Th, Tj, Tk, T3,
                    T6, TZ;
                SIMD_FLOAT TA, Ti, TB, Tl, T10, T1a, T1b, T12, T13, T15, T16,
                    T1X, T1Y, TI, TJ;
                Tg  = R0[WS(rs, 2)];
                Tv  = T1 - T2;
                T3  = T1 + T2;
                T1h = T4 - T5;
                T6  = T4 + T5;
                Tw  = T8 - T9;
                Ta  = T8 + T9;
                Tx  = Tb - Tc;
                Td  = Tb + Tc;
                TD  = Tn - To;
                Tp  = Tn + To;
                TE  = Tq - Tr;
                Ts  = Tq + Tr;
                Th  = R0[WS(rs, 18)];
                Tj  = R0[WS(rs, 10)];
                Tk  = R0[WS(rs, 26)];
                T7  = T3 + T6;
                T2b = T3 - T6;
                TZ  = R0[WS(rs, 31)];
                T1i = Tx - Tw;
                Ty  = Tw + Tx;
                T2n = Td - Ta;
                Te  = Ta + Td;
                T1l = SIMD_FNMADD(KP414213562, TD, TE);
                TF  = SIMD_FMADD(KP414213562, TE, TD);
                T2d = Tp - Ts;
                Tt  = Tp + Ts;
                TA  = Tg - Th;
                Ti  = Tg + Th;
                TB  = Tj - Tk;
                Tl  = Tj + Tk;
                T10 = R0[WS(rs, 15)];
                T1a = R0[WS(rs, 23)];
                T1b = R0[WS(rs, 7)];
                T12 = R0[WS(rs, 3)];
                T13 = R0[WS(rs, 19)];
                T15 = R0[WS(rs, 27)];
                T16 = R0[WS(rs, 11)];
                TI  = R0[WS(rs, 1)];
                TJ  = R0[WS(rs, 17)];
                TT  = R0[WS(rs, 9)];
                T1k = SIMD_FMADD(KP414213562, TA, TB);
                TC  = SIMD_FNMADD(KP414213562, TB, TA);
                T2c = Ti - Tl;
                Tm  = Ti + Tl;
                T1X = TZ + T10;
                T11 = TZ - T10;
                T1Y = T1b + T1a;
                T1c = T1a - T1b;
                T20 = T12 + T13;
                T14 = T12 - T13;
                T21 = T15 + T16;
                T17 = T15 - T16;
                T1Q = TI + TJ;
                TK  = TI - TJ;
                TU  = R0[WS(rs, 25)];
                TL  = R0[WS(rs, 5)];
                TM  = R0[WS(rs, 21)];
                TO  = R0[WS(rs, 29)];
                T2j = T1X - T1Y;
                T1Z = T1X + T1Y;
                TP  = R0[WS(rs, 13)];
            }
            {
                SIMD_FLOAT T1P, T2k, TV, T25, T23, T29, T1B, T19, T1C, T1e, T2g,
                    T1S, T27, T2h, T1V;
                SIMD_FLOAT TR, TW, Tf, T22, T18, T1d, T1R, T1T, TN, Tu, T1U, TQ,
                    T2o, T2e, T2t;
                SIMD_FLOAT T2l;
                T1P           = T7 - Te;
                Tf            = T7 + Te;
                T2k           = T21 - T20;
                T22           = T20 + T21;
                T18           = T14 + T17;
                T1d           = T17 - T14;
                T1R           = TT + TU;
                TV            = TT - TU;
                T1T           = TL + TM;
                TN            = TL - TM;
                Tu            = Tm + Tt;
                T25           = Tt - Tm;
                T1U           = TO + TP;
                TQ            = TO - TP;
                T23           = T1Z - T22;
                T29           = T1Z + T22;
                T1B           = SIMD_FNMADD(KP707106781, T18, T11);
                T19           = SIMD_FMADD(KP707106781, T18, T11);
                T1C           = SIMD_FNMADD(KP707106781, T1d, T1c);
                T1e           = SIMD_FMADD(KP707106781, T1d, T1c);
                T2g           = T1Q - T1R;
                T1S           = T1Q + T1R;
                Cr[WS(cs, 8)] = Tf - Tu;
                T27           = Tf + Tu;
                T2h           = T1U - T1T;
                T1V           = T1T + T1U;
                TR            = TN + TQ;
                TW            = TN - TQ;
                T2o           = T2d - T2c;
                T2e           = T2c + T2d;
                T2t           = SIMD_FMADD(KP414213562, T2j, T2k);
                T2l           = SIMD_FNMADD(KP414213562, T2k, T2j);
                {
                    SIMD_FLOAT T1v, T1y, T1z, T1t, TH, T1j, T1u, T1g, T1m, T1w,
                        T1f, T1q, T2v, T2f, T2r;
                    SIMD_FLOAT T2p, T2w, T2u, T2q, T2m, T26, T24, T2a, T1r, TY,
                        Tz, TG, T2s, T2i, T1W;
                    SIMD_FLOAT T28, TS, TX, T1A, T1K, T1L, T1D;
                    T1v            = SIMD_FNMADD(KP707106781, Ty, Tv);
                    Tz             = SIMD_FMADD(KP707106781, Ty, Tv);
                    TG             = TC + TF;
                    T1G            = TF - TC;
                    T1f            = SIMD_FNMADD(KP198912367, T1e, T19);
                    T1q            = SIMD_FMADD(KP198912367, T19, T1e);
                    T2s            = SIMD_FNMADD(KP414213562, T2g, T2h);
                    T2i            = SIMD_FMADD(KP414213562, T2h, T2g);
                    T1W            = T1S - T1V;
                    T28            = T1S + T1V;
                    T1y            = SIMD_FNMADD(KP707106781, TR, TK);
                    TS             = SIMD_FMADD(KP707106781, TR, TK);
                    T1z            = SIMD_FNMADD(KP707106781, TW, TV);
                    TX             = SIMD_FMADD(KP707106781, TW, TV);
                    T2v            = SIMD_FNMADD(KP707106781, T2e, T2b);
                    T2f            = SIMD_FMADD(KP707106781, T2e, T2b);
                    T2r            = SIMD_FMADD(KP707106781, T2o, T2n);
                    T2p            = SIMD_FNMADD(KP707106781, T2o, T2n);
                    T1t            = SIMD_FNMADD(KP923879532, TG, Tz);
                    TH             = SIMD_FMADD(KP923879532, TG, Tz);
                    T2w            = T2t - T2s;
                    T2u            = T2s + T2t;
                    T2q            = T2l - T2i;
                    T2m            = T2i + T2l;
                    T26            = T23 - T1W;
                    T24            = T1W + T23;
                    Ci[WS(cs, 8)]  = T29 - T28;
                    T2a            = T28 + T29;
                    T1r            = SIMD_FMADD(KP198912367, TS, TX);
                    TY             = SIMD_FNMADD(KP198912367, TX, TS);
                    T1F            = SIMD_FMADD(KP707106781, T1i, T1h);
                    T1j            = SIMD_FNMADD(KP707106781, T1i, T1h);
                    Cr[WS(cs, 10)] = SIMD_FNMADD(KP923879532, T2w, T2v);
                    Cr[WS(cs, 6)]  = SIMD_FMADD(KP923879532, T2w, T2v);
                    Ci[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2u, T2r);
                    Ci[WS(cs, 14)] = SIMD_FMSUB(KP923879532, T2u, T2r);
                    Ci[WS(cs, 10)] = SIMD_FMADD(KP923879532, T2q, T2p);
                    Ci[WS(cs, 6)]  = SIMD_FMSUB(KP923879532, T2q, T2p);
                    Cr[WS(cs, 2)]  = SIMD_FMADD(KP923879532, T2m, T2f);
                    Cr[WS(cs, 14)] = SIMD_FNMADD(KP923879532, T2m, T2f);
                    Ci[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T26, T25);
                    Ci[WS(cs, 12)] = SIMD_FMSUB(KP707106781, T26, T25);
                    Cr[WS(cs, 4)]  = SIMD_FMADD(KP707106781, T24, T1P);
                    Cr[WS(cs, 12)] = SIMD_FNMADD(KP707106781, T24, T1P);
                    Cr[0]          = T27 + T2a;
                    Cr[WS(cs, 16)] = T27 - T2a;
                    T1u            = T1r + T1q;
                    T1s            = T1q - T1r;
                    T1o            = T1f - TY;
                    T1g            = TY + T1f;
                    T1m            = T1k + T1l;
                    T1w            = T1k - T1l;
                    T1A            = SIMD_FMADD(KP668178637, T1z, T1y);
                    T1K            = SIMD_FNMADD(KP668178637, T1y, T1z);
                    T1L            = SIMD_FNMADD(KP668178637, T1B, T1C);
                    T1D            = SIMD_FMADD(KP668178637, T1C, T1B);
                    Cr[WS(cs, 9)]  = SIMD_FNMADD(KP980785280, T1u, T1t);
                    Cr[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1u, T1t);
                    Cr[WS(cs, 1)]  = SIMD_FMADD(KP980785280, T1g, TH);
                    Cr[WS(cs, 15)] = SIMD_FNMADD(KP980785280, T1g, TH);
                    T1n            = SIMD_FNMADD(KP923879532, T1m, T1j);
                    T1p            = SIMD_FMADD(KP923879532, T1m, T1j);
                    T1x            = SIMD_FMADD(KP923879532, T1w, T1v);
                    T1N            = SIMD_FNMADD(KP923879532, T1w, T1v);
                    T1M            = T1K - T1L;
                    T1O            = T1K + T1L;
                    T1E            = T1A + T1D;
                    T1I            = T1D - T1A;
                }
            }
        }
        T1H            = SIMD_FNMADD(KP923879532, T1G, T1F);
        T1J            = SIMD_FMADD(KP923879532, T1G, T1F);
        Ci[WS(cs, 1)]  = SIMD_FMSUB(KP980785280, T1s, T1p);
        Ci[WS(cs, 15)] = SIMD_FMADD(KP980785280, T1s, T1p);
        Ci[WS(cs, 9)]  = SIMD_FMSUB(KP980785280, T1o, T1n);
        Ci[WS(cs, 7)]  = SIMD_FMADD(KP980785280, T1o, T1n);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1O, T1N);
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP831469612, T1O, T1N);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1E, T1x);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP831469612, T1E, T1x);
        Ci[WS(cs, 3)]  = SIMD_FMADD(KP831469612, T1M, T1J);
        Ci[WS(cs, 13)] = SIMD_FMSUB(KP831469612, T1M, T1J);
        Ci[WS(cs, 11)] = SIMD_FMADD(KP831469612, T1I, T1H);
        Ci[WS(cs, 5)]  = SIMD_FMSUB(KP831469612, T1I, T1H);
    }
}
