//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cf_traits<15, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 2;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 1 -name c2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 2 stack variables, 0 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 1>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    {
        SIMD_FLOAT T1, T2;
        T1             = ri[0];
        T2             = ii[0];
        ro[WS(os, 5)]  = T1;
        ro[WS(os, 6)]  = T1;
        ro[WS(os, 9)]  = T1;
        ro[WS(os, 10)] = T1;
        ro[WS(os, 4)]  = T1;
        ro[WS(os, 7)]  = T1;
        ro[WS(os, 8)]  = T1;
        ro[WS(os, 11)] = T1;
        ro[WS(os, 2)]  = T1;
        ro[WS(os, 1)]  = T1;
        ro[WS(os, 13)] = T1;
        ro[WS(os, 12)] = T1;
        ro[WS(os, 3)]  = T1;
        ro[WS(os, 14)] = T1;
        ro[0]          = T1;
        io[WS(os, 5)]  = T2;
        io[WS(os, 6)]  = T2;
        io[WS(os, 9)]  = T2;
        io[WS(os, 10)] = T2;
        io[WS(os, 4)]  = T2;
        io[WS(os, 7)]  = T2;
        io[WS(os, 8)]  = T2;
        io[WS(os, 11)] = T2;
        io[WS(os, 2)]  = T2;
        io[WS(os, 1)]  = T2;
        io[WS(os, 13)] = T2;
        io[WS(os, 12)] = T2;
        io[WS(os, 3)]  = T2;
        io[WS(os, 14)] = T2;
        io[0]          = T2;
    }
}

template <>
struct c2cf_traits<15, 2>
{
    static constexpr long_t flops           = 90;
    static constexpr long_t operations      = 46;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 30;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 2 -name c2cf
 * -standalone */

/*
 * This function contains 46 FP additions, 44 FP multiplications,
 * (or, 2 additions, 0 multiplications, 44 fused multiply/add),
 * 30 stack variables, 10 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 2>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP509036960, +0.509036960455127183450980863393907648510733164);
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP267616567, +0.267616567329817448956477382284565905486264556);
    DK(KP700629269, +0.700629269222036772338338967661033997221965870);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T1, T3, T2, T4, T8, Tk, Tf, T6, T7, Ta, T9, T5, Td, Tb, Tj;
        SIMD_FLOAT Th, Tc, Te, Tg, Ti;
        T1             = ri[0];
        T3             = ii[0];
        T2             = ri[WS(is, 1)];
        T4             = ii[WS(is, 1)];
        ro[0]          = T1 + T2;
        T8             = SIMD_FNMADD(KP809016994, T2, T1);
        Tk             = SIMD_FMADD(KP309016994, T2, T1);
        io[0]          = T3 + T4;
        Tf             = SIMD_FNMADD(KP577350269, T2, T4);
        T6             = SIMD_FNMADD(KP577350269, T4, T2);
        T7             = SIMD_FMADD(KP577350269, T4, T2);
        Ta             = SIMD_FMADD(KP577350269, T2, T4);
        T9             = SIMD_FNMADD(KP809016994, T4, T3);
        T5             = SIMD_FMADD(KP309016994, T4, T3);
        ro[WS(os, 6)]  = SIMD_FMADD(KP587785252, T4, T8);
        ro[WS(os, 9)]  = SIMD_FNMADD(KP587785252, T4, T8);
        ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T4, Tk);
        ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T4, Tk);
        Td             = SIMD_FMADD(KP700629269, Ta, T1);
        Tb             = SIMD_FNMADD(KP267616567, Ta, T1);
        ro[WS(os, 10)] = SIMD_FNMADD(KP866025403, Ta, T1);
        io[WS(os, 6)]  = SIMD_FNMADD(KP587785252, T2, T9);
        io[WS(os, 9)]  = SIMD_FMADD(KP587785252, T2, T9);
        Tj             = SIMD_FNMADD(KP267616567, T7, T3);
        Th             = SIMD_FMADD(KP700629269, T7, T3);
        io[WS(os, 5)]  = SIMD_FNMADD(KP866025403, T7, T3);
        Tc             = SIMD_FNMADD(KP700629269, T6, T3);
        Te             = SIMD_FMADD(KP267616567, T6, T3);
        io[WS(os, 10)] = SIMD_FMADD(KP866025403, T6, T3);
        Tg             = SIMD_FMADD(KP267616567, Tf, T1);
        Ti             = SIMD_FNMADD(KP700629269, Tf, T1);
        ro[WS(os, 5)]  = SIMD_FMADD(KP866025403, Tf, T1);
        io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2, T5);
        io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2, T5);
        ro[WS(os, 13)] = SIMD_FMADD(KP823639103, T6, Tb);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP823639103, T6, Tb);
        ro[WS(os, 4)]  = SIMD_FNMADD(KP509036960, T6, Td);
        ro[WS(os, 1)]  = SIMD_FMADD(KP509036960, T6, Td);
        io[WS(os, 2)]  = SIMD_FMADD(KP823639103, Tf, Tj);
        io[WS(os, 8)]  = SIMD_FNMADD(KP823639103, Tf, Tj);
        io[WS(os, 14)] = SIMD_FMADD(KP509036960, Tf, Th);
        io[WS(os, 11)] = SIMD_FNMADD(KP509036960, Tf, Th);
        io[WS(os, 13)] = SIMD_FMADD(KP823639103, Ta, Te);
        io[WS(os, 7)]  = SIMD_FNMADD(KP823639103, Ta, Te);
        io[WS(os, 1)]  = SIMD_FMADD(KP509036960, Ta, Tc);
        io[WS(os, 4)]  = SIMD_FNMADD(KP509036960, Ta, Tc);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP823639103, T7, Tg);
        ro[WS(os, 2)]  = SIMD_FMADD(KP823639103, T7, Tg);
        ro[WS(os, 14)] = SIMD_FMADD(KP509036960, T7, Ti);
        ro[WS(os, 11)] = SIMD_FNMADD(KP509036960, T7, Ti);
    }
}

template <>
struct c2cf_traits<15, 3>
{
    static constexpr long_t flops           = 146;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 65;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 3 -name c2cf
 * -standalone */

/*
 * This function contains 80 FP additions, 66 FP multiplications,
 * (or, 14 additions, 0 multiplications, 66 fused multiply/add),
 * 65 stack variables, 9 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 3>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP484122918, +0.484122918275927110647408174972799951354115213);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP216506350, +0.216506350946109661690930792688234045867850657);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T5, T2, T8, T3, T6, T9, TA, Tl, Tb, T4, Tf, TU, TS, TO;
        SIMD_FLOAT TQ, Th, TN, Tc, Tm, TB, T7, Te;
        T1    = ri[0];
        T5    = ii[0];
        T2    = ri[WS(is, 2)];
        T8    = ii[WS(is, 2)];
        T3    = ri[WS(is, 1)];
        T6    = ii[WS(is, 1)];
        T9    = SIMD_FMADD(KP577350269, T8, T2);
        TA    = SIMD_FMADD(KP577350269, T2, T8);
        Tl    = SIMD_FNMADD(KP577350269, T2, T8);
        Tb    = SIMD_FNMADD(KP577350269, T8, T2);
        T4    = T2 + T3;
        Tf    = T2 - T3;
        TU    = SIMD_FNMADD(KP618033988, T3, T2);
        TS    = SIMD_FMADD(KP618033988, T2, T3);
        TO    = T8 + T6;
        TQ    = T8 - T6;
        Th    = SIMD_FMSUB(KP618033988, T6, T8);
        TN    = SIMD_FMADD(KP618033988, T8, T6);
        Tc    = SIMD_FMADD(KP577350269, T6, T3);
        Tm    = SIMD_FMADD(KP577350269, T3, T6);
        TB    = SIMD_FNMADD(KP577350269, T3, T6);
        T7    = SIMD_FNMADD(KP577350269, T6, T3);
        ro[0] = T1 + T4;
        Te    = SIMD_FNMADD(KP250000000, T4, T1);
        {
            SIMD_FLOAT Ty, TJ, TL, Ts, Tn, Tp, TH, TC, TE, Ta, Tj, Tu, Tw, TP,
                Tg;
            SIMD_FLOAT TM, Tx, Tr, TG, Td, Tq, TF, Ti, TT, TR, Tz, TD, Tt, Tv,
                TI;
            SIMD_FLOAT TK, Tk, To;
            Td             = Tb - Tc;
            Ty             = Tb + Tc;
            TJ             = SIMD_FNMADD(KP618033988, Tb, Tc);
            TL             = SIMD_FMADD(KP618033988, Tc, Tb);
            Ts             = Tl + Tm;
            Tq             = Tl - Tm;
            Tn             = SIMD_FMADD(KP618033988, Tm, Tl);
            Tp             = SIMD_FNMADD(KP618033988, Tl, Tm);
            TF             = TB - TA;
            TH             = TA + TB;
            TC             = SIMD_FMADD(KP618033988, TB, TA);
            TE             = SIMD_FNMADD(KP618033988, TA, TB);
            Ta             = T7 - T9;
            Tj             = T9 + T7;
            Tu             = SIMD_FMADD(KP618033988, T7, T9);
            Tw             = SIMD_FNMADD(KP618033988, T9, T7);
            io[0]          = T5 + TO;
            TP             = SIMD_FNMADD(KP250000000, TO, T5);
            Tg             = SIMD_FMADD(KP559016994, Tf, Te);
            TM             = SIMD_FNMADD(KP559016994, Tf, Te);
            Tx             = SIMD_FNMADD(KP216506350, Td, T5);
            io[WS(os, 5)]  = SIMD_FMADD(KP866025403, Td, T5);
            Tr             = SIMD_FNMADD(KP216506350, Tq, T1);
            ro[WS(os, 10)] = SIMD_FMADD(KP866025403, Tq, T1);
            TG             = SIMD_FNMADD(KP216506350, TF, T1);
            ro[WS(os, 5)]  = SIMD_FMADD(KP866025403, TF, T1);
            Ti             = SIMD_FNMADD(KP216506350, Ta, T5);
            io[WS(os, 10)] = SIMD_FMADD(KP866025403, Ta, T5);
            TT             = SIMD_FMADD(KP559016994, TQ, TP);
            TR             = SIMD_FNMADD(KP559016994, TQ, TP);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, TN, TM);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, TN, TM);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, Th, Tg);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, Th, Tg);
            Tz             = SIMD_FMADD(KP484122918, Ty, Tx);
            TD             = SIMD_FNMADD(KP484122918, Ty, Tx);
            Tt             = SIMD_FMADD(KP484122918, Ts, Tr);
            Tv             = SIMD_FNMADD(KP484122918, Ts, Tr);
            TI             = SIMD_FMADD(KP484122918, TH, TG);
            TK             = SIMD_FNMADD(KP484122918, TH, TG);
            Tk             = SIMD_FNMADD(KP484122918, Tj, Ti);
            To             = SIMD_FMADD(KP484122918, Tj, Ti);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, TS, TR);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, TS, TR);
            io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, TU, TT);
            io[WS(os, 6)]  = SIMD_FMADD(KP951056516, TU, TT);
            io[WS(os, 8)]  = SIMD_FNMADD(KP823639103, TE, TD);
            io[WS(os, 2)]  = SIMD_FMADD(KP823639103, TE, TD);
            io[WS(os, 14)] = SIMD_FMADD(KP823639103, TC, Tz);
            io[WS(os, 11)] = SIMD_FNMADD(KP823639103, TC, Tz);
            ro[WS(os, 7)]  = SIMD_FNMADD(KP823639103, Tw, Tv);
            ro[WS(os, 13)] = SIMD_FMADD(KP823639103, Tw, Tv);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP823639103, Tu, Tt);
            ro[WS(os, 1)]  = SIMD_FMADD(KP823639103, Tu, Tt);
            ro[WS(os, 11)] = SIMD_FNMADD(KP823639103, TL, TK);
            ro[WS(os, 14)] = SIMD_FMADD(KP823639103, TL, TK);
            ro[WS(os, 8)]  = SIMD_FNMADD(KP823639103, TJ, TI);
            ro[WS(os, 2)]  = SIMD_FMADD(KP823639103, TJ, TI);
            io[WS(os, 7)]  = SIMD_FNMADD(KP823639103, Tp, To);
            io[WS(os, 13)] = SIMD_FMADD(KP823639103, Tp, To);
            io[WS(os, 1)]  = SIMD_FMADD(KP823639103, Tn, Tk);
            io[WS(os, 4)]  = SIMD_FNMADD(KP823639103, Tn, Tk);
        }
    }
}

template <>
struct c2cf_traits<15, 4>
{
    static constexpr long_t flops           = 170;
    static constexpr long_t operations      = 92;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 79;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 4 -name c2cf
 * -standalone */

/*
 * This function contains 92 FP additions, 78 FP multiplications,
 * (or, 14 additions, 0 multiplications, 78 fused multiply/add),
 * 79 stack variables, 9 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 4>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP535233134, +0.535233134659634897912954764569131810972529113);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T7, T5, Tc, T2, T8, T3, T9;
        T1 = ri[0];
        T7 = ii[0];
        T5 = ri[WS(is, 1)];
        Tc = ii[WS(is, 1)];
        T2 = ri[WS(is, 3)];
        T8 = ii[WS(is, 3)];
        T3 = ri[WS(is, 2)];
        T9 = ii[WS(is, 2)];
        {
            SIMD_FLOAT Td, TJ, Th, Tt, T4, T15, T10, Tm, Tf, Tr, TK, Ta, T16,
                T18, T6;
            SIMD_FLOAT Tk, Tn, TZ, TU, Tg, Ts, Tx, TL, TP, T11, T13, TC, Tb, Tj,
                Ti;
            SIMD_FLOAT TH;
            Td    = SIMD_FNMADD(KP577350269, Tc, T5);
            TJ    = SIMD_FNMADD(KP577350269, T5, Tc);
            Th    = SIMD_FMADD(KP577350269, Tc, T5);
            Tt    = SIMD_FMADD(KP577350269, T5, Tc);
            T4    = T2 + T3;
            T15   = T2 - T3;
            T10   = T8 + T9;
            Tm    = T8 - T9;
            Tf    = SIMD_FNMADD(KP577350269, T9, T3);
            Tr    = SIMD_FNMADD(KP577350269, T3, T9);
            TK    = SIMD_FMADD(KP577350269, T3, T9);
            Ta    = SIMD_FMADD(KP577350269, T9, T3);
            T16   = SIMD_FNMADD(KP618033988, T15, T5);
            T18   = SIMD_FMADD(KP618033988, T5, T15);
            T6    = T4 + T5;
            Tk    = T4 - T5;
            Tn    = SIMD_FMADD(KP618033988, Tc, Tm);
            TZ    = SIMD_FNMADD(KP618033988, Tm, Tc);
            TU    = SIMD_FNMADD(KP866025403, Tf, T8);
            Tg    = SIMD_FMADD(KP866025403, Tf, T8);
            Ts    = SIMD_FNMADD(KP866025403, Tr, T2);
            Tx    = SIMD_FMADD(KP866025403, Tr, T2);
            TL    = SIMD_FMADD(KP866025403, TK, T2);
            TP    = SIMD_FNMADD(KP866025403, TK, T2);
            T11   = T10 + Tc;
            T13   = T10 - Tc;
            TC    = SIMD_FMADD(KP866025403, Ta, T8);
            Tb    = SIMD_FNMADD(KP866025403, Ta, T8);
            Tj    = SIMD_FNMADD(KP250000000, T6, T1);
            ro[0] = T1 + T6;
            Ti    = SIMD_FNMADD(KP866025403, Th, Tg);
            TH    = SIMD_FMADD(KP866025403, Th, Tg);
            {
                SIMD_FLOAT TV, TX, Ty, TA, Tu, Tw, TQ, TS, TM, TO, T12, Te, Tp,
                    TD, TF;
                SIMD_FLOAT Tl, TY, TG, Tz, TR, T14, T17, To, TI, TN, TB, TE, TT,
                    TW, Tq;
                SIMD_FLOAT Tv;
                TV             = SIMD_FMADD(KP713644179, TU, Th);
                TX             = SIMD_FNMADD(KP535233134, Th, TU);
                Ty             = SIMD_FNMADD(KP866025403, Tt, Tx);
                TA             = SIMD_FMADD(KP866025403, Tt, Tx);
                Tu             = SIMD_FNMADD(KP535233134, Tt, Ts);
                Tw             = SIMD_FMADD(KP713644179, Ts, Tt);
                TQ             = SIMD_FMADD(KP866025403, TJ, TP);
                TS             = SIMD_FNMADD(KP866025403, TJ, TP);
                TM             = SIMD_FNMADD(KP713644179, TL, TJ);
                TO             = SIMD_FMADD(KP535233134, TJ, TL);
                T12            = SIMD_FNMADD(KP250000000, T11, T7);
                io[0]          = T7 + T11;
                Te             = SIMD_FMADD(KP866025403, Td, Tb);
                Tp             = SIMD_FNMADD(KP866025403, Td, Tb);
                TD             = SIMD_FMADD(KP535233134, Td, TC);
                TF             = SIMD_FNMADD(KP713644179, TC, Td);
                Tl             = SIMD_FMADD(KP559016994, Tk, Tj);
                TY             = SIMD_FNMADD(KP559016994, Tk, Tj);
                TG             = SIMD_FNMADD(KP250000000, Ti, T7);
                io[WS(os, 5)]  = T7 + Ti;
                Tz             = SIMD_FNMADD(KP250000000, Ty, T1);
                ro[WS(os, 10)] = T1 + Ty;
                TR             = SIMD_FNMADD(KP250000000, TQ, T1);
                ro[WS(os, 5)]  = T1 + TQ;
                T14            = SIMD_FNMADD(KP559016994, T13, T12);
                T17            = SIMD_FMADD(KP559016994, T13, T12);
                To             = SIMD_FNMADD(KP250000000, Te, T7);
                io[WS(os, 10)] = T7 + Te;
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, TZ, TY);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, TZ, TY);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, Tn, Tl);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, Tn, Tl);
                TI             = SIMD_FNMADD(KP559016994, TH, TG);
                TN             = SIMD_FMADD(KP559016994, TH, TG);
                TB             = SIMD_FMADD(KP559016994, TA, Tz);
                TE             = SIMD_FNMADD(KP559016994, TA, Tz);
                TT             = SIMD_FNMADD(KP559016994, TS, TR);
                TW             = SIMD_FMADD(KP559016994, TS, TR);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T18, T17);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T18, T17);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T16, T14);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T16, T14);
                Tq             = SIMD_FMADD(KP559016994, Tp, To);
                Tv             = SIMD_FNMADD(KP559016994, Tp, To);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, TO, TN);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, TO, TN);
                io[WS(os, 2)]  = SIMD_FMADD(KP823639103, TM, TI);
                io[WS(os, 8)]  = SIMD_FNMADD(KP823639103, TM, TI);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP823639103, TF, TE);
                ro[WS(os, 13)] = SIMD_FMADD(KP823639103, TF, TE);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TD, TB);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TD, TB);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, TX, TW);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, TX, TW);
                ro[WS(os, 8)]  = SIMD_FNMADD(KP823639103, TV, TT);
                ro[WS(os, 2)]  = SIMD_FMADD(KP823639103, TV, TT);
                io[WS(os, 7)]  = SIMD_FNMADD(KP823639103, Tw, Tv);
                io[WS(os, 13)] = SIMD_FMADD(KP823639103, Tw, Tv);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, Tu, Tq);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, Tu, Tq);
            }
        }
    }
}

template <>
struct c2cf_traits<15, 5>
{
    static constexpr long_t flops           = 190;
    static constexpr long_t operations      = 108;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 97;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 5 -name c2cf
 * -standalone */

/*
 * This function contains 108 FP additions, 82 FP multiplications,
 * (or, 26 additions, 0 multiplications, 82 fused multiply/add),
 * 97 stack variables, 9 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 5>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP535233134, +0.535233134659634897912954764569131810972529113);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T9, T2, Ta, T3, Tb, T5, Te, T6, Tg, T4, T1n, T1g, T1c,
            Tk;
        SIMD_FLOAT Tt, TS, Tc, Tf, TP, Tm, Tw, T7, T1m, T1h, T1b;
        T1  = ri[0];
        T9  = ii[0];
        T2  = ri[WS(is, 3)];
        Ta  = ii[WS(is, 3)];
        T3  = ri[WS(is, 2)];
        Tb  = ii[WS(is, 2)];
        T5  = ri[WS(is, 1)];
        Te  = ii[WS(is, 1)];
        T6  = ri[WS(is, 4)];
        Tg  = ii[WS(is, 4)];
        T4  = T2 + T3;
        T1n = T2 - T3;
        T1g = Ta + Tb;
        T1c = Ta - Tb;
        Tk  = SIMD_FNMADD(KP577350269, Tb, T3);
        Tt  = SIMD_FNMADD(KP577350269, T3, Tb);
        TS  = SIMD_FMADD(KP577350269, T3, Tb);
        Tc  = SIMD_FMADD(KP577350269, Tb, T3);
        Tf  = SIMD_FNMADD(KP577350269, Te, T5);
        TP  = SIMD_FNMADD(KP577350269, T5, Te);
        Tm  = SIMD_FMADD(KP577350269, Te, T5);
        Tw  = SIMD_FMADD(KP577350269, T5, Te);
        T7  = T5 + T6;
        T1m = T5 - T6;
        T1h = Te + Tg;
        T1b = Te - Tg;
        {
            SIMD_FLOAT Tn, Tv, TQ, Th, T14, Tl, Tu, TB, TT, TX, TH, Td, T1o,
                T1q, T8;
            SIMD_FLOAT T19, T1d, T1f, T13, To, Tx, TC, TR, TY, T1i, T1k, TI, Ti,
                T18, Tp;
            SIMD_FLOAT TN;
            Tn    = SIMD_FMADD(KP577350269, Tg, T6);
            Tv    = SIMD_FMADD(KP577350269, T6, Tg);
            TQ    = SIMD_FNMADD(KP577350269, T6, Tg);
            Th    = SIMD_FNMADD(KP577350269, Tg, T6);
            T14   = SIMD_FNMADD(KP866025403, Tk, Ta);
            Tl    = SIMD_FMADD(KP866025403, Tk, Ta);
            Tu    = SIMD_FNMADD(KP866025403, Tt, T2);
            TB    = SIMD_FMADD(KP866025403, Tt, T2);
            TT    = SIMD_FMADD(KP866025403, TS, T2);
            TX    = SIMD_FNMADD(KP866025403, TS, T2);
            TH    = SIMD_FMADD(KP866025403, Tc, Ta);
            Td    = SIMD_FNMADD(KP866025403, Tc, Ta);
            T1o   = SIMD_FNMADD(KP618033988, T1n, T1m);
            T1q   = SIMD_FMADD(KP618033988, T1m, T1n);
            T8    = T4 + T7;
            T19   = T4 - T7;
            T1d   = SIMD_FNMADD(KP618033988, T1c, T1b);
            T1f   = SIMD_FMADD(KP618033988, T1b, T1c);
            T13   = Tn - Tm;
            To    = Tm + Tn;
            Tx    = Tv - Tw;
            TC    = Tw + Tv;
            TR    = TP - TQ;
            TY    = TP + TQ;
            T1i   = T1g + T1h;
            T1k   = T1g - T1h;
            TI    = Tf - Th;
            Ti    = Tf + Th;
            T18   = SIMD_FNMADD(KP250000000, T8, T1);
            ro[0] = T1 + T8;
            Tp    = SIMD_FNMADD(KP866025403, To, Tl);
            TN    = SIMD_FMADD(KP866025403, To, Tl);
            {
                SIMD_FLOAT T15, T17, TD, TF, Ty, TA, TZ, T11, TU, TW, T1j, Tj,
                    Tr, TJ, TL;
                SIMD_FLOAT T1a, T1e, TM, TE, T10, T1l, T1p, Tq, TO, TV, TG, TK,
                    T12, T16, Ts;
                SIMD_FLOAT Tz;
                T15            = SIMD_FNMADD(KP713644179, T14, T13);
                T17            = SIMD_FMADD(KP535233134, T13, T14);
                TD             = SIMD_FNMADD(KP866025403, TC, TB);
                TF             = SIMD_FMADD(KP866025403, TC, TB);
                Ty             = SIMD_FMADD(KP535233134, Tx, Tu);
                TA             = SIMD_FNMADD(KP713644179, Tu, Tx);
                TZ             = SIMD_FMADD(KP866025403, TY, TX);
                T11            = SIMD_FNMADD(KP866025403, TY, TX);
                TU             = SIMD_FNMADD(KP713644179, TT, TR);
                TW             = SIMD_FMADD(KP535233134, TR, TT);
                T1j            = SIMD_FNMADD(KP250000000, T1i, T9);
                io[0]          = T9 + T1i;
                Tj             = SIMD_FMADD(KP866025403, Ti, Td);
                Tr             = SIMD_FNMADD(KP866025403, Ti, Td);
                TJ             = SIMD_FMADD(KP535233134, TI, TH);
                TL             = SIMD_FNMADD(KP713644179, TH, TI);
                T1a            = SIMD_FNMADD(KP559016994, T19, T18);
                T1e            = SIMD_FMADD(KP559016994, T19, T18);
                TM             = SIMD_FNMADD(KP250000000, Tp, T9);
                io[WS(os, 5)]  = T9 + Tp;
                TE             = SIMD_FNMADD(KP250000000, TD, T1);
                ro[WS(os, 10)] = T1 + TD;
                T10            = SIMD_FNMADD(KP250000000, TZ, T1);
                ro[WS(os, 5)]  = T1 + TZ;
                T1l            = SIMD_FNMADD(KP559016994, T1k, T1j);
                T1p            = SIMD_FMADD(KP559016994, T1k, T1j);
                Tq             = SIMD_FNMADD(KP250000000, Tj, T9);
                io[WS(os, 10)] = T9 + Tj;
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1f, T1e);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1f, T1e);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1d, T1a);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1d, T1a);
                TO             = SIMD_FNMADD(KP559016994, TN, TM);
                TV             = SIMD_FMADD(KP559016994, TN, TM);
                TG             = SIMD_FMADD(KP559016994, TF, TE);
                TK             = SIMD_FNMADD(KP559016994, TF, TE);
                T12            = SIMD_FNMADD(KP559016994, T11, T10);
                T16            = SIMD_FMADD(KP559016994, T11, T10);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1q, T1p);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1q, T1p);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1o, T1l);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1o, T1l);
                Ts             = SIMD_FMADD(KP559016994, Tr, Tq);
                Tz             = SIMD_FNMADD(KP559016994, Tr, Tq);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, TW, TV);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, TW, TV);
                io[WS(os, 2)]  = SIMD_FMADD(KP823639103, TU, TO);
                io[WS(os, 8)]  = SIMD_FNMADD(KP823639103, TU, TO);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP823639103, TL, TK);
                ro[WS(os, 13)] = SIMD_FMADD(KP823639103, TL, TK);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TJ, TG);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TJ, TG);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T17, T16);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T17, T16);
                ro[WS(os, 8)]  = SIMD_FMADD(KP823639103, T15, T12);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP823639103, T15, T12);
                io[WS(os, 13)] = SIMD_FNMADD(KP823639103, TA, Tz);
                io[WS(os, 7)]  = SIMD_FMADD(KP823639103, TA, Tz);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, Ty, Ts);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, Ty, Ts);
            }
        }
    }
}

template <>
struct c2cf_traits<15, 6>
{
    static constexpr long_t flops           = 204;
    static constexpr long_t operations      = 116;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 108;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 6 -name c2cf
 * -standalone */

/*
 * This function contains 116 FP additions, 88 FP multiplications,
 * (or, 28 additions, 0 multiplications, 88 fused multiply/add),
 * 108 stack variables, 10 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 6>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP535233134, +0.535233134659634897912954764569131810972529113);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, Tb, Tc, T4, Tf, T5, Tg, T7, Tj, T8, Tl, TH, T3, Td;
        SIMD_FLOAT T1p, T6, T1x, T1q, T1l, Tq, Tz, T10, Th, Tk, TX, Ts, TC, T9,
            T1w;
        SIMD_FLOAT T1r, T1k, Tt, TB, TY, Tm;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        Tb  = ii[0];
        Tc  = ii[WS(is, 5)];
        T4  = ri[WS(is, 3)];
        Tf  = ii[WS(is, 3)];
        T5  = ri[WS(is, 2)];
        Tg  = ii[WS(is, 2)];
        T7  = ri[WS(is, 1)];
        Tj  = ii[WS(is, 1)];
        T8  = ri[WS(is, 4)];
        Tl  = ii[WS(is, 4)];
        TH  = SIMD_FNMADD(KP500000000, T2, T1);
        T3  = T1 + T2;
        Td  = SIMD_FNMADD(KP500000000, Tc, Tb);
        T1p = Tb + Tc;
        T6  = T4 + T5;
        T1x = T4 - T5;
        T1q = Tf + Tg;
        T1l = Tf - Tg;
        Tq  = SIMD_FNMADD(KP577350269, Tg, T5);
        Tz  = SIMD_FNMADD(KP577350269, T5, Tg);
        T10 = SIMD_FMADD(KP577350269, T5, Tg);
        Th  = SIMD_FMADD(KP577350269, Tg, T5);
        Tk  = SIMD_FNMADD(KP577350269, Tj, T7);
        TX  = SIMD_FNMADD(KP577350269, T7, Tj);
        Ts  = SIMD_FMADD(KP577350269, Tj, T7);
        TC  = SIMD_FMADD(KP577350269, T7, Tj);
        T9  = T7 + T8;
        T1w = T7 - T8;
        T1r = Tj + Tl;
        T1k = Tj - Tl;
        Tt  = SIMD_FMADD(KP577350269, Tl, T8);
        TB  = SIMD_FMADD(KP577350269, T8, Tl);
        TY  = SIMD_FNMADD(KP577350269, T8, Tl);
        Tm  = SIMD_FNMADD(KP577350269, Tl, T8);
        {
            SIMD_FLOAT T15, TI, Te, Tp, T1d, Tr, TA, TJ, T11, T16, TP, Ti, T1y,
                T1A, Ta;
            SIMD_FLOAT T1i, T1m, T1o, T1c, Tu, TD, TK, TZ, T17, T1s, T1u, TQ,
                Tn, T1h, Tv;
            SIMD_FLOAT TV;
            T15   = SIMD_FNMADD(KP866025403, Tc, TH);
            TI    = SIMD_FMADD(KP866025403, Tc, TH);
            Te    = SIMD_FNMADD(KP866025403, T2, Td);
            Tp    = SIMD_FMADD(KP866025403, T2, Td);
            T1d   = SIMD_FNMADD(KP866025403, Tq, Tf);
            Tr    = SIMD_FMADD(KP866025403, Tq, Tf);
            TA    = SIMD_FNMADD(KP866025403, Tz, T4);
            TJ    = SIMD_FMADD(KP866025403, Tz, T4);
            T11   = SIMD_FMADD(KP866025403, T10, T4);
            T16   = SIMD_FNMADD(KP866025403, T10, T4);
            TP    = SIMD_FMADD(KP866025403, Th, Tf);
            Ti    = SIMD_FNMADD(KP866025403, Th, Tf);
            T1y   = SIMD_FNMADD(KP618033988, T1x, T1w);
            T1A   = SIMD_FMADD(KP618033988, T1w, T1x);
            Ta    = T6 + T9;
            T1i   = T6 - T9;
            T1m   = SIMD_FNMADD(KP618033988, T1l, T1k);
            T1o   = SIMD_FMADD(KP618033988, T1k, T1l);
            T1c   = Tt - Ts;
            Tu    = Ts + Tt;
            TD    = TB - TC;
            TK    = TC + TB;
            TZ    = TX - TY;
            T17   = TX + TY;
            T1s   = T1q + T1r;
            T1u   = T1q - T1r;
            TQ    = Tk - Tm;
            Tn    = Tk + Tm;
            T1h   = SIMD_FNMADD(KP250000000, Ta, T3);
            ro[0] = T3 + Ta;
            Tv    = SIMD_FNMADD(KP866025403, Tu, Tr);
            TV    = SIMD_FMADD(KP866025403, Tu, Tr);
            {
                SIMD_FLOAT T1e, T1g, TL, TN, TE, TG, T18, T1a, T12, T14, T1t,
                    To, Tx, TR, TT;
                SIMD_FLOAT T1j, T1n, TU, TM, T19, T1v, T1z, Tw, TW, T13, TO, TS,
                    T1b, T1f, Ty;
                SIMD_FLOAT TF;
                T1e            = SIMD_FNMADD(KP713644179, T1d, T1c);
                T1g            = SIMD_FMADD(KP535233134, T1c, T1d);
                TL             = SIMD_FNMADD(KP866025403, TK, TJ);
                TN             = SIMD_FMADD(KP866025403, TK, TJ);
                TE             = SIMD_FMADD(KP535233134, TD, TA);
                TG             = SIMD_FNMADD(KP713644179, TA, TD);
                T18            = SIMD_FMADD(KP866025403, T17, T16);
                T1a            = SIMD_FNMADD(KP866025403, T17, T16);
                T12            = SIMD_FNMADD(KP713644179, T11, TZ);
                T14            = SIMD_FMADD(KP535233134, TZ, T11);
                T1t            = SIMD_FNMADD(KP250000000, T1s, T1p);
                io[0]          = T1p + T1s;
                To             = SIMD_FMADD(KP866025403, Tn, Ti);
                Tx             = SIMD_FNMADD(KP866025403, Tn, Ti);
                TR             = SIMD_FMADD(KP535233134, TQ, TP);
                TT             = SIMD_FNMADD(KP713644179, TP, TQ);
                T1j            = SIMD_FNMADD(KP559016994, T1i, T1h);
                T1n            = SIMD_FMADD(KP559016994, T1i, T1h);
                TU             = SIMD_FNMADD(KP250000000, Tv, Tp);
                io[WS(os, 5)]  = Tp + Tv;
                TM             = SIMD_FNMADD(KP250000000, TL, TI);
                ro[WS(os, 10)] = TI + TL;
                T19            = SIMD_FNMADD(KP250000000, T18, T15);
                ro[WS(os, 5)]  = T15 + T18;
                T1v            = SIMD_FNMADD(KP559016994, T1u, T1t);
                T1z            = SIMD_FMADD(KP559016994, T1u, T1t);
                Tw             = SIMD_FNMADD(KP250000000, To, Te);
                io[WS(os, 10)] = Te + To;
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1o, T1n);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1o, T1n);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1m, T1j);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1m, T1j);
                TW             = SIMD_FNMADD(KP559016994, TV, TU);
                T13            = SIMD_FMADD(KP559016994, TV, TU);
                TO             = SIMD_FMADD(KP559016994, TN, TM);
                TS             = SIMD_FNMADD(KP559016994, TN, TM);
                T1b            = SIMD_FNMADD(KP559016994, T1a, T19);
                T1f            = SIMD_FMADD(KP559016994, T1a, T19);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1A, T1z);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1A, T1z);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1y, T1v);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1y, T1v);
                Ty             = SIMD_FMADD(KP559016994, Tx, Tw);
                TF             = SIMD_FNMADD(KP559016994, Tx, Tw);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T14, T13);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T14, T13);
                io[WS(os, 2)]  = SIMD_FMADD(KP823639103, T12, TW);
                io[WS(os, 8)]  = SIMD_FNMADD(KP823639103, T12, TW);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP823639103, TT, TS);
                ro[WS(os, 13)] = SIMD_FMADD(KP823639103, TT, TS);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TR, TO);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TR, TO);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1g, T1f);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1g, T1f);
                ro[WS(os, 8)]  = SIMD_FMADD(KP823639103, T1e, T1b);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP823639103, T1e, T1b);
                io[WS(os, 13)] = SIMD_FNMADD(KP823639103, TG, TF);
                io[WS(os, 7)]  = SIMD_FMADD(KP823639103, TG, TF);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, TE, Ty);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TE, Ty);
            }
        }
    }
}

template <>
struct c2cf_traits<15, 7>
{
    static constexpr long_t flops           = 210;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 7 -name c2cf
 * -standalone */

/*
 * This function contains 120 FP additions, 90 FP multiplications,
 * (or, 30 additions, 0 multiplications, 90 fused multiply/add),
 * 111 stack variables, 7 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 7>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1a, T1i, T1h, T1f, T1d, T18, T11, T19, T17, T1e, T1j, T1l,
            T1k, T1g;
        {
            SIMD_FLOAT T4, Th, T3, T1v, Tx, T13, TN, Tg, Tt, T1D, T1q, T1x, T1C,
                T12, Tw;
            SIMD_FLOAT T1r, T1w, Tj, T15, TD, Tu, TI, TP, Tc, T1n, TV, Tr, T1,
                T2, Td;
            SIMD_FLOAT Te, T8, Tm, Ta, Tp, T5, TF, T9, T1p, Tn, TH, Tq, Ti, T6,
                T7;
            SIMD_FLOAT Tl, TM, Tf, Tb, TG, To;
            T1  = ri[0];
            T2  = ri[WS(is, 5)];
            Td  = ii[0];
            Te  = ii[WS(is, 5)];
            T7  = ri[WS(is, 6)];
            T8  = ri[WS(is, 1)];
            Tl  = ii[WS(is, 6)];
            Tm  = ii[WS(is, 1)];
            Ta  = ri[WS(is, 4)];
            Tp  = ii[WS(is, 4)];
            T4  = ri[WS(is, 3)];
            Th  = ii[WS(is, 3)];
            T5  = ri[WS(is, 2)];
            T3  = T1 + T2;
            TM  = SIMD_FNMADD(KP500000000, T2, T1);
            T1v = Td + Te;
            Tf  = SIMD_FNMADD(KP500000000, Te, Td);
            TF  = SIMD_FNMADD(KP500000000, T8, T7);
            T9  = T7 + T8;
            T1p = Tl + Tm;
            Tn  = SIMD_FNMADD(KP500000000, Tm, Tl);
            TH  = SIMD_FMADD(KP577350269, Ta, Tp);
            Tx  = SIMD_FMADD(KP577350269, Tp, Ta);
            T13 = SIMD_FNMADD(KP577350269, Ta, Tp);
            Tq  = SIMD_FNMADD(KP577350269, Tp, Ta);
            Ti  = ii[WS(is, 2)];
            T1a = SIMD_FNMADD(KP866025403, Te, TM);
            TN  = SIMD_FMADD(KP866025403, Te, TM);
            Tg  = SIMD_FNMADD(KP866025403, T2, Tf);
            Tt  = SIMD_FMADD(KP866025403, T2, Tf);
            T1D = T4 - T5;
            T6  = T4 + T5;
            T1q = T1p - Tp;
            T1x = T1p + Tp;
            T1C = T9 - Ta;
            Tb  = T9 + Ta;
            T12 = SIMD_FMADD(KP866025403, Tm, TF);
            TG  = SIMD_FNMADD(KP866025403, Tm, TF);
            Tw  = SIMD_FNMADD(KP866025403, T8, Tn);
            To  = SIMD_FMADD(KP866025403, T8, Tn);
            T1r = Th - Ti;
            T1w = Th + Ti;
            Tj  = SIMD_FMADD(KP577350269, Ti, T5);
            T15 = SIMD_FMADD(KP577350269, T5, Ti);
            TD  = SIMD_FNMADD(KP577350269, T5, Ti);
            Tu  = SIMD_FNMADD(KP577350269, Ti, T5);
            TI  = SIMD_FMADD(KP866025403, TH, TG);
            TP  = SIMD_FNMADD(KP866025403, TH, TG);
            Tc  = T6 + Tb;
            T1n = T6 - Tb;
            TV  = SIMD_FNMADD(KP866025403, Tq, To);
            Tr  = SIMD_FMADD(KP866025403, Tq, To);
            {
                SIMD_FLOAT T1s, T1u, Tv, TE, TO, T16, T1b, Tk, TU, Ty, T1y, T1A,
                    T14, T1c, T1m;
                SIMD_FLOAT T1E, T1G, Ts, TB, T1z, TS, TQ, T1o, T1t, T10, TJ, TL,
                    TW, TY, TZ;
                SIMD_FLOAT TC, TK, TT, TX, Tz, TA, T1B, T1F, TR;
                T1s            = SIMD_FNMADD(KP618033988, T1r, T1q);
                T1u            = SIMD_FMADD(KP618033988, T1q, T1r);
                Tv             = SIMD_FMADD(KP866025403, Tu, Th);
                T1i            = SIMD_FNMADD(KP866025403, Tu, Th);
                TE             = SIMD_FNMADD(KP866025403, TD, T4);
                TO             = SIMD_FMADD(KP866025403, TD, T4);
                T16            = SIMD_FMADD(KP866025403, T15, T4);
                T1b            = SIMD_FNMADD(KP866025403, T15, T4);
                Tk             = SIMD_FNMADD(KP866025403, Tj, Th);
                TU             = SIMD_FMADD(KP866025403, Tj, Th);
                T1h            = SIMD_FMADD(KP866025403, Tx, Tw);
                Ty             = SIMD_FNMADD(KP866025403, Tx, Tw);
                T1y            = T1w + T1x;
                T1A            = T1w - T1x;
                T14            = SIMD_FNMADD(KP866025403, T13, T12);
                T1c            = SIMD_FMADD(KP866025403, T13, T12);
                ro[0]          = T3 + Tc;
                T1m            = SIMD_FNMADD(KP250000000, Tc, T3);
                T1E            = SIMD_FNMADD(KP618033988, T1D, T1C);
                T1G            = SIMD_FMADD(KP618033988, T1C, T1D);
                Ts             = Tk + Tr;
                TB             = Tk - Tr;
                T1z            = SIMD_FNMADD(KP250000000, T1y, T1v);
                io[0]          = T1v + T1y;
                TS             = TO - TP;
                TQ             = TO + TP;
                T1o            = SIMD_FNMADD(KP559016994, T1n, T1m);
                T1t            = SIMD_FMADD(KP559016994, T1n, T1m);
                Tz             = Tv + Ty;
                T10            = Tv - Ty;
                TJ             = SIMD_FMADD(KP618033988, TI, TE);
                TL             = SIMD_FNMADD(KP618033988, TE, TI);
                io[WS(os, 10)] = Tg + Ts;
                TA             = SIMD_FNMADD(KP250000000, Ts, Tg);
                T1B            = SIMD_FNMADD(KP559016994, T1A, T1z);
                T1F            = SIMD_FMADD(KP559016994, T1A, T1z);
                ro[WS(os, 10)] = TN + TQ;
                TR             = SIMD_FNMADD(KP250000000, TQ, TN);
                TW             = SIMD_FMADD(KP618033988, TV, TU);
                TY             = SIMD_FNMADD(KP618033988, TU, TV);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1s, T1o);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1s, T1o);
                TZ             = SIMD_FNMADD(KP250000000, Tz, Tt);
                TC             = SIMD_FMADD(KP559016994, TB, TA);
                TK             = SIMD_FNMADD(KP559016994, TB, TA);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1G, T1F);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1G, T1F);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1E, T1B);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1E, T1B);
                TT             = SIMD_FMADD(KP559016994, TS, TR);
                TX             = SIMD_FNMADD(KP559016994, TS, TR);
                io[WS(os, 5)]  = Tt + Tz;
                T1f            = T1b - T1c;
                T1d            = T1b + T1c;
                T18            = SIMD_FMADD(KP559016994, T10, TZ);
                T11            = SIMD_FNMADD(KP559016994, T10, TZ);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, TJ, TC);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TJ, TC);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, TL, TK);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, TL, TK);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TW, TT);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TW, TT);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, TY, TX);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, TY, TX);
                T19            = SIMD_FMADD(KP618033988, T14, T16);
                T17            = SIMD_FNMADD(KP618033988, T16, T14);
            }
        }
        ro[WS(os, 5)]  = T1a + T1d;
        T1e            = SIMD_FNMADD(KP250000000, T1d, T1a);
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T19, T18);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T19, T18);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T17, T11);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T17, T11);
        T1j            = SIMD_FNMADD(KP618033988, T1i, T1h);
        T1l            = SIMD_FMADD(KP618033988, T1h, T1i);
        T1k            = SIMD_FMADD(KP559016994, T1f, T1e);
        T1g            = SIMD_FNMADD(KP559016994, T1f, T1e);
        ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1j, T1g);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1j, T1g);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1l, T1k);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1l, T1k);
    }
}

template <>
struct c2cf_traits<15, 8>
{
    static constexpr long_t flops           = 214;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 85;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 8 -name c2cf
 * -standalone */

/*
 * This function contains 124 FP additions, 90 FP multiplications,
 * (or, 34 additions, 0 multiplications, 90 fused multiply/add),
 * 85 stack variables, 7 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 8>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1g, T1o, T1n, T1d, T1f, T17, T1e, T1j, T1l, T4, T3, T1B, TT,
            Ti, Ty;
        SIMD_FLOAT T8, T1J, TJ, T1C, T1x, TB, T1w, T1D, TC, TN, TM, T1I, Td,
            T1h, T1c;
        SIMD_FLOAT Tp, T10, Tw, T11, T1a, T1i, TA, T1k, T1p, T1r, T1q, T1m;
        {
            SIMD_FLOAT T1, T2, Tf, Tg, Tj, Tr, Ta, Tc, Tk, T7, TI, Tn, T1v, Ts,
                Tu;
            SIMD_FLOAT Tb, TL, T5, T6, Tl, Tm, Tq, T9, TS, Th, T1b, To, Tz, Tt,
                Tv;
            SIMD_FLOAT T19, T18;
            T1  = ri[0];
            T2  = ri[WS(is, 5)];
            Tf  = ii[0];
            Tg  = ii[WS(is, 5)];
            T4  = ri[WS(is, 3)];
            Tj  = ii[WS(is, 3)];
            T5  = ri[WS(is, 2)];
            T6  = ri[WS(is, 7)];
            Tl  = ii[WS(is, 2)];
            Tm  = ii[WS(is, 7)];
            Tq  = ii[WS(is, 6)];
            Tr  = ii[WS(is, 1)];
            T9  = ri[WS(is, 6)];
            T3  = T1 + T2;
            TS  = SIMD_FNMADD(KP500000000, T2, T1);
            T1B = Tf + Tg;
            Th  = SIMD_FNMADD(KP500000000, Tg, Tf);
            Ta  = ri[WS(is, 1)];
            Tc  = ri[WS(is, 4)];
            Tk  = T6 - T5;
            T7  = T5 + T6;
            TI  = Tl - Tm;
            Tn  = Tl + Tm;
            T1v = Tq + Tr;
            Ts  = SIMD_FNMADD(KP500000000, Tr, Tq);
            Tu  = ii[WS(is, 4)];
            T1g = SIMD_FNMADD(KP866025403, Tg, TS);
            TT  = SIMD_FMADD(KP866025403, Tg, TS);
            Ti  = SIMD_FNMADD(KP866025403, T2, Th);
            Ty  = SIMD_FMADD(KP866025403, T2, Th);
            Tb  = T9 + Ta;
            TL  = SIMD_FNMADD(KP500000000, Ta, T9);
            T8  = T4 + T7;
            T1J = T4 - T7;
            T1b = SIMD_FMADD(KP577350269, T7, TI);
            TJ  = SIMD_FNMADD(KP577350269, T7, TI);
            T1C = Tj + Tn;
            T1x = Tj - Tn;
            To  = SIMD_FNMADD(KP577350269, Tn, Tk);
            Tz  = SIMD_FMADD(KP577350269, Tn, Tk);
            TB  = SIMD_FNMADD(KP866025403, Ta, Ts);
            Tt  = SIMD_FMADD(KP866025403, Ta, Ts);
            T1w = T1v - Tu;
            T1D = T1v + Tu;
            Tv  = SIMD_FNMADD(KP577350269, Tu, Tc);
            T19 = SIMD_FNMADD(KP577350269, Tc, Tu);
            TC  = SIMD_FMADD(KP577350269, Tu, Tc);
            TN  = SIMD_FMADD(KP577350269, Tc, Tu);
            TM  = SIMD_FNMADD(KP866025403, Tr, TL);
            T18 = SIMD_FMADD(KP866025403, Tr, TL);
            T1I = Tb - Tc;
            Td  = Tb + Tc;
            T1h = SIMD_FNMADD(KP866025403, T1b, T4);
            T1c = SIMD_FMADD(KP866025403, T1b, T4);
            Tp  = SIMD_FMADD(KP866025403, To, Tj);
            T10 = SIMD_FNMADD(KP866025403, To, Tj);
            Tw  = SIMD_FMADD(KP866025403, Tv, Tt);
            T11 = SIMD_FNMADD(KP866025403, Tv, Tt);
            T1a = SIMD_FNMADD(KP866025403, T19, T18);
            T1i = SIMD_FMADD(KP866025403, T19, T18);
            T1o = SIMD_FMADD(KP866025403, Tz, Tj);
            TA  = SIMD_FNMADD(KP866025403, Tz, Tj);
        }
        {
            SIMD_FLOAT T1y, T1A, TK, TU, TD, TV, TO, T1M, T1K, T1E, T1G, Tx, TG,
                T1t, Te;
            SIMD_FLOAT TW, TY, T1F, TE, T16, T15, TF, TP, TR, TX, T1H, T1L, T12,
                T14, T1u;
            SIMD_FLOAT T1z, T1s, TH, TQ, TZ, T13;
            T1y            = SIMD_FNMADD(KP618033988, T1x, T1w);
            T1A            = SIMD_FMADD(KP618033988, T1w, T1x);
            TK             = SIMD_FNMADD(KP866025403, TJ, T4);
            TU             = SIMD_FMADD(KP866025403, TJ, T4);
            T1n            = SIMD_FMADD(KP866025403, TC, TB);
            TD             = SIMD_FNMADD(KP866025403, TC, TB);
            TV             = SIMD_FNMADD(KP866025403, TN, TM);
            TO             = SIMD_FMADD(KP866025403, TN, TM);
            T1M            = SIMD_FMADD(KP618033988, T1I, T1J);
            T1K            = SIMD_FNMADD(KP618033988, T1J, T1I);
            T1E            = T1C + T1D;
            T1G            = T1C - T1D;
            Tx             = Tp + Tw;
            TG             = Tp - Tw;
            T1t            = T8 - Td;
            Te             = T8 + Td;
            TW             = TU + TV;
            TY             = TU - TV;
            T1F            = SIMD_FNMADD(KP250000000, T1E, T1B);
            io[0]          = T1B + T1E;
            TE             = TA + TD;
            T16            = TA - TD;
            T1s            = SIMD_FNMADD(KP250000000, Te, T3);
            ro[0]          = T3 + Te;
            io[WS(os, 10)] = Ti + Tx;
            TF             = SIMD_FNMADD(KP250000000, Tx, Ti);
            TP             = SIMD_FMADD(KP618033988, TO, TK);
            TR             = SIMD_FNMADD(KP618033988, TK, TO);
            ro[WS(os, 10)] = TT + TW;
            TX             = SIMD_FNMADD(KP250000000, TW, TT);
            T1H            = SIMD_FNMADD(KP559016994, T1G, T1F);
            T1L            = SIMD_FMADD(KP559016994, T1G, T1F);
            T12            = SIMD_FMADD(KP618033988, T11, T10);
            T14            = SIMD_FNMADD(KP618033988, T10, T11);
            T1u            = SIMD_FNMADD(KP559016994, T1t, T1s);
            T1z            = SIMD_FMADD(KP559016994, T1t, T1s);
            T15            = SIMD_FNMADD(KP250000000, TE, Ty);
            TH             = SIMD_FMADD(KP559016994, TG, TF);
            TQ             = SIMD_FNMADD(KP559016994, TG, TF);
            TZ             = SIMD_FMADD(KP559016994, TY, TX);
            T13            = SIMD_FNMADD(KP559016994, TY, TX);
            io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1M, T1L);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1M, T1L);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1K, T1H);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1K, T1H);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1A, T1z);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1A, T1z);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1y, T1u);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1y, T1u);
            io[WS(os, 4)]  = SIMD_FMADD(KP951056516, TP, TH);
            io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TP, TH);
            io[WS(os, 7)]  = SIMD_FMADD(KP951056516, TR, TQ);
            io[WS(os, 13)] = SIMD_FNMADD(KP951056516, TR, TQ);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T12, TZ);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T12, TZ);
            ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T14, T13);
            ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T14, T13);
            T1d            = SIMD_FNMADD(KP618033988, T1c, T1a);
            T1f            = SIMD_FMADD(KP618033988, T1a, T1c);
            io[WS(os, 5)]  = Ty + TE;
            T17            = SIMD_FNMADD(KP559016994, T16, T15);
            T1e            = SIMD_FMADD(KP559016994, T16, T15);
            T1j            = T1h + T1i;
            T1l            = T1h - T1i;
        }
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1f, T1e);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1f, T1e);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1d, T17);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1d, T17);
        ro[WS(os, 5)]  = T1g + T1j;
        T1k            = SIMD_FNMADD(KP250000000, T1j, T1g);
        T1p            = SIMD_FNMADD(KP618033988, T1o, T1n);
        T1r            = SIMD_FMADD(KP618033988, T1n, T1o);
        T1q            = SIMD_FMADD(KP559016994, T1l, T1k);
        T1m            = SIMD_FNMADD(KP559016994, T1l, T1k);
        ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1p, T1m);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1p, T1m);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1r, T1q);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1r, T1q);
    }
}

template <>
struct c2cf_traits<15, 9>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 132;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 91;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 9 -name c2cf
 * -standalone */

/*
 * This function contains 132 FP additions, 96 FP multiplications,
 * (or, 36 additions, 0 multiplications, 96 fused multiply/add),
 * 91 stack variables, 7 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 9>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1p, T1x, T1w, T1s, T1u, T1f, T1n, T1o, T1m, T1t, T1y, T1A,
            T1z, T1v;
        {
            SIMD_FLOAT T3, T1L, T11, Tk, TD, Ta, T1T, T1M, T1H, T1j, T1k, To,
                Tt, TV, T1h;
            SIMD_FLOAT T1F, T1N, TS, T12, TG, TU, T1g, Tf, T1S, TJ, TB, T19, T1,
                T2, Th;
            SIMD_FLOAT Ti;
            T1 = ri[0];
            T2 = ri[WS(is, 5)];
            Th = ii[0];
            Ti = ii[WS(is, 5)];
            {
                SIMD_FLOAT T5, Tm, Tv, TO, T6, T1G, Tn, Tp, T9, TQ, Ts, Tw, Tb,
                    Tc, Te;
                SIMD_FLOAT Tz, T4, Tl, T7, T8, Tq, Tr, T10, Tj, T1E, Tx, TP, TR,
                    TI, TA;
                SIMD_FLOAT Ty, TH, TE, TF, TT, Td;
                T4  = ri[WS(is, 3)];
                T5  = ri[WS(is, 8)];
                Tl  = ii[WS(is, 3)];
                Tm  = ii[WS(is, 8)];
                T7  = ri[WS(is, 2)];
                T8  = ri[WS(is, 7)];
                Tq  = ii[WS(is, 2)];
                Tr  = ii[WS(is, 7)];
                Tv  = ii[WS(is, 6)];
                T3  = T1 + T2;
                T10 = SIMD_FNMADD(KP500000000, T2, T1);
                T1L = Th + Ti;
                Tj  = SIMD_FNMADD(KP500000000, Ti, Th);
                TO  = SIMD_FNMADD(KP500000000, T5, T4);
                T6  = T4 + T5;
                T1G = Tl + Tm;
                Tn  = SIMD_FNMADD(KP500000000, Tm, Tl);
                Tp  = T8 - T7;
                T9  = T7 + T8;
                TQ  = Tq - Tr;
                Ts  = Tq + Tr;
                Tw  = ii[WS(is, 1)];
                T1p = SIMD_FNMADD(KP866025403, Ti, T10);
                T11 = SIMD_FMADD(KP866025403, Ti, T10);
                Tk  = SIMD_FNMADD(KP866025403, T2, Tj);
                TD  = SIMD_FMADD(KP866025403, T2, Tj);
                Tb  = ri[WS(is, 6)];
                Tc  = ri[WS(is, 1)];
                Te  = ri[WS(is, 4)];
                Tz  = ii[WS(is, 4)];
                Ta  = T6 + T9;
                T1T = T6 - T9;
                T1M = T1G + Ts;
                T1H = T1G - Ts;
                T1E = Tv + Tw;
                Tx  = SIMD_FNMADD(KP500000000, Tw, Tv);
                TP  = SIMD_FMADD(KP866025403, Tm, TO);
                T1j = SIMD_FNMADD(KP866025403, Tm, TO);
                T1k = SIMD_FMADD(KP577350269, T9, TQ);
                TR  = SIMD_FNMADD(KP577350269, T9, TQ);
                TE  = SIMD_FMADD(KP866025403, T5, Tn);
                To  = SIMD_FNMADD(KP866025403, T5, Tn);
                Tt  = SIMD_FNMADD(KP577350269, Ts, Tp);
                TF  = SIMD_FMADD(KP577350269, Ts, Tp);
                TT  = SIMD_FNMADD(KP500000000, Tc, Tb);
                Td  = Tb + Tc;
                TV  = SIMD_FMADD(KP577350269, Te, Tz);
                TI  = SIMD_FMADD(KP577350269, Tz, Te);
                T1h = SIMD_FNMADD(KP577350269, Te, Tz);
                TA  = SIMD_FNMADD(KP577350269, Tz, Te);
                T1F = T1E - Tz;
                T1N = T1E + Tz;
                Ty  = SIMD_FMADD(KP866025403, Tc, Tx);
                TH  = SIMD_FNMADD(KP866025403, Tc, Tx);
                TS  = SIMD_FNMADD(KP866025403, TR, TP);
                T12 = SIMD_FMADD(KP866025403, TR, TP);
                T1x = SIMD_FMADD(KP866025403, TF, TE);
                TG  = SIMD_FNMADD(KP866025403, TF, TE);
                TU  = SIMD_FNMADD(KP866025403, Tw, TT);
                T1g = SIMD_FMADD(KP866025403, Tw, TT);
                Tf  = Td + Te;
                T1S = Td - Te;
                T1w = SIMD_FMADD(KP866025403, TI, TH);
                TJ  = SIMD_FNMADD(KP866025403, TI, TH);
                TB  = SIMD_FMADD(KP866025403, TA, Ty);
                T19 = SIMD_FNMADD(KP866025403, TA, Ty);
            }
            {
                SIMD_FLOAT T1K, T1I, T13, TW, T1i, T1r, Tg, T1C, Tu, T18, T1O,
                    T1Q, T1W, T1U, T1q;
                SIMD_FLOAT T1l, T14, T16, T1B, TC, TM, T1P, T1e, TZ, TX, T1c,
                    T1a, TN, TY, T17;
                SIMD_FLOAT T1b, T1d, TK, T1J, T1D, TL, T1V, T1R, T15;
                T1K            = SIMD_FMADD(KP618033988, T1F, T1H);
                T1I            = SIMD_FNMADD(KP618033988, T1H, T1F);
                T13            = SIMD_FNMADD(KP866025403, TV, TU);
                TW             = SIMD_FMADD(KP866025403, TV, TU);
                T1i            = SIMD_FNMADD(KP866025403, T1h, T1g);
                T1r            = SIMD_FMADD(KP866025403, T1h, T1g);
                Tg             = Ta + Tf;
                T1C            = Ta - Tf;
                Tu             = SIMD_FMADD(KP866025403, Tt, To);
                T18            = SIMD_FNMADD(KP866025403, Tt, To);
                T1O            = T1M + T1N;
                T1Q            = T1M - T1N;
                T1W            = SIMD_FMADD(KP618033988, T1S, T1T);
                T1U            = SIMD_FNMADD(KP618033988, T1T, T1S);
                T1q            = SIMD_FNMADD(KP866025403, T1k, T1j);
                T1l            = SIMD_FMADD(KP866025403, T1k, T1j);
                T14            = T12 + T13;
                T16            = T12 - T13;
                T1B            = SIMD_FNMADD(KP250000000, Tg, T3);
                ro[0]          = T3 + Tg;
                TC             = Tu + TB;
                TM             = Tu - TB;
                T1P            = SIMD_FNMADD(KP250000000, T1O, T1L);
                io[0]          = T1L + T1O;
                TK             = TG + TJ;
                T1e            = TG - TJ;
                TZ             = SIMD_FNMADD(KP618033988, TS, TW);
                TX             = SIMD_FMADD(KP618033988, TW, TS);
                T1J            = SIMD_FMADD(KP559016994, T1C, T1B);
                T1D            = SIMD_FNMADD(KP559016994, T1C, T1B);
                io[WS(os, 10)] = Tk + TC;
                TL             = SIMD_FNMADD(KP250000000, TC, Tk);
                T1V            = SIMD_FMADD(KP559016994, T1Q, T1P);
                T1R            = SIMD_FNMADD(KP559016994, T1Q, T1P);
                ro[WS(os, 10)] = T11 + T14;
                T15            = SIMD_FNMADD(KP250000000, T14, T11);
                T1c            = SIMD_FNMADD(KP618033988, T18, T19);
                T1a            = SIMD_FMADD(KP618033988, T19, T18);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1K, T1J);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1K, T1J);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1I, T1D);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1I, T1D);
                TN             = SIMD_FMADD(KP559016994, TM, TL);
                TY             = SIMD_FNMADD(KP559016994, TM, TL);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1W, T1V);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1W, T1V);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1U, T1R);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1U, T1R);
                T17            = SIMD_FMADD(KP559016994, T16, T15);
                T1b            = SIMD_FNMADD(KP559016994, T16, T15);
                T1d            = SIMD_FNMADD(KP250000000, TK, TD);
                io[WS(os, 5)]  = TD + TK;
                T1s            = T1q + T1r;
                T1u            = T1q - T1r;
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, TX, TN);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TX, TN);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, TZ, TY);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, TZ, TY);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1a, T17);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1a, T17);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1c, T1b);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1c, T1b);
                T1f            = SIMD_FNMADD(KP559016994, T1e, T1d);
                T1n            = SIMD_FMADD(KP559016994, T1e, T1d);
                T1o            = SIMD_FMADD(KP618033988, T1i, T1l);
                T1m            = SIMD_FNMADD(KP618033988, T1l, T1i);
            }
        }
        ro[WS(os, 5)]  = T1p + T1s;
        T1t            = SIMD_FNMADD(KP250000000, T1s, T1p);
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1o, T1n);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1o, T1n);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1m, T1f);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1m, T1f);
        T1y            = SIMD_FNMADD(KP618033988, T1x, T1w);
        T1A            = SIMD_FMADD(KP618033988, T1w, T1x);
        T1z            = SIMD_FMADD(KP559016994, T1u, T1t);
        T1v            = SIMD_FNMADD(KP559016994, T1u, T1t);
        ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1y, T1v);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1y, T1v);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1A, T1z);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1A, T1z);
    }
}

template <>
struct c2cf_traits<15, 10>
{
    static constexpr long_t flops           = 226;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 10 -name c2cf
 * -standalone */

/*
 * This function contains 136 FP additions, 90 FP multiplications,
 * (or, 46 additions, 0 multiplications, 90 fused multiply/add),
 * 133 stack variables, 7 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 10>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1u, TH, T1q, T1C, T1B, T1n, TO, T1j, T14, T12, T1h, T1f, TR,
            T13, T1x;
        SIMD_FLOAT T1z, T1g, T1c, T1i, T1r, T1t, T1y, T1D, T1F, T1s, T1k, T1E,
            T1A;
        {
            SIMD_FLOAT T3, T1R, T16, Tm, T1Z, T1N, T1Y, T1L, T1d, Tw, T1v, TW,
                T17, TK, TY;
            SIMD_FLOAT T1l, T1m, T10, T1H, Ti, T1W, T1U, TN, TF, T1e, T1, T2,
                Tj, Tk, T1Q;
            SIMD_FLOAT T1O, T20, T22, T1w, T1G, T18, T11, T1V, TG, TQ, T1I, T1P,
                T1b, T1a, T19;
            SIMD_FLOAT T21, T1X, TP;
            T1 = ri[0];
            T2 = ri[WS(is, 5)];
            Tj = ii[0];
            Tk = ii[WS(is, 5)];
            {
                SIMD_FLOAT T5, To, Tb, TS, T6, T1M, Tp, Tr, T9, TU, Tu, Tc, Tx,
                    Ty, Te;
                SIMD_FLOAT Tf, TB, TC, T4, Tn, T7, T8, Ts, Tt, T15, Tl, Ta, TX,
                    Td, T1S;
                SIMD_FLOAT TI, Tq, T1J, Tz, TZ, Tg, T1K, TD, Tv, TJ, TT, T1o,
                    T1p, TV, TA;
                SIMD_FLOAT TL, Th, T1T, TE, TM;
                T4  = ri[WS(is, 3)];
                T5  = ri[WS(is, 8)];
                Tn  = ii[WS(is, 3)];
                To  = ii[WS(is, 8)];
                T7  = ri[WS(is, 2)];
                T8  = ri[WS(is, 7)];
                Ts  = ii[WS(is, 2)];
                Tt  = ii[WS(is, 7)];
                Tb  = ri[WS(is, 6)];
                T3  = T1 + T2;
                T15 = SIMD_FNMADD(KP500000000, T2, T1);
                T1R = Tj + Tk;
                Tl  = SIMD_FNMADD(KP500000000, Tk, Tj);
                TS  = SIMD_FNMADD(KP500000000, T5, T4);
                T6  = T4 + T5;
                T1M = Tn + To;
                Tp  = SIMD_FNMADD(KP500000000, To, Tn);
                Tr  = T8 - T7;
                T9  = T7 + T8;
                TU  = Ts - Tt;
                Tu  = Ts + Tt;
                Tc  = ri[WS(is, 1)];
                T1u = SIMD_FNMADD(KP866025403, Tk, T15);
                T16 = SIMD_FMADD(KP866025403, Tk, T15);
                Tm  = SIMD_FNMADD(KP866025403, T2, Tl);
                TH  = SIMD_FMADD(KP866025403, T2, Tl);
                Tx  = ii[WS(is, 6)];
                Ty  = ii[WS(is, 1)];
                Te  = ri[WS(is, 9)];
                Tf  = ri[WS(is, 4)];
                TB  = ii[WS(is, 9)];
                TC  = ii[WS(is, 4)];
                Ta  = T6 + T9;
                T1Z = T6 - T9;
                TX  = SIMD_FNMADD(KP500000000, Tc, Tb);
                Td  = Tb + Tc;
                T1N = T1M - Tu;
                T1S = T1M + Tu;
                TI  = SIMD_FMADD(KP866025403, T5, Tp);
                Tq  = SIMD_FNMADD(KP866025403, T5, Tp);
                T1J = Tx + Ty;
                Tz  = SIMD_FNMADD(KP500000000, Ty, Tx);
                TZ  = SIMD_FNMADD(KP500000000, Tf, Te);
                Tg  = Te + Tf;
                T1K = TB + TC;
                TD  = SIMD_FNMADD(KP500000000, TC, TB);
                Tv  = SIMD_FNMADD(KP577350269, Tu, Tr);
                TJ  = SIMD_FMADD(KP577350269, Tu, Tr);
                TT  = SIMD_FMADD(KP866025403, To, TS);
                T1o = SIMD_FNMADD(KP866025403, To, TS);
                T1p = SIMD_FMADD(KP577350269, T9, TU);
                TV  = SIMD_FNMADD(KP577350269, T9, TU);
                TA  = SIMD_FMADD(KP866025403, Tc, Tz);
                TL  = SIMD_FNMADD(KP866025403, Tc, Tz);
                T1Y = Td - Tg;
                Th  = Td + Tg;
                T1L = T1J - T1K;
                T1T = T1J + T1K;
                TE  = SIMD_FMADD(KP866025403, Tf, TD);
                TM  = SIMD_FNMADD(KP866025403, Tf, TD);
                T1d = SIMD_FNMADD(KP866025403, Tv, Tq);
                Tw  = SIMD_FMADD(KP866025403, Tv, Tq);
                T1v = SIMD_FNMADD(KP866025403, T1p, T1o);
                T1q = SIMD_FMADD(KP866025403, T1p, T1o);
                TW  = SIMD_FNMADD(KP866025403, TV, TT);
                T17 = SIMD_FMADD(KP866025403, TV, TT);
                TK  = SIMD_FNMADD(KP866025403, TJ, TI);
                T1C = SIMD_FMADD(KP866025403, TJ, TI);
                TY  = SIMD_FNMADD(KP866025403, Ty, TX);
                T1l = SIMD_FMADD(KP866025403, Ty, TX);
                T1m = SIMD_FMADD(KP866025403, TC, TZ);
                T10 = SIMD_FNMADD(KP866025403, TC, TZ);
                T1H = Ta - Th;
                Ti  = Ta + Th;
                T1W = T1S - T1T;
                T1U = T1S + T1T;
                T1B = TL - TM;
                TN  = TL + TM;
                TF  = TA + TE;
                T1e = TA - TE;
            }
            T1Q            = SIMD_FMADD(KP618033988, T1L, T1N);
            T1O            = SIMD_FNMADD(KP618033988, T1N, T1L);
            T20            = SIMD_FNMADD(KP618033988, T1Z, T1Y);
            T22            = SIMD_FMADD(KP618033988, T1Y, T1Z);
            T1w            = T1l + T1m;
            T1n            = T1l - T1m;
            T1G            = SIMD_FNMADD(KP250000000, Ti, T3);
            ro[0]          = T3 + Ti;
            io[0]          = T1R + T1U;
            T18            = TY + T10;
            T11            = TY - T10;
            T1V            = SIMD_FNMADD(KP250000000, T1U, T1R);
            TG             = Tw + TF;
            TQ             = Tw - TF;
            T1I            = SIMD_FNMADD(KP559016994, T1H, T1G);
            T1P            = SIMD_FMADD(KP559016994, T1H, T1G);
            TO             = TK + TN;
            T1j            = TK - TN;
            T19            = T17 + T18;
            T1b            = T17 - T18;
            T21            = SIMD_FMADD(KP559016994, T1W, T1V);
            T1X            = SIMD_FNMADD(KP559016994, T1W, T1V);
            io[WS(os, 10)] = Tm + TG;
            TP             = SIMD_FNMADD(KP250000000, TG, Tm);
            T14            = SIMD_FNMADD(KP618033988, TW, T11);
            T12            = SIMD_FMADD(KP618033988, T11, TW);
            T1h            = SIMD_FNMADD(KP618033988, T1d, T1e);
            T1f            = SIMD_FMADD(KP618033988, T1e, T1d);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1Q, T1P);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1Q, T1P);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1O, T1I);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1O, T1I);
            ro[WS(os, 10)] = T16 + T19;
            T1a            = SIMD_FNMADD(KP250000000, T19, T16);
            io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T22, T21);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T22, T21);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, T20, T1X);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T20, T1X);
            TR             = SIMD_FMADD(KP559016994, TQ, TP);
            T13            = SIMD_FNMADD(KP559016994, TQ, TP);
            T1x            = T1v + T1w;
            T1z            = T1v - T1w;
            T1g            = SIMD_FNMADD(KP559016994, T1b, T1a);
            T1c            = SIMD_FMADD(KP559016994, T1b, T1a);
        }
        io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T12, TR);
        io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T12, TR);
        io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T14, T13);
        io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T14, T13);
        io[WS(os, 5)]  = TH + TO;
        T1i            = SIMD_FNMADD(KP250000000, TO, TH);
        T1r            = SIMD_FNMADD(KP618033988, T1q, T1n);
        T1t            = SIMD_FMADD(KP618033988, T1n, T1q);
        ro[WS(os, 5)]  = T1u + T1x;
        T1y            = SIMD_FNMADD(KP250000000, T1x, T1u);
        ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1f, T1c);
        ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1f, T1c);
        ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1h, T1g);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1h, T1g);
        T1D            = SIMD_FNMADD(KP618033988, T1C, T1B);
        T1F            = SIMD_FMADD(KP618033988, T1B, T1C);
        T1s            = SIMD_FMADD(KP559016994, T1j, T1i);
        T1k            = SIMD_FNMADD(KP559016994, T1j, T1i);
        T1E            = SIMD_FMADD(KP559016994, T1z, T1y);
        T1A            = SIMD_FNMADD(KP559016994, T1z, T1y);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1r, T1k);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1r, T1k);
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1t, T1s);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1t, T1s);
        ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1D, T1A);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1D, T1A);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1F, T1E);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1F, T1E);
    }
}

template <>
struct c2cf_traits<15, 11>
{
    static constexpr long_t flops           = 230;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 139;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 11 -name c2cf
 * -standalone */

/*
 * This function contains 140 FP additions, 90 FP multiplications,
 * (or, 50 additions, 0 multiplications, 90 fused multiply/add),
 * 139 stack variables, 7 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 11>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1A, TM, T1w, T1H, T1I, T1t, TT, T1p, T19, T17, T1n, T1l, TW,
            T18, T1D;
        SIMD_FLOAT T1F, T1m, T1i, T1o, T1x, T1z, T1E, T1J, T1L, T1y, T1q, T1K,
            T1G;
        {
            SIMD_FLOAT T5, T1X, T25, T1c, Tr, T1T, TN, TO, T24, T1R, TB, T1j,
                T1B, T1N, Tk;
            SIMD_FLOAT T1r, T13, T22, T20, T1s, T15, T1k, TK, T1d, T11, TS, T1,
                Tl, T2, T3;
            SIMD_FLOAT Tm, Tn, T1U, T1W, TP, T1M, T1C, T26, T28, T1e, T16, T21,
                TL, TV, T1O;
            SIMD_FLOAT T1V, T1h, T1g, T1f, T27, T23, TU;
            T1 = ri[0];
            Tl = ii[0];
            T2 = ri[WS(is, 5)];
            T3 = ri[WS(is, 10)];
            Tm = ii[WS(is, 5)];
            Tn = ii[WS(is, 10)];
            {
                SIMD_FLOAT T7, Tt, Td, Tq, T1b, TX, T8, T1S, Tu, Tw, Tb, TZ, Tz,
                    Te, T1a;
                SIMD_FLOAT Tp, TC, TD, Tg, Th, TG, TH, T6, Ts, T9, Ta, Tx, Ty,
                    T4, To;
                SIMD_FLOAT Tc, T12, Tf, T1P, TE, T14, Ti, T1Q, TI, T1Y, Tv, TA,
                    TY, T1u, T1v;
                SIMD_FLOAT T10, TQ, TF, Tj, T1Z, TR, TJ;
                T6  = ri[WS(is, 3)];
                T7  = ri[WS(is, 8)];
                Ts  = ii[WS(is, 3)];
                Tt  = ii[WS(is, 8)];
                T9  = ri[WS(is, 2)];
                Ta  = ri[WS(is, 7)];
                Tx  = ii[WS(is, 2)];
                Ty  = ii[WS(is, 7)];
                Td  = ri[WS(is, 6)];
                Tq  = T3 - T2;
                T4  = T2 + T3;
                T1b = Tm - Tn;
                To  = Tm + Tn;
                TX  = SIMD_FNMADD(KP500000000, T7, T6);
                T8  = T6 + T7;
                T1S = Ts + Tt;
                Tu  = SIMD_FNMADD(KP500000000, Tt, Ts);
                Tw  = Ta - T9;
                Tb  = T9 + Ta;
                TZ  = Tx - Ty;
                Tz  = Tx + Ty;
                Te  = ri[WS(is, 1)];
                T5  = T1 + T4;
                T1a = SIMD_FNMADD(KP500000000, T4, T1);
                T1X = Tl + To;
                Tp  = SIMD_FNMADD(KP500000000, To, Tl);
                TC  = ii[WS(is, 6)];
                TD  = ii[WS(is, 1)];
                Tg  = ri[WS(is, 9)];
                Th  = ri[WS(is, 4)];
                TG  = ii[WS(is, 9)];
                TH  = ii[WS(is, 4)];
                Tc  = T8 + Tb;
                T25 = T8 - Tb;
                T12 = SIMD_FNMADD(KP500000000, Te, Td);
                Tf  = Td + Te;
                T1A = SIMD_FNMADD(KP866025403, T1b, T1a);
                T1c = SIMD_FMADD(KP866025403, T1b, T1a);
                TM  = SIMD_FNMADD(KP866025403, Tq, Tp);
                Tr  = SIMD_FMADD(KP866025403, Tq, Tp);
                T1P = TC + TD;
                TE  = SIMD_FNMADD(KP500000000, TD, TC);
                T14 = SIMD_FNMADD(KP500000000, Th, Tg);
                Ti  = Tg + Th;
                T1Q = TG + TH;
                TI  = SIMD_FNMADD(KP500000000, TH, TG);
                T1T = T1S - Tz;
                T1Y = T1S + Tz;
                TN  = SIMD_FMADD(KP866025403, T7, Tu);
                Tv  = SIMD_FNMADD(KP866025403, T7, Tu);
                TA  = SIMD_FNMADD(KP577350269, Tz, Tw);
                TO  = SIMD_FMADD(KP577350269, Tz, Tw);
                TY  = SIMD_FMADD(KP866025403, Tt, TX);
                T1u = SIMD_FNMADD(KP866025403, Tt, TX);
                T1v = SIMD_FMADD(KP577350269, Tb, TZ);
                T10 = SIMD_FNMADD(KP577350269, Tb, TZ);
                TQ  = SIMD_FNMADD(KP866025403, Te, TE);
                TF  = SIMD_FMADD(KP866025403, Te, TE);
                T24 = Tf - Ti;
                Tj  = Tf + Ti;
                T1R = T1P - T1Q;
                T1Z = T1P + T1Q;
                TR  = SIMD_FNMADD(KP866025403, Th, TI);
                TJ  = SIMD_FMADD(KP866025403, Th, TI);
                TB  = SIMD_FMADD(KP866025403, TA, Tv);
                T1j = SIMD_FNMADD(KP866025403, TA, Tv);
                T1B = SIMD_FNMADD(KP866025403, T1v, T1u);
                T1w = SIMD_FMADD(KP866025403, T1v, T1u);
                T1N = Tc - Tj;
                Tk  = Tc + Tj;
                T1r = SIMD_FMADD(KP866025403, TD, T12);
                T13 = SIMD_FNMADD(KP866025403, TD, T12);
                T22 = T1Y - T1Z;
                T20 = T1Y + T1Z;
                T1s = SIMD_FMADD(KP866025403, TH, T14);
                T15 = SIMD_FNMADD(KP866025403, TH, T14);
                T1k = TF - TJ;
                TK  = TF + TJ;
                T1d = SIMD_FMADD(KP866025403, T10, TY);
                T11 = SIMD_FNMADD(KP866025403, T10, TY);
                T1H = TQ - TR;
                TS  = TQ + TR;
            }
            T1U            = SIMD_FNMADD(KP618033988, T1T, T1R);
            T1W            = SIMD_FMADD(KP618033988, T1R, T1T);
            TP             = SIMD_FNMADD(KP866025403, TO, TN);
            T1I            = SIMD_FMADD(KP866025403, TO, TN);
            ro[0]          = T5 + Tk;
            T1M            = SIMD_FNMADD(KP250000000, Tk, T5);
            io[0]          = T1X + T20;
            T1C            = T1r + T1s;
            T1t            = T1r - T1s;
            T26            = SIMD_FNMADD(KP618033988, T25, T24);
            T28            = SIMD_FMADD(KP618033988, T24, T25);
            T1e            = T13 + T15;
            T16            = T13 - T15;
            T21            = SIMD_FNMADD(KP250000000, T20, T1X);
            TL             = TB + TK;
            TV             = TB - TK;
            T1O            = SIMD_FNMADD(KP559016994, T1N, T1M);
            T1V            = SIMD_FMADD(KP559016994, T1N, T1M);
            TT             = TP + TS;
            T1p            = TP - TS;
            T1f            = T1d + T1e;
            T1h            = T1d - T1e;
            T27            = SIMD_FMADD(KP559016994, T22, T21);
            T23            = SIMD_FNMADD(KP559016994, T22, T21);
            io[WS(os, 10)] = Tr + TL;
            TU             = SIMD_FNMADD(KP250000000, TL, Tr);
            T19            = SIMD_FNMADD(KP618033988, T11, T16);
            T17            = SIMD_FMADD(KP618033988, T16, T11);
            T1n            = SIMD_FNMADD(KP618033988, T1j, T1k);
            T1l            = SIMD_FMADD(KP618033988, T1k, T1j);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1W, T1V);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1W, T1V);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1U, T1O);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1U, T1O);
            ro[WS(os, 10)] = T1c + T1f;
            T1g            = SIMD_FNMADD(KP250000000, T1f, T1c);
            io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T28, T27);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T28, T27);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, T26, T23);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T26, T23);
            TW             = SIMD_FMADD(KP559016994, TV, TU);
            T18            = SIMD_FNMADD(KP559016994, TV, TU);
            T1D            = T1B + T1C;
            T1F            = T1B - T1C;
            T1m            = SIMD_FNMADD(KP559016994, T1h, T1g);
            T1i            = SIMD_FMADD(KP559016994, T1h, T1g);
        }
        io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T17, TW);
        io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T17, TW);
        io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T19, T18);
        io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T19, T18);
        io[WS(os, 5)]  = TM + TT;
        T1o            = SIMD_FNMADD(KP250000000, TT, TM);
        T1x            = SIMD_FNMADD(KP618033988, T1w, T1t);
        T1z            = SIMD_FMADD(KP618033988, T1t, T1w);
        ro[WS(os, 5)]  = T1A + T1D;
        T1E            = SIMD_FNMADD(KP250000000, T1D, T1A);
        ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1l, T1i);
        ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1l, T1i);
        ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1n, T1m);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1n, T1m);
        T1J            = SIMD_FNMADD(KP618033988, T1I, T1H);
        T1L            = SIMD_FMADD(KP618033988, T1H, T1I);
        T1y            = SIMD_FMADD(KP559016994, T1p, T1o);
        T1q            = SIMD_FNMADD(KP559016994, T1p, T1o);
        T1K            = SIMD_FMADD(KP559016994, T1F, T1E);
        T1G            = SIMD_FNMADD(KP559016994, T1F, T1E);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1x, T1q);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1x, T1q);
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1z, T1y);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1z, T1y);
        ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1J, T1G);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1J, T1G);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1L, T1K);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1L, T1K);
    }
}

template <>
struct c2cf_traits<15, 12>
{
    static constexpr long_t flops           = 234;
    static constexpr long_t operations      = 144;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 12 -name c2cf
 * -standalone */

/*
 * This function contains 144 FP additions, 90 FP multiplications,
 * (or, 54 additions, 0 multiplications, 90 fused multiply/add),
 * 114 stack variables, 7 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 12>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tj, T5, T23, Tc, T2b, T24, T1Z, T1i, T1G, Tt, TR, T1a, Tk,
            T1C, T1H;
        SIMD_FLOAT T1j, T16, T1O, TU, TD, T1p, TL, TM, Td, Te, Tf, TE, TF, TG,
            T1;
        SIMD_FLOAT Tn, T2, T3, To, Tp, T1y, T1b, TN, T1W, Tg, TJ, TH, T18;
        T1 = ri[0];
        Tn = ii[0];
        T2 = ri[WS(is, 5)];
        T3 = ri[WS(is, 10)];
        To = ii[WS(is, 5)];
        Tp = ii[WS(is, 10)];
        {
            SIMD_FLOAT T6, T7, Tu, Tv, T9, Ta, Tz, TA, T13, T1A, Tx, TS, T15,
                T1B, TC;
            SIMD_FLOAT TT, Ti, Ts, T4, T1h, Tq, T12, T8, T1Y, Tw, Ty, Tb, T14,
                TB, T1g;
            SIMD_FLOAT Tr;
            T6  = ri[WS(is, 3)];
            T7  = ri[WS(is, 8)];
            Tu  = ii[WS(is, 3)];
            Tv  = ii[WS(is, 8)];
            T9  = ri[WS(is, 2)];
            Ta  = ri[WS(is, 7)];
            Tz  = ii[WS(is, 2)];
            TA  = ii[WS(is, 7)];
            Ti  = ri[WS(is, 9)];
            Ts  = T3 - T2;
            T4  = T2 + T3;
            T1h = To - Tp;
            Tq  = To + Tp;
            T12 = SIMD_FNMADD(KP500000000, T7, T6);
            T8  = T6 + T7;
            T1Y = Tu + Tv;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Tu);
            Ty  = Ta - T9;
            Tb  = T9 + Ta;
            T14 = Tz - TA;
            TB  = Tz + TA;
            Tj  = ri[WS(is, 4)];
            T5  = T1 + T4;
            T1g = SIMD_FNMADD(KP500000000, T4, T1);
            T23 = Tn + Tq;
            Tr  = SIMD_FNMADD(KP500000000, Tq, Tn);
            T13 = SIMD_FMADD(KP866025403, Tv, T12);
            T1A = SIMD_FNMADD(KP866025403, Tv, T12);
            Tx  = SIMD_FNMADD(KP866025403, T7, Tw);
            TS  = SIMD_FMADD(KP866025403, T7, Tw);
            Tc  = T8 + Tb;
            T2b = T8 - Tb;
            T15 = SIMD_FNMADD(KP577350269, Tb, T14);
            T1B = SIMD_FMADD(KP577350269, Tb, T14);
            TC  = SIMD_FNMADD(KP577350269, TB, Ty);
            TT  = SIMD_FMADD(KP577350269, TB, Ty);
            T24 = T1Y + TB;
            T1Z = T1Y - TB;
            T1i = SIMD_FMADD(KP866025403, T1h, T1g);
            T1G = SIMD_FNMADD(KP866025403, T1h, T1g);
            Tt  = SIMD_FMADD(KP866025403, Ts, Tr);
            TR  = SIMD_FNMADD(KP866025403, Ts, Tr);
            T1a = SIMD_FNMADD(KP500000000, Tj, Ti);
            Tk  = Ti + Tj;
            T1C = SIMD_FMADD(KP866025403, T1B, T1A);
            T1H = SIMD_FNMADD(KP866025403, T1B, T1A);
            T1j = SIMD_FMADD(KP866025403, T15, T13);
            T16 = SIMD_FNMADD(KP866025403, T15, T13);
            T1O = SIMD_FMADD(KP866025403, TT, TS);
            TU  = SIMD_FNMADD(KP866025403, TT, TS);
            TD  = SIMD_FMADD(KP866025403, TC, Tx);
            T1p = SIMD_FNMADD(KP866025403, TC, Tx);
            TL  = ii[WS(is, 9)];
            TM  = ii[WS(is, 4)];
            Td  = ri[WS(is, 6)];
            Te  = ri[WS(is, 11)];
            Tf  = ri[WS(is, 1)];
            TE  = ii[WS(is, 6)];
            TF  = ii[WS(is, 11)];
            TG  = ii[WS(is, 1)];
        }
        T1y = SIMD_FMADD(KP866025403, TM, T1a);
        T1b = SIMD_FNMADD(KP866025403, TM, T1a);
        TN  = SIMD_FNMADD(KP500000000, TM, TL);
        T1W = TL + TM;
        Tg  = Te + Tf;
        TJ  = Tf - Te;
        TH  = TF + TG;
        T18 = TF - TG;
        {
            SIMD_FLOAT TO, TW, T17, Th, TI, T1V, Tl, T2a, T1x, T19, T25, T1X,
                TK, TV, T2c;
            SIMD_FLOAT T2e, T1T, Tm, T1k, T1c, T1I, T1z, T20, T22, T28, T26, TX,
                T1N, TP, T1q;
            SIMD_FLOAT T1S, T1d, T1f;
            TO    = SIMD_FMADD(KP866025403, Tj, TN);
            TW    = SIMD_FNMADD(KP866025403, Tj, TN);
            T17   = SIMD_FNMADD(KP500000000, Tg, Td);
            Th    = Td + Tg;
            TI    = SIMD_FNMADD(KP500000000, TH, TE);
            T1V   = TE + TH;
            Tl    = Th + Tk;
            T2a   = Th - Tk;
            T1x   = SIMD_FNMADD(KP866025403, T18, T17);
            T19   = SIMD_FMADD(KP866025403, T18, T17);
            T25   = T1V + T1W;
            T1X   = T1V - T1W;
            TK    = SIMD_FMADD(KP866025403, TJ, TI);
            TV    = SIMD_FNMADD(KP866025403, TJ, TI);
            T2c   = SIMD_FNMADD(KP618033988, T2b, T2a);
            T2e   = SIMD_FMADD(KP618033988, T2a, T2b);
            T1T   = Tc - Tl;
            Tm    = Tc + Tl;
            T1k   = T19 + T1b;
            T1c   = T19 - T1b;
            T1I   = T1x + T1y;
            T1z   = T1x - T1y;
            T20   = SIMD_FNMADD(KP618033988, T1Z, T1X);
            T22   = SIMD_FMADD(KP618033988, T1X, T1Z);
            T28   = T24 - T25;
            T26   = T24 + T25;
            TX    = TV + TW;
            T1N   = TV - TW;
            TP    = TK + TO;
            T1q   = TK - TO;
            ro[0] = T5 + Tm;
            T1S   = SIMD_FNMADD(KP250000000, Tm, T5);
            T1d   = SIMD_FMADD(KP618033988, T1c, T16);
            T1f   = SIMD_FNMADD(KP618033988, T16, T1c);
            {
                SIMD_FLOAT T1n, T1l, T1D, T1F, T1L, T1J, T27, T1P, T1R, T1v, TY,
                    T1r, T1t, T10, TQ;
                SIMD_FLOAT T21, T1U, T1m, T1K, T2d, T29, T1u, TZ, T1s, T1o, T1Q,
                    T1M, T1E, T1w, T1e;
                SIMD_FLOAT T11;
                T1n            = T1j - T1k;
                T1l            = T1j + T1k;
                T1D            = SIMD_FNMADD(KP618033988, T1C, T1z);
                T1F            = SIMD_FMADD(KP618033988, T1z, T1C);
                T1L            = T1H - T1I;
                T1J            = T1H + T1I;
                io[0]          = T23 + T26;
                T27            = SIMD_FNMADD(KP250000000, T26, T23);
                T1P            = SIMD_FNMADD(KP618033988, T1O, T1N);
                T1R            = SIMD_FMADD(KP618033988, T1N, T1O);
                T1v            = TU - TX;
                TY             = TU + TX;
                T1r            = SIMD_FMADD(KP618033988, T1q, T1p);
                T1t            = SIMD_FNMADD(KP618033988, T1p, T1q);
                T10            = TD - TP;
                TQ             = TD + TP;
                T21            = SIMD_FMADD(KP559016994, T1T, T1S);
                T1U            = SIMD_FNMADD(KP559016994, T1T, T1S);
                ro[WS(os, 10)] = T1i + T1l;
                T1m            = SIMD_FNMADD(KP250000000, T1l, T1i);
                ro[WS(os, 5)]  = T1G + T1J;
                T1K            = SIMD_FNMADD(KP250000000, T1J, T1G);
                T2d            = SIMD_FMADD(KP559016994, T28, T27);
                T29            = SIMD_FNMADD(KP559016994, T28, T27);
                io[WS(os, 5)]  = TR + TY;
                T1u            = SIMD_FNMADD(KP250000000, TY, TR);
                io[WS(os, 10)] = Tt + TQ;
                TZ             = SIMD_FNMADD(KP250000000, TQ, Tt);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T20, T1U);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T20, T1U);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T22, T21);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T22, T21);
                T1s            = SIMD_FNMADD(KP559016994, T1n, T1m);
                T1o            = SIMD_FMADD(KP559016994, T1n, T1m);
                T1Q            = SIMD_FMADD(KP559016994, T1L, T1K);
                T1M            = SIMD_FNMADD(KP559016994, T1L, T1K);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2c, T29);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2c, T29);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2e, T2d);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2e, T2d);
                T1E            = SIMD_FMADD(KP559016994, T1v, T1u);
                T1w            = SIMD_FNMADD(KP559016994, T1v, T1u);
                T1e            = SIMD_FNMADD(KP559016994, T10, TZ);
                T11            = SIMD_FMADD(KP559016994, T10, TZ);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1r, T1o);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1r, T1o);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1t, T1s);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1t, T1s);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1P, T1M);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1P, T1M);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1R, T1Q);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1R, T1Q);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1D, T1w);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1D, T1w);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1F, T1E);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1F, T1E);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1d, T11);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1d, T11);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1f, T1e);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1f, T1e);
            }
        }
    }
}

template <>
struct c2cf_traits<15, 13>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 119;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 13 -name c2cf
 * -standalone */

/*
 * This function contains 148 FP additions, 84 FP multiplications,
 * (or, 64 additions, 0 multiplications, 84 fused multiply/add),
 * 119 stack variables, 6 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 13>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T5, T29, T1n, T1L, Tv, TV, T8, Tn, T2g, T23, T2b, T22, T1h,
            T1p, T1N;
        SIMD_FLOAT T1E, T17, T1F, TF, T19, TW, Tz, T1S, T11, TT, T1v, T18, Td,
            T24, TE;
        SIMD_FLOAT T9, TA, Tc, TD, T1, Tp, T2, T3, Tq, Tr, Te, T2h, T1G, T1a,
            T2a;
        SIMD_FLOAT T25, TG, TX, T2i, T2k, T1Y, To, T1o, T1b, T1M, T1H, T26, T28,
            T2e, T2c;
        SIMD_FLOAT TY, T1T, TH, T1u, T1X, T1i, T1k;
        T1 = ri[0];
        Tp = ii[0];
        T2 = ri[WS(is, 5)];
        T3 = ri[WS(is, 10)];
        Tq = ii[WS(is, 5)];
        Tr = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tl, TQ, Tf, TI, TJ, Tu, T4, T1m, Ts, T1f, Tm, T21, TR,
                TK, Ti;
            SIMD_FLOAT TN, Tk, TP, Tg, Th, T7, TS, T10, T16, Tx, Ta, Tb, TB, TC,
                Ty;
            SIMD_FLOAT TO, TZ, T1D, T1g, TL, T1d, T1c, Tj, Tw, T6, T1l, Tt, T20,
                TM, T1C;
            SIMD_FLOAT T1e;
            Tk  = ri[WS(is, 9)];
            Tl  = ri[WS(is, 4)];
            TP  = ii[WS(is, 9)];
            TQ  = ii[WS(is, 4)];
            Tf  = ri[WS(is, 6)];
            Tg  = ri[WS(is, 11)];
            Th  = ri[WS(is, 1)];
            TI  = ii[WS(is, 6)];
            TJ  = ii[WS(is, 11)];
            Tu  = T3 - T2;
            T4  = T2 + T3;
            T1m = Tq - Tr;
            Ts  = Tq + Tr;
            T1f = SIMD_FNMADD(KP500000000, Tl, Tk);
            Tm  = Tk + Tl;
            T21 = TP + TQ;
            TR  = SIMD_FNMADD(KP500000000, TQ, TP);
            TK  = ii[WS(is, 1)];
            Ti  = Tg + Th;
            TN  = Th - Tg;
            T6  = ri[WS(is, 3)];
            T7  = ri[WS(is, 8)];
            T5  = T1 + T4;
            T1l = SIMD_FNMADD(KP500000000, T4, T1);
            T29 = Tp + Ts;
            Tt  = SIMD_FNMADD(KP500000000, Ts, Tp);
            T1D = SIMD_FMADD(KP866025403, TQ, T1f);
            T1g = SIMD_FNMADD(KP866025403, TQ, T1f);
            TS  = SIMD_FMADD(KP866025403, Tl, TR);
            T10 = SIMD_FNMADD(KP866025403, Tl, TR);
            TL  = TJ + TK;
            T1d = TJ - TK;
            T1c = SIMD_FNMADD(KP500000000, Ti, Tf);
            Tj  = Tf + Ti;
            T1n = SIMD_FMADD(KP866025403, T1m, T1l);
            T1L = SIMD_FNMADD(KP866025403, T1m, T1l);
            Tv  = SIMD_FMADD(KP866025403, Tu, Tt);
            TV  = SIMD_FNMADD(KP866025403, Tu, Tt);
            T16 = SIMD_FNMADD(KP500000000, T7, T6);
            T8  = T6 + T7;
            Tw  = ii[WS(is, 3)];
            Tx  = ii[WS(is, 8)];
            T9  = ri[WS(is, 12)];
            T20 = TI + TL;
            TM  = SIMD_FNMADD(KP500000000, TL, TI);
            Tn  = Tj + Tm;
            T2g = Tj - Tm;
            T1C = SIMD_FNMADD(KP866025403, T1d, T1c);
            T1e = SIMD_FMADD(KP866025403, T1d, T1c);
            Ta  = ri[WS(is, 2)];
            Tb  = ri[WS(is, 7)];
            TA  = ii[WS(is, 12)];
            TB  = ii[WS(is, 2)];
            TC  = ii[WS(is, 7)];
            T23 = Tw + Tx;
            Ty  = SIMD_FNMADD(KP500000000, Tx, Tw);
            T2b = T20 + T21;
            T22 = T20 - T21;
            TO  = SIMD_FMADD(KP866025403, TN, TM);
            TZ  = SIMD_FNMADD(KP866025403, TN, TM);
            T1h = T1e - T1g;
            T1p = T1e + T1g;
            T1N = T1C + T1D;
            T1E = T1C - T1D;
            T17 = SIMD_FMADD(KP866025403, Tx, T16);
            T1F = SIMD_FNMADD(KP866025403, Tx, T16);
            TF  = Tb - Ta;
            Tc  = Ta + Tb;
            TD  = TB + TC;
            T19 = TB - TC;
            TW  = SIMD_FMADD(KP866025403, T7, Ty);
            Tz  = SIMD_FNMADD(KP866025403, T7, Ty);
            T1S = TZ - T10;
            T11 = TZ + T10;
            TT  = TO + TS;
            T1v = TO - TS;
        }
        T18   = SIMD_FNMADD(KP500000000, Tc, T9);
        Td    = T9 + Tc;
        T24   = TA + TD;
        TE    = SIMD_FNMADD(KP500000000, TD, TA);
        Te    = T8 + Td;
        T2h   = T8 - Td;
        T1G   = SIMD_FNMADD(KP866025403, T19, T18);
        T1a   = SIMD_FMADD(KP866025403, T19, T18);
        T2a   = T23 + T24;
        T25   = T23 - T24;
        TG    = SIMD_FMADD(KP866025403, TF, TE);
        TX    = SIMD_FNMADD(KP866025403, TF, TE);
        T2i   = SIMD_FNMADD(KP618033988, T2h, T2g);
        T2k   = SIMD_FMADD(KP618033988, T2g, T2h);
        T1Y   = Te - Tn;
        To    = Te + Tn;
        T1o   = T17 + T1a;
        T1b   = T17 - T1a;
        T1M   = T1F + T1G;
        T1H   = T1F - T1G;
        T26   = SIMD_FNMADD(KP618033988, T25, T22);
        T28   = SIMD_FMADD(KP618033988, T22, T25);
        T2e   = T2a - T2b;
        T2c   = T2a + T2b;
        TY    = TW + TX;
        T1T   = TW - TX;
        TH    = Tz + TG;
        T1u   = Tz - TG;
        ro[0] = T5 + To;
        T1X   = SIMD_FNMADD(KP250000000, To, T5);
        T1i   = SIMD_FMADD(KP618033988, T1h, T1b);
        T1k   = SIMD_FNMADD(KP618033988, T1b, T1h);
        {
            SIMD_FLOAT T1s, T1q, T1I, T1K, T1Q, T1O, T2d, T1U, T1W, T1A, T12,
                T1w, T1y, T14, TU;
            SIMD_FLOAT T27, T1Z, T1r, T1P, T2j, T2f, T1z, T13, T1x, T1t, T1V,
                T1R, T1J, T1B, T1j;
            SIMD_FLOAT T15;
            T1s            = T1o - T1p;
            T1q            = T1o + T1p;
            T1I            = SIMD_FNMADD(KP618033988, T1H, T1E);
            T1K            = SIMD_FMADD(KP618033988, T1E, T1H);
            T1Q            = T1M - T1N;
            T1O            = T1M + T1N;
            io[0]          = T29 + T2c;
            T2d            = SIMD_FNMADD(KP250000000, T2c, T29);
            T1U            = SIMD_FNMADD(KP618033988, T1T, T1S);
            T1W            = SIMD_FMADD(KP618033988, T1S, T1T);
            T1A            = TY - T11;
            T12            = TY + T11;
            T1w            = SIMD_FMADD(KP618033988, T1v, T1u);
            T1y            = SIMD_FNMADD(KP618033988, T1u, T1v);
            T14            = TH - TT;
            TU             = TH + TT;
            T27            = SIMD_FMADD(KP559016994, T1Y, T1X);
            T1Z            = SIMD_FNMADD(KP559016994, T1Y, T1X);
            ro[WS(os, 10)] = T1n + T1q;
            T1r            = SIMD_FNMADD(KP250000000, T1q, T1n);
            ro[WS(os, 5)]  = T1L + T1O;
            T1P            = SIMD_FNMADD(KP250000000, T1O, T1L);
            T2j            = SIMD_FMADD(KP559016994, T2e, T2d);
            T2f            = SIMD_FNMADD(KP559016994, T2e, T2d);
            io[WS(os, 5)]  = TV + T12;
            T1z            = SIMD_FNMADD(KP250000000, T12, TV);
            io[WS(os, 10)] = Tv + TU;
            T13            = SIMD_FNMADD(KP250000000, TU, Tv);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T26, T1Z);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T26, T1Z);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T28, T27);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T28, T27);
            T1x            = SIMD_FNMADD(KP559016994, T1s, T1r);
            T1t            = SIMD_FMADD(KP559016994, T1s, T1r);
            T1V            = SIMD_FMADD(KP559016994, T1Q, T1P);
            T1R            = SIMD_FNMADD(KP559016994, T1Q, T1P);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2i, T2f);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2i, T2f);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2k, T2j);
            io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2k, T2j);
            T1J            = SIMD_FMADD(KP559016994, T1A, T1z);
            T1B            = SIMD_FNMADD(KP559016994, T1A, T1z);
            T1j            = SIMD_FNMADD(KP559016994, T14, T13);
            T15            = SIMD_FMADD(KP559016994, T14, T13);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1w, T1t);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1w, T1t);
            ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1y, T1x);
            ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1y, T1x);
            ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1U, T1R);
            ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1U, T1R);
            ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1W, T1V);
            ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1W, T1V);
            io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1I, T1B);
            io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1I, T1B);
            io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1K, T1J);
            io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1K, T1J);
            io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1i, T15);
            io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1i, T15);
            io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1k, T1j);
            io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1k, T1j);
        }
    }
}

template <>
struct c2cf_traits<15, 14>
{
    static constexpr long_t flops           = 236;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 14 -name c2cf
 * -standalone */

/*
 * This function contains 152 FP additions, 84 FP multiplications,
 * (or, 68 additions, 0 multiplications, 84 fused multiply/add),
 * 114 stack variables, 6 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 14>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T5, T2f, T1t, T1R, Tx, T10, Tp, T2m, TF, T2h, T28, T1n, T1v,
            T1T, T1K;
        SIMD_FLOAT TK, Ta, T29, T1Y, T16, TY, T1B, T1e, Tf, T1L, T1d, TI, T1f,
            TE, T11;
        SIMD_FLOAT Tb, TD, T1c, TG, Te, T1b, TH, TC, T1, Tr, T2, T3, Ts, Tt, Tg;
        SIMD_FLOAT T2n, T1M, T1g, TJ, T2a, T2o, T2q, T24, Tq, T1u, T1h, T1S,
            T1N, T2g, T2b;
        SIMD_FLOAT TL, T12;
        T1 = ri[0];
        Tr = ii[0];
        T2 = ri[WS(is, 5)];
        T3 = ri[WS(is, 10)];
        Ts = ii[WS(is, 5)];
        Tt = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tn, TV, Th, TN, TO, Tw, T4, T1s, Tu, T1l, To, T27, TW,
                TP, Tk;
            SIMD_FLOAT TS, Tm, TU, Ti, Tj, TX, T15, Ty, TB, TT, T14, T6, T7,
                T1J, T1m;
            SIMD_FLOAT TQ, T1j, T1i, Tl, T8, Tz, TA, T1r, Tv, T26, TR, T1I, T1k,
                Tc, Td;
            SIMD_FLOAT T9;
            Tm  = ri[WS(is, 9)];
            Tn  = ri[WS(is, 4)];
            TU  = ii[WS(is, 9)];
            TV  = ii[WS(is, 4)];
            Th  = ri[WS(is, 6)];
            Ti  = ri[WS(is, 11)];
            Tj  = ri[WS(is, 1)];
            TN  = ii[WS(is, 6)];
            TO  = ii[WS(is, 11)];
            Tw  = T3 - T2;
            T4  = T2 + T3;
            T1s = Ts - Tt;
            Tu  = Ts + Tt;
            T1l = SIMD_FNMADD(KP500000000, Tn, Tm);
            To  = Tm + Tn;
            T27 = TU + TV;
            TW  = SIMD_FNMADD(KP500000000, TV, TU);
            TP  = ii[WS(is, 1)];
            Tk  = Ti + Tj;
            TS  = Tj - Ti;
            T6  = ri[WS(is, 3)];
            T7  = ri[WS(is, 8)];
            T5  = T1 + T4;
            T1r = SIMD_FNMADD(KP500000000, T4, T1);
            T2f = Tr + Tu;
            Tv  = SIMD_FNMADD(KP500000000, Tu, Tr);
            T1J = SIMD_FMADD(KP866025403, TV, T1l);
            T1m = SIMD_FNMADD(KP866025403, TV, T1l);
            TX  = SIMD_FMADD(KP866025403, Tn, TW);
            T15 = SIMD_FNMADD(KP866025403, Tn, TW);
            TQ  = TO + TP;
            T1j = TO - TP;
            T1i = SIMD_FNMADD(KP500000000, Tk, Th);
            Tl  = Th + Tk;
            T1t = SIMD_FMADD(KP866025403, T1s, T1r);
            T1R = SIMD_FNMADD(KP866025403, T1s, T1r);
            Tx  = SIMD_FMADD(KP866025403, Tw, Tv);
            T10 = SIMD_FNMADD(KP866025403, Tw, Tv);
            T8  = ri[WS(is, 13)];
            Ty  = ii[WS(is, 3)];
            Tz  = ii[WS(is, 8)];
            TA  = ii[WS(is, 13)];
            Tb  = ri[WS(is, 12)];
            T26 = TN + TQ;
            TR  = SIMD_FNMADD(KP500000000, TQ, TN);
            Tp  = Tl + To;
            T2m = Tl - To;
            T1I = SIMD_FNMADD(KP866025403, T1j, T1i);
            T1k = SIMD_FMADD(KP866025403, T1j, T1i);
            Tc  = ri[WS(is, 2)];
            Td  = ri[WS(is, 7)];
            T9  = T7 + T8;
            TD  = T8 - T7;
            TF  = ii[WS(is, 12)];
            T1c = Tz - TA;
            TB  = Tz + TA;
            T2h = T26 + T27;
            T28 = T26 - T27;
            TT  = SIMD_FMADD(KP866025403, TS, TR);
            T14 = SIMD_FNMADD(KP866025403, TS, TR);
            T1n = T1k - T1m;
            T1v = T1k + T1m;
            T1T = T1I + T1J;
            T1K = T1I - T1J;
            TG  = ii[WS(is, 2)];
            TK  = Td - Tc;
            Te  = Tc + Td;
            T1b = SIMD_FNMADD(KP500000000, T9, T6);
            Ta  = T6 + T9;
            TH  = ii[WS(is, 7)];
            T29 = Ty + TB;
            TC  = SIMD_FNMADD(KP500000000, TB, Ty);
            T1Y = T14 - T15;
            T16 = T14 + T15;
            TY  = TT + TX;
            T1B = TT - TX;
        }
        T1e = SIMD_FNMADD(KP500000000, Te, Tb);
        Tf  = Tb + Te;
        T1L = SIMD_FNMADD(KP866025403, T1c, T1b);
        T1d = SIMD_FMADD(KP866025403, T1c, T1b);
        TI  = TG + TH;
        T1f = TG - TH;
        TE  = SIMD_FMADD(KP866025403, TD, TC);
        T11 = SIMD_FNMADD(KP866025403, TD, TC);
        Tg  = Ta + Tf;
        T2n = Ta - Tf;
        T1M = SIMD_FNMADD(KP866025403, T1f, T1e);
        T1g = SIMD_FMADD(KP866025403, T1f, T1e);
        TJ  = SIMD_FNMADD(KP500000000, TI, TF);
        T2a = TF + TI;
        T2o = SIMD_FNMADD(KP618033988, T2n, T2m);
        T2q = SIMD_FMADD(KP618033988, T2m, T2n);
        T24 = Tg - Tp;
        Tq  = Tg + Tp;
        T1u = T1d + T1g;
        T1h = T1d - T1g;
        T1S = T1L + T1M;
        T1N = T1L - T1M;
        T2g = T29 + T2a;
        T2b = T29 - T2a;
        TL  = SIMD_FMADD(KP866025403, TK, TJ);
        T12 = SIMD_FNMADD(KP866025403, TK, TJ);
        {
            SIMD_FLOAT T1o, T1q, T1O, T1Q, T20, T22, T1G, T1C, T1E, T19, T1D,
                T1z, T21, T1X, T2p;
            SIMD_FLOAT T2l, T1F, T18, T23, T1y, T1w, T1W, T1U, T2c, T2e, T2k,
                T2i, T13, T1Z, TM;
            SIMD_FLOAT T1A, T2d, T25, T1x, T1V, T2j, T17, TZ, T1P, T1H, T1p,
                T1a;
            ro[0]          = T5 + Tq;
            T23            = SIMD_FNMADD(KP250000000, Tq, T5);
            T1o            = SIMD_FMADD(KP618033988, T1n, T1h);
            T1q            = SIMD_FNMADD(KP618033988, T1h, T1n);
            T1y            = T1u - T1v;
            T1w            = T1u + T1v;
            T1O            = SIMD_FNMADD(KP618033988, T1N, T1K);
            T1Q            = SIMD_FMADD(KP618033988, T1K, T1N);
            T1W            = T1S - T1T;
            T1U            = T1S + T1T;
            T2c            = SIMD_FNMADD(KP618033988, T2b, T28);
            T2e            = SIMD_FMADD(KP618033988, T28, T2b);
            T2k            = T2g - T2h;
            T2i            = T2g + T2h;
            T13            = T11 + T12;
            T1Z            = T11 - T12;
            TM             = TE + TL;
            T1A            = TE - TL;
            T2d            = SIMD_FMADD(KP559016994, T24, T23);
            T25            = SIMD_FNMADD(KP559016994, T24, T23);
            ro[WS(os, 10)] = T1t + T1w;
            T1x            = SIMD_FNMADD(KP250000000, T1w, T1t);
            ro[WS(os, 5)]  = T1R + T1U;
            T1V            = SIMD_FNMADD(KP250000000, T1U, T1R);
            io[0]          = T2f + T2i;
            T2j            = SIMD_FNMADD(KP250000000, T2i, T2f);
            T20            = SIMD_FNMADD(KP618033988, T1Z, T1Y);
            T22            = SIMD_FMADD(KP618033988, T1Y, T1Z);
            T1G            = T13 - T16;
            T17            = T13 + T16;
            T1C            = SIMD_FMADD(KP618033988, T1B, T1A);
            T1E            = SIMD_FNMADD(KP618033988, T1A, T1B);
            T19            = TM - TY;
            TZ             = TM + TY;
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2c, T25);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2c, T25);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2e, T2d);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2e, T2d);
            T1D            = SIMD_FNMADD(KP559016994, T1y, T1x);
            T1z            = SIMD_FMADD(KP559016994, T1y, T1x);
            T21            = SIMD_FMADD(KP559016994, T1W, T1V);
            T1X            = SIMD_FNMADD(KP559016994, T1W, T1V);
            T2p            = SIMD_FMADD(KP559016994, T2k, T2j);
            T2l            = SIMD_FNMADD(KP559016994, T2k, T2j);
            io[WS(os, 5)]  = T10 + T17;
            T1F            = SIMD_FNMADD(KP250000000, T17, T10);
            io[WS(os, 10)] = Tx + TZ;
            T18            = SIMD_FNMADD(KP250000000, TZ, Tx);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1C, T1z);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1C, T1z);
            ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1E, T1D);
            ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1E, T1D);
            ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T20, T1X);
            ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T20, T1X);
            ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T22, T21);
            ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T22, T21);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2o, T2l);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2o, T2l);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2q, T2p);
            io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2q, T2p);
            T1P            = SIMD_FMADD(KP559016994, T1G, T1F);
            T1H            = SIMD_FNMADD(KP559016994, T1G, T1F);
            T1p            = SIMD_FNMADD(KP559016994, T19, T18);
            T1a            = SIMD_FMADD(KP559016994, T19, T18);
            io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1O, T1H);
            io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1O, T1H);
            io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1Q, T1P);
            io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1Q, T1P);
            io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1o, T1a);
            io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1o, T1a);
            io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1q, T1p);
            io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1q, T1p);
        }
    }
}

template <>
struct c2cf_traits<15, 15>
{
    static constexpr long_t flops           = 240;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -first-k 15 -name c2cf
 * -standalone */

/*
 * This function contains 156 FP additions, 84 FP multiplications,
 * (or, 72 additions, 0 multiplications, 84 fused multiply/add),
 * 114 stack variables, 6 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && ProvidedElements == 15>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T5, T2l, Tx, TV, T1z, T1X, Tr, T2s, Tb, T19, T2n, T2e, T1H,
            T11, TT;
        SIMD_FLOAT T24, T1b, Ta, T1r, T1B, T1Z, T1Q, Te, T1e, T2f, T18, TW, TC,
            TG, T1c;
        SIMD_FLOAT T16, Tc, Td, T17, TB, TE, Ty, TF, T1, T1v, T2, T3, Tu, Tv,
            TD;
        SIMD_FLOAT Tf;
        T1  = ri[0];
        T1v = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        Tu  = ii[WS(is, 5)];
        Tv  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Th, T1h, Tm, T1y, Tw, T1m, Tk, T1k, TP, TM, T1i, TQ, Tp,
                T1p, Tt;
            SIMD_FLOAT T1x, Ti, Tj, TK, TL, Tn, To, T4, T1w, T1l, T1O, T1P, T1q,
                T6, T7;
            SIMD_FLOAT T2c, TN, TZ, T8, T2d, T1o, TS, T10, Tz, TA, Tl, TJ, T1j,
                T1n, TR;
            SIMD_FLOAT TO, Tq, T9;
            Th  = ri[WS(is, 6)];
            Ti  = ri[WS(is, 11)];
            Tj  = ri[WS(is, 1)];
            T1h = ii[WS(is, 6)];
            TK  = ii[WS(is, 11)];
            TL  = ii[WS(is, 1)];
            Tm  = ri[WS(is, 9)];
            Tn  = ri[WS(is, 14)];
            To  = ri[WS(is, 4)];
            T1y = T3 - T2;
            T4  = T2 + T3;
            T1w = Tu + Tv;
            Tw  = Tu - Tv;
            T1m = ii[WS(is, 9)];
            Tk  = Ti + Tj;
            T1k = Tj - Ti;
            TP  = ii[WS(is, 14)];
            TM  = TK - TL;
            T1i = TK + TL;
            TQ  = ii[WS(is, 4)];
            Tp  = Tn + To;
            T1p = To - Tn;
            T5  = T1 + T4;
            Tt  = SIMD_FNMADD(KP500000000, T4, T1);
            T2l = T1v + T1w;
            T1x = SIMD_FNMADD(KP500000000, T1w, T1v);
            T6  = ri[WS(is, 3)];
            Tl  = Th + Tk;
            TJ  = SIMD_FNMADD(KP500000000, Tk, Th);
            T7  = ri[WS(is, 8)];
            T1j = SIMD_FNMADD(KP500000000, T1i, T1h);
            T2c = T1h + T1i;
            T1n = TP + TQ;
            TR  = TP - TQ;
            TO  = SIMD_FNMADD(KP500000000, Tp, Tm);
            Tq  = Tm + Tp;
            Tx  = SIMD_FNMADD(KP866025403, Tw, Tt);
            TV  = SIMD_FMADD(KP866025403, Tw, Tt);
            T1z = SIMD_FMADD(KP866025403, T1y, T1x);
            T1X = SIMD_FNMADD(KP866025403, T1y, T1x);
            TN  = SIMD_FNMADD(KP866025403, TM, TJ);
            TZ  = SIMD_FMADD(KP866025403, TM, TJ);
            T8  = ri[WS(is, 13)];
            T1l = SIMD_FMADD(KP866025403, T1k, T1j);
            T1O = SIMD_FNMADD(KP866025403, T1k, T1j);
            T2d = T1m + T1n;
            T1o = SIMD_FNMADD(KP500000000, T1n, T1m);
            Tr  = Tl + Tq;
            T2s = Tl - Tq;
            TS  = SIMD_FNMADD(KP866025403, TR, TO);
            T10 = SIMD_FMADD(KP866025403, TR, TO);
            T16 = ii[WS(is, 3)];
            Tz  = ii[WS(is, 8)];
            TA  = ii[WS(is, 13)];
            Tb  = ri[WS(is, 12)];
            T9  = T7 + T8;
            T19 = T8 - T7;
            Tc  = ri[WS(is, 2)];
            T2n = T2c + T2d;
            T2e = T2c - T2d;
            T1P = SIMD_FNMADD(KP866025403, T1p, T1o);
            T1q = SIMD_FMADD(KP866025403, T1p, T1o);
            T1H = TZ - T10;
            T11 = TZ + T10;
            TT  = TN + TS;
            T24 = TN - TS;
            Td  = ri[WS(is, 7)];
            T1b = ii[WS(is, 12)];
            T17 = Tz + TA;
            TB  = Tz - TA;
            TE  = ii[WS(is, 2)];
            Ty  = SIMD_FNMADD(KP500000000, T9, T6);
            Ta  = T6 + T9;
            TF  = ii[WS(is, 7)];
            T1r = T1l - T1q;
            T1B = T1l + T1q;
            T1Z = T1O + T1P;
            T1Q = T1O - T1P;
        }
        Te  = Tc + Td;
        T1e = Td - Tc;
        T2f = T16 + T17;
        T18 = SIMD_FNMADD(KP500000000, T17, T16);
        TW  = SIMD_FMADD(KP866025403, TB, Ty);
        TC  = SIMD_FNMADD(KP866025403, TB, Ty);
        TG  = TE - TF;
        T1c = TE + TF;
        TD  = SIMD_FNMADD(KP500000000, Te, Tb);
        Tf  = Tb + Te;
        {
            SIMD_FLOAT T1R, T1a, T1d, T2g, Tg, T2t, TH, TX, T2m, T2h, T1S, T1f,
                T2u, T2w, T2a;
            SIMD_FLOAT Ts, TY, T1G, TI, T25, T2i, T2k, T2q, T2o, T1A, T1g, T1Y,
                T1T, T29, T1I;
            SIMD_FLOAT T1K;
            T1R   = SIMD_FNMADD(KP866025403, T19, T18);
            T1a   = SIMD_FMADD(KP866025403, T19, T18);
            T1d   = SIMD_FNMADD(KP500000000, T1c, T1b);
            T2g   = T1b + T1c;
            Tg    = Ta + Tf;
            T2t   = Ta - Tf;
            TH    = SIMD_FNMADD(KP866025403, TG, TD);
            TX    = SIMD_FMADD(KP866025403, TG, TD);
            T2m   = T2f + T2g;
            T2h   = T2f - T2g;
            T1S   = SIMD_FNMADD(KP866025403, T1e, T1d);
            T1f   = SIMD_FMADD(KP866025403, T1e, T1d);
            T2u   = SIMD_FNMADD(KP618033988, T2t, T2s);
            T2w   = SIMD_FMADD(KP618033988, T2s, T2t);
            T2a   = Tg - Tr;
            Ts    = Tg + Tr;
            TY    = TW + TX;
            T1G   = TW - TX;
            TI    = TC + TH;
            T25   = TC - TH;
            T2i   = SIMD_FNMADD(KP618033988, T2h, T2e);
            T2k   = SIMD_FMADD(KP618033988, T2e, T2h);
            T2q   = T2m - T2n;
            T2o   = T2m + T2n;
            T1A   = T1a + T1f;
            T1g   = T1a - T1f;
            T1Y   = T1R + T1S;
            T1T   = T1R - T1S;
            ro[0] = T5 + Ts;
            T29   = SIMD_FNMADD(KP250000000, Ts, T5);
            T1I   = SIMD_FMADD(KP618033988, T1H, T1G);
            T1K   = SIMD_FNMADD(KP618033988, T1G, T1H);
            {
                SIMD_FLOAT T14, T12, T26, T28, T1M, TU, T2p, T1s, T1u, T1E, T1C,
                    T1U, T1W, T22, T20;
                SIMD_FLOAT T2j, T2b, T13, T1L, T2v, T2r, T1D, T21, T1t, T15,
                    T1V, T1N, T1J, T1F, T27;
                SIMD_FLOAT T23;
                T14            = TY - T11;
                T12            = TY + T11;
                T26            = SIMD_FNMADD(KP618033988, T25, T24);
                T28            = SIMD_FMADD(KP618033988, T24, T25);
                T1M            = TI - TT;
                TU             = TI + TT;
                io[0]          = T2l + T2o;
                T2p            = SIMD_FNMADD(KP250000000, T2o, T2l);
                T1s            = SIMD_FMADD(KP618033988, T1r, T1g);
                T1u            = SIMD_FNMADD(KP618033988, T1g, T1r);
                T1E            = T1A - T1B;
                T1C            = T1A + T1B;
                T1U            = SIMD_FNMADD(KP618033988, T1T, T1Q);
                T1W            = SIMD_FMADD(KP618033988, T1Q, T1T);
                T22            = T1Y - T1Z;
                T20            = T1Y + T1Z;
                T2j            = SIMD_FMADD(KP559016994, T2a, T29);
                T2b            = SIMD_FNMADD(KP559016994, T2a, T29);
                ro[WS(os, 10)] = TV + T12;
                T13            = SIMD_FNMADD(KP250000000, T12, TV);
                ro[WS(os, 5)]  = Tx + TU;
                T1L            = SIMD_FNMADD(KP250000000, TU, Tx);
                T2v            = SIMD_FMADD(KP559016994, T2q, T2p);
                T2r            = SIMD_FNMADD(KP559016994, T2q, T2p);
                io[WS(os, 10)] = T1z + T1C;
                T1D            = SIMD_FNMADD(KP250000000, T1C, T1z);
                io[WS(os, 5)]  = T1X + T20;
                T21            = SIMD_FNMADD(KP250000000, T20, T1X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2i, T2b);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2i, T2b);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2k, T2j);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2k, T2j);
                T1t            = SIMD_FNMADD(KP559016994, T14, T13);
                T15            = SIMD_FMADD(KP559016994, T14, T13);
                T1V            = SIMD_FMADD(KP559016994, T1M, T1L);
                T1N            = SIMD_FNMADD(KP559016994, T1M, T1L);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2u, T2r);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2u, T2r);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2w, T2v);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2w, T2v);
                T1J            = SIMD_FNMADD(KP559016994, T1E, T1D);
                T1F            = SIMD_FMADD(KP559016994, T1E, T1D);
                T27            = SIMD_FMADD(KP559016994, T22, T21);
                T23            = SIMD_FNMADD(KP559016994, T22, T21);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1s, T15);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1s, T15);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1U, T1N);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1U, T1N);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1W, T1V);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1W, T1V);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1I, T1F);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1I, T1F);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1K, T1J);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1K, T1J);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T26, T23);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T26, T23);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T28, T27);
            }
        }
    }
}
