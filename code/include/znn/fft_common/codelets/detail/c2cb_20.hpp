//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<20, 0>
{
    static constexpr long_t flops           = 280;
    static constexpr long_t operations      = 208;
    static constexpr long_t memory_accesses = 80;
    static constexpr long_t stack_vars      = 152;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 208 FP additions, 72 FP multiplications,
 * (or, 136 additions, 0 multiplications, 72 fused multiply/add),
 * 152 stack variables, 4 constants, and 80 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1d, TP, TD, T7, T3b, T2N, T2f, T1R, T1j, T1Y, T2n, T1b, TJ,
            T3j, T2U;
        SIMD_FLOAT TB, T3d, T37, T2A, T2P, T2h, T2b, T1y, T1T, TE, Te, T2D, T32,
            T1e, TU;
        SIMD_FLOAT T1D, T26, T1f, TZ, TF, Tl, T33, T2G, T27, T1I, T1E, Th, T2E,
            TX, TY;
        SIMD_FLOAT Tk, T2F, T1H, T1, T2, TL, TM, T4, T5, T1O, T1P, T1g, T1Z,
            T10, T2m;
        SIMD_FLOAT TG, T3i, Tm, T2V, T3c, T34, T2O, T2H;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TL  = ii[0];
        TM  = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T1O = ii[WS(is, 5)];
        T1P = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1o, Tp, T2u, T13, Tu, T14, Ts, T2v, T1r, Tv, T16, T17,
                Tx, Ty, T1u;
            SIMD_FLOAT T1v, Tq, T1N, T3, T2L, TN, TO, T6, T2M, T1Q, Tr, T1p,
                T1q, Tn, To;
            SIMD_FLOAT T11, T12, Tf, T1z, Ta, T2B, TS, TT, Td, T2C, T1C, Tg, TV,
                TW, Ti;
            SIMD_FLOAT Tj, T1F, T1G;
            Tn  = ri[WS(is, 8)];
            To  = ri[WS(is, 18)];
            T11 = ii[WS(is, 8)];
            T12 = ii[WS(is, 18)];
            Tq  = ri[WS(is, 13)];
            T1N = T1 - T2;
            T3  = T1 + T2;
            T2L = TL + TM;
            TN  = TL - TM;
            TO  = T4 - T5;
            T6  = T4 + T5;
            T2M = T1O + T1P;
            T1Q = T1O - T1P;
            T1o = Tn - To;
            Tp  = Tn + To;
            T2u = T11 + T12;
            T13 = T11 - T12;
            Tr  = ri[WS(is, 3)];
            T1p = ii[WS(is, 13)];
            T1q = ii[WS(is, 3)];
            Tu  = ri[WS(is, 12)];
            T1d = TO + TN;
            TP  = TN - TO;
            TD  = T3 + T6;
            T7  = T3 - T6;
            T3b = T2L + T2M;
            T2N = T2L - T2M;
            T2f = T1N + T1Q;
            T1R = T1N - T1Q;
            T14 = Tq - Tr;
            Ts  = Tq + Tr;
            T2v = T1p + T1q;
            T1r = T1p - T1q;
            Tv  = ri[WS(is, 2)];
            T16 = ii[WS(is, 12)];
            T17 = ii[WS(is, 2)];
            Tx  = ri[WS(is, 17)];
            Ty  = ri[WS(is, 7)];
            T1u = ii[WS(is, 17)];
            T1v = ii[WS(is, 7)];
            {
                SIMD_FLOAT T8, T1h, T15, TH, Tt, T35, T2w, T29, T1s, T1t, Tw,
                    T2x, T18, T19, Tz;
                SIMD_FLOAT T2y, T1w, T9, TQ, TR, Tb, Tc, T1A, T1B, T1i, T1a, TI,
                    TA, T36, T2z;
                SIMD_FLOAT T2a, T1x;
                T8  = ri[WS(is, 4)];
                T1h = T14 + T13;
                T15 = T13 - T14;
                TH  = Tp + Ts;
                Tt  = Tp - Ts;
                T35 = T2u + T2v;
                T2w = T2u - T2v;
                T29 = T1o + T1r;
                T1s = T1o - T1r;
                T1t = Tu - Tv;
                Tw  = Tu + Tv;
                T2x = T16 + T17;
                T18 = T16 - T17;
                T19 = Tx - Ty;
                Tz  = Tx + Ty;
                T2y = T1u + T1v;
                T1w = T1u - T1v;
                T9  = ri[WS(is, 14)];
                TQ  = ii[WS(is, 4)];
                TR  = ii[WS(is, 14)];
                Tb  = ri[WS(is, 9)];
                Tc  = ri[WS(is, 19)];
                T1A = ii[WS(is, 9)];
                T1B = ii[WS(is, 19)];
                Tf  = ri[WS(is, 16)];
                T1i = T19 + T18;
                T1a = T18 - T19;
                TI  = Tw + Tz;
                TA  = Tw - Tz;
                T36 = T2x + T2y;
                T2z = T2x - T2y;
                T2a = T1t + T1w;
                T1x = T1t - T1w;
                T1z = T8 - T9;
                Ta  = T8 + T9;
                T2B = TQ + TR;
                TS  = TQ - TR;
                TT  = Tb - Tc;
                Td  = Tb + Tc;
                T2C = T1A + T1B;
                T1C = T1A - T1B;
                T1j = T1h + T1i;
                T1Y = T1h - T1i;
                T2n = T15 - T1a;
                T1b = T15 + T1a;
                TJ  = TH + TI;
                T3j = TH - TI;
                T2U = Tt - TA;
                TB  = Tt + TA;
                T3d = T35 + T36;
                T37 = T35 - T36;
                T2A = T2w - T2z;
                T2P = T2w + T2z;
                T2h = T29 + T2a;
                T2b = T29 - T2a;
                T1y = T1s - T1x;
                T1T = T1s + T1x;
                Tg  = ri[WS(is, 6)];
                TV  = ii[WS(is, 16)];
                TW  = ii[WS(is, 6)];
                Ti  = ri[WS(is, 1)];
                Tj  = ri[WS(is, 11)];
                T1F = ii[WS(is, 1)];
                T1G = ii[WS(is, 11)];
            }
            TE  = Ta + Td;
            Te  = Ta - Td;
            T2D = T2B - T2C;
            T32 = T2B + T2C;
            T1e = TT + TS;
            TU  = TS - TT;
            T1E = Tf - Tg;
            Th  = Tf + Tg;
            T2E = TV + TW;
            TX  = TV - TW;
            TY  = Ti - Tj;
            Tk  = Ti + Tj;
            T2F = T1F + T1G;
            T1H = T1F - T1G;
            T1D = T1z - T1C;
            T26 = T1z + T1C;
        }
        T1f = TY + TX;
        TZ  = TX - TY;
        TF  = Th + Tk;
        Tl  = Th - Tk;
        T33 = T2E + T2F;
        T2G = T2E - T2F;
        T27 = T1E + T1H;
        T1I = T1E - T1H;
        T1g = T1e + T1f;
        T1Z = T1e - T1f;
        T10 = TU + TZ;
        T2m = TU - TZ;
        TG  = TE + TF;
        T3i = TE - TF;
        Tm  = Te + Tl;
        T2V = Te - Tl;
        T3c = T32 + T33;
        T34 = T32 - T33;
        T2O = T2D + T2G;
        T2H = T2D - T2G;
        {
            SIMD_FLOAT T2g, T28, T1S, T1J, T20, T22, T1m, T1k, T2o, T2q, T24,
                T1c, T3k, T3m, T30;
            SIMD_FLOAT TK, T2W, T2Y, T2s, TC, T38, T3a, T3g, T3e, T2I, T2K, T2S,
                T2Q, T2c, T2e;
            T2g = T26 + T27;
            T28 = T26 - T27;
            T1S = T1D + T1I;
            T1J = T1D - T1I;
            T20 = SIMD_FNMADD(KP618033988, T1Z, T1Y);
            T22 = SIMD_FMADD(KP618033988, T1Y, T1Z);
            T1m = T1g - T1j;
            T1k = T1g + T1j;
            T2o = SIMD_FMADD(KP618033988, T2n, T2m);
            T2q = SIMD_FNMADD(KP618033988, T2m, T2n);
            T24 = T10 - T1b;
            T1c = T10 + T1b;
            T3k = SIMD_FMADD(KP618033988, T3j, T3i);
            T3m = SIMD_FNMADD(KP618033988, T3i, T3j);
            T30 = TG - TJ;
            TK  = TG + TJ;
            T2W = SIMD_FNMADD(KP618033988, T2V, T2U);
            T2Y = SIMD_FMADD(KP618033988, T2U, T2V);
            T2s = Tm - TB;
            TC  = Tm + TB;
            T38 = SIMD_FMADD(KP618033988, T37, T34);
            T3a = SIMD_FNMADD(KP618033988, T34, T37);
            T3g = T3c - T3d;
            T3e = T3c + T3d;
            T2I = SIMD_FNMADD(KP618033988, T2H, T2A);
            T2K = SIMD_FMADD(KP618033988, T2A, T2H);
            T2S = T2O - T2P;
            T2Q = T2O + T2P;
            T2c = SIMD_FMADD(KP618033988, T2b, T28);
            T2e = SIMD_FNMADD(KP618033988, T28, T2b);
            {
                SIMD_FLOAT T2k, T2i, T1K, T1M, T1W, T1U, T1l, T23, T2Z, T2r,
                    T3f, T2R, T2j, T1V, T1L;
                SIMD_FLOAT T1n, T2d, T25, T39, T31, T2J, T2t, T3l, T3h, T2X,
                    T2T, T2p, T2l, T21, T1X;
                T2k            = T2g - T2h;
                T2i            = T2g + T2h;
                T1K            = SIMD_FNMADD(KP618033988, T1J, T1y);
                T1M            = SIMD_FMADD(KP618033988, T1y, T1J);
                T1W            = T1S - T1T;
                T1U            = T1S + T1T;
                io[WS(os, 15)] = T1d + T1k;
                T1l            = SIMD_FNMADD(KP250000000, T1k, T1d);
                io[WS(os, 5)]  = TP + T1c;
                T23            = SIMD_FNMADD(KP250000000, T1c, TP);
                ro[0]          = TD + TK;
                T2Z            = SIMD_FNMADD(KP250000000, TK, TD);
                ro[WS(os, 10)] = T7 + TC;
                T2r            = SIMD_FNMADD(KP250000000, TC, T7);
                io[0]          = T3b + T3e;
                T3f            = SIMD_FNMADD(KP250000000, T3e, T3b);
                io[WS(os, 10)] = T2N + T2Q;
                T2R            = SIMD_FNMADD(KP250000000, T2Q, T2N);
                ro[WS(os, 5)]  = T2f + T2i;
                T2j            = SIMD_FNMADD(KP250000000, T2i, T2f);
                ro[WS(os, 15)] = T1R + T1U;
                T1V            = SIMD_FNMADD(KP250000000, T1U, T1R);
                T1L            = SIMD_FMADD(KP559016994, T1m, T1l);
                T1n            = SIMD_FNMADD(KP559016994, T1m, T1l);
                T2d            = SIMD_FNMADD(KP559016994, T24, T23);
                T25            = SIMD_FMADD(KP559016994, T24, T23);
                T39            = SIMD_FNMADD(KP559016994, T30, T2Z);
                T31            = SIMD_FMADD(KP559016994, T30, T2Z);
                T2J            = SIMD_FMADD(KP559016994, T2s, T2r);
                T2t            = SIMD_FNMADD(KP559016994, T2s, T2r);
                T3l            = SIMD_FNMADD(KP559016994, T3g, T3f);
                T3h            = SIMD_FMADD(KP559016994, T3g, T3f);
                T2X            = SIMD_FMADD(KP559016994, T2S, T2R);
                T2T            = SIMD_FNMADD(KP559016994, T2S, T2R);
                T2p            = SIMD_FNMADD(KP559016994, T2k, T2j);
                T2l            = SIMD_FMADD(KP559016994, T2k, T2j);
                T21            = SIMD_FMADD(KP559016994, T1W, T1V);
                T1X            = SIMD_FNMADD(KP559016994, T1W, T1V);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1K, T1n);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1K, T1n);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1M, T1L);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1M, T1L);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2c, T25);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T2c, T25);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T2e, T2d);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T2e, T2d);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T38, T31);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T38, T31);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T3a, T39);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T3a, T39);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T2I, T2t);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2I, T2t);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2K, T2J);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T2K, T2J);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T3k, T3h);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T3k, T3h);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T3m, T3l);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T3m, T3l);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2W, T2T);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2W, T2T);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2Y, T2X);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2Y, T2X);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2o, T2l);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2o, T2l);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T2q, T2p);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T2q, T2p);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T20, T1X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T20, T1X);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T22, T21);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T22, T21);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 1>
{
    static constexpr long_t flops           = 278;
    static constexpr long_t operations      = 206;
    static constexpr long_t memory_accesses = 78;
    static constexpr long_t stack_vars      = 148;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 206 FP additions, 72 FP multiplications,
 * (or, 134 additions, 0 multiplications, 72 fused multiply/add),
 * 148 stack variables, 4 constants, and 78 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2V, T1z, T1A, T2W, T1B, T7, TD, T2X, T2x, T2J, T1P, T34,
            T3f, T2g, TJ;
        SIMD_FLOAT T2F, T2Q, TB, T2Z, T20, T2p, T3a, T2L, T1q, T1h, T2z, TE, Te,
            T2b, T1E;
        SIMD_FLOAT T23, T2k, T1r, TU, T1H, T2c, TF, Tl, T26, T2l, T1s, T11, T24,
            Th, T1F;
        SIMD_FLOAT TX, T1G, Tk, T25, T10, T1, T2, T1x, T1y, T4, T5, T2u, T2v,
            T1I, T35;
        SIMD_FLOAT T2d, T3e, TG, T2E, Tm, T2R, T2Y, T27;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1x = ii[0];
        T1y = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T2u = ri[WS(is, 5)];
        T2v = ri[WS(is, 15)];
        {
            SIMD_FLOAT T1U, Tp, T1J, T15, Tu, Tv, T1a, T1K, Ts, T1V, T18, T1b,
                Tx, Ty, T1d;
            SIMD_FLOAT T1e, Tq, T3, T2t, T6, T2w, Tr, T16, T17, Tn, To, T13,
                T14, Tf, T21;
            SIMD_FLOAT Ta, T1C, TQ, T1D, Td, T22, TT, Tg, TV, TW, Ti, Tj, TY,
                TZ;
            Tn  = ri[WS(is, 8)];
            To  = ri[WS(is, 18)];
            T13 = ii[WS(is, 8)];
            T14 = ii[WS(is, 18)];
            Tq  = ii[WS(is, 13)];
            T2V = T1 + T2;
            T3  = T1 - T2;
            T2t = T1x - T1y;
            T1z = T1x + T1y;
            T1A = T4 + T5;
            T6  = T4 - T5;
            T2W = T2u + T2v;
            T2w = T2u - T2v;
            T1U = Tn + To;
            Tp  = Tn - To;
            T1J = T13 + T14;
            T15 = T13 - T14;
            Tr  = ii[WS(is, 3)];
            T16 = ri[WS(is, 13)];
            T17 = ri[WS(is, 3)];
            Tu  = ri[WS(is, 12)];
            T1B = T1z - T1A;
            T7  = T3 - T6;
            TD  = T3 + T6;
            T2X = T2V - T2W;
            T2x = T2t - T2w;
            T2J = T2t + T2w;
            Tv  = ri[WS(is, 2)];
            T1a = ii[WS(is, 12)];
            T1K = Tq + Tr;
            Ts  = Tq - Tr;
            T1V = T16 + T17;
            T18 = T16 - T17;
            T1b = ii[WS(is, 2)];
            Tx  = ii[WS(is, 17)];
            Ty  = ii[WS(is, 7)];
            T1d = ri[WS(is, 17)];
            T1e = ri[WS(is, 7)];
            {
                SIMD_FLOAT T8, T1X, Tw, T1L, T2e, TH, Tt, T1W, T2n, T1o, T19,
                    T1M, T1c, T1N, Tz;
                SIMD_FLOAT T1Y, T1f, T9, TO, TP, Tb, Tc, TR, TS, T1O, T2f, TI,
                    TA, T1Z, T2o;
                SIMD_FLOAT T1p, T1g;
                T8  = ri[WS(is, 4)];
                T1X = Tu + Tv;
                Tw  = Tu - Tv;
                T1L = T1J - T1K;
                T2e = T1K + T1J;
                TH  = Tp + Ts;
                Tt  = Tp - Ts;
                T1W = T1U - T1V;
                T2n = T1U + T1V;
                T1o = T15 + T18;
                T19 = T15 - T18;
                T1M = T1a + T1b;
                T1c = T1a - T1b;
                T1N = Tx + Ty;
                Tz  = Tx - Ty;
                T1Y = T1d + T1e;
                T1f = T1d - T1e;
                T9  = ri[WS(is, 14)];
                TO  = ii[WS(is, 4)];
                TP  = ii[WS(is, 14)];
                Tb  = ii[WS(is, 9)];
                Tc  = ii[WS(is, 19)];
                TR  = ri[WS(is, 9)];
                TS  = ri[WS(is, 19)];
                Tf  = ri[WS(is, 16)];
                T1O = T1M - T1N;
                T2f = T1N + T1M;
                TI  = Tw + Tz;
                TA  = Tw - Tz;
                T1Z = T1X - T1Y;
                T2o = T1X + T1Y;
                T1p = T1c + T1f;
                T1g = T1c - T1f;
                T21 = T8 + T9;
                Ta  = T8 - T9;
                T1C = TO + TP;
                TQ  = TO - TP;
                T1D = Tb + Tc;
                Td  = Tb - Tc;
                T22 = TR + TS;
                TT  = TR - TS;
                T1P = T1L + T1O;
                T34 = T1L - T1O;
                T3f = T2e - T2f;
                T2g = T2e + T2f;
                TJ  = TH + TI;
                T2F = TH - TI;
                T2Q = Tt - TA;
                TB  = Tt + TA;
                T2Z = T1W + T1Z;
                T20 = T1W - T1Z;
                T2p = T2n - T2o;
                T3a = T2n + T2o;
                T2L = T1o + T1p;
                T1q = T1o - T1p;
                T1h = T19 - T1g;
                T2z = T19 + T1g;
                Tg  = ri[WS(is, 6)];
                TV  = ii[WS(is, 16)];
                TW  = ii[WS(is, 6)];
                Ti  = ii[WS(is, 1)];
                Tj  = ii[WS(is, 11)];
                TY  = ri[WS(is, 1)];
                TZ  = ri[WS(is, 11)];
            }
            TE  = Ta + Td;
            Te  = Ta - Td;
            T2b = T1D + T1C;
            T1E = T1C - T1D;
            T23 = T21 - T22;
            T2k = T21 + T22;
            T1r = TQ + TT;
            TU  = TQ - TT;
            T24 = Tf + Tg;
            Th  = Tf - Tg;
            T1F = TV + TW;
            TX  = TV - TW;
            T1G = Ti + Tj;
            Tk  = Ti - Tj;
            T25 = TY + TZ;
            T10 = TY - TZ;
        }
        T1H = T1F - T1G;
        T2c = T1G + T1F;
        TF  = Th + Tk;
        Tl  = Th - Tk;
        T26 = T24 - T25;
        T2l = T24 + T25;
        T1s = TX + T10;
        T11 = TX - T10;
        T1I = T1E + T1H;
        T35 = T1E - T1H;
        T2d = T2b + T2c;
        T3e = T2b - T2c;
        TG  = TE + TF;
        T2E = TE - TF;
        Tm  = Te + Tl;
        T2R = Te - Tl;
        T2Y = T23 + T26;
        T27 = T23 - T26;
        {
            SIMD_FLOAT T39, T2m, T2K, T1t, T2y, T12, T36, T38, T1S, T1Q, T3g,
                T3i, T2h, T2i, T2G;
            SIMD_FLOAT T2I, TM, TK, T2S, T2U, T1m, TC, T28, T2a, T32, T30, T2q,
                T2s, T3b, T3c;
            T39 = T2k + T2l;
            T2m = T2k - T2l;
            T2K = T1r + T1s;
            T1t = T1r - T1s;
            T2y = TU + T11;
            T12 = TU - T11;
            T36 = SIMD_FNMADD(KP618033988, T35, T34);
            T38 = SIMD_FMADD(KP618033988, T34, T35);
            T1S = T1I - T1P;
            T1Q = T1I + T1P;
            T3g = SIMD_FMADD(KP618033988, T3f, T3e);
            T3i = SIMD_FNMADD(KP618033988, T3e, T3f);
            T2h = T1A + SIMD_FNMADD(KP250000000, T2d + T2g, T1z);
            T2i = T2d - T2g;
            T2G = SIMD_FMADD(KP618033988, T2F, T2E);
            T2I = SIMD_FNMADD(KP618033988, T2E, T2F);
            TM  = TG - TJ;
            TK  = TG + TJ;
            T2S = SIMD_FNMADD(KP618033988, T2R, T2Q);
            T2U = SIMD_FMADD(KP618033988, T2Q, T2R);
            T1m = Tm - TB;
            TC  = Tm + TB;
            T28 = SIMD_FNMADD(KP618033988, T27, T20);
            T2a = SIMD_FMADD(KP618033988, T20, T27);
            T32 = T2Y - T2Z;
            T30 = T2Y + T2Z;
            T2q = SIMD_FMADD(KP618033988, T2p, T2m);
            T2s = SIMD_FNMADD(KP618033988, T2m, T2p);
            T3b = T2V + SIMD_FNMADD(KP250000000, T39 + T3a, T2W);
            T3c = T39 - T3a;
            {
                SIMD_FLOAT T1u, T1w, T2O, T2M, T1i, T1k, T2C, T2A, T1R, T2j,
                    T2r, TL, T1l, T31, T3d;
                SIMD_FLOAT T3h, T2N, T2B, T29, T1T, T1j, TN, T1v, T1n, T37, T33,
                    T2T, T2P, T2H, T2D;
                T1u            = SIMD_FNMADD(KP618033988, T1t, T1q);
                T1w            = SIMD_FMADD(KP618033988, T1q, T1t);
                T2O            = T2K - T2L;
                T2M            = T2K + T2L;
                T1i            = SIMD_FMADD(KP618033988, T1h, T12);
                T1k            = SIMD_FNMADD(KP618033988, T12, T1h);
                T2C            = T2y - T2z;
                T2A            = T2y + T2z;
                io[WS(os, 9)]  = T1Q + T1B;
                T1R            = SIMD_FNMADD(KP250000000, T1Q, T1B);
                T2j            = SIMD_FMADD(KP559016994, T2i, T2h);
                T2r            = SIMD_FNMADD(KP559016994, T2i, T2h);
                ro[WS(os, 4)]  = TD + TK;
                TL             = SIMD_FNMADD(KP250000000, TK, TD);
                ro[WS(os, 14)] = T7 + TC;
                T1l            = SIMD_FNMADD(KP250000000, TC, T7);
                ro[WS(os, 9)]  = T30 + T2X;
                T31            = SIMD_FNMADD(KP250000000, T30, T2X);
                T3d            = SIMD_FMADD(KP559016994, T3c, T3b);
                T3h            = SIMD_FNMADD(KP559016994, T3c, T3b);
                io[WS(os, 14)] = T2M + T2J;
                T2N            = SIMD_FNMADD(KP250000000, T2M, T2J);
                io[WS(os, 4)]  = T2A + T2x;
                T2B            = SIMD_FNMADD(KP250000000, T2A, T2x);
                T29            = SIMD_FMADD(KP559016994, T1S, T1R);
                T1T            = SIMD_FNMADD(KP559016994, T1S, T1R);
                io[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2s, T2r);
                io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2s, T2r);
                io[WS(os, 15)] = SIMD_FNMADD(KP951056516, T2q, T2j);
                io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2q, T2j);
                T1j            = SIMD_FNMADD(KP559016994, TM, TL);
                TN             = SIMD_FMADD(KP559016994, TM, TL);
                T1v            = SIMD_FMADD(KP559016994, T1m, T1l);
                T1n            = SIMD_FNMADD(KP559016994, T1m, T1l);
                T37            = SIMD_FMADD(KP559016994, T32, T31);
                T33            = SIMD_FNMADD(KP559016994, T32, T31);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T3i, T3h);
                ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T3i, T3h);
                ro[WS(os, 15)] = SIMD_FMADD(KP951056516, T3g, T3d);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T3g, T3d);
                T2T            = SIMD_FMADD(KP559016994, T2O, T2N);
                T2P            = SIMD_FNMADD(KP559016994, T2O, T2N);
                T2H            = SIMD_FNMADD(KP559016994, T2C, T2B);
                T2D            = SIMD_FMADD(KP559016994, T2C, T2B);
                io[WS(os, 17)] = SIMD_FNMADD(KP951056516, T28, T1T);
                io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T28, T1T);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, T2a, T29);
                io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T2a, T29);
                ro[0]          = SIMD_FMADD(KP951056516, T1i, TN);
                ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1i, TN);
                ro[WS(os, 12)] = SIMD_FMADD(KP951056516, T1k, T1j);
                ro[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1k, T1j);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1u, T1n);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1u, T1n);
                ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1w, T1v);
                ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1w, T1v);
                ro[WS(os, 17)] = SIMD_FMADD(KP951056516, T36, T33);
                ro[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T36, T33);
                ro[WS(os, 13)] = SIMD_FNMADD(KP951056516, T38, T37);
                ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T38, T37);
                io[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2S, T2P);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2S, T2P);
                io[WS(os, 18)] = SIMD_FMADD(KP951056516, T2U, T2T);
                io[WS(os, 10)] = SIMD_FNMADD(KP951056516, T2U, T2T);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2G, T2D);
                io[0]          = SIMD_FNMADD(KP951056516, T2G, T2D);
                io[WS(os, 16)] = SIMD_FMADD(KP951056516, T2I, T2H);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2I, T2H);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 2>
{
    static constexpr long_t flops           = 274;
    static constexpr long_t operations      = 204;
    static constexpr long_t memory_accesses = 76;
    static constexpr long_t stack_vars      = 148;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 204 FP additions, 70 FP multiplications,
 * (or, 134 additions, 0 multiplications, 70 fused multiply/add),
 * 148 stack variables, 4 constants, and 76 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T3, T2V, T6, T2W, T2g, T1z, T7, T2X, T2x, T2M, T1N, T2F, T2O,
            T2e, T1f;
        SIMD_FLOAT T3e, T35, Tm, T2z, T25, T2k, T2K, T3a, T1r, T19, T2Z, T1g,
            Tt, T1C, T29;
        SIMD_FLOAT T2l, T1U, TM, T1m, T2a, T1F, T1h, TA, T2m, T1X, T1n, TT, T1V,
            Tw, T1E;
        SIMD_FLOAT TP, T1D, Tz, T1W, TS, T1, T2, T1w, T1x, T4, T5, T2u, T2v,
            T2b, T2P;
        SIMD_FLOAT T1G, T2E, T1i, T3f, TB, T34, T2n, T2J;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1w = ii[0];
        T1x = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T2u = ii[WS(is, 5)];
        T2v = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1Z, Ta, T1I, TX, Tf, Tg, T12, T1H, Td, T20, T10, T13,
                Ti, Tj, T15;
            SIMD_FLOAT T16, Tb, T2t, T1y, T1v, T2w, Tc, TY, TZ, T8, T9, TV, TW,
                Tu, T1S;
            SIMD_FLOAT Tp, T1B, TI, T1A, Ts, T1T, TL, Tv, TN, TO, Tx, Ty, TQ,
                TR;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TV  = ii[WS(is, 4)];
            TW  = ii[WS(is, 14)];
            Tb  = ri[WS(is, 9)];
            T2t = T1 - T2;
            T3  = T1 + T2;
            T2V = T1w + T1x;
            T1y = T1w - T1x;
            T1v = T4 - T5;
            T6  = T4 + T5;
            T2W = T2u + T2v;
            T2w = T2u - T2v;
            T1Z = T8 - T9;
            Ta  = T8 + T9;
            T1I = TV - TW;
            TX  = TV + TW;
            Tc  = ri[WS(is, 19)];
            TY  = ii[WS(is, 9)];
            TZ  = ii[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T2g = T1y - T1v;
            T1z = T1v + T1y;
            T7  = T3 - T6;
            T2X = T2V - T2W;
            T2x = T2t - T2w;
            T2M = T2t + T2w;
            Tg  = ri[WS(is, 6)];
            T12 = ii[WS(is, 16)];
            T1H = Tb - Tc;
            Td  = Tb + Tc;
            T20 = TY - TZ;
            T10 = TY + TZ;
            T13 = ii[WS(is, 6)];
            Ti  = ri[WS(is, 1)];
            Tj  = ri[WS(is, 11)];
            T15 = ii[WS(is, 1)];
            T16 = ii[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T22, Th, T1J, T2c, T1d, Te, T21, T2i, T1p, T11,
                    T1L, T14, T1K, Tk;
                SIMD_FLOAT T23, T17, To, TG, TH, Tq, Tr, TJ, TK, T1M, T2d, T1e,
                    Tl, T24, T2j;
                SIMD_FLOAT T1q, T18;
                Tn  = ri[WS(is, 8)];
                T22 = Tf - Tg;
                Th  = Tf + Tg;
                T1J = T1H + T1I;
                T2c = T1I - T1H;
                T1d = Ta + Td;
                Te  = Ta - Td;
                T21 = T1Z - T20;
                T2i = T1Z + T20;
                T1p = TX + T10;
                T11 = TX - T10;
                T1L = T12 - T13;
                T14 = T12 + T13;
                T1K = Ti - Tj;
                Tk  = Ti + Tj;
                T23 = T15 - T16;
                T17 = T15 + T16;
                To  = ri[WS(is, 18)];
                TG  = ii[WS(is, 8)];
                TH  = ii[WS(is, 18)];
                Tq  = ri[WS(is, 13)];
                Tr  = ri[WS(is, 3)];
                TJ  = ii[WS(is, 13)];
                TK  = ii[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T1M = T1K + T1L;
                T2d = T1L - T1K;
                T1e = Th + Tk;
                Tl  = Th - Tk;
                T24 = T22 - T23;
                T2j = T22 + T23;
                T1q = T14 + T17;
                T18 = T14 - T17;
                T1S = Tn - To;
                Tp  = Tn + To;
                T1B = TG - TH;
                TI  = TG + TH;
                T1A = Tq - Tr;
                Ts  = Tq + Tr;
                T1T = TJ - TK;
                TL  = TJ + TK;
                T1N = T1J + T1M;
                T2F = T1J - T1M;
                T2O = T2d - T2c;
                T2e = T2c + T2d;
                T1f = T1d + T1e;
                T3e = T1d - T1e;
                T35 = Te - Tl;
                Tm  = Te + Tl;
                T2z = T21 + T24;
                T25 = T21 - T24;
                T2k = T2i - T2j;
                T2K = T2i + T2j;
                T3a = T1p + T1q;
                T1r = T1p - T1q;
                T19 = T11 - T18;
                T2Z = T11 + T18;
                Tv  = ri[WS(is, 2)];
                TN  = ii[WS(is, 12)];
                TO  = ii[WS(is, 2)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 7)];
                TQ  = ii[WS(is, 17)];
                TR  = ii[WS(is, 7)];
            }
            T1g = Tp + Ts;
            Tt  = Tp - Ts;
            T1C = T1A + T1B;
            T29 = T1B - T1A;
            T2l = T1S + T1T;
            T1U = T1S - T1T;
            TM  = TI - TL;
            T1m = TI + TL;
            T1V = Tu - Tv;
            Tw  = Tu + Tv;
            T1E = TN - TO;
            TP  = TN + TO;
            T1D = Tx - Ty;
            Tz  = Tx + Ty;
            T1W = TQ - TR;
            TS  = TQ + TR;
        }
        T2a = T1E - T1D;
        T1F = T1D + T1E;
        T1h = Tw + Tz;
        TA  = Tw - Tz;
        T2m = T1V + T1W;
        T1X = T1V - T1W;
        T1n = TP + TS;
        TT  = TP - TS;
        T2b = T29 + T2a;
        T2P = T29 - T2a;
        T1G = T1C + T1F;
        T2E = T1C - T1F;
        T1i = T1g + T1h;
        T3f = T1g - T1h;
        TB  = Tt + TA;
        T34 = Tt - TA;
        T2n = T2l - T2m;
        T2J = T2l + T2m;
        {
            SIMD_FLOAT T2y, T1Y, T39, T1o, T2Y, TU, T2U, T2o, T2f, T2I, T2G,
                T1O, T1Q, T3i, T3g;
            SIMD_FLOAT T1j, T1k, T38, T36, TC, TE, T2Q, T2L, T2s, T26, T28, T2C,
                T2A, T1s, T1u;
            T2y = T1U + T1X;
            T1Y = T1U - T1X;
            T39 = T1m + T1n;
            T1o = T1m - T1n;
            T2Y = TM + TT;
            TU  = TM - TT;
            T2U = SIMD_FMADD(KP618033988, T2O, T2P);
            T2o = T2e - T2b;
            T2f = T2b + T2e;
            T2I = SIMD_FMADD(KP618033988, T2E, T2F);
            T2G = SIMD_FNMADD(KP618033988, T2F, T2E);
            T1O = T1G + T1N;
            T1Q = T1N - T1G;
            T3i = SIMD_FNMADD(KP618033988, T3e, T3f);
            T3g = SIMD_FMADD(KP618033988, T3f, T3e);
            T1j = T3 + SIMD_FNMADD(KP250000000, T1f + T1i, T6);
            T1k = T1f - T1i;
            T38 = SIMD_FMADD(KP618033988, T34, T35);
            T36 = SIMD_FNMADD(KP618033988, T35, T34);
            TC  = Tm + TB;
            TE  = Tm - TB;
            T2Q = T2K - T2J;
            T2L = T2J + T2K;
            T2s = SIMD_FNMADD(KP618033988, T2k, T2n);
            T26 = SIMD_FNMADD(KP618033988, T25, T1Y);
            T28 = SIMD_FMADD(KP618033988, T1Y, T25);
            T2C = T2z - T2y;
            T2A = T2y + T2z;
            T1s = SIMD_FNMADD(KP618033988, T1r, T1o);
            T1u = SIMD_FMADD(KP618033988, T1o, T1r);
            {
                SIMD_FLOAT T3b, T3c, T1a, T1c, T32, T30, T2p, T2h, T1P, T1t,
                    T1l, TD, T2R, T2N, T2B;
                SIMD_FLOAT T3d, T3h, T31, T2q, T2r, T27, T1R, T1b, TF, T2S, T2T,
                    T2H, T2D, T37, T33;
                T3b            = T2V + SIMD_FNMADD(KP250000000, T39 + T3a, T2W);
                T3c            = T3a - T39;
                T1a            = SIMD_FNMADD(KP618033988, T19, TU);
                T1c            = SIMD_FMADD(KP618033988, TU, T19);
                T32            = T2Z - T2Y;
                T30            = T2Y + T2Z;
                T2p            = SIMD_FMADD(KP951056516, T2o, T2n);
                io[WS(os, 3)]  = T2f + T2g;
                T2h            = SIMD_FNMADD(KP250000000, T2f, T2g);
                io[WS(os, 13)] = T1O + T1z;
                T1P            = SIMD_FNMADD(KP250000000, T1O, T1z);
                T1t            = SIMD_FMADD(KP559016994, T1k, T1j);
                T1l            = SIMD_FNMADD(KP559016994, T1k, T1j);
                ro[WS(os, 8)]  = T7 + TC;
                TD             = SIMD_FNMADD(KP250000000, TC, T7);
                T2R            = SIMD_FNMADD(KP951056516, T2Q, T2P);
                ro[WS(os, 3)]  = T2L + T2M;
                T2N            = SIMD_FNMADD(KP250000000, T2L, T2M);
                ro[WS(os, 13)] = T2A + T2x;
                T2B            = SIMD_FNMADD(KP250000000, T2A, T2x);
                T3d            = SIMD_FMADD(KP559016994, T3c, T3b);
                T3h            = SIMD_FNMADD(KP559016994, T3c, T3b);
                io[WS(os, 8)]  = T30 + T2X;
                T31            = SIMD_FNMADD(KP250000000, T30, T2X);
                T2q            = SIMD_FMADD(KP618033988, T2p, T2k);
                T2r            = SIMD_FNMADD(KP559016994, T2o, T2h);
                T27            = SIMD_FMADD(KP559016994, T1Q, T1P);
                T1R            = SIMD_FNMADD(KP559016994, T1Q, T1P);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 14)] = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1s, T1l);
                ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1s, T1l);
                T1b            = SIMD_FMADD(KP559016994, TE, TD);
                TF             = SIMD_FNMADD(KP559016994, TE, TD);
                T2S            = SIMD_FNMADD(KP618033988, T2R, T2O);
                T2T            = SIMD_FNMADD(KP559016994, T2Q, T2N);
                T2H            = SIMD_FMADD(KP559016994, T2C, T2B);
                T2D            = SIMD_FNMADD(KP559016994, T2C, T2B);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T3i, T3h);
                io[WS(os, 10)] = SIMD_FMADD(KP951056516, T3i, T3h);
                io[WS(os, 14)] = SIMD_FNMADD(KP951056516, T3g, T3d);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T3g, T3d);
                T37            = SIMD_FMADD(KP559016994, T32, T31);
                T33            = SIMD_FNMADD(KP559016994, T32, T31);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2q, T2h);
                io[WS(os, 15)] = SIMD_FMADD(KP951056516, T2s, T2r);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2s, T2r);
                io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T26, T1R);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T26, T1R);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T28, T27);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1a, TF);
                ro[0]          = SIMD_FNMADD(KP951056516, T1a, TF);
                ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1c, T1b);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1c, T1b);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2S, T2N);
                ro[WS(os, 15)] = SIMD_FNMADD(KP951056516, T2U, T2T);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2U, T2T);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T2G, T2D);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2G, T2D);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T2I, T2H);
                ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2I, T2H);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T36, T33);
                io[0]          = SIMD_FMADD(KP951056516, T36, T33);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T38, T37);
                io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T38, T37);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 3>
{
    static constexpr long_t flops           = 270;
    static constexpr long_t operations      = 202;
    static constexpr long_t memory_accesses = 74;
    static constexpr long_t stack_vars      = 149;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 202 FP additions, 68 FP multiplications,
 * (or, 134 additions, 0 multiplications, 68 fused multiply/add),
 * 149 stack variables, 5 constants, and 74 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2V, T1A, T1x, T2W, T29, T7, TD, T2X, T2A, T2J, T34, T2c,
            T1H, T3e, T2C;
        SIMD_FLOAT TG, Tm, T2R, T2m, T2Y, T39, T1Y, T1t, T2K, T2t, T10, Tt, TH,
            T2n, T21;
        SIMD_FLOAT T2d, T1K, T17, T1o, T2e, T1N, TA, TI, T24, T2o, T1p, T1e, Tw,
            T22, T1a;
        SIMD_FLOAT T1M, Tz, T1L, T1d, T23, T1, T2, T1y, T1z, T4, T5, T2x, T2y,
            T1O, T3f;
        SIMD_FLOAT T2f, T35, TJ, T2D, TB, T2Q, T2p, T2Z;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1y = ii[0];
        T1z = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T2x = ri[WS(is, 5)];
        T2y = ri[WS(is, 15)];
        {
            SIMD_FLOAT T1S, Ta, T1F, TV, Tf, Tg, TM, T1E, Td, T1T, TY, TN, Ti,
                Tj, TP;
            SIMD_FLOAT TQ, Tb, T3, T2w, T6, T2z, Tc, TW, TX, T8, T9, TT, TU, Tu,
                T1Z;
            SIMD_FLOAT Tp, T1J, T13, T1I, Ts, T20, T16, Tv, T18, T19, Tx, Ty,
                T1b, T1c;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TT  = ii[WS(is, 4)];
            TU  = ii[WS(is, 14)];
            Tb  = ii[WS(is, 9)];
            T2V = T1 + T2;
            T3  = T1 - T2;
            T2w = T1y - T1z;
            T1A = T1y + T1z;
            T1x = T4 + T5;
            T6  = T4 - T5;
            T2W = T2x + T2y;
            T2z = T2x - T2y;
            T1S = T8 + T9;
            Ta  = T8 - T9;
            T1F = TT + TU;
            TV  = TT - TU;
            Tc  = ii[WS(is, 19)];
            TW  = ri[WS(is, 9)];
            TX  = ri[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T29 = T1A - T1x;
            T7  = T3 - T6;
            TD  = T3 + T6;
            T2X = T2V - T2W;
            T2A = T2w - T2z;
            T2J = T2w + T2z;
            Tg  = ri[WS(is, 6)];
            TM  = ii[WS(is, 16)];
            T1E = Tb + Tc;
            Td  = Tb - Tc;
            T1T = TW + TX;
            TY  = TW - TX;
            TN  = ii[WS(is, 6)];
            Ti  = ii[WS(is, 1)];
            Tj  = ii[WS(is, 11)];
            TP  = ri[WS(is, 1)];
            TQ  = ri[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T1V, Th, T2b, T1G, TE, Te, T2k, T1U, T1r, TZ,
                    T1C, TO, T1B, Tk;
                SIMD_FLOAT T1W, TR, To, T11, T12, Tq, Tr, T14, T15, T2a, T1D,
                    TF, Tl, T2l, T1X;
                SIMD_FLOAT T1s, TS;
                Tn  = ri[WS(is, 8)];
                T1V = Tf + Tg;
                Th  = Tf - Tg;
                T2b = T1F - T1E;
                T1G = T1E + T1F;
                TE  = Ta + Td;
                Te  = Ta - Td;
                T2k = T1S - T1T;
                T1U = T1S + T1T;
                T1r = TV + TY;
                TZ  = TV - TY;
                T1C = TM + TN;
                TO  = TM - TN;
                T1B = Ti + Tj;
                Tk  = Ti - Tj;
                T1W = TP + TQ;
                TR  = TP - TQ;
                To  = ri[WS(is, 18)];
                T11 = ii[WS(is, 8)];
                T12 = ii[WS(is, 18)];
                Tq  = ii[WS(is, 13)];
                Tr  = ii[WS(is, 3)];
                T14 = ri[WS(is, 13)];
                T15 = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T2a = T1C - T1B;
                T1D = T1B + T1C;
                TF  = Th + Tk;
                Tl  = Th - Tk;
                T2l = T1V - T1W;
                T1X = T1V + T1W;
                T1s = TO + TR;
                TS  = TO - TR;
                T1Z = Tn + To;
                Tp  = Tn - To;
                T1J = T11 + T12;
                T13 = T11 - T12;
                T1I = Tq + Tr;
                Ts  = Tq - Tr;
                T20 = T14 + T15;
                T16 = T14 - T15;
                T34 = T2b - T2a;
                T2c = T2a + T2b;
                T1H = T1D + T1G;
                T3e = T1G - T1D;
                T2C = TE - TF;
                TG  = TE + TF;
                Tm  = Te + Tl;
                T2R = Te - Tl;
                T2m = T2k - T2l;
                T2Y = T2l + T2k;
                T39 = T1X + T1U;
                T1Y = T1U - T1X;
                T1t = T1r - T1s;
                T2K = T1s + T1r;
                T2t = TS + TZ;
                T10 = TS - TZ;
                Tv  = ri[WS(is, 2)];
                T18 = ii[WS(is, 12)];
                T19 = ii[WS(is, 2)];
                Tx  = ii[WS(is, 17)];
                Ty  = ii[WS(is, 7)];
                T1b = ri[WS(is, 17)];
                T1c = ri[WS(is, 7)];
            }
            Tt  = Tp - Ts;
            TH  = Tp + Ts;
            T2n = T1Z - T20;
            T21 = T1Z + T20;
            T2d = T1J - T1I;
            T1K = T1I + T1J;
            T17 = T13 - T16;
            T1o = T13 + T16;
            Tw  = Tu - Tv;
            T22 = Tu + Tv;
            T1a = T18 - T19;
            T1M = T18 + T19;
            Tz  = Tx - Ty;
            T1L = Tx + Ty;
            T1d = T1b - T1c;
            T23 = T1b + T1c;
        }
        T2e = T1M - T1L;
        T1N = T1L + T1M;
        TA  = Tw - Tz;
        TI  = Tw + Tz;
        T24 = T22 + T23;
        T2o = T22 - T23;
        T1p = T1a + T1d;
        T1e = T1a - T1d;
        T1O = T1K + T1N;
        T3f = T1K - T1N;
        T2f = T2d + T2e;
        T35 = T2d - T2e;
        TJ  = TH + TI;
        T2D = TH - TI;
        TB  = Tt + TA;
        T2Q = Tt - TA;
        T2p = T2n - T2o;
        T2Z = T2n + T2o;
        {
            SIMD_FLOAT T3a, T25, T1f, T2u, T2L, T1q, T3g, T3i, T1P, T1Q, T36,
                T2i, T2g, T2I, TK;
            SIMD_FLOAT T1g, T2S, T2U, T1m, TC, T30, T32, T2q, T28, T26, T3b,
                T3c, T2E, T2v, T1k;
            T3a = T21 + T24;
            T25 = T21 - T24;
            T1f = T17 - T1e;
            T2u = T17 + T1e;
            T2L = T1o + T1p;
            T1q = T1o - T1p;
            T3g = SIMD_FMADD(KP618033988, T3f, T3e);
            T3i = SIMD_FNMADD(KP618033988, T3e, T3f);
            T1P = T1x + SIMD_FNMADD(KP250000000, T1H + T1O, T1A);
            T1Q = T1H - T1O;
            T36 = SIMD_FMADD(KP618033988, T35, T34);
            T2i = T2c - T2f;
            T2g = T2c + T2f;
            T2I = SIMD_FNMADD(KP618033988, T2C, T2D);
            TK  = TG + TJ;
            T1g = TG - TJ;
            T2S = SIMD_FNMADD(KP618033988, T2R, T2Q);
            T2U = SIMD_FMADD(KP618033988, T2Q, T2R);
            T1m = Tm - TB;
            TC  = Tm + TB;
            T30 = T2Y + T2Z;
            T32 = T2Y - T2Z;
            T2q = SIMD_FMADD(KP618033988, T2p, T2m);
            T28 = SIMD_FNMADD(KP618033988, T1Y, T25);
            T26 = SIMD_FMADD(KP618033988, T25, T1Y);
            T3b = T2V + SIMD_FNMADD(KP250000000, T39 + T3a, T2W);
            T3c = T39 - T3a;
            T2E = T2t - T2u;
            T2v = T2t + T2u;
            T1k = SIMD_FMADD(KP618033988, T10, T1f);
            {
                SIMD_FLOAT T1u, T1w, T2O, T2M, T1R, T27, T2r, T2h, T1h, TL, T1l,
                    T37, T31, T3h, T3d;
                SIMD_FLOAT T2F, T2B, T2N, T2s, T2j, T1i, T1j, T1v, T1n, T38,
                    T33, T2G, T2H, T2T, T2P;
                T1u            = SIMD_FNMADD(KP618033988, T1t, T1q);
                T1w            = SIMD_FMADD(KP618033988, T1q, T1t);
                T2O            = T2K - T2L;
                T2M            = T2K + T2L;
                T1R            = SIMD_FMADD(KP559016994, T1Q, T1P);
                T27            = SIMD_FNMADD(KP559016994, T1Q, T1P);
                T2r            = SIMD_FMADD(KP587785252, T2i, T2p);
                io[WS(os, 7)]  = T2g + T29;
                T2h            = SIMD_FNMADD(KP250000000, T2g, T29);
                T1h            = SIMD_FNMADD(KP951056516, T1g, T1f);
                ro[WS(os, 2)]  = TD + TK;
                TL             = SIMD_FNMADD(KP250000000, TK, TD);
                ro[WS(os, 12)] = T7 + TC;
                T1l            = SIMD_FNMADD(KP250000000, TC, T7);
                T37            = SIMD_FMADD(KP951056516, T32, T34);
                ro[WS(os, 7)]  = T30 + T2X;
                T31            = SIMD_FNMADD(KP250000000, T30, T2X);
                T3h            = SIMD_FNMADD(KP559016994, T3c, T3b);
                T3d            = SIMD_FMADD(KP559016994, T3c, T3b);
                T2F            = SIMD_FMADD(KP951056516, T2E, T2D);
                io[WS(os, 2)]  = T2v + T2A;
                T2B            = SIMD_FNMADD(KP250000000, T2v, T2A);
                io[WS(os, 12)] = T2M + T2J;
                T2N            = SIMD_FNMADD(KP250000000, T2M, T2J);
                io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T28, T27);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T26, T1R);
                io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T26, T1R);
                T2s            = SIMD_FNMADD(KP618033988, T2m, T2r);
                T2j            = SIMD_FMADD(KP559016994, T2i, T2h);
                T1i            = SIMD_FNMADD(KP618033988, T1h, T10);
                T1j            = SIMD_FNMADD(KP559016994, T1g, TL);
                T1v            = SIMD_FMADD(KP559016994, T1m, T1l);
                T1n            = SIMD_FNMADD(KP559016994, T1m, T1l);
                T38            = SIMD_FNMADD(KP618033988, T37, T35);
                T33            = SIMD_FMADD(KP559016994, T32, T31);
                ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T3i, T3h);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T3i, T3h);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T3g, T3d);
                ro[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T3g, T3d);
                T2G            = SIMD_FMADD(KP618033988, T2F, T2C);
                T2H            = SIMD_FNMADD(KP559016994, T2E, T2B);
                T2T            = SIMD_FMADD(KP559016994, T2O, T2N);
                T2P            = SIMD_FNMADD(KP559016994, T2O, T2N);
                io[WS(os, 15)] = SIMD_FNMADD(KP951056516, T2s, T2h);
                io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2q, T2j);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2q, T2j);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1i, TL);
                ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1k, T1j);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1k, T1j);
                ro[0]          = SIMD_FMADD(KP951056516, T1u, T1n);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1u, T1n);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1w, T1v);
                ro[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1w, T1v);
                ro[WS(os, 15)] = SIMD_FMADD(KP951056516, T38, T31);
                ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T36, T33);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T36, T33);
                io[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2G, T2B);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2I, T2H);
                io[WS(os, 10)] = SIMD_FNMADD(KP951056516, T2I, T2H);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2S, T2P);
                io[0]          = SIMD_FNMADD(KP951056516, T2S, T2P);
                io[WS(os, 16)] = SIMD_FMADD(KP951056516, T2U, T2T);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2U, T2T);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 4>
{
    static constexpr long_t flops           = 266;
    static constexpr long_t operations      = 200;
    static constexpr long_t memory_accesses = 72;
    static constexpr long_t stack_vars      = 149;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 200 FP additions, 66 FP multiplications,
 * (or, 134 additions, 0 multiplications, 66 fused multiply/add),
 * 149 stack variables, 5 constants, and 72 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T3, T2V, T6, T2W, T29, T1O, T7, T2X, T2x, T2M, T1B, T2O, T2F,
            T2c, TF;
        SIMD_FLOAT T3e, T34, Tm, T2y, T2n, T2J, T1W, T1o, T2Y, T10, T39, Tt, TG,
            T1p, T17;
        SIMD_FLOAT T1Z, T2i, T1E, T2d, T1H, T2e, TA, TH, T22, T2j, T1e, T1q,
            T20, Tw, T1F;
        SIMD_FLOAT T1a, T1G, Tz, T21, T1d, T1, T2, T1K, T1L, T4, T5, T2u, T2v,
            T1I, T2P;
        SIMD_FLOAT T2f, T2C, TB, T35, TI, T3f, T23, T2K;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1K = ii[0];
        T1L = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T2u = ii[WS(is, 5)];
        T2v = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1Q, Ta, T1v, TO, Tf, Tg, TT, T1w, Td, T1R, TR, TU, Ti,
                Tj, TW;
            SIMD_FLOAT TX, Tb, T2t, T1M, T1N, T2w, Tc, TP, TQ, T8, T9, TM, TN,
                Tu, T1X;
            SIMD_FLOAT Tp, T1C, T13, T1D, Ts, T1Y, T16, Tv, T18, T19, Tx, Ty,
                T1b, T1c;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TM  = ii[WS(is, 4)];
            TN  = ii[WS(is, 14)];
            Tb  = ri[WS(is, 9)];
            T2t = T1 - T2;
            T3  = T1 + T2;
            T2V = T1K + T1L;
            T1M = T1K - T1L;
            T1N = T4 - T5;
            T6  = T4 + T5;
            T2W = T2u + T2v;
            T2w = T2u - T2v;
            T1Q = T8 - T9;
            Ta  = T8 + T9;
            T1v = TM - TN;
            TO  = TM + TN;
            Tc  = ri[WS(is, 19)];
            TP  = ii[WS(is, 9)];
            TQ  = ii[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T29 = T1N + T1M;
            T1O = T1M - T1N;
            T7  = T3 - T6;
            T2X = T2V - T2W;
            T2x = T2t - T2w;
            T2M = T2t + T2w;
            Tg  = ri[WS(is, 6)];
            TT  = ii[WS(is, 16)];
            T1w = Tb - Tc;
            Td  = Tb + Tc;
            T1R = TP - TQ;
            TR  = TP + TQ;
            TU  = ii[WS(is, 6)];
            Ti  = ri[WS(is, 1)];
            Tj  = ri[WS(is, 11)];
            TW  = ii[WS(is, 1)];
            TX  = ii[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T1T, Th, T1x, T2a, TD, Te, T2l, T1S, T1m, TS,
                    T1y, TV, T1z, Tk;
                SIMD_FLOAT T1U, TY, To, T11, T12, Tq, Tr, T14, T15, T1A, T2b,
                    TE, Tl, T2m, T1V;
                SIMD_FLOAT T1n, TZ;
                Tn  = ri[WS(is, 8)];
                T1T = Tf - Tg;
                Th  = Tf + Tg;
                T1x = T1v - T1w;
                T2a = T1w + T1v;
                TD  = Ta + Td;
                Te  = Ta - Td;
                T2l = T1Q - T1R;
                T1S = T1Q + T1R;
                T1m = TO - TR;
                TS  = TO + TR;
                T1y = TT - TU;
                TV  = TT + TU;
                T1z = Ti - Tj;
                Tk  = Ti + Tj;
                T1U = TW - TX;
                TY  = TW + TX;
                To  = ri[WS(is, 18)];
                T11 = ii[WS(is, 8)];
                T12 = ii[WS(is, 18)];
                Tq  = ri[WS(is, 13)];
                Tr  = ri[WS(is, 3)];
                T14 = ii[WS(is, 13)];
                T15 = ii[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T1A = T1y - T1z;
                T2b = T1z + T1y;
                TE  = Th + Tk;
                Tl  = Th - Tk;
                T2m = T1T - T1U;
                T1V = T1T + T1U;
                T1n = TV - TY;
                TZ  = TV + TY;
                T1X = Tn - To;
                Tp  = Tn + To;
                T1C = T11 - T12;
                T13 = T11 + T12;
                T1D = Tq - Tr;
                Ts  = Tq + Tr;
                T1Y = T14 - T15;
                T16 = T14 + T15;
                T1B = T1x + T1A;
                T2O = T1A - T1x;
                T2F = T2a - T2b;
                T2c = T2a + T2b;
                TF  = TD + TE;
                T3e = TD - TE;
                T34 = Te - Tl;
                Tm  = Te + Tl;
                T2y = T2l + T2m;
                T2n = T2l - T2m;
                T2J = T1S + T1V;
                T1W = T1S - T1V;
                T1o = T1m - T1n;
                T2Y = T1m + T1n;
                T10 = TS - TZ;
                T39 = TS + TZ;
                Tv  = ri[WS(is, 2)];
                T18 = ii[WS(is, 12)];
                T19 = ii[WS(is, 2)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 7)];
                T1b = ii[WS(is, 17)];
                T1c = ii[WS(is, 7)];
            }
            Tt  = Tp - Ts;
            TG  = Tp + Ts;
            T1p = T13 - T16;
            T17 = T13 + T16;
            T1Z = T1X + T1Y;
            T2i = T1X - T1Y;
            T20 = Tu - Tv;
            Tw  = Tu + Tv;
            T1F = T18 - T19;
            T1a = T18 + T19;
            T1G = Tx - Ty;
            Tz  = Tx + Ty;
            T21 = T1b - T1c;
            T1d = T1b + T1c;
            T1E = T1C - T1D;
            T2d = T1D + T1C;
        }
        T1H = T1F - T1G;
        T2e = T1G + T1F;
        TA  = Tw - Tz;
        TH  = Tw + Tz;
        T22 = T20 + T21;
        T2j = T20 - T21;
        T1e = T1a + T1d;
        T1q = T1a - T1d;
        T1I = T1E + T1H;
        T2P = T1E - T1H;
        T2f = T2d + T2e;
        T2C = T2d - T2e;
        TB  = Tt + TA;
        T35 = Tt - TA;
        TI  = TG + TH;
        T3f = TG - TH;
        T23 = T1Z - T22;
        T2K = T1Z + T22;
        {
            SIMD_FLOAT T2z, T2k, T3a, T1f, T2Z, T1r, T2U, T24, T1J, T2I, T2g,
                T2o, T36, T1k, TC;
            SIMD_FLOAT T3i, T3g, TJ, TK, T2Q, T2L, T28, T2s, T2D, T2A, T1i, T1g,
                T3b, T3c, T1s;
            T2z = T2i + T2j;
            T2k = T2i - T2j;
            T3a = T17 + T1e;
            T1f = T17 - T1e;
            T2Z = T1p + T1q;
            T1r = T1p - T1q;
            T2U = SIMD_FMADD(KP618033988, T2O, T2P);
            T24 = T1B - T1I;
            T1J = T1B + T1I;
            T2I = SIMD_FMADD(KP618033988, T2C, T2F);
            T2g = T2c + T2f;
            T2o = T2c - T2f;
            T36 = SIMD_FMADD(KP618033988, T35, T34);
            T1k = Tm - TB;
            TC  = Tm + TB;
            T3i = SIMD_FNMADD(KP618033988, T3e, T3f);
            T3g = SIMD_FMADD(KP618033988, T3f, T3e);
            TJ  = T3 + SIMD_FNMADD(KP250000000, TF + TI, T6);
            TK  = TF - TI;
            T2Q = T2J - T2K;
            T2L = T2J + T2K;
            T28 = SIMD_FNMADD(KP618033988, T1W, T23);
            T2s = SIMD_FMADD(KP618033988, T2k, T2n);
            T2D = T2y - T2z;
            T2A = T2y + T2z;
            T1i = SIMD_FNMADD(KP618033988, T10, T1f);
            T1g = SIMD_FMADD(KP618033988, T1f, T10);
            T3b = T2V + SIMD_FNMADD(KP250000000, T39 + T3a, T2W);
            T3c = T39 - T3a;
            T1s = SIMD_FMADD(KP618033988, T1r, T1o);
            {
                SIMD_FLOAT T30, T32, T25, T1P, T2p, T2h, T1t, T1j, T1h, TL, T2R,
                    T2N, T2E, T2B, T3h;
                SIMD_FLOAT T3d, T37, T31, T26, T27, T2q, T2r, T1u, T1l, T2S,
                    T2T, T2G, T2H, T38, T33;
                T30            = T2Y + T2Z;
                T32            = T2Y - T2Z;
                T25            = SIMD_FMADD(KP951056516, T24, T23);
                io[WS(os, 1)]  = T1J + T1O;
                T1P            = SIMD_FNMADD(KP250000000, T1J, T1O);
                T2p            = SIMD_FMADD(KP951056516, T2o, T2n);
                io[WS(os, 11)] = T2g + T29;
                T2h            = SIMD_FNMADD(KP250000000, T2g, T29);
                T1t            = SIMD_FMADD(KP951056516, T1k, T1o);
                ro[WS(os, 6)]  = T7 + TC;
                T1j            = SIMD_FNMADD(KP250000000, TC, T7);
                T1h            = SIMD_FNMADD(KP559016994, TK, TJ);
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                T2R            = SIMD_FNMADD(KP951056516, T2Q, T2P);
                ro[WS(os, 1)]  = T2L + T2M;
                T2N            = SIMD_FNMADD(KP250000000, T2L, T2M);
                T2E            = SIMD_FMADD(KP587785252, T2D, T2C);
                ro[WS(os, 11)] = T2A + T2x;
                T2B            = SIMD_FNMADD(KP250000000, T2A, T2x);
                T3h            = SIMD_FNMADD(KP559016994, T3c, T3b);
                T3d            = SIMD_FMADD(KP559016994, T3c, T3b);
                T37            = SIMD_FMADD(KP587785252, T32, T35);
                io[WS(os, 6)]  = T30 + T2X;
                T31            = SIMD_FNMADD(KP250000000, T30, T2X);
                T26            = SIMD_FMADD(KP618033988, T25, T1W);
                T27            = SIMD_FNMADD(KP559016994, T24, T1P);
                T2q            = SIMD_FNMADD(KP618033988, T2p, T2k);
                T2r            = SIMD_FMADD(KP559016994, T2o, T2h);
                T1u            = SIMD_FNMADD(KP618033988, T1t, T1r);
                T1l            = SIMD_FMADD(KP559016994, T1k, T1j);
                ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1i, T1h);
                ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1i, T1h);
                ro[WS(os, 12)] = SIMD_FMADD(KP951056516, T1g, TL);
                ro[0]          = SIMD_FNMADD(KP951056516, T1g, TL);
                T2S            = SIMD_FNMADD(KP618033988, T2R, T2O);
                T2T            = SIMD_FNMADD(KP559016994, T2Q, T2N);
                T2G            = SIMD_FNMADD(KP618033988, T2F, T2E);
                T2H            = SIMD_FMADD(KP559016994, T2D, T2B);
                io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T3i, T3h);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T3i, T3h);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T3g, T3d);
                io[0]          = SIMD_FMADD(KP951056516, T3g, T3d);
                T38            = SIMD_FNMADD(KP618033988, T34, T37);
                T33            = SIMD_FMADD(KP559016994, T32, T31);
                io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T26, T1P);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T28, T27);
                io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2q, T2h);
                io[WS(os, 15)] = SIMD_FMADD(KP951056516, T2s, T2r);
                io[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2s, T2r);
                ro[WS(os, 14)] = SIMD_FMADD(KP951056516, T1u, T1j);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1s, T1l);
                ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1s, T1l);
                ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2S, T2N);
                ro[WS(os, 13)] = SIMD_FNMADD(KP951056516, T2U, T2T);
                ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2U, T2T);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2G, T2B);
                ro[WS(os, 15)] = SIMD_FNMADD(KP951056516, T2I, T2H);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2I, T2H);
                io[WS(os, 14)] = SIMD_FNMADD(KP951056516, T38, T31);
                io[WS(os, 10)] = SIMD_FMADD(KP951056516, T36, T33);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T36, T33);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 5>
{
    static constexpr long_t flops           = 262;
    static constexpr long_t operations      = 198;
    static constexpr long_t memory_accesses = 70;
    static constexpr long_t stack_vars      = 149;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 198 FP additions, 64 FP multiplications,
 * (or, 134 additions, 0 multiplications, 64 fused multiply/add),
 * 149 stack variables, 5 constants, and 70 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2V, TN, TO, T2W, TP, T7, TD, T2X, T2x, T2J, T34, T10, T2d,
            T3f, Tm;
        SIMD_FLOAT T2P, T2C, TG, T2Y, T27, T2k, T39, T2K, T1N, T1o, T2y, TH, Tt,
            T15, T2e;
        SIMD_FLOAT T2l, T1U, T1G, T1t, T2f, T1a, TI, TA, T1X, T2m, T1H, T1y,
            T1V, Tw, T1u;
        SIMD_FLOAT T18, T19, Tz, T1W, T1x, T1, T2, TL, TM, T4, T5, T2u, T2v,
            T2g, T3e;
        SIMD_FLOAT T1b, T35, TJ, T2D, TB, T2O, T1Y, T2Z;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TL  = ii[0];
        TM  = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T2u = ri[WS(is, 5)];
        T2v = ri[WS(is, 15)];
        {
            SIMD_FLOAT T21, Ta, T1j, TS, Tf, Tg, TV, TT, Td, T22, T1m, TW, Ti,
                Tj, T1f;
            SIMD_FLOAT T1g, Tb, T3, T2t, T6, T2w, Tc, T1k, T1l, T8, T9, TQ, TR,
                Tu, T1S;
            SIMD_FLOAT Tp, T1p, T13, T14, Ts, T1T, T1s, Tv, T16, T17, Tx, Ty,
                T1v, T1w;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TQ  = ii[WS(is, 4)];
            TR  = ii[WS(is, 14)];
            Tb  = ii[WS(is, 9)];
            T2V = T1 + T2;
            T3  = T1 - T2;
            T2t = TL - TM;
            TN  = TL + TM;
            TO  = T4 + T5;
            T6  = T4 - T5;
            T2W = T2u + T2v;
            T2w = T2u - T2v;
            T21 = T8 + T9;
            Ta  = T8 - T9;
            T1j = TQ - TR;
            TS  = TQ + TR;
            Tc  = ii[WS(is, 19)];
            T1k = ri[WS(is, 9)];
            T1l = ri[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            TP  = TN - TO;
            T7  = T3 - T6;
            TD  = T3 + T6;
            T2X = T2V - T2W;
            T2x = T2t - T2w;
            T2J = T2t + T2w;
            Tg  = ri[WS(is, 6)];
            TV  = ii[WS(is, 16)];
            TT  = Tb + Tc;
            Td  = Tb - Tc;
            T22 = T1k + T1l;
            T1m = T1k - T1l;
            TW  = ii[WS(is, 6)];
            Ti  = ii[WS(is, 1)];
            Tj  = ii[WS(is, 11)];
            T1f = ri[WS(is, 1)];
            T1g = ri[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T24, Th, TU, T2b, Te, TE, T23, T2j, T1L, T1n,
                    T1e, TX, TY, Tk;
                SIMD_FLOAT T25, T1h, To, T11, T12, Tq, Tr, T1q, T1r, TZ, T2c,
                    Tl, TF, T26, T2i;
                SIMD_FLOAT T1M, T1i;
                Tn  = ri[WS(is, 8)];
                T24 = Tf + Tg;
                Th  = Tf - Tg;
                TU  = TS - TT;
                T2b = TT + TS;
                Te  = Ta - Td;
                TE  = Ta + Td;
                T23 = T21 - T22;
                T2j = T21 + T22;
                T1L = T1j + T1m;
                T1n = T1j - T1m;
                T1e = TV - TW;
                TX  = TV + TW;
                TY  = Ti + Tj;
                Tk  = Ti - Tj;
                T25 = T1f + T1g;
                T1h = T1f - T1g;
                To  = ri[WS(is, 18)];
                T11 = ii[WS(is, 8)];
                T12 = ii[WS(is, 18)];
                Tq  = ii[WS(is, 13)];
                Tr  = ii[WS(is, 3)];
                T1q = ri[WS(is, 13)];
                T1r = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                TZ  = TX - TY;
                T2c = TY + TX;
                Tl  = Th - Tk;
                TF  = Th + Tk;
                T26 = T24 - T25;
                T2i = T24 + T25;
                T1M = T1e + T1h;
                T1i = T1e - T1h;
                T1S = Tn + To;
                Tp  = Tn - To;
                T1p = T11 - T12;
                T13 = T11 + T12;
                T14 = Tq + Tr;
                Ts  = Tq - Tr;
                T1T = T1q + T1r;
                T1s = T1q - T1r;
                T34 = TU - TZ;
                T10 = TU + TZ;
                T2d = T2b + T2c;
                T3f = T2b - T2c;
                Tm  = Te + Tl;
                T2P = Te - Tl;
                T2C = TE - TF;
                TG  = TE + TF;
                T2Y = T26 + T23;
                T27 = T23 - T26;
                T2k = T2i - T2j;
                T39 = T2i + T2j;
                T2K = T1M + T1L;
                T1N = T1L - T1M;
                T1o = T1i - T1n;
                T2y = T1i + T1n;
                Tv  = ri[WS(is, 2)];
                T16 = ii[WS(is, 12)];
                T17 = ii[WS(is, 2)];
                Tx  = ii[WS(is, 17)];
                Ty  = ii[WS(is, 7)];
                T1v = ri[WS(is, 17)];
                T1w = ri[WS(is, 7)];
            }
            TH  = Tp + Ts;
            Tt  = Tp - Ts;
            T15 = T13 - T14;
            T2e = T14 + T13;
            T2l = T1S + T1T;
            T1U = T1S - T1T;
            T1G = T1p + T1s;
            T1t = T1p - T1s;
            T1V = Tu + Tv;
            Tw  = Tu - Tv;
            T1u = T16 - T17;
            T18 = T16 + T17;
            T19 = Tx + Ty;
            Tz  = Tx - Ty;
            T1W = T1v + T1w;
            T1x = T1v - T1w;
        }
        T2f = T19 + T18;
        T1a = T18 - T19;
        TI  = Tw + Tz;
        TA  = Tw - Tz;
        T1X = T1V - T1W;
        T2m = T1V + T1W;
        T1H = T1u + T1x;
        T1y = T1u - T1x;
        T2g = T2e + T2f;
        T3e = T2e - T2f;
        T1b = T15 + T1a;
        T35 = T15 - T1a;
        TJ  = TH + TI;
        T2D = TH - TI;
        TB  = Tt + TA;
        T2O = Tt - TA;
        T1Y = T1U - T1X;
        T2Z = T1U + T1X;
        {
            SIMD_FLOAT T2n, T3a, T1I, T2L, T1z, T2z, T3g, T2h, T2o, T36, T1c,
                T1Z, T2I, T1A, TK;
            SIMD_FLOAT T2U, TC, T1J, T30, T32, T2a, T3b, T3c, T2s, T2M, T2Q,
                T1Q, T2E, T2A, T1E;
            T2n = T2l - T2m;
            T3a = T2l + T2m;
            T1I = T1G - T1H;
            T2L = T1G + T1H;
            T1z = T1t - T1y;
            T2z = T1t + T1y;
            T3g = SIMD_FNMADD(KP618033988, T3f, T3e);
            T2h = TO + SIMD_FNMADD(KP250000000, T2d + T2g, TN);
            T2o = T2d - T2g;
            T36 = SIMD_FMADD(KP618033988, T35, T34);
            T1c = T10 + T1b;
            T1Z = T10 - T1b;
            T2I = SIMD_FNMADD(KP618033988, T2C, T2D);
            T1A = TG - TJ;
            TK  = TG + TJ;
            T2U = SIMD_FMADD(KP618033988, T2O, T2P);
            TC  = Tm + TB;
            T1J = Tm - TB;
            T30 = T2Y + T2Z;
            T32 = T2Y - T2Z;
            T2a = SIMD_FMADD(KP618033988, T1Y, T27);
            T3b = T2V + SIMD_FNMADD(KP250000000, T39 + T3a, T2W);
            T3c = T39 - T3a;
            T2s = SIMD_FMADD(KP618033988, T2k, T2n);
            T2M = T2K + T2L;
            T2Q = T2K - T2L;
            T1Q = SIMD_FMADD(KP618033988, T1I, T1N);
            T2E = T2y - T2z;
            T2A = T2y + T2z;
            T1E = SIMD_FMADD(KP618033988, T1o, T1z);
            {
                SIMD_FLOAT T2r, T2p, T20, T1R, T1B, T1d, T1K, T1F, T37, T31,
                    T3h, T3d, T2R, T2N, T2F;
                SIMD_FLOAT T2B, T2q, T28, T29, T1C, T1D, T1O, T1P, T38, T33,
                    T3i, T2S, T2T, T2G, T2H;
                T2r            = SIMD_FNMADD(KP559016994, T2o, T2h);
                T2p            = SIMD_FNMADD(KP951056516, T2o, T2n);
                T20            = SIMD_FMADD(KP587785252, T1Z, T1Y);
                io[WS(os, 5)]  = TP + T1c;
                T1R            = SIMD_FNMADD(KP250000000, T1c, TP);
                T1B            = SIMD_FNMADD(KP951056516, T1A, T1z);
                ro[0]          = TD + TK;
                T1d            = SIMD_FNMADD(KP250000000, TK, TD);
                T1K            = SIMD_FMADD(KP587785252, T1J, T1I);
                ro[WS(os, 10)] = T7 + TC;
                T1F            = SIMD_FNMADD(KP250000000, TC, T7);
                T37            = SIMD_FMADD(KP951056516, T32, T34);
                ro[WS(os, 5)]  = T30 + T2X;
                T31            = SIMD_FNMADD(KP250000000, T30, T2X);
                T3h            = SIMD_FMADD(KP951056516, T3c, T3e);
                T3d            = SIMD_FNMADD(KP559016994, T3c, T3b);
                T2R            = SIMD_FMADD(KP951056516, T2Q, T2P);
                io[WS(os, 10)] = T2M + T2J;
                T2N            = SIMD_FNMADD(KP250000000, T2M, T2J);
                T2F            = SIMD_FMADD(KP951056516, T2E, T2D);
                io[0]          = T2A + T2x;
                T2B            = SIMD_FNMADD(KP250000000, T2A, T2x);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2s, T2r);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2s, T2r);
                T2q            = SIMD_FNMADD(KP618033988, T2p, T2k);
                T28            = SIMD_FNMADD(KP618033988, T27, T20);
                T29            = SIMD_FMADD(KP559016994, T1Z, T1R);
                T1C            = SIMD_FNMADD(KP618033988, T1B, T1o);
                T1D            = SIMD_FNMADD(KP559016994, T1A, T1d);
                T1O            = SIMD_FNMADD(KP618033988, T1N, T1K);
                T1P            = SIMD_FMADD(KP559016994, T1J, T1F);
                T38            = SIMD_FNMADD(KP618033988, T37, T35);
                T33            = SIMD_FMADD(KP559016994, T32, T31);
                T3i            = SIMD_FMADD(KP618033988, T3h, T3f);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T3g, T3d);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T3g, T3d);
                T2S            = SIMD_FNMADD(KP618033988, T2R, T2O);
                T2T            = SIMD_FMADD(KP559016994, T2Q, T2N);
                T2G            = SIMD_FMADD(KP618033988, T2F, T2C);
                T2H            = SIMD_FNMADD(KP559016994, T2E, T2B);
                io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2q, T2h);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T28, T1R);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2a, T29);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T2a, T29);
                ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1C, T1d);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1E, T1D);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1E, T1D);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1O, T1F);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1Q, T1P);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1Q, T1P);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T38, T31);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T36, T33);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T36, T33);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T3i, T3b);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2S, T2N);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2U, T2T);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2U, T2T);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2G, T2B);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2I, T2H);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2I, T2H);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 6>
{
    static constexpr long_t flops           = 260;
    static constexpr long_t operations      = 196;
    static constexpr long_t memory_accesses = 68;
    static constexpr long_t stack_vars      = 145;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 196 FP additions, 64 FP multiplications,
 * (or, 132 additions, 0 multiplications, 64 fused multiply/add),
 * 145 stack variables, 5 constants, and 68 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2r, T3, T2R, T1y, T1v, T6, T2S, T2u, T1z, T7, T2T, T2v, T1G,
            T2D, T2K;
        SIMD_FLOAT T2e, T1f, T3b, T30, Tm, T2w, T23, T2I, T2i, TU, T2U, T1r,
            T35, T1m, T11;
        SIMD_FLOAT T1S, T2j, T1g, Tt, T1J, T2a, T29, T1M, T1h, TA, T2k, T1V,
            T1n, T18, T1T;
        SIMD_FLOAT Tw, T1L, T14, T1K, Tz, T1U, T17, T1, T2, T1w, T1x, T4, T5,
            T2s, T2t;
        SIMD_FLOAT T2b, T2L, T1N, T2A, T1i, T3a, TB, T31;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1w = ii[0];
        T1x = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T2s = ii[WS(is, 5)];
        T2t = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1X, Ta, T1B, TI, Tf, Tg, TN, TO, Ti, T1A, Td, T1Y, TL,
                Tj, TQ;
            SIMD_FLOAT TR, Tb, Tc, TJ, TK, T8, T9, TG, TH, Tu, T1Q, Tp, T1I, TX,
                T1H;
            SIMD_FLOAT Ts, T1R, T10, Tv, T12, T13, Tx, Ty, T15, T16;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TG  = ii[WS(is, 4)];
            TH  = ii[WS(is, 14)];
            Tb  = ri[WS(is, 9)];
            T2r = T1 - T2;
            T3  = T1 + T2;
            T2R = T1w + T1x;
            T1y = T1w - T1x;
            T1v = T4 - T5;
            T6  = T4 + T5;
            T2S = T2s + T2t;
            T2u = T2s - T2t;
            T1X = T8 - T9;
            Ta  = T8 + T9;
            T1B = TG - TH;
            TI  = TG + TH;
            Tc  = ri[WS(is, 19)];
            TJ  = ii[WS(is, 9)];
            TK  = ii[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T1z = T1v + T1y;
            T7  = T3 - T6;
            T2T = T2R - T2S;
            T2v = T2r - T2u;
            Tg  = ri[WS(is, 6)];
            TN  = ii[WS(is, 16)];
            TO  = ii[WS(is, 6)];
            Ti  = ri[WS(is, 1)];
            T1A = Tb - Tc;
            Td  = Tb + Tc;
            T1Y = TK - TJ;
            TL  = TJ + TK;
            Tj  = ri[WS(is, 11)];
            TQ  = ii[WS(is, 1)];
            TR  = ii[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T20, Th, T1E, TP, T1C, T2d, T1d, Te, T1Z, T2g,
                    TM, T1p, T1D, Tk;
                SIMD_FLOAT T21, TS, To, TV, TW, Tq, Tr, TY, TZ, T1F, T2c, T1e,
                    Tl, T22, T2h;
                SIMD_FLOAT TT, T1q;
                Tn  = ri[WS(is, 8)];
                T20 = Tf - Tg;
                Th  = Tf + Tg;
                T1E = TN - TO;
                TP  = TN + TO;
                T1C = T1A + T1B;
                T2d = T1A - T1B;
                T1d = Ta + Td;
                Te  = Ta - Td;
                T1Z = T1X + T1Y;
                T2g = T1X - T1Y;
                TM  = TI - TL;
                T1p = TI + TL;
                T1D = Ti - Tj;
                Tk  = Ti + Tj;
                T21 = TR - TQ;
                TS  = TQ + TR;
                To  = ri[WS(is, 18)];
                TV  = ii[WS(is, 8)];
                TW  = ii[WS(is, 18)];
                Tq  = ri[WS(is, 13)];
                Tr  = ri[WS(is, 3)];
                TY  = ii[WS(is, 13)];
                TZ  = ii[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T1F = T1D + T1E;
                T2c = T1E - T1D;
                T1e = Th + Tk;
                Tl  = Th - Tk;
                T22 = T20 + T21;
                T2h = T21 - T20;
                TT  = TP - TS;
                T1q = TP + TS;
                T1Q = Tn - To;
                Tp  = Tn + To;
                T1I = TV - TW;
                TX  = TV + TW;
                T1H = Tq - Tr;
                Ts  = Tq + Tr;
                T1R = TZ - TY;
                T10 = TY + TZ;
                T1G = T1C + T1F;
                T2D = T1C - T1F;
                T2K = T2d + T2c;
                T2e = T2c - T2d;
                T1f = T1d + T1e;
                T3b = T1e - T1d;
                T30 = Te - Tl;
                Tm  = Te + Tl;
                T2w = T1Z + T22;
                T23 = T1Z - T22;
                T2I = T2g - T2h;
                T2i = T2g + T2h;
                TU  = TM - TT;
                T2U = TM + TT;
                T1r = T1p - T1q;
                T35 = T1p + T1q;
                Tv  = ri[WS(is, 2)];
                T12 = ii[WS(is, 12)];
                T13 = ii[WS(is, 2)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 7)];
                T15 = ii[WS(is, 17)];
                T16 = ii[WS(is, 7)];
            }
            T1m = TX + T10;
            T11 = TX - T10;
            T1S = T1Q + T1R;
            T2j = T1Q - T1R;
            T1g = Tp + Ts;
            Tt  = Tp - Ts;
            T1T = Tu - Tv;
            Tw  = Tu + Tv;
            T1L = T12 - T13;
            T14 = T12 + T13;
            T1K = Tx - Ty;
            Tz  = Tx + Ty;
            T1U = T16 - T15;
            T17 = T15 + T16;
            T1J = T1H + T1I;
            T2a = T1I - T1H;
        }
        T29 = T1K - T1L;
        T1M = T1K + T1L;
        T1h = Tw + Tz;
        TA  = Tw - Tz;
        T2k = T1U - T1T;
        T1V = T1T + T1U;
        T1n = T14 + T17;
        T18 = T14 - T17;
        T2b = T29 - T2a;
        T2L = T2a + T29;
        T1N = T1J + T1M;
        T2A = T1J - T1M;
        T1i = T1g + T1h;
        T3a = T1g - T1h;
        TB  = Tt + TA;
        T31 = Tt - TA;
        {
            SIMD_FLOAT T2l, T2H, T2x, T1W, T1o, T36, T2V, T19, T2Q, T2f, T2m,
                T2G, T1O, T24, T3c;
            SIMD_FLOAT T1j, T1k, T32, TC, TE, T2J, T2M, T2q, T28, T2y, T2B, T37,
                T38, T1s, T1a;
            T2l = T2j + T2k;
            T2H = T2k - T2j;
            T2x = T1S + T1V;
            T1W = T1S - T1V;
            T1o = T1m - T1n;
            T36 = T1m + T1n;
            T2V = T11 + T18;
            T19 = T11 - T18;
            T2Q = SIMD_FMADD(KP618033988, T2K, T2L);
            T2f = SIMD_FMADD(KP250000000, T2b - T2e, T1y) - T1v;
            T2m = T2e + T2b;
            T2G = SIMD_FMADD(KP618033988, T2A, T2D);
            T1O = T1G + T1N;
            T24 = T1G - T1N;
            T3c = SIMD_FMADD(KP618033988, T3b, T3a);
            T1j = T3 + SIMD_FNMADD(KP250000000, T1f + T1i, T6);
            T1k = T1f - T1i;
            T32 = SIMD_FMADD(KP618033988, T31, T30);
            TC  = Tm + TB;
            TE  = Tm - TB;
            T2J = SIMD_FMADD(KP250000000, T2H - T2I, T2r) + T2u;
            T2M = T2I + T2H;
            T2q = SIMD_FNMADD(KP618033988, T2i, T2l);
            T28 = SIMD_FMADD(KP618033988, T1W, T23);
            T2y = T2w + T2x;
            T2B = T2w - T2x;
            T37 = T2R + SIMD_FNMADD(KP250000000, T35 + T36, T2S);
            T38 = T35 - T36;
            T1s = SIMD_FNMADD(KP618033988, T1r, T1o);
            T1a = SIMD_FMADD(KP618033988, T19, TU);
            {
                SIMD_FLOAT T2W, T2Y, T2p, T2n, T25, T1P, T1t, T1l, T1b, TD, T2P,
                    T2N, T2C, T2z, T3d;
                SIMD_FLOAT T39, T33, T2X, T2o, T26, T27, T1u, T1c, TF, T2O, T2E,
                    T2F, T3e, T34, T2Z;
                T2W            = T2U + T2V;
                T2Y            = T2U - T2V;
                T2p            = SIMD_FNMADD(KP559016994, T2m, T2f);
                T2n            = SIMD_FMADD(KP951056516, T2m, T2l);
                T25            = SIMD_FMADD(KP951056516, T24, T23);
                io[WS(os, 9)]  = T1O + T1z;
                T1P            = SIMD_FNMADD(KP250000000, T1O, T1z);
                T1t            = SIMD_FMADD(KP951056516, T1k, T1o);
                T1l            = SIMD_FNMADD(KP559016994, T1k, T1j);
                T1b            = SIMD_FMADD(KP951056516, TE, TU);
                ro[WS(os, 4)]  = T7 + TC;
                TD             = SIMD_FNMADD(KP250000000, TC, T7);
                T2P            = SIMD_FNMADD(KP559016994, T2M, T2J);
                T2N            = SIMD_FNMADD(KP951056516, T2M, T2L);
                T2C            = SIMD_FMADD(KP587785252, T2B, T2A);
                ro[WS(os, 9)]  = T2y + T2v;
                T2z            = SIMD_FNMADD(KP250000000, T2y, T2v);
                T3d            = SIMD_FNMADD(KP951056516, T38, T3a);
                T39            = SIMD_FNMADD(KP559016994, T38, T37);
                T33            = SIMD_FMADD(KP587785252, T2Y, T31);
                io[WS(os, 4)]  = T2W + T2T;
                T2X            = SIMD_FNMADD(KP250000000, T2W, T2T);
                io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2q, T2p);
                io[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2q, T2p);
                T2o            = SIMD_FMADD(KP618033988, T2n, T2i);
                T26            = SIMD_FNMADD(KP618033988, T25, T1W);
                T27            = SIMD_FMADD(KP559016994, T24, T1P);
                T1u            = SIMD_FMADD(KP618033988, T1t, T1r);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1s, T1l);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1s, T1l);
                T1c            = SIMD_FNMADD(KP618033988, T1b, T19);
                TF             = SIMD_FMADD(KP559016994, TE, TD);
                ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2Q, T2P);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2Q, T2P);
                T2O            = SIMD_FNMADD(KP618033988, T2N, T2K);
                T2E            = SIMD_FNMADD(KP618033988, T2D, T2C);
                T2F            = SIMD_FMADD(KP559016994, T2B, T2z);
                T3e            = SIMD_FNMADD(KP618033988, T3d, T3b);
                io[WS(os, 6)]  = SIMD_FMADD(KP951056516, T3c, T39);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T3c, T39);
                T34            = SIMD_FNMADD(KP618033988, T30, T33);
                T2Z            = SIMD_FMADD(KP559016994, T2Y, T2X);
                io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2o, T2f);
                io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T26, T1P);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T28, T27);
                ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1u, T1j);
                ro[WS(os, 12)] = SIMD_FMADD(KP951056516, T1c, TD);
                ro[0]          = SIMD_FMADD(KP951056516, T1a, TF);
                ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1a, TF);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2O, T2J);
                ro[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T2E, T2z);
                ro[WS(os, 13)] = SIMD_FNMADD(KP951056516, T2G, T2F);
                ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2G, T2F);
                io[WS(os, 10)] = SIMD_FMADD(KP951056516, T3e, T37);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T34, T2X);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T32, T2Z);
                io[0]          = SIMD_FNMADD(KP951056516, T32, T2Z);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 7>
{
    static constexpr long_t flops           = 256;
    static constexpr long_t operations      = 194;
    static constexpr long_t memory_accesses = 66;
    static constexpr long_t stack_vars      = 145;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 194 FP additions, 62 FP multiplications,
 * (or, 132 additions, 0 multiplications, 62 fused multiply/add),
 * 145 stack variables, 5 constants, and 66 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2U, T3, T2t, T1y, T1v, T6, T2V, T2w, T2e, T7, T2W, T2F, T2Y,
            T29, T1F;
        SIMD_FLOAT T3b, Tm, T2L, T2y, TI, T2R, T2i, T23, T35, T2G, T1r, TY, T2s,
            TE, Tt;
        SIMD_FLOAT T2a, T1I, T1S, T2j, T1k, T15, T1L, T2b, TD, TA, T1V, T2k,
            T1l, T1c, T1T;
        SIMD_FLOAT Tw, T1K, T1b, T1J, Tz, T1U, T18, T1, T2, T1w, T1x, T4, T5,
            T2u, T2v;
        SIMD_FLOAT T1M, T3a, T2c, T2Z, TF, T2z, TB, T2K;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1w = ii[0];
        T1x = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T2u = ri[WS(is, 5)];
        T2v = ri[WS(is, 15)];
        {
            SIMD_FLOAT T20, Ta, T1A, TP, Tf, Tg, TR, TS, Ti, T1z, Td, T21, TM,
                Tj, TU;
            SIMD_FLOAT TV, Tb, Tc, TK, TL, T8, T9, TN, TO, Tu, T1Q, Tp, T1H,
                T11, T1G;
            SIMD_FLOAT Ts, T1R, T14, Tv, T19, T1a, Tx, Ty, T16, T17;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TN  = ii[WS(is, 4)];
            TO  = ii[WS(is, 14)];
            Tb  = ii[WS(is, 19)];
            T2U = T1 + T2;
            T3  = T1 - T2;
            T2t = T1w - T1x;
            T1y = T1w + T1x;
            T1v = T4 + T5;
            T6  = T4 - T5;
            T2V = T2u + T2v;
            T2w = T2u - T2v;
            T20 = T8 + T9;
            Ta  = T8 - T9;
            T1A = TN + TO;
            TP  = TN - TO;
            Tc  = ii[WS(is, 9)];
            TK  = ri[WS(is, 9)];
            TL  = ri[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T2e = T1y - T1v;
            T7  = T3 - T6;
            T2W = T2U - T2V;
            T2F = T2t + T2w;
            Tg  = ri[WS(is, 6)];
            TR  = ii[WS(is, 16)];
            TS  = ii[WS(is, 6)];
            Ti  = ii[WS(is, 11)];
            T1z = Tb + Tc;
            Td  = Tb - Tc;
            T21 = TK + TL;
            TM  = TK - TL;
            Tj  = ii[WS(is, 1)];
            TU  = ri[WS(is, 1)];
            TV  = ri[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T1X, Th, T1D, TT, T27, T1B, Te, TG, T2g, T22,
                    T1p, TQ, T1C, Tk;
                SIMD_FLOAT T1Y, TW, To, TZ, T10, Tq, Tr, T12, T13, T28, T1E, Tl,
                    TH, T2h, T1Z;
                SIMD_FLOAT T1q, TX;
                Tn  = ri[WS(is, 8)];
                T1X = Tf + Tg;
                Th  = Tf - Tg;
                T1D = TR + TS;
                TT  = TR - TS;
                T27 = T1A - T1z;
                T1B = T1z + T1A;
                Te  = Ta + Td;
                TG  = Ta - Td;
                T2g = T20 - T21;
                T22 = T20 + T21;
                T1p = TM + TP;
                TQ  = TM - TP;
                T1C = Ti + Tj;
                Tk  = Ti - Tj;
                T1Y = TU + TV;
                TW  = TU - TV;
                To  = ri[WS(is, 18)];
                TZ  = ii[WS(is, 8)];
                T10 = ii[WS(is, 18)];
                Tq  = ii[WS(is, 3)];
                Tr  = ii[WS(is, 13)];
                T12 = ri[WS(is, 13)];
                T13 = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T28 = T1D - T1C;
                T1E = T1C + T1D;
                Tl  = Th + Tk;
                TH  = Tk - Th;
                T2h = T1X - T1Y;
                T1Z = T1X + T1Y;
                T1q = TT + TW;
                TX  = TT - TW;
                T1Q = Tn + To;
                Tp  = Tn - To;
                T1H = TZ + T10;
                T11 = TZ - T10;
                T1G = Tq + Tr;
                Ts  = Tq - Tr;
                T1R = T12 + T13;
                T14 = T12 - T13;
                T2Y = T28 - T27;
                T29 = T27 + T28;
                T1F = T1B + T1E;
                T3b = T1B - T1E;
                Tm  = Te + Tl;
                T2L = Te - Tl;
                T2y = TG + TH;
                TI  = TG - TH;
                T2R = T2g + T2h;
                T2i = T2g - T2h;
                T23 = T1Z - T22;
                T35 = T22 + T1Z;
                T2G = T1p + T1q;
                T1r = T1p - T1q;
                TY  = TQ + TX;
                T2s = TX - TQ;
                Tv  = ri[WS(is, 2)];
                T19 = ii[WS(is, 12)];
                T1a = ii[WS(is, 2)];
                Tx  = ii[WS(is, 7)];
                Ty  = ii[WS(is, 17)];
                T16 = ri[WS(is, 17)];
                T17 = ri[WS(is, 7)];
            }
            TE  = Tp - Ts;
            Tt  = Tp + Ts;
            T2a = T1H - T1G;
            T1I = T1G + T1H;
            T1S = T1Q + T1R;
            T2j = T1Q - T1R;
            T1k = T11 + T14;
            T15 = T11 - T14;
            T1T = Tu + Tv;
            Tw  = Tu - Tv;
            T1K = T19 + T1a;
            T1b = T19 - T1a;
            T1J = Tx + Ty;
            Tz  = Tx - Ty;
            T1U = T16 + T17;
            T18 = T16 - T17;
        }
        T1L = T1J + T1K;
        T2b = T1K - T1J;
        TD  = Tz - Tw;
        TA  = Tw + Tz;
        T1V = T1T + T1U;
        T2k = T1T - T1U;
        T1l = T18 + T1b;
        T1c = T18 - T1b;
        T1M = T1I + T1L;
        T3a = T1I - T1L;
        T2c = T2a + T2b;
        T2Z = T2a - T2b;
        TF  = TD - TE;
        T2z = TE + TD;
        TB  = Tt + TA;
        T2K = Tt - TA;
        {
            SIMD_FLOAT T1W, T36, T2l, T2S, T1m, T2H, T1d, T2r, T3c, T1N, T1O,
                T2m, T2d, T2E, TJ;
            SIMD_FLOAT T1e, T2Q, T1n, TC, T37, T38, T24, T2T, T30, T2I, T2M,
                T1u, T2x, T2A, T1i;
            T1W = T1S - T1V;
            T36 = T1S + T1V;
            T2l = T2j - T2k;
            T2S = T2j + T2k;
            T1m = T1k - T1l;
            T2H = T1k + T1l;
            T1d = T15 + T1c;
            T2r = T1c - T15;
            T3c = SIMD_FNMADD(KP618033988, T3b, T3a);
            T1N = T1v + SIMD_FNMADD(KP250000000, T1F + T1M, T1y);
            T1O = T1F - T1M;
            T2m = T29 - T2c;
            T2d = T29 + T2c;
            T2E = SIMD_FNMADD(KP618033988, T2y, T2z);
            TJ  = T3 + SIMD_FMADD(KP250000000, TF - TI, T6);
            T1e = TI + TF;
            T2Q = SIMD_FMADD(KP618033988, T2K, T2L);
            T1n = Tm - TB;
            TC  = Tm + TB;
            T37 = T2U + SIMD_FNMADD(KP250000000, T35 + T36, T2V);
            T38 = T35 - T36;
            T24 = SIMD_FMADD(KP618033988, T23, T1W);
            T2T = T2R + T2S;
            T30 = T2S - T2R;
            T2I = T2G + T2H;
            T2M = T2G - T2H;
            T1u = SIMD_FMADD(KP618033988, T1m, T1r);
            T2x = SIMD_FMADD(KP250000000, T2r - T2s, T2t) - T2w;
            T2A = T2s + T2r;
            T1i = SIMD_FMADD(KP618033988, TY, T1d);
            {
                SIMD_FLOAT T25, T1P, T2n, T2p, T2f, T1h, T1f, T1o, T1j, T3d,
                    T39, T33, T31, T2X, T2N;
                SIMD_FLOAT T2J, T2D, T2B, T26, T2q, T2o, T1g, T1s, T1t, T3e,
                    T34, T32, T2O, T2P, T2C;
                T25            = SIMD_FNMADD(KP951056516, T1O, T1W);
                T1P            = SIMD_FNMADD(KP559016994, T1O, T1N);
                T2n            = SIMD_FMADD(KP951056516, T2m, T2l);
                T2p            = SIMD_FMADD(KP587785252, T2m, T2l);
                io[WS(os, 3)]  = T2d + T2e;
                T2f            = SIMD_FNMADD(KP250000000, T2d, T2e);
                T1h            = SIMD_FNMADD(KP559016994, T1e, TJ);
                T1f            = SIMD_FNMADD(KP951056516, T1e, T1d);
                T1o            = SIMD_FMADD(KP587785252, T1n, T1m);
                ro[WS(os, 8)]  = T7 + TC;
                T1j            = SIMD_FNMADD(KP250000000, TC, T7);
                T3d            = SIMD_FMADD(KP951056516, T38, T3a);
                T39            = SIMD_FNMADD(KP559016994, T38, T37);
                T33            = SIMD_FMADD(KP951056516, T30, T2Y);
                T31            = SIMD_FMADD(KP951056516, T30, T2Z);
                ro[WS(os, 3)]  = T2T + T2W;
                T2X            = SIMD_FNMADD(KP250000000, T2T, T2W);
                T2N            = SIMD_FMADD(KP951056516, T2M, T2L);
                io[WS(os, 8)]  = T2I + T2F;
                T2J            = SIMD_FNMADD(KP250000000, T2I, T2F);
                T2D            = SIMD_FNMADD(KP559016994, T2A, T2x);
                T2B            = SIMD_FMADD(KP951056516, T2A, T2z);
                T26            = SIMD_FNMADD(KP618033988, T25, T23);
                io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T24, T1P);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T24, T1P);
                T2q            = SIMD_FNMADD(KP618033988, T2i, T2p);
                T2o            = SIMD_FMADD(KP618033988, T2n, T2i);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1i, T1h);
                ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1i, T1h);
                T1g            = SIMD_FNMADD(KP618033988, T1f, TY);
                T1s            = SIMD_FNMADD(KP618033988, T1r, T1o);
                T1t            = SIMD_FMADD(KP559016994, T1n, T1j);
                T3e            = SIMD_FMADD(KP618033988, T3d, T3b);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T3c, T39);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T3c, T39);
                T34            = SIMD_FMADD(KP618033988, T33, T2Z);
                T32            = SIMD_FNMADD(KP618033988, T31, T2Y);
                T2O            = SIMD_FNMADD(KP618033988, T2N, T2K);
                T2P            = SIMD_FMADD(KP559016994, T2M, T2J);
                io[WS(os, 10)] = SIMD_FMADD(KP951056516, T2E, T2D);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2E, T2D);
                T2C            = SIMD_FMADD(KP618033988, T2B, T2y);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T26, T1N);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2q, T2f);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2o, T2f);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1g, TJ);
                ro[0]          = SIMD_FNMADD(KP951056516, T1s, T1j);
                ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T3e, T37);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T34, T2X);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T32, T2X);
                io[0]          = SIMD_FMADD(KP951056516, T2O, T2J);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2Q, T2P);
                io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2Q, T2P);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2C, T2x);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 8>
{
    static constexpr long_t flops           = 242;
    static constexpr long_t operations      = 186;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 168;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 186 FP additions, 56 FP multiplications,
 * (or, 130 additions, 0 multiplications, 56 fused multiply/add),
 * 168 stack variables, 7 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2n, T3, T2M, T1L, T1M, T6, T2N, T2q, T27, T7, T2O, T2r, T1I,
            T2C, T2w;
        SIMD_FLOAT T2d, TF, T33, T2Q, Tm, T2A, T1U, T2i, T2t, T2K, T1m, T2Y,
            T1f, T28, T1A;
        SIMD_FLOAT T1X, T2j, Tt, TG, TS, T1n, T29, T1x, TA, TH, T2k, T20, T1o,
            TZ, Tw;
        SIMD_FLOAT T1Z, TV, T1w, Tz, T1v, TY, T1Y, T1, T2, T1J, T1K, T4, T5,
            T2o, T2p;
        SIMD_FLOAT T2Z, T2P, T36, T2W, T2U, T1B, T2D, T2a, T2x, TI, T32, TB,
            T2R, T21, T2z;
        SIMD_FLOAT T2s, T2l, T10, T2X, T1p, T2J, T2I, T1N, T22, T2y, T2e, T34,
            TJ, TK;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1J = ii[0];
        T1K = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T2o = ii[WS(is, 5)];
        T2p = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1O, Ta, T1G, T13, Tf, Tg, T18, T19, Ti, T1F, Td, T1P,
                T16, Tj, T1b;
            SIMD_FLOAT T1c, Tb, Tc, T14, T15, T8, T9, T11, T12, Tu, T1V, Tp,
                T1y, TO, T1z;
            SIMD_FLOAT Ts, T1W, TR, Tv, TT, TU, Tx, Ty, TW, TX;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            T11 = ii[WS(is, 4)];
            T12 = ii[WS(is, 14)];
            Tb  = ri[WS(is, 9)];
            T2n = T1 - T2;
            T3  = T1 + T2;
            T2M = T1J + T1K;
            T1L = T1J - T1K;
            T1M = T4 - T5;
            T6  = T4 + T5;
            T2N = T2o + T2p;
            T2q = T2o - T2p;
            T1O = T8 - T9;
            Ta  = T8 + T9;
            T1G = T11 - T12;
            T13 = T11 + T12;
            Tc  = ri[WS(is, 19)];
            T14 = ii[WS(is, 9)];
            T15 = ii[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T27 = T1M + T1L;
            T7  = T3 - T6;
            T2O = T2M - T2N;
            T2r = T2n - T2q;
            Tg  = ri[WS(is, 6)];
            T18 = ii[WS(is, 16)];
            T19 = ii[WS(is, 6)];
            Ti  = ri[WS(is, 1)];
            T1F = Tb - Tc;
            Td  = Tb + Tc;
            T1P = T15 - T14;
            T16 = T14 + T15;
            Tj  = ri[WS(is, 11)];
            T1b = ii[WS(is, 1)];
            T1c = ii[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T1S, Th, T1C, T1a, T1H, T2b, TD, Te, T1Q, T2g,
                    T1l, T17, T1D, Tk;
                SIMD_FLOAT T1R, T1d, To, TM, TN, Tq, Tr, TP, TQ, T1E, T2c, TE,
                    Tl, T1T, T2h;
                SIMD_FLOAT T1k, T1e;
                Tn  = ri[WS(is, 8)];
                T1S = Tf - Tg;
                Th  = Tf + Tg;
                T1C = T18 - T19;
                T1a = T18 + T19;
                T1H = T1F - T1G;
                T2b = T1F + T1G;
                TD  = Ta + Td;
                Te  = Ta - Td;
                T1Q = T1O - T1P;
                T2g = T1O + T1P;
                T1l = T13 - T16;
                T17 = T13 + T16;
                T1D = Ti - Tj;
                Tk  = Ti + Tj;
                T1R = T1c - T1b;
                T1d = T1b + T1c;
                To  = ri[WS(is, 18)];
                TM  = ii[WS(is, 8)];
                TN  = ii[WS(is, 18)];
                Tq  = ri[WS(is, 13)];
                Tr  = ri[WS(is, 3)];
                TP  = ii[WS(is, 13)];
                TQ  = ii[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T1E = T1C - T1D;
                T2c = T1D + T1C;
                TE  = Th + Tk;
                Tl  = Th - Tk;
                T1T = T1R - T1S;
                T2h = T1S + T1R;
                T1k = T1a - T1d;
                T1e = T1a + T1d;
                T1V = Tn - To;
                Tp  = Tn + To;
                T1y = TM - TN;
                TO  = TM + TN;
                T1z = Tq - Tr;
                Ts  = Tq + Tr;
                T1W = TQ - TP;
                TR  = TP + TQ;
                T1I = T1E - T1H;
                T2C = T1H + T1E;
                T2w = T2b - T2c;
                T2d = T2b + T2c;
                TF  = TD + TE;
                T33 = TE - TD;
                T2Q = Te - Tl;
                Tm  = Te + Tl;
                T2A = T1Q - T1T;
                T1U = T1Q + T1T;
                T2i = T2g - T2h;
                T2t = T2g + T2h;
                T2K = T1l + T1k;
                T1m = T1k - T1l;
                T2Y = T17 + T1e;
                T1f = T17 - T1e;
                Tv  = ri[WS(is, 2)];
                TT  = ii[WS(is, 12)];
                TU  = ii[WS(is, 2)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 7)];
                TW  = ii[WS(is, 17)];
                TX  = ii[WS(is, 7)];
            }
            T28 = T1z + T1y;
            T1A = T1y - T1z;
            T1X = T1V - T1W;
            T2j = T1V + T1W;
            Tt  = Tp - Ts;
            TG  = Tp + Ts;
            Tw  = Tu + Tv;
            T1Z = Tu - Tv;
            TV  = TT + TU;
            T1w = TT - TU;
            Tz  = Tx + Ty;
            T1v = Tx - Ty;
            TY  = TW + TX;
            T1Y = TX - TW;
            TS  = TO + TR;
            T1n = TO - TR;
        }
        T29           = T1v + T1w;
        T1x           = T1v - T1w;
        TA            = Tw - Tz;
        TH            = Tw + Tz;
        T2k           = T1Z + T1Y;
        T20           = T1Y - T1Z;
        T1o           = TV - TY;
        TZ            = TV + TY;
        T1B           = T1x - T1A;
        T2D           = T1A + T1x;
        T2a           = T28 + T29;
        T2x           = T28 - T29;
        TI            = TG + TH;
        T32           = TG - TH;
        TB            = Tt + TA;
        T2R           = Tt - TA;
        T21           = T1X + T20;
        T2z           = T20 - T1X;
        T2s           = T2j + T2k;
        T2l           = T2j - T2k;
        T10           = TS - TZ;
        T2X           = TS + TZ;
        T1p           = T1n - T1o;
        T2J           = T1n + T1o;
        T2I           = SIMD_FMADD(KP618033988, T2C, T2D);
        T1N           = SIMD_FMADD(KP250000000, T1B - T1I, T1L) - T1M;
        T22           = T1B + T1I;
        T2y           = SIMD_FMADD(KP618033988, T2x, T2w);
        T2e           = SIMD_FNMADD(KP381966011, T2d, T2a);
        io[WS(os, 7)] = T2a + T2d + T27;
        T34           = SIMD_FMADD(KP618033988, T33, T32);
        TJ            = T3 + SIMD_FNMADD(KP250000000, TF + TI, T6);
        TK            = TF - TI;
        {
            SIMD_FLOAT T1q, TC, T2B, T2E, T26, T2m, T2u, T30, T1g, T2L, T2S,
                T25, T23, T2f, T1h;
            SIMD_FLOAT TL, T1t, T1r, T1j, T2H, T2F, T2v, T35, T31, T2T, T2V,
                T24, T1i, T1u, T1s;
            SIMD_FLOAT T2G;
            T1q            = TB - Tm;
            TC             = Tm + TB;
            T2B            = SIMD_FMADD(KP250000000, T2z - T2A, T2n) + T2q;
            T2E            = T2z + T2A;
            T26            = SIMD_FNMADD(KP618033988, T1U, T21);
            T2m            = SIMD_FMADD(KP618033988, T2l, T2i);
            T2u            = SIMD_FNMADD(KP381966011, T2t, T2s);
            ro[WS(os, 7)]  = T2s + T2t + T2r;
            T2Z            = T2M + SIMD_FNMADD(KP250000000, T2X + T2Y, T2N);
            T30            = T2Y - T2X;
            T1g            = SIMD_FNMADD(KP618033988, T1f, T10);
            T2L            = T2J + T2K;
            T2S            = T2K - T2J;
            T25            = SIMD_FNMADD(KP559016994, T22, T1N);
            T23            = SIMD_FMADD(KP951056516, T22, T21);
            T2f            = SIMD_FNMADD(KP809016994, T2e, T27);
            T1h            = SIMD_FMADD(KP951056516, TK, T10);
            TL             = SIMD_FNMADD(KP559016994, TK, TJ);
            T1t            = SIMD_FMADD(KP951056516, T1q, T1m);
            T1r            = SIMD_FMADD(KP951056516, T1q, T1p);
            ro[WS(os, 2)]  = T7 + TC;
            T1j            = SIMD_FNMADD(KP250000000, TC, T7);
            T2H            = SIMD_FNMADD(KP559016994, T2E, T2B);
            T2F            = SIMD_FNMADD(KP951056516, T2E, T2D);
            T2v            = SIMD_FNMADD(KP809016994, T2u, T2r);
            T35            = SIMD_FNMADD(KP951056516, T30, T32);
            T31            = SIMD_FNMADD(KP559016994, T30, T2Z);
            T2T            = SIMD_FMADD(KP951056516, T2S, T2R);
            T2V            = SIMD_FMADD(KP587785252, T2S, T2R);
            io[WS(os, 2)]  = T2L + T2O;
            T2P            = SIMD_FNMADD(KP250000000, T2L, T2O);
            io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T26, T25);
            io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T26, T25);
            T24            = SIMD_FMADD(KP618033988, T23, T1U);
            io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2m, T2f);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2m, T2f);
            T1i            = SIMD_FMADD(KP618033988, T1h, T1f);
            ro[0]          = SIMD_FMADD(KP951056516, T1g, TL);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1g, TL);
            T1u            = SIMD_FMADD(KP618033988, T1t, T1p);
            T1s            = SIMD_FNMADD(KP618033988, T1r, T1m);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2I, T2H);
            ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2I, T2H);
            T2G            = SIMD_FNMADD(KP618033988, T2F, T2C);
            ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2y, T2v);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2y, T2v);
            T36            = SIMD_FNMADD(KP618033988, T35, T33);
            io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T34, T31);
            io[0]          = SIMD_FNMADD(KP951056516, T34, T31);
            T2W            = SIMD_FNMADD(KP618033988, T2Q, T2V);
            T2U            = SIMD_FMADD(KP618033988, T2T, T2Q);
            io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T24, T1N);
            ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1i, TJ);
            ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1u, T1j);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1s, T1j);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2G, T2B);
        }
        io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T36, T2Z);
        io[WS(os, 10)] = SIMD_FNMADD(KP951056516, T2W, T2P);
        io[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2U, T2P);
    }
}

template <>
struct c2cb_traits<20, 9>
{
    static constexpr long_t flops           = 238;
    static constexpr long_t operations      = 184;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 139;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 9 -name c2cb
 * -standalone */

/*
 * This function contains 184 FP additions, 54 FP multiplications,
 * (or, 130 additions, 0 multiplications, 54 fused multiply/add),
 * 139 stack variables, 7 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 9>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2M, T3, T2p, T1I, T1J, T6, T2N, T2s, T1K, T7, T2O, T2B, T2Q,
            T1x, T27;
        SIMD_FLOAT T33, T2u, TH, Tm, T2G, T2h, T2X, T1S, T2J, T2D, T1m, TX, T2o,
            TD, Tt;
        SIMD_FLOAT T1n, T14, T2c, T1V, T1A, T28, T1D, T29, TC, TA, T1Y, T2d,
            T1b, T1o, T1W;
        SIMD_FLOAT Tw, T1B, T1a, T1C, Tz, T1X, T17, T1, T2, T1G, T1H, T4, T5,
            T2q, T2r;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1G = ii[0];
        T1H = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T2q = ri[WS(is, 5)];
        T2r = ri[WS(is, 15)];
        {
            SIMD_FLOAT T1M, Ta, T1r, TO, Tf, Tg, TQ, TR, Ti, T1s, Td, T1N, TL,
                Tj, TT;
            SIMD_FLOAT TU, Tb, Tc, TJ, TK, T8, T9, TM, TN, Tu, T1T, Tp, T1y,
                T10, T1z;
            SIMD_FLOAT Ts, T1U, T13, Tv, T18, T19, Tx, Ty, T15, T16;
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TM  = ii[WS(is, 4)];
            TN  = ii[WS(is, 14)];
            Tb  = ii[WS(is, 19)];
            T2M = T1 + T2;
            T3  = T1 - T2;
            T2p = T1G - T1H;
            T1I = T1G + T1H;
            T1J = T4 + T5;
            T6  = T4 - T5;
            T2N = T2q + T2r;
            T2s = T2q - T2r;
            T1M = T8 + T9;
            Ta  = T8 - T9;
            T1r = TM + TN;
            TO  = TM - TN;
            Tc  = ii[WS(is, 9)];
            TJ  = ri[WS(is, 9)];
            TK  = ri[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            T1K = T1I - T1J;
            T7  = T3 - T6;
            T2O = T2M - T2N;
            T2B = T2p + T2s;
            Tg  = ri[WS(is, 6)];
            TQ  = ii[WS(is, 16)];
            TR  = ii[WS(is, 6)];
            Ti  = ii[WS(is, 11)];
            T1s = Tb + Tc;
            Td  = Tb - Tc;
            T1N = TJ + TK;
            TL  = TJ - TK;
            Tj  = ii[WS(is, 1)];
            TT  = ri[WS(is, 1)];
            TU  = ri[WS(is, 11)];
            {
                SIMD_FLOAT Tn, T1P, Th, T1u, TS, T1t, T25, TF, Te, T2g, T1O,
                    T1k, TP, T1v, Tk;
                SIMD_FLOAT T1Q, TV, To, TY, TZ, Tq, Tr, T11, T12, T1w, T26, TG,
                    Tl, T2f, T1R;
                SIMD_FLOAT T1l, TW;
                Tn  = ri[WS(is, 8)];
                T1P = Tf + Tg;
                Th  = Tf - Tg;
                T1u = TQ + TR;
                TS  = TQ - TR;
                T1t = T1r - T1s;
                T25 = T1s + T1r;
                TF  = Ta - Td;
                Te  = Ta + Td;
                T2g = T1M + T1N;
                T1O = T1M - T1N;
                T1k = TL + TO;
                TP  = TL - TO;
                T1v = Ti + Tj;
                Tk  = Ti - Tj;
                T1Q = TT + TU;
                TV  = TT - TU;
                To  = ri[WS(is, 18)];
                TY  = ii[WS(is, 8)];
                TZ  = ii[WS(is, 18)];
                Tq  = ii[WS(is, 3)];
                Tr  = ii[WS(is, 13)];
                T11 = ri[WS(is, 13)];
                T12 = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                T1w = T1u - T1v;
                T26 = T1v + T1u;
                TG  = Tk - Th;
                Tl  = Th + Tk;
                T2f = T1P + T1Q;
                T1R = T1P - T1Q;
                T1l = TS + TV;
                TW  = TS - TV;
                T1T = Tn + To;
                Tp  = Tn - To;
                T1y = TY + TZ;
                T10 = TY - TZ;
                T1z = Tq + Tr;
                Ts  = Tq - Tr;
                T1U = T11 + T12;
                T13 = T11 - T12;
                T2Q = T1w - T1t;
                T1x = T1t + T1w;
                T27 = T25 + T26;
                T33 = T25 - T26;
                T2u = TF + TG;
                TH  = TF - TG;
                Tm  = Te + Tl;
                T2G = Te - Tl;
                T2h = T2f - T2g;
                T2X = T2g + T2f;
                T1S = T1O - T1R;
                T2J = T1O + T1R;
                T2D = T1k + T1l;
                T1m = T1k - T1l;
                TX  = TP + TW;
                T2o = TW - TP;
                Tv  = ri[WS(is, 2)];
                T18 = ii[WS(is, 12)];
                T19 = ii[WS(is, 2)];
                Tx  = ii[WS(is, 7)];
                Ty  = ii[WS(is, 17)];
                T15 = ri[WS(is, 17)];
                T16 = ri[WS(is, 7)];
            }
            TD  = Tp - Ts;
            Tt  = Tp + Ts;
            T1n = T10 + T13;
            T14 = T10 - T13;
            T2c = T1T + T1U;
            T1V = T1T - T1U;
            T1W = Tu + Tv;
            Tw  = Tu - Tv;
            T1B = T18 + T19;
            T1a = T18 - T19;
            T1C = Tx + Ty;
            Tz  = Tx - Ty;
            T1X = T15 + T16;
            T17 = T15 - T16;
            T1A = T1y - T1z;
            T28 = T1z + T1y;
        }
        T1D = T1B - T1C;
        T29 = T1C + T1B;
        TC  = Tz - Tw;
        TA  = Tw + Tz;
        T1Y = T1W - T1X;
        T2d = T1W + T1X;
        T1b = T17 - T1a;
        T1o = T17 + T1a;
        {
            SIMD_FLOAT T1E, T2R, T2a, T30, TE, T2v, TB, T2H, T1Z, T2K, T2e, T2Y,
                T1c, T2n, T2C;
            SIMD_FLOAT T1p, T1F, T20, T2i, T2b, T2A, TI, T1d, T2I, T1i, T2L,
                T2S, T31, T2Z, T2t;
            T1E           = T1A + T1D;
            T2R           = T1A - T1D;
            T2a           = T28 + T29;
            T30           = T28 - T29;
            TE            = TC - TD;
            T2v           = TD + TC;
            TB            = Tt + TA;
            T2H           = Tt - TA;
            T1Z           = T1V - T1Y;
            T2K           = T1V + T1Y;
            T2e           = T2c - T2d;
            T2Y           = T2c + T2d;
            T1c           = T14 + T1b;
            T2n           = T1b - T14;
            T2C           = T1n + T1o;
            T1p           = T1n - T1o;
            T1F           = T1x + T1E;
            T20           = T1x - T1E;
            T2i           = T2a - T27;
            T2b           = T1J + SIMD_FNMADD(KP250000000, T27 + T2a, T1I);
            T2A           = SIMD_FNMADD(KP618033988, T2u, T2v);
            TI            = T3 + SIMD_FMADD(KP250000000, TE - TH, T6);
            T1d           = TH + TE;
            T2I           = SIMD_FMADD(KP618033988, T2H, T2G);
            T1i           = SIMD_FNMADD(KP381966011, Tm, TB);
            ro[WS(os, 6)] = T7 + Tm + TB;
            T2L           = T2J + T2K;
            T2S           = T2K - T2J;
            T31           = T2X - T2Y;
            T2Z           = T2M + SIMD_FNMADD(KP250000000, T2X + T2Y, T2N);
            T2t           = SIMD_FMADD(KP250000000, T2n - T2o, T2p) - T2s;
            {
                SIMD_FLOAT T2w, T1h, T1q, T2E, T21, T23, T1L, T2l, T2j, T1g,
                    T1e, T1j, T2V, T2T, T2P;
                SIMD_FLOAT T35, T32, T2z, T2x, T2F, T24, T22, T2m, T2k, T1f,
                    T2W, T2U, T36, T34, T2y;
                T2w            = T2o + T2n;
                T1h            = SIMD_FMADD(KP618033988, TX, T1c);
                T1q            = SIMD_FMADD(KP618033988, T1p, T1m);
                T2E            = SIMD_FNMADD(KP381966011, T2D, T2C);
                io[WS(os, 6)]  = T2D + T2C + T2B;
                T21            = SIMD_FMADD(KP951056516, T20, T1Z);
                T23            = SIMD_FMADD(KP587785252, T20, T1Z);
                io[WS(os, 1)]  = T1F + T1K;
                T1L            = SIMD_FNMADD(KP250000000, T1F, T1K);
                T2l            = SIMD_FMADD(KP951056516, T2i, T2e);
                T2j            = SIMD_FMADD(KP951056516, T2i, T2h);
                T1g            = SIMD_FNMADD(KP559016994, T1d, TI);
                T1e            = SIMD_FNMADD(KP951056516, T1d, T1c);
                T1j            = SIMD_FNMADD(KP809016994, T1i, T7);
                T2V            = SIMD_FMADD(KP951056516, T2S, T2Q);
                T2T            = SIMD_FMADD(KP951056516, T2S, T2R);
                ro[WS(os, 1)]  = T2L + T2O;
                T2P            = SIMD_FNMADD(KP250000000, T2L, T2O);
                T35            = SIMD_FMADD(KP951056516, T31, T30);
                T32            = SIMD_FMADD(KP587785252, T31, T30);
                T2z            = SIMD_FNMADD(KP559016994, T2w, T2t);
                T2x            = SIMD_FMADD(KP951056516, T2w, T2v);
                T2F            = SIMD_FNMADD(KP809016994, T2E, T2B);
                T24            = SIMD_FNMADD(KP618033988, T1S, T23);
                T22            = SIMD_FMADD(KP618033988, T21, T1S);
                T2m            = SIMD_FNMADD(KP618033988, T2l, T2h);
                T2k            = SIMD_FMADD(KP618033988, T2j, T2e);
                ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1h, T1g);
                ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1h, T1g);
                T1f            = SIMD_FNMADD(KP618033988, T1e, TX);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1q, T1j);
                ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1q, T1j);
                T2W            = SIMD_FMADD(KP618033988, T2V, T2R);
                T2U            = SIMD_FNMADD(KP618033988, T2T, T2Q);
                T36            = SIMD_FMADD(KP618033988, T35, T33);
                T34            = SIMD_FNMADD(KP618033988, T33, T32);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2A, T2z);
                io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2A, T2z);
                T2y            = SIMD_FMADD(KP618033988, T2x, T2u);
                io[WS(os, 10)] = SIMD_FMADD(KP951056516, T2I, T2F);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2I, T2F);
                io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T24, T1L);
                io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T22, T1L);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2m, T2b);
                io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2k, T2b);
                ro[0]          = SIMD_FMADD(KP951056516, T1f, TI);
                ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2W, T2P);
                ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2U, T2P);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T36, T2Z);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T34, T2Z);
                io[0]          = SIMD_FMADD(KP951056516, T2y, T2t);
            }
        }
    }
}

template <>
struct c2cb_traits<20, 10>
{
    static constexpr long_t flops           = 222;
    static constexpr long_t operations      = 174;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 160;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 10 -name c2cb
 * -standalone */

/*
 * This function contains 174 FP additions, 48 FP multiplications,
 * (or, 126 additions, 0 multiplications, 48 fused multiply/add),
 * 160 stack variables, 6 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 10>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2v, T3, T1w, TG, TD, T6, T2w, T1z, TH, T7, T2x, T1A, TS,
            T2C, T1O;
        SIMD_FLOAT T28, T1F, Tm, T2z, T2m, T1f, T1B, T20, T24, T2p, T2I, T2M,
            TX, Tt, T1P;
        SIMD_FLOAT T1k, T1T, T2T, T2R, T12, T2N, TA, T1Q, T2s, T2J, T1p, T1U,
            T2H, T2X, T2P;
        SIMD_FLOAT T2F, T2Q, T2G, T2q, Tw, T1l, T11, TY, Tz, T2r, T1o, T1S, T26,
            T14, T1E;
        SIMD_FLOAT T1v, T1t, T23, T21, T1L, T1J, T2d, T2b, T13, T2D, T2O, T2U,
            TB, T1G, T1R;
        SIMD_FLOAT T27, T2y, T2t;
        {
            SIMD_FLOAT T1, T2, TE, TF, T4, T5, T1x, T1y, T2g, Ta, T1a, TL, Tf,
                Tg, TO;
            SIMD_FLOAT TP, Ti, TI, Td, T2h, T1d, Tj, T16, T17, Tb, Tc, T1b, T1c,
                T8, T9;
            SIMD_FLOAT TJ, TK;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            TE  = ii[0];
            TF  = ii[WS(is, 10)];
            T4  = ri[WS(is, 5)];
            T5  = ri[WS(is, 15)];
            T1x = ii[WS(is, 5)];
            T1y = ii[WS(is, 15)];
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TJ  = ii[WS(is, 4)];
            TK  = ii[WS(is, 14)];
            Tb  = ri[WS(is, 9)];
            T2v = T1 - T2;
            T3  = T1 + T2;
            T1w = TE + TF;
            TG  = TE - TF;
            TD  = T4 - T5;
            T6  = T4 + T5;
            T2w = T1x - T1y;
            T1z = T1x + T1y;
            T2g = T8 - T9;
            Ta  = T8 + T9;
            T1a = TJ + TK;
            TL  = TJ - TK;
            Tc  = ri[WS(is, 19)];
            T1b = ii[WS(is, 9)];
            T1c = ii[WS(is, 19)];
            Tf  = ri[WS(is, 16)];
            TH  = TD + TG;
            T7  = T3 - T6;
            T2x = T2v - T2w;
            T1A = T1w - T1z;
            Tg  = ri[WS(is, 6)];
            TO  = ii[WS(is, 16)];
            TP  = ii[WS(is, 6)];
            Ti  = ri[WS(is, 1)];
            TI  = Tb - Tc;
            Td  = Tb + Tc;
            T2h = T1c - T1b;
            T1d = T1b + T1c;
            Tj  = ri[WS(is, 11)];
            T16 = ii[WS(is, 1)];
            T17 = ii[WS(is, 11)];
            {
                SIMD_FLOAT Tu, T2n, Tp, T1g, TW, TT, Ts, T2o, T1j, Tv, TZ, T10,
                    Tx, Ty, T1m;
                SIMD_FLOAT T1n, Tn, T2j, Th, T15, TQ, TM, T1M, Te, T2i, T1e,
                    T1Y, TN, Tk, T2k;
                SIMD_FLOAT T18, To, TU, TV, Tq, Tr, T1h, T1i, TR, T1N, Tl, T2l,
                    T19, T1Z;
                Tn  = ri[WS(is, 8)];
                T2j = Tf - Tg;
                Th  = Tf + Tg;
                T15 = TO + TP;
                TQ  = TO - TP;
                TM  = TI + TL;
                T2P = TI - TL;
                T1M = Ta + Td;
                Te  = Ta - Td;
                T2i = T2g + T2h;
                T2F = T2h - T2g;
                T1e = T1a - T1d;
                T1Y = T1a + T1d;
                TN  = Ti - Tj;
                Tk  = Ti + Tj;
                T2k = T17 - T16;
                T18 = T16 + T17;
                To  = ri[WS(is, 18)];
                TU  = ii[WS(is, 8)];
                TV  = ii[WS(is, 18)];
                Tq  = ri[WS(is, 13)];
                Tr  = ri[WS(is, 3)];
                T1h = ii[WS(is, 13)];
                T1i = ii[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                TR  = TN + TQ;
                T2Q = TN - TQ;
                T1N = Th + Tk;
                Tl  = Th - Tk;
                T2l = T2j + T2k;
                T2G = T2k - T2j;
                T19 = T15 - T18;
                T1Z = T15 + T18;
                T2n = Tn - To;
                Tp  = Tn + To;
                T1g = TU + TV;
                TW  = TU - TV;
                TT  = Tq - Tr;
                Ts  = Tq + Tr;
                T2o = T1i - T1h;
                T1j = T1h + T1i;
                TS  = TM + TR;
                T2C = TM - TR;
                T1O = T1M + T1N;
                T28 = T1N - T1M;
                T1F = Te - Tl;
                Tm  = Te + Tl;
                T2z = T2i + T2l;
                T2m = T2i - T2l;
                T1f = T19 - T1e;
                T1B = T1e + T19;
                T20 = T1Y - T1Z;
                T24 = T1Y + T1Z;
                Tv  = ri[WS(is, 2)];
                TZ  = ii[WS(is, 12)];
                T10 = ii[WS(is, 2)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 7)];
                T1m = ii[WS(is, 17)];
                T1n = ii[WS(is, 7)];
                T2p = T2n + T2o;
                T2I = T2n - T2o;
                T2M = TW - TT;
                TX  = TT + TW;
                Tt  = Tp - Ts;
                T1P = Tp + Ts;
                T2q = Tu - Tv;
                Tw  = Tu + Tv;
                T1l = TZ + T10;
                T11 = TZ - T10;
                TY  = Tx - Ty;
                Tz  = Tx + Ty;
                T2r = T1n - T1m;
                T1o = T1m + T1n;
                T1k = T1g - T1j;
                T1T = T1g + T1j;
            }
        }
        T2T = T2P + T2Q;
        T2R = T2P - T2Q;
        T12 = TY + T11;
        T2N = TY - T11;
        TA  = Tw - Tz;
        T1Q = Tw + Tz;
        T2s = T2q + T2r;
        T2J = T2r - T2q;
        T1p = T1l - T1o;
        T1U = T1l + T1o;
        T2H = T2F + T2G;
        T2X = T2F - T2G;
        T13 = TX + T12;
        T2D = TX - T12;
        T2O = T2M + T2N;
        T2U = T2M - T2N;
        TB  = Tt + TA;
        T1G = Tt - TA;
        T1R = T1P + T1Q;
        T27 = T1P - T1Q;
        T2y = T2p + T2s;
        T2t = T2p - T2s;
        {
            SIMD_FLOAT T2K, T2W, T1q, T1C, T1V, T25, T2E, T2e, T2V, T2S, T1r,
                TC, T1W, T2u, T2A;
            SIMD_FLOAT T2Y, T2L, T1D, T1H, T29, T2f, T1u, T1s, T22, T1X, T2B,
                T1I, T1K, T2c, T2a;
            T2K           = T2I - T2J;
            T2W           = T2I + T2J;
            T1q           = T1k - T1p;
            T1C           = T1k + T1p;
            T1V           = T1T - T1U;
            T25           = T1T + T1U;
            T2E           = SIMD_FMADD(KP618033988, T2D, T2C);
            T2e           = SIMD_FNMADD(KP381966011, TS, T13);
            io[WS(os, 5)] = TH + TS + T13;
            T2V =
                SIMD_FMADD(KP809016994, SIMD_FMADD(KP381966011, T2U, T2T), TG) -
                TD;
            T2S           = SIMD_FMADD(KP618033988, T2R, T2O);
            T1r           = Tm - TB;
            TC            = Tm + TB;
            T1W           = T1O - T1R;
            T1S           = T3 + SIMD_FNMADD(KP250000000, T1O + T1R, T6);
            T2u           = SIMD_FMADD(KP618033988, T2t, T2m);
            T2A           = SIMD_FNMADD(KP381966011, T2z, T2y);
            ro[WS(os, 5)] = T2x + T2z + T2y;
            T2Y           = SIMD_FMADD(KP618033988, T2X, T2W);
            T2L           = T2v + SIMD_FMADD(KP809016994,
                                   SIMD_FMADD(KP381966011, T2K, T2H), T2w);
            T1D           = T1B + T1C;
            T1H           = T1B - T1C;
            T29           = T24 - T25;
            T26           = T1w + SIMD_FNMADD(KP250000000, T24 + T25, T1z);
            T2f           = SIMD_FNMADD(KP809016994, T2e, TH);
            T1u           = SIMD_FNMADD(KP951056516, T1r, T1f);
            T1s           = SIMD_FNMADD(KP951056516, T1r, T1q);
            ro[0]         = T7 + TC;
            T14           = SIMD_FNMADD(KP250000000, TC, T7);
            T22           = SIMD_FMADD(KP951056516, T1W, T1V);
            T1X           = SIMD_FMADD(KP587785252, T1W, T1V);
            T2B           = SIMD_FNMADD(KP809016994, T2A, T2x);
            io[WS(os, 7)] = SIMD_FMADD(KP951056516, T2Y, T2V);
            io[WS(os, 3)] = SIMD_FNMADD(KP951056516, T2Y, T2V);
            ro[WS(os, 7)] = SIMD_FNMADD(KP951056516, T2S, T2L);
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516, T2S, T2L);
            T1I           = SIMD_FMADD(KP951056516, T1H, T1G);
            T1K           = SIMD_FMADD(KP587785252, T1H, T1G);
            io[0]         = T1A + T1D;
            T1E           = SIMD_FNMADD(KP250000000, T1D, T1A);
            T2c           = SIMD_FNMADD(KP951056516, T29, T27);
            T2a           = SIMD_FNMADD(KP951056516, T29, T28);
            io[WS(os, 9)] = SIMD_FMADD(KP951056516, T2u, T2f);
            io[WS(os, 1)] = SIMD_FNMADD(KP951056516, T2u, T2f);
            T1v           = SIMD_FMADD(KP618033988, T1u, T1q);
            T1t           = SIMD_FNMADD(KP618033988, T1s, T1f);
            T23           = SIMD_FMADD(KP618033988, T22, T20);
            T21           = SIMD_FNMADD(KP618033988, T20, T1X);
            ro[WS(os, 9)] = SIMD_FNMADD(KP951056516, T2E, T2B);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T2E, T2B);
            T1L           = SIMD_FNMADD(KP618033988, T1F, T1K);
            T1J           = SIMD_FMADD(KP618033988, T1I, T1F);
            T2d           = SIMD_FNMADD(KP618033988, T2c, T28);
            T2b           = SIMD_FMADD(KP618033988, T2a, T27);
        }
        ro[WS(os, 8)] = SIMD_FMADD(KP951056516, T1v, T14);
        ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1t, T14);
        ro[WS(os, 6)] = SIMD_FMADD(KP951056516, T23, T1S);
        ro[WS(os, 2)] = SIMD_FNMADD(KP951056516, T21, T1S);
        io[WS(os, 8)] = SIMD_FNMADD(KP951056516, T1L, T1E);
        io[WS(os, 4)] = SIMD_FMADD(KP951056516, T1J, T1E);
        io[WS(os, 6)] = SIMD_FMADD(KP951056516, T2d, T26);
        io[WS(os, 2)] = SIMD_FMADD(KP951056516, T2b, T26);
    }
}

template <>
struct c2cb_traits<20, 11>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 172;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 139;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 11 -name c2cb
 * -standalone */

/*
 * This function contains 172 FP additions, 48 FP multiplications,
 * (or, 124 additions, 0 multiplications, 48 fused multiply/add),
 * 139 stack variables, 6 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 11>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2h, T2m, T2i, T2j, T2q, T2n;
        {
            SIMD_FLOAT T2z, T3, T1n, T6, T1q, T2C, T7, T2r, T19, T1j, T1a, T1k,
                T2E, T24, T1x;
            SIMD_FLOAT T2R, T2w, Tm, T1G, TV, T2L, T1T, T2B, T28, TS, T2t, Tt,
                T1c, T1A, T20;
            SIMD_FLOAT T1H, TY, T1J, Tw, T1C, T12, T1B, Tz, T1K, T15, T1I, T29,
                TZ, T1g, T1D;
            SIMD_FLOAT T1Z, TA, T1d, T1L, T2a, T16, T1h, T1l, T1b, T2p;
            {
                SIMD_FLOAT T1, T2, T4, T5, T1o, T1p, T2k, T2l, T1Q, Ta, T1s, TG,
                    TL, TM, Ti;
                SIMD_FLOAT Tj, TO, T1r, Td, T1R, TJ, TP, Th, T1N, Tb, Tc, TH,
                    TI, T8, T9;
                SIMD_FLOAT TE, TF, Tf, Tg;
                T1  = ri[0];
                T2  = ri[WS(is, 10)];
                T4  = ii[WS(is, 5)];
                T5  = ii[WS(is, 15)];
                T1o = ii[0];
                T1p = ii[WS(is, 10)];
                T2k = ri[WS(is, 5)];
                T2l = ri[WS(is, 15)];
                T8  = ri[WS(is, 4)];
                T9  = ri[WS(is, 14)];
                TE  = ii[WS(is, 4)];
                TF  = ii[WS(is, 14)];
                Tb  = ii[WS(is, 19)];
                T2z = T1 + T2;
                T3  = T1 - T2;
                T1n = T4 + T5;
                T6  = T4 - T5;
                T1q = T1o + T1p;
                T2h = T1o - T1p;
                T2C = T2k + T2l;
                T2m = T2k - T2l;
                T1Q = T8 + T9;
                Ta  = T8 - T9;
                T1s = TE + TF;
                TG  = TE - TF;
                Tc  = ii[WS(is, 9)];
                TH  = ri[WS(is, 9)];
                TI  = ri[WS(is, 19)];
                T7  = T3 - T6;
                Tf  = ri[WS(is, 16)];
                Tg  = ri[WS(is, 6)];
                TL  = ii[WS(is, 16)];
                T2r = T2h + T2m;
                TM  = ii[WS(is, 6)];
                Ti  = ii[WS(is, 11)];
                Tj  = ii[WS(is, 1)];
                TO  = ri[WS(is, 1)];
                T1r = Tc + Tb;
                Td  = Tb - Tc;
                T1R = TH + TI;
                TJ  = TH - TI;
                TP  = ri[WS(is, 11)];
                Th  = Tf - Tg;
                T1N = Tf + Tg;
                {
                    SIMD_FLOAT TW, Tp, T1z, T1y, Ts, TX, Tu, Tv, T10, T11, Tx,
                        Ty, T13, T14, Tn;
                    SIMD_FLOAT TN, T23, T1t, Te, T1S, T26, TK, T1O, TQ, T22,
                        T1w, Tl, To, TT, TU;
                    SIMD_FLOAT T1v, T1u, Tk, Tq, Tr, T1P, T27, TR;
                    Tn  = ri[WS(is, 8)];
                    T1v = TL + TM;
                    TN  = TL - TM;
                    T1u = Tj + Ti;
                    Tk  = Ti - Tj;
                    T23 = T1r - T1s;
                    T1t = T1r + T1s;
                    Te  = Ta + Td;
                    T19 = Td - Ta;
                    T1S = T1Q + T1R;
                    T26 = T1Q - T1R;
                    TK  = TG + TJ;
                    T1j = TJ - TG;
                    T1O = TO + TP;
                    TQ  = TO - TP;
                    T22 = T1v - T1u;
                    T1w = T1u + T1v;
                    Tl  = Th + Tk;
                    T1a = Tk - Th;
                    To  = ri[WS(is, 18)];
                    TT  = ii[WS(is, 8)];
                    TU  = ii[WS(is, 18)];
                    Tq  = ii[WS(is, 3)];
                    Tr  = ii[WS(is, 13)];
                    TW  = ri[WS(is, 13)];
                    T1P = T1N + T1O;
                    T27 = T1O - T1N;
                    TR  = TN + TQ;
                    T1k = TQ - TN;
                    T2E = T23 + T22;
                    T24 = T22 - T23;
                    T1x = T1t + T1w;
                    T2R = T1t - T1w;
                    T2w = Te - Tl;
                    Tm  = Te + Tl;
                    T1G = Tn + To;
                    Tp  = Tn - To;
                    T1z = TT + TU;
                    TV  = TT - TU;
                    T1y = Tr + Tq;
                    Ts  = Tq - Tr;
                    T2L = T1S + T1P;
                    T1T = T1P - T1S;
                    T2B = T26 - T27;
                    T28 = T26 + T27;
                    TS  = TK - TR;
                    T2t = TK + TR;
                    TX  = ri[WS(is, 3)];
                    Tu  = ri[WS(is, 12)];
                    Tv  = ri[WS(is, 2)];
                    T10 = ii[WS(is, 12)];
                    T11 = ii[WS(is, 2)];
                    Tx  = ii[WS(is, 7)];
                    Ty  = ii[WS(is, 17)];
                    T13 = ri[WS(is, 17)];
                    T14 = ri[WS(is, 7)];
                    Tt  = Tp + Ts;
                    T1c = Tp - Ts;
                    T1A = T1y + T1z;
                    T20 = T1z - T1y;
                    T1H = TW + TX;
                    TY  = TW - TX;
                    T1J = Tu + Tv;
                    Tw  = Tu - Tv;
                    T1C = T10 + T11;
                    T12 = T10 - T11;
                    T1B = Ty + Tx;
                    Tz  = Tx - Ty;
                    T1K = T13 + T14;
                    T15 = T13 - T14;
                }
            }
            T1I = T1G + T1H;
            T29 = T1G - T1H;
            TZ  = TV + TY;
            T1g = TV - TY;
            T1D = T1B + T1C;
            T1Z = T1B - T1C;
            TA  = Tw + Tz;
            T1d = Tz - Tw;
            T1L = T1J + T1K;
            T2a = T1K - T1J;
            T16 = T12 + T15;
            T1h = T15 - T12;
            T2i = T1j + T1k;
            T1l = T1j - T1k;
            T1b = T19 + T1a;
            T2p = T19 - T1a;
            {
                SIMD_FLOAT T2F, T1M, T1F, T25, T2y, T1f, T2N, T2D, T18, T1m,
                    T1X, T1V, T2d, T2f, TD;
                SIMD_FLOAT T2T, T2Q, T2J, T2H, T2v, T2O, T1E, T21, T2x, TB, T2o,
                    T1e, T2M, T2A, T2b;
                SIMD_FLOAT T17, T2s, T1i, T1U, T2c, TC, T2P, T2G, T2u, T1Y, T1W,
                    T2g, T2e, T2U, T2S;
                SIMD_FLOAT T2K, T2I;
                T2O           = T1A - T1D;
                T1E           = T1A + T1D;
                T2F           = T20 + T1Z;
                T21           = T1Z - T20;
                T2x           = Tt - TA;
                TB            = Tt + TA;
                T2o           = T1c + T1d;
                T1e           = T1c - T1d;
                T2M           = T1I + T1L;
                T1M           = T1I - T1L;
                T2A           = T2a - T29;
                T2b           = T29 + T2a;
                T17           = TZ - T16;
                T2s           = TZ + T16;
                T1i           = T1g + T1h;
                T2j           = T1g - T1h;
                T1U           = T1x - T1E;
                T1F           = T1n + SIMD_FNMADD(KP250000000, T1x + T1E, T1q);
                T2c           = T24 + T21;
                T25           = SIMD_FMADD(KP250000000, T21 - T24, T1q) - T1n;
                T2y           = SIMD_FMADD(KP618033988, T2x, T2w);
                TC            = SIMD_FNMADD(KP381966011, Tm, TB);
                ro[WS(os, 4)] = T7 + Tm + TB;
                T1f           = T3 + SIMD_FMADD(KP809016994,
                                      SIMD_FMADD(KP381966011, T1e, T1b), T6);
                T2P           = T2L - T2M;
                T2N           = T2z + SIMD_FNMADD(KP250000000, T2L + T2M, T2C);
                T2G           = T2B + T2A;
                T2D           = SIMD_FMADD(KP250000000, T2A - T2B, T2z) - T2C;
                T18           = SIMD_FMADD(KP618033988, T17, TS);
                T2u           = SIMD_FNMADD(KP381966011, T2t, T2s);
                io[WS(os, 4)] = T2t + T2s + T2r;
                T1m           = SIMD_FMADD(KP618033988, T1l, T1i);
                T1X           = SIMD_FNMADD(KP951056516, T1U, T1M);
                T1V           = SIMD_FNMADD(KP951056516, T1U, T1T);
                T2d           = SIMD_FMADD(KP951056516, T2c, T2b);
                T2f           = SIMD_FMADD(KP587785252, T2c, T2b);
                TD            = SIMD_FNMADD(KP809016994, TC, T7);
                T2T           = SIMD_FMADD(KP951056516, T2P, T2O);
                T2Q           = SIMD_FMADD(KP587785252, T2P, T2O);
                T2J           = SIMD_FNMADD(KP951056516, T2G, T2E);
                T2H           = SIMD_FNMADD(KP951056516, T2G, T2F);
                T2v           = SIMD_FNMADD(KP809016994, T2u, T2r);
                T2q           = SIMD_FMADD(KP618033988, T2p, T2o);
                ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1m, T1f);
                ro[WS(os, 6)] = SIMD_FNMADD(KP951056516, T1m, T1f);
                T1Y           = SIMD_FNMADD(KP618033988, T1X, T1T);
                T1W           = SIMD_FMADD(KP618033988, T1V, T1M);
                T2g           = SIMD_FNMADD(KP618033988, T28, T2f);
                T2e           = SIMD_FMADD(KP618033988, T2d, T28);
                ro[0]         = SIMD_FMADD(KP951056516, T18, TD);
                ro[WS(os, 8)] = SIMD_FNMADD(KP951056516, T18, TD);
                T2U           = SIMD_FMADD(KP618033988, T2T, T2R);
                T2S           = SIMD_FNMADD(KP618033988, T2R, T2Q);
                T2K           = SIMD_FMADD(KP618033988, T2J, T2F);
                T2I           = SIMD_FNMADD(KP618033988, T2H, T2E);
                io[WS(os, 8)] = SIMD_FMADD(KP951056516, T2y, T2v);
                io[0]         = SIMD_FNMADD(KP951056516, T2y, T2v);
                io[WS(os, 5)] = SIMD_FMADD(KP951056516, T1Y, T1F);
                io[WS(os, 1)] = SIMD_FMADD(KP951056516, T1W, T1F);
                io[WS(os, 7)] = SIMD_FNMADD(KP951056516, T2g, T25);
                io[WS(os, 3)] = SIMD_FMADD(KP951056516, T2e, T25);
                ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T2U, T2N);
                ro[WS(os, 1)] = SIMD_FNMADD(KP951056516, T2S, T2N);
                ro[WS(os, 7)] = SIMD_FMADD(KP951056516, T2K, T2D);
                ro[WS(os, 3)] = SIMD_FMADD(KP951056516, T2I, T2D);
            }
        }
        T2n = SIMD_FMADD(KP809016994, SIMD_FMADD(KP381966011, T2j, T2i), T2h) -
              T2m;
        io[WS(os, 6)] = SIMD_FMADD(KP951056516, T2q, T2n);
        io[WS(os, 2)] = SIMD_FNMADD(KP951056516, T2q, T2n);
    }
}

template <>
struct c2cb_traits<20, 12>
{
    static constexpr long_t flops           = 216;
    static constexpr long_t operations      = 170;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 141;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 12 -name c2cb
 * -standalone */

/*
 * This function contains 170 FP additions, 46 FP multiplications,
 * (or, 124 additions, 0 multiplications, 46 fused multiply/add),
 * 141 stack variables, 9 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 12>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    {
        SIMD_FLOAT T2j, T2m, T2t, T2u, T2x, T2w, T2y, T2v;
        {
            SIMD_FLOAT T3, T2B, T1v, T1K, T6, T2C, T1y, T1V, T1B, T1Y, T26, T2o,
                T2P, Tl, T1g;
            SIMD_FLOAT T2E, T2a, T2i, T2A, T1k, T2M, T17, T1M, TE, T1c, Ts, T1F,
                T21, T1N, TH;
            SIMD_FLOAT T1Q, Tv, T1H, TL, T1G, Ty, T1P, TO, T1, T2, T1t, T1u, T4,
                T5, T2k;
            SIMD_FLOAT T2l, T2n, T2b, T1O, TI, T1l, T27, T22, T1I, T1b, Tz, T2c,
                T1R, TP, T1m;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            T1t = ii[0];
            T1u = ii[WS(is, 10)];
            T4  = ri[WS(is, 5)];
            T5  = ri[WS(is, 15)];
            T2k = ii[WS(is, 5)];
            T2l = ii[WS(is, 15)];
            {
                SIMD_FLOAT Ta, T1U, T9, T1x, TV, Tb, TW, TX, Te, Tf, T10, T11,
                    Th, Ti, T13;
                SIMD_FLOAT T14, T7, T8, TT, TU, To, T1D, T1E, Tr, TF, TG, Tt,
                    Tu, TJ, TK;
                SIMD_FLOAT Tw, Tx, TM, TN;
                T7  = ri[WS(is, 4)];
                T8  = ri[WS(is, 14)];
                TT  = ii[WS(is, 4)];
                TU  = ii[WS(is, 14)];
                Ta  = ri[WS(is, 9)];
                T2j = T1 - T2;
                T3  = T1 + T2;
                T2B = T1t + T1u;
                T1v = T1t - T1u;
                T1K = T4 - T5;
                T6  = T4 + T5;
                T2C = T2k + T2l;
                T2m = T2k - T2l;
                T1U = T7 - T8;
                T9  = T7 + T8;
                T1x = TT - TU;
                TV  = TT + TU;
                Tb  = ri[WS(is, 19)];
                TW  = ii[WS(is, 9)];
                TX  = ii[WS(is, 19)];
                Te  = ri[WS(is, 16)];
                Tf  = ri[WS(is, 6)];
                T10 = ii[WS(is, 16)];
                T11 = ii[WS(is, 6)];
                Th  = ri[WS(is, 1)];
                Ti  = ri[WS(is, 11)];
                T13 = ii[WS(is, 1)];
                T14 = ii[WS(is, 11)];
                {
                    SIMD_FLOAT Tm, T24, Td, T1e, T28, T1i, TZ, T25, Tk, T1f,
                        T29, T1j, T16, Tn, TC;
                    SIMD_FLOAT TD, T1w, Tc, T1T, TY, T1X, Tg, T1A, T12, T1z, Tj,
                        T1W, T15, Tp, Tq;
                    Tm  = ri[WS(is, 8)];
                    T1w = Ta - Tb;
                    Tc  = Ta + Tb;
                    T1T = TX - TW;
                    TY  = TW + TX;
                    T1X = Te - Tf;
                    Tg  = Te + Tf;
                    T1A = T10 - T11;
                    T12 = T10 + T11;
                    T1z = Th - Ti;
                    Tj  = Th + Ti;
                    T1W = T14 - T13;
                    T15 = T13 + T14;
                    T24 = T1w + T1x;
                    T1y = T1w - T1x;
                    Td  = T9 + Tc;
                    T1e = T9 - Tc;
                    T28 = T1U + T1T;
                    T1V = T1T - T1U;
                    T1i = TY - TV;
                    TZ  = TV + TY;
                    T25 = T1z + T1A;
                    T1B = T1z - T1A;
                    Tk  = Tg + Tj;
                    T1f = Tj - Tg;
                    T29 = T1X + T1W;
                    T1Y = T1W - T1X;
                    T1j = T12 - T15;
                    T16 = T12 + T15;
                    Tn  = ri[WS(is, 18)];
                    TC  = ii[WS(is, 8)];
                    TD  = ii[WS(is, 18)];
                    Tp  = ri[WS(is, 13)];
                    T26 = T24 + T25;
                    T2o = T25 - T24;
                    Tq  = ri[WS(is, 3)];
                    T2P = Tk - Td;
                    Tl  = Td + Tk;
                    T1g = T1e - T1f;
                    T2E = T1e + T1f;
                    T2a = T28 - T29;
                    T2i = T28 + T29;
                    T2A = T1j - T1i;
                    T1k = T1i + T1j;
                    T2M = TZ + T16;
                    T17 = TZ - T16;
                    To  = Tm + Tn;
                    T1M = Tm - Tn;
                    TE  = TC + TD;
                    T1D = TC - TD;
                    T1E = Tp - Tq;
                    Tr  = Tp + Tq;
                    TF  = ii[WS(is, 13)];
                    TG  = ii[WS(is, 3)];
                }
                Tt  = ri[WS(is, 12)];
                Tu  = ri[WS(is, 2)];
                TJ  = ii[WS(is, 12)];
                TK  = ii[WS(is, 2)];
                Tw  = ri[WS(is, 17)];
                Tx  = ri[WS(is, 7)];
                TM  = ii[WS(is, 17)];
                TN  = ii[WS(is, 7)];
                T1c = To - Tr;
                Ts  = To + Tr;
                T1F = T1D - T1E;
                T21 = T1E + T1D;
                T1N = TG - TF;
                TH  = TF + TG;
                T1Q = Tt - Tu;
                Tv  = Tt + Tu;
                T1H = TJ - TK;
                TL  = TJ + TK;
                T1G = Tw - Tx;
                Ty  = Tw + Tx;
                T1P = TN - TM;
                TO  = TM + TN;
            }
            T2n = T2j - T2m;
            T2b = T1M + T1N;
            T1O = T1M - T1N;
            TI  = TE + TH;
            T1l = TE - TH;
            T27 = T1K + T1v;
            T22 = T1G + T1H;
            T1I = T1G - T1H;
            T1b = Ty - Tv;
            Tz  = Tv + Ty;
            T2c = T1Q + T1P;
            T1R = T1P - T1Q;
            TP  = TL + TO;
            T1m = TO - TL;
            {
                SIMD_FLOAT T2O, T1h, TB, T2N, T2D, T20, T1C, T2f, T2T, T2R, T2H,
                    T2J, T2s, T1J, T1s;
                SIMD_FLOAT T1q, T1a, T18, T23, T2F, TQ, T1n, T1o, TR, T2e, T2Q,
                    T2G, T2r, T1Z, T2p;
                SIMD_FLOAT T1d, TA, T2h, T2d, T1S, T2L, T2z, T2q, T1r, T1p, TS,
                    T19, T1L, T2g, T2U;
                SIMD_FLOAT T2S, T2K, T2I;
                T2t           = T1V + T1Y;
                T1Z           = T1V - T1Y;
                T2p           = T22 - T21;
                T23           = T21 + T22;
                T2F           = T1c + T1b;
                T1d           = T1b - T1c;
                T2O           = Ts - Tz;
                TA            = Ts + Tz;
                T2h           = T2b + T2c;
                T2d           = T2b - T2c;
                T1S           = T1O + T1R;
                T2u           = T1O - T1R;
                TQ            = TI - TP;
                T2L           = TI + TP;
                T1n           = T1l + T1m;
                T2z           = T1m - T1l;
                T2q           = SIMD_FMADD(KP525731112, T2i, T2p);
                io[WS(os, 3)] = T23 + T26 + T27;
                T1o           = T1g + T1d;
                T1h           = SIMD_FMADD(KP250000000, T1d - T1g, T3) - T6;
                TR            = Tl - TA;
                TB            = T3 + SIMD_FNMADD(KP250000000, Tl + TA, T6);
                ro[WS(os, 3)] = T2h + T2i + T2n;
                T2e           = SIMD_FMADD(KP525731112, T26, T2d);
                T2Q           = T2M - T2L;
                T2N           = T2B + SIMD_FNMADD(KP250000000, T2L + T2M, T2C);
                T2G           = T2z + T2A;
                T2D           = SIMD_FMADD(KP250000000, T2z - T2A, T2B) - T2C;
                T2r           = SIMD_FNMADD(KP726542528, T2q, T2h);
                T20           = SIMD_FMADD(KP618033988, T1Z, T1S);
                T1r           = SIMD_FNMADD(KP951056516, T1o, T1k);
                T1p           = SIMD_FNMADD(KP951056516, T1o, T1n);
                TS            = SIMD_FMADD(KP587785252, TR, TQ);
                T19           = SIMD_FMADD(KP951056516, TR, TQ);
                T2x           = T1y - T1B;
                T1C           = T1y + T1B;
                T2f           = SIMD_FNMADD(KP726542528, T2e, T23);
                T2T           = SIMD_FNMADD(KP951056516, T2Q, T2O);
                T2R           = SIMD_FNMADD(KP951056516, T2Q, T2P);
                T2H           = SIMD_FMADD(KP951056516, T2G, T2F);
                T2J           = SIMD_FMADD(KP587785252, T2G, T2F);
                T2s           = SIMD_FNMADD(KP850650808, T2r, T2o);
                T1J           = T1F - T1I;
                T2w           = T1F + T1I;
                T1s           = SIMD_FMADD(KP618033988, T1r, T1n);
                T1q           = SIMD_FNMADD(KP618033988, T1p, T1k);
                T1a           = SIMD_FMADD(KP618033988, T19, T17);
                T18           = SIMD_FNMADD(KP618033988, T17, TS);
                T2g           = SIMD_FNMADD(KP850650808, T2f, T2a);
                T2U           = SIMD_FNMADD(KP618033988, T2T, T2P);
                T2S           = SIMD_FMADD(KP618033988, T2R, T2O);
                T2K           = SIMD_FNMADD(KP618033988, T2E, T2J);
                T2I           = SIMD_FMADD(KP618033988, T2H, T2E);
                ro[WS(os, 7)] = SIMD_FMADD(KP951056516, T2s, T2n);
                T1L = SIMD_FMADD(KP809016994, SIMD_FMADD(KP381966011, T1J, T1C),
                                 T1v) -
                      T1K;
                ro[WS(os, 6)] = SIMD_FMADD(KP951056516, T1s, T1h);
                ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1q, T1h);
                ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1a, TB);
                ro[0]         = SIMD_FNMADD(KP951056516, T18, TB);
                io[WS(os, 7)] = SIMD_FMADD(KP951056516, T2g, T27);
                io[WS(os, 4)] = SIMD_FMADD(KP951056516, T2U, T2N);
                io[0]         = SIMD_FMADD(KP951056516, T2S, T2N);
                io[WS(os, 6)] = SIMD_FNMADD(KP951056516, T2K, T2D);
                io[WS(os, 2)] = SIMD_FMADD(KP951056516, T2I, T2D);
                io[WS(os, 5)] = SIMD_FMADD(KP951056516, T20, T1L);
                io[WS(os, 1)] = SIMD_FNMADD(KP951056516, T20, T1L);
            }
        }
        T2y = SIMD_FMADD(KP618033988, T2x, T2w);
        T2v = T2j +
              SIMD_FMADD(KP809016994, SIMD_FMADD(KP381966011, T2u, T2t), T2m);
        ro[WS(os, 5)] = SIMD_FNMADD(KP951056516, T2y, T2v);
        ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T2y, T2v);
    }
}

template <>
struct c2cb_traits<20, 13>
{
    static constexpr long_t flops           = 202;
    static constexpr long_t operations      = 160;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 13 -name c2cb
 * -standalone */

/*
 * This function contains 160 FP additions, 42 FP multiplications,
 * (or, 118 additions, 0 multiplications, 42 fused multiply/add),
 * 133 stack variables, 9 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 13>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T2c, T1D, T1E, T2h, T2z, T1g, T7, T22, T2o, T2d, T2A, T2e,
            T1F, T2y, T2l;
        SIMD_FLOAT T2E, T2C, T2b, T1l, T1Y, T1W, T2t, T2F, T2D, T2i, T1m;
        {
            SIMD_FLOAT T2u, T3, T6, T2x, T27, TC, T20, T14, T28, TD, T1Z, T1b,
                T1A, T29, T2p;
            SIMD_FLOAT Tm, T2I, T1M, T2w, T2n, T1N, Tp, T1q, TL, TM, TN, Tu, Tv,
                TT, TU;
            SIMD_FLOAT Tx, Ts, T1r, Ty, TQ, TR, T1, T2, T1B, T1C, T4, T5, T2f,
                T2g;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            T1B = ii[0];
            T1C = ii[WS(is, 10)];
            T4  = ii[WS(is, 5)];
            T5  = ii[WS(is, 15)];
            T2f = ri[WS(is, 5)];
            T2g = ri[WS(is, 15)];
            {
                SIMD_FLOAT Tb, T1G, Ta, T1y, T13, Tc, TY, TZ, Tf, Tg, T18, T19,
                    Ti, Tj, T15;
                SIMD_FLOAT T16, T8, T9, T11, T12, Tq, Tr, Tn, T1z, Te, T1I, T1f,
                    T1w, Tl, T1L;
                SIMD_FLOAT T1e, To, TJ, TK, T1x, Td, T1H, T10, T1K, Th, T1u,
                    T1a, T1v, Tk, T1J;
                SIMD_FLOAT T17;
                T8  = ri[WS(is, 4)];
                T9  = ri[WS(is, 14)];
                T11 = ii[WS(is, 4)];
                T12 = ii[WS(is, 14)];
                Tb  = ii[WS(is, 19)];
                T2u = T1 + T2;
                T3  = T1 - T2;
                T2c = T1B - T1C;
                T1D = T1B + T1C;
                T1E = T4 + T5;
                T6  = T4 - T5;
                T2x = T2f + T2g;
                T2h = T2f - T2g;
                T1G = T8 + T9;
                Ta  = T8 - T9;
                T1y = T11 + T12;
                T13 = T11 - T12;
                Tc  = ii[WS(is, 9)];
                TY  = ri[WS(is, 9)];
                TZ  = ri[WS(is, 19)];
                Tf  = ri[WS(is, 16)];
                Tg  = ri[WS(is, 6)];
                T18 = ii[WS(is, 16)];
                T19 = ii[WS(is, 6)];
                Ti  = ii[WS(is, 11)];
                Tj  = ii[WS(is, 1)];
                T15 = ri[WS(is, 1)];
                T16 = ri[WS(is, 11)];
                Tn  = ri[WS(is, 8)];
                T1x = Tc + Tb;
                Td  = Tb - Tc;
                T1H = TY + TZ;
                T10 = TY - TZ;
                T1K = Tf + Tg;
                Th  = Tf - Tg;
                T1u = T18 + T19;
                T1a = T18 - T19;
                T1v = Tj + Ti;
                Tk  = Ti - Tj;
                T1J = T15 + T16;
                T17 = T15 - T16;
                T1z = T1x - T1y;
                T27 = T1x + T1y;
                Te  = Ta + Td;
                TC  = Td - Ta;
                T20 = T1G + T1H;
                T1I = T1G - T1H;
                T1f = T13 + T10;
                T14 = T10 - T13;
                T1w = T1u - T1v;
                T28 = T1v + T1u;
                Tl  = Th + Tk;
                TD  = Tk - Th;
                T1Z = T1K + T1J;
                T1L = T1J - T1K;
                T1e = T1a + T17;
                T1b = T17 - T1a;
                To  = ri[WS(is, 18)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 18)];
                Tq  = ii[WS(is, 3)];
                T2z = T1z + T1w;
                T1A = T1w - T1z;
                T29 = T27 + T28;
                T2p = Te - Tl;
                Tm  = Te + Tl;
                T2I = T20 + T1Z;
                T1M = T1I + T1L;
                T2w = T1I - T1L;
                T2n = T1f + T1e;
                T1g = T1e - T1f;
                Tr  = ii[WS(is, 13)];
                T1N = Tn + To;
                Tp  = Tn - To;
                T1q = TJ + TK;
                TL  = TJ - TK;
                TM  = ri[WS(is, 13)];
                TN  = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                Tv  = ri[WS(is, 2)];
                TT  = ii[WS(is, 12)];
                TU  = ii[WS(is, 2)];
                Tx  = ii[WS(is, 7)];
                Ts  = Tq - Tr;
                T1r = Tr + Tq;
                Ty  = ii[WS(is, 17)];
                TQ  = ri[WS(is, 17)];
                TR  = ri[WS(is, 7)];
            }
            {
                SIMD_FLOAT T21, T1s, TF, Tt, T25, T1P, TP, T1i, T23, T1p, TG,
                    TA, T24, T1S, TW;
                SIMD_FLOAT T1h, Tw, T1R, TV, T1o, Tz, T1n, TS, T1Q, TO, T1O,
                    T1c, T2k, TE, TB;
                SIMD_FLOAT T2G, TI, T2B, T2a, T1k, T1d, T1V, T1X, T2K, T2s, T1t,
                    T2H, T2q, T2j, TH;
                SIMD_FLOAT T2v, T1T, T26, T2m, T1j, TX, T1U, T2J, T2r;
                T7            = T3 - T6;
                TO            = TM - TN;
                T1O           = TM + TN;
                Tw            = Tu - Tv;
                T1R           = Tu + Tv;
                TV            = TT - TU;
                T1o           = TT + TU;
                T21           = T1r + T1q;
                T1s           = T1q - T1r;
                TF            = Tp - Ts;
                Tt            = Tp + Ts;
                Tz            = Tx - Ty;
                T1n           = Ty + Tx;
                TS            = TQ - TR;
                T1Q           = TQ + TR;
                T25           = T1N + T1O;
                T1P           = T1N - T1O;
                TP            = TL - TO;
                T1i           = TL + TO;
                T22           = T1Z - (SIMD_FMADD(KP850650808, T21, T20));
                T2o           = T2c + T2h;
                T23           = T1n + T1o;
                T1p           = T1n - T1o;
                TG            = Tz - Tw;
                TA            = Tw + Tz;
                T24           = T1R + T1Q;
                T1S           = T1Q - T1R;
                TW            = TS - TV;
                T1h           = TV + TS;
                T1c           = T14 - T1b;
                T2d           = T14 + T1b;
                T2k           = TC - TD;
                TE            = TC + TD;
                T1t           = T1p - T1s;
                T2A           = T1s + T1p;
                T2H           = T21 - T23;
                T2q           = Tt - TA;
                TB            = Tt + TA;
                T2j           = TF + TG;
                TH            = TF - TG;
                T2v           = T1S - T1P;
                T1T           = T1P + T1S;
                T2G           = T27 - (SIMD_FMADD(KP850650808, T24, T28));
                T26           = T24 - T25;
                T2m           = T1i + T1h;
                T1j           = T1h - T1i;
                TX            = TP + TW;
                T2e           = TP - TW;
                T1U           = T1t + T1A;
                T1F           = SIMD_FMADD(KP250000000, T1t - T1A, T1D) - T1E;
                T2J           = SIMD_FMADD(KP525731112, T2I, T2H);
                T2r           = SIMD_FMADD(KP525731112, T2n, T2q);
                ro[WS(os, 2)] = T7 + Tm + TB;
                TI            = T3 + SIMD_FMADD(KP809016994,
                                     SIMD_FMADD(KP381966011, TH, TE), T6);
                T2B           = T2v + T2w;
                T2y           = SIMD_FMADD(KP250000000, T2v - T2w, T2u) - T2x;
                T2a           = SIMD_FMADD(KP525731112, T29, T26);
                io[WS(os, 2)] = T2m + T2n + T2o;
                T1k           = SIMD_FMADD(KP525731112, Tm, T1j);
                T1d           = SIMD_FMADD(KP618033988, T1c, TX);
                T1V           = SIMD_FMADD(KP951056516, T1U, T1T);
                T1X           = SIMD_FMADD(KP587785252, T1U, T1T);
                T2K           = SIMD_FNMADD(KP726542528, T2J, T25);
                T2s           = SIMD_FNMADD(KP726542528, T2r, T2m);
                T2l           = SIMD_FMADD(KP618033988, T2k, T2j);
                T2E           = SIMD_FNMADD(KP951056516, T2B, T2z);
                T2C           = SIMD_FNMADD(KP951056516, T2B, T2A);
                T2b           = SIMD_FNMADD(KP726542528, T2a, T23);
                T1l           = SIMD_FNMADD(KP726542528, T1k, TB);
                ro[0]         = SIMD_FMADD(KP951056516, T1d, TI);
                ro[WS(os, 4)] = SIMD_FNMADD(KP951056516, T1d, TI);
                T1Y           = SIMD_FNMADD(KP618033988, T1M, T1X);
                T1W           = SIMD_FMADD(KP618033988, T1V, T1M);
                ro[WS(os, 3)] =
                    T2u + SIMD_FMADD(KP951056516,
                                     SIMD_FNMADD(KP850650808, T2K, T2G), T2x);
                T2t = SIMD_FNMADD(KP850650808, T2s, T2p);
            }
        }
        T2F = SIMD_FMADD(KP618033988, T2E, T2A);
        T2D = SIMD_FNMADD(KP618033988, T2C, T2z);
        io[WS(os, 3)] =
            T1E +
            SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T2b, T22), T1D);
        T2i = SIMD_FMADD(KP809016994, SIMD_FMADD(KP381966011, T2e, T2d), T2c) -
              T2h;
        T1m           = SIMD_FNMADD(KP850650808, T1l, T1g);
        io[WS(os, 5)] = SIMD_FNMADD(KP951056516, T1Y, T1F);
        io[WS(os, 1)] = SIMD_FMADD(KP951056516, T1W, T1F);
        io[WS(os, 6)] = SIMD_FMADD(KP951056516, T2t, T2o);
        ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T2F, T2y);
        ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T2D, T2y);
        io[WS(os, 4)] = SIMD_FMADD(KP951056516, T2l, T2i);
        io[0]         = SIMD_FNMADD(KP951056516, T2l, T2i);
        ro[WS(os, 6)] = SIMD_FMADD(KP951056516, T1m, T7);
    }
}

template <>
struct c2cb_traits<20, 14>
{
    static constexpr long_t flops           = 201;
    static constexpr long_t operations      = 158;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 133;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 14 -name c2cb
 * -standalone */

/*
 * This function contains 158 FP additions, 43 FP multiplications,
 * (or, 115 additions, 0 multiplications, 43 fused multiply/add),
 * 133 stack variables, 7 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 14>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T2d, T3, T2u, T1F, T1C, T6, T2v, T2g, T1N, T1f, T2i, T2x,
            T1G, Tz, T1Y;
        SIMD_FLOAT Ts, T2a, T2h, T2n, T2y, T1i, T2E, T1c, T14, T2w, T27, T2z,
            T1m, T1k, T2I;
        SIMD_FLOAT T1W, T2r, T2l, T15, T2C, T2A, T1n, T1l, T1X, T2m, T2D, T2B;
        {
            SIMD_FLOAT T20, Td, T29, TV, T21, Tk, T1Z, T12, To, T2b, T22, T2t,
                T2G, T1u, T2o;
            SIMD_FLOAT T18, T13, Tn, T1R, TJ, T1z, Tp, TK, TL, Tt, Tu, TA, TB,
                Tw, Tx;
            SIMD_FLOAT TD, TE, T1, T2, T1D, T1E, T4, T5, T2e, T2f;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            T1D = ii[0];
            T1E = ii[WS(is, 10)];
            T4  = ri[WS(is, 5)];
            T5  = ri[WS(is, 15)];
            T2e = ii[WS(is, 5)];
            T2f = ii[WS(is, 15)];
            {
                SIMD_FLOAT Ta, T1o, T9, T1I, TR, Tb, TS, TT, Te, Tf, TW, TX, Th,
                    Ti, TZ;
                SIMD_FLOAT T10, T7, T8, TP, TQ, Tl, T1J, T1d, T1q, T17, T1M,
                    T1e, T1t, T16, Tm;
                SIMD_FLOAT TH, TI, T1H, Tc, T1p, TU, T1r, Tg, T1L, TY, T1K, Tj,
                    T1s, T11;
                T7  = ii[WS(is, 4)];
                T8  = ii[WS(is, 14)];
                TP  = ri[WS(is, 4)];
                TQ  = ri[WS(is, 14)];
                Ta  = ii[WS(is, 9)];
                T2d = T1 - T2;
                T3  = T1 + T2;
                T2u = T1D + T1E;
                T1F = T1D - T1E;
                T1C = T4 - T5;
                T6  = T4 + T5;
                T2v = T2e + T2f;
                T2g = T2e - T2f;
                T1o = T7 - T8;
                T9  = T7 + T8;
                T1I = TP - TQ;
                TR  = TP + TQ;
                Tb  = ii[WS(is, 19)];
                TS  = ri[WS(is, 9)];
                TT  = ri[WS(is, 19)];
                Te  = ii[WS(is, 16)];
                Tf  = ii[WS(is, 6)];
                TW  = ri[WS(is, 16)];
                TX  = ri[WS(is, 6)];
                Th  = ii[WS(is, 1)];
                Ti  = ii[WS(is, 11)];
                TZ  = ri[WS(is, 1)];
                T10 = ri[WS(is, 11)];
                Tl  = ri[WS(is, 12)];
                T1H = Tb - Ta;
                Tc  = Ta + Tb;
                T1p = TS - TT;
                TU  = TS + TT;
                T1r = Te - Tf;
                Tg  = Te + Tf;
                T1L = TW - TX;
                TY  = TW + TX;
                T1K = Ti - Th;
                Tj  = Th + Ti;
                T1s = TZ - T10;
                T11 = TZ + T10;
                T1J = T1H + T1I;
                T20 = T1H - T1I;
                T1d = Tc - T9;
                Td  = T9 + Tc;
                T1q = T1o + T1p;
                T29 = T1o - T1p;
                T17 = TR - TU;
                TV  = TR + TU;
                T1M = T1K + T1L;
                T21 = T1L - T1K;
                T1e = Tg - Tj;
                Tk  = Tg + Tj;
                T1t = T1r + T1s;
                T1Z = T1s - T1r;
                T16 = T11 - TY;
                T12 = TY + T11;
                Tm  = ri[WS(is, 2)];
                TH  = ii[WS(is, 12)];
                TI  = ii[WS(is, 2)];
                To  = ri[WS(is, 17)];
                T2b = T1J + T1M;
                T1N = T1J - T1M;
                T22 = T20 + T21;
                T2t = T1e - T1d;
                T1f = T1d + T1e;
                T2G = Td + Tk;
                T2i = T1t - T1q;
                T1u = T1q + T1t;
                T2o = T29 + T1Z;
                T2x = T17 + T16;
                T18 = T16 - T17;
                T13 = TV + T12;
                Tn  = Tl + Tm;
                T1R = Tl - Tm;
                TJ  = TH + TI;
                T1z = TH - TI;
                Tp  = ri[WS(is, 7)];
                TK  = ii[WS(is, 17)];
                TL  = ii[WS(is, 7)];
                Tt  = ri[WS(is, 8)];
                Tu  = ri[WS(is, 18)];
                TA  = ii[WS(is, 8)];
                TB  = ii[WS(is, 18)];
                Tw  = ri[WS(is, 13)];
                Tx  = ri[WS(is, 3)];
                TD  = ii[WS(is, 13)];
                TE  = ii[WS(is, 3)];
            }
            {
                SIMD_FLOAT T24, T1A, Tr, T1a, T28, T1T, TN, T1h, T23, T1x, T19,
                    T1Q, TG, T1g, Tq;
                SIMD_FLOAT T1y, TM, T1S, Tv, T1O, TC, T1w, Ty, T1v, TF, T1P,
                    T1B, T2c, T2s, TO;
                SIMD_FLOAT T26, T1j, T2H, T1V, T2q, T2k, T2j, T25, T1b, T2F,
                    T1U, T2p;
                T1G           = T1C + T1F;
                Tq            = To + Tp;
                T1y           = To - Tp;
                TM            = TK + TL;
                T1S           = TL - TK;
                Tv            = Tt + Tu;
                T1O           = Tt - Tu;
                TC            = TA + TB;
                T1w           = TA - TB;
                Ty            = Tw + Tx;
                T1v           = Tw - Tx;
                TF            = TD + TE;
                T1P           = TE - TD;
                T24           = T1z - T1y;
                T1A           = T1y + T1z;
                Tr            = Tn + Tq;
                T1a           = Tq - Tn;
                T28           = T1R - T1S;
                T1T           = T1R + T1S;
                TN            = TJ + TM;
                T1h           = TM - TJ;
                T23           = T1w - T1v;
                T1x           = T1v + T1w;
                Tz            = Tv + Ty;
                T19           = Tv - Ty;
                T1Y           = T1O - T1P;
                T1Q           = T1O + T1P;
                TG            = TC + TF;
                T1g           = TC - TF;
                Ts            = Td - (SIMD_FMADD(KP850650808, Tr, Tk));
                T2a           = SIMD_FMADD(KP850650808, T29, T28);
                T2h           = T2d - T2g;
                T1B           = T1x + T1A;
                T2j           = T1A - T1x;
                T2n           = T24 - (SIMD_FMADD(KP850650808, T21, T23));
                T25           = T23 + T24;
                T1b           = T19 - T1a;
                T2y           = T1a + T19;
                T2F           = Tr - Tz;
                T2c           = T1Q + T1T;
                T1U           = T1Q - T1T;
                T2p           = T1Y + T28;
                T1i           = T1g + T1h;
                T2s           = T1h - T1g;
                T2E           = T12 - (SIMD_FMADD(KP850650808, TG, TV));
                TO            = TG - TN;
                io[WS(os, 1)] = T1u + T1B + T1G;
                T26           = SIMD_FMADD(KP525731112, T25, T22);
                T1j           = T1b + T18;
                T1c           = SIMD_FMADD(KP250000000, T18 - T1b, T3) - T6;
                T2H           = SIMD_FMADD(KP525731112, T2G, T2F);
                T1V           = SIMD_FMADD(KP525731112, T1u, T1U);
                T2q           = SIMD_FMADD(KP525731112, T2p, T2o);
                T2k           = SIMD_FMADD(KP525731112, T2b, T2j);
                ro[WS(os, 1)] = T2b + T2c + T2h;
                T14           = SIMD_FMADD(KP525731112, T13, TO);
                T2w           = SIMD_FMADD(KP250000000, T2s - T2t, T2u) - T2v;
                T27           = SIMD_FMADD(KP726542528, T26, T1Z);
                T2z           = T2t + T2s;
                T1m           = SIMD_FMADD(KP951056516, T1j, T1f);
                T1k           = SIMD_FMADD(KP951056516, T1j, T1i);
                T2I           = SIMD_FNMADD(KP726542528, T2H, TN);
                T1W           = SIMD_FNMADD(KP726542528, T1V, T1B);
                T2r           = SIMD_FMADD(KP726542528, T2q, T20);
                T2l           = SIMD_FNMADD(KP726542528, T2k, T2c);
            }
        }
        T15 = SIMD_FNMADD(KP726542528, T14, Tz);
        io[WS(os, 3)] =
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T27, T1Y), T1F) -
            (SIMD_FMADD(KP951056516, T2a, T1C));
        T2C = SIMD_FMADD(KP587785252, T2z, T2y);
        T2A = SIMD_FMADD(KP951056516, T2z, T2y);
        T1n = SIMD_FMADD(KP618033988, T1m, T1i);
        T1l = SIMD_FNMADD(KP618033988, T1k, T1f);
        io[WS(os, 2)] =
            T2u +
            SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T2I, T2E), T2v);
        T1X = SIMD_FNMADD(KP850650808, T1W, T1N);
        ro[WS(os, 3)] =
            T2d +
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T2r, T2n), T2g);
        T2m = SIMD_FNMADD(KP850650808, T2l, T2i);
        ro[WS(os, 2)] =
            T3 + SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T15, Ts), T6);
        T2D           = SIMD_FNMADD(KP618033988, T2x, T2C);
        T2B           = SIMD_FMADD(KP618033988, T2A, T2x);
        ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1n, T1c);
        ro[0]         = SIMD_FMADD(KP951056516, T1l, T1c);
        io[WS(os, 5)] = SIMD_FMADD(KP951056516, T1X, T1G);
        ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T2m, T2h);
        io[WS(os, 4)] = SIMD_FNMADD(KP951056516, T2D, T2w);
        io[0]         = SIMD_FMADD(KP951056516, T2B, T2w);
    }
}

template <>
struct c2cb_traits<20, 15>
{
    static constexpr long_t flops           = 189;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 15 -name c2cb
 * -standalone */

/*
 * This function contains 148 FP additions, 41 FP multiplications,
 * (or, 107 additions, 0 multiplications, 41 fused multiply/add),
 * 132 stack variables, 4 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 15>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T2n, T3, T26, T1p, T1m, T6, T2s, T2d, T1U, TS, T1W, T16, T27,
            T2g, T1f;
        SIMD_FLOAT T7, T1Z, T18, T1I, T1C, T1T, T1z, T25, T2f, T2t, TB, T2e,
            T2u, T2h, TR;
        SIMD_FLOAT T28, T2x, T21, T1b, T2k, T1R, T2q, T1j, T29, T2y, T22, T1c,
            T2l, T1S, T2r;
        SIMD_FLOAT T1k, T2a, T2m, T1l;
        {
            SIMD_FLOAT T1M, T1v, T1V, TZ, T1P, T24, TQ, T1s, Tq, T1Q, T2o, Tm,
                T2w, T1X, T2j;
            SIMD_FLOAT T17, T1G, Tp, T1x, TL, Tr, TM, TN, Tu, Tv, TC, TD, Tx,
                Ty, TF;
            SIMD_FLOAT TG, T1, T2, T1n, T1o, T4, T5, T2b, T2c;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            T1n = ii[0];
            T1o = ii[WS(is, 10)];
            T4  = ii[WS(is, 5)];
            T5  = ii[WS(is, 15)];
            T2b = ri[WS(is, 5)];
            T2c = ri[WS(is, 15)];
            {
                SIMD_FLOAT Tb, T1t, Ta, T1L, TV, Tc, TW, TX, Tf, Tg, T13, T14,
                    Ti, Tj, T10;
                SIMD_FLOAT T11, T8, T9, TT, TU, Tn, Te, T1e, Tl, T1d, To, TJ,
                    TK, T1K, Td;
                SIMD_FLOAT T1u, TY, T1q, Th, T1O, T15, T1N, Tk, T1r, T12;
                T8  = ri[WS(is, 4)];
                T9  = ri[WS(is, 14)];
                TT  = ii[WS(is, 4)];
                TU  = ii[WS(is, 14)];
                Tb  = ii[WS(is, 19)];
                T2n = T1 + T2;
                T3  = T1 - T2;
                T26 = T1n - T1o;
                T1p = T1n + T1o;
                T1m = T4 + T5;
                T6  = T4 - T5;
                T2s = T2b + T2c;
                T2d = T2b - T2c;
                T1t = T8 + T9;
                Ta  = T8 - T9;
                T1L = TT + TU;
                TV  = TT - TU;
                Tc  = ii[WS(is, 9)];
                TW  = ri[WS(is, 9)];
                TX  = ri[WS(is, 19)];
                Tf  = ri[WS(is, 16)];
                Tg  = ri[WS(is, 6)];
                T13 = ii[WS(is, 16)];
                T14 = ii[WS(is, 6)];
                Ti  = ii[WS(is, 11)];
                Tj  = ii[WS(is, 1)];
                T10 = ri[WS(is, 1)];
                T11 = ri[WS(is, 11)];
                Tn  = ri[WS(is, 8)];
                T1K = Tb + Tc;
                Td  = Tb - Tc;
                T1u = TW + TX;
                TY  = TW - TX;
                T1q = Tf + Tg;
                Th  = Tf - Tg;
                T1O = T13 + T14;
                T15 = T13 - T14;
                T1N = Ti + Tj;
                Tk  = Ti - Tj;
                T1r = T10 + T11;
                T12 = T10 - T11;
                T1M = T1K + T1L;
                T1U = T1K - T1L;
                TS  = Td - Ta;
                Te  = Ta + Td;
                T1v = T1t + T1u;
                T1V = T1t - T1u;
                T1e = TV + TY;
                TZ  = TV - TY;
                T1P = T1N + T1O;
                T24 = T1O - T1N;
                TQ  = Th - Tk;
                Tl  = Th + Tk;
                T1s = T1q + T1r;
                T1W = T1r - T1q;
                T1d = T12 + T15;
                T16 = T12 - T15;
                To  = ri[WS(is, 18)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 18)];
                Tq  = ii[WS(is, 3)];
                T1Q = T1M + T1P;
                T2o = T1U + T24;
                T27 = TS + TQ;
                T2g = Te - Tl;
                Tm  = Te + Tl;
                T2w = T1v + T1s;
                T1X = T1V + T1W;
                T2j = T1e + T1d;
                T1f = T1d - T1e;
                T17 = TZ + T16;
                T1G = Tn + To;
                Tp  = Tn - To;
                T1x = TJ + TK;
                TL  = TJ - TK;
                Tr  = ii[WS(is, 13)];
                TM  = ri[WS(is, 13)];
                TN  = ri[WS(is, 3)];
                Tu  = ri[WS(is, 12)];
                Tv  = ri[WS(is, 2)];
                TC  = ii[WS(is, 12)];
                TD  = ii[WS(is, 2)];
                Tx  = ii[WS(is, 7)];
                Ty  = ii[WS(is, 17)];
                TF  = ri[WS(is, 17)];
                TG  = ri[WS(is, 7)];
            }
            {
                SIMD_FLOAT T1y, Tt, T23, T1h, TP, T1Y, TA, T19, T1F, T1g, TI,
                    T1w, Ts, T1H, TO;
                SIMD_FLOAT T1D, Tw, T1B, TE, T1A, Tz, T1E, TH, T1i, T2v, T20,
                    T2i, T1a, T1J, T2p;
                T7    = T3 - T6;
                T1w   = Tq + Tr;
                Ts    = Tq - Tr;
                T1H   = TM + TN;
                TO    = TM - TN;
                T1D   = Tu + Tv;
                Tw    = Tu - Tv;
                T1B   = TC + TD;
                TE    = TC - TD;
                T1A   = Tx + Ty;
                Tz    = Tx - Ty;
                T1E   = TF + TG;
                TH    = TF - TG;
                T1y   = T1w + T1x;
                T1Z   = T1x - T1w;
                Tt    = Tp + Ts;
                T18   = Tp - Ts;
                T1I   = T1G + T1H;
                T23   = T1G - T1H;
                T1h   = TL + TO;
                TP    = TL - TO;
                T1C   = T1A + T1B;
                T1Y   = T1B - T1A;
                TA    = Tw + Tz;
                T19   = Tw - Tz;
                T1F   = T1D + T1E;
                T1T   = T1D - T1E;
                T1g   = TE + TH;
                TI    = TE - TH;
                T1z   = T1s - (SIMD_FMADD(KP850650808, T1y, T1v));
                T25   = SIMD_FMADD(KP850650808, T24, T23);
                T2f   = T26 + T2d;
                T2v   = T1y - T1C;
                T2t   = SIMD_FMADD(KP850650808, T1V, T1Y);
                T20   = T1Y + T1Z;
                TB    = Tt + TA;
                T2i   = Tt - TA;
                T2e   = SIMD_FMADD(KP850650808, TZ, T19);
                T1a   = T18 + T19;
                T2u   = T1M - (SIMD_FMADD(KP850650808, T1F, T1P));
                T1J   = T1F - T1I;
                T2p   = T1T + T23;
                T2h   = T1g + T1h;
                T1i   = T1g - T1h;
                TR    = TI - (SIMD_FMADD(KP850650808, TQ, TP));
                T28   = TI + TP;
                T2x   = SIMD_FMADD(KP525731112, T2w, T2v);
                T21   = SIMD_FMADD(KP525731112, T20, T1X);
                ro[0] = T7 + Tm + TB;
                T1b   = SIMD_FMADD(KP525731112, T1a, T17);
                T2k   = SIMD_FMADD(KP525731112, T2j, T2i);
                T1R   = SIMD_FMADD(KP525731112, T1Q, T1J);
                T2q   = SIMD_FMADD(KP525731112, T2p, T2o);
                io[0] = T2h + T2j + T2f;
                T1j   = SIMD_FMADD(KP525731112, Tm, T1i);
            }
        }
        T29 = SIMD_FMADD(KP525731112, T28, T27);
        T2y = SIMD_FNMADD(KP726542528, T2x, T1I);
        T22 = SIMD_FMADD(KP726542528, T21, T1U);
        T1c = SIMD_FMADD(KP726542528, T1b, TS);
        T2l = SIMD_FNMADD(KP726542528, T2k, T2h);
        T1S = SIMD_FNMADD(KP726542528, T1R, T1C);
        T2r = SIMD_FMADD(KP726542528, T2q, T1W);
        T1k = SIMD_FNMADD(KP726542528, T1j, TB);
        T2a = SIMD_FMADD(KP726542528, T29, T16);
        ro[WS(os, 1)] =
            T2n +
            SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T2y, T2u), T2s);
        io[WS(os, 3)] =
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T22, T1T), T1p) -
            (SIMD_FMADD(KP951056516, T25, T1m));
        ro[WS(os, 2)] =
            T3 + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1c, TR), T6);
        T2m = SIMD_FNMADD(KP850650808, T2l, T2g);
        io[WS(os, 1)] =
            T1m +
            SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T1S, T1z), T1p);
        ro[WS(os, 3)] =
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T2r, T1Z), T2n) -
            (SIMD_FMADD(KP951056516, T2t, T2s));
        T1l = SIMD_FNMADD(KP850650808, T1k, T1f);
        io[WS(os, 2)] =
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T2a, T18), T26) -
            (SIMD_FMADD(KP951056516, T2e, T2d));
        io[WS(os, 4)] = SIMD_FMADD(KP951056516, T2m, T2f);
        ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1l, T7);
    }
}

template <>
struct c2cb_traits<20, 16>
{
    static constexpr long_t flops           = 188;
    static constexpr long_t operations      = 144;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 120;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 16 -name c2cb
 * -standalone */

/*
 * This function contains 144 FP additions, 44 FP multiplications,
 * (or, 100 additions, 0 multiplications, 44 fused multiply/add),
 * 120 stack variables, 4 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 16>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T23, T3, T2h, T1l, T1I, T6, T2m, T2a, T1E, T1S, T1b, Tr, T1L,
            T1W, T1g;
        SIMD_FLOAT TN, T1B, T1U, T1c, Tz, T1o, T1V, T16, TG, Ta, T1F, T24, T1d,
            T2p, T2e;
        SIMD_FLOAT T1X, T2j, TO, T1M, T9, T1t, TR, Tb, TS, TT, Te, Tf, TW, TX,
            Th;
        SIMD_FLOAT Ti, TZ, T10, T1, T2, T1j, T1k, T4, T5, T28, T29;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1j = ii[0];
        T1k = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T28 = ii[WS(is, 5)];
        T29 = ii[WS(is, 15)];
        {
            SIMD_FLOAT To, T1J, Tn, T1D, TJ, Tp, TK, TL, Tt, Tu, TA, TB, Tw, Tx,
                TD;
            SIMD_FLOAT TE, Tl, Tm, TH, TI, T7, T8, TP, TQ, T1C, Tq, T1K, TM,
                T1m, Tv;
            SIMD_FLOAT T1A, TC, T1z, Ty, T1n, TF;
            Tl  = ri[WS(is, 12)];
            Tm  = ri[WS(is, 2)];
            TH  = ii[WS(is, 12)];
            TI  = ii[WS(is, 2)];
            To  = ri[WS(is, 17)];
            T23 = T1 - T2;
            T3  = T1 + T2;
            T2h = T1j + T1k;
            T1l = T1j - T1k;
            T1I = T4 - T5;
            T6  = T4 + T5;
            T2m = T28 + T29;
            T2a = T28 - T29;
            T1J = Tl - Tm;
            Tn  = Tl + Tm;
            T1D = TH - TI;
            TJ  = TH + TI;
            Tp  = ri[WS(is, 7)];
            TK  = ii[WS(is, 17)];
            TL  = ii[WS(is, 7)];
            Tt  = ri[WS(is, 8)];
            Tu  = ri[WS(is, 18)];
            TA  = ii[WS(is, 8)];
            TB  = ii[WS(is, 18)];
            Tw  = ri[WS(is, 13)];
            Tx  = ri[WS(is, 3)];
            TD  = ii[WS(is, 13)];
            TE  = ii[WS(is, 3)];
            T7  = ii[WS(is, 4)];
            T1C = Tp - To;
            Tq  = To + Tp;
            T1K = TK - TL;
            TM  = TK + TL;
            T1m = Tt - Tu;
            Tv  = Tt + Tu;
            T1A = TA - TB;
            TC  = TA + TB;
            T1z = Tx - Tw;
            Ty  = Tw + Tx;
            T1n = TD - TE;
            TF  = TD + TE;
            T1E = T1C + T1D;
            T1S = T1D - T1C;
            T1b = Tn - Tq;
            Tr  = Tn + Tq;
            T1L = T1J + T1K;
            T1W = T1K - T1J;
            T1g = TJ - TM;
            TN  = TJ + TM;
            T1B = T1z + T1A;
            T1U = T1z - T1A;
            T1c = Tv - Ty;
            Tz  = Tv + Ty;
            T1o = T1m + T1n;
            T1V = T1m - T1n;
            T16 = TC - TF;
            TG  = TC + TF;
            T8  = ii[WS(is, 14)];
            TP  = ri[WS(is, 4)];
            TQ  = ri[WS(is, 14)];
            Ta  = ii[WS(is, 9)];
            T1F = T1B + T1E;
            T24 = T1U + T1S;
            T1d = T1b + T1c;
            T2p = Tr - Tz;
            T2e = T1o + T1L;
            T1X = T1V + T1W;
            T2j = T16 + T1g;
            TO  = TG - TN;
            T1M = T7 - T8;
            T9  = T7 + T8;
            T1t = TP - TQ;
            TR  = TP + TQ;
            Tb  = ii[WS(is, 19)];
            TS  = ri[WS(is, 9)];
            TT  = ri[WS(is, 19)];
            Te  = ii[WS(is, 16)];
            Tf  = ii[WS(is, 6)];
            TW  = ri[WS(is, 16)];
            TX  = ri[WS(is, 6)];
            Th  = ii[WS(is, 1)];
            Ti  = ii[WS(is, 11)];
            TZ  = ri[WS(is, 1)];
            T10 = ri[WS(is, 11)];
        }
        {
            SIMD_FLOAT T1Q, T1u, Td, T18, T1Y, T1O, TV, T1h, T1R, T1x, Tk, T19,
                T1Z, T1r, T12;
            SIMD_FLOAT T17, T1P, T2b, T1i, Tc, T1s, TU, T1N, Tg, T1q, TY, T1v,
                Tj, T1w, T11;
            SIMD_FLOAT T1p, T2c, T1T, T25, T2n, T1a, Ts, T2q, T2d, T20, T2i,
                T2o, T13, T1G, T1y;
            SIMD_FLOAT T26, T1e, T2r, T2f, T21, T2k, T14, T1H, T27, T1f, T2s,
                T2g, T22, T2l, T15;
            Tc            = Ta + Tb;
            T1s           = Tb - Ta;
            TU            = TS + TT;
            T1N           = TS - TT;
            Tg            = Te + Tf;
            T1q           = Te - Tf;
            TY            = TW + TX;
            T1v           = TW - TX;
            Tj            = Th + Ti;
            T1w           = Ti - Th;
            T11           = TZ + T10;
            T1p           = TZ - T10;
            T1Q           = T1s + T1t;
            T1u           = T1s - T1t;
            Td            = T9 + Tc;
            T18           = Tc - T9;
            T1Y           = T1M + T1N;
            T1O           = T1M - T1N;
            TV            = TR + TU;
            T1h           = TR - TU;
            T1R           = T1w + T1v;
            T1x           = T1v - T1w;
            Tk            = Tg + Tj;
            T19           = Tg - Tj;
            T1Z           = T1q + T1p;
            T1r           = T1p - T1q;
            T12           = TY + T11;
            T17           = T11 - TY;
            T1P           = SIMD_FMADD(KP850650808, T1O, T1L);
            T2b           = SIMD_FMADD(KP850650808, T1V, T1Y);
            T1i           = SIMD_FMADD(KP850650808, T1h, T1g);
            T2c           = T1E - (SIMD_FMADD(KP850650808, T1x, T1B));
            T1y           = T1u + T1x;
            T1T           = T1Q - (SIMD_FMADD(KP850650808, T1S, T1R));
            T25           = T1Q + T1R;
            T2n           = SIMD_FMADD(KP850650808, T19, T1c);
            T1a           = T18 + T19;
            Ts            = Td - (SIMD_FMADD(KP850650808, Tr, Tk));
            T2q           = Td + Tk;
            T2d           = T1O + T1r;
            T20           = T1Y + T1Z;
            T2i           = T1h + T17;
            T2o           = T12 - (SIMD_FMADD(KP850650808, TG, TV));
            T13           = TV + T12;
            T1G           = SIMD_FMADD(KP525731112, T1F, T1y);
            T26           = SIMD_FMADD(KP525731112, T25, T24);
            T1e           = SIMD_FMADD(KP525731112, T1d, T1a);
            T2r           = SIMD_FMADD(KP525731112, T2q, T2p);
            T2f           = SIMD_FMADD(KP525731112, T2e, T2d);
            T21           = SIMD_FMADD(KP525731112, T20, T1X);
            T2k           = SIMD_FMADD(KP525731112, T2j, T2i);
            T14           = SIMD_FMADD(KP525731112, T13, TO);
            T1H           = SIMD_FMADD(KP726542528, T1G, T1r);
            T27           = SIMD_FMADD(KP726542528, T26, T1W);
            T1f           = SIMD_FMADD(KP726542528, T1e, T17);
            T2s           = SIMD_FNMADD(KP726542528, T2r, TN);
            T2g           = SIMD_FMADD(KP726542528, T2f, T1u);
            T22           = SIMD_FMADD(KP726542528, T21, T1U);
            T2l           = SIMD_FMADD(KP726542528, T2k, T18);
            T15           = SIMD_FNMADD(KP726542528, T14, Tz);
            io[WS(os, 1)] = SIMD_FMADD(KP951056516,
                                       SIMD_FMADD(KP850650808, T1H, T1o), T1l) -
                            (SIMD_FMADD(KP951056516, T1P, T1I));
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516,
                                       SIMD_FMADD(KP850650808, T27, T1Z), T23) -
                            (SIMD_FMADD(KP951056516, T2b, T2a));
            ro[WS(os, 2)] =
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1f, T16), T3) -
                (SIMD_FMADD(KP951056516, T1i, T6));
            io[0] = T2h + SIMD_FMADD(KP951056516,
                                     SIMD_FNMADD(KP850650808, T2s, T2o), T2m);
            ro[WS(os, 1)] =
                T23 +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T2g, T2c), T2a);
            io[WS(os, 3)] =
                T1I +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T22, T1T), T1l);
            io[WS(os, 2)] = SIMD_FMADD(KP951056516,
                                       SIMD_FMADD(KP850650808, T2l, T1b), T2h) -
                            (SIMD_FMADD(KP951056516, T2n, T2m));
            ro[0] = T3 + SIMD_FMADD(KP951056516,
                                    SIMD_FNMADD(KP850650808, T15, Ts), T6);
        }
    }
}

template <>
struct c2cb_traits<20, 17>
{
    static constexpr long_t flops           = 152;
    static constexpr long_t operations      = 118;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 88;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 17 -name c2cb
 * -standalone */

/*
 * This function contains 118 FP additions, 34 FP multiplications,
 * (or, 84 additions, 0 multiplications, 34 fused multiply/add),
 * 88 stack variables, 4 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 17>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T1, T2, T1j, T1k, T4, T5, T1D, T1E, T3, T1y, T6, T1F, T1o,
            T1w, T1m;
        SIMD_FLOAT Tr, T1b, TN, T16, T1M, T1r, T1c, Tz, T1p, T1g, TG, T1l, Th,
            T1d, T1z;
        SIMD_FLOAT TQ, TO, T1J, Ti, Tg, TP, Td, T18, T1q, TU, T17, T12, T1Q,
            T1n;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        T1j = ii[0];
        T1k = ii[WS(is, 10)];
        T4  = ii[WS(is, 5)];
        T5  = ii[WS(is, 15)];
        T1D = ri[WS(is, 5)];
        T1E = ri[WS(is, 15)];
        {
            SIMD_FLOAT Tt, TB, Tn, TJ, Tu, TA, Tw, Tq, TE, TM, Tx, TD, Tl, TI,
                Tm;
            SIMD_FLOAT TH, To, TL, Tp, TK, T9, T11, Te, TT, Tf, Tc, TY, TS, Tv,
                TC;
            SIMD_FLOAT Ty, TF, Ta, TX, Tb, TW, T7, T10, T8, TZ;
            Tl  = ri[WS(is, 16)];
            TI  = ri[WS(is, 11)];
            Tm  = ri[WS(is, 6)];
            TH  = ri[WS(is, 1)];
            To  = ii[WS(is, 11)];
            T3  = T1 - T2;
            TL  = ii[WS(is, 6)];
            T1y = T1j - T1k;
            Tp  = ii[WS(is, 1)];
            T6  = T4 - T5;
            TK  = ii[WS(is, 16)];
            T1F = T1D - T1E;
            Tt  = ii[WS(is, 19)];
            TB  = ii[WS(is, 14)];
            Tn  = Tl - Tm;
            T1o = TH - (Tl - TI) - Tm;
            TJ  = TH - TI;
            Tu  = ii[WS(is, 9)];
            TA  = ii[WS(is, 4)];
            Tw  = ri[WS(is, 4)];
            Tq  = To - Tp;
            TE  = ri[WS(is, 19)];
            T1w = TK - (To - TL) - Tp;
            TM  = TK - TL;
            Tx  = ri[WS(is, 14)];
            TD  = ri[WS(is, 9)];
            T7  = ii[WS(is, 12)];
            T10 = ii[WS(is, 7)];
            T8  = ii[WS(is, 2)];
            Tv  = Tt - Tu;
            T1m = Tt - TB - (TA - Tu);
            TC  = TA - TB;
            Tr  = Tn - Tq;
            T1b = Tn + Tq;
            TZ  = ii[WS(is, 17)];
            TN  = TJ - TM;
            T16 = TJ + TM;
            Ty  = Tw - Tx;
            T1n = Tw - TE - (TD - Tx);
            TF  = TD - TE;
            T9  = T7 - T8;
            Ta  = ri[WS(is, 7)];
            T1M = T1m + T1w;
            TX  = ri[WS(is, 2)];
            Tb  = ri[WS(is, 17)];
            TW  = ri[WS(is, 12)];
            T1r = T7 + T8 - T10 - TZ;
            T11 = TZ - T10;
            Te  = ii[WS(is, 8)];
            T1c = Tv + Ty;
            Tz  = Tv - Ty;
            T1p = T1n + T1o;
            T1g = TC + TF;
            TG  = TC - TF;
            TT  = ii[WS(is, 3)];
            Tf  = ii[WS(is, 18)];
            Tc  = Ta - Tb;
            T1l = TW + TX - Tb - Ta;
            TY  = TW - TX;
            TS  = ii[WS(is, 13)];
            Th  = ri[WS(is, 3)];
            T1d = T1b + T1c;
            T1z = Tr + Tz;
            TQ  = ri[WS(is, 18)];
            TO  = TG + TN;
            T1J = T1g + T16;
            Ti  = ri[WS(is, 13)];
            Tg  = Te - Tf;
            TP  = ri[WS(is, 8)];
            Td  = T9 + Tc;
            T18 = T9 - Tc;
            T1q = Te + Tf - TT - TS;
            TU  = TS - TT;
            T17 = T11 - TY;
            T12 = TY + T11;
        }
        T1Q = SIMD_FMADD(KP850650808, T1n, T1r);
        {
            SIMD_FLOAT Tj, T1v, TR, T1H, T1s, T1G, Tk, T19, T1x, T1N, T1h, TV,
                T1t, T1a, Ts;
            SIMD_FLOAT T1A, T1O, T13, T1i, T1I, T1u, T1e, T1B, T1P, T14, T1K,
                T1f, T1C, T15, T1L;
            Tj            = Th - Ti;
            T1v           = TP + TQ - Ti - Th;
            TR            = TP - TQ;
            T1H           = T1c - (SIMD_FMADD(KP850650808, T18, T1b));
            T1s           = T1q + T1r;
            T1G           = SIMD_FMADD(KP850650808, TG, T12);
            Tk            = Tg + Tj;
            T19           = Tj - Tg;
            T1x           = SIMD_FMADD(KP850650808, T1w, T1v);
            T1N           = T1v + T1l;
            T1h           = TR - TU;
            TV            = TR + TU;
            T1t           = SIMD_FMADD(KP525731112, T1s, T1p);
            T1a           = T18 + T19;
            Ts            = Td - (SIMD_FMADD(KP850650808, Tr, Tk));
            T1A           = Td + Tk;
            T1O           = SIMD_FMADD(KP525731112, T1N, T1M);
            T13           = TV + T12;
            T1i           = SIMD_FMADD(KP850650808, T1h, T1g);
            T1I           = T1h + T17;
            T1u           = SIMD_FMADD(KP726542528, T1t, T1m);
            T1e           = SIMD_FMADD(KP525731112, T1d, T1a);
            T1B           = SIMD_FMADD(KP525731112, T1A, T1z);
            T1P           = SIMD_FMADD(KP726542528, T1O, T1o);
            T14           = SIMD_FMADD(KP525731112, T13, TO);
            T1K           = SIMD_FMADD(KP525731112, T1J, T1I);
            io[WS(os, 1)] = T1j +
                            SIMD_FMADD(KP951056516,
                                       SIMD_FMADD(KP850650808, T1u, T1l), T1k) -
                            T5 - (SIMD_FMADD(KP951056516, T1x, T4));
            T1f = SIMD_FMADD(KP726542528, T1e, T17);
            T1C = SIMD_FMADD(KP726542528, T1B, TN);
            ro[WS(os, 1)] =
                T1 +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1P, T1q), T2) -
                (SIMD_FMADD(KP951056516, T1Q, T1D)) - T1E;
            T15 = SIMD_FMADD(KP726542528, T14, Tz);
            T1L = SIMD_FMADD(KP726542528, T1K, T19);
            ro[WS(os, 2)] =
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1f, T16), T3) -
                (SIMD_FMADD(KP951056516, T1i, T6));
            io[0] =
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1C, TV), T1y) -
                (SIMD_FMADD(KP951056516, T1G, T1F));
            ro[0] = T3 + SIMD_FMADD(KP951056516,
                                    SIMD_FMADD(KP850650808, T15, Ts), T6);
            io[WS(os, 2)] =
                T1y +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1L, T1H), T1F);
        }
    }
}

template <>
struct c2cb_traits<20, 18>
{
    static constexpr long_t flops           = 116;
    static constexpr long_t operations      = 92;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 80;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 18 -name c2cb
 * -standalone */

/*
 * This function contains 92 FP additions, 24 FP multiplications,
 * (or, 68 additions, 0 multiplications, 24 fused multiply/add),
 * 80 stack variables, 4 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 18>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    {
        SIMD_FLOAT T1, TO, T2, TZ, TB, T18, T17, TC, TR, T7, TQ, Ts, T11, Tx,
            TS;
        SIMD_FLOAT TH, Td, TL, Te, TK, Tf, TI, T1a, Ty, TT, T14, TU, Tc, Tm,
            T10;
        SIMD_FLOAT Tg, TJ, T3, To, T4, Tp, T5, Tq, T6, Tr, Tt, TD, Tu, TE, Tv;
        SIMD_FLOAT TF, Tw, TG, T8, Tj, T9, Tl, Ta, Ti, Tb, Tk, T19, T12, TP, Th;
        SIMD_FLOAT TM, TV, T1b, Tn, TN, T13, T1e, TW, T1c, Tz, T15, TX, T1d, TA,
            T16;
        SIMD_FLOAT TY;
        T1  = ri[0];
        TO  = ii[0];
        T2  = ri[WS(is, 10)];
        TZ  = ii[WS(is, 10)];
        TB  = ri[WS(is, 15)];
        T18 = ii[WS(is, 15)];
        T17 = ii[WS(is, 5)];
        TC  = ri[WS(is, 5)];
        T3  = ii[WS(is, 8)];
        To  = ri[WS(is, 8)];
        T4  = ii[WS(is, 18)];
        Tp  = ri[WS(is, 18)];
        T5  = ii[WS(is, 13)];
        Tq  = ri[WS(is, 13)];
        T6  = ii[WS(is, 3)];
        Tr  = ri[WS(is, 3)];
        Tt  = ri[WS(is, 12)];
        TD  = ii[WS(is, 12)];
        Tu  = ri[WS(is, 2)];
        TE  = ii[WS(is, 2)];
        Tv  = ri[WS(is, 17)];
        TF  = ii[WS(is, 17)];
        Tw  = ri[WS(is, 7)];
        TG  = ii[WS(is, 7)];
        T8  = ri[WS(is, 1)];
        Tj  = ii[WS(is, 1)];
        TR  = To - (Tp - T6) - T5;
        T7  = T3 + T4 - T5 - T6;
        TQ  = T4 - Tq - (T3 - Tr);
        Ts  = To + Tp - Tq - Tr;
        T9  = ri[WS(is, 6)];
        Tl  = ii[WS(is, 6)];
        Ta  = ri[WS(is, 16)];
        Ti  = ii[WS(is, 16)];
        T11 = TD - (TE - Tv) - Tw;
        Tx  = Tt + Tu - Tv - Tw;
        TS  = Tu - (Tt - TF) - TG;
        TH  = TD + TE - TF - TG;
        Tb  = ri[WS(is, 11)];
        Tk  = ii[WS(is, 11)];
        Td  = ii[WS(is, 19)];
        TL  = ri[WS(is, 19)];
        Te  = ii[WS(is, 14)];
        TK  = ri[WS(is, 14)];
        Tf  = ii[WS(is, 4)];
        TI  = ri[WS(is, 4)];
        T1a = TQ + T11;
        Ty  = Ts + Tx;
        TT  = TR + TS;
        T14 = T7 + TH;
        TU  = T8 + Ti - Tl - Tb;
        Tc  = T8 - T9 - (Ta - Tb);
        Tm  = Ti - Tj - (Tk - Tl);
        T10 = Ta + Tk - Tj - T9;
        Tg  = ii[WS(is, 9)];
        TJ  = ri[WS(is, 9)];
        T19 = SIMD_FMADD(KP850650808, Tm, Ts);
        T12 = SIMD_FMADD(KP850650808, T11, T10);
        TP  = Td + TI - TK - Tg;
        Th  = Td - Te - (Tf - Tg);
        TM  = TI - (TJ - TK) - TL;
        TV  = Tf + TJ - TL - Te;
        T1b = T10 + TP;
        Tn  = Th + Tm;
        TN  = SIMD_FMADD(KP850650808, TM, TH);
        T13 = Tc + TM;
        T1e = SIMD_FMADD(KP850650808, TR, TV);
        TW  = TU + TV;
        T1c = SIMD_FMADD(KP525731112, T1b, T1a);
        Tz  = SIMD_FMADD(KP525731112, Ty, Tn);
        T15 = SIMD_FMADD(KP525731112, T14, T13);
        TX  = SIMD_FMADD(KP525731112, TW, TT);
        T1d = SIMD_FMADD(KP726542528, T1c, TS);
        TA  = SIMD_FMADD(KP726542528, Tz, Tc);
        T16 = SIMD_FMADD(KP726542528, T15, Th);
        TY  = SIMD_FMADD(KP726542528, TX, TQ);
        ro[WS(os, 1)] =
            T1 +
            SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T1d, TU), T18) -
            (SIMD_FMADD(KP951056516, T1e, T2)) - T17;
        ro[0] = T1 +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, TA, T7), T2) -
                TB - (SIMD_FMADD(KP951056516, TN, TC));
        io[0] = TO +
                SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, T16, Tx), TZ) -
                T17 - (SIMD_FMADD(KP951056516, T19, T18));
        io[WS(os, 1)] =
            TC + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, TY, TP), TO) -
            TB - (SIMD_FMADD(KP951056516, T12, TZ));
    }
}

template <>
struct c2cb_traits<20, 19>
{
    static constexpr long_t flops           = 58;
    static constexpr long_t operations      = 46;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 60;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -skip-k 19 -name c2cb
 * -standalone */

/*
 * This function contains 46 FP additions, 12 FP multiplications,
 * (or, 34 additions, 0 multiplications, 12 fused multiply/add),
 * 60 stack variables, 4 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && SkippedOutputs == 19>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    {
        SIMD_FLOAT T1, TN, T2, TU, TT, TB, TC, TO, T7, TH, Ts, T8, Tx, Tb, T9;
        SIMD_FLOAT TQ, Ta, Th, TI, TL, TJ, TK, Tm, T3, T6, T4, T5, TD, TG, TE;
        SIMD_FLOAT TF, To, Tr, Tp, Tq, Tt, Tw, Tu, Tv, Td, Tg, Te, Tf, Ti, Tl;
        SIMD_FLOAT Tj, Tk, Ty, Tc, TM, Tn, TP, Tz, TR, TA, TS;
        T1 = ri[0];
        TN = ii[0];
        T2 = ii[WS(is, 15)];
        TU = ri[WS(is, 15)];
        TT = ii[WS(is, 10)];
        TB = ri[WS(is, 10)];
        TC = ii[WS(is, 5)];
        TO = ri[WS(is, 5)];
        T3 = ii[WS(is, 16)];
        T6 = ri[WS(is, 11)];
        T4 = ri[WS(is, 1)];
        T5 = ii[WS(is, 6)];
        TD = ii[WS(is, 4)];
        TG = ri[WS(is, 19)];
        TE = ri[WS(is, 9)];
        TF = ii[WS(is, 14)];
        To = ri[WS(is, 4)];
        Tr = ii[WS(is, 9)];
        Tp = ii[WS(is, 19)];
        Tq = ri[WS(is, 14)];
        Tt = ri[WS(is, 16)];
        Tw = ii[WS(is, 1)];
        Tu = ii[WS(is, 11)];
        T7 = T3 + T4 - (T5 + T6);
        Tv = ri[WS(is, 6)];
        Td = ii[WS(is, 18)];
        Tg = ri[WS(is, 13)];
        TH = TD + TE - (TF + TG);
        Te = ri[WS(is, 3)];
        Tf = ii[WS(is, 8)];
        Ti = ii[WS(is, 12)];
        Ts = To + Tp - (Tq + Tr);
        Tl = ri[WS(is, 7)];
        Tj = ri[WS(is, 17)];
        Tk = ii[WS(is, 2)];
        T8 = ri[WS(is, 2)];
        Tx = Tt + Tu - (Tv + Tw);
        Tb = ii[WS(is, 7)];
        T9 = ii[WS(is, 17)];
        TQ = T7 + TH;
        Ta = ri[WS(is, 12)];
        Th = Td + Te - (Tf + Tg);
        TI = ri[WS(is, 8)];
        TL = ii[WS(is, 13)];
        TJ = ii[WS(is, 3)];
        TK = ri[WS(is, 18)];
        Tm = Ti + Tj - (Tk + Tl);
        Ty = Ts + Tx;
        Tc = T8 + T9 - (Ta + Tb);
        TM = TI + TJ - (TK + TL);
        Tn = Th + Tm;
        TP = Tc + TM;
        Tz = SIMD_FMADD(KP525731112, Ty, Tn);
        TR = SIMD_FMADD(KP525731112, TQ, TP);
        TA = SIMD_FMADD(KP726542528, Tz, Tc);
        TS = SIMD_FMADD(KP726542528, TR, Th);
        ro[0] =
            T1 + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, TA, T7), T2) -
            (TB + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, TM, TH), TC));
        io[0] =
            TN + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, TS, Ts), TO) -
            (TT + SIMD_FMADD(KP951056516, SIMD_FMADD(KP850650808, Tm, Tx), TU));
    }
}
