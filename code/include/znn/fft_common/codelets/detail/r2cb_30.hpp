//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cb_traits<30, 0>
{
    static constexpr long_t flops           = 244;
    static constexpr long_t operations      = 158;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 137;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 0 -name
 * r2cb -standalone */

/*
 * This function contains 158 FP additions, 86 FP multiplications,
 * (or, 72 additions, 0 multiplications, 86 fused multiply/add),
 * 137 stack variables, 9 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 0>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2c, T2i, T2h, T2b;
        {
            SIMD_FLOAT T1k, TC, TJ, T1n, T5, Ta, Tl, T1j, Tz, T1X, T1r, TV, T1m,
                TG, To;
            SIMD_FLOAT T26, T24, T1u, T16, T1W, T1M, Tc, Td, Te, Tg, Th, T27,
                Tr, T23, T1R;
            SIMD_FLOAT TA, TB, T1, T2, T3, TH, TI, T6, T7, T8, Tv, Tb, T1Y, T2k,
                T1l;
            SIMD_FLOAT T1z, T2o, T28, Ts, TY, T25, T2n, T1U, T1S, T1o, T1A, T2l,
                T21, Tj, TN;
            SIMD_FLOAT Tf, T1Z, Ti, T20;
            TA = Ci[WS(cs, 6)];
            TB = Ci[WS(cs, 12)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TH = Ci[WS(cs, 9)];
            TI = Ci[WS(cs, 3)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1L, Ty, TF, T1Q, TU, T1J, T13, T14, T10, Tx, T11,
                    TR, T1I, TE, TS;
                SIMD_FLOAT TT, TP, T4, TQ, T9, Tp, Tq, T1P, T1O, T15, T1N, T12,
                    T1K, Tm, Tn;
                T1L = Ci[WS(cs, 10)];
                TS  = Ci[WS(cs, 2)];
                TT  = Ci[WS(cs, 8)];
                T1k = SIMD_FMSUB(KP618033988, TA, TB);
                TC  = SIMD_FMADD(KP618033988, TB, TA);
                TP  = Ci[WS(cs, 14)];
                T4  = T2 + T3;
                Ty  = T2 - T3;
                TJ  = SIMD_FMADD(KP618033988, TI, TH);
                T1n = SIMD_FNMADD(KP618033988, TH, TI);
                TQ  = Ci[WS(cs, 4)];
                TF  = T7 - T8;
                T9  = T7 + T8;
                T1Q = Ci[WS(cs, 5)];
                TU  = TS - TT;
                T1J = TS + TT;
                T13 = Ci[WS(cs, 7)];
                T14 = Ci[WS(cs, 13)];
                T10 = Ci[WS(cs, 1)];
                Tx  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                T11 = Ci[WS(cs, 11)];
                TR  = TP + TQ;
                T1I = TQ - TP;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TE  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 5)];
                Tm  = Cr[WS(cs, 1)];
                Tn  = Cr[WS(cs, 11)];
                T1O = T13 + T14;
                T15 = T13 - T14;
                T1j = SIMD_FNMADD(KP1_118033988, Ty, Tx);
                Tz  = SIMD_FMADD(KP1_118033988, Ty, Tx);
                T1N = T10 - T11;
                T12 = T10 + T11;
                T1K = T1I - T1J;
                T1X = T1I + T1J;
                T1r = SIMD_FMADD(KP618033988, TR, TU);
                TV  = SIMD_FNMADD(KP618033988, TU, TR);
                T1m = SIMD_FNMADD(KP1_118033988, TF, TE);
                TG  = SIMD_FMADD(KP1_118033988, TF, TE);
                To  = Tm + Tn;
                T26 = Tm - Tn;
                Tp  = Cr[WS(cs, 7)];
                Tq  = Cr[WS(cs, 13)];
                T1P = T1N + T1O;
                T24 = T1N - T1O;
                T1u = SIMD_FNMADD(KP618033988, T12, T15);
                T16 = SIMD_FMADD(KP618033988, T15, T12);
                T1W = SIMD_FNMADD(KP250000000, T1K, T1L);
                T1M = T1K + T1L;
                Tc  = Cr[WS(cs, 10)];
                Td  = Cr[WS(cs, 14)];
                Te  = Cr[WS(cs, 4)];
                Tg  = Cr[WS(cs, 8)];
                Th  = Cr[WS(cs, 2)];
                T27 = Tp - Tq;
                Tr  = Tp + Tq;
                T23 = SIMD_FMADD(KP250000000, T1P, T1Q);
                T1R = T1P - T1Q;
            }
            Tv  = T5 - Ta;
            Tb  = T5 + Ta;
            T1Y = SIMD_FMADD(KP559016994, T1X, T1W);
            T2k = SIMD_FNMADD(KP559016994, T1X, T1W);
            T1l = SIMD_FMADD(KP1_902113032, T1k, T1j);
            T1z = SIMD_FNMADD(KP1_902113032, T1k, T1j);
            Tf  = Td + Te;
            T1Z = Td - Te;
            Ti  = Tg + Th;
            T20 = Tg - Th;
            T2o = SIMD_FNMADD(KP618033988, T26, T27);
            T28 = SIMD_FMADD(KP618033988, T27, T26);
            Ts  = To + Tr;
            TY  = To - Tr;
            T25 = SIMD_FNMADD(KP559016994, T24, T23);
            T2n = SIMD_FMADD(KP559016994, T24, T23);
            T1U = T1M + T1R;
            T1S = T1M - T1R;
            T1o = SIMD_FMADD(KP1_902113032, T1n, T1m);
            T1A = SIMD_FNMADD(KP1_902113032, T1n, T1m);
            T2l = SIMD_FNMADD(KP618033988, T1Z, T20);
            T21 = SIMD_FMADD(KP618033988, T20, T1Z);
            Tj  = Tf + Ti;
            TN  = Tf - Ti;
            {
                SIMD_FLOAT T1x, T1p, T1F, T1B, T22, T2e, T1b, T1c, T2y, T2w,
                    T2s, T2q, T1v, T1D, T1f;
                SIMD_FLOAT T17, T29, T2f, TL, T19, T1s, T1C, T1e, TW, T1H, T1T,
                    Tt, T2v, T2p, T2u;
                SIMD_FLOAT T2m, TM, Tk, T1t, TZ, TD, TK, TX, T1q, TO, Tw, Tu,
                    T2a, T1h, T1i;
                SIMD_FLOAT T1a, T1V, T2g, T1d, T1w, T1y, T1E, T1G, T1g, T18,
                    T2x, T2t, T2r, T2j, T2d;
                TX             = SIMD_FNMADD(KP250000000, Ts, Tl);
                Tt             = Tl + Ts;
                T2v            = SIMD_FNMADD(KP951056516, T2o, T2n);
                T2p            = SIMD_FMADD(KP951056516, T2o, T2n);
                T1x            = T1l - T1o;
                T1p            = T1l + T1o;
                T1F            = T1z - T1A;
                T1B            = T1z + T1A;
                T2u            = SIMD_FMADD(KP951056516, T2l, T2k);
                T2m            = SIMD_FNMADD(KP951056516, T2l, T2k);
                TM             = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                T1t            = SIMD_FNMADD(KP559016994, TY, TX);
                TZ             = SIMD_FMADD(KP559016994, TY, TX);
                T22            = SIMD_FMADD(KP951056516, T21, T1Y);
                T2e            = SIMD_FNMADD(KP951056516, T21, T1Y);
                T1b            = SIMD_FMADD(KP1_902113032, TC, Tz);
                TD             = SIMD_FNMADD(KP1_902113032, TC, Tz);
                TK             = SIMD_FMADD(KP1_902113032, TJ, TG);
                T1c            = SIMD_FNMADD(KP1_902113032, TJ, TG);
                T2y            = T2u + T2v;
                T2w            = T2u - T2v;
                T2s            = T2m + T2p;
                T2q            = T2m - T2p;
                T1q            = SIMD_FNMADD(KP559016994, TN, TM);
                TO             = SIMD_FMADD(KP559016994, TN, TM);
                Tw             = Tt - Tk;
                Tu             = Tk + Tt;
                T1v            = SIMD_FNMADD(KP951056516, T1u, T1t);
                T1D            = SIMD_FMADD(KP951056516, T1u, T1t);
                T1f            = SIMD_FMADD(KP951056516, T16, TZ);
                T17            = SIMD_FNMADD(KP951056516, T16, TZ);
                T29            = SIMD_FNMADD(KP951056516, T28, T25);
                T2f            = SIMD_FMADD(KP951056516, T28, T25);
                TL             = TD + TK;
                T19            = TD - TK;
                T1s            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T1C            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1e            = SIMD_FNMADD(KP951056516, TV, TO);
                TW             = SIMD_FMADD(KP951056516, TV, TO);
                R0[WS(rs, 15)] = SIMD_FNMADD(KP2_000000000, Tw, Tv);
                T1H            = Tv + Tw;
                R0[0]          = SIMD_FMADD(KP2_000000000, Tu, Tb);
                T1T            = Tb - Tu;
                T2c            = T22 + T29;
                T2a            = T22 - T29;
                T2g            = T2e - T2f;
                T2i            = T2e + T2f;
                T1d            = T1b + T1c;
                T1h            = T1b - T1c;
                T1w            = T1s + T1v;
                T1y            = T1v - T1s;
                T1E            = T1C + T1D;
                T1G            = T1D - T1C;
                T1g            = T1e + T1f;
                T1i            = T1f - T1e;
                R0[WS(rs, 25)] = SIMD_FNMADD(KP1_732050807, T1S, T1H);
                R0[WS(rs, 5)]  = SIMD_FMADD(KP1_732050807, T1S, T1H);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP1_732050807, T1U, T1T);
                R0[WS(rs, 20)] = SIMD_FMADD(KP1_732050807, T1U, T1T);
                T18            = TW + T17;
                T1a            = T17 - TW;
                T2x            = T1x + T1y;
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, T1y, T1x);
                T2t            = T1p - T1w;
                R0[WS(rs, 18)] = SIMD_FMADD(KP2_000000000, T1w, T1p);
                T2r            = T1F + T1G;
                R0[WS(rs, 27)] = SIMD_FNMADD(KP2_000000000, T1G, T1F);
                T2j            = T1B - T1E;
                R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T1E, T1B);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP2_000000000, T1i, T1h);
                T2d            = T1d - T1g;
                R0[WS(rs, 24)] = SIMD_FMADD(KP2_000000000, T1g, T1d);
                R0[WS(rs, 21)] = SIMD_FNMADD(KP2_000000000, T1a, T19);
                T1V            = TL - T18;
                R0[WS(rs, 6)]  = SIMD_FMADD(KP2_000000000, T18, TL);
                R0[WS(rs, 23)] = SIMD_FMADD(KP1_732050807, T2y, T2x);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP1_732050807, T2y, T2x);
                R0[WS(rs, 8)]  = SIMD_FMADD(KP1_732050807, T2w, T2t);
                R0[WS(rs, 28)] = SIMD_FNMADD(KP1_732050807, T2w, T2t);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T2s, T2r);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, T2s, T2r);
                R0[WS(rs, 2)]  = SIMD_FMADD(KP1_732050807, T2q, T2j);
                R0[WS(rs, 22)] = SIMD_FNMADD(KP1_732050807, T2q, T2j);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T2g, T2d);
                R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T2g, T2d);
                R0[WS(rs, 26)] = SIMD_FMADD(KP1_732050807, T2a, T1V);
                R0[WS(rs, 16)] = SIMD_FNMADD(KP1_732050807, T2a, T1V);
                T2h            = T1h + T1i;
                T2b            = T19 + T1a;
            }
        }
        R0[WS(rs, 29)] = SIMD_FMADD(KP1_732050807, T2i, T2h);
        R0[WS(rs, 19)] = SIMD_FNMADD(KP1_732050807, T2i, T2h);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T2c, T2b);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T2c, T2b);
    }
}

template <>
struct r2cb_traits<30, 1>
{
    static constexpr long_t flops           = 243;
    static constexpr long_t operations      = 158;
    static constexpr long_t memory_accesses = 59;
    static constexpr long_t stack_vars      = 134;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 1 -name
 * r2cb -standalone */

/*
 * This function contains 158 FP additions, 85 FP multiplications,
 * (or, 73 additions, 0 multiplications, 85 fused multiply/add),
 * 134 stack variables, 9 constants, and 59 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 1>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1P, T1m, T1u, T1y, T1C, TI, T16, T2t, T2v, T2n, T2p, T1z,
            T1p, TT, T1b;
        SIMD_FLOAT T1a, T1e, T29, T27, T2d, T2f, T1A, T1s, T1c, T14, T1E, T1t,
            T1v, T1B, T1D;
        SIMD_FLOAT T15, T17, T1d, T1f, T2u, T2q, T2o, T2g, T28, T1S, T2e, T2a;
        {
            SIMD_FLOAT T1h, Tz, TG, T1k, T5, Ta, Tl, T1g, Tw, T1U, T1o, TS, T1j,
                TD, To;
            SIMD_FLOAT T1W, T21, T1r, T13, T1T, T1J, Tc, Td, Te, Tg, Th, T1X,
                Tr, T20, T1O;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 6)];
            Ty = Ci[WS(cs, 12)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 9)];
            TF = Ci[WS(cs, 3)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1I, Tv, TC, T1N, TR, T1G, T10, T11, TX, Tu, TY, TO,
                    T1F, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tp, Tq, T1M, T1L, T12, T1K, TZ,
                    T1H, Tm, Tn;
                T1I = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 2)];
                TQ  = Ci[WS(cs, 8)];
                T1h = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 14)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1k = SIMD_FNMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 4)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1N = Ci[WS(cs, 5)];
                TR  = TP - TQ;
                T1G = TP + TQ;
                T10 = Ci[WS(cs, 7)];
                T11 = Ci[WS(cs, 13)];
                TX  = Ci[WS(cs, 1)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 11)];
                TO  = TM + TN;
                T1F = TN - TM;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1L = T10 + T11;
                T12 = T10 - T11;
                T1g = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1K = TX - TY;
                TZ  = TX + TY;
                T1H = T1F - T1G;
                T1U = T1F + T1G;
                T1o = SIMD_FMADD(KP618033988, TO, TR);
                TS  = SIMD_FNMADD(KP618033988, TR, TO);
                T1j = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                To  = Tm + Tn;
                T1W = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1M = T1K + T1L;
                T21 = T1K - T1L;
                T1r = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                T1T = SIMD_FNMADD(KP250000000, T1H, T1I);
                T1J = T1H + T1I;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1X = Tp - Tq;
                Tr  = Tp + Tq;
                T20 = SIMD_FMADD(KP250000000, T1M, T1N);
                T1O = T1M - T1N;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T1V, T1w, T1x, T1Y, Ts, TK, T22, T2k, T1R, T2l, T25,
                    Tj, TV, T2j, T2r;
                SIMD_FLOAT TJ, T2h, Tf, T23, Ti, T24, T2i, T1i, T1l, T1Z, T2b,
                    T26, T2c, TW, T1q;
                SIMD_FLOAT Tt, T1Q, T18, TA, TH, T19, T2s, T2m, TU, Tk, TL, T1n;
                T2h            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                T1w            = SIMD_FNMADD(KP1_902113032, T1h, T1g);
                T1i            = SIMD_FMADD(KP1_902113032, T1h, T1g);
                T1l            = SIMD_FMADD(KP1_902113032, T1k, T1j);
                T1x            = SIMD_FNMADD(KP1_902113032, T1k, T1j);
                Tf             = Td + Te;
                T23            = Td - Te;
                Ti             = Tg + Th;
                T24            = Tg - Th;
                T1Y            = SIMD_FMADD(KP618033988, T1X, T1W);
                T2i            = SIMD_FNMADD(KP618033988, T1W, T1X);
                Ts             = To + Tr;
                TK             = To - Tr;
                T22            = SIMD_FNMADD(KP559016994, T21, T20);
                T2k            = SIMD_FMADD(KP559016994, T21, T20);
                T1R            = T1J + T1O;
                T1P            = T1J - T1O;
                T1m            = T1i + T1l;
                T1u            = T1i - T1l;
                T2l            = SIMD_FNMADD(KP618033988, T23, T24);
                T25            = SIMD_FMADD(KP618033988, T24, T23);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T2j            = SIMD_FNMADD(KP951056516, T2i, T2h);
                T2r            = SIMD_FMADD(KP951056516, T2i, T2h);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T18            = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                TH             = SIMD_FMADD(KP1_902113032, TG, TD);
                T19            = SIMD_FNMADD(KP1_902113032, TG, TD);
                T2s            = SIMD_FNMADD(KP951056516, T2l, T2k);
                T2m            = SIMD_FMADD(KP951056516, T2l, T2k);
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                T1n            = SIMD_FNMADD(KP559016994, TK, TJ);
                T1y            = T1w + T1x;
                T1C            = T1w - T1x;
                T1Z            = SIMD_FMADD(KP951056516, T1Y, T1V);
                T2b            = SIMD_FNMADD(KP951056516, T1Y, T1V);
                T26            = SIMD_FNMADD(KP951056516, T25, T22);
                T2c            = SIMD_FMADD(KP951056516, T25, T22);
                TI             = TA + TH;
                T16            = TA - TH;
                T2t            = T2r - T2s;
                T2v            = T2r + T2s;
                T2n            = T2j - T2m;
                T2p            = T2j + T2m;
                TW             = SIMD_FMADD(KP559016994, TV, TU);
                T1q            = SIMD_FNMADD(KP559016994, TV, TU);
                Tt             = Tk - (Tl + Ts);
                T1Q            = T5 + Ta - Tk - (Tl + Ts);
                T1z            = SIMD_FMADD(KP951056516, T1o, T1n);
                T1p            = SIMD_FNMADD(KP951056516, T1o, T1n);
                TT             = SIMD_FMADD(KP951056516, TS, TL);
                T1b            = SIMD_FNMADD(KP951056516, TS, TL);
                T1a            = T18 + T19;
                T1e            = T18 - T19;
                T29            = T1Z + T26;
                T27            = T1Z - T26;
                T2d            = T2b - T2c;
                T2f            = T2b + T2c;
                T1A            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1s            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T1c            = SIMD_FMADD(KP951056516, T13, TW);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                R0[WS(rs, 14)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1E            = Tb + Tt;
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_732050807, T1R, T1Q);
                R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T1R, T1Q);
            }
        }
        T1t            = T1p + T1s;
        T1v            = T1s - T1p;
        T1B            = T1z + T1A;
        T1D            = T1A - T1z;
        T15            = TT + T14;
        T17            = T14 - TT;
        T1d            = T1b + T1c;
        T1f            = T1c - T1b;
        R0[WS(rs, 4)]  = SIMD_FMADD(KP1_732050807, T1P, T1E);
        R0[WS(rs, 24)] = SIMD_FNMADD(KP1_732050807, T1P, T1E);
        T2u            = T1u + T1v;
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP2_000000000, T1v, T1u);
        T2q            = T1m - T1t;
        R0[WS(rs, 17)] = SIMD_FMADD(KP2_000000000, T1t, T1m);
        T2o            = T1C + T1D;
        R0[WS(rs, 26)] = SIMD_FNMADD(KP2_000000000, T1D, T1C);
        T2g            = T1y - T1B;
        R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T1B, T1y);
        T28            = T16 + T17;
        R0[WS(rs, 20)] = SIMD_FNMADD(KP2_000000000, T17, T16);
        T1S            = TI - T15;
        R0[WS(rs, 5)]  = SIMD_FMADD(KP2_000000000, T15, TI);
        T2e            = T1e + T1f;
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP2_000000000, T1f, T1e);
        T2a            = T1a - T1d;
        R0[WS(rs, 23)] = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 22)] = SIMD_FMADD(KP1_732050807, T2v, T2u);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_732050807, T2v, T2u);
        R0[WS(rs, 7)]  = SIMD_FMADD(KP1_732050807, T2t, T2q);
        R0[WS(rs, 27)] = SIMD_FNMADD(KP1_732050807, T2t, T2q);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T2p, T2o);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, T2p, T2o);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, T2n, T2g);
        R0[WS(rs, 21)] = SIMD_FNMADD(KP1_732050807, T2n, T2g);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T29, T28);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T29, T28);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_732050807, T27, T1S);
        R0[WS(rs, 15)] = SIMD_FNMADD(KP1_732050807, T27, T1S);
        R0[WS(rs, 28)] = SIMD_FMADD(KP1_732050807, T2f, T2e);
        R0[WS(rs, 18)] = SIMD_FNMADD(KP1_732050807, T2f, T2e);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T2d, T2a);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T2d, T2a);
    }
}

template <>
struct r2cb_traits<30, 2>
{
    static constexpr long_t flops           = 241;
    static constexpr long_t operations      = 157;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 2 -name
 * r2cb -standalone */

/*
 * This function contains 157 FP additions, 84 FP multiplications,
 * (or, 73 additions, 0 multiplications, 84 fused multiply/add),
 * 132 stack variables, 9 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 2>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1P, T1m, T1u, T2r, T2s, T1y, T1C, TI, T16, T2t, T2n, T2p,
            T1p, T1z, T1b;
        SIMD_FLOAT TT, T1e, T1a, T27, T29, T2f, T2d, T1s, T1A, T14, T1c, T1E,
            T1v, T1t, T1D;
        SIMD_FLOAT T1B, T17, T15, T1f, T1d, T2o, T2g, T2q, T2e, T2a, T28, T1S;
        {
            SIMD_FLOAT T1h, Tz, TG, T1k, T5, Ta, Tl, T1g, Tw, T1U, T1o, TS, T1j,
                TD, To;
            SIMD_FLOAT T1X, T21, T1r, T13, T1T, T1J, Tc, Td, Te, Tg, Th, T1W,
                Tr, T20, T1O;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 12)];
            Ty = Ci[WS(cs, 6)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 3)];
            TF = Ci[WS(cs, 9)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1I, Tv, TC, T1N, TR, T1F, T10, T11, TX, Tu, TY, TO,
                    T1G, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tp, Tq, T1M, T1L, T12, T1K, TZ,
                    T1H, Tm, Tn;
                T1I = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                T1h = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 2)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1k = SIMD_FMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 8)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1N = Ci[WS(cs, 5)];
                TR  = TP + TQ;
                T1F = TQ - TP;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 7)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 13)];
                TO  = TM - TN;
                T1G = TM + TN;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1L = T10 - T11;
                T12 = T10 + T11;
                T1g = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1K = TX + TY;
                TZ  = TX - TY;
                T1H = T1F - T1G;
                T1U = T1F + T1G;
                T1o = SIMD_FNMADD(KP618033988, TO, TR);
                TS  = SIMD_FMADD(KP618033988, TR, TO);
                T1j = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                To  = Tm + Tn;
                T1X = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1M = T1K + T1L;
                T21 = T1L - T1K;
                T1r = SIMD_FMADD(KP618033988, TZ, T12);
                T13 = SIMD_FNMADD(KP618033988, T12, TZ);
                T1T = SIMD_FNMADD(KP250000000, T1H, T1I);
                T1J = T1H + T1I;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1W = Tp - Tq;
                Tr  = Tp + Tq;
                T20 = SIMD_FMADD(KP250000000, T1M, T1N);
                T1O = T1M - T1N;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T1V, T1w, T1x, T1Y, Ts, TK, T22, T2k, T1R, T2l, T25,
                    Tj, TV, T2j, TJ;
                SIMD_FLOAT T2h, Tf, T24, Ti, T23, T2i, T1i, T1l, T1Z, T2b, T26,
                    T2c, T1q, TW, Tt;
                SIMD_FLOAT T1Q, T18, TA, TH, T19, T2m, TU, Tk, TL, T1n;
                T2h            = SIMD_FMADD(KP559016994, T1U, T1T);
                T1V            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1w            = SIMD_FNMADD(KP1_902113032, T1h, T1g);
                T1i            = SIMD_FMADD(KP1_902113032, T1h, T1g);
                T1l            = SIMD_FNMADD(KP1_902113032, T1k, T1j);
                T1x            = SIMD_FMADD(KP1_902113032, T1k, T1j);
                Tf             = Td + Te;
                T24            = Td - Te;
                Ti             = Tg + Th;
                T23            = Tg - Th;
                T1Y            = SIMD_FNMADD(KP618033988, T1X, T1W);
                T2i            = SIMD_FMADD(KP618033988, T1W, T1X);
                Ts             = To + Tr;
                TK             = To - Tr;
                T22            = SIMD_FMADD(KP559016994, T21, T20);
                T2k            = SIMD_FNMADD(KP559016994, T21, T20);
                T1R            = T1J + T1O;
                T1P            = T1J - T1O;
                T1m            = T1i + T1l;
                T1u            = T1i - T1l;
                T2l            = SIMD_FMADD(KP618033988, T23, T24);
                T25            = SIMD_FNMADD(KP618033988, T24, T23);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T2j            = SIMD_FNMADD(KP951056516, T2i, T2h);
                T2r            = SIMD_FMADD(KP951056516, T2i, T2h);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T18            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TH             = SIMD_FMADD(KP1_902113032, TG, TD);
                T19            = SIMD_FNMADD(KP1_902113032, TG, TD);
                T2s            = SIMD_FNMADD(KP951056516, T2l, T2k);
                T2m            = SIMD_FMADD(KP951056516, T2l, T2k);
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                TL             = SIMD_FNMADD(KP559016994, TK, TJ);
                T1n            = SIMD_FMADD(KP559016994, TK, TJ);
                T1y            = T1w + T1x;
                T1C            = T1w - T1x;
                T1Z            = SIMD_FNMADD(KP951056516, T1Y, T1V);
                T2b            = SIMD_FMADD(KP951056516, T1Y, T1V);
                T26            = SIMD_FMADD(KP951056516, T25, T22);
                T2c            = SIMD_FNMADD(KP951056516, T25, T22);
                TI             = TA + TH;
                T16            = TA - TH;
                T2t            = T2r - T2s;
                T2n            = T2j - T2m;
                T2p            = T2j + T2m;
                T1q            = SIMD_FMADD(KP559016994, TV, TU);
                TW             = SIMD_FNMADD(KP559016994, TV, TU);
                Tt             = Tk - (Tl + Ts);
                T1Q            = T5 + Ta - Tk - (Tl + Ts);
                T1p            = SIMD_FNMADD(KP951056516, T1o, T1n);
                T1z            = SIMD_FMADD(KP951056516, T1o, T1n);
                T1b            = SIMD_FMADD(KP951056516, TS, TL);
                TT             = SIMD_FNMADD(KP951056516, TS, TL);
                T1e            = T18 - T19;
                T1a            = T18 + T19;
                T27            = T1Z - T26;
                T29            = T1Z + T26;
                T2f            = T2b + T2c;
                T2d            = T2b - T2c;
                T1s            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1A            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                T1c            = SIMD_FMADD(KP951056516, T13, TW);
                R0[WS(rs, 13)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1E            = Tb + Tt;
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_732050807, T1R, T1Q);
                R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T1R, T1Q);
            }
        }
        T1v            = T1s - T1p;
        T1t            = T1p + T1s;
        T1D            = T1z - T1A;
        T1B            = T1z + T1A;
        T17            = T14 - TT;
        T15            = TT + T14;
        T1f            = T1c - T1b;
        T1d            = T1b + T1c;
        R0[WS(rs, 3)]  = SIMD_FMADD(KP1_732050807, T1P, T1E);
        R0[WS(rs, 23)] = SIMD_FNMADD(KP1_732050807, T1P, T1E);
        T2o            = T1u + T1v;
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, T1v, T1u);
        T2g            = T1m - T1t;
        R0[WS(rs, 22)] = SIMD_FMADD(KP2_000000000, T1t, T1m);
        R0[WS(rs, 9)]  = SIMD_FMADD(KP1_732050807, T2r + T2s, T1C) - T1D;
        R0[WS(rs, 19)] = SIMD_FMADD(KP2_000000000, T1D, T1C);
        T2q            = T1y - T1B;
        R0[WS(rs, 4)]  = SIMD_FMADD(KP2_000000000, T1B, T1y);
        T2e            = T16 + T17;
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP2_000000000, T17, T16);
        T2a            = TI - T15;
        R0[WS(rs, 16)] = SIMD_FMADD(KP2_000000000, T15, TI);
        T28            = T1e + T1f;
        R0[WS(rs, 25)] = SIMD_FNMADD(KP2_000000000, T1f, T1e);
        T1S            = T1a - T1d;
        R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 27)] = SIMD_FMADD(KP1_732050807, T2p, T2o);
        R0[WS(rs, 17)] = SIMD_FNMADD(KP1_732050807, T2p, T2o);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T2n, T2g);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T2n, T2g);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_732050807, T2t, T2q);
        R0[WS(rs, 14)] = SIMD_FNMADD(KP1_732050807, T2t, T2q);
        R0[WS(rs, 21)] = SIMD_FMADD(KP1_732050807, T2f, T2e);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_732050807, T2f, T2e);
        R0[WS(rs, 6)]  = SIMD_FMADD(KP1_732050807, T2d, T2a);
        R0[WS(rs, 26)] = SIMD_FNMADD(KP1_732050807, T2d, T2a);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T29, T28);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_732050807, T29, T28);
        R0[0]          = SIMD_FMADD(KP1_732050807, T27, T1S);
        R0[WS(rs, 20)] = SIMD_FNMADD(KP1_732050807, T27, T1S);
    }
}

template <>
struct r2cb_traits<30, 3>
{
    static constexpr long_t flops           = 239;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 57;
    static constexpr long_t stack_vars      = 130;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 3 -name
 * r2cb -standalone */

/*
 * This function contains 156 FP additions, 83 FP multiplications,
 * (or, 73 additions, 0 multiplications, 83 fused multiply/add),
 * 130 stack variables, 9 constants, and 57 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 3>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1P, T1m, T1u, T2b, T2c, T1y, T1C, T2h, T2k, TI, T16, T2d,
            T27, T29, T1p;
        SIMD_FLOAT T1z, T1b, TT, T1e, T1a, T2p, T2r, T1s, T1A, T14, T1c, T1E,
            T2l, T1t, T1v;
        SIMD_FLOAT T1B, T1D, T15, T17, T1d, T1f, T28, T1S, T2a, T2q, T2m, T2e;
        {
            SIMD_FLOAT T1h, Tz, TG, T1k, T5, Ta, Tl, T1g, Tw, T1U, T1o, TS, T1j,
                TD, To;
            SIMD_FLOAT T1W, T21, T1r, T13, T1T, T1J, Tc, Td, Te, Tg, Th, T1X,
                Tr, T20, T1O;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 12)];
            Ty = Ci[WS(cs, 6)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 3)];
            TF = Ci[WS(cs, 9)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1I, Tv, TC, T1N, TR, T1F, T10, T11, TX, Tu, TY, TO,
                    T1G, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tp, Tq, T1M, T1L, T12, T1K, TZ,
                    T1H, Tm, Tn;
                T1I = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                T1h = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 2)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1k = SIMD_FMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 8)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1N = Ci[WS(cs, 5)];
                TR  = TP + TQ;
                T1F = TQ - TP;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 7)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 13)];
                TO  = TM - TN;
                T1G = TM + TN;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1L = T10 - T11;
                T12 = T10 + T11;
                T1g = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1K = TX + TY;
                TZ  = TX - TY;
                T1H = T1F - T1G;
                T1U = T1F + T1G;
                T1o = SIMD_FNMADD(KP618033988, TO, TR);
                TS  = SIMD_FMADD(KP618033988, TR, TO);
                T1j = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                To  = Tm + Tn;
                T1W = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1M = T1K + T1L;
                T21 = T1L - T1K;
                T1r = SIMD_FMADD(KP618033988, TZ, T12);
                T13 = SIMD_FNMADD(KP618033988, T12, TZ);
                T1T = SIMD_FNMADD(KP250000000, T1H, T1I);
                T1J = T1H + T1I;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1X = Tp - Tq;
                Tr  = Tp + Tq;
                T20 = SIMD_FMADD(KP250000000, T1M, T1N);
                T1O = T1M - T1N;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T2f, T1w, T1x, T2g, Ts, TK, T2i, T22, T1R, T2j, T25,
                    Tj, TV, T1Z, TJ;
                SIMD_FLOAT T1V, Tf, T23, Ti, T24, T1Y, T1i, T1l, T2n, T2o, T1q,
                    TW, Tt, T1Q, T18;
                SIMD_FLOAT TA, TH, T19, T26, TU, Tk, TL, T1n;
                T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                T2f            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1w            = SIMD_FNMADD(KP1_902113032, T1h, T1g);
                T1i            = SIMD_FMADD(KP1_902113032, T1h, T1g);
                T1l            = SIMD_FNMADD(KP1_902113032, T1k, T1j);
                T1x            = SIMD_FMADD(KP1_902113032, T1k, T1j);
                Tf             = Td + Te;
                T23            = Td - Te;
                Ti             = Tg + Th;
                T24            = Tg - Th;
                T1Y            = SIMD_FMADD(KP618033988, T1X, T1W);
                T2g            = SIMD_FNMADD(KP618033988, T1W, T1X);
                Ts             = To + Tr;
                TK             = To - Tr;
                T2i            = SIMD_FMADD(KP559016994, T21, T20);
                T22            = SIMD_FNMADD(KP559016994, T21, T20);
                T1R            = T1J + T1O;
                T1P            = T1J - T1O;
                T1m            = T1i + T1l;
                T1u            = T1i - T1l;
                T2j            = SIMD_FNMADD(KP618033988, T23, T24);
                T25            = SIMD_FMADD(KP618033988, T24, T23);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T1Z            = SIMD_FNMADD(KP951056516, T1Y, T1V);
                T2b            = SIMD_FMADD(KP951056516, T1Y, T1V);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T18            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TH             = SIMD_FMADD(KP1_902113032, TG, TD);
                T19            = SIMD_FNMADD(KP1_902113032, TG, TD);
                T26            = SIMD_FMADD(KP951056516, T25, T22);
                T2c            = SIMD_FNMADD(KP951056516, T25, T22);
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                TL             = SIMD_FNMADD(KP559016994, TK, TJ);
                T1n            = SIMD_FMADD(KP559016994, TK, TJ);
                T1y            = T1w + T1x;
                T1C            = T1w - T1x;
                T2h            = SIMD_FNMADD(KP951056516, T2g, T2f);
                T2n            = SIMD_FMADD(KP951056516, T2g, T2f);
                T2k            = SIMD_FMADD(KP951056516, T2j, T2i);
                T2o            = SIMD_FNMADD(KP951056516, T2j, T2i);
                TI             = TA + TH;
                T16            = TA - TH;
                T2d            = T2b - T2c;
                T27            = T1Z - T26;
                T29            = T1Z + T26;
                T1q            = SIMD_FMADD(KP559016994, TV, TU);
                TW             = SIMD_FNMADD(KP559016994, TV, TU);
                Tt             = Tk - (Tl + Ts);
                T1Q            = T5 + Ta - Tk - (Tl + Ts);
                T1p            = SIMD_FNMADD(KP951056516, T1o, T1n);
                T1z            = SIMD_FMADD(KP951056516, T1o, T1n);
                T1b            = SIMD_FMADD(KP951056516, TS, TL);
                TT             = SIMD_FNMADD(KP951056516, TS, TL);
                T1e            = T18 - T19;
                T1a            = T18 + T19;
                T2p            = T2n - T2o;
                T2r            = T2n + T2o;
                T1s            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1A            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                T1c            = SIMD_FMADD(KP951056516, T13, TW);
                R0[WS(rs, 12)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1E            = Tb + Tt;
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, T1R, T1Q);
                R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T1R, T1Q);
                T2l            = T2h + T2k;
            }
        }
        T1t            = T1p + T1s;
        T1v            = T1s - T1p;
        T1B            = T1z + T1A;
        T1D            = T1z - T1A;
        T15            = TT + T14;
        T17            = T14 - TT;
        T1d            = T1b + T1c;
        T1f            = T1c - T1b;
        R0[WS(rs, 2)]  = SIMD_FMADD(KP1_732050807, T1P, T1E);
        R0[WS(rs, 22)] = SIMD_FNMADD(KP1_732050807, T1P, T1E);
        T28            = T1u + T1v;
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, T1v, T1u);
        T1S            = T1m - T1t;
        R0[WS(rs, 21)] = SIMD_FMADD(KP2_000000000, T1t, T1m);
        R0[WS(rs, 8)]  = SIMD_FMADD(KP1_732050807, T2b + T2c, T1C) - T1D;
        R0[WS(rs, 18)] = SIMD_FMADD(KP2_000000000, T1D, T1C);
        T2a            = T1y - T1B;
        R0[WS(rs, 3)]  = SIMD_FMADD(KP2_000000000, T1B, T1y);
        T2q            = T16 + T17;
        R0[0]          = SIMD_FNMADD(KP2_000000000, T17, T16);
        T2m            = TI - T15;
        R0[WS(rs, 15)] = SIMD_FMADD(KP2_000000000, T15, TI);
        T2e            = T1e + T1f;
        R0[WS(rs, 24)] = SIMD_FNMADD(KP2_000000000, T1f, T1e);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T2k - T2h, T1a) - T1d;
        R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 26)] = SIMD_FMADD(KP1_732050807, T29, T28);
        R0[WS(rs, 16)] = SIMD_FNMADD(KP1_732050807, T29, T28);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T27, T1S);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T27, T1S);
        R0[WS(rs, 23)] = SIMD_FMADD(KP1_732050807, T2d, T2a);
        R0[WS(rs, 13)] = SIMD_FNMADD(KP1_732050807, T2d, T2a);
        R0[WS(rs, 20)] = SIMD_FMADD(KP1_732050807, T2r, T2q);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_732050807, T2r, T2q);
        R0[WS(rs, 5)]  = SIMD_FMADD(KP1_732050807, T2p, T2m);
        R0[WS(rs, 25)] = SIMD_FNMADD(KP1_732050807, T2p, T2m);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T2l, T2e);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T2l, T2e);
    }
}

template <>
struct r2cb_traits<30, 4>
{
    static constexpr long_t flops           = 237;
    static constexpr long_t operations      = 155;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 128;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 4 -name
 * r2cb -standalone */

/*
 * This function contains 155 FP additions, 82 FP multiplications,
 * (or, 73 additions, 0 multiplications, 82 fused multiply/add),
 * 128 stack variables, 9 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 4>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1i, T1l, T1N, T1w, T1A, T2f, T2i, T1m, T29, T2a, T16, TI,
            T2n, T2p, T2j;
        SIMD_FLOAT T1x, T1p, TT, T1b, T1a, T1e, T25, T27, T2b, T1y, T1s, T1c,
            T14, T1C, T2o;
        SIMD_FLOAT T1t, T1B, T1z, T17, T15, T1f, T1d, T28, T2k, T2c, T26, T1Q;
        {
            SIMD_FLOAT T1h, Tz, TG, T1k, T5, Ta, Tl, T1g, Tw, T1S, T1o, TS, T1j,
                TD, To;
            SIMD_FLOAT T1U, T1Z, T1r, T13, T1R, T1H, Tc, Td, Te, Tg, Th, T1V,
                Tr, T1Y, T1M;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 6)];
            Ty = Ci[WS(cs, 12)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 9)];
            TF = Ci[WS(cs, 3)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1G, Tv, TC, T1L, TR, T1E, T10, T11, TX, Tu, TY, TO,
                    T1D, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tp, Tq, T1K, T1J, T12, T1I, TZ,
                    T1F, Tm, Tn;
                T1G = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 2)];
                TQ  = Ci[WS(cs, 8)];
                T1h = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 14)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1k = SIMD_FNMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 4)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1L = Ci[WS(cs, 5)];
                TR  = TP - TQ;
                T1E = TP + TQ;
                T10 = Ci[WS(cs, 7)];
                T11 = Ci[WS(cs, 13)];
                TX  = Ci[WS(cs, 1)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 11)];
                TO  = TM + TN;
                T1D = TN - TM;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1J = T10 + T11;
                T12 = T10 - T11;
                T1g = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1I = TX - TY;
                TZ  = TX + TY;
                T1F = T1D - T1E;
                T1S = T1D + T1E;
                T1o = SIMD_FMADD(KP618033988, TO, TR);
                TS  = SIMD_FNMADD(KP618033988, TR, TO);
                T1j = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                To  = Tm + Tn;
                T1U = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1K = T1I + T1J;
                T1Z = T1I - T1J;
                T1r = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                T1R = SIMD_FNMADD(KP250000000, T1F, T1G);
                T1H = T1F + T1G;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1V = Tp - Tq;
                Tr  = Tp + Tq;
                T1Y = SIMD_FMADD(KP250000000, T1K, T1L);
                T1M = T1K - T1L;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T1T, T1W, Ts, TK, T20, T2g, T1P, T2h, T23, Tj, TV,
                    T2l, TJ, T2d, Tf;
                SIMD_FLOAT T21, Ti, T22, T2e, T1u, T1v, T1X, T24, TW, T1q, Tt,
                    T1O, T18, TA, TH;
                SIMD_FLOAT T19, T2m, TU, Tk, TL, T1n;
                T2d            = SIMD_FNMADD(KP559016994, T1S, T1R);
                T1T            = SIMD_FMADD(KP559016994, T1S, T1R);
                T1i            = SIMD_FMADD(KP1_902113032, T1h, T1g);
                T1u            = SIMD_FNMADD(KP1_902113032, T1h, T1g);
                T1v            = SIMD_FNMADD(KP1_902113032, T1k, T1j);
                T1l            = SIMD_FMADD(KP1_902113032, T1k, T1j);
                Tf             = Td + Te;
                T21            = Td - Te;
                Ti             = Tg + Th;
                T22            = Tg - Th;
                T1W            = SIMD_FMADD(KP618033988, T1V, T1U);
                T2e            = SIMD_FNMADD(KP618033988, T1U, T1V);
                Ts             = To + Tr;
                TK             = To - Tr;
                T20            = SIMD_FNMADD(KP559016994, T1Z, T1Y);
                T2g            = SIMD_FMADD(KP559016994, T1Z, T1Y);
                T1P            = T1H + T1M;
                T1N            = T1H - T1M;
                T1w            = T1u + T1v;
                T1A            = T1u - T1v;
                T2h            = SIMD_FNMADD(KP618033988, T21, T22);
                T23            = SIMD_FMADD(KP618033988, T22, T21);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T2f            = SIMD_FNMADD(KP951056516, T2e, T2d);
                T2l            = SIMD_FMADD(KP951056516, T2e, T2d);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T18            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TH             = SIMD_FNMADD(KP1_902113032, TG, TD);
                T19            = SIMD_FMADD(KP1_902113032, TG, TD);
                T2m            = SIMD_FNMADD(KP951056516, T2h, T2g);
                T2i            = SIMD_FMADD(KP951056516, T2h, T2g);
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                T1n            = SIMD_FNMADD(KP559016994, TK, TJ);
                T1m            = T1i + T1l;
                T29            = SIMD_FMADD(KP951056516, T1W, T1T);
                T1X            = SIMD_FNMADD(KP951056516, T1W, T1T);
                T2a            = SIMD_FNMADD(KP951056516, T23, T20);
                T24            = SIMD_FMADD(KP951056516, T23, T20);
                T16            = TA - TH;
                TI             = TA + TH;
                T2n            = T2l - T2m;
                T2p            = T2l + T2m;
                T2j            = T2f + T2i;
                TW             = SIMD_FMADD(KP559016994, TV, TU);
                T1q            = SIMD_FNMADD(KP559016994, TV, TU);
                Tt             = Tk - (Tl + Ts);
                T1O            = T5 + Ta - Tk - (Tl + Ts);
                T1x            = SIMD_FMADD(KP951056516, T1o, T1n);
                T1p            = SIMD_FNMADD(KP951056516, T1o, T1n);
                TT             = SIMD_FNMADD(KP951056516, TS, TL);
                T1b            = SIMD_FMADD(KP951056516, TS, TL);
                T1a            = T18 + T19;
                T1e            = T18 - T19;
                T25            = T1X - T24;
                T27            = T1X + T24;
                T2b            = T29 - T2a;
                T1y            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1s            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T1c            = SIMD_FNMADD(KP951056516, T13, TW);
                T14            = SIMD_FMADD(KP951056516, T13, TW);
                R0[WS(rs, 11)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1C            = Tb + Tt;
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, T1P, T1O);
                R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T1P, T1O);
            }
        }
        T2o            = T1i + T1s - T1p - T1l;
        T1t            = T1p + T1s;
        T1B            = T1y - T1x;
        T1z            = T1x + T1y;
        T17            = T14 - TT;
        T15            = TT + T14;
        T1f            = T1b - T1c;
        T1d            = T1b + T1c;
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, T1N, T1C);
        R0[WS(rs, 21)] = SIMD_FNMADD(KP1_732050807, T1N, T1C);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T2p, T2o);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_732050807, T2p, T2o);
        T2k            = T1m - T1t;
        R0[WS(rs, 14)] = SIMD_FMADD(KP2_000000000, T1t, T1m);
        T2c            = T1A + T1B;
        R0[WS(rs, 23)] = SIMD_FNMADD(KP2_000000000, T1B, T1A);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T2i - T2f, T1w) - T1z;
        R0[WS(rs, 8)]  = SIMD_FMADD(KP2_000000000, T1z, T1w);
        T26            = T16 + T17;
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP2_000000000, T17, T16);
        T1Q            = TI - T15;
        R0[WS(rs, 20)] = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 7)]  = SIMD_FMADD(KP1_732050807, T29 + T2a, T1e) - T1f;
        R0[WS(rs, 17)] = SIMD_FMADD(KP2_000000000, T1f, T1e);
        T28            = T1a - T1d;
        R0[WS(rs, 2)]  = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 4)]  = SIMD_FMADD(KP1_732050807, T2n, T2k);
        R0[WS(rs, 24)] = SIMD_FNMADD(KP1_732050807, T2n, T2k);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T2j, T2c);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T2j, T2c);
        R0[WS(rs, 25)] = SIMD_FMADD(KP1_732050807, T27, T26);
        R0[WS(rs, 15)] = SIMD_FNMADD(KP1_732050807, T27, T26);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T25, T1Q);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T25, T1Q);
        R0[WS(rs, 22)] = SIMD_FMADD(KP1_732050807, T2b, T28);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_732050807, T2b, T28);
    }
}

template <>
struct r2cb_traits<30, 5>
{
    static constexpr long_t flops           = 236;
    static constexpr long_t operations      = 154;
    static constexpr long_t memory_accesses = 55;
    static constexpr long_t stack_vars      = 122;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 5 -name
 * r2cb -standalone */

/*
 * This function contains 154 FP additions, 82 FP multiplications,
 * (or, 72 additions, 0 multiplications, 82 fused multiply/add),
 * 122 stack variables, 9 constants, and 55 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 5>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2d, T2e, TN, T21, T2a, T25, T28, T2k, T1C, T1r, T1D, T1y,
            T1A, T14, T2n;
        SIMD_FLOAT T2j, T29, T1T, T2f, T1i, T1H, T1G, T1K, T1z, T1N, T1Q, T2c,
            T1I, T1b, Tu;
        SIMD_FLOAT T2g, T2l, T1U, T2b, T1j, T1B, T1J, T1L, T1k, T1M, T2m, T22;
        {
            SIMD_FLOAT T1W, TV, T12, T1Z, TL, T5, Ta, Tl, T1V, TS, T1S, T1h,
                T1m, T1Y, TZ;
            SIMD_FLOAT To, T1o, T1P, T1a, TK, T1t, T1l, TD, Tc, Td, Te, Tg, Th,
                T1p, Tr;
            SIMD_FLOAT Tb, TM, T1s;
            {
                SIMD_FLOAT TT, TU, T1, T2, T3, T10, T11, T6, T7, T8, Tv, TR, TY,
                    TB, T1g;
                SIMD_FLOAT TH, TI, TE, TQ, TF, Ty, T1f, TX, Tz, TA, Tw, T4, Tx,
                    T9, Tp;
                SIMD_FLOAT Tq, T19, TJ, T18, TG, TC, Tm, Tn;
                TT  = Ci[WS(cs, 6)];
                TU  = Ci[WS(cs, 12)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                T10 = Ci[WS(cs, 9)];
                T11 = Ci[WS(cs, 3)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tv  = Ci[WS(cs, 10)];
                Tz  = Ci[WS(cs, 8)];
                TA  = Ci[WS(cs, 2)];
                T1W = SIMD_FMSUB(KP618033988, TT, TU);
                TV  = SIMD_FMADD(KP618033988, TU, TT);
                Tw  = Ci[WS(cs, 4)];
                T4  = T2 + T3;
                TR  = T2 - T3;
                T12 = SIMD_FMADD(KP618033988, T11, T10);
                T1Z = SIMD_FNMADD(KP618033988, T10, T11);
                Tx  = Ci[WS(cs, 14)];
                TY  = T7 - T8;
                T9  = T7 + T8;
                TL  = Ci[WS(cs, 5)];
                TB  = Tz + TA;
                T1g = TA - Tz;
                TH  = Ci[WS(cs, 7)];
                TI  = Ci[WS(cs, 13)];
                TE  = Ci[WS(cs, 1)];
                TQ  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TF  = Ci[WS(cs, 11)];
                Ty  = Tw - Tx;
                T1f = Tw + Tx;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TX  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T19 = TH - TI;
                TJ  = TH + TI;
                T1V = SIMD_FNMADD(KP1_118033988, TR, TQ);
                TS  = SIMD_FMADD(KP1_118033988, TR, TQ);
                T18 = TE + TF;
                TG  = TE - TF;
                T1S = SIMD_FMADD(KP618033988, T1f, T1g);
                T1h = SIMD_FNMADD(KP618033988, T1g, T1f);
                TC  = Ty - TB;
                T1m = Ty + TB;
                T1Y = SIMD_FNMADD(KP1_118033988, TY, TX);
                TZ  = SIMD_FMADD(KP1_118033988, TY, TX);
                To  = Tm + Tn;
                T1o = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1P = SIMD_FNMADD(KP618033988, T18, T19);
                T1a = SIMD_FMADD(KP618033988, T19, T18);
                TK  = TG + TJ;
                T1t = TG - TJ;
                T1l = SIMD_FNMADD(KP250000000, TC, Tv);
                TD  = Tv + TC;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1p = Tp - Tq;
                Tr  = Tp + Tq;
            }
            Tb  = T5 - Ta;
            TM  = TK - TL;
            T1s = SIMD_FMADD(KP250000000, TK, TL);
            {
                SIMD_FLOAT T1n, T1q, Ts, T1d, TP, T1u, T26, T27, T1x, Tj, T16,
                    T2h, T1c, T23, Tf;
                SIMD_FLOAT T1v, Ti, T1w, T24, T1X, T20, T17, T1O, Tt, TO, T1E,
                    TW, T13, T1F, T2i;
                SIMD_FLOAT T15, Tk, T1e, T1R;
                T23            = SIMD_FNMADD(KP559016994, T1m, T1l);
                T1n            = SIMD_FMADD(KP559016994, T1m, T1l);
                T2d            = SIMD_FMADD(KP1_902113032, T1W, T1V);
                T1X            = SIMD_FNMADD(KP1_902113032, T1W, T1V);
                T20            = SIMD_FNMADD(KP1_902113032, T1Z, T1Y);
                T2e            = SIMD_FMADD(KP1_902113032, T1Z, T1Y);
                Tf             = Td + Te;
                T1v            = Td - Te;
                Ti             = Tg + Th;
                T1w            = Tg - Th;
                T1q            = SIMD_FMADD(KP618033988, T1p, T1o);
                T24            = SIMD_FNMADD(KP618033988, T1o, T1p);
                Ts             = To + Tr;
                T1d            = To - Tr;
                TN             = TD - TM;
                TP             = TD + TM;
                T1u            = SIMD_FNMADD(KP559016994, T1t, T1s);
                T26            = SIMD_FMADD(KP559016994, T1t, T1s);
                T21            = T1X - T20;
                T2a            = T1X + T20;
                T27            = SIMD_FNMADD(KP618033988, T1v, T1w);
                T1x            = SIMD_FMADD(KP618033988, T1w, T1v);
                Tj             = Tf + Ti;
                T16            = Tf - Ti;
                T25            = SIMD_FNMADD(KP951056516, T24, T23);
                T2h            = SIMD_FMADD(KP951056516, T24, T23);
                T1c            = SIMD_FNMADD(KP250000000, Ts, Tl);
                T1E            = SIMD_FNMADD(KP1_902113032, TV, TS);
                TW             = SIMD_FMADD(KP1_902113032, TV, TS);
                T13            = SIMD_FNMADD(KP1_902113032, T12, TZ);
                T1F            = SIMD_FMADD(KP1_902113032, T12, TZ);
                T2i            = SIMD_FNMADD(KP951056516, T27, T26);
                T28            = SIMD_FMADD(KP951056516, T27, T26);
                T15            = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk             = Tc + Tj;
                T1e            = SIMD_FMADD(KP559016994, T1d, T1c);
                T1R            = SIMD_FNMADD(KP559016994, T1d, T1c);
                T2k            = T2d + T2e;
                T1C            = SIMD_FMADD(KP951056516, T1q, T1n);
                T1r            = SIMD_FNMADD(KP951056516, T1q, T1n);
                T1D            = SIMD_FNMADD(KP951056516, T1x, T1u);
                T1y            = SIMD_FMADD(KP951056516, T1x, T1u);
                T1A            = TW + T13;
                T14            = TW - T13;
                T2n            = T2h - T2i;
                T2j            = T2h + T2i;
                T29            = T25 + T28;
                T17            = SIMD_FMADD(KP559016994, T16, T15);
                T1O            = SIMD_FNMADD(KP559016994, T16, T15);
                Tt             = Tk - (Tl + Ts);
                TO             = T5 + Ta - (Tl + Ts) - Tk;
                T1T            = SIMD_FMADD(KP951056516, T1S, T1R);
                T2f            = SIMD_FNMADD(KP951056516, T1S, T1R);
                T1i            = SIMD_FNMADD(KP951056516, T1h, T1e);
                T1H            = SIMD_FMADD(KP951056516, T1h, T1e);
                T1G            = T1E - T1F;
                T1K            = T1E + T1F;
                T1z            = T1r + T1y;
                T1N            = T1C - T1D;
                T1Q            = SIMD_FMADD(KP951056516, T1P, T1O);
                T2c            = SIMD_FNMADD(KP951056516, T1P, T1O);
                T1I            = SIMD_FNMADD(KP951056516, T1a, T17);
                T1b            = SIMD_FMADD(KP951056516, T1a, T17);
                R0[WS(rs, 10)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                Tu             = Tb + Tt;
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_732050807, TP, TO);
                R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, TP, TO);
            }
        }
        T2g            = T2c + T2d - T2e - T2f;
        T2l            = T2f + T2c;
        T1U            = T1Q - T1T;
        T2b            = T1T + T1Q;
        T1j            = T1b - T1i;
        T1B            = T1i + T1b;
        T1J            = T1H - T1I;
        T1L            = T1H + T1I;
        R0[0]          = SIMD_FMADD(KP1_732050807, TN, Tu);
        R0[WS(rs, 20)] = SIMD_FNMADD(KP1_732050807, TN, Tu);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T2j, T2g);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_732050807, T2j, T2g);
        T2m            = T2k - T2l;
        R0[WS(rs, 13)] = SIMD_FMADD(KP2_000000000, T2l, T2k);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T28 - T25, T2a) - T2b;
        R0[WS(rs, 7)]  = SIMD_FMADD(KP2_000000000, T2b, T2a);
        T22            = T1U + T21;
        R0[WS(rs, 22)] = SIMD_FNMADD(KP2_000000000, T1U, T21);
        R0[WS(rs, 9)]  = SIMD_FMADD(KP1_732050807, T1r, T1A) -
                        (SIMD_FMADD(KP1_732050807, T1y, T1B));
        R0[WS(rs, 19)] = SIMD_FMADD(KP2_000000000, T1B, T1A);
        T1k            = T1j + T14;
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP2_000000000, T1j, T14);
        T1M            = T1K - T1L;
        R0[WS(rs, 1)]  = SIMD_FMADD(KP2_000000000, T1L, T1K);
        R0[WS(rs, 6)]  = SIMD_FMADD(KP1_732050807, T1C + T1D, T1G) - T1J;
        R0[WS(rs, 16)] = SIMD_FMADD(KP2_000000000, T1J, T1G);
        R0[WS(rs, 23)] = SIMD_FNMADD(KP1_732050807, T2n, T2m);
        R0[WS(rs, 3)]  = SIMD_FMADD(KP1_732050807, T2n, T2m);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T29, T22);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T29, T22);
        R0[WS(rs, 24)] = SIMD_FMADD(KP1_732050807, T1z, T1k);
        R0[WS(rs, 14)] = SIMD_FNMADD(KP1_732050807, T1z, T1k);
        R0[WS(rs, 21)] = SIMD_FMADD(KP1_732050807, T1N, T1M);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_732050807, T1N, T1M);
    }
}

template <>
struct r2cb_traits<30, 6>
{
    static constexpr long_t flops           = 233;
    static constexpr long_t operations      = 153;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 124;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 6 -name
 * r2cb -standalone */

/*
 * This function contains 153 FP additions, 80 FP multiplications,
 * (or, 73 additions, 0 multiplications, 80 fused multiply/add),
 * 124 stack variables, 9 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 6>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1i, T1l, T1A, T1w, T22, T18, T1m, T19, T1V, T2d, T2i, T2g,
            T2j, T16, TI;
        SIMD_FLOAT T27, T29, T23, T1y, T1s, T1c, T14, T1x, T1p, TT, T1b, T2h,
            T2l, T1e, T1a;
        SIMD_FLOAT T28, T1t, T1B, T1z, T1f, T1d, T17, T15, T2a, T24, T1O, T2k;
        {
            SIMD_FLOAT T1h, Tz, TG, T1k, T5, Ta, Tc, T1g, Tw, T1Q, T1o, TS, T1j,
                TD, Tf;
            SIMD_FLOAT T20, T1X, T1r, T13, T1P, T1H, Tl, Tm, Tn, Tp, Tq, T1Z,
                Ti, T1W, T1M;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 6)];
            Ty = Ci[WS(cs, 12)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 9)];
            TF = Ci[WS(cs, 3)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1G, Tv, TC, T1L, TR, T1E, T10, T11, TX, Tu, TY, TO,
                    T1D, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tg, Th, T1K, T1J, T12, T1I, TZ,
                    T1F, Td, Te;
                T1G = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 2)];
                TQ  = Ci[WS(cs, 8)];
                T1h = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 14)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1k = SIMD_FNMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 4)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1L = Ci[WS(cs, 5)];
                TR  = TP - TQ;
                T1E = TP + TQ;
                T10 = Ci[WS(cs, 7)];
                T11 = Ci[WS(cs, 13)];
                TX  = Ci[WS(cs, 1)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 11)];
                TO  = TM + TN;
                T1D = TN - TM;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                T1J = T10 + T11;
                T12 = T10 - T11;
                T1g = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1I = TX - TY;
                TZ  = TX + TY;
                T1F = T1D - T1E;
                T1Q = T1D + T1E;
                T1o = SIMD_FMADD(KP618033988, TO, TR);
                TS  = SIMD_FNMADD(KP618033988, TR, TO);
                T1j = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                Tf  = Td + Te;
                T20 = Td - Te;
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1K = T1I + T1J;
                T1X = T1I - T1J;
                T1r = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                T1P = SIMD_FNMADD(KP250000000, T1F, T1G);
                T1H = T1F + T1G;
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1Z = Tg - Th;
                Ti  = Tg + Th;
                T1W = SIMD_FMADD(KP250000000, T1K, T1L);
                T1M = T1K - T1L;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T1R, T2b, T21, T2f, Tj, TV, T2e, T1Y, T1N, T1U, T2c,
                    Ts, TK, T1u, T1v;
                SIMD_FLOAT To, T1T, Tr, T1S, TW, TL, T1n, Tk, TU, T26, TA, TH,
                    T25, TJ, T1C;
                SIMD_FLOAT Tt, T1q;
                T1R            = SIMD_FNMADD(KP559016994, T1Q, T1P);
                T2b            = SIMD_FMADD(KP559016994, T1Q, T1P);
                T1i            = SIMD_FMADD(KP1_902113032, T1h, T1g);
                T1u            = SIMD_FNMADD(KP1_902113032, T1h, T1g);
                T1v            = SIMD_FNMADD(KP1_902113032, T1k, T1j);
                T1l            = SIMD_FMADD(KP1_902113032, T1k, T1j);
                To             = Tm + Tn;
                T1T            = Tm - Tn;
                Tr             = Tp + Tq;
                T1S            = Tp - Tq;
                T21            = SIMD_FNMADD(KP618033988, T20, T1Z);
                T2f            = SIMD_FMADD(KP618033988, T1Z, T20);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T2e            = SIMD_FNMADD(KP559016994, T1X, T1W);
                T1Y            = SIMD_FMADD(KP559016994, T1X, T1W);
                T1N            = T1H + T1M;
                T1A            = T1u - T1v;
                T1w            = T1u + T1v;
                T1U            = SIMD_FNMADD(KP618033988, T1T, T1S);
                T2c            = SIMD_FMADD(KP618033988, T1S, T1T);
                Ts             = To + Tr;
                TK             = To - Tr;
                Tk             = Tc + Tj;
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                T26            = SIMD_FNMADD(KP951056516, T21, T1Y);
                T22            = SIMD_FMADD(KP951056516, T21, T1Y);
                T18            = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                T1m            = T1i + T1l;
                T19            = SIMD_FNMADD(KP1_902113032, TG, TD);
                TH             = SIMD_FMADD(KP1_902113032, TG, TD);
                T25            = SIMD_FMADD(KP951056516, T1U, T1R);
                T1V            = SIMD_FNMADD(KP951056516, T1U, T1R);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T2d            = SIMD_FMADD(KP951056516, T2c, T2b);
                T2i            = SIMD_FNMADD(KP951056516, T2c, T2b);
                T1C            = T5 + Ta - (Tl + Ts) - Tk;
                Tt             = Tk - (Tl + Ts);
                TW             = SIMD_FMADD(KP559016994, TV, TU);
                T1q            = SIMD_FNMADD(KP559016994, TV, TU);
                T2g            = SIMD_FNMADD(KP951056516, T2f, T2e);
                T2j            = SIMD_FMADD(KP951056516, T2f, T2e);
                T16            = TA - TH;
                TI             = TA + TH;
                T27            = T25 - T26;
                T29            = T25 + T26;
                T23            = T1V + T22;
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                T1n            = SIMD_FNMADD(KP559016994, TK, TJ);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T1N, T1C);
                R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T1N, T1C);
                R0[WS(rs, 19)] = Tb + SIMD_FMADD(KP1_732050807, T1M - T1H, Tt);
                R0[WS(rs, 9)]  = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1y            = SIMD_FMADD(KP951056516, T1r, T1q);
                T1s            = SIMD_FNMADD(KP951056516, T1r, T1q);
                T1c            = SIMD_FMADD(KP951056516, T13, TW);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                T1x            = SIMD_FMADD(KP951056516, T1o, T1n);
                T1p            = SIMD_FNMADD(KP951056516, T1o, T1n);
                TT             = SIMD_FMADD(KP951056516, TS, TL);
                T1b            = SIMD_FNMADD(KP951056516, TS, TL);
                T2h            = T2d - T2g;
                T2l            = T2i + T2j;
            }
        }
        T1e            = T18 - T19;
        T1a            = T18 + T19;
        T28            = T1i + T1s - T1p - T1l;
        T1t            = T1p + T1s;
        T1B            = T1y - T1x;
        T1z            = T1x + T1y;
        T1f            = T1c - T1b;
        T1d            = T1b + T1c;
        T17            = T14 - TT;
        T15            = TT + T14;
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T29, T28);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, T29, T28);
        T24            = T1m - T1t;
        R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T1t, T1m);
        T1O            = T1A + T1B;
        R0[WS(rs, 21)] = SIMD_FNMADD(KP2_000000000, T1B, T1A);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T22 - T1V, T1w) - T1z;
        R0[WS(rs, 6)]  = SIMD_FMADD(KP2_000000000, T1z, T1w);
        T2k            = T1e + T1f;
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, T1f, T1e);
        R0[WS(rs, 8)]  = SIMD_FMADD(KP1_732050807, T2i - T2j, T1a) - T1d;
        R0[WS(rs, 18)] = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 5)]  = T16 + SIMD_FMADD(KP1_732050807, T2d + T2g, T17);
        R0[WS(rs, 15)] = SIMD_FNMADD(KP2_000000000, T17, T16);
        T2a            = TI - T15;
        R0[0]          = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 2)]  = SIMD_FMADD(KP1_732050807, T27, T24);
        R0[WS(rs, 22)] = SIMD_FNMADD(KP1_732050807, T27, T24);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T23, T1O);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T23, T1O);
        R0[WS(rs, 23)] = SIMD_FMADD(KP1_732050807, T2l, T2k);
        R0[WS(rs, 13)] = SIMD_FNMADD(KP1_732050807, T2l, T2k);
        R0[WS(rs, 20)] = SIMD_FMADD(KP1_732050807, T2h, T2a);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_732050807, T2h, T2a);
    }
}

template <>
struct r2cb_traits<30, 7>
{
    static constexpr long_t flops           = 233;
    static constexpr long_t operations      = 153;
    static constexpr long_t memory_accesses = 53;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 7 -name
 * r2cb -standalone */

/*
 * This function contains 153 FP additions, 80 FP multiplications,
 * (or, 73 additions, 0 multiplications, 80 fused multiply/add),
 * 121 stack variables, 9 constants, and 53 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 7>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1s, T1k, T2g, T2d, TA, T1w, T2a, T2f, TH, T1S, T1Z, T2i,
            T2e, T1c, T18;
        SIMD_FLOAT T1q, T14, T1a, T1n, TT, T19, T26, T24, T20, T27, T1y, T1r,
            T1t, T1b, T1d;
        SIMD_FLOAT TI, T25, T15, T1L, T21, T2h;
        {
            SIMD_FLOAT T1f, Tz, TG, T1i, T5, Ta, Tc, T1e, Tw, T1N, T1m, TS, T1h,
                TD, Tf;
            SIMD_FLOAT T1X, T1U, T1p, T13, T1M, T1E, Tl, Tm, Tn, Tp, Tq, T1W,
                Ti, T1T, T1J;
            SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 12)];
            Ty = Ci[WS(cs, 6)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 3)];
            TF = Ci[WS(cs, 9)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1D, Tv, TC, T1I, TR, T1A, T10, T11, TX, Tu, TY, TO,
                    T1B, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tg, Th, T1H, T1G, T12, T1F, TZ,
                    T1C, Td, Te;
                T1D = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                T1f = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 2)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1i = SIMD_FMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 8)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1I = Ci[WS(cs, 5)];
                TR  = TP + TQ;
                T1A = TQ - TP;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 7)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 13)];
                TO  = TM - TN;
                T1B = TM + TN;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                T1G = T10 - T11;
                T12 = T10 + T11;
                T1e = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1F = TX + TY;
                TZ  = TX - TY;
                T1C = T1A - T1B;
                T1N = T1A + T1B;
                T1m = SIMD_FNMADD(KP618033988, TO, TR);
                TS  = SIMD_FMADD(KP618033988, TR, TO);
                T1h = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                Tf  = Td + Te;
                T1X = Td - Te;
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1H = T1F + T1G;
                T1U = T1G - T1F;
                T1p = SIMD_FMADD(KP618033988, TZ, T12);
                T13 = SIMD_FNMADD(KP618033988, T12, TZ);
                T1M = SIMD_FNMADD(KP250000000, T1C, T1D);
                T1E = T1C + T1D;
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1W = Tg - Th;
                Ti  = Tg + Th;
                T1T = SIMD_FMADD(KP250000000, T1H, T1I);
                T1J = T1H - T1I;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T28, T1O, T1u, T1v, T1Y, T2c, Tj, TV, T1V, T2b, T1K,
                    T1R, T29, Ts, TK;
                SIMD_FLOAT T1g, T1j, To, T1Q, Tr, T1P, T22, T23, T1l, T1x, Tk,
                    TU, T1z, Tt, TW;
                SIMD_FLOAT T1o, TL, T16, T17, TJ;
                T28            = SIMD_FMADD(KP559016994, T1N, T1M);
                T1O            = SIMD_FNMADD(KP559016994, T1N, T1M);
                T1u            = SIMD_FNMADD(KP1_902113032, T1f, T1e);
                T1g            = SIMD_FMADD(KP1_902113032, T1f, T1e);
                T1j            = SIMD_FNMADD(KP1_902113032, T1i, T1h);
                T1v            = SIMD_FMADD(KP1_902113032, T1i, T1h);
                To             = Tm + Tn;
                T1Q            = Tm - Tn;
                Tr             = Tp + Tq;
                T1P            = Tp - Tq;
                T1Y            = SIMD_FNMADD(KP618033988, T1X, T1W);
                T2c            = SIMD_FMADD(KP618033988, T1W, T1X);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                T2b            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1K            = T1E + T1J;
                T1s            = T1g - T1j;
                T1k            = T1g + T1j;
                T1R            = SIMD_FNMADD(KP618033988, T1Q, T1P);
                T29            = SIMD_FMADD(KP618033988, T1P, T1Q);
                Ts             = To + Tr;
                TK             = To - Tr;
                Tk             = Tc + Tj;
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                T2g            = SIMD_FMADD(KP951056516, T2c, T2b);
                T2d            = SIMD_FNMADD(KP951056516, T2c, T2b);
                TA             = SIMD_FMADD(KP1_902113032, Tz, Tw);
                T16            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                T1w            = T1u - T1v;
                T2a            = SIMD_FMADD(KP951056516, T29, T28);
                T2f            = SIMD_FNMADD(KP951056516, T29, T28);
                TH             = SIMD_FMADD(KP1_902113032, TG, TD);
                T17            = SIMD_FNMADD(KP1_902113032, TG, TD);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T1S            = SIMD_FNMADD(KP951056516, T1R, T1O);
                T22            = SIMD_FMADD(KP951056516, T1R, T1O);
                T1z            = T5 + Ta - (Tl + Ts) - Tk;
                Tt             = Tk - (Tl + Ts);
                TW             = SIMD_FNMADD(KP559016994, TV, TU);
                T1o            = SIMD_FMADD(KP559016994, TV, TU);
                T1Z            = SIMD_FMADD(KP951056516, T1Y, T1V);
                T23            = SIMD_FNMADD(KP951056516, T1Y, T1V);
                T2i            = T2f + T2g;
                T2e            = T2a - T2d;
                T1c            = T16 - T17;
                T18            = T16 + T17;
                T1l            = SIMD_FMADD(KP559016994, TK, TJ);
                TL             = SIMD_FNMADD(KP559016994, TK, TJ);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T1K, T1z);
                R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T1K, T1z);
                R0[WS(rs, 18)] = Tb + SIMD_FMADD(KP1_732050807, T1J - T1E, Tt);
                R0[WS(rs, 8)]  = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1q            = SIMD_FMADD(KP951056516, T1p, T1o);
                T1x            = SIMD_FNMADD(KP951056516, T1p, T1o);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                T1a            = SIMD_FMADD(KP951056516, T13, TW);
                T1n            = SIMD_FNMADD(KP951056516, T1m, T1l);
                TT             = SIMD_FNMADD(KP951056516, TS, TL);
                T19            = SIMD_FMADD(KP951056516, TS, TL);
                T26            = T22 + T23;
                T24            = T22 - T23;
                T20            = T1S + T1Z;
                T27 = T1u + T1v - T1x - (SIMD_FMADD(KP951056516, T1m, T1l));
                T1y = T1x - (SIMD_FMADD(KP951056516, T1m, T1l));
            }
        }
        T1r            = T1n + T1q;
        T1t            = T1q - T1n;
        T1b            = T19 + T1a;
        T1d            = T1a - T19;
        TI             = TA + TH;
        T25            = TA + T14 - TT - TH;
        T15            = TT + T14;
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T2e, T27);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_732050807, T2e, T27);
        R0[WS(rs, 4)]  = T1w + SIMD_FMADD(KP1_732050807, T2a + T2d, T1y);
        R0[WS(rs, 14)] = SIMD_FNMADD(KP2_000000000, T1y, T1w);
        T2h            = T1s + T1t;
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP2_000000000, T1t, T1s);
        R0[WS(rs, 7)]  = SIMD_FMADD(KP1_732050807, T2f - T2g, T1k) - T1r;
        R0[WS(rs, 17)] = SIMD_FMADD(KP2_000000000, T1r, T1k);
        T1L            = T1c + T1d;
        R0[WS(rs, 20)] = SIMD_FNMADD(KP2_000000000, T1d, T1c);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T1Z - T1S, T18) - T1b;
        R0[WS(rs, 5)]  = SIMD_FMADD(KP2_000000000, T1b, T18);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T26, T25);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, T26, T25);
        T21            = TI - T15;
        R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 22)] = SIMD_FMADD(KP1_732050807, T2i, T2h);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP1_732050807, T2i, T2h);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T20, T1L);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T20, T1L);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, T24, T21);
        R0[WS(rs, 21)] = SIMD_FNMADD(KP1_732050807, T24, T21);
    }
}

template <>
struct r2cb_traits<30, 8>
{
    static constexpr long_t flops           = 231;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 119;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 8 -name
 * r2cb -standalone */

/*
 * This function contains 152 FP additions, 79 FP multiplications,
 * (or, 73 additions, 0 multiplications, 79 fused multiply/add),
 * 119 stack variables, 9 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 8>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1m, T1u, T1v, T1s, T1k, T2e, T2b, T18, T1w, T28, T2d, T19,
            T23, T24, T2g;
        SIMD_FLOAT T2c, T16, TI, T1l, T1q, T1x, T1c, T14, T1n, T1b, TT, T22,
            T20, T25, T1y;
        SIMD_FLOAT T1t, T1r, T17, T15, T1a, T21, T1d, T1L, T2f;
        {
            SIMD_FLOAT T1f, Tz, TG, T1i, T5, Ta, Tc, T1e, Tw, T1N, TS, T1h, TD,
                Tf, T1X;
            SIMD_FLOAT T1U, T1p, T13, T1M, T1E, Tl, Tm, Tn, Tp, Tq, T1W, Ti,
                T1T, T1J, Tx;
            SIMD_FLOAT Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tb;
            Tx = Ci[WS(cs, 12)];
            Ty = Ci[WS(cs, 6)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 3)];
            TF = Ci[WS(cs, 9)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1D, Tv, TC, T1I, TR, T1A, T10, T11, TX, Tu, TY, TO,
                    T1B, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tg, Th, T1H, T1G, T12, T1F, TZ,
                    T1C, Td, Te;
                T1D = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                T1f = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 2)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1i = SIMD_FMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 8)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1I = Ci[WS(cs, 5)];
                TR  = TP + TQ;
                T1A = TQ - TP;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 13)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 7)];
                TO  = TM - TN;
                T1B = TM + TN;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                T1G = T10 - T11;
                T12 = T10 + T11;
                T1e = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1F = TX + TY;
                TZ  = TX - TY;
                T1C = T1A - T1B;
                T1N = T1A + T1B;
                T1m = SIMD_FNMADD(KP618033988, TO, TR);
                TS  = SIMD_FMADD(KP618033988, TR, TO);
                T1h = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                Tf  = Td + Te;
                T1X = Td - Te;
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1H = T1F + T1G;
                T1U = T1G - T1F;
                T1p = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                T1M = SIMD_FNMADD(KP250000000, T1C, T1D);
                T1E = T1C + T1D;
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1W = Tg - Th;
                Ti  = Tg + Th;
                T1T = SIMD_FMADD(KP250000000, T1H, T1I);
                T1J = T1H - T1I;
            }
            Tb = T5 - Ta;
            {
                SIMD_FLOAT T26, T1O, T1Y, T2a, Tj, TV, T1V, T29, T1K, T1R, T27,
                    Ts, TK, T1g, T1j;
                SIMD_FLOAT To, T1Q, Tr, T1P, T1S, T1Z, Tk, TU, T1z, Tt, TW, T1o,
                    TL, TA, TH;
                SIMD_FLOAT TJ;
                T26            = SIMD_FMADD(KP559016994, T1N, T1M);
                T1O            = SIMD_FNMADD(KP559016994, T1N, T1M);
                T1u            = SIMD_FNMADD(KP1_902113032, T1f, T1e);
                T1g            = SIMD_FMADD(KP1_902113032, T1f, T1e);
                T1j            = SIMD_FNMADD(KP1_902113032, T1i, T1h);
                T1v            = SIMD_FMADD(KP1_902113032, T1i, T1h);
                To             = Tm + Tn;
                T1Q            = Tm - Tn;
                Tr             = Tp + Tq;
                T1P            = Tp - Tq;
                T1Y            = SIMD_FNMADD(KP618033988, T1X, T1W);
                T2a            = SIMD_FMADD(KP618033988, T1W, T1X);
                Tj             = Tf + Ti;
                TV             = Tf - Ti;
                T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                T29            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1K            = T1E + T1J;
                T1s            = T1g - T1j;
                T1k            = T1g + T1j;
                T1R            = SIMD_FNMADD(KP618033988, T1Q, T1P);
                T27            = SIMD_FMADD(KP618033988, T1P, T1Q);
                Ts             = To + Tr;
                TK             = To - Tr;
                Tk             = Tc + Tj;
                TU             = SIMD_FNMADD(KP250000000, Tj, Tc);
                T2e            = SIMD_FMADD(KP951056516, T2a, T29);
                T2b            = SIMD_FNMADD(KP951056516, T2a, T29);
                T18            = SIMD_FMADD(KP1_902113032, Tz, Tw);
                TA             = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                T1w            = T1u - T1v;
                T28            = SIMD_FMADD(KP951056516, T27, T26);
                T2d            = SIMD_FNMADD(KP951056516, T27, T26);
                T19            = SIMD_FMADD(KP1_902113032, TG, TD);
                TH             = SIMD_FNMADD(KP1_902113032, TG, TD);
                TJ             = SIMD_FNMADD(KP250000000, Ts, Tl);
                T1S            = SIMD_FMADD(KP951056516, T1R, T1O);
                T23            = SIMD_FNMADD(KP951056516, T1R, T1O);
                T1z            = T5 + Ta - (Tl + Ts) - Tk;
                Tt             = Tk - (Tl + Ts);
                TW             = SIMD_FNMADD(KP559016994, TV, TU);
                T1o            = SIMD_FMADD(KP559016994, TV, TU);
                T1Z            = SIMD_FNMADD(KP951056516, T1Y, T1V);
                T24            = SIMD_FMADD(KP951056516, T1Y, T1V);
                T2g            = T2d + T2e;
                T2c            = T28 - T2b;
                T16            = TA - TH;
                TI             = TA + TH;
                T1l            = SIMD_FMADD(KP559016994, TK, TJ);
                TL             = SIMD_FNMADD(KP559016994, TK, TJ);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T1K, T1z);
                R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T1K, T1z);
                R0[WS(rs, 17)] = Tb + SIMD_FMADD(KP1_732050807, T1J - T1E, Tt);
                R0[WS(rs, 7)]  = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1q            = SIMD_FMADD(KP951056516, T1p, T1o);
                T1x            = SIMD_FNMADD(KP951056516, T1p, T1o);
                T1c            = SIMD_FMADD(KP951056516, T13, TW);
                T14            = SIMD_FNMADD(KP951056516, T13, TW);
                T1n            = SIMD_FNMADD(KP951056516, T1m, T1l);
                T1b            = SIMD_FNMADD(KP951056516, TS, TL);
                TT             = SIMD_FMADD(KP951056516, TS, TL);
                T22            = T1S + T1Z;
                T20            = T1S - T1Z;
            }
        }
        T25            = T1u + T1v - T1x - (SIMD_FMADD(KP951056516, T1m, T1l));
        T1y            = T1x - (SIMD_FMADD(KP951056516, T1m, T1l));
        T1t            = T1q - T1n;
        T1r            = T1n + T1q;
        T17            = T14 - TT;
        T15            = TT + T14;
        T1a            = T18 + T19;
        T21            = T18 + T1c - T1b - T19;
        T1d            = T1b + T1c;
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T2c, T25);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_732050807, T2c, T25);
        R0[WS(rs, 3)]  = T1w + SIMD_FMADD(KP1_732050807, T28 + T2b, T1y);
        R0[WS(rs, 13)] = SIMD_FNMADD(KP2_000000000, T1y, T1w);
        T2f            = T1s + T1t;
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP2_000000000, T1t, T1s);
        R0[WS(rs, 6)]  = SIMD_FMADD(KP1_732050807, T2d - T2e, T1k) - T1r;
        R0[WS(rs, 16)] = SIMD_FMADD(KP2_000000000, T1r, T1k);
        R0[WS(rs, 9)]  = T16 + SIMD_FMADD(KP1_732050807, T23 + T24, T17);
        R0[WS(rs, 19)] = SIMD_FNMADD(KP2_000000000, T17, T16);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T24 - T23, TI) - T15;
        R0[WS(rs, 4)]  = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T22, T21);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_732050807, T22, T21);
        T1L            = T1a - T1d;
        R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 21)] = SIMD_FMADD(KP1_732050807, T2g, T2f);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP1_732050807, T2g, T2f);
        R0[0]          = SIMD_FMADD(KP1_732050807, T20, T1L);
        R0[WS(rs, 20)] = SIMD_FNMADD(KP1_732050807, T20, T1L);
    }
}

template <>
struct r2cb_traits<30, 9>
{
    static constexpr long_t flops           = 229;
    static constexpr long_t operations      = 151;
    static constexpr long_t memory_accesses = 51;
    static constexpr long_t stack_vars      = 147;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 9 -name
 * r2cb -standalone */

/*
 * This function contains 151 FP additions, 78 FP multiplications,
 * (or, 73 additions, 0 multiplications, 78 fused multiply/add),
 * 147 stack variables, 9 constants, and 51 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 9>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1l, TS, T13, T1J, T1E, Tb, TA, TH, T1K, T1b, T17, T1S, T21,
            T1t, T1f;
        SIMD_FLOAT T1i, T1u, TI, T22, T1Z, T2e, T2b, TW, T2d, T28, T1v, T24,
            T20, T1z, Tt;
        SIMD_FLOAT T1k, TL, T1x, T1p, T19, T2c, T1r, T1j, T1w, T1m, TT, T18,
            T25, T1y, T1s;
        SIMD_FLOAT T1q, T1L, T14, T1c, T1a, T23;
        {
            SIMD_FLOAT T1e, Tz, TG, T1h, T5, Ta, Tl, T1d, Tw, T1U, T1g, TD, To,
                T1P, T1N;
            SIMD_FLOAT T1o, T1T, Tc, Td, Te, Tg, Th, T1Q, Tr, T1M, Tx, Ty, T1,
                T2, T3;
            SIMD_FLOAT TE, TF, T6, T7, T8, T1V, T29, T1R, T27, Ts, TV, T26, T1O,
                T1Y, T2a;
            SIMD_FLOAT Tj, TK, T15, T16, Tf, T1W, Ti, T1X, TU, Tk, TJ, T1n;
            Tx = Ci[WS(cs, 6)];
            Ty = Ci[WS(cs, 12)];
            T1 = Cr[0];
            T2 = Cr[WS(cs, 6)];
            T3 = Cr[WS(cs, 12)];
            TE = Ci[WS(cs, 9)];
            TF = Ci[WS(cs, 3)];
            T6 = Cr[WS(cs, 15)];
            T7 = Cr[WS(cs, 9)];
            T8 = Cr[WS(cs, 3)];
            {
                SIMD_FLOAT T1I, Tv, TC, T1D, TR, T1G, T10, T11, TX, Tu, TY, TO,
                    T1F, TB, TP;
                SIMD_FLOAT TQ, TM, T4, TN, T9, Tp, Tq, T1C, T1B, T12, T1A, TZ,
                    T1H, Tm, Tn;
                T1I = Ci[WS(cs, 5)];
                TP  = Ci[WS(cs, 13)];
                TQ  = Ci[WS(cs, 7)];
                T1e = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                TM  = Ci[WS(cs, 1)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1h = SIMD_FNMADD(KP618033988, TE, TF);
                TN  = Ci[WS(cs, 11)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1D = Ci[WS(cs, 10)];
                TR  = TP - TQ;
                T1G = TP + TQ;
                T10 = Ci[WS(cs, 2)];
                T11 = Ci[WS(cs, 8)];
                TX  = Ci[WS(cs, 14)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 4)];
                TO  = TM + TN;
                T1F = TM - TN;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1B = T10 + T11;
                T12 = T10 - T11;
                T1d = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1A = TY - TX;
                TZ  = TX + TY;
                T1H = T1F + T1G;
                T1U = T1F - T1G;
                T1l = SIMD_FMADD(KP618033988, TO, TR);
                TS  = SIMD_FNMADD(KP618033988, TR, TO);
                T1g = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                To  = Tm + Tn;
                T1P = Tm - Tn;
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1C = T1A - T1B;
                T1N = T1A + T1B;
                T1o = SIMD_FMADD(KP618033988, TZ, T12);
                T13 = SIMD_FNMADD(KP618033988, T12, TZ);
                T1T = SIMD_FMADD(KP250000000, T1H, T1I);
                T1J = T1H - T1I;
                Tc  = Cr[WS(cs, 5)];
                Td  = Cr[WS(cs, 1)];
                Te  = Cr[WS(cs, 11)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1Q = Tp - Tq;
                Tr  = Tp + Tq;
                T1M = SIMD_FNMADD(KP250000000, T1C, T1D);
                T1E = T1C + T1D;
            }
            Tb  = T5 - Ta;
            T1V = SIMD_FNMADD(KP559016994, T1U, T1T);
            T29 = SIMD_FMADD(KP559016994, T1U, T1T);
            TA  = SIMD_FNMADD(KP1_902113032, Tz, Tw);
            T15 = SIMD_FMADD(KP1_902113032, Tz, Tw);
            T16 = SIMD_FNMADD(KP1_902113032, TG, TD);
            TH  = SIMD_FMADD(KP1_902113032, TG, TD);
            Tf  = Td + Te;
            T1W = Td - Te;
            Ti  = Tg + Th;
            T1X = Tg - Th;
            T1R = SIMD_FMADD(KP618033988, T1Q, T1P);
            T27 = SIMD_FNMADD(KP618033988, T1P, T1Q);
            Ts  = To + Tr;
            TV  = To - Tr;
            T26 = SIMD_FNMADD(KP559016994, T1N, T1M);
            T1O = SIMD_FMADD(KP559016994, T1N, T1M);
            T1K = T1E + T1J;
            T1b = T15 + T16;
            T17 = T15 - T16;
            T1Y = SIMD_FMADD(KP618033988, T1X, T1W);
            T2a = SIMD_FNMADD(KP618033988, T1W, T1X);
            Tj  = Tf + Ti;
            TK  = Tf - Ti;
            TU  = SIMD_FNMADD(KP250000000, Ts, Tl);
            T1S = SIMD_FMADD(KP951056516, T1R, T1O);
            T21 = SIMD_FNMADD(KP951056516, T1R, T1O);
            T1t = SIMD_FMADD(KP1_902113032, T1e, T1d);
            T1f = SIMD_FNMADD(KP1_902113032, T1e, T1d);
            T1i = SIMD_FNMADD(KP1_902113032, T1h, T1g);
            T1u = SIMD_FMADD(KP1_902113032, T1h, T1g);
            TI  = TA - TH;
            T22 = SIMD_FMADD(KP951056516, T1Y, T1V);
            T1Z = SIMD_FNMADD(KP951056516, T1Y, T1V);
            Tk  = Tc + Tj;
            TJ  = SIMD_FNMADD(KP250000000, Tj, Tc);
            T2e = SIMD_FMADD(KP951056516, T2a, T29);
            T2b = SIMD_FNMADD(KP951056516, T2a, T29);
            T1n = SIMD_FNMADD(KP559016994, TV, TU);
            TW  = SIMD_FMADD(KP559016994, TV, TU);
            T2d = SIMD_FNMADD(KP951056516, T27, T26);
            T28 = SIMD_FMADD(KP951056516, T27, T26);
            T1v = T1t + T1u;
            T24 = T21 + T22;
            T20 = T1S - T1Z;
            T1z = T5 + Ta - (Tl + Ts) - Tk;
            Tt  = Tk - (Tl + Ts);
            T1k = SIMD_FNMADD(KP559016994, TK, TJ);
            TL  = SIMD_FMADD(KP559016994, TK, TJ);
            T1x = SIMD_FNMADD(KP951056516, T1o, T1n);
            T1p = SIMD_FMADD(KP951056516, T1o, T1n);
            T19 = SIMD_FNMADD(KP951056516, T13, TW);
            T2c = T28 + T2b;
        }
        T1r            = T1f - T1i;
        T1j            = T1f + T1i;
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T1K, T1z);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T1K, T1z);
        R0[WS(rs, 16)] = Tb + SIMD_FMADD(KP1_732050807, T1J - T1E, Tt);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP2_000000000, Tt, Tb);
        T1w            = SIMD_FMADD(KP951056516, T1l, T1k);
        T1m            = SIMD_FNMADD(KP951056516, T1l, T1k);
        TT             = SIMD_FNMADD(KP951056516, TS, TL);
        T18            = SIMD_FMADD(KP951056516, TS, TL);
        T25            = T1t + T1w - T1x - T1u;
        T1y            = T1w + T1x;
        T1s            = T1m - T1p;
        T1q            = T1m + T1p;
        T1L            = TA + TH - (SIMD_FMADD(KP951056516, T13, TW)) - TT;
        T14            = TT - (SIMD_FMADD(KP951056516, T13, TW));
        T1c            = T18 + T19;
        T1a            = T18 - T19;
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T2c, T25);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T2c, T25);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T2b - T28, T1v) - T1y;
        R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, T1y, T1v);
        R0[WS(rs, 8)]  = T1r + SIMD_FMADD(KP1_732050807, T2d + T2e, T1s);
        R0[WS(rs, 18)] = SIMD_FNMADD(KP2_000000000, T1s, T1r);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T2e - T2d, T1j) - T1q;
        R0[WS(rs, 3)]  = SIMD_FMADD(KP2_000000000, T1q, T1j);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T20, T1L);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, T20, T1L);
        R0[WS(rs, 2)]  = TI + SIMD_FMADD(KP1_732050807, T1S + T1Z, T14);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP2_000000000, T14, TI);
        R0[WS(rs, 5)]  = SIMD_FMADD(KP1_732050807, T21 - T22, T1b) - T1c;
        R0[WS(rs, 15)] = SIMD_FMADD(KP2_000000000, T1c, T1b);
        T23            = T17 + T1a;
        R0[0]          = SIMD_FNMADD(KP2_000000000, T1a, T17);
        R0[WS(rs, 20)] = SIMD_FMADD(KP1_732050807, T24, T23);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP1_732050807, T24, T23);
    }
}

template <>
struct r2cb_traits<30, 10>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 150;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 145;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 10 -name
 * r2cb -standalone */

/*
 * This function contains 150 FP additions, 78 FP multiplications,
 * (or, 72 additions, 0 multiplications, 78 fused multiply/add),
 * 145 stack variables, 9 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 10>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT TT, Tb, TM, TQ, T11, T1A, T1B, T1f, T1I, T1m, TU, T1C, T17,
            T1V, T1i;
        SIMD_FLOAT Tu, Tt, T1z, T1u, T1w, T29, T1M, T24, T1P, T1h, TD, T1S, T25,
            T14, T1U;
        SIMD_FLOAT T23, T1Z, TN, T1j, T1H, T2b, T26, T1W, T1D, T18, T21, T1T,
            T28, T1J, T1y;
        SIMD_FLOAT T1n, T27, T2c, T22, T20, T1F, T1E, T1g, T1x, T2a, T1G, T1v;
        {
            SIMD_FLOAT T1O, T10, T1e, T1R, TL, T5, Ta, Tl, T1N, TX, T1t, T1L,
                TP, T1Q, T1b;
            SIMD_FLOAT Tr, T1l, Tm, Tn, T1Y, TK, T1p, TO, Tk, Tv, Tz, TA, Tw,
                Tx, To;
            SIMD_FLOAT T1k, T1o, T1X, TB, T16, Ty, T15, T13, Ts, T1K, T1q, TC,
                T12;
            {
                SIMD_FLOAT TY, TZ, T1, T2, T3, T1c, T1d, T6, T7, T8, Tc, TW,
                    T1a, Ti, T1s;
                SIMD_FLOAT TH, TI, TE, TV, TF, Tf, T1r, T19, Tg, Th, Td, T4, Te,
                    T9, TS;
                SIMD_FLOAT TJ, TR, TG, Tj, Tp, Tq;
                TY  = Ci[WS(cs, 6)];
                TZ  = Ci[WS(cs, 12)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                T1c = Ci[WS(cs, 9)];
                T1d = Ci[WS(cs, 3)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tc  = Cr[WS(cs, 5)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1O = SIMD_FMSUB(KP618033988, TY, TZ);
                T10 = SIMD_FMADD(KP618033988, TZ, TY);
                Td  = Cr[WS(cs, 1)];
                T4  = T2 + T3;
                TW  = T2 - T3;
                T1e = SIMD_FMADD(KP618033988, T1d, T1c);
                T1R = SIMD_FNMADD(KP618033988, T1c, T1d);
                Te  = Cr[WS(cs, 11)];
                T1a = T7 - T8;
                T9  = T7 + T8;
                TL  = Ci[WS(cs, 5)];
                Ti  = Tg + Th;
                T1s = Tg - Th;
                TH  = Ci[WS(cs, 7)];
                TI  = Ci[WS(cs, 13)];
                TE  = Ci[WS(cs, 1)];
                TV  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TF  = Ci[WS(cs, 11)];
                Tf  = Td + Te;
                T1r = Td - Te;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                T19 = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                TS  = TI - TH;
                TJ  = TH + TI;
                T1N = SIMD_FNMADD(KP1_118033988, TW, TV);
                TX  = SIMD_FMADD(KP1_118033988, TW, TV);
                TR  = TE + TF;
                TG  = TE - TF;
                T1t = SIMD_FMADD(KP618033988, T1s, T1r);
                T1L = SIMD_FNMADD(KP618033988, T1r, T1s);
                Tj  = Tf + Ti;
                TP  = Tf - Ti;
                T1Q = SIMD_FNMADD(KP1_118033988, T1a, T19);
                T1b = SIMD_FMADD(KP1_118033988, T1a, T19);
                Tr  = Tp + Tq;
                T1l = Tp - Tq;
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1Y = SIMD_FMADD(KP618033988, TR, TS);
                TT  = SIMD_FNMADD(KP618033988, TS, TR);
                TK  = TG + TJ;
                T1p = TG - TJ;
                TO  = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk  = Tc + Tj;
                Tv  = Ci[WS(cs, 10)];
                Tz  = Ci[WS(cs, 8)];
                TA  = Ci[WS(cs, 2)];
                Tw  = Ci[WS(cs, 4)];
                Tx  = Ci[WS(cs, 14)];
            }
            Tb            = T5 - Ta;
            To            = Tm + Tn;
            T1k           = Tm - Tn;
            TM            = TK - TL;
            T1o           = SIMD_FMADD(KP250000000, TK, TL);
            TQ            = SIMD_FMADD(KP559016994, TP, TO);
            T1X           = SIMD_FNMADD(KP559016994, TP, TO);
            T11           = SIMD_FMADD(KP1_902113032, T10, TX);
            T1A           = SIMD_FNMADD(KP1_902113032, T10, TX);
            T1B           = SIMD_FMADD(KP1_902113032, T1e, T1b);
            T1f           = SIMD_FNMADD(KP1_902113032, T1e, T1b);
            TB            = Tz + TA;
            T16           = TA - Tz;
            Ty            = Tw - Tx;
            T15           = Tw + Tx;
            T1I           = SIMD_FNMADD(KP618033988, T1k, T1l);
            T1m           = SIMD_FMADD(KP618033988, T1l, T1k);
            T13           = To - Tr;
            Ts            = To + Tr;
            T1K           = SIMD_FMADD(KP559016994, T1p, T1o);
            T1q           = SIMD_FNMADD(KP559016994, T1p, T1o);
            TU            = SIMD_FMADD(KP951056516, TT, TQ);
            T1C           = T1A - T1B;
            T17           = SIMD_FNMADD(KP618033988, T16, T15);
            T1V           = SIMD_FMADD(KP618033988, T15, T16);
            T1i           = Ty + TB;
            TC            = Ty - TB;
            Tu            = T5 + Ta - (Tl + Ts) - Tk;
            Tt            = Tk - (Tl + Ts);
            T12           = SIMD_FNMADD(KP250000000, Ts, Tl);
            T1z           = SIMD_FNMADD(KP951056516, T1t, T1q);
            T1u           = SIMD_FMADD(KP951056516, T1t, T1q);
            T1w           = T11 + T1f;
            T29           = SIMD_FNMADD(KP951056516, T1L, T1K);
            T1M           = SIMD_FMADD(KP951056516, T1L, T1K);
            T24           = SIMD_FMADD(KP1_902113032, T1O, T1N);
            T1P           = SIMD_FNMADD(KP1_902113032, T1O, T1N);
            T1h           = SIMD_FNMADD(KP250000000, TC, Tv);
            TD            = Tv + TC;
            T1S           = SIMD_FNMADD(KP1_902113032, T1R, T1Q);
            T25           = SIMD_FMADD(KP1_902113032, T1R, T1Q);
            R0[WS(rs, 5)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
            T14           = SIMD_FMADD(KP559016994, T13, T12);
            T1U           = SIMD_FNMADD(KP559016994, T13, T12);
            T23           = SIMD_FMADD(KP951056516, T1Y, T1X);
            T1Z           = SIMD_FNMADD(KP951056516, T1Y, T1X);
        }
        R0[WS(rs, 15)] = Tb + SIMD_FMADD(KP1_732050807, TM - TD, Tt);
        TN             = TD + TM;
        T1j            = SIMD_FMADD(KP559016994, T1i, T1h);
        T1H            = SIMD_FNMADD(KP559016994, T1i, T1h);
        T2b            = T24 + T25;
        T26            = SIMD_FNMADD(KP951056516, T1V, T1U);
        T1W            = SIMD_FMADD(KP951056516, T1V, T1U);
        T1D            = SIMD_FMADD(KP951056516, T17, T14);
        T18            = SIMD_FNMADD(KP951056516, T17, T14);
        T21            = T1P + T1S;
        T1T            = T1P - T1S;
        R0[0]          = SIMD_FNMADD(KP1_732050807, TN, Tu);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, TN, Tu);
        T28            = SIMD_FMADD(KP951056516, T1I, T1H);
        T1J            = SIMD_FNMADD(KP951056516, T1I, T1H);
        T1y            = SIMD_FMADD(KP951056516, T1m, T1j);
        T1n            = SIMD_FNMADD(KP951056516, T1m, T1j);
        T27            = T23 + T24 - T25 - T26;
        T2c            = T26 + T23;
        T22            = T1W + T1Z;
        T20            = T1W - T1Z;
        T1F            = T1A + T1B - (SIMD_FNMADD(KP951056516, TT, TQ)) - T1D;
        T1E            = T1D - (SIMD_FNMADD(KP951056516, TT, TQ));
        T1g            = TU + T11 - (T18 + T1f);
        T1x            = T18 + TU;
        T2a            = T28 + T29;
        T1G            = T1y - T1z;
        T1v            = T1n + T1u;
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T29 - T28, T2b) - T2c;
        R0[WS(rs, 8)]  = SIMD_FMADD(KP2_000000000, T2c, T2b);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T1M - T1J, T21) - T22;
        R0[WS(rs, 2)]  = SIMD_FMADD(KP2_000000000, T22, T21);
        R0[WS(rs, 7)]  = SIMD_FMADD(KP1_732050807, T1J + T1M, T1T) - T20;
        R0[WS(rs, 17)] = SIMD_FMADD(KP2_000000000, T20, T1T);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, T1y + T1z, T1C) - T1E;
        R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T1E, T1C);
        R0[WS(rs, 4)]  = SIMD_FMADD(KP1_732050807, T1n, T1w) -
                        (SIMD_FMADD(KP1_732050807, T1u, T1x));
        R0[WS(rs, 14)] = SIMD_FMADD(KP2_000000000, T1x, T1w);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T2a, T27);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T2a, T27);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T1G, T1F);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, T1G, T1F);
        R0[WS(rs, 19)] = SIMD_FMADD(KP1_732050807, T1v, T1g);
        R0[WS(rs, 9)]  = SIMD_FNMADD(KP1_732050807, T1v, T1g);
    }
}

template <>
struct r2cb_traits<30, 11>
{
    static constexpr long_t flops           = 225;
    static constexpr long_t operations      = 149;
    static constexpr long_t memory_accesses = 49;
    static constexpr long_t stack_vars      = 113;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 11 -name
 * r2cb -standalone */

/*
 * This function contains 149 FP additions, 76 FP multiplications,
 * (or, 73 additions, 0 multiplications, 76 fused multiply/add),
 * 113 stack variables, 9 constants, and 49 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 11>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T15, T16, T23, T1N, T19, T17, T1V, T1Y, T1r, TI, T1s, T1n,
            T1v, T27, T2a;
        SIMD_FLOAT T1K, T22, T1t, T1u, T1k, T1H, T14, T18, T1p, T1h, T24, T29,
            T1O, T1X, T21;
        SIMD_FLOAT T1w, T1o, T1q, T1Z, T1a, T28, T20, T1W;
        {
            SIMD_FLOAT T1c, Tz, TG, T1f, T1F, T5, Ta, Tl, T1b, Tw, T1U, T26, TK,
                T1e, TD;
            SIMD_FLOAT Tr, T1M, Tm, Tn, T1E, T1Q, T1m, TS, TJ, Tk, T1A, T10,
                T11, TX, TY;
            {
                SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tc, Tv, TC,
                    Ti, T1T;
                SIMD_FLOAT TP, TQ, TM, Tu, TN, Tf, T1S, TB, Tg, Th, Td, T4, Te,
                    T9, T1D;
                SIMD_FLOAT TR, T1C, TO, Tj, Tp, Tq;
                Tx  = Ci[WS(cs, 6)];
                Ty  = Ci[WS(cs, 12)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                TE  = Ci[WS(cs, 9)];
                TF  = Ci[WS(cs, 3)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tc  = Cr[WS(cs, 5)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1c = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                Td  = Cr[WS(cs, 1)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1f = SIMD_FNMADD(KP618033988, TE, TF);
                Te  = Cr[WS(cs, 11)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1F = Ci[WS(cs, 5)];
                Ti  = Tg + Th;
                T1T = Tg - Th;
                TP  = Ci[WS(cs, 13)];
                TQ  = Ci[WS(cs, 7)];
                TM  = Ci[WS(cs, 1)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TN  = Ci[WS(cs, 11)];
                Tf  = Td + Te;
                T1S = Td - Te;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1D = TP + TQ;
                TR  = TP - TQ;
                T1b = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1C = TM - TN;
                TO  = TM + TN;
                T1U = SIMD_FMADD(KP618033988, T1T, T1S);
                T26 = SIMD_FNMADD(KP618033988, T1S, T1T);
                Tj  = Tf + Ti;
                TK  = Tf - Ti;
                T1e = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                Tr  = Tp + Tq;
                T1M = Tp - Tq;
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1E = T1C + T1D;
                T1Q = T1C - T1D;
                T1m = SIMD_FMADD(KP618033988, TO, TR);
                TS  = SIMD_FNMADD(KP618033988, TR, TO);
                TJ  = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk  = Tc + Tj;
                T1A = Ci[WS(cs, 10)];
                T10 = Ci[WS(cs, 2)];
                T11 = Ci[WS(cs, 8)];
                TX  = Ci[WS(cs, 14)];
                TY  = Ci[WS(cs, 4)];
            }
            {
                SIMD_FLOAT Tb, To, T1L, T1G, T1P, T1l, TA, TH, TV, Ts, T25, TT,
                    T1J, T1z, T13;
                SIMD_FLOAT T1j, Tt, TU, TL, T12, T1y, TZ, T1x, T1R, T1d, T1I,
                    T1B, T1g, T1i, TW;
                Tb            = T5 - Ta;
                To            = Tm + Tn;
                T1L           = Tm - Tn;
                T1G           = T1E - T1F;
                T1P           = SIMD_FMADD(KP250000000, T1E, T1F);
                TL            = SIMD_FMADD(KP559016994, TK, TJ);
                T1l           = SIMD_FNMADD(KP559016994, TK, TJ);
                TA            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
                T15           = SIMD_FMADD(KP1_902113032, Tz, Tw);
                T16           = SIMD_FNMADD(KP1_902113032, TG, TD);
                TH            = SIMD_FMADD(KP1_902113032, TG, TD);
                T12           = T10 - T11;
                T1y           = T10 + T11;
                TZ            = TX + TY;
                T1x           = TY - TX;
                T23           = SIMD_FNMADD(KP618033988, T1L, T1M);
                T1N           = SIMD_FMADD(KP618033988, T1M, T1L);
                TV            = To - Tr;
                Ts            = To + Tr;
                T25           = SIMD_FMADD(KP559016994, T1Q, T1P);
                T1R           = SIMD_FNMADD(KP559016994, T1Q, T1P);
                T19           = SIMD_FMADD(KP951056516, TS, TL);
                TT            = SIMD_FNMADD(KP951056516, TS, TL);
                T17           = T15 + T16;
                T1J           = T1x + T1y;
                T1z           = T1x - T1y;
                T13           = SIMD_FNMADD(KP618033988, T12, TZ);
                T1j           = SIMD_FMADD(KP618033988, TZ, T12);
                Tt            = Tk - (Tl + Ts);
                TU            = SIMD_FNMADD(KP250000000, Ts, Tl);
                T1V           = SIMD_FNMADD(KP951056516, T1U, T1R);
                T1Y           = SIMD_FMADD(KP951056516, T1U, T1R);
                T1d           = SIMD_FNMADD(KP1_902113032, T1c, T1b);
                T1r           = SIMD_FMADD(KP1_902113032, T1c, T1b);
                TI            = TA - TH;
                T1I           = SIMD_FNMADD(KP250000000, T1z, T1A);
                T1B           = T1z + T1A;
                T1g           = SIMD_FNMADD(KP1_902113032, T1f, T1e);
                T1s           = SIMD_FMADD(KP1_902113032, T1f, T1e);
                R0[WS(rs, 4)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
                T1i           = SIMD_FNMADD(KP559016994, TV, TU);
                TW            = SIMD_FMADD(KP559016994, TV, TU);
                T1n           = SIMD_FNMADD(KP951056516, T1m, T1l);
                T1v           = SIMD_FMADD(KP951056516, T1m, T1l);
                T27           = SIMD_FNMADD(KP951056516, T26, T25);
                T2a           = SIMD_FMADD(KP951056516, T26, T25);
                R0[WS(rs, 9)] = T5 + SIMD_FMADD(KP1_732050807, T1B + T1G, Ta) -
                                (Tl + Ts) - Tk;
                R0[WS(rs, 14)] = Tb + SIMD_FMADD(KP1_732050807, T1G - T1B, Tt);
                T1K            = SIMD_FMADD(KP559016994, T1J, T1I);
                T22            = SIMD_FNMADD(KP559016994, T1J, T1I);
                T1t            = T1r + T1s;
                T1u            = SIMD_FNMADD(KP951056516, T1j, T1i);
                T1k            = SIMD_FMADD(KP951056516, T1j, T1i);
                T1H = TA + TH - TT - (SIMD_FMADD(KP951056516, T13, TW));
                T14 = TT - (SIMD_FMADD(KP951056516, T13, TW));
                T18 = SIMD_FNMADD(KP951056516, T13, TW);
                T1p = T1d - T1g;
                T1h = T1d + T1g;
            }
        }
        T24            = SIMD_FMADD(KP951056516, T23, T22);
        T29            = SIMD_FNMADD(KP951056516, T23, T22);
        T1O            = SIMD_FMADD(KP951056516, T1N, T1K);
        T1X            = SIMD_FNMADD(KP951056516, T1N, T1K);
        T21            = T1r + T1v - T1u - T1s;
        T1w            = T1u + T1v;
        T1o            = T1k + T1n;
        T1q            = T1n - T1k;
        R0[WS(rs, 10)] = SIMD_FNMADD(KP2_000000000, T14, TI);
        T1Z            = T15 + T19 - T18 - T16;
        T1a            = T18 + T19;
        T28            = T24 + T27;
        T20            = T1X + T1Y;
        T1W            = T1O - T1V;
        R0[0]          = TI + SIMD_FMADD(KP1_732050807, T1O + T1V, T14);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T27 - T24, T1t) - T1w;
        R0[WS(rs, 7)]  = SIMD_FMADD(KP2_000000000, T1w, T1t);
        R0[WS(rs, 6)]  = T1p + SIMD_FMADD(KP1_732050807, T29 + T2a, T1q);
        R0[WS(rs, 16)] = SIMD_FNMADD(KP2_000000000, T1q, T1p);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T2a - T29, T1h) - T1o;
        R0[WS(rs, 1)]  = SIMD_FMADD(KP2_000000000, T1o, T1h);
        R0[WS(rs, 3)]  = SIMD_FMADD(KP1_732050807, T1X - T1Y, T17) - T1a;
        R0[WS(rs, 13)] = SIMD_FMADD(KP2_000000000, T1a, T17);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T28, T21);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T28, T21);
        R0[WS(rs, 18)] = SIMD_FMADD(KP1_732050807, T20, T1Z);
        R0[WS(rs, 8)]  = SIMD_FNMADD(KP1_732050807, T20, T1Z);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T1W, T1H);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_732050807, T1W, T1H);
    }
}

template <>
struct r2cb_traits<30, 12>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 146;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 141;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 12 -name
 * r2cb -standalone */

/*
 * This function contains 146 FP additions, 74 FP multiplications,
 * (or, 72 additions, 0 multiplications, 74 fused multiply/add),
 * 141 stack variables, 9 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 12>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T5, Ta, Tl, T1p, Tk, Tb, T1E, T1s, T1g, T1j, T1u, T1o, T22,
            T1L, Ts;
        SIMD_FLOAT T1Z, T1q, T1H, TS, T1m, T23, Tt, T1k, T26, T18, TA, T14, T1c,
            T1T, T1W;
        SIMD_FLOAT T1G, T1z, TH, T19, T1l, TL, T1Y, T1I, T1a, T1b, TT, T1t, T1n,
            T16, TI;
        SIMD_FLOAT T1V, T1M, T25, T20, T1F, T1d, T17, T15, T1X, T27, T1r, T1U,
            T28, T24;
        {
            SIMD_FLOAT T1f, Tz, TG, T1i, T1D, T1e, Tw, T1S, T21, TV, T1h, TD,
                Tr, T1J, Tm;
            SIMD_FLOAT Tn, T1C, T1O, T13, TU, T1y, TP, TQ, TM, TN, To, T1K, T1N,
                TW, TR;
            SIMD_FLOAT T1v, TO, T1w, TK, T1P, T1x, TJ;
            {
                SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tc, Tv, TC,
                    Ti, T1Q;
                SIMD_FLOAT T10, T11, TX, Tu, TY, Tf, T1R, TB, Tg, Th, Td, T4,
                    Te, T9, T1B;
                SIMD_FLOAT T12, T1A, TZ, Tj, Tp, Tq;
                Tx  = Ci[WS(cs, 12)];
                Ty  = Ci[WS(cs, 6)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                TE  = Ci[WS(cs, 3)];
                TF  = Ci[WS(cs, 9)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tc  = Cr[WS(cs, 5)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1f = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                Td  = Cr[WS(cs, 1)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1i = SIMD_FMADD(KP618033988, TE, TF);
                Te  = Cr[WS(cs, 11)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1D = Ci[WS(cs, 5)];
                Ti  = Tg + Th;
                T1Q = Tg - Th;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 13)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 7)];
                Tf  = Td + Te;
                T1R = Td - Te;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1B = T10 - T11;
                T12 = T10 + T11;
                T1e = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1A = TX + TY;
                TZ  = TX - TY;
                T1S = SIMD_FNMADD(KP618033988, T1R, T1Q);
                T21 = SIMD_FMADD(KP618033988, T1Q, T1R);
                Tj  = Tf + Ti;
                TV  = Tf - Ti;
                T1h = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                Tr  = Tp + Tq;
                T1J = Tp - Tq;
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1C = T1A + T1B;
                T1O = T1B - T1A;
                T1p = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                TU  = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk  = Tc + Tj;
                T1y = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                TM  = Ci[WS(cs, 2)];
                TN  = Ci[WS(cs, 8)];
            }
            Tb            = T5 - Ta;
            To            = Tm + Tn;
            T1K           = Tm - Tn;
            T1E           = T1C - T1D;
            T1N           = SIMD_FMADD(KP250000000, T1C, T1D);
            T1s           = SIMD_FNMADD(KP1_902113032, T1f, T1e);
            T1g           = SIMD_FMADD(KP1_902113032, T1f, T1e);
            T1j           = SIMD_FNMADD(KP1_902113032, T1i, T1h);
            T1u           = SIMD_FMADD(KP1_902113032, T1i, T1h);
            T1o           = SIMD_FMADD(KP559016994, TV, TU);
            TW            = SIMD_FNMADD(KP559016994, TV, TU);
            TR            = TP + TQ;
            T1v           = TQ - TP;
            TO            = TM - TN;
            T1w           = TM + TN;
            T22           = SIMD_FMADD(KP618033988, T1J, T1K);
            T1L           = SIMD_FNMADD(KP618033988, T1K, T1J);
            TK            = To - Tr;
            Ts            = To + Tr;
            T1P           = SIMD_FMADD(KP559016994, T1O, T1N);
            T1Z           = SIMD_FNMADD(KP559016994, T1O, T1N);
            T1q           = SIMD_FMADD(KP951056516, T1p, T1o);
            T1H           = T1v + T1w;
            T1x           = T1v - T1w;
            TS            = SIMD_FMADD(KP618033988, TR, TO);
            T1m           = SIMD_FNMADD(KP618033988, TO, TR);
            T23           = T21 + T22;
            Tt            = Tk - (Tl + Ts);
            TJ            = SIMD_FNMADD(KP250000000, Ts, Tl);
            T1k           = T1g + T1j;
            T26           = SIMD_FMADD(KP951056516, T21, T1Z);
            T18           = SIMD_FMADD(KP1_902113032, Tz, Tw);
            TA            = SIMD_FNMADD(KP1_902113032, Tz, Tw);
            T14           = SIMD_FNMADD(KP951056516, T13, TW);
            T1c           = SIMD_FMADD(KP951056516, T13, TW);
            T1T           = SIMD_FNMADD(KP951056516, T1S, T1P);
            T1W           = SIMD_FMADD(KP951056516, T1S, T1P);
            T1G           = SIMD_FNMADD(KP250000000, T1x, T1y);
            T1z           = T1x + T1y;
            TH            = SIMD_FNMADD(KP1_902113032, TG, TD);
            T19           = SIMD_FMADD(KP1_902113032, TG, TD);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
            T1l           = SIMD_FMADD(KP559016994, TK, TJ);
            TL            = SIMD_FNMADD(KP559016994, TK, TJ);
        }
        R0[WS(rs, 8)] =
            T5 + SIMD_FMADD(KP1_732050807, T1z + T1E, Ta) - (Tl + Ts) - Tk;
        R0[WS(rs, 13)] = Tb + SIMD_FMADD(KP1_732050807, T1E - T1z, Tt);
        T1Y            = SIMD_FMADD(KP559016994, T1H, T1G);
        T1I            = SIMD_FNMADD(KP559016994, T1H, T1G);
        T1a            = T18 + T19;
        T1b            = SIMD_FNMADD(KP951056516, TS, TL);
        TT             = SIMD_FMADD(KP951056516, TS, TL);
        T1t            = SIMD_FMADD(KP951056516, T1m, T1l);
        T1n            = SIMD_FNMADD(KP951056516, T1m, T1l);
        T16            = TA - TH;
        TI             = TA + TH;
        T1V            = SIMD_FNMADD(KP951056516, T1L, T1I);
        T1M            = SIMD_FMADD(KP951056516, T1L, T1I);
        T25            = SIMD_FNMADD(KP951056516, T22, T1Y);
        T20            = T1Y - T1Z;
        T1F            = T18 + T1c - T1b - T19;
        T1d            = T1b + T1c;
        T17            = T14 - TT;
        T15            = TT + T14;
        T1X            = T1s + T1u - (SIMD_FNMADD(KP951056516, T1p, T1o)) - T1t;
        R0[WS(rs, 9)] =
            SIMD_FMADD(KP2_000000000,
                       T1t - (SIMD_FNMADD(KP951056516, T1p, T1o)), T1s) -
            T1u;
        T27            = T1g + T1q - T1n - T1j;
        T1r            = T1n + T1q;
        T1U            = T1M + T1T;
        T28            = T25 + T26;
        T24            = SIMD_FMADD(KP951056516, T23, T20);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T1T - T1M, T1a) - T1d;
        R0[WS(rs, 6)]  = SIMD_FMADD(KP2_000000000, T1d, T1a);
        R0[WS(rs, 5)]  = T16 + SIMD_FMADD(KP1_732050807, T1V + T1W, T17);
        R0[WS(rs, 15)] = SIMD_FNMADD(KP2_000000000, T17, T16);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T1W - T1V, TI) - T15;
        R0[0]          = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 2)]  = SIMD_FMADD(KP1_732050807, T25 - T26, T1k) - T1r;
        R0[WS(rs, 12)] = SIMD_FMADD(KP2_000000000, T1r, T1k);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T1U, T1F);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T1U, T1F);
        R0[WS(rs, 17)] = SIMD_FMADD(KP1_732050807, T28, T27);
        R0[WS(rs, 7)]  = SIMD_FNMADD(KP1_732050807, T28, T27);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T24, T1X);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T24, T1X);
    }
}

template <>
struct r2cb_traits<30, 13>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 146;
    static constexpr long_t memory_accesses = 47;
    static constexpr long_t stack_vars      = 138;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 13 -name
 * r2cb -standalone */

/*
 * This function contains 146 FP additions, 74 FP multiplications,
 * (or, 72 additions, 0 multiplications, 74 fused multiply/add),
 * 138 stack variables, 9 constants, and 47 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 13>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T5, Ta, Tl, T1m, Tk, Tb, T1B, T1p, T1d, T1g, T1r, T1l, T1Z,
            T1I, Ts;
        SIMD_FLOAT T1W, T1n, T1E, TS, T1j, T20, Tt, T1h, T23, T16, TA, T14, T19,
            T1Q, T1T;
        SIMD_FLOAT T1D, T1w, TH, T17, T1i, TL, T1V, T1F, T18, T1a, TT, T1q, T1k,
            TI, T1J;
        SIMD_FLOAT T1S, T22, T1X, T1C, T15, T1U, T24, T1o, T1R, T25, T21;
        {
            SIMD_FLOAT T1c, Tz, TG, T1f, T1A, T1b, Tw, T1P, T1Y, TV, T1e, TD,
                Tr, T1G, Tm;
            SIMD_FLOAT Tn, T1z, T1L, T13, TU, T1v, TP, TQ, TM, TN, To, T1H, T1K,
                TW, TR;
            SIMD_FLOAT T1s, TO, T1t, TK, T1M, T1u, TJ;
            {
                SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tc, Tv, TC,
                    Ti, T1N;
                SIMD_FLOAT T10, T11, TX, Tu, TY, Tf, T1O, TB, Tg, Th, Td, T4,
                    Te, T9, T1y;
                SIMD_FLOAT T12, T1x, TZ, Tj, Tp, Tq;
                Tx  = Ci[WS(cs, 12)];
                Ty  = Ci[WS(cs, 6)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                TE  = Ci[WS(cs, 3)];
                TF  = Ci[WS(cs, 9)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tc  = Cr[WS(cs, 5)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1c = SIMD_FMADD(KP618033988, Tx, Ty);
                Tz  = SIMD_FMSUB(KP618033988, Ty, Tx);
                Td  = Cr[WS(cs, 1)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FNMADD(KP618033988, TF, TE);
                T1f = SIMD_FMADD(KP618033988, TE, TF);
                Te  = Cr[WS(cs, 11)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1A = Ci[WS(cs, 5)];
                Ti  = Tg + Th;
                T1N = Tg - Th;
                T10 = Ci[WS(cs, 1)];
                T11 = Ci[WS(cs, 11)];
                TX  = Ci[WS(cs, 13)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 7)];
                Tf  = Td + Te;
                T1O = Td - Te;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1y = T10 - T11;
                T12 = T10 + T11;
                T1b = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                T1x = TX + TY;
                TZ  = TX - TY;
                T1P = SIMD_FNMADD(KP618033988, T1O, T1N);
                T1Y = SIMD_FMADD(KP618033988, T1N, T1O);
                Tj  = Tf + Ti;
                TV  = Tf - Ti;
                T1e = SIMD_FMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FNMADD(KP1_118033988, TC, TB);
                Tr  = Tp + Tq;
                T1G = Tp - Tq;
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1z = T1x + T1y;
                T1L = T1y - T1x;
                T1m = SIMD_FNMADD(KP618033988, TZ, T12);
                T13 = SIMD_FMADD(KP618033988, T12, TZ);
                TU  = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk  = Tc + Tj;
                T1v = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 14)];
                TQ  = Ci[WS(cs, 4)];
                TM  = Ci[WS(cs, 2)];
                TN  = Ci[WS(cs, 8)];
            }
            Tb            = T5 - Ta;
            To            = Tm + Tn;
            T1H           = Tm - Tn;
            T1B           = T1z - T1A;
            T1K           = SIMD_FMADD(KP250000000, T1z, T1A);
            T1p           = SIMD_FNMADD(KP1_902113032, T1c, T1b);
            T1d           = SIMD_FMADD(KP1_902113032, T1c, T1b);
            T1g           = SIMD_FNMADD(KP1_902113032, T1f, T1e);
            T1r           = SIMD_FMADD(KP1_902113032, T1f, T1e);
            T1l           = SIMD_FMADD(KP559016994, TV, TU);
            TW            = SIMD_FNMADD(KP559016994, TV, TU);
            TR            = TP + TQ;
            T1s           = TQ - TP;
            TO            = TM - TN;
            T1t           = TM + TN;
            T1Z           = SIMD_FMADD(KP618033988, T1G, T1H);
            T1I           = SIMD_FNMADD(KP618033988, T1H, T1G);
            TK            = To - Tr;
            Ts            = To + Tr;
            T1M           = SIMD_FMADD(KP559016994, T1L, T1K);
            T1W           = SIMD_FNMADD(KP559016994, T1L, T1K);
            T1n           = SIMD_FMADD(KP951056516, T1m, T1l);
            T1E           = T1s + T1t;
            T1u           = T1s - T1t;
            TS            = SIMD_FMADD(KP618033988, TR, TO);
            T1j           = SIMD_FNMADD(KP618033988, TO, TR);
            T20           = T1Y + T1Z;
            Tt            = Tk - (Tl + Ts);
            TJ            = SIMD_FNMADD(KP250000000, Ts, Tl);
            T1h           = T1d + T1g;
            T23           = SIMD_FMADD(KP951056516, T1Y, T1W);
            T16           = SIMD_FNMADD(KP1_902113032, Tz, Tw);
            TA            = SIMD_FMADD(KP1_902113032, Tz, Tw);
            T14           = SIMD_FMADD(KP951056516, T13, TW);
            T19           = SIMD_FNMADD(KP951056516, T13, TW);
            T1Q           = SIMD_FNMADD(KP951056516, T1P, T1M);
            T1T           = SIMD_FMADD(KP951056516, T1P, T1M);
            T1D           = SIMD_FNMADD(KP250000000, T1u, T1v);
            T1w           = T1u + T1v;
            TH            = SIMD_FMADD(KP1_902113032, TG, TD);
            T17           = SIMD_FNMADD(KP1_902113032, TG, TD);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
            T1i           = SIMD_FMADD(KP559016994, TK, TJ);
            TL            = SIMD_FNMADD(KP559016994, TK, TJ);
        }
        R0[WS(rs, 7)] =
            T5 + SIMD_FMADD(KP1_732050807, T1w + T1B, Ta) - (Tl + Ts) - Tk;
        R0[WS(rs, 12)] = Tb + SIMD_FMADD(KP1_732050807, T1B - T1w, Tt);
        T1V            = SIMD_FMADD(KP559016994, T1E, T1D);
        T1F            = SIMD_FNMADD(KP559016994, T1E, T1D);
        T18            = T16 - T17;
        T1a            = T19 - (SIMD_FMADD(KP951056516, TS, TL));
        TT             = SIMD_FNMADD(KP951056516, TS, TL);
        T1q            = SIMD_FMADD(KP951056516, T1j, T1i);
        T1k            = SIMD_FNMADD(KP951056516, T1j, T1i);
        TI             = TA + TH;
        T1J            = SIMD_FMADD(KP951056516, T1I, T1F);
        T1S            = SIMD_FNMADD(KP951056516, T1I, T1F);
        T22            = SIMD_FNMADD(KP951056516, T1Z, T1V);
        T1X            = T1V - T1W;
        R0[WS(rs, 14)] = SIMD_FNMADD(KP2_000000000, T1a, T18);
        T1C            = TA + T14 - TT - TH;
        T15            = TT + T14;
        T1U            = T1p + T1r - (SIMD_FNMADD(KP951056516, T1m, T1l)) - T1q;
        R0[WS(rs, 8)] =
            SIMD_FMADD(KP2_000000000,
                       T1q - (SIMD_FNMADD(KP951056516, T1m, T1l)), T1p) -
            T1r;
        T24           = T1d + T1n - T1k - T1g;
        T1o           = T1k + T1n;
        R0[WS(rs, 4)] = T18 + SIMD_FMADD(KP1_732050807, T1S + T1T, T1a);
        R0[WS(rs, 9)] = T16 + SIMD_FMADD(KP1_732050807, T1T - T1S, T17) - T19 -
                        (SIMD_FMADD(KP951056516, TS, TL));
        T1R            = T1J + T1Q;
        T25            = T22 + T23;
        T21            = SIMD_FMADD(KP951056516, T20, T1X);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T1Q - T1J, TI) - T15;
        R0[WS(rs, 5)]  = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 1)]  = SIMD_FMADD(KP1_732050807, T22 - T23, T1h) - T1o;
        R0[WS(rs, 11)] = SIMD_FMADD(KP2_000000000, T1o, T1h);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T1R, T1C);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T1R, T1C);
        R0[WS(rs, 16)] = SIMD_FMADD(KP1_732050807, T25, T24);
        R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_732050807, T25, T24);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T21, T1U);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T21, T1U);
    }
}

template <>
struct r2cb_traits<30, 14>
{
    static constexpr long_t flops           = 218;
    static constexpr long_t operations      = 145;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 136;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 14 -name
 * r2cb -standalone */

/*
 * This function contains 145 FP additions, 73 FP multiplications,
 * (or, 72 additions, 0 multiplications, 73 fused multiply/add),
 * 136 stack variables, 9 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 14>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T5, Ta, Tl, T1M, T13, Tk, Tb, T1B, TW, T1b, T1m, T1n, T1e,
            T1X, T1P;
        SIMD_FLOAT Ts, T1I, T1q, T1i, T1o, T1E, TS, T1k, Tt, T21, T23, TA, T16,
            T18, TH;
        SIMD_FLOAT T1Q, T1f, T1D, T1w, TL, T1j, T1F, T1W, T14, TT, T17, T1l,
            T1p, TI, T1T;
        SIMD_FLOAT T1S, T1J, T1Y, T22, T1C, T1U, T15, T1r, T1V, T1R;
        {
            SIMD_FLOAT T1a, Tz, TG, T1d, T1A, T19, Tw, T20, TV, T1c, TD, Tr,
                T1O, Tm, Tn;
            SIMD_FLOAT T1z, T1H, T1h, TU, T1v, TP, TQ, TM, TN, To, T1N, T1G, TK,
                T1u, TJ;
            SIMD_FLOAT T1g, TR, T1t, TO, T1s, T1Z;
            {
                SIMD_FLOAT Tx, Ty, T1, T2, T3, TE, TF, T6, T7, T8, Tc, Tv, TC,
                    Ti, T1L;
                SIMD_FLOAT T10, T11, TX, Tu, TY, Tf, T1K, TB, Tg, Th, Td, T4,
                    Te, T9, T1y;
                SIMD_FLOAT T12, T1x, TZ, Tj, Tp, Tq;
                Tx  = Ci[WS(cs, 6)];
                Ty  = Ci[WS(cs, 12)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                TE  = Ci[WS(cs, 9)];
                TF  = Ci[WS(cs, 3)];
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tc  = Cr[WS(cs, 5)];
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                T1a = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                Td  = Cr[WS(cs, 1)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TG  = SIMD_FMADD(KP618033988, TF, TE);
                T1d = SIMD_FNMADD(KP618033988, TE, TF);
                Te  = Cr[WS(cs, 11)];
                TC  = T7 - T8;
                T9  = T7 + T8;
                T1A = Ci[WS(cs, 5)];
                Ti  = Tg + Th;
                T1L = Tg - Th;
                T10 = Ci[WS(cs, 13)];
                T11 = Ci[WS(cs, 7)];
                TX  = Ci[WS(cs, 1)];
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                TY  = Ci[WS(cs, 11)];
                Tf  = Td + Te;
                T1K = Td - Te;
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TB  = SIMD_FNMADD(KP500000000, T9, T6);
                Tl  = Cr[WS(cs, 10)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                T1y = T10 + T11;
                T12 = T10 - T11;
                T19 = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                T1x = TX - TY;
                TZ  = TX + TY;
                T1M = SIMD_FMADD(KP618033988, T1L, T1K);
                T20 = SIMD_FNMADD(KP618033988, T1K, T1L);
                Tj  = Tf + Ti;
                TV  = Tf - Ti;
                T1c = SIMD_FNMADD(KP1_118033988, TC, TB);
                TD  = SIMD_FMADD(KP1_118033988, TC, TB);
                Tr  = Tp + Tq;
                T1O = Tp - Tq;
                Tm  = Cr[WS(cs, 14)];
                Tn  = Cr[WS(cs, 4)];
                T1z = T1x + T1y;
                T1H = T1x - T1y;
                T1h = SIMD_FMADD(KP618033988, TZ, T12);
                T13 = SIMD_FNMADD(KP618033988, T12, TZ);
                TU  = SIMD_FNMADD(KP250000000, Tj, Tc);
                Tk  = Tc + Tj;
                T1v = Ci[WS(cs, 10)];
                TP  = Ci[WS(cs, 2)];
                TQ  = Ci[WS(cs, 8)];
                TM  = Ci[WS(cs, 14)];
                TN  = Ci[WS(cs, 4)];
            }
            Tb            = T5 - Ta;
            To            = Tm + Tn;
            T1N           = Tm - Tn;
            T1B           = T1z - T1A;
            T1G           = SIMD_FMADD(KP250000000, T1z, T1A);
            T1g           = SIMD_FNMADD(KP559016994, TV, TU);
            TW            = SIMD_FMADD(KP559016994, TV, TU);
            T1b           = SIMD_FNMADD(KP1_902113032, T1a, T19);
            T1m           = SIMD_FMADD(KP1_902113032, T1a, T19);
            T1n           = SIMD_FMADD(KP1_902113032, T1d, T1c);
            T1e           = SIMD_FNMADD(KP1_902113032, T1d, T1c);
            TR            = TP - TQ;
            T1t           = TP + TQ;
            TO            = TM + TN;
            T1s           = TN - TM;
            T1X           = SIMD_FNMADD(KP618033988, T1N, T1O);
            T1P           = SIMD_FMADD(KP618033988, T1O, T1N);
            TK            = To - Tr;
            Ts            = To + Tr;
            T1I           = SIMD_FNMADD(KP559016994, T1H, T1G);
            T1Z           = SIMD_FMADD(KP559016994, T1H, T1G);
            T1q           = SIMD_FMADD(KP951056516, T1h, T1g);
            T1i           = SIMD_FNMADD(KP951056516, T1h, T1g);
            T1o           = T1m + T1n;
            T1E           = T1s + T1t;
            T1u           = T1s - T1t;
            TS            = SIMD_FNMADD(KP618033988, TR, TO);
            T1k           = SIMD_FMADD(KP618033988, TO, TR);
            Tt            = Tk - (Tl + Ts);
            TJ            = SIMD_FNMADD(KP250000000, Ts, Tl);
            T21           = SIMD_FMADD(KP951056516, T20, T1Z);
            T23           = SIMD_FNMADD(KP951056516, T20, T1Z);
            TA            = SIMD_FMADD(KP1_902113032, Tz, Tw);
            T16           = SIMD_FNMADD(KP1_902113032, Tz, Tw);
            T18           = SIMD_FMADD(KP1_902113032, TG, TD);
            TH            = SIMD_FNMADD(KP1_902113032, TG, TD);
            T1Q           = T1M + T1P;
            T1f           = T1b - T1e;
            T1D           = SIMD_FNMADD(KP250000000, T1u, T1v);
            T1w           = T1u + T1v;
            R0[WS(rs, 1)] = SIMD_FNMADD(KP2_000000000, Tt, Tb);
            TL            = SIMD_FMADD(KP559016994, TK, TJ);
            T1j           = SIMD_FNMADD(KP559016994, TK, TJ);
        }
        R0[WS(rs, 6)] =
            T5 + SIMD_FMADD(KP1_732050807, T1w + T1B, Ta) - (Tl + Ts) - Tk;
        R0[WS(rs, 11)] = Tb + SIMD_FMADD(KP1_732050807, T1B - T1w, Tt);
        T1F            = SIMD_FMADD(KP559016994, T1E, T1D);
        T1W            = SIMD_FNMADD(KP559016994, T1E, T1D);
        T14            = SIMD_FMADD(KP951056516, T13, TW);
        TT             = SIMD_FNMADD(KP951056516, TS, TL);
        T17            = SIMD_FMADD(KP951056516, TS, TL);
        T1l            = T1i - (SIMD_FMADD(KP951056516, T1k, T1j));
        T1p            = SIMD_FNMADD(KP951056516, T1k, T1j);
        TI             = TA + TH;
        T1T            = SIMD_FMADD(KP951056516, T1M, T1I);
        T1S            = SIMD_FNMADD(KP951056516, T1P, T1F);
        T1J            = T1F - T1I;
        T1Y            = SIMD_FNMADD(KP951056516, T1X, T1W);
        T22            = SIMD_FMADD(KP951056516, T1X, T1W);
        T1C            = T16 + T18 - (SIMD_FNMADD(KP951056516, T13, TW)) - T17;
        R0[WS(rs, 7)] =
            SIMD_FMADD(KP2_000000000, T17 - (SIMD_FNMADD(KP951056516, T13, TW)),
                       T16) -
            T18;
        T1U            = TA + T14 - TT - TH;
        T15            = TT + T14;
        R0[WS(rs, 13)] = SIMD_FNMADD(KP2_000000000, T1l, T1f);
        T1r            = T1p + T1q;
        T1V            = T1S + T1T;
        T1R            = SIMD_FMADD(KP951056516, T1Q, T1J);
        R0[WS(rs, 9)] =
            T1m + SIMD_FMADD(KP1_732050807, T22 + T23, T1q) - T1p - T1n;
        R0[WS(rs, 3)] = T1f + SIMD_FMADD(KP1_732050807, T1Y + T21, T1l);
        R0[WS(rs, 8)] = T1b + SIMD_FMADD(KP1_732050807, T21 - T1Y, T1e) - T1i -
                        (SIMD_FMADD(KP951056516, T1k, T1j));
        R0[0]          = SIMD_FMADD(KP1_732050807, T1S - T1T, TI) - T15;
        R0[WS(rs, 10)] = SIMD_FMADD(KP2_000000000, T15, TI);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T23 - T22, T1o) - T1r;
        R0[WS(rs, 4)]  = SIMD_FMADD(KP2_000000000, T1r, T1o);
        R0[WS(rs, 15)] = SIMD_FMADD(KP1_732050807, T1V, T1U);
        R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_732050807, T1V, T1U);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T1R, T1C);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T1R, T1C);
    }
}

template <>
struct r2cb_traits<30, 15>
{
    static constexpr long_t flops           = 211;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 45;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 15 -name
 * r2cb -standalone */

/*
 * This function contains 140 FP additions, 71 FP multiplications,
 * (or, 69 additions, 0 multiplications, 71 fused multiply/add),
 * 132 stack variables, 9 constants, and 45 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 15>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT Tl, Tc, T5, T1t, Ta, TV, T1f, T1T, Ts, T1C, T1z, Tb, T14, TA,
            T13;
        SIMD_FLOAT T16, T1V, T1D, TD, T1h, T19, T1k, T1l, T1c, T1s, T1E, TK,
            T1i, T1O, T1W;
        SIMD_FLOAT Tj, TN, T1m, T1F, T1B, T1u, T1n, T15, TL, T1Z, T1X, Tk, TM,
            T1d, T1G;
        SIMD_FLOAT T1S, Tt, TO, T1e, T1H, T1Y, T1U, T1o, T1g, T1A, TW, T1R, T1P,
            T1p, T1j;
        SIMD_FLOAT T1Q;
        {
            SIMD_FLOAT T18, Tz, T1b, T12, T1J, T17, Tw, TZ, T1a, T1L, TC, Tf,
                TE, TF, T1r;
            SIMD_FLOAT TJ, T1M, T1I, Tg, Th, TB, Tx, Ty, T10, T11, T1, T2, T3,
                TG, T1q;
            SIMD_FLOAT T1N, Ti;
            Tx  = Ci[WS(cs, 6)];
            Ty  = Ci[WS(cs, 12)];
            T10 = Ci[WS(cs, 9)];
            T11 = Ci[WS(cs, 3)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            {
                SIMD_FLOAT T6, T7, T8, T1y, Tm, Tn, T4, Tv, TS, TY, T9, TT, TP,
                    TQ, Tp;
                SIMD_FLOAT Tq, To, TU, T1w, TR, T1v, Tr, T1K, Td, Te, Tu, TX,
                    TH, TI, T1x;
                T6  = Cr[WS(cs, 15)];
                T7  = Cr[WS(cs, 9)];
                T8  = Cr[WS(cs, 3)];
                Tl  = Cr[WS(cs, 10)];
                T1y = Ci[WS(cs, 5)];
                Tm  = Cr[WS(cs, 14)];
                T18 = SIMD_FMSUB(KP618033988, Tx, Ty);
                Tz  = SIMD_FMADD(KP618033988, Ty, Tx);
                T1b = SIMD_FNMADD(KP618033988, T10, T11);
                T12 = SIMD_FMADD(KP618033988, T11, T10);
                Tn  = Cr[WS(cs, 4)];
                T4  = T2 + T3;
                Tv  = T2 - T3;
                TS  = Ci[WS(cs, 13)];
                TY  = T7 - T8;
                T9  = T7 + T8;
                TT  = Ci[WS(cs, 7)];
                TP  = Ci[WS(cs, 1)];
                TQ  = Ci[WS(cs, 11)];
                Tp  = Cr[WS(cs, 8)];
                Tq  = Cr[WS(cs, 2)];
                Tc  = Cr[WS(cs, 5)];
                T1J = Tn - Tm;
                To  = Tm + Tn;
                Tu  = SIMD_FNMADD(KP500000000, T4, T1);
                T5  = SIMD_FMADD(KP2_000000000, T4, T1);
                T1t = Ci[WS(cs, 10)];
                Ta  = SIMD_FMADD(KP2_000000000, T9, T6);
                TX  = SIMD_FNMADD(KP500000000, T9, T6);
                TU  = TS - TT;
                T1w = TS + TT;
                TR  = TP + TQ;
                T1v = TP - TQ;
                Tr  = Tp + Tq;
                T1K = Tp - Tq;
                Td  = Cr[WS(cs, 1)];
                T17 = SIMD_FNMADD(KP1_118033988, Tv, Tu);
                Tw  = SIMD_FMADD(KP1_118033988, Tv, Tu);
                Te  = Cr[WS(cs, 11)];
                TZ  = SIMD_FMADD(KP1_118033988, TY, TX);
                T1a = SIMD_FNMADD(KP1_118033988, TY, TX);
                TH  = Ci[WS(cs, 2)];
                TI  = Ci[WS(cs, 8)];
                T1x = T1v + T1w;
                T1L = T1v - T1w;
                TV  = SIMD_FNMADD(KP618033988, TU, TR);
                T1f = SIMD_FMADD(KP618033988, TR, TU);
                T1T = SIMD_FMADD(KP618033988, T1J, T1K);
                Ts  = To + Tr;
                TC  = Tr - To;
                T1C = Td - Te;
                Tf  = Td + Te;
                TE  = Ci[WS(cs, 14)];
                TF  = Ci[WS(cs, 4)];
                T1r = TH + TI;
                TJ  = TH - TI;
                T1M = SIMD_FMADD(KP951056516, T1L, T1K);
                T1z = T1x - T1y;
                T1I = SIMD_FMADD(KP250000000, T1x, T1y);
                Tg  = Cr[WS(cs, 7)];
                Th  = Cr[WS(cs, 13)];
                TB  = SIMD_FNMADD(KP250000000, Ts, Tl);
            }
            Tb  = T5 - Ta;
            T14 = SIMD_FNMADD(KP1_902113032, Tz, Tw);
            TA  = SIMD_FMADD(KP1_902113032, Tz, Tw);
            TG  = TE + TF;
            T1q = TF - TE;
            T13 = SIMD_FNMADD(KP1_902113032, T12, TZ);
            T16 = SIMD_FMADD(KP1_902113032, T12, TZ);
            T1N = SIMD_FNMADD(KP618033988, T1M, T1J);
            T1V = SIMD_FMADD(KP559016994, T1L, T1I);
            Ti  = Tg + Th;
            T1D = Tg - Th;
            TD  = SIMD_FNMADD(KP559016994, TC, TB);
            T1h = SIMD_FMADD(KP559016994, TC, TB);
            T19 = SIMD_FNMADD(KP1_902113032, T18, T17);
            T1k = SIMD_FMADD(KP1_902113032, T18, T17);
            T1l = SIMD_FMADD(KP1_902113032, T1b, T1a);
            T1c = SIMD_FNMADD(KP1_902113032, T1b, T1a);
            T1s = T1q - T1r;
            T1E = T1q + T1r;
            TK  = SIMD_FNMADD(KP618033988, TJ, TG);
            T1i = SIMD_FMADD(KP618033988, TG, TJ);
            T1O = SIMD_FMADD(KP951056516, T1N, T1I);
            T1W = SIMD_FNMADD(KP618033988, T1C, T1D);
            Tj  = Tf + Ti;
            TN  = Tf - Ti;
        }
        T1m = T1k + T1l;
        T1F = SIMD_FMADD(KP951056516, T1E, T1D);
        T1B = SIMD_FNMADD(KP250000000, T1s, T1t);
        T1u = T1s + T1t;
        T1n = SIMD_FNMADD(KP951056516, T1i, T1h);
        T15 = SIMD_FMADD(KP951056516, TK, TD);
        TL  = SIMD_FNMADD(KP951056516, TK, TD);
        T1Z = SIMD_FNMADD(KP951056516, T1W, T1V);
        T1X = SIMD_FMADD(KP951056516, T1W, T1V);
        Tk  = Tc + Tj;
        TM  = SIMD_FNMADD(KP250000000, Tj, Tc);
        T1d = T19 - T1c;
        T1G = SIMD_FMADD(KP618033988, T1F, T1C);
        T1S = SIMD_FNMADD(KP559016994, T1E, T1B);
        R0[WS(rs, 5)] =
            T5 + SIMD_FMADD(KP1_732050807, T1u + T1z, Ta) - (Tl + Ts) - Tk;
        Tt             = Tk - (Tl + Ts);
        TO             = SIMD_FMADD(KP559016994, TN, TM);
        T1e            = SIMD_FNMADD(KP559016994, TN, TM);
        T1H            = SIMD_FMADD(KP951056516, T1G, T1B);
        T1Y            = SIMD_FMADD(KP951056516, T1T, T1S);
        T1U            = SIMD_FNMADD(KP951056516, T1T, T1S);
        R0[WS(rs, 10)] = Tb + SIMD_FMADD(KP1_732050807, T1z - T1u, Tt);
        R0[0]          = SIMD_FNMADD(KP2_000000000, Tt, Tb);
        T1o            = SIMD_FMADD(KP951056516, T1f, T1e);
        T1g            = SIMD_FNMADD(KP951056516, T1f, T1e);
        T1A            = T14 + T16 - (SIMD_FNMADD(KP951056516, TV, TO)) - T15;
        R0[WS(rs, 6)] =
            SIMD_FMADD(KP2_000000000, T15 - (SIMD_FNMADD(KP951056516, TV, TO)),
                       T14) -
            T16;
        TW  = SIMD_FMADD(KP951056516, TV, TO);
        T1R = T1H + T1O;
        T1P = T1H - T1O;
        T1p = T1n + T1o;
        R0[WS(rs, 8)] =
            T1k + SIMD_FMADD(KP1_732050807, T1Y + T1Z, T1o) - T1l - T1n;
        T1j           = T1g - (SIMD_FMADD(KP951056516, T1i, T1h));
        R0[WS(rs, 7)] = T19 + SIMD_FMADD(KP1_732050807, T1X - T1U, T1c) - T1g -
                        (SIMD_FMADD(KP951056516, T1i, T1h));
        T1Q            = TA + TW - T13 - TL;
        R0[WS(rs, 9)]  = SIMD_FMADD(KP2_000000000, TL + TW, TA) + T13;
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T1P, T1A);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T1P, T1A);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T1Z - T1Y, T1m) - T1p;
        R0[WS(rs, 3)]  = SIMD_FMADD(KP2_000000000, T1p, T1m);
        R0[WS(rs, 2)]  = T1j + SIMD_FMADD(KP1_732050807, T1U + T1X, T1d);
        R0[WS(rs, 12)] = SIMD_FNMADD(KP2_000000000, T1j, T1d);
        R0[WS(rs, 14)] = SIMD_FMADD(KP1_732050807, T1R, T1Q);
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_732050807, T1R, T1Q);
    }
}

template <>
struct r2cb_traits<30, 16>
{
    static constexpr long_t flops           = 204;
    static constexpr long_t operations      = 134;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 130;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 16 -name
 * r2cb -standalone */

/*
 * This function contains 134 FP additions, 70 FP multiplications,
 * (or, 64 additions, 0 multiplications, 70 fused multiply/add),
 * 130 stack variables, 10 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 16>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, T4, Tc, T1u, T1T, Tt, T1d, T1G, Tb, TZ, T11, TY, T1f,
            T14, TF;
        SIMD_FLOAT T19, T1H, T1P, T1q, T1g, T17, T1t, T1I, TM, T1a, T1Q, Tj, Tl,
            T1E, T1h;
        SIMD_FLOAT T18, T1J, T1v, T1F, T1j, T1b, TN, T1R, T1V, Tk, T1K, T1w,
            T1S, Tm, T1c;
        SIMD_FLOAT T1L, T1W, T1U, T1e, T1i, T10, Tu, T1M, T1O, T1k, T1x, T1N;
        {
            SIMD_FLOAT TO, Tv, T13, Ta, T16, TX, TR, T1z, T12, T7, TU, T15, TG,
                TE, TC;
            SIMD_FLOAT T1B, Tf, TL, T1s, TH, Tg, TD, Th, T1C, T1y, T1p, TI, T1r,
                Ti, T1D;
            {
                SIMD_FLOAT T8, T9, TV, TW, T2, T3, TP, TQ, T1o, Tn, To, T6, Tz,
                    TT, TA;
                SIMD_FLOAT Tw, Tx, Tq, Tr, T1l, Tp, T5, Td, TS, T1A, TB, Ty,
                    T1m, Ts, Te;
                SIMD_FLOAT TJ, TK, T1n;
                T8  = Ci[WS(cs, 6)];
                T9  = Ci[WS(cs, 12)];
                TV  = Ci[WS(cs, 9)];
                TW  = Ci[WS(cs, 3)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                TO  = Cr[WS(cs, 15)];
                TP  = Cr[WS(cs, 9)];
                TQ  = Cr[WS(cs, 3)];
                Tv  = Cr[WS(cs, 5)];
                T1o = Ci[WS(cs, 10)];
                Tn  = Ci[WS(cs, 14)];
                T13 = SIMD_FMSUB(KP618033988, T8, T9);
                Ta  = SIMD_FMADD(KP618033988, T9, T8);
                T16 = SIMD_FNMADD(KP618033988, TV, TW);
                TX  = SIMD_FMADD(KP618033988, TW, TV);
                To  = Ci[WS(cs, 4)];
                T4  = T2 + T3;
                T6  = T2 - T3;
                Tz  = Cr[WS(cs, 7)];
                TT  = TP - TQ;
                TR  = TP + TQ;
                TA  = Cr[WS(cs, 13)];
                Tw  = Cr[WS(cs, 1)];
                Tx  = Cr[WS(cs, 11)];
                Tq  = Ci[WS(cs, 2)];
                Tr  = Ci[WS(cs, 8)];
                Tc  = Cr[WS(cs, 10)];
                T1l = To - Tn;
                Tp  = Tn + To;
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T1u = Ci[WS(cs, 5)];
                Td  = Cr[WS(cs, 14)];
                TS  = SIMD_FNMADD(KP500000000, TR, TO);
                T1A = Tz - TA;
                TB  = Tz + TA;
                T1z = Tw - Tx;
                Ty  = Tw + Tx;
                T1m = Tq + Tr;
                Ts  = Tq - Tr;
                Te  = Cr[WS(cs, 4)];
                TJ  = Ci[WS(cs, 13)];
                T12 = SIMD_FNMADD(KP1_118033988, T6, T5);
                T7  = SIMD_FMADD(KP1_118033988, T6, T5);
                TK  = Ci[WS(cs, 7)];
                TU  = SIMD_FMADD(KP1_118033988, TT, TS);
                T15 = SIMD_FNMADD(KP1_118033988, TT, TS);
                TG  = Ci[WS(cs, 1)];
                T1T = SIMD_FNMADD(KP618033988, T1z, T1A);
                TE  = Ty - TB;
                TC  = Ty + TB;
                T1n = T1l - T1m;
                T1B = T1l + T1m;
                Tt  = SIMD_FNMADD(KP618033988, Ts, Tp);
                T1d = SIMD_FMADD(KP618033988, Tp, Ts);
                Tf  = Td + Te;
                T1G = Te - Td;
                TL  = TJ - TK;
                T1s = TJ + TK;
                TH  = Ci[WS(cs, 11)];
                Tg  = Cr[WS(cs, 8)];
                TD  = SIMD_FNMADD(KP250000000, TC, Tv);
                Th  = Cr[WS(cs, 2)];
                T1C = SIMD_FMADD(KP951056516, T1B, T1A);
                T1y = SIMD_FNMADD(KP250000000, T1n, T1o);
                T1p = T1n + T1o;
            }
            Tb  = SIMD_FMADD(KP1_902113032, Ta, T7);
            TZ  = SIMD_FNMADD(KP1_902113032, Ta, T7);
            T11 = SIMD_FMADD(KP1_902113032, TX, TU);
            TY  = SIMD_FNMADD(KP1_902113032, TX, TU);
            T1f = SIMD_FMADD(KP1_902113032, T13, T12);
            T14 = SIMD_FNMADD(KP1_902113032, T13, T12);
            TI  = TG + TH;
            T1r = TG - TH;
            TF  = SIMD_FMADD(KP559016994, TE, TD);
            T19 = SIMD_FNMADD(KP559016994, TE, TD);
            Ti  = Tg + Th;
            T1H = Tg - Th;
            T1D = SIMD_FMADD(KP618033988, T1C, T1z);
            T1P = SIMD_FNMADD(KP559016994, T1B, T1y);
            T1q = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1p, TR),
                             TO) -
                  Tv - TC;
            T1g = SIMD_FMADD(KP1_902113032, T16, T15);
            T17 = SIMD_FNMADD(KP1_902113032, T16, T15);
            T1t = T1r + T1s;
            T1I = T1r - T1s;
            TM  = SIMD_FNMADD(KP618033988, TL, TI);
            T1a = SIMD_FMADD(KP618033988, TI, TL);
            T1Q = SIMD_FMADD(KP618033988, T1G, T1H);
            Tj  = Tf + Ti;
            Tl  = Ti - Tf;
            T1E = SIMD_FMADD(KP951056516, T1D, T1y);
        }
        T1h = T1f + T1g;
        T18 = T14 - T17;
        T1J = SIMD_FMADD(KP951056516, T1I, T1H);
        T1v = T1t - T1u;
        T1F = SIMD_FMADD(KP250000000, T1t, T1u);
        T1j = SIMD_FMADD(KP951056516, T1a, T19);
        T1b = SIMD_FNMADD(KP951056516, T1a, T19);
        TN  = SIMD_FMADD(KP951056516, TM, TF);
        T1R = SIMD_FNMADD(KP951056516, T1Q, T1P);
        T1V = SIMD_FMADD(KP951056516, T1Q, T1P);
        Tk  = SIMD_FNMADD(KP250000000, Tj, Tc);
        T1K = SIMD_FNMADD(KP618033988, T1J, T1G);
        T1w = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1v, T4), T1) -
              Tc - Tj;
        T1S           = SIMD_FMADD(KP559016994, T1I, T1F);
        Tm            = SIMD_FNMADD(KP559016994, Tl, Tk);
        T1c           = SIMD_FMADD(KP559016994, Tl, Tk);
        T1L           = SIMD_FMADD(KP951056516, T1K, T1F);
        R0[WS(rs, 9)] = T1w - T1q;
        R0[WS(rs, 4)] = T1q + T1w;
        T1W           = SIMD_FNMADD(KP951056516, T1T, T1S);
        T1U           = SIMD_FMADD(KP951056516, T1T, T1S);
        T1e           = T1b - (SIMD_FMADD(KP951056516, T1d, T1c));
        T1i           = SIMD_FNMADD(KP951056516, T1d, T1c);
        T10           = SIMD_FMADD(KP951056516, Tt, Tm);
        Tu            = SIMD_FNMADD(KP951056516, Tt, Tm);
        T1M           = T1E - T1L;
        T1O           = T1E + T1L;
        R0[WS(rs, 6)] = T14 + SIMD_FMADD(KP1_732050807, T1U - T1R, T17) - T1b -
                        (SIMD_FMADD(KP951056516, T1d, T1c));
        R0[WS(rs, 1)]  = T1e + SIMD_FMADD(KP1_732050807, T1R + T1U, T18);
        R0[WS(rs, 11)] = SIMD_FNMADD(KP2_000000000, T1e, T18);
        T1k            = T1i + T1j;
        R0[WS(rs, 7)] =
            T1f + SIMD_FMADD(KP1_732050807, T1V + T1W, T1j) - T1g - T1i;
        T1x = TZ + T11 - (SIMD_FNMADD(KP951056516, TM, TF)) - T10;
        R0[WS(rs, 5)] =
            SIMD_FMADD(KP2_000000000, T10 - (SIMD_FNMADD(KP951056516, TM, TF)),
                       TZ) -
            T11;
        T1N            = Tb + TN - TY - Tu;
        R0[WS(rs, 8)]  = SIMD_FMADD(KP2_000000000, Tu + TN, Tb) + TY;
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T1W - T1V, T1h) - T1k;
        R0[WS(rs, 2)]  = SIMD_FMADD(KP2_000000000, T1k, T1h);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T1M, T1x);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T1M, T1x);
        R0[WS(rs, 13)] = SIMD_FMADD(KP1_732050807, T1O, T1N);
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_732050807, T1O, T1N);
    }
}

template <>
struct r2cb_traits<30, 17>
{
    static constexpr long_t flops           = 198;
    static constexpr long_t operations      = 131;
    static constexpr long_t memory_accesses = 43;
    static constexpr long_t stack_vars      = 130;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 17 -name
 * r2cb -standalone */

/*
 * This function contains 131 FP additions, 67 FP multiplications,
 * (or, 64 additions, 0 multiplications, 67 fused multiply/add),
 * 130 stack variables, 10 constants, and 43 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 17>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, T4, To, T1w, T1L, TF, T1h, T1C, T19, T1j, T1m, T1c, T11,
            Tb, T1d;
        SIMD_FLOAT TR, T1D, T1B, T1s, T12, Tm, T1v, T1H, TY, T1e, T1E, Tv, Tx,
            T1R, T13;
        SIMD_FLOAT Tn, T1S, T1x, T1G, T1l, T1f, T15, TZ, T1N, T1F, Tw, T1T, T1y,
            T1I, Ty;
        SIMD_FLOAT T1g, T1U, T1M, T1O, TG, T14, T1i, T1k, T1W, T16, T10, T1V;
        {
            SIMD_FLOAT Tc, TH, T18, Ta, T1b, Tl, Tf, T1K, T17, T7, Ti, T1a, TS,
                TQ, TO;
            SIMD_FLOAT T1A, Tr, TX, T1u, TT, Ts, TP, Tt, T1P, T1z, T1r, TU, T1t,
                Tu, T1Q;
            {
                SIMD_FLOAT T8, T9, Tj, Tk, T2, T3, Td, Te, T1q, Tz, TA, T6, TL,
                    Th, TM;
                SIMD_FLOAT TI, TJ, TC, TD, T1o, TB, T5, Tp, Tg, T1J, TN, TK,
                    T1n, TE, Tq;
                SIMD_FLOAT TV, TW, T1p;
                T8  = Ci[WS(cs, 12)];
                T9  = Ci[WS(cs, 6)];
                Tj  = Ci[WS(cs, 3)];
                Tk  = Ci[WS(cs, 9)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                Tc  = Cr[WS(cs, 15)];
                Td  = Cr[WS(cs, 9)];
                Te  = Cr[WS(cs, 3)];
                TH  = Cr[WS(cs, 5)];
                T1q = Ci[WS(cs, 10)];
                Tz  = Ci[WS(cs, 2)];
                T18 = SIMD_FMADD(KP618033988, T8, T9);
                Ta  = SIMD_FMSUB(KP618033988, T9, T8);
                T1b = SIMD_FMADD(KP618033988, Tj, Tk);
                Tl  = SIMD_FNMADD(KP618033988, Tk, Tj);
                TA  = Ci[WS(cs, 8)];
                T4  = T2 + T3;
                T6  = T2 - T3;
                TL  = Cr[WS(cs, 7)];
                Th  = Td - Te;
                Tf  = Td + Te;
                TM  = Cr[WS(cs, 13)];
                TI  = Cr[WS(cs, 1)];
                TJ  = Cr[WS(cs, 11)];
                TC  = Ci[WS(cs, 14)];
                TD  = Ci[WS(cs, 4)];
                To  = Cr[WS(cs, 10)];
                T1o = Tz + TA;
                TB  = Tz - TA;
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T1w = Ci[WS(cs, 5)];
                Tp  = Cr[WS(cs, 8)];
                Tg  = SIMD_FNMADD(KP500000000, Tf, Tc);
                T1J = TL - TM;
                TN  = TL + TM;
                T1K = TI - TJ;
                TK  = TI + TJ;
                T1n = TD - TC;
                TE  = TC + TD;
                Tq  = Cr[WS(cs, 2)];
                TV  = Ci[WS(cs, 1)];
                T17 = SIMD_FMADD(KP1_118033988, T6, T5);
                T7  = SIMD_FNMADD(KP1_118033988, T6, T5);
                TW  = Ci[WS(cs, 11)];
                Ti  = SIMD_FNMADD(KP1_118033988, Th, Tg);
                T1a = SIMD_FMADD(KP1_118033988, Th, Tg);
                TS  = Ci[WS(cs, 13)];
                T1L = SIMD_FNMADD(KP618033988, T1K, T1J);
                TQ  = TK - TN;
                TO  = TK + TN;
                T1p = T1n - T1o;
                T1A = T1n + T1o;
                TF  = SIMD_FMADD(KP618033988, TE, TB);
                T1h = SIMD_FNMADD(KP618033988, TB, TE);
                Tr  = Tp + Tq;
                T1C = Tp - Tq;
                TX  = TV + TW;
                T1u = TV - TW;
                TT  = Ci[WS(cs, 7)];
                Ts  = Cr[WS(cs, 14)];
                TP  = SIMD_FNMADD(KP250000000, TO, TH);
                Tt  = Cr[WS(cs, 4)];
                T1P = SIMD_FMADD(KP951056516, T1A, T1J);
                T1z = SIMD_FNMADD(KP250000000, T1p, T1q);
                T1r = T1p + T1q;
            }
            T19 = SIMD_FMADD(KP1_902113032, T18, T17);
            T1j = SIMD_FNMADD(KP1_902113032, T18, T17);
            T1m = SIMD_FMADD(KP1_902113032, T1b, T1a);
            T1c = SIMD_FNMADD(KP1_902113032, T1b, T1a);
            T11 = SIMD_FMADD(KP1_902113032, Ta, T7);
            Tb  = SIMD_FNMADD(KP1_902113032, Ta, T7);
            TU  = TS - TT;
            T1t = TS + TT;
            T1d = SIMD_FMADD(KP559016994, TQ, TP);
            TR  = SIMD_FNMADD(KP559016994, TQ, TP);
            Tu  = Ts + Tt;
            T1D = Tt - Ts;
            T1Q = SIMD_FMADD(KP618033988, T1P, T1K);
            T1B = SIMD_FNMADD(KP559016994, T1A, T1z);
            T1s = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1r, Tf),
                             Tc) -
                  TH - TO;
            T12 = SIMD_FMADD(KP1_902113032, Tl, Ti);
            Tm  = SIMD_FNMADD(KP1_902113032, Tl, Ti);
            T1v = T1t + T1u;
            T1H = T1u - T1t;
            TY  = SIMD_FMADD(KP618033988, TX, TU);
            T1e = SIMD_FNMADD(KP618033988, TU, TX);
            T1E = SIMD_FMADD(KP618033988, T1D, T1C);
            Tv  = Tr + Tu;
            Tx  = Tr - Tu;
            T1R = SIMD_FMADD(KP951056516, T1Q, T1z);
        }
        T13 = T11 + T12;
        Tn  = Tb - Tm;
        T1S = SIMD_FMADD(KP951056516, T1H, T1C);
        T1x = T1v - T1w;
        T1G = SIMD_FMADD(KP250000000, T1v, T1w);
        T1l = SIMD_FNMADD(KP951056516, T1e, T1d);
        T1f = SIMD_FMADD(KP951056516, T1e, T1d);
        T15 = SIMD_FMADD(KP951056516, TY, TR);
        TZ  = SIMD_FNMADD(KP951056516, TY, TR);
        T1N = SIMD_FMADD(KP951056516, T1E, T1B);
        T1F = SIMD_FNMADD(KP951056516, T1E, T1B);
        Tw  = SIMD_FMSUB(KP250000000, Tv, To);
        T1T = SIMD_FNMADD(KP618033988, T1S, T1D);
        T1y = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1x, T4), T1) -
              Tv - To;
        T1I           = SIMD_FMADD(KP559016994, T1H, T1G);
        Ty            = SIMD_FNMADD(KP559016994, Tx, Tw);
        T1g           = SIMD_FMADD(KP559016994, Tx, Tw);
        T1U           = SIMD_FMADD(KP951056516, T1T, T1G);
        R0[WS(rs, 8)] = T1y - T1s;
        R0[WS(rs, 3)] = T1s + T1y;
        T1M           = SIMD_FMADD(KP951056516, T1L, T1I);
        T1O           = SIMD_FNMADD(KP951056516, T1L, T1I);
        TG            = SIMD_FNMADD(KP951056516, TF, Ty);
        T14           = SIMD_FMADD(KP951056516, TF, Ty);
        T1i           = SIMD_FMADD(KP951056516, T1h, T1g);
        T1k           = SIMD_FNMADD(KP951056516, T1h, T1g);
        T1W           = T1R + T1U;
        T16           = T14 - T15;
        R0[WS(rs, 6)] =
            T11 + T14 + SIMD_FMADD(KP1_732050807, T1N + T1O, T15) - T12;
        T10           = TG + TZ;
        R0[WS(rs, 5)] = Tb + Tm + SIMD_FMADD(KP1_732050807, T1M - T1F, TG) - TZ;
        R0[WS(rs, 9)] =
            T1j + T1m + SIMD_FMADD(KP1_732050807, T1R - T1U, T1k) - T1l;
        R0[WS(rs, 4)]  = SIMD_FNMADD(KP2_000000000, T1k + T1l, T1j) - T1m;
        T1V            = T19 + T1i + T1f - T1c;
        R0[WS(rs, 7)]  = T19 + SIMD_FMADD(KP2_000000000, T1f - T1i, T1c);
        R0[WS(rs, 11)] = T13 + SIMD_FMADD(KP1_732050807, T1O - T1N, T16);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP2_000000000, T16, T13);
        R0[0]          = Tn + SIMD_FMADD(KP1_732050807, T1F + T1M, T10);
        R0[WS(rs, 10)] = SIMD_FNMADD(KP2_000000000, T10, Tn);
        R0[WS(rs, 12)] = SIMD_FMADD(KP1_732050807, T1W, T1V);
        R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_732050807, T1W, T1V);
    }
}

template <>
struct r2cb_traits<30, 18>
{
    static constexpr long_t flops           = 193;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 128;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 18 -name
 * r2cb -standalone */

/*
 * This function contains 128 FP additions, 65 FP multiplications,
 * (or, 63 additions, 0 multiplications, 65 fused multiply/add),
 * 128 stack variables, 10 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 18>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, T4, To, T1u, T1R, TF, T1f, T1G, T17, T1h, T1k, T1a, T11,
            Tb, TR;
        SIMD_FLOAT T1b, T1F, T1q, T14, Tm, T1O, T1t, T1H, TY, T1c, T1Q, Tv, Tx,
            T1D, Tn;
        SIMD_FLOAT T1I, T1E, T1v, T1d, T1j, TZ, T13, T1T, T1S, Tw, T1J, T1w,
            T1N, T1e, Ty;
        SIMD_FLOAT T1K, T1U, T1P, T12, TG, T1i, T1g, T1M, T10, T1L;
        {
            SIMD_FLOAT Tc, TH, T16, Ta, T19, Tl, Tf, T1y, T15, T7, Ti, T18, TS,
                TQ, TO;
            SIMD_FLOAT T1A, Tr, TX, T1s, TT, Ts, TP, Tt, T1B, T1x, T1p, TU, T1r,
                Tu, T1C;
            {
                SIMD_FLOAT T8, T9, Tj, Tk, T2, T3, Td, Te, T1o, Tz, TA, T6, TL,
                    Th, TM;
                SIMD_FLOAT TI, TJ, TC, TD, T1m, TB, T5, Tp, Tg, T1z, TN, TK,
                    T1l, TE, Tq;
                SIMD_FLOAT TV, TW, T1n;
                T8  = Ci[WS(cs, 12)];
                T9  = Ci[WS(cs, 6)];
                Tj  = Ci[WS(cs, 3)];
                Tk  = Ci[WS(cs, 9)];
                T1  = Cr[0];
                T2  = Cr[WS(cs, 6)];
                T3  = Cr[WS(cs, 12)];
                Tc  = Cr[WS(cs, 15)];
                Td  = Cr[WS(cs, 9)];
                Te  = Cr[WS(cs, 3)];
                TH  = Cr[WS(cs, 5)];
                T1o = Ci[WS(cs, 10)];
                Tz  = Ci[WS(cs, 2)];
                T16 = SIMD_FMADD(KP618033988, T8, T9);
                Ta  = SIMD_FMSUB(KP618033988, T9, T8);
                T19 = SIMD_FMADD(KP618033988, Tj, Tk);
                Tl  = SIMD_FNMADD(KP618033988, Tk, Tj);
                TA  = Ci[WS(cs, 8)];
                T4  = T2 + T3;
                T6  = T2 - T3;
                TL  = Cr[WS(cs, 7)];
                Th  = Td - Te;
                Tf  = Td + Te;
                TM  = Cr[WS(cs, 13)];
                TI  = Cr[WS(cs, 1)];
                TJ  = Cr[WS(cs, 11)];
                TC  = Ci[WS(cs, 14)];
                TD  = Ci[WS(cs, 4)];
                To  = Cr[WS(cs, 10)];
                T1m = Tz + TA;
                TB  = Tz - TA;
                T5  = SIMD_FNMADD(KP500000000, T4, T1);
                T1u = Ci[WS(cs, 5)];
                Tp  = Cr[WS(cs, 8)];
                Tg  = SIMD_FNMADD(KP500000000, Tf, Tc);
                T1z = TL - TM;
                TN  = TL + TM;
                T1y = TI - TJ;
                TK  = TI + TJ;
                T1l = TD - TC;
                TE  = TC + TD;
                Tq  = Cr[WS(cs, 2)];
                TV  = Ci[WS(cs, 1)];
                T15 = SIMD_FMADD(KP1_118033988, T6, T5);
                T7  = SIMD_FNMADD(KP1_118033988, T6, T5);
                TW  = Ci[WS(cs, 11)];
                Ti  = SIMD_FNMADD(KP1_118033988, Th, Tg);
                T18 = SIMD_FMADD(KP1_118033988, Th, Tg);
                TS  = Ci[WS(cs, 13)];
                T1R = SIMD_FNMADD(KP618033988, T1y, T1z);
                TQ  = TK - TN;
                TO  = TK + TN;
                T1n = T1l - T1m;
                T1A = T1l + T1m;
                TF  = SIMD_FMADD(KP618033988, TE, TB);
                T1f = SIMD_FNMADD(KP618033988, TB, TE);
                Tr  = Tp + Tq;
                T1G = Tp - Tq;
                TX  = TV + TW;
                T1s = TV - TW;
                TT  = Ci[WS(cs, 7)];
                Ts  = Cr[WS(cs, 14)];
                TP  = SIMD_FNMADD(KP250000000, TO, TH);
                Tt  = Cr[WS(cs, 4)];
                T1B = SIMD_FMADD(KP951056516, T1A, T1z);
                T1x = SIMD_FNMADD(KP250000000, T1n, T1o);
                T1p = T1n + T1o;
            }
            T17 = SIMD_FMADD(KP1_902113032, T16, T15);
            T1h = SIMD_FNMADD(KP1_902113032, T16, T15);
            T1k = SIMD_FMADD(KP1_902113032, T19, T18);
            T1a = SIMD_FNMADD(KP1_902113032, T19, T18);
            T11 = SIMD_FNMADD(KP1_902113032, Ta, T7);
            Tb  = SIMD_FMADD(KP1_902113032, Ta, T7);
            TU  = TS - TT;
            T1r = TS + TT;
            TR  = SIMD_FNMADD(KP559016994, TQ, TP);
            T1b = SIMD_FMADD(KP559016994, TQ, TP);
            T1F = Tt - Ts;
            Tu  = Ts + Tt;
            T1C = SIMD_FMADD(KP618033988, T1B, T1y);
            T1q = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1p, Tf),
                             Tc) -
                  TH - TO;
            T14 = SIMD_FNMADD(KP1_902113032, Tl, Ti);
            Tm  = SIMD_FMADD(KP1_902113032, Tl, Ti);
            T1O = SIMD_FNMADD(KP559016994, T1A, T1x);
            T1t = T1r + T1s;
            T1H = T1s - T1r;
            TY  = SIMD_FMADD(KP618033988, TX, TU);
            T1c = SIMD_FNMADD(KP618033988, TU, TX);
            T1Q = SIMD_FMADD(KP618033988, T1F, T1G);
            Tv  = Tr + Tu;
            Tx  = Tr - Tu;
            T1D = SIMD_FMADD(KP951056516, T1C, T1x);
        }
        Tn  = Tb + Tm;
        T1I = SIMD_FMADD(KP951056516, T1H, T1G);
        T1E = SIMD_FMADD(KP250000000, T1t, T1u);
        T1v = T1t - T1u;
        T1d = SIMD_FMADD(KP951056516, T1c, T1b);
        T1j = SIMD_FNMADD(KP951056516, T1c, T1b);
        TZ  = SIMD_FMADD(KP951056516, TY, TR);
        T13 = SIMD_FNMADD(KP951056516, TY, TR);
        T1T = SIMD_FMADD(KP951056516, T1Q, T1O);
        T1S = T1Q + T1R;
        Tw  = SIMD_FMSUB(KP250000000, Tv, To);
        T1J = SIMD_FNMADD(KP618033988, T1I, T1F);
        T1w = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1v, T4), T1) -
              Tv - To;
        T1N           = SIMD_FMADD(KP559016994, T1H, T1E);
        T1e           = SIMD_FMADD(KP559016994, Tx, Tw);
        Ty            = SIMD_FNMADD(KP559016994, Tx, Tw);
        T1K           = SIMD_FMADD(KP951056516, T1J, T1E);
        R0[WS(rs, 7)] = T1w - T1q;
        R0[WS(rs, 2)] = T1q + T1w;
        T1U           = SIMD_FNMADD(KP951056516, T1R, T1N);
        T1P           = T1N - T1O;
        T12           = SIMD_FNMADD(KP951056516, TF, Ty);
        TG            = SIMD_FMADD(KP951056516, TF, Ty);
        T1i           = SIMD_FNMADD(KP951056516, T1f, T1e);
        T1g           = SIMD_FMADD(KP951056516, T1f, T1e);
        T1M           = T1D + T1K;
        R0[WS(rs, 4)] =
            T11 + T14 +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1S, T1P), T12) -
            T13;
        R0[WS(rs, 9)] = SIMD_FNMADD(KP2_000000000, T12 + T13, T11) - T14;
        T10           = TG - TZ;
        R0[WS(rs, 5)] = Tb + TG + SIMD_FMADD(KP1_732050807, T1T + T1U, TZ) - Tm;
        R0[WS(rs, 8)] =
            T1h + T1k + SIMD_FMADD(KP1_732050807, T1D - T1K, T1i) - T1j;
        R0[WS(rs, 3)]  = SIMD_FNMADD(KP2_000000000, T1i + T1j, T1h) - T1k;
        T1L            = T17 + T1g + T1d - T1a;
        R0[WS(rs, 6)]  = T17 + SIMD_FMADD(KP2_000000000, T1d - T1g, T1a);
        R0[WS(rs, 10)] = Tn + SIMD_FMADD(KP1_732050807, T1U - T1T, T10);
        R0[0]          = SIMD_FNMADD(KP2_000000000, T10, Tn);
        R0[WS(rs, 11)] = SIMD_FMADD(KP1_732050807, T1M, T1L);
        R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_732050807, T1M, T1L);
    }
}

template <>
struct r2cb_traits<30, 19>
{
    static constexpr long_t flops           = 191;
    static constexpr long_t operations      = 125;
    static constexpr long_t memory_accesses = 41;
    static constexpr long_t stack_vars      = 126;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 19 -name
 * r2cb -standalone */

/*
 * This function contains 125 FP additions, 66 FP multiplications,
 * (or, 59 additions, 0 multiplications, 66 fused multiply/add),
 * 126 stack variables, 12 constants, and 41 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 19>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, T13, T1b, T4, Tn, T12, T1a, T1J, TE, T16, Tq, T1x, T1p,
            T1O, TZ;
        SIMD_FLOAT Tb, Tm, T11, T1z, TX, T19, Tt, T1y, T18, TQ, T1i, T1u, T1w,
            T1n, T1G;
        SIMD_FLOAT Tc, TG, Ta, Tl, Tf, T1m, T1q, T7, Ti, Tr, TP, TN, T1s, TW,
            T1k;
        SIMD_FLOAT TT, T1j, TO, Ts, T1h, T1t, T1l, T1I, T1A, Tu, Tw, TY, T1v,
            T14, T1c;
        SIMD_FLOAT T1F, T1K, T1L, T1B, T1o, Tv, T1P, T1H, T1M, T1C, T15, Tx,
            T1N, T1E, T1Q;
        SIMD_FLOAT T17, T10, TF, T1D;
        {
            SIMD_FLOAT T8, T9, Tj, Tk, T2, T3, Td, Te, T1g, Ty, Tz, T6, TK, Th,
                TL;
            SIMD_FLOAT TH, TI, TB, TC, T1d, TA, T5, To, Tg, T1r, TM, TJ, T1e,
                TD, Tp;
            SIMD_FLOAT TU, TV, TR, TS, T1f;
            T8  = Ci[WS(cs, 6)];
            T9  = Ci[WS(cs, 12)];
            Tj  = Ci[WS(cs, 9)];
            Tk  = Ci[WS(cs, 3)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            Tc  = Cr[WS(cs, 15)];
            Td  = Cr[WS(cs, 9)];
            Te  = Cr[WS(cs, 3)];
            TG  = Cr[WS(cs, 5)];
            T1g = Ci[WS(cs, 10)];
            Ty  = Ci[WS(cs, 14)];
            T13 = SIMD_FMSUB(KP618033988, T8, T9);
            Ta  = SIMD_FMADD(KP618033988, T9, T8);
            T1b = SIMD_FMSUB(KP618033988, Tj, Tk);
            Tl  = SIMD_FMADD(KP618033988, Tk, Tj);
            Tz  = Ci[WS(cs, 4)];
            T4  = T2 + T3;
            T6  = T2 - T3;
            TK  = Cr[WS(cs, 7)];
            Th  = Td - Te;
            Tf  = Td + Te;
            TL  = Cr[WS(cs, 13)];
            TH  = Cr[WS(cs, 1)];
            TI  = Cr[WS(cs, 11)];
            TB  = Ci[WS(cs, 2)];
            TC  = Ci[WS(cs, 8)];
            Tn  = Cr[WS(cs, 10)];
            T1d = Tz - Ty;
            TA  = Ty + Tz;
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1m = Ci[WS(cs, 5)];
            To  = Cr[WS(cs, 14)];
            Tg  = SIMD_FNMADD(KP500000000, Tf, Tc);
            T1r = TK - TL;
            TM  = TK + TL;
            T1q = TH - TI;
            TJ  = TH + TI;
            T1e = TB + TC;
            TD  = TB - TC;
            Tp  = Cr[WS(cs, 4)];
            TU  = Ci[WS(cs, 13)];
            T7  = SIMD_FMADD(KP1_118033988, T6, T5);
            T12 = SIMD_FNMADD(KP1_118033988, T6, T5);
            TV  = Ci[WS(cs, 7)];
            TR  = Ci[WS(cs, 1)];
            T1a = SIMD_FNMADD(KP1_118033988, Th, Tg);
            Ti  = SIMD_FMADD(KP1_118033988, Th, Tg);
            TS  = Ci[WS(cs, 11)];
            Tr  = Cr[WS(cs, 8)];
            T1J = SIMD_FNMADD(KP618033988, T1q, T1r);
            TP  = TJ - TM;
            TN  = TJ + TM;
            T1s = T1d + T1e;
            T1f = T1d - T1e;
            TE  = SIMD_FNMADD(KP618033988, TD, TA);
            T16 = SIMD_FMADD(KP618033988, TA, TD);
            Tq  = To + Tp;
            T1x = Tp - To;
            TW  = TU - TV;
            T1k = TU + TV;
            TT  = TR + TS;
            T1j = TR - TS;
            TO  = SIMD_FNMADD(KP250000000, TN, TG);
            Ts  = Cr[WS(cs, 2)];
            T1h = T1f + T1g;
            T1p = SIMD_FNMADD(KP250000000, T1f, T1g);
            T1t = SIMD_FMADD(KP951056516, T1s, T1r);
            T1O = SIMD_FNMADD(KP577350269, T16, T1J);
        }
        TZ  = SIMD_FNMADD(KP1_902113032, Ta, T7);
        Tb  = SIMD_FMADD(KP1_902113032, Ta, T7);
        Tm  = SIMD_FNMADD(KP1_902113032, Tl, Ti);
        T11 = SIMD_FMADD(KP1_902113032, Tl, Ti);
        T1z = T1j - T1k;
        T1l = T1j + T1k;
        TX  = SIMD_FNMADD(KP618033988, TW, TT);
        T19 = SIMD_FMADD(KP618033988, TT, TW);
        Tt  = Tr + Ts;
        T1y = Tr - Ts;
        T18 = SIMD_FNMADD(KP559016994, TP, TO);
        TQ  = SIMD_FMADD(KP559016994, TP, TO);
        T1i = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1h, Tf), Tc) -
              TG - TN;
        T1u = SIMD_FMADD(KP618033988, T1t, T1q);
        T1w = SIMD_FMADD(KP250000000, T1l, T1m);
        T1n = T1l - T1m;
        T1G = SIMD_FNMADD(KP559016994, T1s, T1p);
        T1I = SIMD_FMADD(KP618033988, T1x, T1y);
        T1A = SIMD_FMADD(KP951056516, T1z, T1y);
        Tu  = Tq + Tt;
        Tw  = Tt - Tq;
        TY  = SIMD_FMADD(KP951056516, TX, TQ);
        T1v = SIMD_FMADD(KP951056516, T1u, T1p);
        T14 = SIMD_FNMADD(KP1_902113032, T13, T12);
        T1c = SIMD_FMADD(KP1_902113032, T1b, T1a);
        T1F = SIMD_FMADD(KP559016994, T1z, T1w);
        T1K = T1I + T1J;
        T1L = SIMD_FMADD(KP577350269, T19, T1I);
        T1B = SIMD_FNMADD(KP618033988, T1A, T1x);
        T1o = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1n, T4), T1) -
              Tn - Tu;
        Tv            = SIMD_FNMADD(KP250000000, Tu, Tn);
        T1P           = SIMD_FNMADD(KP951056516, T1O, T1F);
        T1H           = T1F - T1G;
        T1M           = SIMD_FMADD(KP951056516, T1L, T1G);
        T1C           = SIMD_FMADD(KP951056516, T1B, T1w);
        R0[WS(rs, 6)] = T1o - T1i;
        R0[WS(rs, 1)] = T1i + T1o;
        T15           = SIMD_FMADD(KP559016994, Tw, Tv);
        Tx            = SIMD_FNMADD(KP559016994, Tw, Tv);
        T1N =
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1M, T1b), T18) -
            T1a;
        T1E = T1v + T1C;
        T1Q =
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1P, T13), T12) -
            T15;
        T17           = SIMD_FMADD(KP951056516, T16, T15);
        T10           = SIMD_FMADD(KP951056516, TE, Tx);
        TF            = SIMD_FNMADD(KP951056516, TE, Tx);
        R0[WS(rs, 9)] = T1Q - T1N;
        R0[WS(rs, 4)] = T1N + T1Q;
        R0[WS(rs, 3)] =
            T14 +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1K, T1H), T1c) -
            T17 - (SIMD_FNMADD(KP951056516, T19, T18));
        R0[WS(rs, 8)] =
            SIMD_FMADD(KP2_000000000,
                       T17 - (SIMD_FNMADD(KP951056516, T19, T18)), T14) -
            T1c;
        R0[WS(rs, 7)] = TZ + SIMD_FMADD(KP1_732050807, T1v - T1C, T11) -
                        (SIMD_FNMADD(KP951056516, TX, TQ)) - T10;
        R0[WS(rs, 2)] =
            SIMD_FMADD(KP2_000000000, T10 - (SIMD_FNMADD(KP951056516, TX, TQ)),
                       TZ) -
            T11;
        T1D            = Tb + TY - TF - Tm;
        R0[WS(rs, 5)]  = Tb + SIMD_FMADD(KP2_000000000, TF + TY, Tm);
        R0[WS(rs, 10)] = SIMD_FMADD(KP1_732050807, T1E, T1D);
        R0[0]          = SIMD_FNMADD(KP1_732050807, T1E, T1D);
    }
}

template <>
struct r2cb_traits<30, 20>
{
    static constexpr long_t flops           = 190;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 123;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 20 -name
 * r2cb -standalone */

/*
 * This function contains 124 FP additions, 66 FP multiplications,
 * (or, 58 additions, 0 multiplications, 66 fused multiply/add),
 * 123 stack variables, 12 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 20>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1x, T1A, T1z, T11, T1v, T1L, TH, T1n, T1q, T1w, T1r, T1p,
            T19, T1H, T1I;
        SIMD_FLOAT TI, T1g, T1o, TV, T1t, T1B, T1C, TY, T1u, T1y, TN, Tm, T1D,
            T1J, T12;
        SIMD_FLOAT TO, T1M, T1E, T1K, T1N;
        {
            SIMD_FLOAT Tn, T1, TF, TG, T18, T1m, Tq, T14, T1i, T4, T5, TZ, Tt,
                T13, Te;
            SIMD_FLOAT T6, T1h, TR, TD, TQ, TA, T10, Tw, T7, Ti, Tj, Tf, Tg, T9,
                Ta;
            SIMD_FLOAT T16, T17, T1k, T1l, To, Tp, T2, T3, Tr, Ts, TB, TC, Ty,
                Tz, Tu;
            SIMD_FLOAT Tv;
            T16 = Ci[WS(cs, 6)];
            T17 = Ci[WS(cs, 12)];
            T1k = Ci[WS(cs, 9)];
            T1l = Ci[WS(cs, 3)];
            Tn  = Cr[0];
            To  = Cr[WS(cs, 6)];
            Tp  = Cr[WS(cs, 12)];
            T1  = Cr[WS(cs, 15)];
            T2  = Cr[WS(cs, 9)];
            T3  = Cr[WS(cs, 3)];
            TF  = Cr[WS(cs, 10)];
            TG  = Ci[WS(cs, 5)];
            Tr  = Ci[WS(cs, 1)];
            T1x = SIMD_FMSUB(KP618033988, T16, T17);
            T18 = SIMD_FMADD(KP618033988, T17, T16);
            T1A = SIMD_FNMADD(KP618033988, T1k, T1l);
            T1m = SIMD_FMADD(KP618033988, T1l, T1k);
            Ts  = Ci[WS(cs, 11)];
            Tq  = To + Tp;
            T14 = To - Tp;
            TB  = Cr[WS(cs, 8)];
            T1i = T2 - T3;
            T4  = T2 + T3;
            TC  = Cr[WS(cs, 2)];
            Ty  = Cr[WS(cs, 14)];
            Tz  = Cr[WS(cs, 4)];
            Tu  = Ci[WS(cs, 7)];
            Tv  = Ci[WS(cs, 13)];
            T5  = Ci[WS(cs, 10)];
            TZ  = Tr + Ts;
            Tt  = Tr - Ts;
            T13 = SIMD_FNMADD(KP500000000, Tq, Tn);
            Te  = Cr[WS(cs, 5)];
            T6  = Ci[WS(cs, 4)];
            T1h = SIMD_FNMADD(KP500000000, T4, T1);
            TR  = TB - TC;
            TD  = TB + TC;
            TQ  = Tz - Ty;
            TA  = Ty + Tz;
            T10 = Tu - Tv;
            Tw  = Tu + Tv;
            T7  = Ci[WS(cs, 14)];
            Ti  = Cr[WS(cs, 7)];
            Tj  = Cr[WS(cs, 13)];
            Tf  = Cr[WS(cs, 1)];
            Tg  = Cr[WS(cs, 11)];
            T9  = Ci[WS(cs, 8)];
            Ta  = Ci[WS(cs, 2)];
            {
                SIMD_FLOAT T1G, TS, TK, TJ, TP, T15, T1F, Tl, TX, T1s, T1f, TL,
                    Tc, T1c, TU;
                SIMD_FLOAT T1b, T8, T1d, Tk, Th, Tb, T1e, T1a, TT, T1j, TE, Tx,
                    TW, TM, Td;
                T1z = SIMD_FNMADD(KP1_118033988, T1i, T1h);
                T1j = SIMD_FMADD(KP1_118033988, T1i, T1h);
                T1G = SIMD_FMADD(KP618033988, TQ, TR);
                T1b = TA - TD;
                TE  = TA + TD;
                T11 = SIMD_FMADD(KP618033988, T10, TZ);
                T1v = SIMD_FNMADD(KP618033988, TZ, T10);
                Tx  = Tt + Tw;
                TS  = Tt - Tw;
                T8  = T6 - T7;
                T1d = T6 + T7;
                Tk  = Ti + Tj;
                TK  = Ti - Tj;
                Th  = Tf + Tg;
                TJ  = Tf - Tg;
                Tb  = T9 + Ta;
                T1e = Ta - T9;
                T1a = SIMD_FNMADD(KP250000000, TE, TF);
                T1L = SIMD_FNMADD(KP577350269, T1v, T1G);
                TT  = SIMD_FMADD(KP951056516, TS, TR);
                TH  = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Tx, Tq),
                                Tn) -
                     TE - (SIMD_FMADD(KP1_732050807, TG, TF));
                TP  = SIMD_FMADD(KP250000000, Tx, TG);
                T1n = SIMD_FNMADD(KP1_902113032, T1m, T1j);
                T1q = SIMD_FMADD(KP1_902113032, T1m, T1j);
                T15 = SIMD_FMADD(KP1_118033988, T14, T13);
                T1w = SIMD_FNMADD(KP1_118033988, T14, T13);
                T1F = SIMD_FNMADD(KP618033988, TJ, TK);
                Tl  = Th + Tk;
                TX  = Th - Tk;
                T1s = SIMD_FMADD(KP618033988, T1d, T1e);
                T1f = SIMD_FNMADD(KP618033988, T1e, T1d);
                TL  = T8 + Tb;
                Tc  = T8 - Tb;
                T1c = SIMD_FMADD(KP559016994, T1b, T1a);
                T1r = SIMD_FNMADD(KP559016994, T1b, T1a);
                TU  = SIMD_FNMADD(KP618033988, TT, TQ);
                T1p = SIMD_FNMADD(KP1_902113032, T18, T15);
                T19 = SIMD_FMADD(KP1_902113032, T18, T15);
                T1H = T1F + T1G;
                TW  = SIMD_FNMADD(KP250000000, Tl, Te);
                T1I = SIMD_FNMADD(KP577350269, T1s, T1F);
                TM  = SIMD_FMADD(KP951056516, TL, TK);
                TI  = SIMD_FNMADD(KP250000000, Tc, T5);
                Td  = T5 + Tc;
                T1g = SIMD_FNMADD(KP951056516, T1f, T1c);
                T1o = SIMD_FMADD(KP951056516, T1f, T1c);
                TV  = SIMD_FMADD(KP951056516, TU, TP);
                T1t = SIMD_FMADD(KP951056516, T1s, T1r);
                T1B = SIMD_FNMADD(KP1_902113032, T1A, T1z);
                T1C = SIMD_FMADD(KP559016994, TS, TP);
                TY  = SIMD_FMADD(KP559016994, TX, TW);
                T1u = SIMD_FNMADD(KP559016994, TX, TW);
                T1y = SIMD_FNMADD(KP1_902113032, T1x, T1w);
                TN  = SIMD_FMADD(KP618033988, TM, TJ);
                Tm  = SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Td, T4),
                                T1) -
                     Te - Tl;
                T1D = SIMD_FNMADD(KP559016994, TL, TI);
            }
        }
        T1J = SIMD_FNMADD(KP951056516, T1I, T1C);
        R0[WS(rs, 1)] =
            SIMD_FMADD(KP2_000000000, T1o - (SIMD_FNMADD(KP951056516, T11, TY)),
                       T1p) -
            T1q;
        T12 = SIMD_FMADD(KP951056516, T11, TY);
        R0[WS(rs, 7)] =
            SIMD_FMADD(KP2_000000000, T1t - (SIMD_FMADD(KP951056516, T1v, T1u)),
                       T1y) -
            T1B;
        TO            = SIMD_FMADD(KP951056516, TN, TI);
        R0[WS(rs, 5)] = TH - Tm;
        R0[0]         = Tm + TH;
        T1M           = SIMD_FMADD(KP951056516, T1L, T1D);
        T1E           = T1C - T1D;
        T1K =
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1J, T1x), T1w) -
            T1r;
        R0[WS(rs, 4)] = SIMD_FMADD(KP2_000000000, T12 + T1g, T19) + T1n;
        R0[WS(rs, 6)] = SIMD_FMADD(KP1_732050807, TO - TV, T1p) + T1q - T1o -
                        (SIMD_FNMADD(KP951056516, T11, TY));
        R0[WS(rs, 9)] =
            SIMD_FMADD(KP1_732050807, TO + TV, T12) + T19 - (T1g + T1n);
        T1N =
            SIMD_FMADD(KP1_902113032, SIMD_FNMADD(KP910592997, T1M, T1A), T1z) -
            T1u;
        R0[WS(rs, 2)] =
            T1y +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1H, T1E), T1B) -
            (SIMD_FMADD(KP951056516, T1v, T1u)) - T1t;
        R0[WS(rs, 8)] = T1K + T1N;
        R0[WS(rs, 3)] = T1K - T1N;
    }
}

template <>
struct r2cb_traits<30, 21>
{
    static constexpr long_t flops           = 187;
    static constexpr long_t operations      = 123;
    static constexpr long_t memory_accesses = 39;
    static constexpr long_t stack_vars      = 93;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 21 -name
 * r2cb -standalone */

/*
 * This function contains 123 FP additions, 64 FP multiplications,
 * (or, 59 additions, 0 multiplications, 64 fused multiply/add),
 * 93 stack variables, 12 constants, and 39 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 21>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, TO, Tc, Tv, T13, Ta, T1m, TX, T1b, T1w, T1v, Ty, T1z,
            T1n, T1x;
        SIMD_FLOAT Tl, Tj, TI, T1h, T1s, T1g, Tt, T16, TL, T1i, TB, T1y, Tk,
            T1d, T1a;
        SIMD_FLOAT TU, T7, T12, T1r, T1l, T4, T6, TT, TR, T5, TS;
        {
            SIMD_FLOAT T8, T9, T2, T3, TV, TW, TP, TQ, TG, T1e, Tp, Tf, Ti, TH,
                Ts;
            SIMD_FLOAT T1f, TJ, TK, Tz, TA, Tn, To, Td, Te, Tg, Th, Tq, Tr, Tw,
                Tx;
            T8  = Ci[WS(cs, 6)];
            T9  = Ci[WS(cs, 12)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            TV  = Ci[WS(cs, 9)];
            TW  = Ci[WS(cs, 3)];
            TO  = Cr[WS(cs, 15)];
            TP  = Cr[WS(cs, 9)];
            TQ  = Cr[WS(cs, 3)];
            Tc  = Cr[WS(cs, 10)];
            T1l = Ci[WS(cs, 10)];
            Tv  = Cr[WS(cs, 5)];
            T13 = SIMD_FMSUB(KP618033988, T8, T9);
            Ta  = SIMD_FMADD(KP618033988, T9, T8);
            T1m = Ci[WS(cs, 5)];
            T4  = T2 + T3;
            T6  = T2 - T3;
            TX  = SIMD_FMADD(KP618033988, TW, TV);
            T1b = SIMD_FMSUB(KP618033988, TV, TW);
            Tn  = Ci[WS(cs, 14)];
            TT  = TP - TQ;
            TR  = TP + TQ;
            To  = Ci[WS(cs, 4)];
            Td  = Cr[WS(cs, 14)];
            Te  = Cr[WS(cs, 4)];
            Tg  = Cr[WS(cs, 8)];
            Th  = Cr[WS(cs, 2)];
            Tq  = Ci[WS(cs, 2)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tr  = Ci[WS(cs, 8)];
            Tw  = Cr[WS(cs, 1)];
            Tx  = Cr[WS(cs, 11)];
            TG  = Ci[WS(cs, 1)];
            TS  = SIMD_FNMADD(KP500000000, TR, TO);
            T1e = Tn - To;
            Tp  = Tn + To;
            T1w = Te - Td;
            Tf  = Td + Te;
            T1v = Tg - Th;
            Ti  = Tg + Th;
            TH  = Ci[WS(cs, 11)];
            Ts  = Tq - Tr;
            T1f = Tq + Tr;
            Ty  = Tw + Tx;
            T1z = Tw - Tx;
            TJ  = Ci[WS(cs, 13)];
            TK  = Ci[WS(cs, 7)];
            Tz  = Cr[WS(cs, 7)];
            TA  = Cr[WS(cs, 13)];
            T1n = T1l + T1m;
            T1x = SIMD_FMADD(KP618033988, T1w, T1v);
            Tl  = Ti - Tf;
            Tj  = Tf + Ti;
            TI  = TG + TH;
            T1h = TG - TH;
            T1s = T1f - T1e;
            T1g = T1e + T1f;
            Tt  = SIMD_FNMADD(KP618033988, Ts, Tp);
            T16 = SIMD_FMADD(KP618033988, Tp, Ts);
            TL  = TJ - TK;
            T1i = TJ + TK;
            TB  = Tz + TA;
            T1y = Tz - TA;
            Tk  = SIMD_FNMADD(KP250000000, Tj, Tc);
        }
        T1d = T4 - TR;
        T1a = SIMD_FNMADD(KP1_118033988, TT, TS);
        TU  = SIMD_FMADD(KP1_118033988, TT, TS);
        T7  = SIMD_FMADD(KP1_118033988, T6, T5);
        T12 = SIMD_FNMADD(KP1_118033988, T6, T5);
        T1r = SIMD_FMADD(KP250000000, T1g, T1l);
        {
            SIMD_FLOAT T1p, T19, TM, TC, TE, T15, T11, TY, TZ, Tb, T1t, T14,
                T1c, T1k, T1o;
            SIMD_FLOAT T1L, T1C, T1B, T1F, T1J, TD, T17, T10, Tu, T1j, T1A, T1I,
                Tm, T1q, T1M;
            SIMD_FLOAT T1D, T1K, TF, T18, T1G, T1u, T1N, T1E, TN, T1H;
            T1j           = T1h + T1i;
            T1p           = T1h - T1i;
            T19           = SIMD_FMADD(KP618033988, TI, TL);
            TM            = SIMD_FNMADD(KP618033988, TL, TI);
            T1A           = SIMD_FNMADD(KP618033988, T1z, T1y);
            T1I           = SIMD_FMADD(KP951056516, T1s, T1y);
            TC            = Ty + TB;
            TE            = Ty - TB;
            T15           = SIMD_FMADD(KP559016994, Tl, Tk);
            Tm            = SIMD_FNMADD(KP559016994, Tl, Tk);
            T11           = SIMD_FMADD(KP1_902113032, TX, TU);
            TY            = SIMD_FNMADD(KP1_902113032, TX, TU);
            TZ            = SIMD_FNMADD(KP1_902113032, Ta, T7);
            Tb            = SIMD_FMADD(KP1_902113032, Ta, T7);
            T1t           = SIMD_FNMADD(KP559016994, T1s, T1r);
            T14           = SIMD_FNMADD(KP1_902113032, T13, T12);
            T1c           = SIMD_FMADD(KP1_902113032, T1b, T1a);
            T1k           = T1g + T1j;
            T1o           = SIMD_FMADD(KP250000000, T1j, T1m);
            T1L           = SIMD_FMADD(KP951056516, T1p, T1v);
            T1C           = SIMD_FMADD(KP577350269, T19, T1x);
            T1B           = T1x + T1A;
            T1F           = SIMD_FNMADD(KP577350269, T16, T1A);
            T1J           = SIMD_FMADD(KP618033988, T1I, T1z);
            TD            = SIMD_FNMADD(KP250000000, TC, Tv);
            T17           = SIMD_FMADD(KP951056516, T16, T15);
            T10           = SIMD_FMADD(KP951056516, Tt, Tm);
            Tu            = SIMD_FNMADD(KP951056516, Tt, Tm);
            R0[WS(rs, 4)] = T1 + TC +
                            SIMD_FMADD(KP2_000000000,
                                       SIMD_FMADD(KP866025403, T1k, T1d), Tv) -
                            Tc - Tj - (SIMD_FMADD(KP1_732050807, T1n, TO));
            T1q = SIMD_FMADD(KP559016994, T1p, T1o);
            T1M = SIMD_FNMADD(KP618033988, T1L, T1w);
            T1D = SIMD_FMADD(KP951056516, T1C, T1t);
            T1K = SIMD_FMADD(KP951056516, T1J, T1r);
            TF  = SIMD_FMADD(KP559016994, TE, TD);
            T18 = SIMD_FNMADD(KP559016994, TE, TD);
            T1G = SIMD_FNMADD(KP951056516, T1F, T1q);
            T1u = T1q - T1t;
            T1N = SIMD_FMADD(KP951056516, T1M, T1o);
            T1E = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1D, T1b),
                             T18) -
                  T1a;
            R0[WS(rs, 6)] =
                SIMD_FMADD(KP2_000000000,
                           T17 - (SIMD_FNMADD(KP951056516, T19, T18)), T14) -
                T1c;
            R0[0] = SIMD_FMADD(KP2_000000000,
                               T10 - (SIMD_FNMADD(KP951056516, TM, TF)), TZ) -
                    T11;
            TN  = SIMD_FMADD(KP951056516, TM, TF);
            T1H = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1G, T13),
                             T12) -
                  T15;
            R0[WS(rs, 1)] = T14 +
                            SIMD_FMADD(KP1_732050807,
                                       SIMD_FMADD(KP951056516, T1B, T1u), T1c) -
                            T17 - (SIMD_FNMADD(KP951056516, T19, T18));
            R0[WS(rs, 5)] = TZ + SIMD_FMADD(KP1_732050807, T1K - T1N, T11) -
                            (SIMD_FNMADD(KP951056516, TM, TF)) - T10;
            R0[WS(rs, 8)] =
                Tb + SIMD_FMADD(KP1_732050807, T1K + T1N, TN) - TY - Tu;
            R0[WS(rs, 3)] = SIMD_FMADD(KP2_000000000, Tu + TN, Tb) + TY;
            R0[WS(rs, 7)] = T1H - T1E;
            R0[WS(rs, 2)] = T1E + T1H;
        }
    }
}

template <>
struct r2cb_traits<30, 22>
{
    static constexpr long_t flops           = 180;
    static constexpr long_t operations      = 118;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 22 -name
 * r2cb -standalone */

/*
 * This function contains 118 FP additions, 62 FP multiplications,
 * (or, 56 additions, 0 multiplications, 62 fused multiply/add),
 * 125 stack variables, 13 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 22>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP549092735, +0.549092735697554617251613359518793335353107009);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, TO, Tc, Tv, T10, Ta, TX, T13, T1u, T1l, T1b, TZ, T7, TM,
            TC;
        SIMD_FLOAT Tj, Tb, TU, T12, Tt, T19, T1n, T1z, T1D, TF, T15, TY, T11,
            T1A, T14;
        SIMD_FLOAT T1i, T1m, T1K, T1r, Tm, T18, T1I, T17, TN, T1o, T1L, T1B,
            T1a, Tu, T1J;
        SIMD_FLOAT T1E, T1s, T1M, T1C, T1F, T1N, T1O;
        {
            SIMD_FLOAT T1k, T1j, T4, T6, TT, TR, T5, Tg, TS, T1x, Tf, T1d, TL,
                T1t, Ty;
            SIMD_FLOAT Th, TI, T1c, TB, Tn, To, Tq, Tr, T8, T9, T2, T3, TV, TW,
                TP;
            SIMD_FLOAT TQ, Td, Te, TJ, TK, Tw, Tx, TG, TH, Tz, TA, T1e, T1q,
                T16, T1v;
            SIMD_FLOAT TE, T1g, Tp, T1f, Ts, T1y, Tl, T1p, T1G, TD, T1w, Ti,
                T1h, Tk, T1H;
            T8  = Ci[WS(cs, 6)];
            T9  = Ci[WS(cs, 12)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            TV  = Ci[WS(cs, 9)];
            TW  = Ci[WS(cs, 3)];
            TO  = Cr[WS(cs, 15)];
            TP  = Cr[WS(cs, 9)];
            TQ  = Cr[WS(cs, 3)];
            Tc  = Cr[WS(cs, 5)];
            T1k = Ci[WS(cs, 5)];
            Tv  = Cr[WS(cs, 10)];
            T10 = SIMD_FMSUB(KP618033988, T8, T9);
            Ta  = SIMD_FMADD(KP618033988, T9, T8);
            T1j = Ci[WS(cs, 10)];
            T4  = T2 + T3;
            T6  = T2 - T3;
            TX  = SIMD_FMADD(KP618033988, TW, TV);
            T13 = SIMD_FMSUB(KP618033988, TV, TW);
            Td  = Cr[WS(cs, 1)];
            TT  = TP - TQ;
            TR  = TP + TQ;
            Te  = Cr[WS(cs, 11)];
            TJ  = Ci[WS(cs, 2)];
            TK  = Ci[WS(cs, 8)];
            Tw  = Cr[WS(cs, 8)];
            Tx  = Cr[WS(cs, 2)];
            TG  = Ci[WS(cs, 14)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            TH  = Ci[WS(cs, 4)];
            Tz  = Cr[WS(cs, 14)];
            TA  = Cr[WS(cs, 4)];
            Tg  = Cr[WS(cs, 7)];
            TS  = SIMD_FNMADD(KP500000000, TR, TO);
            T1x = Td - Te;
            Tf  = Td + Te;
            T1d = TJ + TK;
            TL  = TJ - TK;
            T1t = Tw - Tx;
            Ty  = Tw + Tx;
            Th  = Cr[WS(cs, 13)];
            TI  = TG + TH;
            T1c = TG - TH;
            TB  = Tz + TA;
            T1u = TA - Tz;
            Tn  = Ci[WS(cs, 1)];
            To  = Ci[WS(cs, 11)];
            Tq  = Ci[WS(cs, 13)];
            Tr  = Ci[WS(cs, 7)];
            T1l = T1j + T1k;
            T1b = T4 - TR;
            TZ  = SIMD_FNMADD(KP1_118033988, T6, T5);
            T7  = SIMD_FMADD(KP1_118033988, T6, T5);
            T1w = Tg - Th;
            Ti  = Tg + Th;
            T1e = T1c + T1d;
            T1q = T1d - T1c;
            T16 = SIMD_FMADD(KP618033988, TI, TL);
            TM  = SIMD_FNMADD(KP618033988, TL, TI);
            T1v = SIMD_FMADD(KP618033988, T1u, T1t);
            TE  = Ty - TB;
            TC  = Ty + TB;
            T1g = Tn - To;
            Tp  = Tn + To;
            T1f = Tq + Tr;
            Ts  = Tq - Tr;
            T1y = SIMD_FNMADD(KP618033988, T1x, T1w);
            Tj  = Tf + Ti;
            Tl  = Tf - Ti;
            T1p = SIMD_FMADD(KP250000000, T1e, T1j);
            T1G = SIMD_FMADD(KP951056516, T1q, T1w);
            Tb  = SIMD_FMADD(KP1_902113032, Ta, T7);
            TD  = SIMD_FMSUB(KP250000000, TC, Tv);
            TU  = SIMD_FMADD(KP1_118033988, TT, TS);
            T12 = SIMD_FNMADD(KP1_118033988, TT, TS);
            Tt  = SIMD_FNMADD(KP618033988, Ts, Tp);
            T19 = SIMD_FMADD(KP618033988, Tp, Ts);
            T1n = T1g - T1f;
            T1h = T1f + T1g;
            T1z = T1v + T1y;
            T1D = SIMD_FNMADD(KP577350269, T16, T1y);
            Tk  = SIMD_FNMADD(KP250000000, Tj, Tc);
            T1H = SIMD_FMADD(KP618033988, T1G, T1x);
            TF  = SIMD_FMADD(KP559016994, TE, TD);
            T15 = SIMD_FNMADD(KP559016994, TE, TD);
            TY  = SIMD_FNMADD(KP1_902113032, TX, TU);
            T11 = SIMD_FNMADD(KP1_902113032, T10, TZ);
            T1A = SIMD_FMADD(KP577350269, T19, T1v);
            T14 = SIMD_FMADD(KP1_902113032, T13, T12);
            T1i = T1e + T1h;
            T1m = SIMD_FMADD(KP250000000, T1h, T1k);
            T1K = SIMD_FMADD(KP951056516, T1n, T1t);
            T1r = SIMD_FNMADD(KP559016994, T1q, T1p);
            Tm  = SIMD_FMADD(KP559016994, Tl, Tk);
            T18 = SIMD_FNMADD(KP559016994, Tl, Tk);
            T1I = SIMD_FMADD(KP951056516, T1H, T1p);
            T17 = SIMD_FNMADD(KP951056516, T16, T15);
            TN  = SIMD_FMADD(KP951056516, TM, TF);
        }
        R0[WS(rs, 3)] =
            T1 + Tc +
            SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1i, T1b), Tj) -
            TC - Tv - (SIMD_FMADD(KP1_732050807, T1l, TO));
        T1o = SIMD_FMADD(KP559016994, T1n, T1m);
        T1L = SIMD_FNMADD(KP618033988, T1K, T1u);
        T1B = SIMD_FMADD(KP951056516, T1A, T1r);
        T1a = SIMD_FNMADD(KP951056516, T19, T18);
        Tu  = SIMD_FMADD(KP951056516, Tt, Tm);
        T1J = SIMD_FMADD(KP549092735, Tt, T1I);
        T1E = SIMD_FNMADD(KP951056516, T1D, T1o);
        T1s = T1o - T1r;
        T1M = SIMD_FMADD(KP951056516, T1L, T1m);
        T1C =
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1B, T13), T18) -
            T12;
        R0[WS(rs, 5)] = T11 + SIMD_FNMSUB(KP2_000000000, T17 + T1a, T14);
        R0[WS(rs, 2)] = SIMD_FMADD(KP2_000000000, Tu - TN, Tb) + TY;
        T1F           = TZ +
              SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1E, T10), T15);
        R0[0] =
            T11 + T17 +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1z, T1s), T14) -
            T1a;
        R0[WS(rs, 7)] = Tb + TN + SIMD_FMADD(KP1_732050807, T1I + T1M, Tu) - TY;
        T1N           = SIMD_FMADD(KP549092735, TM, T1M);
        R0[WS(rs, 6)] = T1F - T1C;
        R0[WS(rs, 1)] = T1C + T1F;
        T1O           = SIMD_FMADD(KP910592997, T1N, Ta);
        R0[WS(rs, 4)] =
            T7 + TF +
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1J, TX), TU) -
            (SIMD_FMADD(KP1_902113032, T1O, Tm));
    }
}

template <>
struct r2cb_traits<30, 23>
{
    static constexpr long_t flops           = 172;
    static constexpr long_t operations      = 113;
    static constexpr long_t memory_accesses = 37;
    static constexpr long_t stack_vars      = 89;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 23 -name
 * r2cb -standalone */

/*
 * This function contains 113 FP additions, 59 FP multiplications,
 * (or, 54 additions, 0 multiplications, 59 fused multiply/add),
 * 89 stack variables, 15 constants, and 37 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 23>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP549092735, +0.549092735697554617251613359518793335353107009);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP982246946, +0.982246946376846022815670275235202826693934316);
    DK(KP509036960, +0.509036960455127183450980863393907648510733164);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, TP, T8, T1g, Tj, T15, TK, T12, TN, T1f, TU, TT, T1t, T1l,
            T1m;
        SIMD_FLOAT T1s, TD, T1b, T1h, T17, Ts, Tq, Th, Tf, T1c, TG, T11, T7,
            T19, Tw;
        SIMD_FLOAT T18, Tz, T14, Tr, Tg, TH, TZ, T1d, T1u;
        {
            SIMD_FLOAT T4, T6, TS, T5, TE, Tb, Tp, Tm, Te, TF, Tu, Tv, Tx, Ty,
                TI;
            SIMD_FLOAT TJ, TL, TM, T2, T3, TQ, TR, T9, Ta, Tn, To, Tk, Tl, Tc,
                Td;
            SIMD_FLOAT TB, TC;
            TI  = Ci[WS(cs, 3)];
            TJ  = Ci[WS(cs, 9)];
            TL  = Ci[WS(cs, 12)];
            TM  = Ci[WS(cs, 6)];
            T1  = Cr[0];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            TP  = Cr[WS(cs, 15)];
            TQ  = Cr[WS(cs, 9)];
            TR  = Cr[WS(cs, 3)];
            T8  = Cr[WS(cs, 5)];
            T1g = Ci[WS(cs, 5)];
            Tj  = Cr[WS(cs, 10)];
            T15 = SIMD_FMADD(KP618033988, TI, TJ);
            TK  = SIMD_FNMADD(KP618033988, TJ, TI);
            T12 = SIMD_FMADD(KP618033988, TL, TM);
            TN  = SIMD_FMSUB(KP618033988, TM, TL);
            T1f = Ci[WS(cs, 10)];
            T4  = T2 + T3;
            T6  = T2 - T3;
            T9  = Cr[WS(cs, 1)];
            TU  = TQ - TR;
            TS  = TQ + TR;
            Ta  = Cr[WS(cs, 11)];
            Tn  = Cr[WS(cs, 8)];
            To  = Cr[WS(cs, 2)];
            Tk  = Cr[WS(cs, 14)];
            Tl  = Cr[WS(cs, 4)];
            Tc  = Cr[WS(cs, 7)];
            Td  = Cr[WS(cs, 13)];
            TB  = Ci[WS(cs, 13)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            TC  = Ci[WS(cs, 7)];
            TE  = Ci[WS(cs, 1)];
            TT  = SIMD_FNMADD(KP500000000, TS, TP);
            T1t = T9 - Ta;
            Tb  = T9 + Ta;
            T1l = Tn - To;
            Tp  = Tn + To;
            T1m = Tl - Tk;
            Tm  = Tk + Tl;
            T1s = Td - Tc;
            Te  = Tc + Td;
            TF  = Ci[WS(cs, 11)];
            TD  = TB - TC;
            T1b = TB + TC;
            Tu  = Ci[WS(cs, 2)];
            Tv  = Ci[WS(cs, 8)];
            Tx  = Ci[WS(cs, 14)];
            Ty  = Ci[WS(cs, 4)];
            T1h = T1f + T1g;
            T17 = T4 - TS;
            Ts  = Tm - Tp;
            Tq  = Tm + Tp;
            Th  = Tb - Te;
            Tf  = Tb + Te;
            T1c = TE - TF;
            TG  = TE + TF;
            T11 = SIMD_FMADD(KP1_118033988, T6, T5);
            T7  = SIMD_FNMADD(KP1_118033988, T6, T5);
            T19 = Tu + Tv;
            Tw  = Tu - Tv;
            T18 = Tx - Ty;
            Tz  = Tx + Ty;
            T14 = SIMD_FMADD(KP1_118033988, TU, TT);
            Tr  = SIMD_FNMADD(KP250000000, Tq, Tj);
            Tg  = SIMD_FNMADD(KP250000000, Tf, T8);
        }
        TH  = SIMD_FMADD(KP618033988, TG, TD);
        TZ  = SIMD_FNMADD(KP618033988, TD, TG);
        T1d = T1b + T1c;
        T1u = T1c - T1b;
        {
            SIMD_FLOAT TW, T16, TV, T13, Ti, TY, T1r, T1E, T1j, T1A, T1e, T1k,
                TO, T1v, TX;
            SIMD_FLOAT T10, Tt, T1o, T1i, T1a, TA, T1n, T1F, T1B, T1w, T1p, T1G,
                T1C, T1x, T1q;
            SIMD_FLOAT T1H, T1D, T1y, T1I, T1z;
            T1i           = T19 - T18;
            T1a           = T18 + T19;
            TW            = SIMD_FNMADD(KP618033988, Tw, Tz);
            TA            = SIMD_FMADD(KP618033988, Tz, Tw);
            T16           = SIMD_FNMADD(KP1_902113032, T15, T14);
            TV            = SIMD_FMADD(KP559016994, Ts, Tr);
            T13           = SIMD_FMADD(KP1_902113032, T12, T11);
            Ti            = SIMD_FNMADD(KP559016994, Th, Tg);
            TY            = SIMD_FMADD(KP559016994, Th, Tg);
            T1n           = SIMD_FMADD(KP934172358, TH, T1m);
            T1r           = SIMD_FMADD(KP250000000, T1d, T1g);
            T1E           = SIMD_FMADD(KP951056516, T1u, T1l);
            T1j           = SIMD_FMADD(KP509036960, T1i, TK);
            T1A           = SIMD_FNMADD(KP951056516, T1i, T1s);
            T1e           = T1a + T1d;
            T1k           = SIMD_FMADD(KP250000000, T1a, T1f);
            TO            = TA + TH + TK - TN;
            T1v           = SIMD_FMADD(KP982246946, TA, T1u);
            TX            = SIMD_FNMADD(KP951056516, TW, TV);
            T10           = SIMD_FMADD(KP951056516, TZ, TY);
            Tt            = Ti - (SIMD_FNMADD(KP559016994, Ts, Tr));
            T1o           = SIMD_FMADD(KP618033988, T1n, T1l);
            T1F           = SIMD_FNMADD(KP618033988, T1E, T1m);
            T1B           = SIMD_FNMADD(KP618033988, T1A, T1t);
            R0[WS(rs, 2)] = T1 + T8 +
                            SIMD_FMADD(KP2_000000000,
                                       SIMD_FMADD(KP866025403, T1e, T17), Tf) -
                            Tj - Tq - (SIMD_FMADD(KP1_732050807, T1h, TP));
            T1w           = SIMD_FMADD(KP951056516, T1v, T1t);
            R0[WS(rs, 1)] = SIMD_FMADD(KP2_000000000, TX + T10, T13) + T16;
            R0[WS(rs, 4)] = SIMD_FNMADD(KP2_000000000,
                                        SIMD_FNMADD(KP951056516, TO, Tt), T7) -
                            (SIMD_FNMADD(KP1_118033988, TU, TT));
            T1p = SIMD_FMADD(KP951056516, T1o, T1k);
            T1G = SIMD_FMADD(KP951056516, T1F, T1r);
            T1C = SIMD_FMADD(KP951056516, T1B, T1k);
            T1x = SIMD_FMADD(KP618033988, T1w, T1s);
            T1q = SIMD_FNMADD(KP1_902113032, SIMD_FNMADD(KP910592997, T1p, T1j),
                              Ti) -
                  (SIMD_FNMADD(KP1_118033988, TU, TT));
            T1H = SIMD_FMADD(KP549092735, TW, T1G);
            T1D = SIMD_FMADD(KP549092735, TZ, T1C);
            R0[WS(rs, 6)] =
                T10 + SIMD_FMADD(KP1_732050807, T1C + T1G, T13) - T16 - TX;
            T1y = SIMD_FMADD(KP951056516, T1x, T1r);
            T1I = SIMD_FMADD(KP910592997, T1H, T12);
            T1z = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1y, TN),
                             T7) -
                  (SIMD_FNMADD(KP559016994, Ts, Tr));
            R0[WS(rs, 3)] = T11 +
                            SIMD_FMADD(KP1_902113032,
                                       SIMD_FMADD(KP910592997, T1D, T15), T14) -
                            TV - (SIMD_FMADD(KP1_902113032, T1I, TY));
            R0[WS(rs, 5)] = T1z - T1q;
            R0[0]         = T1q + T1z;
        }
    }
}

template <>
struct r2cb_traits<30, 24>
{
    static constexpr long_t flops           = 161;
    static constexpr long_t operations      = 107;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 116;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 24 -name
 * r2cb -standalone */

/*
 * This function contains 107 FP additions, 54 FP multiplications,
 * (or, 53 additions, 0 multiplications, 54 fused multiply/add),
 * 116 stack variables, 12 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 24>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP549092735, +0.549092735697554617251613359518793335353107009);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP1_118033988, +1.118033988749894848204586834365638117720309180);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, Tc, Tn, TG, T1j, Tl, Ta, T1u, T1v, T1n, T1k, T1a, Tu, TD,
            T1m;
        SIMD_FLOAT T7, Tv, T11, T1o, T1d, TE, T1D, TN, TP, TX, T1g, T1w, T19,
            Tb, T1p;
        SIMD_FLOAT T1l, Ti, Tx, TO, T15, T13, T1h, T1t, T1E, T1x, T1q, Tm, TF,
            TQ, T16;
        SIMD_FLOAT T14, T1C, T1F, T1y, T1r, TY, T1G, T1z, T1s, T1A, T1B;
        {
            SIMD_FLOAT Tk, T9, T1i, T4, T6, Th, Tf, TZ, T5, Tq, TB, T17, Tg,
                T1b, TA;
            SIMD_FLOAT Tt, TM, TC, TH, TI, TR, TS, TU, TV, Tj, T2, T3, T8, Td,
                Te;
            SIMD_FLOAT To, Tp, Ty, Tz, Tr, Ts, TK, TL, Tw, T10, T1c, TJ, TT,
                T1e, TW;
            SIMD_FLOAT T1f, T18, T12;
            T1  = Cr[0];
            Tk  = Ci[WS(cs, 3)];
            Tj  = Ci[WS(cs, 9)];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            T8  = Ci[WS(cs, 6)];
            Tc  = Cr[WS(cs, 15)];
            T9  = Ci[WS(cs, 12)];
            Td  = Cr[WS(cs, 9)];
            Te  = Cr[WS(cs, 3)];
            Tn  = Cr[WS(cs, 10)];
            T1i = Ci[WS(cs, 10)];
            TG  = Cr[WS(cs, 5)];
            T1j = Ci[WS(cs, 5)];
            Tl  = SIMD_FMADD(KP618033988, Tk, Tj);
            To  = Cr[WS(cs, 14)];
            T4  = T2 + T3;
            T6  = T2 - T3;
            Tp  = Cr[WS(cs, 4)];
            Ta  = SIMD_FMADD(KP618033988, T9, T8);
            Ty  = Ci[WS(cs, 14)];
            Th  = Td - Te;
            Tf  = Td + Te;
            Tz  = Ci[WS(cs, 4)];
            Tr  = Cr[WS(cs, 8)];
            Ts  = Cr[WS(cs, 2)];
            TK  = Cr[WS(cs, 7)];
            TL  = Cr[WS(cs, 13)];
            TZ  = SIMD_FMADD(KP951056516, T6, Tj);
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tq  = To + Tp;
            T1u = Tp - To;
            TB  = Ci[WS(cs, 2)];
            T17 = SIMD_FNMADD(KP951056516, Th, T8);
            Tg  = SIMD_FNMADD(KP500000000, Tf, Tc);
            T1b = Ty - Tz;
            TA  = Ty + Tz;
            T1v = Ts - Tr;
            Tt  = Tr + Ts;
            T1n = TK - TL;
            TM  = TK + TL;
            TC  = Ci[WS(cs, 8)];
            TH  = Cr[WS(cs, 1)];
            TI  = Cr[WS(cs, 11)];
            TR  = Ci[WS(cs, 1)];
            TS  = Ci[WS(cs, 11)];
            TU  = Ci[WS(cs, 7)];
            TV  = Ci[WS(cs, 13)];
            T1k = T1i + T1j;
            T1a = T4 - Tf;
            Tu  = Tq + Tt;
            Tw  = Tq - Tt;
            T10 = SIMD_FNMADD(KP618033988, TZ, Tk);
            T1c = TB + TC;
            TD  = TB - TC;
            T1m = TH - TI;
            TJ  = TH + TI;
            TT  = TR + TS;
            T1e = TR - TS;
            TW  = TU - TV;
            T1f = TU + TV;
            T18 = SIMD_FNMADD(KP618033988, T17, T9);
            T7  = SIMD_FMADD(KP1_118033988, T6, T5);
            Tv  = SIMD_FNMADD(KP250000000, Tu, Tn);
            T11 = SIMD_FMADD(KP1_902113032, T10, T5);
            T1o = T1c - T1b;
            T1d = T1b + T1c;
            TE  = SIMD_FNMADD(KP618033988, TD, TA);
            T1D = T1m - T1u;
            TN  = TJ + TM;
            TP  = TJ - TM;
            T12 = SIMD_FNMADD(KP951056516, Tw, TT);
            TX  = SIMD_FMADD(KP618033988, TW, TT);
            T1g = T1e + T1f;
            T1w = T1e - T1f;
            T19 = SIMD_FNMADD(KP1_902113032, T18, Tg);
            Tb  = SIMD_FMADD(KP1_902113032, Ta, T7);
            T1p = SIMD_FMADD(KP951056516, T1o, T1n);
            T1l = SIMD_FMADD(KP250000000, T1d, T1i);
            Ti  = SIMD_FMADD(KP1_118033988, Th, Tg);
            Tx  = SIMD_FMADD(KP559016994, Tw, Tv);
            TO  = SIMD_FNMADD(KP250000000, TN, TG);
            T15 = SIMD_FMADD(KP951056516, TP, TA);
            T13 = SIMD_FNMADD(KP618033988, T12, TW);
        }
        T1h = T1d + T1g;
        T1t = SIMD_FMADD(KP250000000, T1g, T1j);
        T1E = T1o + T1w;
        T1x = SIMD_FNMADD(KP951056516, T1w, T1v);
        T1q = SIMD_FMADD(KP618033988, T1p, T1m);
        Tm  = SIMD_FNMADD(KP1_902113032, Tl, Ti);
        TF  = SIMD_FNMADD(KP951056516, TE, Tx);
        TQ  = SIMD_FMADD(KP559016994, TP, TO);
        T16 = SIMD_FMADD(KP618033988, T15, TD);
        T14 = SIMD_FNMADD(KP951056516, T13, Tv);
        R0[WS(rs, 1)] =
            T1 + TN +
            SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, T1h, T1a), TG) -
            Tn - Tu - (SIMD_FMADD(KP1_732050807, T1k, Tc));
        T1C = T1t - (SIMD_FMADD(KP951056516, T1n, T1l));
        T1F = SIMD_FMADD(KP951056516, T1E, T1D);
        T1y = SIMD_FMADD(KP618033988, T1x, T1u);
        T1r = SIMD_FMADD(KP951056516, T1q, T1l);
        TY  = SIMD_FMADD(KP951056516, TX, TQ);
        R0[WS(rs, 3)] =
            SIMD_FMADD(KP2_000000000, T14 - (SIMD_FNMADD(KP951056516, T16, TO)),
                       T11) -
            T19;
        T1G   = SIMD_FMADD(KP618033988, T1F, T1v);
        T1z   = SIMD_FMADD(KP951056516, T1y, T1t);
        T1s   = SIMD_FMADD(KP549092735, TX, T1r);
        R0[0] = Tb + SIMD_FMADD(KP2_000000000, TF + TY, Tm);
        R0[WS(rs, 4)] =
            T19 +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1G, T1C), T11) -
            (SIMD_FNMADD(KP951056516, T16, TO)) - T14;
        R0[WS(rs, 5)] = Tb + SIMD_FMADD(KP1_732050807, T1r + T1z, TY) - TF - Tm;
        T1A           = SIMD_FMADD(KP549092735, TE, T1z);
        T1B           = SIMD_FMADD(KP910592997, T1A, Ta);
        R0[WS(rs, 2)] =
            T7 +
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1s, Tl), Ti) -
            Tx - (SIMD_FMADD(KP1_902113032, T1B, TQ));
    }
}

template <>
struct r2cb_traits<30, 25>
{
    static constexpr long_t flops           = 144;
    static constexpr long_t operations      = 96;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 25 -name
 * r2cb -standalone */

/*
 * This function contains 96 FP additions, 48 FP multiplications,
 * (or, 48 additions, 0 multiplications, 48 fused multiply/add),
 * 114 stack variables, 15 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 25>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP968245836, +0.968245836551854221294816349945599902708230426);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP982246946, +0.982246946376846022815670275235202826693934316);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2, Tw, T1, TG, T13, Tx, TF, TI, TN, TQ, TK, TM, T1j, TH, T9;
        SIMD_FLOAT T15, T19, T1k, Tg, T12, TR, T1y, TE, TP, T14, T1s, T1f, T1v,
            T1a, Tv;
        SIMD_FLOAT TJ, T1z, T1q, T10, T1m, TU, T1t, T1w, T1g, T1x, T1A, TV, T1n,
            T1h, T1B;
        SIMD_FLOAT TW, T1o, T1i, TX, T1l, TY, TZ, T11;
        {
            SIMD_FLOAT T16, TL, T1b, Tf, TS, Tc, T1r, T1u, T1d, Tj, T1c, Tm,
                T17, TA, TD;
            SIMD_FLOAT TO, Tu, Th, Tt, Tq, T5, T8, Ti, Tk, Tl, Ty, Tz, TB, TC,
                Td;
            SIMD_FLOAT Te, Tr, Ts, To, Tp, Ta, Tb, T3, T4, T6, T7, T1p, T1e,
                T18, Tn;
            SIMD_FLOAT TT;
            T2  = Cr[WS(cs, 5)];
            Tw  = Cr[WS(cs, 10)];
            T1  = Cr[0];
            T16 = Ci[WS(cs, 12)];
            TG  = Ci[WS(cs, 5)];
            TL  = Ci[WS(cs, 3)];
            T13 = Ci[WS(cs, 6)];
            Tx  = Cr[WS(cs, 15)];
            TF  = Ci[WS(cs, 10)];
            TI  = Ci[WS(cs, 9)];
            Td  = Cr[WS(cs, 9)];
            Te  = Cr[WS(cs, 3)];
            Tr  = Ci[WS(cs, 7)];
            Ts  = Ci[WS(cs, 13)];
            To  = Ci[WS(cs, 1)];
            Tp  = Ci[WS(cs, 11)];
            Ta  = Cr[WS(cs, 6)];
            Tb  = Cr[WS(cs, 12)];
            T3  = Cr[WS(cs, 1)];
            T4  = Cr[WS(cs, 11)];
            T6  = Cr[WS(cs, 7)];
            T7  = Cr[WS(cs, 13)];
            Th  = Ci[WS(cs, 14)];
            T1b = Te - Td;
            Tf  = Td + Te;
            TN  = Tr - Ts;
            Tt  = Tr + Ts;
            TS  = To + Tp;
            Tq  = To - Tp;
            TQ  = Ta - Tb;
            Tc  = Ta + Tb;
            TK  = T3 - T4;
            T5  = T3 + T4;
            TM  = T6 - T7;
            T8  = T6 + T7;
            Ti  = Ci[WS(cs, 4)];
            Tk  = Ci[WS(cs, 8)];
            Tl  = Ci[WS(cs, 2)];
            Ty  = Cr[WS(cs, 14)];
            Tz  = Cr[WS(cs, 4)];
            TB  = Cr[WS(cs, 8)];
            TC  = Cr[WS(cs, 2)];
            T1j = SIMD_FNMADD(KP500000000, Tf, Tx);
            T1r = SIMD_FMADD(KP951056516, TQ, TI);
            T1u = SIMD_FMADD(KP951056516, T1b, T13);
            TH  = SIMD_FNMADD(KP500000000, Tc, T1);
            T1d = T5 - T8;
            T9  = T5 + T8;
            Tj  = Th - Ti;
            T1c = Ti + Th;
            Tm  = Tk + Tl;
            T17 = Tl - Tk;
            TA  = Ty + Tz;
            T15 = Tz - Ty;
            TD  = TB + TC;
            T19 = TC - TB;
            TO  = SIMD_FMADD(KP577350269, TN, TM);
            T1k = Tq - Tt;
            Tu  = Tq + Tt;
            Tg  = Tc - Tf;
            T1p = SIMD_FMADD(KP951056516, T1d, T1c);
            T1e = SIMD_FMADD(KP587785252, T1d, T1c);
            T12 = SIMD_FNMADD(KP250000000, T9, T2);
            T18 = SIMD_FMSUB(KP500000000, T17, T16);
            Tn  = Tj + Tm;
            TR  = Tm - Tj;
            T1y = TK - T15;
            TE  = TA + TD;
            TT  = TA - TD;
            TP  = SIMD_FMADD(KP866025403, TO, TL);
            T14 = SIMD_FMADD(KP250000000, Tu, TG);
            T1s = SIMD_FNMADD(KP618033988, T1r, TL);
            T1f = SIMD_FMADD(KP850650808, T1e, T1b);
            T1v = SIMD_FNMADD(KP618033988, T1u, T16);
            T1a = SIMD_FNMADD(KP866025403, T19, T18);
            Tv  = Tn + Tu;
            TJ  = SIMD_FMADD(KP250000000, Tn, TF);
            T1z = TR + T1k;
            T1q = SIMD_FMADD(KP618033988, T1p, T17);
            T10 = SIMD_FNMADD(KP250000000, TE, Tw);
            T1m = SIMD_FNMADD(KP951056516, TT, TS);
            TU  = SIMD_FNMADD(KP587785252, TT, TS);
        }
        T1t   = SIMD_FMADD(KP1_902113032, T1s, TH);
        T1w   = SIMD_FNMADD(KP1_902113032, T1v, T1j);
        T1g   = SIMD_FNMADD(KP951056516, T1f, T1a);
        R0[0] = T1 + T2 +
                SIMD_FMADD(KP2_000000000, SIMD_FMADD(KP866025403, Tv, Tg), T9) -
                Tw - (Tx + SIMD_FMADD(KP1_732050807, TF + TG, TE));
        T1x = T14 - (SIMD_FMADD(KP951056516, TM, TJ));
        T1A = SIMD_FMADD(KP951056516, T1z, T1y);
        TV  = SIMD_FMADD(KP982246946, TU, TR);
        T1n = SIMD_FNMADD(KP618033988, T1m, TN);
        T1h = SIMD_FNMADD(KP713644179, T1g, T15);
        T1B = SIMD_FMADD(KP618033988, T1A, T19);
        TW  = SIMD_FMADD(KP866025403, TV, TQ);
        T1o = SIMD_FNMADD(KP951056516, T1n, T10);
        T1i = SIMD_FMADD(KP951056516, T1h, T14);
        TX  = SIMD_FMADD(KP951056516, TW, TP);
        R0[WS(rs, 3)] =
            T1w +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1B, T1x), T1t) -
            (SIMD_FNMADD(KP951056516, T1q, T12)) - T1o;
        R0[WS(rs, 2)] =
            SIMD_FMADD(KP2_000000000,
                       T1o - (SIMD_FNMADD(KP951056516, T1q, T12)), T1t) -
            T1w;
        T1l =
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1i, T13), T12) -
            (SIMD_FMADD(KP968245836, T1k, T1j));
        TY  = SIMD_FMADD(KP713644179, TX, TK);
        TZ  = SIMD_FMADD(KP951056516, TY, TJ);
        T11 = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, TZ, TI), TH) -
              T10;
        R0[WS(rs, 4)] = T1l + T11;
        R0[WS(rs, 1)] = T11 - T1l;
    }
}

template <>
struct r2cb_traits<30, 26>
{
    static constexpr long_t flops           = 130;
    static constexpr long_t operations      = 85;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 112;
    static constexpr long_t constants       = 15;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 26 -name
 * r2cb -standalone */

/*
 * This function contains 85 FP additions, 45 FP multiplications,
 * (or, 40 additions, 0 multiplications, 45 fused multiply/add),
 * 112 stack variables, 15 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 26>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP968245836, +0.968245836551854221294816349945599902708230426);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP982246946, +0.982246946376846022815670275235202826693934316);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TT, T7, T8, Tn, T13, T14, T5, TR, T1k, T1m, T1t, T17, T1w,
            TD, T1j;
        SIMD_FLOAT T16, T1n, Tb, T1p, T12, T1x, TW, TM, Tk, T18, Ts, T1q, T1v,
            T1y, TX;
        SIMD_FLOAT T19, Tt, T1r, T1z, T1a, Tu, T1s, T1b, T1u, T1c, T1d, T1e;
        {
            SIMD_FLOAT Tc, Tv, T1f, TY, T6, TS, TU, Tq, TV, T9, TC, TK, TG, TZ,
                TJ;
            SIMD_FLOAT T10, Tf, Ti, T1i, T15, T1l, T1, TN, TE, T4, TQ, T1g, T1h,
                Ty, TB;
            SIMD_FLOAT TF, TH, TI, Td, Te, Tg, Th, T2, T3, TO, TP, To, Tp, Tl,
                Tm;
            SIMD_FLOAT Tw, Tx, Tz, TA, Ta, T1o, TL, T11, Tr, Tj;
            Tc  = Cr[WS(cs, 10)];
            Tv  = Cr[WS(cs, 5)];
            T1  = Cr[0];
            T1f = Ci[WS(cs, 5)];
            TN  = Cr[WS(cs, 15)];
            TT  = Ci[WS(cs, 6)];
            TY  = Ci[WS(cs, 10)];
            T6  = Ci[WS(cs, 3)];
            T7  = Ci[WS(cs, 9)];
            TS  = Ci[WS(cs, 12)];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            TO  = Cr[WS(cs, 9)];
            TP  = Cr[WS(cs, 3)];
            To  = Ci[WS(cs, 1)];
            Tp  = Ci[WS(cs, 11)];
            Tl  = Ci[WS(cs, 7)];
            Tm  = Ci[WS(cs, 13)];
            Tw  = Cr[WS(cs, 1)];
            Tx  = Cr[WS(cs, 11)];
            Tz  = Cr[WS(cs, 7)];
            TA  = Cr[WS(cs, 13)];
            TE  = Ci[WS(cs, 2)];
            T8  = T2 - T3;
            T4  = T2 + T3;
            TU  = TP - TO;
            TQ  = TO + TP;
            T1g = To - Tp;
            Tq  = To + Tp;
            T1h = Tl + Tm;
            Tn  = Tl - Tm;
            T13 = Tw - Tx;
            Ty  = Tw + Tx;
            T14 = Tz - TA;
            TB  = Tz + TA;
            TF  = Ci[WS(cs, 8)];
            TH  = Ci[WS(cs, 14)];
            TI  = Ci[WS(cs, 4)];
            Td  = Cr[WS(cs, 14)];
            Te  = Cr[WS(cs, 4)];
            Tg  = Cr[WS(cs, 8)];
            Th  = Cr[WS(cs, 2)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            TR  = SIMD_FNMADD(KP500000000, TQ, TN);
            TV  = SIMD_FMADD(KP951056516, TU, TT);
            T9  = SIMD_FMADD(KP951056516, T8, T7);
            TC  = Ty + TB;
            TK  = Ty - TB;
            TG  = TE - TF;
            TZ  = TE + TF;
            TJ  = TH + TI;
            T10 = TI - TH;
            T1k = Te - Td;
            Tf  = Td + Te;
            T1m = Th - Tg;
            Ti  = Tg + Th;
            T1t = T1g - T1h;
            T1i = T1g + T1h;
            T15 = SIMD_FMADD(KP577350269, Tn, T14);
            T1l = SIMD_FMSUB(KP500000000, TG, TS);
            Ta  = SIMD_FNMADD(KP618033988, T9, T6);
            T1o = SIMD_FMADD(KP587785252, TK, TJ);
            TL  = SIMD_FMADD(KP951056516, TK, TJ);
            T17 = T10 + TZ;
            T11 = TZ - T10;
            T1w = T13 - T1k;
            Tr  = Tf - Ti;
            Tj  = Tf + Ti;
            TD  = SIMD_FNMADD(KP250000000, TC, Tv);
            T1j = SIMD_FMADD(KP250000000, T1i, T1f);
            T16 = SIMD_FMADD(KP866025403, T15, T6);
            T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
            Tb  = SIMD_FMADD(KP1_902113032, Ta, T5);
            T1p = SIMD_FMADD(KP850650808, T1o, TU);
            T12 = SIMD_FMADD(KP250000000, T11, TY);
            T1x = T17 + T1t;
            TW  = SIMD_FNMADD(KP618033988, TV, TS);
            TM  = SIMD_FMADD(KP618033988, TL, TG);
            Tk  = SIMD_FNMADD(KP250000000, Tj, Tc);
            T18 = SIMD_FNMADD(KP587785252, Tr, Tq);
            Ts  = SIMD_FNMADD(KP951056516, Tr, Tq);
        }
        T1q = SIMD_FNMADD(KP951056516, T1p, T1n);
        T1v = T1j - (SIMD_FMADD(KP951056516, T14, T12));
        T1y = SIMD_FMADD(KP951056516, T1x, T1w);
        TX  = SIMD_FNMADD(KP1_902113032, TW, TR);
        T19 = SIMD_FMADD(KP982246946, T18, T17);
        Tt  = SIMD_FNMADD(KP618033988, Ts, Tn);
        T1r = SIMD_FNMADD(KP713644179, T1q, T1k);
        T1z = SIMD_FMADD(KP618033988, T1y, T1m);
        T1a = SIMD_FMADD(KP866025403, T19, T8);
        Tu  = SIMD_FNMADD(KP951056516, Tt, Tk);
        T1s = SIMD_FMADD(KP951056516, T1r, T1j);
        T1b = SIMD_FMADD(KP951056516, T1a, T16);
        R0[WS(rs, 2)] =
            TX +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1z, T1v), Tb) -
            (SIMD_FNMADD(KP951056516, TM, TD)) - Tu;
        R0[WS(rs, 1)] =
            SIMD_FMADD(KP2_000000000, Tu - (SIMD_FNMADD(KP951056516, TM, TD)),
                       Tb) -
            TX;
        T1u = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1s, TT), TD) -
              (SIMD_FMADD(KP968245836, T1t, TR));
        T1c = SIMD_FMADD(KP713644179, T1b, T13);
        T1d = SIMD_FMADD(KP951056516, T1c, T12);
        T1e = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1d, T7), T5) -
              Tk;
        R0[WS(rs, 3)] = T1e + T1u;
        R0[0]         = T1e - T1u;
    }
}

template <>
struct r2cb_traits<30, 27>
{
    static constexpr long_t flops           = 120;
    static constexpr long_t operations      = 82;
    static constexpr long_t memory_accesses = 33;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 17;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 27 -name
 * r2cb -standalone */

/*
 * This function contains 82 FP additions, 38 FP multiplications,
 * (or, 44 additions, 0 multiplications, 38 fused multiply/add),
 * 111 stack variables, 17 constants, and 33 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 27>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_647278207, +1.647278207092663851754840078556380006059321028);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP713644179, +0.713644179546179863883939686092175747963372150);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP339357973, +0.339357973636751455633987242262605099007155443);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tc, T17, Tv, TY, Tn, TG, T1f, Tq, T5, T1j, TJ, TR, T1e, T1g,
            T1c;
        SIMD_FLOAT T1p, T1q, Tr, Tj, T1h, T1l, T1m, TK, TC, Ta, TW, T15, T1a,
            TS, T6;
        SIMD_FLOAT TV, T9, T18, T14, T19, T11, T1w, Ts, Tk, T1i, T1n, TD, TL,
            T1r, Tb;
        SIMD_FLOAT TX, T16, T1b, Tt, T1o, TM, T1s, T1d, T1k, Tu, T1t, T1u, T1v;
        Tc  = Cr[WS(cs, 10)];
        T17 = Ci[WS(cs, 10)];
        Tv  = Cr[WS(cs, 5)];
        TY  = Ci[WS(cs, 5)];
        {
            SIMD_FLOAT T1, TT, TN, T7, TH, T8, T4, TU, TQ, T12, T10, Tf, T13,
                TI, Tg;
            SIMD_FLOAT Th, Tw, Tx, Tz, TA, T2, T3, TO, TP, Tl, Tm, TE, TF, Td,
                Te;
            SIMD_FLOAT To, Tp, TZ, Ti, Ty, TB;
            T1  = Cr[0];
            TT  = Ci[WS(cs, 6)];
            TN  = Cr[WS(cs, 15)];
            T7  = Ci[WS(cs, 9)];
            TS  = Ci[WS(cs, 12)];
            T6  = Ci[WS(cs, 3)];
            T2  = Cr[WS(cs, 6)];
            T3  = Cr[WS(cs, 12)];
            TO  = Cr[WS(cs, 9)];
            TP  = Cr[WS(cs, 3)];
            Tl  = Ci[WS(cs, 7)];
            Tm  = Ci[WS(cs, 13)];
            TE  = Ci[WS(cs, 2)];
            TF  = Ci[WS(cs, 8)];
            Td  = Cr[WS(cs, 14)];
            Te  = Cr[WS(cs, 4)];
            To  = Ci[WS(cs, 1)];
            Tp  = Ci[WS(cs, 11)];
            TH  = Ci[WS(cs, 14)];
            T8  = T2 - T3;
            T4  = T2 + T3;
            TU  = TP - TO;
            TQ  = TO + TP;
            T12 = Tl + Tm;
            Tn  = Tl - Tm;
            T10 = TE + TF;
            TG  = TE - TF;
            T1f = Td - Te;
            Tf  = Td + Te;
            Tq  = To + Tp;
            T13 = Tp - To;
            TI  = Ci[WS(cs, 4)];
            Tg  = Cr[WS(cs, 8)];
            Th  = Cr[WS(cs, 2)];
            Tw  = Cr[WS(cs, 1)];
            Tx  = Cr[WS(cs, 11)];
            Tz  = Cr[WS(cs, 7)];
            TA  = Cr[WS(cs, 13)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1j = TT + T7;
            TV  = SIMD_FMADD(KP951056516, TU, TT);
            T9  = SIMD_FMADD(KP951056516, T8, T7);
            TJ  = TH + TI;
            TZ  = TI - TH;
            TR  = SIMD_FNMADD(KP500000000, TQ, TN);
            Ti  = Tg + Th;
            T1e = Th - Tg;
            T1g = Tw - Tx;
            Ty  = Tw + Tx;
            T1c = Tz - TA;
            TB  = Tz + TA;
            T18 = T12 + T13;
            T14 = T12 - T13;
            T1p = T8 + TU;
            T19 = T10 - TZ;
            T11 = TZ + T10;
            T1q = TJ + Tq;
            Tr  = Tf - Ti;
            Tj  = Tf + Ti;
            T1h = T1f + T1g;
            T1l = T6 - (SIMD_FMSUB(KP500000000, TG, TS));
            T1m = T1e + T1c;
            TK  = Ty - TB;
            TC  = Ty + TB;
        }
        Ta  = SIMD_FNMADD(KP618033988, T9, T6);
        TW  = SIMD_FNMADD(KP618033988, TV, TS);
        T15 = SIMD_FMADD(KP447213595, T14, T11);
        T1a = SIMD_FMADD(KP447213595, T19, T18);
        T1w = SIMD_FMADD(KP339357973, Tr, T1f);
        Ts  = SIMD_FNMADD(KP951056516, Tr, Tq);
        Tk  = SIMD_FNMADD(KP250000000, Tj, Tc);
        T1i = SIMD_FMADD(KP618033988, T1h, T1e);
        T1n = SIMD_FMADD(KP577350269, Tn, T1m);
        TD  = SIMD_FNMADD(KP250000000, TC, Tv);
        TL  = SIMD_FMADD(KP951056516, TK, TJ);
        T1r = SIMD_FMADD(KP587785252, TK, T1q);
        Tb  = SIMD_FMADD(KP1_902113032, Ta, T5);
        TX  = SIMD_FNMADD(KP1_902113032, TW, TR);
        T16 = SIMD_FMADD(KP559016994, T15, TY);
        T1b = SIMD_FMADD(KP559016994, T1a, T17);
        Tt  = SIMD_FNMADD(KP618033988, Ts, Tn);
        T1o = SIMD_FMADD(KP866025403, T1n, T1l);
        TM  = SIMD_FMADD(KP618033988, TL, TG);
        T1s = SIMD_FMADD(KP850650808, T1r, T1p);
        T1d = T16 - (SIMD_FMADD(KP951056516, T1c, T1b));
        T1k = T1b + T16;
        Tu  = SIMD_FNMADD(KP951056516, Tt, Tk);
        T1t = SIMD_FMADD(KP951056516, T1s, T1o);
        R0[WS(rs, 1)] =
            TX +
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP951056516, T1i, T1d), Tb) -
            (SIMD_FNMADD(KP951056516, TM, TD)) - Tu;
        R0[0] = SIMD_FMADD(KP2_000000000,
                           Tu - (SIMD_FNMADD(KP951056516, TM, TD)), Tb) -
                TX;
        T1u = SIMD_FMADD(KP713644179, T1t, T1g);
        T1v = SIMD_FMADD(KP951056516, T1u, T1k);
        R0[WS(rs, 2)] =
            T5 +
            SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP910592997, T1v, T1j), TD) -
            Tk - (SIMD_FMADD(KP1_647278207, T1w, TR));
    }
}

template <>
struct r2cb_traits<30, 28>
{
    static constexpr long_t flops           = 81;
    static constexpr long_t operations      = 54;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 80;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 28 -name
 * r2cb -standalone */

/*
 * This function contains 54 FP additions, 27 FP multiplications,
 * (or, 27 additions, 0 multiplications, 27 fused multiply/add),
 * 80 stack variables, 7 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 28>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP1_902113032, +1.902113032590307144232878666758764286811397268);
    DK(KP645497224, +0.645497224367902814196544233297066601805486951);
    DK(KP1_732050807, +1.732050807568877293527446341505872366942805254);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T15, TI, TZ, TG, TY, T2, T13, TN, TS, Tv, Tc, T3, Tm, T9;
        SIMD_FLOAT T16, Tq, Tr, TV, TC, T6, T17, Tn, TQ, Tj, To, Tz, TA, Tw, Tx;
        SIMD_FLOAT Tg, Th, Td, Te, T7, T8, T4, TB, TT, Ty, TU, T5, TO, Ti, TP;
        SIMD_FLOAT Tf, Ts, TJ, TW, TD, T18, Ta, TR, Tk, Tp, TK, T19, Tb, TX,
            T1a;
        SIMD_FLOAT TL, Tt, Tl, T11, TM, Tu, T1b, T10, TE, T12, TF, T14, TH;
        T1  = Cr[0];
        T15 = Ci[WS(cs, 12)];
        TI  = Ci[WS(cs, 3)];
        TZ  = Ci[WS(cs, 10)];
        TG  = Cr[WS(cs, 10)];
        TY  = Cr[WS(cs, 5)];
        T2  = Ci[WS(cs, 5)];
        T13 = Cr[WS(cs, 15)];
        TN  = Ci[WS(cs, 6)];
        TS  = Ci[WS(cs, 9)];
        Tv  = Cr[WS(cs, 6)];
        Tz  = Cr[WS(cs, 14)];
        TA  = Cr[WS(cs, 4)];
        Tw  = Ci[WS(cs, 11)];
        Tx  = Ci[WS(cs, 1)];
        Tc  = Cr[WS(cs, 9)];
        Tg  = Cr[WS(cs, 1)];
        Th  = Cr[WS(cs, 11)];
        Td  = Ci[WS(cs, 4)];
        Te  = Ci[WS(cs, 14)];
        T3  = Cr[WS(cs, 3)];
        T7  = Cr[WS(cs, 7)];
        T8  = Cr[WS(cs, 13)];
        T4  = Ci[WS(cs, 2)];
        TB  = Tz + TA;
        TT  = TA - Tz;
        Ty  = Tw - Tx;
        TU  = Tx + Tw;
        T5  = Ci[WS(cs, 8)];
        TO  = Tg - Th;
        Ti  = Tg + Th;
        TP  = Te + Td;
        Tf  = Td - Te;
        Tm  = Cr[WS(cs, 12)];
        T9  = T7 + T8;
        T16 = T7 - T8;
        Tq  = Cr[WS(cs, 8)];
        Tr  = Cr[WS(cs, 2)];
        TV  = SIMD_FMADD(KP577350269, TU, TT);
        TC  = SIMD_FNMADD(KP577350269, TB, Ty);
        T6  = T4 + T5;
        T17 = T5 - T4;
        Tn  = Ci[WS(cs, 7)];
        TQ  = SIMD_FMADD(KP577350269, TP, TO);
        Tj  = SIMD_FMADD(KP577350269, Ti, Tf);
        To  = Ci[WS(cs, 13)];
        Ts  = Tq + Tr;
        TJ  = Tr - Tq;
        TW  = SIMD_FMADD(KP866025403, TV, TS);
        TD  = SIMD_FMADD(KP866025403, TC, Tv);
        T18 = SIMD_FMADD(KP577350269, T17, T16);
        Ta  = SIMD_FNMADD(KP577350269, T9, T6);
        TR  = SIMD_FMADD(KP866025403, TQ, TN);
        Tk  = SIMD_FNMADD(KP866025403, Tj, Tc);
        Tp  = Tn + To;
        TK  = Tn - To;
        T19 = SIMD_FMADD(KP866025403, T18, T15);
        Tb  = SIMD_FMADD(KP866025403, Ta, T3);
        TX  = TR - TW;
        T1a = TR + TW;
        TL  = SIMD_FMADD(KP577350269, TK, TJ);
        Tt  = SIMD_FMADD(KP577350269, Ts, Tp);
        Tl  = Tb - Tk;
        T11 = Tk + Tb;
        TM  = SIMD_FMADD(KP866025403, TL, TI);
        Tu  = SIMD_FNMADD(KP866025403, Tt, Tm);
        T1b = T19 + TM;
        T10 = TD - Tu;
        TE  = Tu + TD;
        T12 = SIMD_FMADD(KP447213595, T11, T10);
        TF  = SIMD_FNMADD(KP447213595, TE, Tl);
        T14 = SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP645497224, T12, TZ), TY) -
              T13;
        TH =
            SIMD_FMADD(KP1_732050807, SIMD_FMADD(KP645497224, TF, T2), T1) - TG;
        R0[0] = SIMD_FMADD(KP1_902113032, SIMD_FMADD(KP618033988, TX, TM), TH) -
                (SIMD_FMADD(KP1_902113032, T19, T14));
        R0[WS(rs, 1)] = T14 + SIMD_FMADD(KP1_902113032,
                                         SIMD_FMADD(KP618033988, T1b, T1a), TH);
    }
}

template <>
struct r2cb_traits<30, 29>
{
    static constexpr long_t flops           = 42;
    static constexpr long_t operations      = 29;
    static constexpr long_t memory_accesses = 31;
    static constexpr long_t stack_vars      = 67;
    static constexpr long_t constants       = 13;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 30 -skip-k 29 -name
 * r2cb -standalone */

/*
 * This function contains 29 FP additions, 13 FP multiplications,
 * (or, 16 additions, 0 multiplications, 13 fused multiply/add),
 * 67 stack variables, 13 constants, and 31 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && SkippedOutputs == 29>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP983535511, +0.983535511173030266213404305935887145714871317);
    DK(KP1_989043790, +1.989043790736546673845383889961140763041584177);
    DK(KP972303684, +0.972303684619449709393519001037977162180669900);
    DK(KP960558538, +0.960558538835654864003725013100637347092729815);
    DK(KP947982825, +0.947982825090294367738356822658292563650787109);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP918577521, +0.918577521417276878019474360822877141096525952);
    DK(KP900404044, +0.900404044297839945120477203885371702076466211);
    DK(KP878431275, +0.878431275907353803701901925796005230464624667);
    DK(KP691981708, +0.691981708437649184433296392491391063039885882);
    DK(KP759747122, +0.759747122949427584133927340467895204762135354);
    DK(KP672816364, +0.672816364803188054521422117265518728531948445);
    DK(KP502754139, +0.502754139781758203815989792012626808663356430);
    {
        SIMD_FLOAT T1, TS, TR, T2, Th, T5, T8, Tn, Te, Tk, Tr, Ts, Tb, Tx, Ty;
        SIMD_FLOAT TD, Tq, TE, TA, TB, Tw, Tf, Tg, T3, T4, T6, T7, Tl, Tm, Tc;
        SIMD_FLOAT Td, Ti, Tj, T9, Ta, To, Tp, Tu, Tv, Tt, Tz, TF, TC, TG, TH;
        SIMD_FLOAT TI, TJ, TK, TL, TM, TN, TO, TP, TQ;
        T1    = Cr[0];
        TS    = Cr[WS(cs, 10)];
        TR    = Cr[WS(cs, 15)];
        T2    = Cr[WS(cs, 5)];
        Tf    = Ci[WS(cs, 10)];
        Tg    = Ci[WS(cs, 5)];
        T3    = Ci[WS(cs, 8)];
        T4    = Ci[WS(cs, 7)];
        T6    = Cr[WS(cs, 1)];
        T7    = Cr[WS(cs, 14)];
        Tl    = Ci[WS(cs, 4)];
        Tm    = Ci[WS(cs, 11)];
        Tc    = Cr[WS(cs, 2)];
        Td    = Cr[WS(cs, 13)];
        Ti    = Cr[WS(cs, 3)];
        Tj    = Cr[WS(cs, 12)];
        T9    = Ci[WS(cs, 6)];
        Th    = Tf + Tg;
        Ta    = Ci[WS(cs, 9)];
        T5    = T3 + T4;
        To    = Cr[WS(cs, 4)];
        T8    = T6 - T7;
        Tp    = Cr[WS(cs, 11)];
        Tn    = Tl + Tm;
        Tu    = Ci[WS(cs, 2)];
        Te    = Tc - Td;
        Tv    = Ci[WS(cs, 13)];
        Tk    = Ti - Tj;
        Tr    = Ci[WS(cs, 12)];
        Ts    = Ci[WS(cs, 3)];
        Tb    = T9 + Ta;
        Tx    = Cr[WS(cs, 6)];
        Ty    = Cr[WS(cs, 9)];
        TD    = Cr[WS(cs, 7)];
        Tq    = To - Tp;
        TE    = Cr[WS(cs, 8)];
        TA    = Ci[WS(cs, 14)];
        TB    = Ci[WS(cs, 1)];
        Tw    = Tu + Tv;
        Tt    = Tr + Ts;
        Tz    = Tx - Ty;
        TF    = TD - TE;
        TC    = TA + TB;
        TG    = SIMD_FMADD(KP502754139, TF, TC);
        TH    = SIMD_FMADD(KP672816364, TG, Tz);
        TI    = SIMD_FMADD(KP759747122, TH, Tw);
        TJ    = SIMD_FMADD(KP691981708, TI, Tt);
        TK    = SIMD_FMADD(KP878431275, TJ, Tq);
        TL    = SIMD_FMADD(KP900404044, TK, Tn);
        TM    = SIMD_FMADD(KP918577521, TL, Tk);
        TN    = SIMD_FMADD(KP934172358, TM, Th);
        TO    = SIMD_FMADD(KP947982825, TN, Te);
        TP    = SIMD_FMADD(KP960558538, TO, Tb);
        TQ    = SIMD_FMADD(KP972303684, TP, T8);
        R0[0] = T1 +
                SIMD_FMADD(KP1_989043790, SIMD_FMADD(KP983535511, TQ, T5), T2) -
                (TR + TS);
    }
}
