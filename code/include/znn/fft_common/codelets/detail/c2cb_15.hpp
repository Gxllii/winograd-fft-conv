//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<15, 0>
{
    static constexpr long_t flops           = 240;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 156 FP additions, 84 FP multiplications,
 * (or, 72 additions, 0 multiplications, 84 fused multiply/add),
 * 114 stack variables, 6 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T5, T2l, Tx, TV, T1z, T1X, Tr, T2s, Tb, T19, T2n, T2e, T1H,
            T11, TT;
        SIMD_FLOAT T24, T1b, Ta, T1r, T1B, T1Z, T1Q, Te, T1e, T2f, T18, TW, TC,
            TG, T1c;
        SIMD_FLOAT T16, Tc, Td, T17, TB, TE, Ty, TF, T1, T1v, T2, T3, Tu, Tv,
            TD;
        SIMD_FLOAT Tf;
        T1  = ri[0];
        T1v = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        Tu  = ii[WS(is, 5)];
        Tv  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Th, T1h, Tm, T1y, Tw, T1m, Tk, T1k, TP, TM, T1i, TQ, Tp,
                T1p, Tt;
            SIMD_FLOAT T1x, Ti, Tj, TK, TL, Tn, To, T4, T1w, T1l, T1O, T1P, T1q,
                T6, T7;
            SIMD_FLOAT T2c, TN, TZ, T8, T2d, T1o, TS, T10, Tz, TA, Tl, TJ, T1j,
                T1n, TR;
            SIMD_FLOAT TO, Tq, T9;
            Th  = ri[WS(is, 6)];
            Ti  = ri[WS(is, 11)];
            Tj  = ri[WS(is, 1)];
            T1h = ii[WS(is, 6)];
            TK  = ii[WS(is, 11)];
            TL  = ii[WS(is, 1)];
            Tm  = ri[WS(is, 9)];
            Tn  = ri[WS(is, 14)];
            To  = ri[WS(is, 4)];
            T1y = T3 - T2;
            T4  = T2 + T3;
            T1w = Tu + Tv;
            Tw  = Tu - Tv;
            T1m = ii[WS(is, 9)];
            Tk  = Ti + Tj;
            T1k = Tj - Ti;
            TP  = ii[WS(is, 14)];
            TM  = TK - TL;
            T1i = TK + TL;
            TQ  = ii[WS(is, 4)];
            Tp  = Tn + To;
            T1p = To - Tn;
            T5  = T1 + T4;
            Tt  = SIMD_FNMADD(KP500000000, T4, T1);
            T2l = T1v + T1w;
            T1x = SIMD_FNMADD(KP500000000, T1w, T1v);
            T6  = ri[WS(is, 3)];
            Tl  = Th + Tk;
            TJ  = SIMD_FNMADD(KP500000000, Tk, Th);
            T7  = ri[WS(is, 8)];
            T1j = SIMD_FNMADD(KP500000000, T1i, T1h);
            T2c = T1h + T1i;
            T1n = TP + TQ;
            TR  = TP - TQ;
            TO  = SIMD_FNMADD(KP500000000, Tp, Tm);
            Tq  = Tm + Tp;
            Tx  = SIMD_FNMADD(KP866025403, Tw, Tt);
            TV  = SIMD_FMADD(KP866025403, Tw, Tt);
            T1z = SIMD_FMADD(KP866025403, T1y, T1x);
            T1X = SIMD_FNMADD(KP866025403, T1y, T1x);
            TN  = SIMD_FNMADD(KP866025403, TM, TJ);
            TZ  = SIMD_FMADD(KP866025403, TM, TJ);
            T8  = ri[WS(is, 13)];
            T1l = SIMD_FMADD(KP866025403, T1k, T1j);
            T1O = SIMD_FNMADD(KP866025403, T1k, T1j);
            T2d = T1m + T1n;
            T1o = SIMD_FNMADD(KP500000000, T1n, T1m);
            Tr  = Tl + Tq;
            T2s = Tl - Tq;
            TS  = SIMD_FNMADD(KP866025403, TR, TO);
            T10 = SIMD_FMADD(KP866025403, TR, TO);
            T16 = ii[WS(is, 3)];
            Tz  = ii[WS(is, 8)];
            TA  = ii[WS(is, 13)];
            Tb  = ri[WS(is, 12)];
            T9  = T7 + T8;
            T19 = T8 - T7;
            Tc  = ri[WS(is, 2)];
            T2n = T2c + T2d;
            T2e = T2c - T2d;
            T1P = SIMD_FNMADD(KP866025403, T1p, T1o);
            T1q = SIMD_FMADD(KP866025403, T1p, T1o);
            T1H = TZ - T10;
            T11 = TZ + T10;
            TT  = TN + TS;
            T24 = TN - TS;
            Td  = ri[WS(is, 7)];
            T1b = ii[WS(is, 12)];
            T17 = Tz + TA;
            TB  = Tz - TA;
            TE  = ii[WS(is, 2)];
            Ty  = SIMD_FNMADD(KP500000000, T9, T6);
            Ta  = T6 + T9;
            TF  = ii[WS(is, 7)];
            T1r = T1l - T1q;
            T1B = T1l + T1q;
            T1Z = T1O + T1P;
            T1Q = T1O - T1P;
        }
        Te  = Tc + Td;
        T1e = Td - Tc;
        T2f = T16 + T17;
        T18 = SIMD_FNMADD(KP500000000, T17, T16);
        TW  = SIMD_FMADD(KP866025403, TB, Ty);
        TC  = SIMD_FNMADD(KP866025403, TB, Ty);
        TG  = TE - TF;
        T1c = TE + TF;
        TD  = SIMD_FNMADD(KP500000000, Te, Tb);
        Tf  = Tb + Te;
        {
            SIMD_FLOAT T1R, T1a, T1d, T2g, Tg, T2t, TH, TX, T2m, T2h, T1S, T1f,
                T2u, T2w, T2a;
            SIMD_FLOAT Ts, TY, T1G, TI, T25, T2i, T2k, T2q, T2o, T1A, T1g, T1Y,
                T1T, T29, T1I;
            SIMD_FLOAT T1K;
            T1R   = SIMD_FNMADD(KP866025403, T19, T18);
            T1a   = SIMD_FMADD(KP866025403, T19, T18);
            T1d   = SIMD_FNMADD(KP500000000, T1c, T1b);
            T2g   = T1b + T1c;
            Tg    = Ta + Tf;
            T2t   = Ta - Tf;
            TH    = SIMD_FNMADD(KP866025403, TG, TD);
            TX    = SIMD_FMADD(KP866025403, TG, TD);
            T2m   = T2f + T2g;
            T2h   = T2f - T2g;
            T1S   = SIMD_FNMADD(KP866025403, T1e, T1d);
            T1f   = SIMD_FMADD(KP866025403, T1e, T1d);
            T2u   = SIMD_FNMADD(KP618033988, T2t, T2s);
            T2w   = SIMD_FMADD(KP618033988, T2s, T2t);
            T2a   = Tg - Tr;
            Ts    = Tg + Tr;
            TY    = TW + TX;
            T1G   = TW - TX;
            TI    = TC + TH;
            T25   = TC - TH;
            T2i   = SIMD_FNMADD(KP618033988, T2h, T2e);
            T2k   = SIMD_FMADD(KP618033988, T2e, T2h);
            T2q   = T2m - T2n;
            T2o   = T2m + T2n;
            T1A   = T1a + T1f;
            T1g   = T1a - T1f;
            T1Y   = T1R + T1S;
            T1T   = T1R - T1S;
            ro[0] = T5 + Ts;
            T29   = SIMD_FNMADD(KP250000000, Ts, T5);
            T1I   = SIMD_FMADD(KP618033988, T1H, T1G);
            T1K   = SIMD_FNMADD(KP618033988, T1G, T1H);
            {
                SIMD_FLOAT T14, T12, T26, T28, T1M, TU, T2p, T1s, T1u, T1E, T1C,
                    T1U, T1W, T22, T20;
                SIMD_FLOAT T2j, T2b, T13, T1L, T2v, T2r, T1D, T21, T1t, T15,
                    T1V, T1N, T1J, T1F, T27;
                SIMD_FLOAT T23;
                T14            = TY - T11;
                T12            = TY + T11;
                T26            = SIMD_FNMADD(KP618033988, T25, T24);
                T28            = SIMD_FMADD(KP618033988, T24, T25);
                T1M            = TI - TT;
                TU             = TI + TT;
                io[0]          = T2l + T2o;
                T2p            = SIMD_FNMADD(KP250000000, T2o, T2l);
                T1s            = SIMD_FMADD(KP618033988, T1r, T1g);
                T1u            = SIMD_FNMADD(KP618033988, T1g, T1r);
                T1E            = T1A - T1B;
                T1C            = T1A + T1B;
                T1U            = SIMD_FNMADD(KP618033988, T1T, T1Q);
                T1W            = SIMD_FMADD(KP618033988, T1Q, T1T);
                T22            = T1Y - T1Z;
                T20            = T1Y + T1Z;
                T2j            = SIMD_FMADD(KP559016994, T2a, T29);
                T2b            = SIMD_FNMADD(KP559016994, T2a, T29);
                ro[WS(os, 10)] = TV + T12;
                T13            = SIMD_FNMADD(KP250000000, T12, TV);
                ro[WS(os, 5)]  = Tx + TU;
                T1L            = SIMD_FNMADD(KP250000000, TU, Tx);
                T2v            = SIMD_FMADD(KP559016994, T2q, T2p);
                T2r            = SIMD_FNMADD(KP559016994, T2q, T2p);
                io[WS(os, 10)] = T1z + T1C;
                T1D            = SIMD_FNMADD(KP250000000, T1C, T1z);
                io[WS(os, 5)]  = T1X + T20;
                T21            = SIMD_FNMADD(KP250000000, T20, T1X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2i, T2b);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2i, T2b);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2k, T2j);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2k, T2j);
                T1t            = SIMD_FNMADD(KP559016994, T14, T13);
                T15            = SIMD_FMADD(KP559016994, T14, T13);
                T1V            = SIMD_FMADD(KP559016994, T1M, T1L);
                T1N            = SIMD_FNMADD(KP559016994, T1M, T1L);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2u, T2r);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2u, T2r);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2w, T2v);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2w, T2v);
                T1J            = SIMD_FNMADD(KP559016994, T1E, T1D);
                T1F            = SIMD_FMADD(KP559016994, T1E, T1D);
                T27            = SIMD_FMADD(KP559016994, T22, T21);
                T23            = SIMD_FNMADD(KP559016994, T22, T21);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1s, T15);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1s, T15);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1U, T1N);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1U, T1N);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1W, T1V);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1W, T1V);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1I, T1F);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1I, T1F);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1K, T1J);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1K, T1J);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T26, T23);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T26, T23);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T28, T27);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T28, T27);
            }
        }
    }
}

template <>
struct c2cb_traits<15, 1>
{
    static constexpr long_t flops           = 238;
    static constexpr long_t operations      = 154;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 154 FP additions, 84 FP multiplications,
 * (or, 70 additions, 0 multiplications, 84 fused multiply/add),
 * 114 stack variables, 6 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1R, T4, T1S, T9, TN, T1V, T27, T1p, T2o, T10, TV, T1f,
            T1a, T2k;
        SIMD_FLOAT TT, T23, T2e, TL, T1s, T1X, T1B, T1K, T29, Ti, TO, T1o, T1d,
            T1e, Tq;
        SIMD_FLOAT Tn, TW, T1c, T1I, T1x, Te, Tj, T1A, T1J, To, T1b, Th, Tp, Tm,
            T2;
        SIMD_FLOAT T3, T6, T7, T1L, T1q, T1r, T1g, TX, T2p, Tr, TP;
        T1  = ri[0];
        T1R = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tt, T15, TC, T1U, T8, T18, Tw, T1w, TH, TA, T14, TI, TF,
                T1z, T5;
            SIMD_FLOAT T1T, Tu, Tv, Ty, Tz, TD, TE, Tk, Tl, T16, TB, TR, T1y,
                T19, TS;
            SIMD_FLOAT TK, Tf, Tg, Ta, Tb, Tc, TY, Tx, T1v, T17, TJ, TG, TZ, Td;
            Tt  = ri[WS(is, 6)];
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            T15 = ii[WS(is, 6)];
            Ty  = ii[WS(is, 11)];
            Tz  = ii[WS(is, 1)];
            TC  = ri[WS(is, 9)];
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T1U = T3 - T2;
            T4  = T2 + T3;
            T1S = T6 + T7;
            T8  = T6 - T7;
            T18 = ii[WS(is, 9)];
            Tw  = Tu + Tv;
            T1w = Tv - Tu;
            TH  = ii[WS(is, 14)];
            TA  = Ty - Tz;
            T14 = Ty + Tz;
            TI  = ii[WS(is, 4)];
            TF  = TD + TE;
            T1z = TE - TD;
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1T = SIMD_FNMADD(KP500000000, T1S, T1R);
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TY  = Tt + Tw;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            T1c = ii[WS(is, 3)];
            T1v = SIMD_FNMADD(KP500000000, T14, T15);
            T16 = T14 + T15;
            T17 = TH + TI;
            TJ  = TH - TI;
            TG  = SIMD_FNMADD(KP500000000, TF, TC);
            TZ  = TC + TF;
            T9  = SIMD_FNMADD(KP866025403, T8, T5);
            TN  = SIMD_FMADD(KP866025403, T8, T5);
            T1V = SIMD_FMADD(KP866025403, T1U, T1T);
            T27 = SIMD_FNMADD(KP866025403, T1U, T1T);
            Td  = Tb + Tc;
            T1p = Tc - Tb;
            TB  = SIMD_FNMADD(KP866025403, TA, Tx);
            TR  = SIMD_FMADD(KP866025403, TA, Tx);
            T1I = SIMD_FNMADD(KP866025403, T1w, T1v);
            T1x = SIMD_FMADD(KP866025403, T1w, T1v);
            T1y = SIMD_FNMADD(KP500000000, T17, T18);
            T19 = T17 + T18;
            T2o = TY - TZ;
            T10 = TY + TZ;
            TS  = SIMD_FMADD(KP866025403, TJ, TG);
            TK  = SIMD_FNMADD(KP866025403, TJ, TG);
            Tf  = ii[WS(is, 8)];
            Tg  = ii[WS(is, 13)];
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            TV  = Ta + Td;
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            Tl  = ri[WS(is, 7)];
            T1f = ii[WS(is, 12)];
            T1a = T16 - T19;
            T2k = T16 + T19;
            T1A = SIMD_FMADD(KP866025403, T1z, T1y);
            T1J = SIMD_FNMADD(KP866025403, T1z, T1y);
            TT  = TR + TS;
            T23 = TR - TS;
            T2e = TB - TK;
            TL  = TB + TK;
            To  = ii[WS(is, 2)];
            T1b = Tf + Tg;
            Th  = Tf - Tg;
            Tp  = ii[WS(is, 7)];
            Tm  = Tk + Tl;
            T1s = Tl - Tk;
        }
        T1X = T1x + T1A;
        T1B = T1x - T1A;
        T1K = T1I - T1J;
        T29 = T1I + T1J;
        Ti  = SIMD_FNMADD(KP866025403, Th, Te);
        TO  = SIMD_FMADD(KP866025403, Th, Te);
        T1o = SIMD_FNMADD(KP500000000, T1b, T1c);
        T1d = T1b + T1c;
        T1e = To + Tp;
        Tq  = To - Tp;
        Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
        TW  = Tj + Tm;
        T1L = SIMD_FNMADD(KP866025403, T1p, T1o);
        T1q = SIMD_FMADD(KP866025403, T1p, T1o);
        T1r = SIMD_FNMADD(KP500000000, T1e, T1f);
        T1g = T1e + T1f;
        TX  = TV + TW;
        T2p = TV - TW;
        Tr  = SIMD_FNMADD(KP866025403, Tq, Tn);
        TP  = SIMD_FMADD(KP866025403, Tq, Tn);
        {
            SIMD_FLOAT T24, T26, T1m, T2g, T2i, T1G, T1C, T1E, T20, T1O, T1Q,
                T2c, T1l, T1F, T1Z;
            SIMD_FLOAT T2b, T2j, T1h, T1M, T1t, T2q, T2s, T11, T12, TQ, T22, Ts,
                T2f, T1i, T1k;
            SIMD_FLOAT T2l, T2m, T1W, T1u, T28, T1N, T13, T1j, TU, TM, T2n, T2r,
                T1Y, T2a, T1D;
            SIMD_FLOAT T1n, T1P, T1H, T25, T21, T2h, T2d;
            T2j            = T1d + T1g;
            T1h            = T1d - T1g;
            T1M            = SIMD_FNMADD(KP866025403, T1s, T1r);
            T1t            = SIMD_FMADD(KP866025403, T1s, T1r);
            T2q            = SIMD_FNMADD(KP618033988, T2p, T2o);
            T2s            = SIMD_FMADD(KP618033988, T2o, T2p);
            T11            = T1 + SIMD_FNMADD(KP250000000, TX + T10, T4);
            T12            = TX - T10;
            TQ             = TO + TP;
            T22            = TO - TP;
            Ts             = Ti + Tr;
            T2f            = Ti - Tr;
            T1i            = SIMD_FNMADD(KP618033988, T1h, T1a);
            T1k            = SIMD_FMADD(KP618033988, T1a, T1h);
            T2l            = T1S + SIMD_FNMADD(KP250000000, T2j + T2k, T1R);
            T2m            = T2j - T2k;
            T1W            = T1q + T1t;
            T1u            = T1q - T1t;
            T28            = T1L + T1M;
            T1N            = T1L - T1M;
            T13            = SIMD_FNMADD(KP559016994, T12, T11);
            T1j            = SIMD_FMADD(KP559016994, T12, T11);
            T24            = SIMD_FMADD(KP618033988, T23, T22);
            T26            = SIMD_FNMADD(KP618033988, T22, T23);
            T1m            = TQ - TT;
            TU             = TQ + TT;
            T2g            = SIMD_FNMADD(KP618033988, T2f, T2e);
            T2i            = SIMD_FMADD(KP618033988, T2e, T2f);
            T1G            = Ts - TL;
            TM             = Ts + TL;
            T2n            = SIMD_FNMADD(KP559016994, T2m, T2l);
            T2r            = SIMD_FMADD(KP559016994, T2m, T2l);
            T1C            = SIMD_FMADD(KP618033988, T1B, T1u);
            T1E            = SIMD_FNMADD(KP618033988, T1u, T1B);
            T20            = T1W - T1X;
            T1Y            = T1W + T1X;
            T1O            = SIMD_FNMADD(KP618033988, T1N, T1K);
            T1Q            = SIMD_FMADD(KP618033988, T1K, T1N);
            T2c            = T28 - T29;
            T2a            = T28 + T29;
            ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1k, T1j);
            ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T1k, T1j);
            ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1i, T13);
            ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1i, T13);
            ro[WS(os, 9)]  = TN + TU;
            T1l            = SIMD_FNMADD(KP250000000, TU, TN);
            ro[WS(os, 4)]  = T9 + TM;
            T1F            = SIMD_FNMADD(KP250000000, TM, T9);
            io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T2s, T2r);
            io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2s, T2r);
            io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2q, T2n);
            io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2q, T2n);
            io[WS(os, 9)]  = T1Y + T1V;
            T1Z            = SIMD_FNMADD(KP250000000, T1Y, T1V);
            io[WS(os, 4)]  = T2a + T27;
            T2b            = SIMD_FNMADD(KP250000000, T2a, T27);
            T1D            = SIMD_FNMADD(KP559016994, T1m, T1l);
            T1n            = SIMD_FMADD(KP559016994, T1m, T1l);
            T1P            = SIMD_FMADD(KP559016994, T1G, T1F);
            T1H            = SIMD_FNMADD(KP559016994, T1G, T1F);
            T25            = SIMD_FNMADD(KP559016994, T20, T1Z);
            T21            = SIMD_FMADD(KP559016994, T20, T1Z);
            T2h            = SIMD_FMADD(KP559016994, T2c, T2b);
            T2d            = SIMD_FNMADD(KP559016994, T2c, T2b);
            ro[0]          = SIMD_FMADD(KP951056516, T1C, T1n);
            ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1C, T1n);
            ro[WS(os, 12)] = SIMD_FMADD(KP951056516, T1E, T1D);
            ro[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1E, T1D);
            ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1O, T1H);
            ro[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1O, T1H);
            ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1Q, T1P);
            ro[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1Q, T1P);
            io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T24, T21);
            io[0]          = SIMD_FNMADD(KP951056516, T24, T21);
            io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T26, T25);
            io[WS(os, 6)]  = SIMD_FMADD(KP951056516, T26, T25);
            io[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2g, T2d);
            io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2g, T2d);
            io[WS(os, 13)] = SIMD_FMADD(KP951056516, T2i, T2h);
            io[WS(os, 10)] = SIMD_FNMADD(KP951056516, T2i, T2h);
        }
    }
}

template <>
struct c2cb_traits<15, 2>
{
    static constexpr long_t flops           = 234;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 127;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 152 FP additions, 82 FP multiplications,
 * (or, 70 additions, 0 multiplications, 82 fused multiply/add),
 * 127 stack variables, 6 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1R, T4, T1S, T9, TN, T1V, T27, T1w, T2o, T10, TV, T1f,
            T1a, T2j;
        SIMD_FLOAT TT, T2d, T22, TL, T1z, T1W, T1u, T28, T1L, Ti, TO, T1v, T1d,
            T1e, Tq;
        SIMD_FLOAT Tn, TW, T1c, T1J, T1q, Te, Tj, T1t, T1K, To, T1b, Th, Tp, Tm,
            T2;
        SIMD_FLOAT T3, T6, T7, T1H, T1x, T1y, T1g, TX, T2p, Tr, TP, T2c, T2i,
            T26, T24;
        SIMD_FLOAT T1E, T1C, T20, T1Q, T2e, T1F, T1Z, T2f, T2b, T1O, T1P, T1D,
            T1n, T25, T21;
        SIMD_FLOAT T2g, T2h;
        T1  = ri[0];
        T1R = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tt, T15, TC, T1U, T8, T18, Tw, T1p, TH, TA, T14, TI, TF,
                T1s, T5;
            SIMD_FLOAT T1T, Tu, Tv, Ty, Tz, TD, TE, Tk, Tl, T16, TB, TR, T1r,
                T19, TS;
            SIMD_FLOAT TK, Tf, Tg, Ta, Tb, Tc, TY, Tx, T1o, T17, TJ, TG, TZ, Td;
            Tt  = ri[WS(is, 6)];
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            T15 = ii[WS(is, 6)];
            Ty  = ii[WS(is, 11)];
            Tz  = ii[WS(is, 1)];
            TC  = ri[WS(is, 9)];
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T1U = T3 - T2;
            T4  = T2 + T3;
            T1S = T6 + T7;
            T8  = T6 - T7;
            T18 = ii[WS(is, 9)];
            Tw  = Tu + Tv;
            T1p = Tv - Tu;
            TH  = ii[WS(is, 14)];
            TA  = Ty - Tz;
            T14 = Ty + Tz;
            TI  = ii[WS(is, 4)];
            TF  = TD + TE;
            T1s = TE - TD;
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1T = SIMD_FNMADD(KP500000000, T1S, T1R);
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TY  = Tt + Tw;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            T1c = ii[WS(is, 3)];
            T1o = SIMD_FNMADD(KP500000000, T14, T15);
            T16 = T14 + T15;
            T17 = TH + TI;
            TJ  = TH - TI;
            TG  = SIMD_FNMADD(KP500000000, TF, TC);
            TZ  = TC + TF;
            T9  = SIMD_FNMADD(KP866025403, T8, T5);
            TN  = SIMD_FMADD(KP866025403, T8, T5);
            T1V = SIMD_FNMADD(KP866025403, T1U, T1T);
            T27 = SIMD_FMADD(KP866025403, T1U, T1T);
            Td  = Tb + Tc;
            T1w = Tc - Tb;
            TB  = SIMD_FNMADD(KP866025403, TA, Tx);
            TR  = SIMD_FMADD(KP866025403, TA, Tx);
            T1J = SIMD_FMADD(KP866025403, T1p, T1o);
            T1q = SIMD_FNMADD(KP866025403, T1p, T1o);
            T1r = SIMD_FNMADD(KP500000000, T17, T18);
            T19 = T17 + T18;
            T2o = TY - TZ;
            T10 = TY + TZ;
            TS  = SIMD_FMADD(KP866025403, TJ, TG);
            TK  = SIMD_FNMADD(KP866025403, TJ, TG);
            Tf  = ii[WS(is, 8)];
            Tg  = ii[WS(is, 13)];
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            TV  = Ta + Td;
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            Tl  = ri[WS(is, 7)];
            T1f = ii[WS(is, 12)];
            T1a = T16 - T19;
            T2j = T16 + T19;
            T1t = SIMD_FNMADD(KP866025403, T1s, T1r);
            T1K = SIMD_FMADD(KP866025403, T1s, T1r);
            TT  = TR + TS;
            T2d = TR - TS;
            T22 = TB - TK;
            TL  = TB + TK;
            To  = ii[WS(is, 2)];
            T1b = Tf + Tg;
            Th  = Tf - Tg;
            Tp  = ii[WS(is, 7)];
            Tm  = Tk + Tl;
            T1z = Tl - Tk;
        }
        T1W = T1q + T1t;
        T1u = T1q - T1t;
        T28 = T1J + T1K;
        T1L = T1J - T1K;
        Ti  = SIMD_FNMADD(KP866025403, Th, Te);
        TO  = SIMD_FMADD(KP866025403, Th, Te);
        T1v = SIMD_FNMADD(KP500000000, T1b, T1c);
        T1d = T1b + T1c;
        T1e = To + Tp;
        Tq  = To - Tp;
        Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
        TW  = Tj + Tm;
        T1H = SIMD_FMADD(KP866025403, T1w, T1v);
        T1x = SIMD_FNMADD(KP866025403, T1w, T1v);
        T1y = SIMD_FNMADD(KP500000000, T1e, T1f);
        T1g = T1e + T1f;
        TX  = TV + TW;
        T2p = TV - TW;
        Tr  = SIMD_FNMADD(KP866025403, Tq, Tn);
        TP  = SIMD_FMADD(KP866025403, Tq, Tn);
        {
            SIMD_FLOAT T2k, T1h, T1G, T1A, T2q, T2s, T11, T12, TQ, Ts, T23, T1i,
                T1k, T2l, T2m;
            SIMD_FLOAT T1X, T1B, T29, T1I, T13, T1j, T1M, TU, TM, T1m, T2r, T2n,
                T1Y, T2a, T1N;
            SIMD_FLOAT T1l;
            T2k            = T1d + T1g;
            T1h            = T1d - T1g;
            T1G            = SIMD_FMADD(KP866025403, T1z, T1y);
            T1A            = SIMD_FNMADD(KP866025403, T1z, T1y);
            T2q            = SIMD_FNMADD(KP618033988, T2p, T2o);
            T2s            = SIMD_FMADD(KP618033988, T2o, T2p);
            T11            = T1 + SIMD_FNMADD(KP250000000, TX + T10, T4);
            T12            = TX - T10;
            TQ             = TO + TP;
            T2c            = TO - TP;
            Ts             = Ti + Tr;
            T23            = Ti - Tr;
            T1i            = SIMD_FNMADD(KP618033988, T1h, T1a);
            T1k            = SIMD_FMADD(KP618033988, T1a, T1h);
            T2l            = T1S + SIMD_FNMADD(KP250000000, T2j + T2k, T1R);
            T2m            = T2k - T2j;
            T1X            = T1x + T1A;
            T1B            = T1x - T1A;
            T29            = T1H + T1G;
            T1I            = T1G - T1H;
            T13            = SIMD_FNMADD(KP559016994, T12, T11);
            T1j            = SIMD_FMADD(KP559016994, T12, T11);
            T2i            = SIMD_FNMADD(KP618033988, T2c, T2d);
            T1M            = TQ - TT;
            TU             = TQ + TT;
            T26            = SIMD_FMADD(KP618033988, T22, T23);
            T24            = SIMD_FNMADD(KP618033988, T23, T22);
            TM             = Ts + TL;
            T1m            = Ts - TL;
            T2r            = SIMD_FMADD(KP559016994, T2m, T2l);
            T2n            = SIMD_FNMADD(KP559016994, T2m, T2l);
            T1E            = SIMD_FMADD(KP618033988, T1u, T1B);
            T1C            = SIMD_FNMADD(KP618033988, T1B, T1u);
            T1Y            = T1W + T1X;
            T20            = T1X - T1W;
            T1Q            = SIMD_FMADD(KP618033988, T1I, T1L);
            T2a            = T28 + T29;
            T2e            = T29 - T28;
            ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1k, T1j);
            ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1k, T1j);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1i, T13);
            ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1i, T13);
            T1N            = SIMD_FNMADD(KP951056516, T1M, T1L);
            ro[WS(os, 8)]  = TN + TU;
            T1F            = SIMD_FNMADD(KP250000000, TU, TN);
            ro[WS(os, 3)]  = T9 + TM;
            T1l            = SIMD_FNMADD(KP250000000, TM, T9);
            io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2s, T2r);
            io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2s, T2r);
            io[WS(os, 10)] = SIMD_FMADD(KP951056516, T2q, T2n);
            io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T2q, T2n);
            io[WS(os, 3)]  = T1Y + T1V;
            T1Z            = SIMD_FNMADD(KP250000000, T1Y, T1V);
            T2f            = SIMD_FMADD(KP951056516, T2e, T2d);
            io[WS(os, 8)]  = T2a + T27;
            T2b            = SIMD_FNMADD(KP250000000, T2a, T27);
            T1O            = SIMD_FNMADD(KP618033988, T1N, T1I);
            T1P            = SIMD_FNMADD(KP559016994, T1M, T1F);
            T1D            = SIMD_FMADD(KP559016994, T1m, T1l);
            T1n            = SIMD_FNMADD(KP559016994, T1m, T1l);
        }
        T25            = SIMD_FMADD(KP559016994, T20, T1Z);
        T21            = SIMD_FNMADD(KP559016994, T20, T1Z);
        T2g            = SIMD_FMADD(KP618033988, T2f, T2c);
        T2h            = SIMD_FNMADD(KP559016994, T2e, T2b);
        ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1O, T1F);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1Q, T1P);
        ro[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T1Q, T1P);
        ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1C, T1n);
        ro[0]          = SIMD_FNMADD(KP951056516, T1C, T1n);
        ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1E, T1D);
        ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1E, T1D);
        io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T24, T21);
        io[0]          = SIMD_FMADD(KP951056516, T24, T21);
        io[WS(os, 12)] = SIMD_FMADD(KP951056516, T26, T25);
        io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T26, T25);
        io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2g, T2b);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2i, T2h);
        io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2i, T2h);
    }
}

template <>
struct c2cb_traits<15, 3>
{
    static constexpr long_t flops           = 230;
    static constexpr long_t operations      = 150;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 115;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 150 FP additions, 80 FP multiplications,
 * (or, 70 additions, 0 multiplications, 80 fused multiply/add),
 * 115 stack variables, 7 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1R, T4, T1S, T1c, T1x, T1V, T2a, T1m, T2o, Tq, T9, TK,
            TE, T2j;
        SIMD_FLOAT TZ, T2c, T21, T1A, T1p, T27, T1k, T1L, T1W, T1B, T12, T1l,
            TJ, TN, T14;
        SIMD_FLOAT T13, Te, TF, T1J, T1g, T10, Ta, T1j, T1K, TL, TI, T11, TM,
            Td, T2;
        SIMD_FLOAT T3, T19, T1a;
        T1  = ri[0];
        T1R = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T19 = ii[WS(is, 5)];
        T1a = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tg, Tu, Tl, T1U, T1b, Tz, Tj, T1f, TA, TU, Tx, TB, To,
                T1i, T18;
            SIMD_FLOAT T1T, Th, Ti, Tv, Tw, Tm, Tn, Tb, Tc, Ty, T1y, TV, T1h,
                TD, TY;
            SIMD_FLOAT T1z, TG, TH, T5, T6, T7, Tk, TT, T1e, TC, TX, TW, Tp, T8;
            Tg  = ri[WS(is, 6)];
            Th  = ri[WS(is, 11)];
            Ti  = ri[WS(is, 1)];
            Tu  = ii[WS(is, 6)];
            Tv  = ii[WS(is, 11)];
            Tw  = ii[WS(is, 1)];
            Tl  = ri[WS(is, 9)];
            Tm  = ri[WS(is, 14)];
            Tn  = ri[WS(is, 4)];
            T1U = T3 - T2;
            T4  = T2 + T3;
            T1S = T19 + T1a;
            T1b = T19 - T1a;
            Tz  = ii[WS(is, 9)];
            Tj  = Th + Ti;
            T1f = Ti - Th;
            TA  = ii[WS(is, 14)];
            TU  = Tv - Tw;
            Tx  = Tv + Tw;
            TB  = ii[WS(is, 4)];
            To  = Tm + Tn;
            T1i = Tn - Tm;
            T18 = SIMD_FNMADD(KP500000000, T4, T1);
            T1T = SIMD_FNMADD(KP500000000, T1S, T1R);
            T5  = ri[WS(is, 3)];
            T6  = ri[WS(is, 8)];
            T7  = ri[WS(is, 13)];
            Tk  = Tg + Tj;
            TT  = SIMD_FNMADD(KP500000000, Tj, Tg);
            TF  = ii[WS(is, 3)];
            T1e = SIMD_FNMADD(KP500000000, Tx, Tu);
            Ty  = Tu + Tx;
            TC  = TA + TB;
            TX  = TA - TB;
            TW  = SIMD_FNMADD(KP500000000, To, Tl);
            Tp  = Tl + To;
            T1c = SIMD_FNMADD(KP866025403, T1b, T18);
            T1x = SIMD_FMADD(KP866025403, T1b, T18);
            T1V = SIMD_FMADD(KP866025403, T1U, T1T);
            T2a = SIMD_FNMADD(KP866025403, T1U, T1T);
            T8  = T6 + T7;
            T1m = T7 - T6;
            T1y = SIMD_FMADD(KP866025403, TU, TT);
            TV  = SIMD_FNMADD(KP866025403, TU, TT);
            T1J = SIMD_FMADD(KP866025403, T1f, T1e);
            T1g = SIMD_FNMADD(KP866025403, T1f, T1e);
            T1h = SIMD_FNMADD(KP500000000, TC, Tz);
            TD  = Tz + TC;
            T2o = Tk - Tp;
            Tq  = Tk + Tp;
            TY  = SIMD_FNMADD(KP866025403, TX, TW);
            T1z = SIMD_FMADD(KP866025403, TX, TW);
            TG  = ii[WS(is, 8)];
            TH  = ii[WS(is, 13)];
            T10 = SIMD_FNMADD(KP500000000, T8, T5);
            T9  = T5 + T8;
            Ta  = ri[WS(is, 12)];
            Tb  = ri[WS(is, 2)];
            Tc  = ri[WS(is, 7)];
            TK  = ii[WS(is, 12)];
            TE  = Ty - TD;
            T2j = Ty + TD;
            T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
            T1K = SIMD_FMADD(KP866025403, T1i, T1h);
            TZ  = TV + TY;
            T2c = TV - TY;
            T21 = T1y - T1z;
            T1A = T1y + T1z;
            TL  = ii[WS(is, 2)];
            TI  = TG + TH;
            T11 = TG - TH;
            TM  = ii[WS(is, 7)];
            Td  = Tb + Tc;
            T1p = Tc - Tb;
        }
        T27 = T1g + T1j;
        T1k = T1g - T1j;
        T1L = T1J - T1K;
        T1W = T1J + T1K;
        T1B = SIMD_FMADD(KP866025403, T11, T10);
        T12 = SIMD_FNMADD(KP866025403, T11, T10);
        T1l = SIMD_FNMADD(KP500000000, TI, TF);
        TJ  = TF + TI;
        TN  = TL + TM;
        T14 = TL - TM;
        T13 = SIMD_FNMADD(KP500000000, Td, Ta);
        Te  = Ta + Td;
        {
            SIMD_FLOAT T1H, T1n, T1o, TO, Tf, T2p, T1C, T15, T2f, T20, T2i, T26,
                T1w, T2d, T1Q;
            SIMD_FLOAT T22, T1d, T1F, T2e, T2b, T23, T1Z, T1u, T1v, T1O, T1P,
                T2g, T2h, T24, T25;
            T1H = SIMD_FMADD(KP866025403, T1m, T1l);
            T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
            T1o = SIMD_FNMADD(KP500000000, TN, TK);
            TO  = TK + TN;
            Tf  = T9 + Te;
            T2p = T9 - Te;
            T1C = SIMD_FMADD(KP866025403, T14, T13);
            T15 = SIMD_FNMADD(KP866025403, T14, T13);
            {
                SIMD_FLOAT T2k, TP, T1G, T1q, T2q, T2s, Tr, Ts, T16, T1D, TQ,
                    TS, T2l, T2m, T28;
                SIMD_FLOAT T1r, T1X, T1I, Tt, TR, T1s, T17, T1E, T1M, T2n, T2r,
                    T29, T1Y, T1t, T1N;
                T2k           = TJ + TO;
                TP            = TJ - TO;
                T1G           = SIMD_FMADD(KP866025403, T1p, T1o);
                T1q           = SIMD_FNMADD(KP866025403, T1p, T1o);
                T2q           = SIMD_FNMADD(KP618033988, T2p, T2o);
                T2s           = SIMD_FMADD(KP618033988, T2o, T2p);
                Tr            = T1 + SIMD_FNMADD(KP250000000, Tf + Tq, T4);
                Ts            = Tf - Tq;
                T16           = T12 + T15;
                T2f           = T12 - T15;
                T1D           = T1B + T1C;
                T20           = T1B - T1C;
                TQ            = SIMD_FNMADD(KP618033988, TP, TE);
                TS            = SIMD_FMADD(KP618033988, TE, TP);
                T2l           = T1S + SIMD_FNMADD(KP250000000, T2j + T2k, T1R);
                T2m           = T2k - T2j;
                T28           = T1n + T1q;
                T1r           = T1n - T1q;
                T1X           = T1H + T1G;
                T1I           = T1G - T1H;
                Tt            = SIMD_FNMADD(KP559016994, Ts, Tr);
                TR            = SIMD_FMADD(KP559016994, Ts, Tr);
                T2i           = SIMD_FMADD(KP618033988, T2c, T2f);
                T1s           = T16 - TZ;
                T17           = TZ + T16;
                T26           = SIMD_FNMADD(KP618033988, T20, T21);
                T1E           = T1A + T1D;
                T1M           = T1D - T1A;
                T2n           = SIMD_FNMADD(KP559016994, T2m, T2l);
                T2r           = SIMD_FMADD(KP559016994, T2m, T2l);
                T1w           = SIMD_FMADD(KP618033988, T1k, T1r);
                T2d           = T28 - T27;
                T29           = T27 + T28;
                T1Q           = SIMD_FMADD(KP618033988, T1I, T1L);
                T1Y           = T1W + T1X;
                T22           = T1X - T1W;
                ro[WS(os, 6)] = SIMD_FNMADD(KP951056516, TS, TR);
                ro[WS(os, 3)] = SIMD_FMADD(KP951056516, TS, TR);
                ro[0]         = SIMD_FMADD(KP951056516, TQ, Tt);
                ro[WS(os, 9)] = SIMD_FNMADD(KP951056516, TQ, Tt);
                T1t           = SIMD_FMADD(KP951056516, T1s, T1r);
                ro[WS(os, 2)] = T17 + T1c;
                T1d           = SIMD_FNMADD(KP250000000, T17, T1c);
                T1N           = SIMD_FNMADD(KP951056516, T1M, T1L);
                ro[WS(os, 7)] = T1E + T1x;
                T1F           = SIMD_FNMADD(KP250000000, T1E, T1x);
                io[WS(os, 3)] = SIMD_FNMADD(KP951056516, T2s, T2r);
                io[WS(os, 6)] = SIMD_FMADD(KP951056516, T2s, T2r);
                io[WS(os, 9)] = SIMD_FMADD(KP951056516, T2q, T2n);
                io[0]         = SIMD_FNMADD(KP951056516, T2q, T2n);
                T2e           = SIMD_FMADD(KP587785252, T2d, T2c);
                io[WS(os, 2)] = T29 + T2a;
                T2b           = SIMD_FNMADD(KP250000000, T29, T2a);
                T23           = SIMD_FMADD(KP951056516, T22, T21);
                io[WS(os, 7)] = T1Y + T1V;
                T1Z           = SIMD_FNMADD(KP250000000, T1Y, T1V);
                T1u           = SIMD_FNMADD(KP618033988, T1t, T1k);
                T1v           = SIMD_FMADD(KP559016994, T1s, T1d);
                T1O           = SIMD_FNMADD(KP618033988, T1N, T1I);
                T1P           = SIMD_FNMADD(KP559016994, T1M, T1F);
            }
            T2g            = SIMD_FNMADD(KP618033988, T2f, T2e);
            T2h            = SIMD_FMADD(KP559016994, T2d, T2b);
            T24            = SIMD_FMADD(KP618033988, T23, T20);
            T25            = SIMD_FNMADD(KP559016994, T22, T1Z);
            ro[WS(os, 5)]  = SIMD_FMADD(KP951056516, T1u, T1d);
            ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1w, T1v);
            ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1w, T1v);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1O, T1F);
            ro[WS(os, 10)] = SIMD_FMADD(KP951056516, T1Q, T1P);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1Q, T1P);
            io[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T2g, T2b);
            io[WS(os, 11)] = SIMD_FMADD(KP951056516, T2i, T2h);
            io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2i, T2h);
            io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T24, T1Z);
            io[WS(os, 10)] = SIMD_FNMADD(KP951056516, T26, T25);
            io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T26, T25);
        }
    }
}

template <>
struct c2cb_traits<15, 4>
{
    static constexpr long_t flops           = 226;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 118;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 148 FP additions, 78 FP multiplications,
 * (or, 70 additions, 0 multiplications, 78 fused multiply/add),
 * 118 stack variables, 7 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1R, T4, T1S, T9, TN, T1V, T2a, T1q, T2p, T10, TV, T1f,
            T18, T2j;
        SIMD_FLOAT T21, TT, TL, T2c, T1n, T1z, T1W, T27, T1I, Ti, TO, T1p, T1d,
            T1e, Tq;
        SIMD_FLOAT Tn, TW, T1c, T1G, T1v, Te, Tj, T1H, T1y, T1b, Th, To, Tp, Tm,
            T2;
        SIMD_FLOAT T3, T6, T7, T1J, T1r, T1m, T1g, TX, T2o, Tr, TP, T2k, T1h,
            T1K, T1o;
        SIMD_FLOAT T2q, T11, T19, T20, TQ, T2f, Ts;
        T1  = ri[0];
        T1R = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tt, T13, TC, T1U, T8, T16, Tw, T1u, TH, TA, T12, TI, TF,
                T1x, T5;
            SIMD_FLOAT T1T, Tu, Tv, Ty, Tz, TD, TE, T14, TB, TR, T1w, T17, TS,
                TK, Tf;
            SIMD_FLOAT Tg, Ta, Tb, Tc, TY, Tx, T1t, T15, TJ, TG, TZ, Td, Tk, Tl;
            Tt  = ri[WS(is, 6)];
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            T13 = ii[WS(is, 6)];
            Ty  = ii[WS(is, 11)];
            Tz  = ii[WS(is, 1)];
            TC  = ri[WS(is, 9)];
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T1U = T3 - T2;
            T4  = T2 + T3;
            T1S = T6 + T7;
            T8  = T6 - T7;
            T16 = ii[WS(is, 9)];
            Tw  = Tu + Tv;
            T1u = Tv - Tu;
            TH  = ii[WS(is, 14)];
            TA  = Ty - Tz;
            T12 = Ty + Tz;
            TI  = ii[WS(is, 4)];
            TF  = TD + TE;
            T1x = TE - TD;
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1T = SIMD_FNMADD(KP500000000, T1S, T1R);
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TY  = Tt + Tw;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            T1c = ii[WS(is, 3)];
            T1t = SIMD_FNMADD(KP500000000, T12, T13);
            T14 = T12 + T13;
            T15 = TH + TI;
            TJ  = TH - TI;
            TG  = SIMD_FNMADD(KP500000000, TF, TC);
            TZ  = TC + TF;
            T9  = SIMD_FNMADD(KP866025403, T8, T5);
            TN  = SIMD_FMADD(KP866025403, T8, T5);
            T1V = SIMD_FMADD(KP866025403, T1U, T1T);
            T2a = SIMD_FNMADD(KP866025403, T1U, T1T);
            Td  = Tb + Tc;
            T1q = Tc - Tb;
            TB  = SIMD_FNMADD(KP866025403, TA, Tx);
            TR  = SIMD_FMADD(KP866025403, TA, Tx);
            T1G = SIMD_FNMADD(KP866025403, T1u, T1t);
            T1v = SIMD_FMADD(KP866025403, T1u, T1t);
            T1w = SIMD_FNMADD(KP500000000, T15, T16);
            T17 = T15 + T16;
            T2p = TY - TZ;
            T10 = TY + TZ;
            TS  = SIMD_FMADD(KP866025403, TJ, TG);
            TK  = SIMD_FNMADD(KP866025403, TJ, TG);
            Tf  = ii[WS(is, 8)];
            Tg  = ii[WS(is, 13)];
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            TV  = Ta + Td;
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            Tl  = ri[WS(is, 7)];
            T1f = ii[WS(is, 12)];
            T18 = T14 - T17;
            T2j = T14 + T17;
            T1H = SIMD_FNMADD(KP866025403, T1x, T1w);
            T1y = SIMD_FMADD(KP866025403, T1x, T1w);
            T21 = TR - TS;
            TT  = TR + TS;
            TL  = TB + TK;
            T2c = TB - TK;
            T1b = Tf + Tg;
            Th  = Tf - Tg;
            To  = ii[WS(is, 2)];
            Tp  = ii[WS(is, 7)];
            Tm  = Tk + Tl;
            T1n = Tl - Tk;
        }
        T1z = T1v - T1y;
        T1W = T1v + T1y;
        T27 = T1G + T1H;
        T1I = T1G - T1H;
        Ti  = SIMD_FNMADD(KP866025403, Th, Te);
        TO  = SIMD_FMADD(KP866025403, Th, Te);
        T1p = SIMD_FNMADD(KP500000000, T1b, T1c);
        T1d = T1b + T1c;
        T1e = To + Tp;
        Tq  = To - Tp;
        Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
        TW  = Tj + Tm;
        T1J = SIMD_FNMADD(KP866025403, T1q, T1p);
        T1r = SIMD_FMADD(KP866025403, T1q, T1p);
        T1m = SIMD_FNMADD(KP500000000, T1e, T1f);
        T1g = T1e + T1f;
        TX  = TV + TW;
        T2o = TV - TW;
        Tr  = SIMD_FNMADD(KP866025403, Tq, Tn);
        TP  = SIMD_FMADD(KP866025403, Tq, Tn);
        T2k = T1d + T1g;
        T1h = T1d - T1g;
        T1K = SIMD_FNMADD(KP866025403, T1n, T1m);
        T1o = SIMD_FMADD(KP866025403, T1n, T1m);
        T2q = SIMD_FMADD(KP618033988, T2p, T2o);
        T11 = T1 + SIMD_FNMADD(KP250000000, TX + T10, T4);
        T19 = TX - T10;
        T20 = TO - TP;
        TQ  = TO + TP;
        T2f = Ti - Tr;
        Ts  = Ti + Tr;
        {
            SIMD_FLOAT T26, T2i, T1E, T22, T1Q, T2d, T1l, T1F, T1Z, T2e, T2b,
                T1C, T1D, T1O, T1P;
            SIMD_FLOAT T24, T1k, T2l, T2m, T1X, T1s, T28, T1L, T1j, T1a, T1A,
                TU, TM, T1M, T2r;
            SIMD_FLOAT T2n, T1Y, T29, T1i, T1B, T1N, T2s, T23, T25, T2g, T2h;
            T1k            = SIMD_FMADD(KP618033988, T18, T1h);
            T2l            = T1S + SIMD_FNMADD(KP250000000, T2j + T2k, T1R);
            T2m            = T2k - T2j;
            T1X            = T1r + T1o;
            T1s            = T1o - T1r;
            T28            = T1J + T1K;
            T1L            = T1J - T1K;
            T1j            = SIMD_FMADD(KP559016994, T19, T11);
            T1a            = SIMD_FMADD(KP587785252, T19, T18);
            T26            = SIMD_FNMADD(KP618033988, T20, T21);
            T1A            = TQ - TT;
            TU             = TQ + TT;
            T2i            = SIMD_FMADD(KP618033988, T2c, T2f);
            TM             = Ts + TL;
            T1M            = Ts - TL;
            T2r            = SIMD_FMADD(KP951056516, T2m, T2o);
            T2n            = SIMD_FMADD(KP559016994, T2m, T2l);
            T1E            = SIMD_FMADD(KP618033988, T1s, T1z);
            T22            = T1X - T1W;
            T1Y            = T1W + T1X;
            T1Q            = SIMD_FMADD(KP618033988, T1I, T1L);
            T29            = T27 + T28;
            T2d            = T28 - T27;
            ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1k, T1j);
            ro[WS(os, 5)]  = SIMD_FNMADD(KP951056516, T1k, T1j);
            T1i            = SIMD_FNMADD(KP618033988, T1h, T1a);
            T1B            = SIMD_FNMADD(KP951056516, T1A, T1z);
            ro[WS(os, 6)]  = TN + TU;
            T1l            = SIMD_FNMADD(KP250000000, TU, TN);
            T1N            = SIMD_FMADD(KP951056516, T1M, T1L);
            ro[WS(os, 1)]  = T9 + TM;
            T1F            = SIMD_FNMADD(KP250000000, TM, T9);
            T2s            = SIMD_FNMADD(KP618033988, T2r, T2p);
            io[WS(os, 5)]  = SIMD_FMADD(KP951056516, T2q, T2n);
            io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2q, T2n);
            T23            = SIMD_FMADD(KP951056516, T22, T21);
            io[WS(os, 6)]  = T1Y + T1V;
            T1Z            = SIMD_FNMADD(KP250000000, T1Y, T1V);
            T2e            = SIMD_FMADD(KP587785252, T2d, T2c);
            io[WS(os, 1)]  = T29 + T2a;
            T2b            = SIMD_FNMADD(KP250000000, T29, T2a);
            ro[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1i, T11);
            T1C            = SIMD_FNMADD(KP618033988, T1B, T1s);
            T1D            = SIMD_FNMADD(KP559016994, T1A, T1l);
            T1O            = SIMD_FNMADD(KP618033988, T1N, T1I);
            T1P            = SIMD_FMADD(KP559016994, T1M, T1F);
            io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2s, T2l);
            T24            = SIMD_FMADD(KP618033988, T23, T20);
            T25            = SIMD_FNMADD(KP559016994, T22, T1Z);
            T2g            = SIMD_FNMADD(KP618033988, T2f, T2e);
            T2h            = SIMD_FMADD(KP559016994, T2d, T2b);
            ro[0]          = SIMD_FMADD(KP951056516, T1C, T1l);
            ro[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1E, T1D);
            ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1E, T1D);
            ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1O, T1F);
            ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1Q, T1P);
            ro[WS(os, 10)] = SIMD_FNMADD(KP951056516, T1Q, T1P);
            io[0]          = SIMD_FMADD(KP951056516, T24, T1Z);
            io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T26, T25);
            io[WS(os, 3)]  = SIMD_FMADD(KP951056516, T26, T25);
            io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2g, T2b);
            io[WS(os, 10)] = SIMD_FMADD(KP951056516, T2i, T2h);
            io[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2i, T2h);
        }
    }
}

template <>
struct c2cb_traits<15, 5>
{
    static constexpr long_t flops           = 212;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 120;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 140 FP additions, 72 FP multiplications,
 * (or, 68 additions, 0 multiplications, 72 fused multiply/add),
 * 120 stack variables, 9 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1O, T4, T1N, TN, T9, T21, T2d, T1t, TZ, T1S, TU, T1e,
            T1P, T17;
        SIMD_FLOAT TL, T26, T1w, T1r, T22, T2i, TT, TO, Ti, T1s, T1c, T1d, Tq,
            Tn, TV;
        SIMD_FLOAT T1I, T2f, T1b, TR, T1n, T1G, TS, Te, Tj, To, T1q, T1H, T1a,
            Th, Tp;
        SIMD_FLOAT Tm, T2, T3, T6, T7, T1K, T1u, T1v, T1f, TW, T1T, TP, Tr, T1Q,
            T1g;
        SIMD_FLOAT T1J, T1x, T1Y, T10, T18, T29, Ts, TQ, T2j;
        T1  = ri[0];
        T1O = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tt, T12, TC, T20, T8, T15, Tw, T1m, TH, TA, T11, TI, TF,
                T1p, T5;
            SIMD_FLOAT T1Z, Tu, Tv, Ty, Tz, TD, TE, Tk, Tl, T13, TB, Tf, T16,
                T1o, TK;
            SIMD_FLOAT Tg, Ta, Tb, Tc, TX, Tx, T1l, T14, TJ, TG, TY, Td;
            Tt  = ri[WS(is, 6)];
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            T12 = ii[WS(is, 6)];
            Ty  = ii[WS(is, 11)];
            Tz  = ii[WS(is, 1)];
            TC  = ri[WS(is, 9)];
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T20 = T3 - T2;
            T4  = T2 + T3;
            T1N = T6 + T7;
            T8  = T6 - T7;
            T15 = ii[WS(is, 9)];
            Tw  = Tu + Tv;
            T1m = Tv - Tu;
            TH  = ii[WS(is, 14)];
            TA  = Ty - Tz;
            T11 = Ty + Tz;
            TI  = ii[WS(is, 4)];
            TF  = TD + TE;
            T1p = TE - TD;
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            T1Z = SIMD_FNMADD(KP500000000, T1N, T1O);
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TX  = Tt + Tw;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            T1b = ii[WS(is, 3)];
            T1l = SIMD_FNMADD(KP500000000, T11, T12);
            T13 = T11 + T12;
            T14 = TH + TI;
            TJ  = TH - TI;
            TG  = SIMD_FNMADD(KP500000000, TF, TC);
            TY  = TC + TF;
            TN  = SIMD_FMADD(KP866025403, T8, T5);
            T9  = SIMD_FNMADD(KP866025403, T8, T5);
            T21 = SIMD_FNMADD(KP866025403, T20, T1Z);
            T2d = SIMD_FMADD(KP866025403, T20, T1Z);
            Td  = Tb + Tc;
            T1t = Tc - Tb;
            TR  = SIMD_FMADD(KP866025403, TA, Tx);
            TB  = SIMD_FNMADD(KP866025403, TA, Tx);
            Tf  = ii[WS(is, 8)];
            T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
            T1G = SIMD_FMADD(KP866025403, T1m, T1l);
            T16 = T14 + T15;
            T1o = SIMD_FNMADD(KP500000000, T14, T15);
            TZ  = TX + TY;
            T1S = TX - TY;
            TS  = SIMD_FMADD(KP866025403, TJ, TG);
            TK  = SIMD_FNMADD(KP866025403, TJ, TG);
            Tg  = ii[WS(is, 13)];
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            TU  = Ta + Td;
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            Tl  = ri[WS(is, 7)];
            T1e = ii[WS(is, 12)];
            To  = ii[WS(is, 2)];
            T1P = T13 + T16;
            T17 = T13 - T16;
            T1q = SIMD_FNMADD(KP866025403, T1p, T1o);
            T1H = SIMD_FMADD(KP866025403, T1p, T1o);
            TL  = TB + TK;
            T26 = TB - TK;
            T1a = Tf + Tg;
            Th  = Tf - Tg;
            Tp  = ii[WS(is, 7)];
            Tm  = Tk + Tl;
            T1w = Tl - Tk;
        }
        T1r = T1n - T1q;
        T22 = T1n + T1q;
        T2i = TR - TS;
        TT  = TR + TS;
        TO  = SIMD_FMADD(KP866025403, Th, Te);
        Ti  = SIMD_FNMADD(KP866025403, Th, Te);
        T1s = SIMD_FNMADD(KP500000000, T1a, T1b);
        T1c = T1a + T1b;
        T1d = To + Tp;
        Tq  = To - Tp;
        Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
        TV  = Tj + Tm;
        T1I = T1G - T1H;
        T2f = T1G + T1H;
        T1K = SIMD_FMADD(KP866025403, T1t, T1s);
        T1u = SIMD_FNMADD(KP866025403, T1t, T1s);
        T1v = SIMD_FNMADD(KP500000000, T1d, T1e);
        T1f = T1d + T1e;
        TW  = TU + TV;
        T1T = TU - TV;
        TP  = SIMD_FMADD(KP866025403, Tq, Tn);
        Tr  = SIMD_FNMADD(KP866025403, Tq, Tn);
        T1Q = T1c + T1f;
        T1g = T1c - T1f;
        T1J = SIMD_FMADD(KP866025403, T1w, T1v);
        T1x = SIMD_FNMADD(KP866025403, T1w, T1v);
        T1Y = SIMD_FMADD(KP618033988, T1S, T1T);
        T10 = T1 + SIMD_FNMADD(KP250000000, TW + TZ, T4);
        T18 = TW - TZ;
        T29 = Ti - Tr;
        Ts  = Ti + Tr;
        TQ  = TO + TP;
        T2j = TP - TO;
        {
            SIMD_FLOAT T1R, T2c, T1z, T2k, T1D, T27, T1M, T1k, T1F, T1W, T28,
                T25, T2h, T1B, T1j;
            SIMD_FLOAT T1U, T23, T1y, T2e, T1L, T1i, T19, TM, T1E, T1X, T1V,
                T24, T2g, T1h, T1A;
            SIMD_FLOAT T1C, T2a, T2b;
            T1j           = SIMD_FMADD(KP618033988, T17, T1g);
            T1R           = T1N + SIMD_FNMADD(KP250000000, T1P + T1Q, T1O);
            T1U           = T1Q - T1P;
            T23           = T1u + T1x;
            T1y           = T1u - T1x;
            T2e           = T1K + T1J;
            T1L           = T1J - T1K;
            T1i           = SIMD_FMADD(KP559016994, T18, T10);
            T19           = SIMD_FMADD(KP587785252, T18, T17);
            T2c           = SIMD_FMADD(KP618033988, T26, T29);
            T1z           = Ts - TL;
            TM            = Ts + TL;
            ro[WS(os, 5)] = TN + TQ + TT;
            T1E           = SIMD_FNMADD(KP381966011, TT, TQ);
            T2k           = SIMD_FMADD(KP618033988, T2j, T2i);
            T1X           = SIMD_FMADD(KP559016994, T1U, T1R);
            T1V           = SIMD_FMADD(KP951056516, T1U, T1T);
            T1D           = SIMD_FMADD(KP618033988, T1r, T1y);
            T27           = T23 - T22;
            T24           = T22 + T23;
            T1M           = SIMD_FMADD(KP618033988, T1L, T1I);
            io[WS(os, 5)] = T2f + T2e + T2d;
            T2g           = SIMD_FNMADD(KP381966011, T2f, T2e);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T1j, T1i);
            ro[WS(os, 4)] = SIMD_FNMADD(KP951056516, T1j, T1i);
            T1h           = SIMD_FNMADD(KP618033988, T1g, T19);
            T1A           = SIMD_FMADD(KP951056516, T1z, T1y);
            ro[0]         = T9 + TM;
            T1k           = SIMD_FNMADD(KP250000000, TM, T9);
            T1F           = SIMD_FNMADD(KP809016994, T1E, TN);
            io[WS(os, 4)] = SIMD_FMADD(KP951056516, T1Y, T1X);
            io[WS(os, 1)] = SIMD_FNMADD(KP951056516, T1Y, T1X);
            T1W           = SIMD_FNMADD(KP618033988, T1V, T1S);
            T28           = SIMD_FMADD(KP587785252, T27, T26);
            io[0]         = T24 + T21;
            T25           = SIMD_FNMADD(KP250000000, T24, T21);
            T2h           = SIMD_FNMADD(KP809016994, T2g, T2d);
            ro[WS(os, 7)] = SIMD_FNMADD(KP951056516, T1h, T10);
            T1B           = SIMD_FNMADD(KP618033988, T1A, T1r);
            T1C           = SIMD_FMADD(KP559016994, T1z, T1k);
            ro[WS(os, 8)] = SIMD_FMADD(KP951056516, T1M, T1F);
            ro[WS(os, 2)] = SIMD_FNMADD(KP951056516, T1M, T1F);
            io[WS(os, 7)] = SIMD_FMADD(KP951056516, T1W, T1R);
            T2a           = SIMD_FNMADD(KP618033988, T29, T28);
            T2b           = SIMD_FMADD(KP559016994, T27, T25);
            io[WS(os, 8)] = SIMD_FNMADD(KP951056516, T2k, T2h);
            io[WS(os, 2)] = SIMD_FMADD(KP951056516, T2k, T2h);
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516, T1B, T1k);
            ro[WS(os, 6)] = SIMD_FMADD(KP951056516, T1D, T1C);
            ro[WS(os, 9)] = SIMD_FNMADD(KP951056516, T1D, T1C);
            io[WS(os, 3)] = SIMD_FNMADD(KP951056516, T2a, T25);
            io[WS(os, 9)] = SIMD_FMADD(KP951056516, T2c, T2b);
            io[WS(os, 6)] = SIMD_FNMADD(KP951056516, T2c, T2b);
        }
    }
}

template <>
struct c2cb_traits<15, 6>
{
    static constexpr long_t flops           = 210;
    static constexpr long_t operations      = 138;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 112;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 138 FP additions, 72 FP multiplications,
 * (or, 66 additions, 0 multiplications, 72 fused multiply/add),
 * 112 stack variables, 10 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP288675134, +0.288675134594812882254574390250978727823800876);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1N, T4, T1Q, TW, T1O, TT, T1P, T2g, Tf, Tk, Tx, T2c, TP,
            T1a;
        SIMD_FLOAT T27, Tw, T1B, TZ, T1i, T1r, T20, TA, T11, T1G, T1g, T1R, T1X,
            T1A, T10;
        SIMD_FLOAT Tp, T1L, T1S, T1x, T1f, T1y, Tl, T1K, T1z, T1J, Ty, Tz, T1e,
            To, T2;
        SIMD_FLOAT T3, TU, TV, T1h, TB, Tq, T2h, T1C, T12, TC, T2b, T1H, T1j;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1N = ii[0];
        TU  = ii[WS(is, 5)];
        TV  = ii[WS(is, 10)];
        {
            SIMD_FLOAT T5, TF, Ta, Tb, Tc, TK, T8, T1m, TL, T15, TI, TM, T6, T7,
                TG;
            SIMD_FLOAT TH, Ts, T1n, TY, Tv, TX, Tm, Tn, T1q, Tg, T1p, T9, T1l,
                TJ, TN;
            SIMD_FLOAT T18, Tt, Te, T17, Tu, Tj, T16, Td, Th, Ti, T14, TO, T1o,
                T19;
            T5  = ri[WS(is, 3)];
            T6  = ri[WS(is, 8)];
            T7  = ri[WS(is, 13)];
            TF  = ii[WS(is, 3)];
            TG  = ii[WS(is, 8)];
            TH  = ii[WS(is, 13)];
            Ta  = ri[WS(is, 12)];
            Tb  = ri[WS(is, 2)];
            T4  = T2 + T3;
            T1Q = T3 - T2;
            Tc  = ri[WS(is, 7)];
            TW  = TU - TV;
            T1O = TU + TV;
            TK  = ii[WS(is, 12)];
            T8  = T6 + T7;
            T1m = T7 - T6;
            TL  = ii[WS(is, 2)];
            T15 = TG - TH;
            TI  = TG + TH;
            TM  = ii[WS(is, 7)];
            Tg  = ri[WS(is, 6)];
            TT  = SIMD_FNMADD(KP500000000, T4, T1);
            Td  = Tb + Tc;
            T1p = Tc - Tb;
            T1P = SIMD_FNMADD(KP500000000, T1O, T1N);
            Th  = ri[WS(is, 11)];
            Ti  = ri[WS(is, 1)];
            T9  = T5 + T8;
            T14 = SIMD_FNMADD(KP500000000, T8, T5);
            Ts  = ii[WS(is, 6)];
            T1l = SIMD_FNMADD(KP500000000, TI, TF);
            TJ  = TF + TI;
            TN  = TL + TM;
            T18 = TL - TM;
            Tt  = ii[WS(is, 11)];
            Te  = Ta + Td;
            T17 = SIMD_FNMADD(KP500000000, Td, Ta);
            Tu  = ii[WS(is, 1)];
            Tj  = Th + Ti;
            T1f = Ti - Th;
            T1y = SIMD_FMADD(KP866025403, T15, T14);
            T16 = SIMD_FNMADD(KP866025403, T15, T14);
            Tl  = ri[WS(is, 9)];
            T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
            T1K = SIMD_FMADD(KP866025403, T1m, T1l);
            TO  = TK + TN;
            T1o = SIMD_FNMADD(KP500000000, TN, TK);
            T2g = T9 - Te;
            Tf  = T9 + Te;
            T19 = SIMD_FNMADD(KP866025403, T18, T17);
            T1z = SIMD_FMADD(KP866025403, T18, T17);
            TY  = Tt - Tu;
            Tv  = Tt + Tu;
            TX  = SIMD_FNMADD(KP500000000, Tj, Tg);
            Tk  = Tg + Tj;
            Tm  = ri[WS(is, 14)];
            Tn  = ri[WS(is, 4)];
            Tx  = ii[WS(is, 9)];
            T2c = TJ + TO;
            TP  = TJ - TO;
            T1J = SIMD_FMADD(KP866025403, T1p, T1o);
            T1q = SIMD_FNMADD(KP866025403, T1p, T1o);
            Ty  = ii[WS(is, 14)];
            T1a = T16 + T19;
            T27 = T16 - T19;
            Tz  = ii[WS(is, 4)];
            Tw  = Ts + Tv;
            T1e = SIMD_FNMADD(KP500000000, Tv, Ts);
            T1B = SIMD_FMADD(KP866025403, TY, TX);
            TZ  = SIMD_FNMADD(KP866025403, TY, TX);
            T1i = Tn - Tm;
            To  = Tm + Tn;
            T1r = T1n - T1q;
            T20 = T1n + T1q;
        }
        TA  = Ty + Tz;
        T11 = Ty - Tz;
        T1G = SIMD_FMADD(KP866025403, T1f, T1e);
        T1g = SIMD_FNMADD(KP866025403, T1f, T1e);
        T1R = SIMD_FMADD(KP866025403, T1Q, T1P);
        T1X = T1z - T1y;
        T1A = T1y + T1z;
        T10 = SIMD_FNMADD(KP500000000, To, Tl);
        Tp  = Tl + To;
        T1L = T1J - T1K;
        T1S = T1K + T1J;
        T1x = SIMD_FMADD(KP866025403, TW, TT);
        T1h = SIMD_FNMADD(KP500000000, TA, Tx);
        TB  = Tx + TA;
        Tq  = Tk + Tp;
        T2h = Tk - Tp;
        T1C = SIMD_FMADD(KP866025403, T11, T10);
        T12 = SIMD_FNMADD(KP866025403, T11, T10);
        TC  = Tw - TB;
        T2b = Tw + TB;
        T1H = SIMD_FMADD(KP866025403, T1i, T1h);
        T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
        {
            SIMD_FLOAT Tr, T2d, T1k, T2a, T1s, T1Y, T1w, T25, T1M, TQ, T1t, T1c,
                T1F, T2k, T26;
            SIMD_FLOAT T22, T1V, T2i, TD, T24, T13, T1D, T1W, T2e, TS, T1Z, T1T,
                T1I, TR, TE;
            SIMD_FLOAT T1b, T1E, T2j, T2f, T21, T1U, T1u, T1d, T28, T23, T1v,
                T29;
            T2i           = SIMD_FMADD(KP618033988, T2h, T2g);
            Tr            = T1 + SIMD_FNMADD(KP250000000, Tf + Tq, T4);
            TD            = Tf - Tq;
            T24           = TZ - T12;
            T13           = TZ + T12;
            T1D           = T1B + T1C;
            T1W           = T1B - T1C;
            T2d           = T1O + SIMD_FNMADD(KP250000000, T2b + T2c, T1N);
            T2e           = T2c - T2b;
            TS            = SIMD_FMADD(KP618033988, TC, TP);
            T1Z           = T1g + T1j;
            T1k           = T1g - T1j;
            T1T           = T1G + T1H;
            T1I           = T1G - T1H;
            TR            = SIMD_FMADD(KP559016994, TD, Tr);
            TE            = SIMD_FMADD(KP587785252, TD, TC);
            T2a           = SIMD_FMADD(KP618033988, T24, T27);
            T1s           = T1a - T13;
            T1b           = T13 + T1a;
            ro[WS(os, 4)] = T1D + T1A + T1x;
            T1E           = SIMD_FNMADD(KP381966011, T1D, T1A);
            T1Y           = SIMD_FMADD(KP618033988, T1X, T1W);
            T2j           = SIMD_FMADD(KP951056516, T2e, T2g);
            T2f           = SIMD_FMADD(KP559016994, T2e, T2d);
            T1w           = SIMD_FMADD(KP618033988, T1k, T1r);
            T25           = T20 - T1Z;
            T21           = T1Z + T20;
            T1M           = SIMD_FMADD(KP618033988, T1L, T1I);
            io[WS(os, 4)] = T1T + T1S + T1R;
            T1U           = SIMD_FNMADD(KP381966011, T1T, T1S);
            ro[0]         = SIMD_FMADD(KP951056516, TS, TR);
            ro[WS(os, 3)] = SIMD_FNMADD(KP951056516, TS, TR);
            TQ            = SIMD_FNMADD(KP618033988, TP, TE);
            T1t           = SIMD_FMADD(KP951056516, T1s, T1r);
            T1c           = SIMD_FMADD(KP288675134, T1b, TW);
            T1F           = SIMD_FNMADD(KP809016994, T1E, T1x);
            T2k           = SIMD_FNMADD(KP618033988, T2j, T2h);
            io[WS(os, 3)] = SIMD_FMADD(KP951056516, T2i, T2f);
            io[0]         = SIMD_FNMADD(KP951056516, T2i, T2f);
            T26           = SIMD_FMADD(KP587785252, T25, T24);
            T22           = SIMD_FMADD(KP288675134, T21, T1Q);
            T1V           = SIMD_FNMADD(KP809016994, T1U, T1R);
            ro[WS(os, 6)] = SIMD_FNMADD(KP951056516, TQ, Tr);
            T1u           = SIMD_FNMADD(KP618033988, T1t, T1k);
            T1d           = SIMD_FNMADD(KP866025403, T1c, TT);
            ro[WS(os, 7)] = SIMD_FMADD(KP951056516, T1M, T1F);
            ro[WS(os, 1)] = SIMD_FNMADD(KP951056516, T1M, T1F);
            io[WS(os, 6)] = SIMD_FMADD(KP951056516, T2k, T2d);
            T28           = SIMD_FNMADD(KP618033988, T27, T26);
            T23           = SIMD_FNMADD(KP866025403, T22, T1P);
            io[WS(os, 7)] = SIMD_FNMADD(KP951056516, T1Y, T1V);
            io[WS(os, 1)] = SIMD_FMADD(KP951056516, T1Y, T1V);
            T1v           = SIMD_FMADD(KP559016994, T1s, T1d);
            ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1u, T1d);
            T29           = SIMD_FMADD(KP559016994, T25, T23);
            io[WS(os, 2)] = SIMD_FNMADD(KP951056516, T28, T23);
            ro[WS(os, 8)] = SIMD_FNMADD(KP951056516, T1w, T1v);
            ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T1w, T1v);
            io[WS(os, 8)] = SIMD_FMADD(KP951056516, T2a, T29);
            io[WS(os, 5)] = SIMD_FNMADD(KP951056516, T2a, T29);
        }
    }
}

template <>
struct c2cb_traits<15, 7>
{
    static constexpr long_t flops           = 206;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 118;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 136 FP additions, 70 FP multiplications,
 * (or, 66 additions, 0 multiplications, 70 fused multiply/add),
 * 118 stack variables, 10 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP288675134, +0.288675134594812882254574390250978727823800876);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1N, T4, T1Q, T8, T1O, T5, T1P, T2e, TO, TP, T11, T2b,
            TZ, T1e;
        SIMD_FLOAT T27, T15, TB, T1f, T1p, T1Z, T1y, T9, T1L, T1S, T1X, Ts, TJ,
            T10, T1n;
        SIMD_FLOAT T1G, T1R, TG, TQ, T1m, Ti, TC, T1K, Tr, T1J, TH, TI, T1l, TF,
            T2;
        SIMD_FLOAT T3, T6, T7, T1o, T12, TR, T2f, TK, T1g, T16, T2c, T1H, T1q,
            T17, TS;
        SIMD_FLOAT T1h, T24, TL, T1W;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1N = ii[0];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Ta, TU, Tj, Tk, Tl, TX, Td, T1t, To, Th, TT, Tp, Tb, Tc,
                Tf;
            SIMD_FLOAT Tg, T1u, TA, Tx, TD, TE, T1x, Tt, T1w, TM, T14, T1s, TV,
                TW, Tq;
            SIMD_FLOAT Ty, TN, Tn, Tz, Tw, T1c, Tm, Tu, Tv, Te, TY, T1v, T1d,
                T13;
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TU  = ii[WS(is, 3)];
            Tf  = ii[WS(is, 8)];
            Tg  = ii[WS(is, 13)];
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            T4  = T2 + T3;
            T1Q = T3 - T2;
            Tl  = ri[WS(is, 7)];
            T8  = T6 - T7;
            T1O = T6 + T7;
            TX  = ii[WS(is, 12)];
            Td  = Tb + Tc;
            T1t = Tc - Tb;
            To  = ii[WS(is, 2)];
            Th  = Tf - Tg;
            TT  = Tf + Tg;
            Tp  = ii[WS(is, 7)];
            Tt  = ri[WS(is, 6)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tm  = Tk + Tl;
            T1w = Tl - Tk;
            T1P = SIMD_FNMADD(KP500000000, T1O, T1N);
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            TM  = Ta + Td;
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            T14 = ii[WS(is, 6)];
            T1s = SIMD_FNMADD(KP500000000, TT, TU);
            TV  = TT + TU;
            TW  = To + Tp;
            Tq  = To - Tp;
            Ty  = ii[WS(is, 11)];
            TN  = Tj + Tm;
            Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
            Tz  = ii[WS(is, 1)];
            Tw  = Tu + Tv;
            T1m = Tv - Tu;
            Ti  = SIMD_FMADD(KP866025403, Th, Te);
            T1c = SIMD_FNMADD(KP866025403, Th, Te);
            TC  = ri[WS(is, 9)];
            T1u = SIMD_FNMADD(KP866025403, T1t, T1s);
            T1K = SIMD_FMADD(KP866025403, T1t, T1s);
            TY  = TW + TX;
            T1v = SIMD_FNMADD(KP500000000, TW, TX);
            T2e = TM - TN;
            TO  = TM + TN;
            T1d = SIMD_FNMADD(KP866025403, Tq, Tn);
            Tr  = SIMD_FMADD(KP866025403, Tq, Tn);
            TA  = Ty - Tz;
            T13 = Ty + Tz;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            TP  = Tt + Tw;
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T11 = ii[WS(is, 9)];
            T2b = TV + TY;
            TZ  = TV - TY;
            T1x = SIMD_FNMADD(KP866025403, T1w, T1v);
            T1J = SIMD_FMADD(KP866025403, T1w, T1v);
            T1e = T1c + T1d;
            T27 = T1c - T1d;
            TH  = ii[WS(is, 14)];
            TI  = ii[WS(is, 4)];
            T15 = T13 + T14;
            T1l = SIMD_FNMADD(KP500000000, T13, T14);
            TB  = SIMD_FMADD(KP866025403, TA, Tx);
            T1f = SIMD_FNMADD(KP866025403, TA, Tx);
            T1p = TE - TD;
            TF  = TD + TE;
            T1Z = T1u + T1x;
            T1y = T1u - T1x;
        }
        T9  = SIMD_FMADD(KP866025403, T8, T5);
        T1L = T1J - T1K;
        T1S = T1K + T1J;
        T1X = Tr - Ti;
        Ts  = Ti + Tr;
        TJ  = TH - TI;
        T10 = TH + TI;
        T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
        T1G = SIMD_FMADD(KP866025403, T1m, T1l);
        T1R = SIMD_FMADD(KP866025403, T1Q, T1P);
        TG  = SIMD_FNMADD(KP500000000, TF, TC);
        TQ  = TC + TF;
        T1o = SIMD_FNMADD(KP500000000, T10, T11);
        T12 = T10 + T11;
        TR  = TP + TQ;
        T2f = TP - TQ;
        TK  = SIMD_FMADD(KP866025403, TJ, TG);
        T1g = SIMD_FNMADD(KP866025403, TJ, TG);
        T16 = T12 - T15;
        T2c = T12 + T15;
        T1H = SIMD_FMADD(KP866025403, T1p, T1o);
        T1q = SIMD_FNMADD(KP866025403, T1p, T1o);
        T17 = TO - TR;
        TS  = T1 + SIMD_FNMADD(KP250000000, TO + TR, T4);
        T1h = T1f + T1g;
        T24 = T1f - T1g;
        TL  = TB + TK;
        T1W = TB - TK;
        {
            SIMD_FLOAT T2d, T1r, T2a, T1z, T1Y, T1D, T25, T1U, T1M, T1b, T19,
                T1A, T1j, T1F, T2k;
            SIMD_FLOAT T2i, T26, T22, T2g, T20, T1I, T1T, T1a, T18, T1i, T1E,
                T2j, T2h, T21, T1V;
            SIMD_FLOAT T1B, T1k, T28, T23, T1C, T29;
            T2g           = T2b - T2c;
            T2d           = T1O + SIMD_FNMADD(KP250000000, T2b + T2c, T1N);
            T20           = T1q + T1n;
            T1r           = T1n - T1q;
            T1I           = T1G - T1H;
            T1T           = T1H + T1G;
            T1a           = SIMD_FNMADD(KP951056516, T17, TZ);
            T18           = SIMD_FMADD(KP951056516, T17, T16);
            T2a           = SIMD_FMADD(KP618033988, T24, T27);
            T1z           = T1e - T1h;
            T1i           = T1e + T1h;
            T1Y           = SIMD_FMADD(KP618033988, T1X, T1W);
            ro[WS(os, 3)] = T9 + Ts + TL;
            T1E           = SIMD_FNMADD(KP381966011, TL, Ts);
            T2j           = SIMD_FMADD(KP951056516, T2g, T2e);
            T2h           = SIMD_FMADD(KP951056516, T2g, T2f);
            T1D           = SIMD_FMADD(KP618033988, T1r, T1y);
            T25           = T1Z - T20;
            T21           = T1Z + T20;
            io[WS(os, 3)] = T1S + T1T + T1R;
            T1U           = SIMD_FNMADD(KP381966011, T1T, T1S);
            T1M           = SIMD_FMADD(KP618033988, T1L, T1I);
            T1b           = SIMD_FMADD(KP618033988, T1a, T16);
            T19           = SIMD_FNMADD(KP618033988, T18, TZ);
            T1A           = SIMD_FMADD(KP951056516, T1z, T1y);
            T1j           = SIMD_FMADD(KP288675134, T1i, T8);
            T1F           = SIMD_FNMADD(KP809016994, T1E, T9);
            T2k           = SIMD_FNMADD(KP618033988, T2j, T2f);
            T2i           = SIMD_FMADD(KP618033988, T2h, T2e);
            T26           = SIMD_FMADD(KP587785252, T25, T24);
            T22           = SIMD_FMADD(KP288675134, T21, T1Q);
            T1V           = SIMD_FNMADD(KP809016994, T1U, T1R);
            ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T1b, TS);
            ro[WS(os, 2)] = SIMD_FNMADD(KP951056516, T19, TS);
            T1B           = SIMD_FNMADD(KP618033988, T1A, T1r);
            T1k           = SIMD_FNMADD(KP866025403, T1j, T5);
            ro[WS(os, 6)] = SIMD_FMADD(KP951056516, T1M, T1F);
            ro[0]         = SIMD_FNMADD(KP951056516, T1M, T1F);
            io[WS(os, 5)] = SIMD_FMADD(KP951056516, T2k, T2d);
            io[WS(os, 2)] = SIMD_FMADD(KP951056516, T2i, T2d);
            T28           = SIMD_FNMADD(KP618033988, T27, T26);
            T23           = SIMD_FNMADD(KP866025403, T22, T1P);
            io[WS(os, 6)] = SIMD_FNMADD(KP951056516, T1Y, T1V);
            io[0]         = SIMD_FMADD(KP951056516, T1Y, T1V);
            T1C           = SIMD_FMADD(KP559016994, T1z, T1k);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T1B, T1k);
            T29           = SIMD_FMADD(KP559016994, T25, T23);
            io[WS(os, 1)] = SIMD_FNMADD(KP951056516, T28, T23);
            ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1D, T1C);
            ro[WS(os, 7)] = SIMD_FNMADD(KP951056516, T1D, T1C);
            io[WS(os, 7)] = SIMD_FMADD(KP951056516, T2a, T29);
            io[WS(os, 4)] = SIMD_FNMADD(KP951056516, T2a, T29);
        }
    }
}

template <>
struct c2cb_traits<15, 8>
{
    static constexpr long_t flops           = 202;
    static constexpr long_t operations      = 134;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 123;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 134 FP additions, 68 FP multiplications,
 * (or, 66 additions, 0 multiplications, 68 fused multiply/add),
 * 123 stack variables, 11 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP288675134, +0.288675134594812882254574390250978727823800876);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1N, T4, T1Q, T8, T1O, T5, T1P, T2e, TO, TP, T11, T2b,
            TZ, T1e;
        SIMD_FLOAT T1Z, Ts, T27, T15, T1f, TB, T1p, T1R, T1y, T23, T1J, T9, T1E,
            T1n, T10;
        SIMD_FLOAT TJ, TG, TQ, T25, T1m, TC, TH, T1l, TI, TF, T2, T3, T6, T7,
            Ta;
        SIMD_FLOAT TU, Tj, Tk, Tl, TX, Td, T1t, To, Th, TT, Tp, Tb, Tc, Tf, Tg;
        SIMD_FLOAT T1o, T12, TR, T2f, TK, T1g, T16, T2c, T1F, T1q, T17, TS, T1h,
            T1W, TL;
        SIMD_FLOAT T26;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1N = ii[0];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        Ta  = ri[WS(is, 3)];
        Tb  = ri[WS(is, 8)];
        Tc  = ri[WS(is, 13)];
        TU  = ii[WS(is, 3)];
        Tf  = ii[WS(is, 8)];
        Tg  = ii[WS(is, 13)];
        Tj  = ri[WS(is, 12)];
        Tk  = ri[WS(is, 2)];
        T4  = T2 + T3;
        T1Q = T3 - T2;
        Tl  = ri[WS(is, 7)];
        T8  = T6 - T7;
        T1O = T6 + T7;
        TX  = ii[WS(is, 12)];
        Td  = Tb + Tc;
        T1t = Tc - Tb;
        To  = ii[WS(is, 2)];
        Th  = Tf - Tg;
        TT  = Tf + Tg;
        Tp  = ii[WS(is, 7)];
        {
            SIMD_FLOAT T1u, T1I, TA, Tx, TD, TE, T1x, T1H, Tt, T1w, TM, T14,
                T1s, TV, TW;
            SIMD_FLOAT Tq, Ty, TN, Tn, Tz, Tw, Ti, T1c, Tm, Tu, Tv, Te, TY, T1v,
                T1d;
            SIMD_FLOAT Tr, T13;
            Tt  = ri[WS(is, 6)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tm  = Tk + Tl;
            T1w = Tl - Tk;
            T1P = SIMD_FNMADD(KP500000000, T1O, T1N);
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            TM  = Ta + Td;
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            T14 = ii[WS(is, 6)];
            T1s = SIMD_FNMADD(KP500000000, TT, TU);
            TV  = TT + TU;
            TW  = To + Tp;
            Tq  = To - Tp;
            Ty  = ii[WS(is, 11)];
            TN  = Tj + Tm;
            Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
            Tz  = ii[WS(is, 1)];
            Tw  = Tu + Tv;
            T1m = Tv - Tu;
            Ti  = SIMD_FMADD(KP866025403, Th, Te);
            T1c = SIMD_FNMADD(KP866025403, Th, Te);
            TC  = ri[WS(is, 9)];
            T1u = SIMD_FNMADD(KP866025403, T1t, T1s);
            T1I = SIMD_FMADD(KP866025403, T1t, T1s);
            TY  = TW + TX;
            T1v = SIMD_FNMADD(KP500000000, TW, TX);
            T2e = TM - TN;
            TO  = TM + TN;
            T1d = SIMD_FNMADD(KP866025403, Tq, Tn);
            Tr  = SIMD_FMADD(KP866025403, Tq, Tn);
            TA  = Ty - Tz;
            T13 = Ty + Tz;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            TP  = Tt + Tw;
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T11 = ii[WS(is, 9)];
            T2b = TV + TY;
            TZ  = TV - TY;
            T1x = SIMD_FNMADD(KP866025403, T1w, T1v);
            T1H = SIMD_FMADD(KP866025403, T1w, T1v);
            T1e = T1c + T1d;
            T1Z = T1c - T1d;
            Ts  = Ti + Tr;
            T27 = Ti - Tr;
            TH  = ii[WS(is, 14)];
            T15 = T13 + T14;
            T1l = SIMD_FNMADD(KP500000000, T13, T14);
            TI  = ii[WS(is, 4)];
            T1f = SIMD_FNMADD(KP866025403, TA, Tx);
            TB  = SIMD_FMADD(KP866025403, TA, Tx);
            T1p = TE - TD;
            TF  = TD + TE;
            T1R = T1u + T1x;
            T1y = T1u - T1x;
            T23 = T1I + T1H;
            T1J = T1H - T1I;
        }
        T9  = SIMD_FMADD(KP866025403, T8, T5);
        T1E = SIMD_FMADD(KP866025403, T1m, T1l);
        T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
        T10 = TH + TI;
        TJ  = TH - TI;
        TG  = SIMD_FNMADD(KP500000000, TF, TC);
        TQ  = TC + TF;
        T25 = SIMD_FMADD(KP866025403, T1Q, T1P);
        T1o = SIMD_FNMADD(KP500000000, T10, T11);
        T12 = T10 + T11;
        TR  = TP + TQ;
        T2f = TP - TQ;
        TK  = SIMD_FMADD(KP866025403, TJ, TG);
        T1g = SIMD_FNMADD(KP866025403, TJ, TG);
        T16 = T12 - T15;
        T2c = T12 + T15;
        T1F = SIMD_FMADD(KP866025403, T1p, T1o);
        T1q = SIMD_FNMADD(KP866025403, T1p, T1o);
        T17 = TO - TR;
        TS  = T1 + SIMD_FNMADD(KP250000000, TO + TR, T4);
        T1h = T1f + T1g;
        T1W = T1f - T1g;
        TL  = TB + TK;
        T26 = TK - TB;
        {
            SIMD_FLOAT T2d, T1r, T1G, T22, T1z, T1D, T1T, T1X, T28, T1b, T19,
                T1A, T1j, T1L, T2k;
            SIMD_FLOAT T2i, T2g, T1S, T24, T1a, T18, T1i, T1K, T2j, T2h, T1Y,
                T1U, T29, T1B, T1k;
            SIMD_FLOAT T1M, T20, T1V, T2a, T1C, T21;
            T2g           = T2b - T2c;
            T2d           = T1O + SIMD_FNMADD(KP250000000, T2b + T2c, T1N);
            T1S           = T1q + T1n;
            T1r           = T1n - T1q;
            T24           = T1F + T1E;
            T1G           = T1E - T1F;
            T1a           = SIMD_FNMADD(KP951056516, T17, TZ);
            T18           = SIMD_FMADD(KP951056516, T17, T16);
            T22           = SIMD_FMADD(KP618033988, T1W, T1Z);
            T1z           = T1e - T1h;
            T1i           = T1e + T1h;
            ro[WS(os, 2)] = T9 + Ts + TL;
            T1K           = SIMD_FMADD(KP525731112, TL, T1J);
            T2j           = SIMD_FMADD(KP951056516, T2g, T2e);
            T2h           = SIMD_FMADD(KP951056516, T2g, T2f);
            T1D           = SIMD_FMADD(KP618033988, T1r, T1y);
            T1T           = T1R + T1S;
            T1X           = T1R - T1S;
            io[WS(os, 2)] = T23 + T24 + T25;
            T28           = SIMD_FMADD(KP525731112, T24, T27);
            T1b           = SIMD_FMADD(KP618033988, T1a, T16);
            T19           = SIMD_FNMADD(KP618033988, T18, TZ);
            T1A           = SIMD_FMADD(KP951056516, T1z, T1y);
            T1j           = SIMD_FMADD(KP288675134, T1i, T8);
            T1L           = SIMD_FNMADD(KP726542528, T1K, Ts);
            T2k           = SIMD_FNMADD(KP618033988, T2j, T2f);
            T2i           = SIMD_FMADD(KP618033988, T2h, T2e);
            T1Y           = SIMD_FMADD(KP587785252, T1X, T1W);
            T1U           = SIMD_FMADD(KP288675134, T1T, T1Q);
            T29           = SIMD_FNMADD(KP726542528, T28, T23);
            ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1b, TS);
            ro[WS(os, 1)] = SIMD_FNMADD(KP951056516, T19, TS);
            T1B           = SIMD_FNMADD(KP618033988, T1A, T1r);
            T1k           = SIMD_FNMADD(KP866025403, T1j, T5);
            T1M           = SIMD_FNMADD(KP850650808, T1L, T1G);
            io[WS(os, 4)] = SIMD_FMADD(KP951056516, T2k, T2d);
            io[WS(os, 1)] = SIMD_FMADD(KP951056516, T2i, T2d);
            T20           = SIMD_FNMADD(KP618033988, T1Z, T1Y);
            T1V           = SIMD_FNMADD(KP866025403, T1U, T1P);
            T2a           = SIMD_FNMADD(KP850650808, T29, T26);
            T1C           = SIMD_FMADD(KP559016994, T1z, T1k);
            ro[0]         = SIMD_FMADD(KP951056516, T1B, T1k);
            ro[WS(os, 5)] = SIMD_FMADD(KP951056516, T1M, T9);
            T21           = SIMD_FMADD(KP559016994, T1X, T1V);
            io[0]         = SIMD_FNMADD(KP951056516, T20, T1V);
            io[WS(os, 5)] = SIMD_FMADD(KP951056516, T2a, T25);
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516, T1D, T1C);
            ro[WS(os, 6)] = SIMD_FNMADD(KP951056516, T1D, T1C);
            io[WS(os, 6)] = SIMD_FMADD(KP951056516, T22, T21);
            io[WS(os, 3)] = SIMD_FNMADD(KP951056516, T22, T21);
        }
    }
}

template <>
struct c2cb_traits<15, 9>
{
    static constexpr long_t flops           = 186;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 9 -name c2cb
 * -standalone */

/*
 * This function contains 124 FP additions, 62 FP multiplications,
 * (or, 62 additions, 0 multiplications, 62 fused multiply/add),
 * 114 stack variables, 10 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 9>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1L, T4, T1O, TW, T1M, TT, T1N, T26, Tf, Tk, TD, T23, TC,
            T1R;
        SIMD_FLOAT T1v, T20, T1a, TM, T1w, TZ, T1p, T1F, T1J, T1k, T1W, T1n,
            T1A, TG, T11;
        SIMD_FLOAT T10, Tp, T1P, T1z, T1m, Tl, TE, T1l, TF, To, T2, T3, TU, TV,
            T5;
        SIMD_FLOAT Ts, Ta, Tb, Tc, Tx, T8, T1f, Ty, T15, Tv, Tz, T6, T7, Tt, Tu;
        SIMD_FLOAT T1o, TH, Tq, T27, T12, T1x;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1L = ii[0];
        TU  = ii[WS(is, 5)];
        TV  = ii[WS(is, 10)];
        T5  = ri[WS(is, 3)];
        T6  = ri[WS(is, 8)];
        T7  = ri[WS(is, 13)];
        Ts  = ii[WS(is, 3)];
        Tt  = ii[WS(is, 8)];
        Tu  = ii[WS(is, 13)];
        Ta  = ri[WS(is, 12)];
        Tb  = ri[WS(is, 2)];
        T4  = T2 + T3;
        T1O = T3 - T2;
        Tc  = ri[WS(is, 7)];
        TW  = TU - TV;
        T1M = TU + TV;
        Tx  = ii[WS(is, 12)];
        T8  = T6 + T7;
        T1f = T7 - T6;
        Ty  = ii[WS(is, 2)];
        T15 = Tt - Tu;
        Tv  = Tt + Tu;
        Tz  = ii[WS(is, 7)];
        {
            SIMD_FLOAT T1E, T1g, TY, TX, Tm, Tn, T1D, T1j, Tg, T1i, T9, TI, T1e,
                Tw, TA;
            SIMD_FLOAT T18, TJ, Te, T17, TK, Tj, T16, T1t, Td, Th, Ti, T14, TB,
                T1h, T1u;
            SIMD_FLOAT T19, TL;
            Tg  = ri[WS(is, 6)];
            TT  = SIMD_FNMADD(KP500000000, T4, T1);
            Td  = Tb + Tc;
            T1i = Tc - Tb;
            T1N = SIMD_FNMADD(KP500000000, T1M, T1L);
            Th  = ri[WS(is, 11)];
            Ti  = ri[WS(is, 1)];
            T9  = T5 + T8;
            T14 = SIMD_FNMADD(KP500000000, T8, T5);
            TI  = ii[WS(is, 6)];
            T1e = SIMD_FNMADD(KP500000000, Tv, Ts);
            Tw  = Ts + Tv;
            TA  = Ty + Tz;
            T18 = Ty - Tz;
            TJ  = ii[WS(is, 11)];
            Te  = Ta + Td;
            T17 = SIMD_FNMADD(KP500000000, Td, Ta);
            TK  = ii[WS(is, 1)];
            Tj  = Th + Ti;
            T1m = Ti - Th;
            T16 = SIMD_FNMADD(KP866025403, T15, T14);
            T1t = SIMD_FMADD(KP866025403, T15, T14);
            Tl  = ri[WS(is, 9)];
            T1E = SIMD_FMADD(KP866025403, T1f, T1e);
            T1g = SIMD_FNMADD(KP866025403, T1f, T1e);
            TB  = Tx + TA;
            T1h = SIMD_FNMADD(KP500000000, TA, Tx);
            T26 = T9 - Te;
            Tf  = T9 + Te;
            T1u = SIMD_FMADD(KP866025403, T18, T17);
            T19 = SIMD_FNMADD(KP866025403, T18, T17);
            TY  = TJ - TK;
            TL  = TJ + TK;
            TX  = SIMD_FNMADD(KP500000000, Tj, Tg);
            Tk  = Tg + Tj;
            Tm  = ri[WS(is, 14)];
            Tn  = ri[WS(is, 4)];
            TD  = ii[WS(is, 9)];
            T23 = Tw + TB;
            TC  = Tw - TB;
            T1D = SIMD_FMADD(KP866025403, T1i, T1h);
            T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
            T1R = T1t - T1u;
            T1v = T1t + T1u;
            T20 = T16 - T19;
            T1a = T16 + T19;
            TE  = ii[WS(is, 14)];
            TM  = TI + TL;
            T1l = SIMD_FNMADD(KP500000000, TL, TI);
            TF  = ii[WS(is, 4)];
            T1w = SIMD_FMADD(KP866025403, TY, TX);
            TZ  = SIMD_FNMADD(KP866025403, TY, TX);
            T1p = Tn - Tm;
            To  = Tm + Tn;
            T1F = T1D - T1E;
            T1J = T1E + T1D;
            T1k = T1g - T1j;
            T1W = T1g + T1j;
        }
        T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
        T1A = SIMD_FMADD(KP866025403, T1m, T1l);
        TG  = TE + TF;
        T11 = TE - TF;
        T10 = SIMD_FNMADD(KP500000000, To, Tl);
        Tp  = Tl + To;
        T1P = SIMD_FMADD(KP866025403, T1O, T1N);
        T1z = SIMD_FMADD(KP866025403, TW, TT);
        T1o = SIMD_FNMADD(KP500000000, TG, TD);
        TH  = TD + TG;
        Tq  = Tk + Tp;
        T27 = Tk - Tp;
        T12 = SIMD_FNMADD(KP866025403, T11, T10);
        T1x = SIMD_FMADD(KP866025403, T11, T10);
        {
            SIMD_FLOAT TN, T24, T1q, T1B, TO, Tr, T1y, T1Q, T13, T21, T25, T1K,
                T1C, T1V, T1r;
            SIMD_FLOAT TR, TP, T1G, T22, T1b, T2b, T29, T28, T1S, T1s, T1X, TS,
                TQ, T1H, T1c;
            SIMD_FLOAT T2c, T2a, T1T, T1Y, T1I, T1d, T1U, T1Z;
            TN            = TH - TM;
            T24           = TM + TH;
            T1q           = SIMD_FNMADD(KP866025403, T1p, T1o);
            T1B           = SIMD_FMADD(KP866025403, T1p, T1o);
            TO            = Tf - Tq;
            Tr            = T1 + SIMD_FNMADD(KP250000000, Tf + Tq, T4);
            T1y           = T1w + T1x;
            T1Q           = T1x - T1w;
            T13           = TZ + T12;
            T21           = TZ - T12;
            T28           = T23 - T24;
            T25           = T1L + SIMD_FNMADD(KP250000000, T23 + T24, T1M);
            T1K           = T1A + T1B;
            T1C           = T1A - T1B;
            T1V           = T1n + T1q;
            T1r           = T1n - T1q;
            TR            = SIMD_FNMADD(KP951056516, TO, TC);
            TP            = SIMD_FMADD(KP951056516, TO, TN);
            ro[WS(os, 1)] = T1v + T1y + T1z;
            T1G           = SIMD_FMADD(KP525731112, T1y, T1F);
            T22           = SIMD_FMADD(KP618033988, T21, T20);
            T1b           = SIMD_FNMADD(KP381966011, T1a, T13);
            T2b           = SIMD_FMADD(KP951056516, T28, T26);
            T29           = SIMD_FMADD(KP951056516, T28, T27);
            io[WS(os, 1)] = T1J + T1K + T1P;
            T1S           = SIMD_FMADD(KP525731112, T1K, T1R);
            T1s           = SIMD_FMADD(KP618033988, T1r, T1k);
            T1X           = SIMD_FNMADD(KP381966011, T1W, T1V);
            TS            = SIMD_FMADD(KP618033988, TR, TN);
            TQ            = SIMD_FNMADD(KP618033988, TP, TC);
            T1H           = SIMD_FNMADD(KP726542528, T1G, T1v);
            T1c           = SIMD_FMADD(KP934172358, T1b, TW);
            T2c           = SIMD_FNMADD(KP618033988, T2b, T27);
            T2a           = SIMD_FMADD(KP618033988, T29, T26);
            T1T           = SIMD_FNMADD(KP726542528, T1S, T1J);
            T1Y           = SIMD_FMADD(KP934172358, T1X, T1O);
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516, TS, Tr);
            ro[0]         = SIMD_FNMADD(KP951056516, TQ, Tr);
            T1I           = SIMD_FNMADD(KP850650808, T1H, T1C);
            T1d           = SIMD_FNMADD(KP866025403, T1c, TT);
            io[WS(os, 3)] = SIMD_FMADD(KP951056516, T2c, T25);
            io[0]         = SIMD_FMADD(KP951056516, T2a, T25);
            T1U           = SIMD_FNMADD(KP850650808, T1T, T1Q);
            T1Z           = SIMD_FNMADD(KP866025403, T1Y, T1N);
            ro[WS(os, 4)] = SIMD_FMADD(KP951056516, T1I, T1z);
            ro[WS(os, 5)] = SIMD_FNMADD(KP951056516, T1s, T1d);
            ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1s, T1d);
            io[WS(os, 4)] = SIMD_FMADD(KP951056516, T1U, T1P);
            io[WS(os, 5)] = SIMD_FMADD(KP951056516, T22, T1Z);
            io[WS(os, 2)] = SIMD_FNMADD(KP951056516, T22, T1Z);
        }
    }
}

template <>
struct c2cb_traits<15, 10>
{
    static constexpr long_t flops           = 172;
    static constexpr long_t operations      = 114;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 105;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 10 -name c2cb
 * -standalone */

/*
 * This function contains 114 FP additions, 58 FP multiplications,
 * (or, 56 additions, 0 multiplications, 58 fused multiply/add),
 * 105 stack variables, 9 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 10>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1i, T4, T1l, T8, T1j, T5, T1k, T1P, T1Q, T1N, T1R, T1Z,
            T1T, T1b;
        SIMD_FLOAT T1S, T1r, TR, T1G, Ts, T1M, TM, TB, T1e, T15, T1n, T1z, T1F,
            T9, T1c;
        SIMD_FLOAT TJ, T1u, T1a, T1D, T1U, TG, T19, TC, TH, TI, T18, TF, T2, T3,
            T6;
        SIMD_FLOAT T7, T1d, T1L, T1Y, T1V, TK, TN;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1i = ii[0];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Ta, TV, Tj, Tk, Tl, T10, Td, TY, To, Th, TW, Tp, Tb, Tc,
                Tf;
            SIMD_FLOAT Tg, TZ, T1y, TA, Tx, TD, TE, T1x, T14, Tt, T13, T16, TX,
                T11, Tq;
            SIMD_FLOAT Ty, Tn, Tz, Tw, Ti, TP, Tm, Tu, Tv, Te, T12, Tr, TQ, T17;
            Ta  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 8)];
            Tc  = ri[WS(is, 13)];
            TV  = ii[WS(is, 3)];
            Tf  = ii[WS(is, 8)];
            Tg  = ii[WS(is, 13)];
            Tj  = ri[WS(is, 12)];
            Tk  = ri[WS(is, 2)];
            T4  = T2 + T3;
            T1l = T3 - T2;
            Tl  = ri[WS(is, 7)];
            T8  = T6 - T7;
            T1j = T6 + T7;
            T10 = ii[WS(is, 12)];
            Td  = Tb + Tc;
            TY  = Tc - Tb;
            To  = ii[WS(is, 2)];
            Th  = Tf - Tg;
            TW  = Tf + Tg;
            Tp  = ii[WS(is, 7)];
            Tt  = ri[WS(is, 6)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tm  = Tk + Tl;
            T13 = Tl - Tk;
            T1k = SIMD_FNMADD(KP500000000, T1j, T1i);
            Tu  = ri[WS(is, 11)];
            Tv  = ri[WS(is, 1)];
            T1P = Ta + Td;
            Te  = SIMD_FNMADD(KP500000000, Td, Ta);
            T16 = ii[WS(is, 6)];
            TX  = SIMD_FNMADD(KP500000000, TW, TV);
            T1Q = TW + TV;
            T11 = To + Tp;
            Tq  = To - Tp;
            Ty  = ii[WS(is, 11)];
            T1N = Tj + Tm;
            Tn  = SIMD_FNMADD(KP500000000, Tm, Tj);
            Tz  = ii[WS(is, 1)];
            Tw  = Tu + Tv;
            T19 = Tv - Tu;
            Ti  = SIMD_FMADD(KP866025403, Th, Te);
            TP  = SIMD_FNMADD(KP866025403, Th, Te);
            TC  = ri[WS(is, 9)];
            TZ  = SIMD_FNMADD(KP866025403, TY, TX);
            T1y = SIMD_FMADD(KP866025403, TY, TX);
            T1R = T11 + T10;
            T12 = SIMD_FNMADD(KP500000000, T11, T10);
            T1Z = T1N - T1P;
            Tr  = SIMD_FMADD(KP866025403, Tq, Tn);
            TQ  = SIMD_FNMADD(KP866025403, Tq, Tn);
            T17 = Ty + Tz;
            TA  = Ty - Tz;
            T1T = Tt + Tw;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tt);
            TD  = ri[WS(is, 14)];
            TE  = ri[WS(is, 4)];
            T1b = ii[WS(is, 9)];
            TH  = ii[WS(is, 14)];
            T1S = T1Q - T1R;
            T1x = SIMD_FMADD(KP866025403, T13, T12);
            T14 = SIMD_FNMADD(KP866025403, T13, T12);
            T1r = TP - TQ;
            TR  = TP + TQ;
            T1G = Ti - Tr;
            Ts  = Ti + Tr;
            TI  = ii[WS(is, 4)];
            T18 = SIMD_FNMADD(KP500000000, T17, T16);
            T1M = T17 + T16;
            TM  = SIMD_FNMADD(KP866025403, TA, Tx);
            TB  = SIMD_FMADD(KP866025403, TA, Tx);
            TF  = TD + TE;
            T1e = TE - TD;
            T15 = TZ - T14;
            T1n = TZ + T14;
            T1z = T1x - T1y;
            T1F = T1y + T1x;
        }
        T9  = SIMD_FMADD(KP866025403, T8, T5);
        T1c = TH + TI;
        TJ  = TH - TI;
        T1u = SIMD_FMADD(KP866025403, T19, T18);
        T1a = SIMD_FNMADD(KP866025403, T19, T18);
        T1D = SIMD_FMADD(KP866025403, T1l, T1k);
        T1U = TC + TF;
        TG  = SIMD_FNMADD(KP500000000, TF, TC);
        T1d = SIMD_FNMADD(KP500000000, T1c, T1b);
        T1L = T1c + T1b;
        T1Y = T1T - (SIMD_FMADD(KP850650808, T1Q, T1U));
        T1V = T1T + T1U;
        TK  = SIMD_FMADD(KP866025403, TJ, TG);
        TN  = SIMD_FNMADD(KP866025403, TJ, TG);
        {
            SIMD_FLOAT T1O, T20, T1v, T1f, T1W, T1s, TO, T1E, TL, T21, T1m, T1g,
                T1H, T1w, T1X;
            SIMD_FLOAT T1t, TS, T1A, T22, T1h, T1o, T1I, TT, T1B, T1p, T1J, TU,
                T1C, T1q, T1K;
            T1O   = T1L - (SIMD_FMADD(KP850650808, T1N, T1M));
            T20   = T1M + T1L;
            T1v   = SIMD_FMADD(KP866025403, T1e, T1d);
            T1f   = SIMD_FNMADD(KP866025403, T1e, T1d);
            T1W   = SIMD_FMADD(KP525731112, T1V, T1S);
            T1s   = TM - TN;
            TO    = TM + TN;
            T1E   = TK - TB;
            TL    = TB + TK;
            T21   = SIMD_FMADD(KP525731112, T20, T1Z);
            T1m   = T1a + T1f;
            T1g   = T1a - T1f;
            T1H   = T1u + T1v;
            T1w   = T1u - T1v;
            T1X   = SIMD_FNMADD(KP726542528, T1W, T1P);
            T1t   = SIMD_FMADD(KP618033988, T1s, T1r);
            TS    = SIMD_FNMADD(KP381966011, TR, TO);
            ro[0] = T9 + Ts + TL;
            T1A   = SIMD_FMADD(KP525731112, TL, T1z);
            T22   = SIMD_FNMADD(KP726542528, T21, T1R);
            T1h   = SIMD_FMADD(KP618033988, T1g, T15);
            T1o   = SIMD_FNMADD(KP381966011, T1n, T1m);
            io[0] = T1D + T1F + T1H;
            T1I   = SIMD_FMADD(KP525731112, T1H, T1G);
            ro[WS(os, 2)] =
                T1 +
                SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T1X, T1O), T4);
            TT  = SIMD_FMADD(KP934172358, TS, T8);
            T1B = SIMD_FNMADD(KP726542528, T1A, Ts);
            io[WS(os, 2)] =
                T1j + SIMD_FMADD(KP951056516,
                                 SIMD_FNMADD(KP850650808, T22, T1Y), T1i);
            T1p           = SIMD_FMADD(KP934172358, T1o, T1l);
            T1J           = SIMD_FNMADD(KP726542528, T1I, T1F);
            TU            = SIMD_FNMADD(KP866025403, TT, T5);
            T1C           = SIMD_FNMADD(KP850650808, T1B, T1w);
            T1q           = SIMD_FNMADD(KP866025403, T1p, T1k);
            T1K           = SIMD_FNMADD(KP850650808, T1J, T1E);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T1h, TU);
            ro[WS(os, 4)] = SIMD_FNMADD(KP951056516, T1h, TU);
            ro[WS(os, 3)] = SIMD_FMADD(KP951056516, T1C, T9);
            io[WS(os, 4)] = SIMD_FMADD(KP951056516, T1t, T1q);
            io[WS(os, 1)] = SIMD_FNMADD(KP951056516, T1t, T1q);
            io[WS(os, 3)] = SIMD_FMADD(KP951056516, T1K, T1D);
        }
    }
}

template <>
struct c2cb_traits<15, 11>
{
    static constexpr long_t flops           = 170;
    static constexpr long_t operations      = 110;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 104;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 11 -name c2cb
 * -standalone */

/*
 * This function contains 110 FP additions, 60 FP multiplications,
 * (or, 50 additions, 0 multiplications, 60 fused multiply/add),
 * 104 stack variables, 10 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 11>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1D, T4, T1G, T8, T1E, T5, T1F, T1r, T1j, T1q, T1A, T1k,
            T1u, TT;
        SIMD_FLOAT T1Y, T1l, Tr, T1N, T1v, T1d, TA, TW, T1R, T1H, T19, TU, TI,
            TS, T1g;
        SIMD_FLOAT T1W, T1s, TF, T1e, T1y, T1z, TR, TB, T1b, TG, T1c, TH, TQ,
            TE, T2;
        SIMD_FLOAT T3, T6, T7, TV, T1w, T1t, T1X, TJ, T1f;
        T1  = ri[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        T1D = ii[0];
        T6  = ii[WS(is, 5)];
        T7  = ii[WS(is, 10)];
        {
            SIMD_FLOAT T9, TZ, Ti, Tj, Tk, T14, Tc, T12, Tn, Tg, T10, To, Ta,
                Tb, Te;
            SIMD_FLOAT Tf, T13, Tz, Tw, TC, TD, T18, Ts, T17, TO, T11, T15, Tp,
                Tx, Tm;
            SIMD_FLOAT Ty, Tv, Th, Tl, Tt, Tu, Td, T16, Tq, TP;
            T9  = ri[WS(is, 6)];
            Ta  = ri[WS(is, 11)];
            Tb  = ri[WS(is, 1)];
            TZ  = ii[WS(is, 6)];
            Te  = ii[WS(is, 11)];
            Tf  = ii[WS(is, 1)];
            Ti  = ri[WS(is, 9)];
            Tj  = ri[WS(is, 14)];
            T4  = T2 + T3;
            T1G = T3 - T2;
            Tk  = ri[WS(is, 4)];
            T8  = T6 - T7;
            T1E = T6 + T7;
            T14 = ii[WS(is, 9)];
            Tc  = Ta + Tb;
            T12 = Tb - Ta;
            Tn  = ii[WS(is, 14)];
            Tg  = Te - Tf;
            T10 = Te + Tf;
            To  = ii[WS(is, 4)];
            Ts  = ri[WS(is, 3)];
            T5  = SIMD_FNMADD(KP500000000, T4, T1);
            Tl  = Tj + Tk;
            T17 = Tk - Tj;
            T1F = SIMD_FNMADD(KP500000000, T1E, T1D);
            Tt  = ri[WS(is, 8)];
            Tu  = ri[WS(is, 13)];
            T1y = T9 + Tc;
            Td  = SIMD_FNMADD(KP500000000, Tc, T9);
            TO  = ii[WS(is, 3)];
            T11 = SIMD_FNMADD(KP500000000, T10, TZ);
            T1r = T10 + TZ;
            T15 = Tn + To;
            Tp  = Tn - To;
            Tx  = ii[WS(is, 13)];
            T1z = Ti + Tl;
            Tm  = SIMD_FNMADD(KP500000000, Tl, Ti);
            Ty  = ii[WS(is, 8)];
            Tv  = Tt + Tu;
            TR  = Tt - Tu;
            Th  = SIMD_FNMADD(KP866025403, Tg, Td);
            T1j = SIMD_FMADD(KP866025403, Tg, Td);
            TB  = ri[WS(is, 12)];
            T1b = SIMD_FMADD(KP866025403, T12, T11);
            T13 = SIMD_FNMADD(KP866025403, T12, T11);
            T1q = T15 + T14;
            T16 = SIMD_FNMADD(KP500000000, T15, T14);
            T1A = T1y + T1z;
            Tq  = SIMD_FNMADD(KP866025403, Tp, Tm);
            T1k = SIMD_FMADD(KP866025403, Tp, Tm);
            TP  = Ty + Tx;
            Tz  = Tx - Ty;
            T1u = Ts + Tv;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
            TC  = ri[WS(is, 2)];
            TD  = ri[WS(is, 7)];
            TT  = ii[WS(is, 12)];
            TG  = ii[WS(is, 2)];
            T1Y = T1r + T1q;
            T18 = SIMD_FNMADD(KP866025403, T17, T16);
            T1c = SIMD_FMADD(KP866025403, T17, T16);
            T1l = T1j + T1k;
            Tr  = Th + Tq;
            T1N = Th - Tq;
            TH  = ii[WS(is, 7)];
            TQ  = SIMD_FNMADD(KP500000000, TP, TO);
            T1v = TP + TO;
            T1d = SIMD_FNMADD(KP866025403, Tz, Tw);
            TA  = SIMD_FMADD(KP866025403, Tz, Tw);
            TE  = TC + TD;
            TW  = TD - TC;
            T1R = T1b + T1c;
            T1H = T13 + T18;
            T19 = T13 - T18;
        }
        TU  = TG + TH;
        TI  = TG - TH;
        TS  = SIMD_FMADD(KP866025403, TR, TQ);
        T1g = SIMD_FNMADD(KP866025403, TR, TQ);
        T1W = T1y - (SIMD_FMADD(KP850650808, T1v, T1z));
        T1s = TB + TE;
        TF  = SIMD_FMSUB(KP500000000, TE, TB);
        T1e = T1b - (SIMD_FMADD(KP850650808, T1d, T1c));
        TV  = SIMD_FMSUB(KP500000000, TU, TT);
        T1w = TU + TT;
        T1t = T1q - (SIMD_FMADD(KP850650808, T1s, T1r));
        T1X = T1s - T1u;
        TJ  = SIMD_FMADD(KP866025403, TI, TF);
        T1f = SIMD_FNMADD(KP866025403, TI, TF);
        {
            SIMD_FLOAT T1x, T1h, TX, T1Z, T1Q, T1M, TK, T1B, T1P, T1i, T1I, TY,
                T20, T1S, T1O;
            SIMD_FLOAT TL, T1C, T1m, T1a, T1J, T1T, TM, T1n, T1K, T1U, TN, T1o,
                T1L, T1V, T1p;
            T1x = T1v - T1w;
            T1h = SIMD_FNMADD(KP866025403, TW, TV);
            TX  = SIMD_FMADD(KP866025403, TW, TV);
            T1Z = SIMD_FMADD(KP525731112, T1Y, T1X);
            T1Q = T1d + T1f;
            T1M = TA + TJ;
            TK  = TA - TJ;
            T1B = SIMD_FMADD(KP525731112, T1A, T1x);
            T1P = T1k - (SIMD_FNMADD(KP850650808, T1h, T1j));
            T1i = T1g + T1h;
            T1I = TS - TX;
            TY  = TS + TX;
            T20 = SIMD_FNMADD(KP726542528, T1Z, T1w);
            T1S = SIMD_FMADD(KP525731112, T1R, T1Q);
            T1O = SIMD_FMADD(KP618033988, T1N, T1M);
            TL  = SIMD_FNMADD(KP381966011, TK, Tr);
            T1C = SIMD_FNMADD(KP726542528, T1B, T1u);
            T1m = SIMD_FNMADD(KP525731112, T1l, T1i);
            T1a = SIMD_FMADD(KP618033988, T19, TY);
            T1J = SIMD_FNMADD(KP381966011, T1I, T1H);
            io[WS(os, 1)] =
                T1E + SIMD_FMADD(KP951056516,
                                 SIMD_FNMADD(KP850650808, T20, T1W), T1D);
            T1T = SIMD_FNMADD(KP726542528, T1S, T1g);
            TM  = SIMD_FMADD(KP934172358, TL, T8);
            ro[WS(os, 1)] =
                T1 +
                SIMD_FMADD(KP951056516, SIMD_FNMADD(KP850650808, T1C, T1t), T4);
            T1n           = SIMD_FNMADD(KP726542528, T1m, T1f);
            T1K           = SIMD_FMADD(KP934172358, T1J, T1G);
            T1U           = SIMD_FNMADD(KP934172358, T1T, T1G);
            TN            = SIMD_FNMADD(KP866025403, TM, T5);
            T1o           = SIMD_FMADD(KP934172358, T1n, T8);
            T1L           = SIMD_FNMADD(KP866025403, T1K, T1F);
            T1V           = SIMD_FMADD(KP910592997, T1U, T1P);
            ro[0]         = SIMD_FMADD(KP951056516, T1a, TN);
            ro[WS(os, 3)] = SIMD_FNMADD(KP951056516, T1a, TN);
            T1p           = SIMD_FMADD(KP910592997, T1o, T1e);
            io[WS(os, 3)] = SIMD_FMADD(KP951056516, T1O, T1L);
            io[0]         = SIMD_FNMADD(KP951056516, T1O, T1L);
            io[WS(os, 2)] = SIMD_FMADD(KP951056516, T1V, T1F);
            ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1p, T5);
        }
    }
}

template <>
struct c2cb_traits<15, 12>
{
    static constexpr long_t flops           = 168;
    static constexpr long_t operations      = 108;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 95;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 12 -name c2cb
 * -standalone */

/*
 * This function contains 108 FP additions, 60 FP multiplications,
 * (or, 48 additions, 0 multiplications, 60 fused multiply/add),
 * 95 stack variables, 8 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 12>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T1C, T1G, T4, T1D, TX, Tj, Tz, Tp, Ta, T1r, T1i, T1s, TR,
            Tu;
        SIMD_FLOAT T1V, T1f, T1p, T9, TB, TK, TA, TU, T1t, T1j, T1H, Td, TZ,
            T18, T1o;
        SIMD_FLOAT T1w, T15, TE, T1a, T1Q, T1u, TO, T1E, T2, T3, TV, TW, T19,
            Te, TY;
        SIMD_FLOAT TF, T1N;
        T1  = ri[0];
        T1C = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        TV  = ii[WS(is, 5)];
        TW  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tf, Tv, Tl, Tq, Ti, TQ, Tr, T1h, Ty, Ts, To, TT, Tg, Th,
                Tw;
            SIMD_FLOAT Tx, Tm, Tn, T14, Tb, T17, TS, T16, Tc, TC, T13, TD, T5,
                TG, TH;
            SIMD_FLOAT T1g, TI, TP, Tt, T1e, T1d, T8, T6, T7, TJ;
            Tf  = ri[WS(is, 12)];
            Tg  = ri[WS(is, 2)];
            Th  = ri[WS(is, 7)];
            Tv  = ii[WS(is, 12)];
            Tw  = ii[WS(is, 2)];
            Tx  = ii[WS(is, 7)];
            Tl  = ri[WS(is, 3)];
            Tm  = ri[WS(is, 8)];
            Tn  = ri[WS(is, 13)];
            T1G = T3 - T2;
            T4  = T2 + T3;
            T1D = TV + TW;
            TX  = TV - TW;
            Tq  = ii[WS(is, 3)];
            Ti  = Tg + Th;
            TQ  = Tg - Th;
            Tr  = ii[WS(is, 8)];
            T1h = Tx - Tw;
            Ty  = Tw + Tx;
            Ts  = ii[WS(is, 13)];
            To  = Tm + Tn;
            TT  = Tm - Tn;
            T5  = ii[WS(is, 9)];
            T6  = ii[WS(is, 14)];
            T7  = ii[WS(is, 4)];
            TG  = ri[WS(is, 9)];
            TH  = ri[WS(is, 14)];
            Tj  = Tf + Ti;
            T1g = SIMD_FNMADD(KP500000000, Ti, Tf);
            TI  = ri[WS(is, 4)];
            TP  = SIMD_FNMADD(KP500000000, Ty, Tv);
            Tz  = Tv + Ty;
            Tt  = Tr + Ts;
            T1e = Ts - Tr;
            T1d = SIMD_FNMADD(KP500000000, To, Tl);
            Tp  = Tl + To;
            T8  = T6 + T7;
            T14 = T6 - T7;
            Ta  = ii[WS(is, 6)];
            Tb  = ii[WS(is, 11)];
            T1r = SIMD_FNMADD(KP866025403, T1h, T1g);
            T1i = SIMD_FMADD(KP866025403, T1h, T1g);
            TJ  = TH + TI;
            T17 = TI - TH;
            T1s = SIMD_FNMADD(KP866025403, TQ, TP);
            TR  = SIMD_FMADD(KP866025403, TQ, TP);
            TS  = SIMD_FNMADD(KP500000000, Tt, Tq);
            Tu  = Tq + Tt;
            T1V = Tj - Tp;
            T1f = SIMD_FMADD(KP866025403, T1e, T1d);
            T1p = SIMD_FNMADD(KP866025403, T1e, T1d);
            T16 = SIMD_FNMADD(KP500000000, T8, T5);
            T9  = T5 + T8;
            Tc  = ii[WS(is, 1)];
            TB  = ri[WS(is, 6)];
            TC  = ri[WS(is, 11)];
            T13 = SIMD_FNMADD(KP500000000, TJ, TG);
            TK  = TG + TJ;
            TD  = ri[WS(is, 1)];
            TA  = Tu - Tz;
            TU  = SIMD_FMADD(KP866025403, TT, TS);
            T1t = SIMD_FNMADD(KP866025403, TT, TS);
            T1j = T1f + T1i;
            T1H = T1p - T1r;
            Td  = Tb + Tc;
            TZ  = Tb - Tc;
            T18 = SIMD_FNMADD(KP866025403, T17, T16);
            T1o = SIMD_FMADD(KP866025403, T17, T16);
            T1w = SIMD_FMADD(KP866025403, T14, T13);
            T15 = SIMD_FNMADD(KP866025403, T14, T13);
            TE  = TC + TD;
            T1a = TD - TC;
            T1Q = TU + TR;
            T1u = T1s - T1t;
        }
        TO  = SIMD_FNMADD(KP500000000, T4, T1);
        T1E = SIMD_FNMADD(KP500000000, T1D, T1C);
        T19 = SIMD_FNMADD(KP500000000, Td, Ta);
        Te  = Ta + Td;
        TY  = SIMD_FNMADD(KP500000000, TE, TB);
        TF  = TB + TE;
        T1N = SIMD_FMADD(KP934172358, T18, T1G);
        {
            SIMD_FLOAT Tk, T1W, T1b, T1n, T1U, TL, T10, T1v, T1O, T1X, T1c, T1q,
                T1I, TM, T11;
            SIMD_FLOAT T1P, T1F, T1x, T1Y, T1k, T1J, TN, T12, T1R, T1y, T1l,
                T1K, T1S, T1z, T1m;
            SIMD_FLOAT T1L, T1T, T1A, T1M, T1B;
            Tk            = T9 - (SIMD_FMADD(KP850650808, Tj, Te));
            T1W           = T9 + Te;
            T1b           = SIMD_FNMADD(KP866025403, T1a, T19);
            T1n           = SIMD_FMADD(KP866025403, T1a, T19);
            T1U           = TF - (SIMD_FMADD(KP850650808, Tu, TK));
            TL            = TF + TK;
            T10           = SIMD_FNMADD(KP866025403, TZ, TY);
            T1v           = SIMD_FMADD(KP866025403, TZ, TY);
            T1O           = T1f - (SIMD_FMADD(KP910592997, T1N, T1i));
            T1X           = SIMD_FMADD(KP525731112, T1W, T1V);
            T1c           = T18 - T1b;
            T1q           = T1n - (SIMD_FMADD(KP850650808, T1p, T1o));
            T1I           = T1n + T1o;
            TM            = SIMD_FMADD(KP525731112, TL, TA);
            T11           = SIMD_FMADD(KP934172358, T10, TX);
            T1P           = T10 - T15;
            T1F           = T1w - (SIMD_FMADD(KP850650808, T1s, T1v));
            T1x           = T1v + T1w;
            T1Y           = SIMD_FNMADD(KP726542528, T1X, Tz);
            T1k           = SIMD_FMADD(KP525731112, T1j, T1c);
            T1J           = SIMD_FMADD(KP525731112, T1I, T1H);
            TN            = SIMD_FNMADD(KP726542528, TM, Tp);
            T12           = TR - (SIMD_FMADD(KP910592997, T11, TU));
            T1R           = SIMD_FMADD(KP525731112, T1Q, T1P);
            T1y           = SIMD_FMADD(KP525731112, T1x, T1u);
            io[0]         = T1D + SIMD_FMADD(KP951056516,
                                     SIMD_FNMADD(KP850650808, T1Y, T1U), T1C);
            T1l           = SIMD_FNMADD(KP726542528, T1k, T15);
            T1K           = SIMD_FNMADD(KP726542528, T1J, T1t);
            ro[0]         = T1 + SIMD_FMADD(KP951056516,
                                    SIMD_FNMADD(KP850650808, TN, Tk), T4);
            T1S           = SIMD_FNMADD(KP726542528, T1R, T1b);
            T1z           = SIMD_FNMADD(KP726542528, T1y, T1r);
            T1m           = SIMD_FNMADD(KP850650808, T1l, T12);
            T1L           = SIMD_FNMADD(KP934172358, T1K, T1G);
            T1T           = SIMD_FNMADD(KP850650808, T1S, T1O);
            T1A           = SIMD_FNMADD(KP934172358, T1z, TX);
            ro[WS(os, 2)] = SIMD_FMADD(KP951056516, T1m, TO);
            T1M           = SIMD_FMADD(KP910592997, T1L, T1F);
            io[WS(os, 2)] = SIMD_FMADD(KP951056516, T1T, T1E);
            T1B           = SIMD_FMADD(KP910592997, T1A, T1q);
            io[WS(os, 1)] = SIMD_FMADD(KP951056516, T1M, T1E);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T1B, TO);
        }
    }
}

template <>
struct c2cb_traits<15, 13>
{
    static constexpr long_t flops           = 132;
    static constexpr long_t operations      = 82;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 82;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 13 -name c2cb
 * -standalone */

/*
 * This function contains 82 FP additions, 50 FP multiplications,
 * (or, 32 additions, 0 multiplications, 50 fused multiply/add),
 * 82 stack variables, 8 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 13>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP525731112, +0.525731112119133606025669084847876607285497932);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1t, TA, TN, Tf, TY, T10, T1j, Tw, Td, T1b, TT, TM, TJ, T1k,
            Ti;
        SIMD_FLOAT T13, Ta, Tk, Tl, T5, TX, T1r, T1, T1p, T4, T1q, TV, TW, T2,
            T3;
        SIMD_FLOAT Ty, Tz, TO, T1a, T1l, T1u, Tj, T1h, Te, Tm, T11, T1c, TZ;
        T1  = ri[0];
        T1p = ii[0];
        T2  = ri[WS(is, 5)];
        T3  = ri[WS(is, 10)];
        Ty  = ii[WS(is, 5)];
        Tz  = ii[WS(is, 10)];
        {
            SIMD_FLOAT To, TP, TB, TK, Tr, TS, TG, Tv, TQ, TH, TE, Tp, Tq, Tt,
                Tu;
            SIMD_FLOAT TC, TD, T6, T7, T8, Tb, Ts, Tc, TR, TI, TL, TF, Tg, Th,
                T9;
            To  = ri[WS(is, 3)];
            Tp  = ri[WS(is, 8)];
            Tq  = ri[WS(is, 13)];
            TP  = ii[WS(is, 3)];
            Tt  = ii[WS(is, 13)];
            Tu  = ii[WS(is, 8)];
            TB  = ri[WS(is, 12)];
            TC  = ri[WS(is, 2)];
            TD  = ri[WS(is, 7)];
            T1t = T3 - T2;
            T4  = T2 + T3;
            T1q = Ty + Tz;
            TA  = Ty - Tz;
            TK  = ii[WS(is, 12)];
            Tr  = Tp + Tq;
            TS  = Tp - Tq;
            TG  = ii[WS(is, 7)];
            Tv  = Tt - Tu;
            TQ  = Tt + Tu;
            TH  = ii[WS(is, 2)];
            TE  = TC + TD;
            TN  = TC - TD;
            T6  = ii[WS(is, 6)];
            T7  = ii[WS(is, 11)];
            T8  = ii[WS(is, 1)];
            TV  = ri[WS(is, 6)];
            Tb  = ri[WS(is, 1)];
            Ts  = SIMD_FNMADD(KP500000000, Tr, To);
            Tc  = ri[WS(is, 11)];
            Tf  = ii[WS(is, 9)];
            TR  = SIMD_FNMADD(KP500000000, TQ, TP);
            TI  = TG - TH;
            TL  = TG + TH;
            TF  = SIMD_FNMADD(KP500000000, TE, TB);
            Tg  = ii[WS(is, 14)];
            Th  = ii[WS(is, 4)];
            T9  = T7 + T8;
            TY  = T7 - T8;
            T10 = ri[WS(is, 9)];
            T1j = SIMD_FMADD(KP866025403, Tv, Ts);
            Tw  = SIMD_FNMADD(KP866025403, Tv, Ts);
            Td  = Tb - Tc;
            TW  = Tb + Tc;
            T1b = SIMD_FMADD(KP866025403, TS, TR);
            TT  = SIMD_FNMADD(KP866025403, TS, TR);
            TM  = SIMD_FNMADD(KP500000000, TL, TK);
            TJ  = SIMD_FNMADD(KP866025403, TI, TF);
            T1k = SIMD_FMADD(KP866025403, TI, TF);
            Ti  = Tg + Th;
            T13 = Tg - Th;
            Ta  = SIMD_FNMADD(KP500000000, T9, T6);
            Tk  = ri[WS(is, 4)];
            Tl  = ri[WS(is, 14)];
        }
        T5  = SIMD_FNMADD(KP500000000, T4, T1);
        TX  = SIMD_FNMADD(KP500000000, TW, TV);
        T1r = SIMD_FNMADD(KP500000000, T1q, T1p);
        TO  = SIMD_FNMADD(KP866025403, TN, TM);
        T1a = SIMD_FMADD(KP866025403, TN, TM);
        T1l = T1j + T1k;
        T1u = Tw - TJ;
        Tj  = SIMD_FNMADD(KP500000000, Ti, Tf);
        T1h = SIMD_FNMADD(KP866025403, Td, Ta);
        Te  = SIMD_FMADD(KP866025403, Td, Ta);
        Tm  = Tk - Tl;
        T11 = Tk + Tl;
        T1c = SIMD_FNMADD(KP866025403, TY, TX);
        TZ  = SIMD_FMADD(KP866025403, TY, TX);
        {
            SIMD_FLOAT T1D, TU, T1g, Tn, T12, T1d, T1A, T1i, Tx, T1v, T1f, T14,
                T1e, T1B, T1m;
            SIMD_FLOAT T1w, T1C, T1s, T15, T1n, T1x, T1E, T16, T1o, T1y, T1F,
                T17, T1z, T1G, T18;
            SIMD_FLOAT T19;
            T1D           = T1a + T1b;
            TU            = TO - TT;
            T1g           = SIMD_FNMADD(KP866025403, Tm, Tj);
            Tn            = SIMD_FMADD(KP866025403, Tm, Tj);
            T12           = SIMD_FNMADD(KP500000000, T11, T10);
            T1d           = SIMD_FMADD(KP934172358, T1c, TA);
            T1A           = SIMD_FMADD(KP934172358, T1g, T1t);
            T1i           = T1g - T1h;
            Tx            = Te - (SIMD_FMADD(KP850650808, Tw, Tn));
            T1v           = Te + Tn;
            T1f           = SIMD_FNMADD(KP866025403, T13, T12);
            T14           = SIMD_FMADD(KP866025403, T13, T12);
            T1e           = T1a - (SIMD_FMADD(KP910592997, T1d, T1b));
            T1B           = T1j - (SIMD_FMADD(KP910592997, T1A, T1k));
            T1m           = SIMD_FMADD(KP525731112, T1l, T1i);
            T1w           = SIMD_FMADD(KP525731112, T1v, T1u);
            T1C           = T1c - T1f;
            T1s           = T14 - (SIMD_FMADD(KP850650808, TO, TZ));
            T15           = TZ + T14;
            T1n           = SIMD_FNMADD(KP726542528, T1m, T1f);
            T1x           = SIMD_FNMADD(KP726542528, T1w, TT);
            T1E           = SIMD_FMADD(KP525731112, T1D, T1C);
            T16           = SIMD_FMADD(KP525731112, T15, TU);
            T1o           = SIMD_FNMADD(KP850650808, T1n, T1e);
            T1y           = SIMD_FNMADD(KP934172358, T1x, T1t);
            T1F           = SIMD_FNMADD(KP726542528, T1E, T1h);
            T17           = SIMD_FNMADD(KP726542528, T16, TJ);
            ro[WS(os, 1)] = SIMD_FMADD(KP951056516, T1o, T5);
            T1z           = SIMD_FMADD(KP910592997, T1y, T1s);
            T1G           = SIMD_FNMADD(KP850650808, T1F, T1B);
            T18           = SIMD_FNMADD(KP934172358, T17, TA);
            io[0]         = SIMD_FMADD(KP951056516, T1z, T1r);
            io[WS(os, 1)] = SIMD_FMADD(KP951056516, T1G, T1r);
            T19           = SIMD_FMADD(KP910592997, T18, Tx);
            ro[0]         = SIMD_FMADD(KP951056516, T19, T5);
        }
    }
}

template <>
struct c2cb_traits<15, 14>
{
    static constexpr long_t flops           = 86;
    static constexpr long_t operations      = 56;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 15 -skip-k 14 -name c2cb
 * -standalone */

/*
 * This function contains 56 FP additions, 30 FP multiplications,
 * (or, 26 additions, 0 multiplications, 30 fused multiply/add),
 * 90 stack variables, 8 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 15 && SkippedOutputs == 14>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP934172358, +0.934172358962715696451118623548045329629287827);
    DK(KP726542528, +0.726542528005360885895466757480618749616092393);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP850650808, +0.850650808352039932181540497063011072240401404);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T1a, T2, TZ, Tb, TU, T1e, Tw, TT, T1c, Tf, T11, T5, TK,
            TF;
        SIMD_FLOAT T10, T8, TP, Ts, Tg, Te, TW, T12, T9, TQ, T1d, Th, TV, T13,
            Ta;
        SIMD_FLOAT TX, Ti, TY, Tj, T1b, T14, Tt, T1f, T15, T1g, T16, T1h, T17,
            T1i, T18;
        SIMD_FLOAT T1j, T19, T1k;
        T1  = ri[0];
        T1a = ii[0];
        {
            SIMD_FLOAT Tk, TL, Tx, TG, Ty, Tz, TB, TC, Tl, Tm, To, Tp, Tu, TI,
                TA;
            SIMD_FLOAT TH, TD, TN, Tn, TM, Tq, Tv, TR, TS, T3, T4, T6, TJ, TE,
                T7;
            SIMD_FLOAT Tc, TO, Tr, Td;
            Tk  = ri[WS(is, 6)];
            TL  = ii[WS(is, 6)];
            Tx  = ri[WS(is, 9)];
            TG  = ii[WS(is, 9)];
            Ty  = ii[WS(is, 14)];
            Tz  = ii[WS(is, 4)];
            TB  = ri[WS(is, 14)];
            TC  = ri[WS(is, 4)];
            Tl  = ii[WS(is, 1)];
            Tm  = ii[WS(is, 11)];
            To  = ri[WS(is, 11)];
            Tp  = ri[WS(is, 1)];
            T2  = ii[WS(is, 12)];
            TZ  = ri[WS(is, 12)];
            Tb  = ii[WS(is, 3)];
            TU  = ri[WS(is, 3)];
            Tu  = ii[WS(is, 10)];
            TI  = Ty + Tz;
            TA  = Ty - Tz;
            TH  = TB - TC;
            TD  = TB + TC;
            TN  = Tm + Tl;
            Tn  = Tl - Tm;
            TM  = Tp - To;
            Tq  = To + Tp;
            Tv  = ii[WS(is, 5)];
            TR  = ri[WS(is, 5)];
            TS  = ri[WS(is, 10)];
            T3  = ri[WS(is, 2)];
            T4  = ri[WS(is, 7)];
            T6  = ii[WS(is, 2)];
            TJ  = SIMD_FNMADD(KP577350269, TI, TH);
            TE  = SIMD_FMADD(KP577350269, TD, TA);
            T7  = ii[WS(is, 7)];
            Tc  = ri[WS(is, 8)];
            TO  = SIMD_FMADD(KP577350269, TN, TM);
            Tr  = SIMD_FNMADD(KP577350269, Tq, Tn);
            T1e = Tv + Tu;
            Tw  = Tu - Tv;
            Td  = ri[WS(is, 13)];
            TT  = TR + TS;
            T1c = TR - TS;
            Tf  = ii[WS(is, 8)];
            T11 = T3 + T4;
            T5  = T3 - T4;
            TK  = SIMD_FMADD(KP866025403, TJ, TG);
            TF  = SIMD_FNMADD(KP866025403, TE, Tx);
            T10 = T7 - T6;
            T8  = T6 + T7;
            TP  = SIMD_FNMADD(KP866025403, TO, TL);
            Ts  = SIMD_FMADD(KP866025403, Tr, Tk);
            Tg  = ii[WS(is, 13)];
            Te  = Tc - Td;
            TW  = Tc + Td;
        }
        T12   = SIMD_FNMADD(KP577350269, T11, T10);
        T9    = SIMD_FNMADD(KP577350269, T8, T5);
        TQ    = TK - TP;
        T1d   = Ts - TF;
        Th    = Tf + Tg;
        TV    = Tg - Tf;
        T13   = SIMD_FMADD(KP866025403, T12, TZ);
        Ta    = SIMD_FMADD(KP866025403, T9, T2);
        TX    = SIMD_FNMADD(KP577350269, TW, TV);
        Ti    = SIMD_FNMADD(KP577350269, Th, Te);
        TY    = SIMD_FMADD(KP866025403, TX, TU);
        Tj    = SIMD_FMADD(KP866025403, Ti, Tb);
        T1b   = TY - (SIMD_FMADD(KP850650808, TK, T13));
        T14   = TY + T13;
        Tt    = Ta - (SIMD_FMADD(KP850650808, Ts, Tj));
        T1f   = Tj + Ta;
        T15   = SIMD_FNMADD(KP618033988, T14, TT);
        T1g   = SIMD_FNMADD(KP618033988, T1f, T1e);
        T16   = SIMD_FNMADD(KP850650808, T15, TQ);
        T1h   = SIMD_FNMADD(KP850650808, T1g, T1d);
        T17   = SIMD_FNMADD(KP726542528, T16, TF);
        T1i   = SIMD_FNMADD(KP726542528, T1h, TP);
        T18   = SIMD_FNMADD(KP934172358, T17, Tw);
        T1j   = SIMD_FNMADD(KP934172358, T1i, T1c);
        T19   = SIMD_FMADD(KP910592997, T18, Tt);
        T1k   = SIMD_FMADD(KP910592997, T1j, T1b);
        ro[0] = SIMD_FMADD(KP951056516, T19, T1);
        io[0] = SIMD_FMADD(KP951056516, T1k, T1a);
    }
}
