//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cf_traits<20, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 2;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 1 -name c2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 2 stack variables, 0 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 1>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    {
        SIMD_FLOAT T1, T2;
        T1             = ri[0];
        T2             = ii[0];
        ro[WS(os, 7)]  = T1;
        ro[WS(os, 8)]  = T1;
        ro[WS(os, 13)] = T1;
        ro[WS(os, 12)] = T1;
        ro[WS(os, 11)] = T1;
        ro[WS(os, 9)]  = T1;
        ro[WS(os, 14)] = T1;
        ro[WS(os, 10)] = T1;
        ro[WS(os, 6)]  = T1;
        ro[WS(os, 5)]  = T1;
        ro[WS(os, 2)]  = T1;
        ro[WS(os, 3)]  = T1;
        ro[WS(os, 18)] = T1;
        ro[WS(os, 17)] = T1;
        ro[WS(os, 16)] = T1;
        ro[WS(os, 4)]  = T1;
        ro[WS(os, 19)] = T1;
        ro[WS(os, 15)] = T1;
        ro[WS(os, 1)]  = T1;
        ro[0]          = T1;
        io[WS(os, 7)]  = T2;
        io[WS(os, 8)]  = T2;
        io[WS(os, 13)] = T2;
        io[WS(os, 12)] = T2;
        io[WS(os, 11)] = T2;
        io[WS(os, 9)]  = T2;
        io[WS(os, 14)] = T2;
        io[WS(os, 10)] = T2;
        io[WS(os, 6)]  = T2;
        io[WS(os, 5)]  = T2;
        io[WS(os, 2)]  = T2;
        io[WS(os, 3)]  = T2;
        io[WS(os, 18)] = T2;
        io[WS(os, 17)] = T2;
        io[WS(os, 16)] = T2;
        io[WS(os, 4)]  = T2;
        io[WS(os, 19)] = T2;
        io[WS(os, 15)] = T2;
        io[WS(os, 1)]  = T2;
        io[0]          = T2;
    }
}

template <>
struct c2cf_traits<20, 2>
{
    static constexpr long_t flops           = 104;
    static constexpr long_t operations      = 56;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 24;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 2 -name c2cf
 * -standalone */

/*
 * This function contains 56 FP additions, 48 FP multiplications,
 * (or, 8 additions, 0 multiplications, 48 fused multiply/add),
 * 24 stack variables, 4 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 2>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T1, T3, T2, T4, Th, Ti, T9, Tb, Ta, Tc, Tj, Tk, T5, T8, Td;
        SIMD_FLOAT Tf, Te, Tg, T7, T6;
        T1             = ri[0];
        T3             = ii[0];
        T2             = ri[WS(is, 1)];
        T4             = ii[WS(is, 1)];
        io[WS(os, 15)] = T2 + T3;
        io[WS(os, 5)]  = T3 - T2;
        ro[0]          = T1 + T2;
        ro[WS(os, 10)] = T1 - T2;
        Th             = SIMD_FNMADD(KP309016994, T2, T3);
        Ti             = SIMD_FMADD(KP309016994, T2, T3);
        T9             = SIMD_FNMADD(KP809016994, T2, T3);
        Tb             = SIMD_FMADD(KP809016994, T2, T3);
        Ta             = SIMD_FNMADD(KP809016994, T2, T1);
        Tc             = SIMD_FMADD(KP809016994, T2, T1);
        Tj             = SIMD_FNMADD(KP309016994, T2, T1);
        Tk             = SIMD_FMADD(KP309016994, T2, T1);
        ro[WS(os, 15)] = T1 - T4;
        ro[WS(os, 5)]  = T1 + T4;
        io[0]          = T3 + T4;
        io[WS(os, 10)] = T3 - T4;
        T5             = SIMD_FNMADD(KP309016994, T4, T3);
        T8             = SIMD_FMADD(KP309016994, T4, T3);
        Td             = SIMD_FNMADD(KP809016994, T4, T3);
        Tf             = SIMD_FMADD(KP809016994, T4, T3);
        Te             = SIMD_FNMADD(KP809016994, T4, T1);
        Tg             = SIMD_FMADD(KP809016994, T4, T1);
        T7             = SIMD_FMADD(KP309016994, T4, T1);
        T6             = SIMD_FNMADD(KP309016994, T4, T1);
        io[WS(os, 17)] = SIMD_FMADD(KP587785252, T4, Tb);
        io[WS(os, 13)] = SIMD_FNMADD(KP587785252, T4, Tb);
        ro[WS(os, 8)]  = SIMD_FMADD(KP587785252, T4, Ta);
        ro[WS(os, 12)] = SIMD_FNMADD(KP587785252, T4, Ta);
        ro[WS(os, 2)]  = SIMD_FMADD(KP587785252, T4, Tc);
        ro[WS(os, 18)] = SIMD_FNMADD(KP587785252, T4, Tc);
        io[WS(os, 3)]  = SIMD_FMADD(KP587785252, T4, T9);
        io[WS(os, 7)]  = SIMD_FNMADD(KP587785252, T4, T9);
        ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T4, Tj);
        ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T4, Tj);
        io[WS(os, 19)] = SIMD_FMADD(KP951056516, T4, Ti);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T4, Ti);
        ro[WS(os, 16)] = SIMD_FNMADD(KP951056516, T4, Tk);
        ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, T4, Tk);
        io[WS(os, 1)]  = SIMD_FMADD(KP951056516, T4, Th);
        io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T4, Th);
        io[WS(os, 2)]  = SIMD_FNMADD(KP587785252, T2, Tf);
        io[WS(os, 18)] = SIMD_FMADD(KP587785252, T2, Tf);
        ro[WS(os, 17)] = SIMD_FMADD(KP587785252, T2, Te);
        ro[WS(os, 13)] = SIMD_FNMADD(KP587785252, T2, Te);
        ro[WS(os, 3)]  = SIMD_FMADD(KP587785252, T2, Tg);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP587785252, T2, Tg);
        io[WS(os, 8)]  = SIMD_FNMADD(KP587785252, T2, Td);
        io[WS(os, 12)] = SIMD_FMADD(KP587785252, T2, Td);
        ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2, T7);
        ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2, T7);
        ro[WS(os, 19)] = SIMD_FMADD(KP951056516, T2, T6);
        ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2, T6);
        io[WS(os, 16)] = SIMD_FMADD(KP951056516, T2, T8);
        io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2, T8);
        io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2, T5);
        io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2, T5);
    }
}

template <>
struct c2cf_traits<20, 3>
{
    static constexpr long_t flops           = 160;
    static constexpr long_t operations      = 88;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 58;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 3 -name c2cf
 * -standalone */

/*
 * This function contains 88 FP additions, 72 FP multiplications,
 * (or, 16 additions, 0 multiplications, 72 fused multiply/add),
 * 58 stack variables, 4 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 3>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, T9, T2, T6, T3, Ta, T7, T8, Tf, Tm, Tk, Th, TN, TQ, TS;
        SIMD_FLOAT TL, T5, T4, TH, TI, Tp, Tv, TC, TA;
        T1 = ri[0];
        T9 = ii[0];
        T2 = ri[WS(is, 1)];
        T6 = ii[WS(is, 1)];
        T3 = ri[WS(is, 2)];
        Ta = ii[WS(is, 2)];
        T7 = T3 + T6;
        T8 = T6 - T3;
        Tf = SIMD_FMADD(KP618033988, T6, T3);
        Tm = SIMD_FMADD(KP618033988, T3, T6);
        Tk = SIMD_FNMADD(KP618033988, T6, T3);
        Th = SIMD_FNMADD(KP618033988, T3, T6);
        TN = SIMD_FMSUB(KP618033988, T3, T2);
        TQ = SIMD_FMADD(KP618033988, T3, T2);
        TS = SIMD_FMSUB(KP618033988, T2, T3);
        TL = SIMD_FMADD(KP618033988, T2, T3);
        T5 = T3 - T2;
        T4 = T2 + T3;
        TH = T6 + Ta;
        TI = Ta - T6;
        Tp = SIMD_FNMADD(KP618033988, Ta, T6);
        Tv = SIMD_FMADD(KP618033988, Ta, T6);
        TC = SIMD_FMADD(KP618033988, T6, Ta);
        TA = SIMD_FMSUB(KP618033988, T6, Ta);
        {
            SIMD_FLOAT Tb, Td, Ty, TG, TE, Ts, Tq, Tw, Tn, Tt, Ti, Tc, TJ, TO,
                TF;
            SIMD_FLOAT Tr, TD, Tx, To, TB, Tu, Tz, Tj, Tl, Te, Tg, TM, TK, TP,
                TR;
            Tb             = T2 + Ta;
            Td             = Ta - T2;
            Ty             = SIMD_FMSUB(KP618033988, Ta, T2);
            TG             = SIMD_FNMADD(KP618033988, T2, Ta);
            TE             = SIMD_FMADD(KP618033988, T2, Ta);
            Ts             = SIMD_FMADD(KP618033988, Ta, T2);
            ro[WS(os, 5)]  = T1 + T8;
            Tq             = SIMD_FNMADD(KP250000000, T8, T1);
            ro[WS(os, 15)] = T1 - T7;
            Tw             = SIMD_FMADD(KP250000000, T7, T1);
            ro[WS(os, 10)] = T1 + T5;
            Tn             = SIMD_FNMADD(KP250000000, T5, T1);
            ro[0]          = T1 + T4;
            Tt             = SIMD_FNMADD(KP250000000, T4, T1);
            io[WS(os, 15)] = T9 - Td;
            Ti             = SIMD_FMADD(KP250000000, Td, T9);
            io[WS(os, 5)]  = T9 - Tb;
            Tc             = SIMD_FMADD(KP250000000, Tb, T9);
            io[WS(os, 10)] = T9 + TI;
            TJ             = SIMD_FNMADD(KP250000000, TI, T9);
            io[0]          = T9 + TH;
            TO             = SIMD_FNMADD(KP250000000, TH, T9);
            TF             = SIMD_FNMADD(KP559016994, T7, Tq);
            Tr             = SIMD_FMADD(KP559016994, T7, Tq);
            TD             = SIMD_FMADD(KP559016994, T8, Tw);
            Tx             = SIMD_FNMADD(KP559016994, T8, Tw);
            To             = SIMD_FNMADD(KP559016994, T4, Tn);
            TB             = SIMD_FMADD(KP559016994, T4, Tn);
            Tu             = SIMD_FNMADD(KP559016994, T5, Tt);
            Tz             = SIMD_FMADD(KP559016994, T5, Tt);
            Tj             = SIMD_FNMADD(KP559016994, Tb, Ti);
            Tl             = SIMD_FMADD(KP559016994, Tb, Ti);
            Te             = SIMD_FNMADD(KP559016994, Td, Tc);
            Tg             = SIMD_FMADD(KP559016994, Td, Tc);
            TM             = SIMD_FNMADD(KP559016994, TH, TJ);
            TK             = SIMD_FMADD(KP559016994, TH, TJ);
            TP             = SIMD_FNMADD(KP559016994, TI, TO);
            TR             = SIMD_FMADD(KP559016994, TI, TO);
            ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, Ts, Tr);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, Ts, Tr);
            ro[WS(os, 13)] = SIMD_FMADD(KP951056516, TG, TF);
            ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, TG, TF);
            ro[WS(os, 11)] = SIMD_FMADD(KP951056516, Ty, Tx);
            ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, Ty, Tx);
            ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, TE, TD);
            ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, TE, TD);
            ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, TC, TB);
            ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, TC, TB);
            ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, Tp, To);
            ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, Tp, To);
            ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, TA, Tz);
            ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, TA, Tz);
            ro[WS(os, 4)]  = SIMD_FMADD(KP951056516, Tv, Tu);
            ro[WS(os, 16)] = SIMD_FNMADD(KP951056516, Tv, Tu);
            io[WS(os, 19)] = SIMD_FMADD(KP951056516, Tm, Tl);
            io[WS(os, 11)] = SIMD_FNMADD(KP951056516, Tm, Tl);
            io[WS(os, 7)]  = SIMD_FMADD(KP951056516, Tk, Tj);
            io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, Tk, Tj);
            io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, Th, Tg);
            io[WS(os, 1)]  = SIMD_FMADD(KP951056516, Th, Tg);
            io[WS(os, 17)] = SIMD_FMADD(KP951056516, Tf, Te);
            io[WS(os, 13)] = SIMD_FNMADD(KP951056516, Tf, Te);
            io[WS(os, 18)] = SIMD_FMADD(KP951056516, TL, TK);
            io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TL, TK);
            io[WS(os, 14)] = SIMD_FNMADD(KP951056516, TN, TM);
            io[WS(os, 6)]  = SIMD_FMADD(KP951056516, TN, TM);
            io[WS(os, 12)] = SIMD_FMADD(KP951056516, TS, TR);
            io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, TS, TR);
            io[WS(os, 16)] = SIMD_FMADD(KP951056516, TQ, TP);
            io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TQ, TP);
        }
    }
}

template <>
struct c2cf_traits<20, 4>
{
    static constexpr long_t flops           = 176;
    static constexpr long_t operations      = 104;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 76;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 4 -name c2cf
 * -standalone */

/*
 * This function contains 104 FP additions, 72 FP multiplications,
 * (or, 32 additions, 0 multiplications, 72 fused multiply/add),
 * 76 stack variables, 4 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 4>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, Tn, T2, T9, T3, Ta, T4, Ti;
        T1 = ri[0];
        Tn = ii[0];
        T2 = ri[WS(is, 1)];
        T9 = ii[WS(is, 1)];
        T3 = ri[WS(is, 3)];
        Ta = ii[WS(is, 3)];
        T4 = ri[WS(is, 2)];
        Ti = ii[WS(is, 2)];
        {
            SIMD_FLOAT Tb, Td, T5, T7, TM, Ty, Tj, T10, Te, Tw, TG, TI, Tc, TK,
                TU;
            SIMD_FLOAT TW, T8, TY, T18, T1a, T6, Tg, Ts, Tu, TC, TE, Tz, TB, To,
                Tq;
            SIMD_FLOAT Tk, Tm;
            Tb  = T4 + Ta;
            Td  = Ta - T4;
            T5  = T3 + T4;
            T7  = T4 - T3;
            TM  = T3 + Ti;
            Ty  = T3 - Ti;
            Tj  = Ta - Ti;
            T10 = Ta + Ti;
            Te  = Td - T9;
            Tw  = T9 + Td;
            TG  = SIMD_FMADD(KP618033988, Td, T9);
            TI  = SIMD_FNMADD(KP618033988, T9, Td);
            Tc  = T9 - Tb;
            TK  = T9 + Tb;
            TU  = SIMD_FNMADD(KP618033988, T9, Tb);
            TW  = SIMD_FMADD(KP618033988, Tb, T9);
            T8  = T7 - T2;
            TY  = T2 + T7;
            T18 = SIMD_FMADD(KP618033988, T7, T2);
            T1a = SIMD_FNMADD(KP618033988, T2, T7);
            T6  = T2 + T5;
            Tg  = T2 - T5;
            Ts  = SIMD_FMADD(KP618033988, T2, T5);
            Tu  = SIMD_FMSUB(KP618033988, T5, T2);
            TC  = Ty - T2;
            TE  = T2 + Ty;
            Tz  = SIMD_FMADD(KP618033988, Ty, T2);
            TB  = SIMD_FNMADD(KP618033988, T2, Ty);
            To  = T9 + Tj;
            Tq  = Tj - T9;
            Tk  = SIMD_FMSUB(KP618033988, Tj, T9);
            Tm  = SIMD_FMADD(KP618033988, T9, Tj);
            {
                SIMD_FLOAT T16, T14, T11, T13, TS, TQ, TN, TP, Tv, TJ, TX, Tf,
                    TD, Tp, T15;
                SIMD_FLOAT TR, Tx, TA, TL, TO, TZ, T12, Th, Tl, TF, TH, Tr, Tt,
                    T17, T19;
                SIMD_FLOAT TT, TV;
                T16            = T9 - T10;
                T14            = T9 + T10;
                T11            = SIMD_FNMADD(KP618033988, T10, T9);
                T13            = SIMD_FMADD(KP618033988, T9, T10);
                TS             = T2 + TM;
                TQ             = T2 - TM;
                TN             = SIMD_FMADD(KP618033988, TM, T2);
                TP             = SIMD_FNMADD(KP618033988, T2, TM);
                Tv             = SIMD_FNMADD(KP250000000, Te, T1);
                ro[WS(os, 15)] = T1 + Te;
                TJ             = SIMD_FNMADD(KP250000000, Tc, T1);
                ro[WS(os, 5)]  = T1 + Tc;
                TX             = SIMD_FNMADD(KP250000000, T8, T1);
                ro[WS(os, 10)] = T1 + T8;
                Tf             = SIMD_FNMADD(KP250000000, T6, T1);
                ro[0]          = T1 + T6;
                TD             = SIMD_FNMADD(KP250000000, TC, Tn);
                io[WS(os, 5)]  = Tn + TC;
                Tp             = SIMD_FMADD(KP250000000, To, Tn);
                io[WS(os, 10)] = Tn - To;
                T15            = SIMD_FNMADD(KP250000000, T14, Tn);
                io[0]          = Tn + T14;
                TR             = SIMD_FNMADD(KP250000000, TQ, Tn);
                io[WS(os, 15)] = Tn + TQ;
                Tx             = SIMD_FNMADD(KP559016994, Tw, Tv);
                TA             = SIMD_FMADD(KP559016994, Tw, Tv);
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                TO             = SIMD_FNMADD(KP559016994, TK, TJ);
                TZ             = SIMD_FNMADD(KP559016994, TY, TX);
                T12            = SIMD_FMADD(KP559016994, TY, TX);
                Th             = SIMD_FMADD(KP559016994, Tg, Tf);
                Tl             = SIMD_FNMADD(KP559016994, Tg, Tf);
                TF             = SIMD_FNMADD(KP559016994, TE, TD);
                TH             = SIMD_FMADD(KP559016994, TE, TD);
                Tr             = SIMD_FNMADD(KP559016994, Tq, Tp);
                Tt             = SIMD_FMADD(KP559016994, Tq, Tp);
                T17            = SIMD_FMADD(KP559016994, T16, T15);
                T19            = SIMD_FNMADD(KP559016994, T16, T15);
                TT             = SIMD_FNMADD(KP559016994, TS, TR);
                TV             = SIMD_FMADD(KP559016994, TS, TR);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, TB, TA);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, TB, TA);
                ro[WS(os, 19)] = SIMD_FMADD(KP951056516, Tz, Tx);
                ro[WS(os, 11)] = SIMD_FNMADD(KP951056516, Tz, Tx);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, TP, TO);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, TP, TO);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TN, TL);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, TN, TL);
                ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, T13, T12);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T13, T12);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T11, TZ);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T11, TZ);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, Tm, Tl);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, Tm, Tl);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, Tk, Th);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, Tk, Th);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, TI, TH);
                io[WS(os, 17)] = SIMD_FNMADD(KP951056516, TI, TH);
                io[WS(os, 9)]  = SIMD_FNMADD(KP951056516, TG, TF);
                io[WS(os, 1)]  = SIMD_FMADD(KP951056516, TG, TF);
                io[WS(os, 6)]  = SIMD_FMADD(KP951056516, Tu, Tt);
                io[WS(os, 14)] = SIMD_FNMADD(KP951056516, Tu, Tt);
                io[WS(os, 18)] = SIMD_FMADD(KP951056516, Ts, Tr);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, Ts, Tr);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1a, T19);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1a, T19);
                io[WS(os, 16)] = SIMD_FMADD(KP951056516, T18, T17);
                io[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T18, T17);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, TW, TV);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, TW, TV);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, TU, TT);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, TU, TT);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 5>
{
    static constexpr long_t flops           = 184;
    static constexpr long_t operations      = 112;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 86;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 5 -name c2cf
 * -standalone */

/*
 * This function contains 112 FP additions, 72 FP multiplications,
 * (or, 40 additions, 0 multiplications, 72 fused multiply/add),
 * 86 stack variables, 4 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 5>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, Tu, T2, Tn, T3, Tc, T5, Te, T6, Tp;
        T1 = ri[0];
        Tu = ii[0];
        T2 = ri[WS(is, 4)];
        Tn = ii[WS(is, 4)];
        T3 = ri[WS(is, 1)];
        Tc = ii[WS(is, 1)];
        T5 = ri[WS(is, 3)];
        Te = ii[WS(is, 3)];
        T6 = ri[WS(is, 2)];
        Tp = ii[WS(is, 2)];
        {
            SIMD_FLOAT TU, TF, T9, T4, Td, Th, To, T19, Tf, Ti, T7, Ta, TV, TG,
                Tq;
            SIMD_FLOAT T1a, Tj, TD, TO, TQ, Tg, TS, T13, T15, Tb, T17, T1i, T1k,
                T8, Tl;
            SIMD_FLOAT Tz, TB, TK, TM, TH, TJ, Tv, Tx, Tr, Tt;
            TU  = T3 + Tn;
            TF  = Tn - T3;
            T9  = T2 - T3;
            T4  = T2 + T3;
            Td  = T2 + Tc;
            Th  = T2 - Tc;
            To  = Tn - Tc;
            T19 = Tn + Tc;
            Tf  = T6 + Te;
            Ti  = Te - T6;
            T7  = T5 + T6;
            Ta  = T6 - T5;
            TV  = T5 + Tp;
            TG  = T5 - Tp;
            Tq  = Te - Tp;
            T1a = Te + Tp;
            Tj  = Th + Ti;
            TD  = Th - Ti;
            TO  = SIMD_FNMADD(KP618033988, Ti, Th);
            TQ  = SIMD_FMADD(KP618033988, Th, Ti);
            Tg  = Td - Tf;
            TS  = Td + Tf;
            T13 = SIMD_FNMADD(KP618033988, Td, Tf);
            T15 = SIMD_FMADD(KP618033988, Tf, Td);
            Tb  = T9 + Ta;
            T17 = T9 - Ta;
            T1i = SIMD_FNMADD(KP618033988, Ta, T9);
            T1k = SIMD_FMADD(KP618033988, T9, Ta);
            T8  = T4 + T7;
            Tl  = T4 - T7;
            Tz  = SIMD_FMADD(KP618033988, T4, T7);
            TB  = SIMD_FNMADD(KP618033988, T7, T4);
            TK  = TF + TG;
            TM  = TF - TG;
            TH  = SIMD_FNMADD(KP618033988, TG, TF);
            TJ  = SIMD_FMADD(KP618033988, TF, TG);
            Tv  = To - Tq;
            Tx  = To + Tq;
            Tr  = SIMD_FMADD(KP618033988, Tq, To);
            Tt  = SIMD_FNMADD(KP618033988, To, Tq);
            {
                SIMD_FLOAT T1g, T1e, T1b, T1d, T11, TZ, TW, TY, TC, TR, T16, Tk,
                    TL, Tw, T1f;
                SIMD_FLOAT T10, TE, TI, TT, TX, T18, T1c, Tm, Ts, TN, TP, Ty,
                    TA, T1h, T1j;
                SIMD_FLOAT T12, T14;
                T1g            = T19 - T1a;
                T1e            = T19 + T1a;
                T1b            = SIMD_FNMADD(KP618033988, T1a, T19);
                T1d            = SIMD_FMADD(KP618033988, T19, T1a);
                T11            = TU + TV;
                TZ             = TU - TV;
                TW             = SIMD_FMADD(KP618033988, TV, TU);
                TY             = SIMD_FNMADD(KP618033988, TU, TV);
                TC             = SIMD_FNMADD(KP250000000, Tj, T1);
                ro[WS(os, 15)] = T1 + Tj;
                TR             = SIMD_FNMADD(KP250000000, Tg, T1);
                ro[WS(os, 5)]  = T1 + Tg;
                T16            = SIMD_FNMADD(KP250000000, Tb, T1);
                ro[WS(os, 10)] = T1 + Tb;
                Tk             = SIMD_FNMADD(KP250000000, T8, T1);
                ro[0]          = T1 + T8;
                TL             = SIMD_FNMADD(KP250000000, TK, Tu);
                io[WS(os, 5)]  = Tu + TK;
                Tw             = SIMD_FNMADD(KP250000000, Tv, Tu);
                io[WS(os, 10)] = Tu + Tv;
                T1f            = SIMD_FNMADD(KP250000000, T1e, Tu);
                io[0]          = Tu + T1e;
                T10            = SIMD_FNMADD(KP250000000, TZ, Tu);
                io[WS(os, 15)] = Tu + TZ;
                TE             = SIMD_FMADD(KP559016994, TD, TC);
                TI             = SIMD_FNMADD(KP559016994, TD, TC);
                TT             = SIMD_FMADD(KP559016994, TS, TR);
                TX             = SIMD_FNMADD(KP559016994, TS, TR);
                T18            = SIMD_FMADD(KP559016994, T17, T16);
                T1c            = SIMD_FNMADD(KP559016994, T17, T16);
                Tm             = SIMD_FMADD(KP559016994, Tl, Tk);
                Ts             = SIMD_FNMADD(KP559016994, Tl, Tk);
                TN             = SIMD_FMADD(KP559016994, TM, TL);
                TP             = SIMD_FNMADD(KP559016994, TM, TL);
                Ty             = SIMD_FNMADD(KP559016994, Tx, Tw);
                TA             = SIMD_FMADD(KP559016994, Tx, Tw);
                T1h            = SIMD_FMADD(KP559016994, T1g, T1f);
                T1j            = SIMD_FNMADD(KP559016994, T1g, T1f);
                T12            = SIMD_FNMADD(KP559016994, T11, T10);
                T14            = SIMD_FMADD(KP559016994, T11, T10);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, TJ, TI);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, TJ, TI);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, TH, TE);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, TH, TE);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, TY, TX);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, TY, TX);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, TW, TT);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, TW, TT);
                ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1d, T1c);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1d, T1c);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1b, T18);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1b, T18);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, Tt, Ts);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, Tt, Ts);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, Tr, Tm);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, Tr, Tm);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, TQ, TP);
                io[WS(os, 17)] = SIMD_FNMADD(KP951056516, TQ, TP);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, TO, TN);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TO, TN);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, TB, TA);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, TB, TA);
                io[WS(os, 18)] = SIMD_FMADD(KP951056516, Tz, Ty);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, Tz, Ty);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1k, T1j);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1k, T1j);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1i, T1h);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1i, T1h);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T15, T14);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T15, T14);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T13, T12);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T13, T12);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 6>
{
    static constexpr long_t flops           = 192;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 96;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 6 -name c2cf
 * -standalone */

/*
 * This function contains 120 FP additions, 72 FP multiplications,
 * (or, 48 additions, 0 multiplications, 72 fused multiply/add),
 * 96 stack variables, 4 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 6>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1, TA, T2, Tf, T4, Tt, T5, Th, T7, Tj, T8, Tv;
        T1 = ri[0];
        TA = ii[0];
        T2 = ri[WS(is, 5)];
        Tf = ii[WS(is, 5)];
        T4 = ri[WS(is, 4)];
        Tt = ii[WS(is, 4)];
        T5 = ri[WS(is, 1)];
        Th = ii[WS(is, 1)];
        T7 = ri[WS(is, 3)];
        Tj = ii[WS(is, 3)];
        T8 = ri[WS(is, 2)];
        Tv = ii[WS(is, 2)];
        {
            SIMD_FLOAT T17, TR, Tb, T3, Tg, Tm, TB, T1n, T12, TM, Tc, T6, Ti,
                Tn, Tu;
            SIMD_FLOAT T1i, Tk, To, T9, Td, T13, TN, Tw, T1j, Tp, TK, TW, TY,
                Tl, T10;
            SIMD_FLOAT T1c, T1e, Te, T1g, T1s, T1u, Ta, Tr, TG, TI, TS, TU, TO,
                TQ, TC;
            SIMD_FLOAT TE, Tx, Tz;
            T17 = T2 + TA;
            TR  = TA - T2;
            Tb  = T1 - T2;
            T3  = T1 + T2;
            Tg  = T1 + Tf;
            Tm  = T1 - Tf;
            TB  = TA - Tf;
            T1n = TA + Tf;
            T12 = T5 + Tt;
            TM  = Tt - T5;
            Tc  = T4 - T5;
            T6  = T4 + T5;
            Ti  = T4 + Th;
            Tn  = T4 - Th;
            Tu  = Tt - Th;
            T1i = Tt + Th;
            Tk  = T8 + Tj;
            To  = Tj - T8;
            T9  = T7 + T8;
            Td  = T8 - T7;
            T13 = T7 + Tv;
            TN  = T7 - Tv;
            Tw  = Tj - Tv;
            T1j = Tj + Tv;
            Tp  = Tn + To;
            TK  = Tn - To;
            TW  = SIMD_FNMADD(KP618033988, To, Tn);
            TY  = SIMD_FMADD(KP618033988, Tn, To);
            Tl  = Ti - Tk;
            T10 = Ti + Tk;
            T1c = SIMD_FNMADD(KP618033988, Ti, Tk);
            T1e = SIMD_FMADD(KP618033988, Tk, Ti);
            Te  = Tc + Td;
            T1g = Tc - Td;
            T1s = SIMD_FNMADD(KP618033988, Td, Tc);
            T1u = SIMD_FMADD(KP618033988, Tc, Td);
            Ta  = T6 + T9;
            Tr  = T6 - T9;
            TG  = SIMD_FMADD(KP618033988, T6, T9);
            TI  = SIMD_FNMADD(KP618033988, T9, T6);
            TS  = TM + TN;
            TU  = TM - TN;
            TO  = SIMD_FNMADD(KP618033988, TN, TM);
            TQ  = SIMD_FMADD(KP618033988, TM, TN);
            TC  = Tu - Tw;
            TE  = Tu + Tw;
            Tx  = SIMD_FMADD(KP618033988, Tw, Tu);
            Tz  = SIMD_FNMADD(KP618033988, Tu, Tw);
            {
                SIMD_FLOAT T1q, T1o, T1k, T1m, T1a, T18, T14, T16, TJ, TZ, T1f,
                    Tq, TT, TD, T1p;
                SIMD_FLOAT T19, TL, TP, T11, T15, T1h, T1l, Ts, Ty, TV, TX, TF,
                    TH, T1r, T1t;
                SIMD_FLOAT T1b, T1d;
                T1q            = T1i - T1j;
                T1o            = T1i + T1j;
                T1k            = SIMD_FNMADD(KP618033988, T1j, T1i);
                T1m            = SIMD_FMADD(KP618033988, T1i, T1j);
                T1a            = T12 + T13;
                T18            = T12 - T13;
                T14            = SIMD_FMADD(KP618033988, T13, T12);
                T16            = SIMD_FNMADD(KP618033988, T12, T13);
                TJ             = SIMD_FNMADD(KP250000000, Tp, Tm);
                ro[WS(os, 15)] = Tm + Tp;
                TZ             = SIMD_FNMADD(KP250000000, Tl, Tg);
                ro[WS(os, 5)]  = Tg + Tl;
                T1f            = SIMD_FNMADD(KP250000000, Te, Tb);
                ro[WS(os, 10)] = Tb + Te;
                Tq             = SIMD_FNMADD(KP250000000, Ta, T3);
                ro[0]          = T3 + Ta;
                TT             = SIMD_FNMADD(KP250000000, TS, TR);
                io[WS(os, 5)]  = TR + TS;
                TD             = SIMD_FNMADD(KP250000000, TC, TB);
                io[WS(os, 10)] = TB + TC;
                T1p            = SIMD_FNMADD(KP250000000, T1o, T1n);
                io[0]          = T1n + T1o;
                T19            = SIMD_FNMADD(KP250000000, T18, T17);
                io[WS(os, 15)] = T17 + T18;
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                TP             = SIMD_FNMADD(KP559016994, TK, TJ);
                T11            = SIMD_FMADD(KP559016994, T10, TZ);
                T15            = SIMD_FNMADD(KP559016994, T10, TZ);
                T1h            = SIMD_FMADD(KP559016994, T1g, T1f);
                T1l            = SIMD_FNMADD(KP559016994, T1g, T1f);
                Ts             = SIMD_FMADD(KP559016994, Tr, Tq);
                Ty             = SIMD_FNMADD(KP559016994, Tr, Tq);
                TV             = SIMD_FMADD(KP559016994, TU, TT);
                TX             = SIMD_FNMADD(KP559016994, TU, TT);
                TF             = SIMD_FNMADD(KP559016994, TE, TD);
                TH             = SIMD_FMADD(KP559016994, TE, TD);
                T1r            = SIMD_FMADD(KP559016994, T1q, T1p);
                T1t            = SIMD_FNMADD(KP559016994, T1q, T1p);
                T1b            = SIMD_FNMADD(KP559016994, T1a, T19);
                T1d            = SIMD_FMADD(KP559016994, T1a, T19);
                ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, TQ, TP);
                ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, TQ, TP);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, TO, TL);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, TO, TL);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T16, T15);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T16, T15);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T14, T11);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T14, T11);
                ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1m, T1l);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1m, T1l);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1k, T1h);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1k, T1h);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, Tz, Ty);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, Tz, Ty);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, Tx, Ts);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, Tx, Ts);
                io[WS(os, 13)] = SIMD_FMADD(KP951056516, TY, TX);
                io[WS(os, 17)] = SIMD_FNMADD(KP951056516, TY, TX);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, TW, TV);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, TW, TV);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, TI, TH);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, TI, TH);
                io[WS(os, 18)] = SIMD_FMADD(KP951056516, TG, TF);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TG, TF);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1u, T1t);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1u, T1t);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1s, T1r);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1s, T1r);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1e, T1d);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1e, T1d);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1c, T1b);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1c, T1b);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 7>
{
    static constexpr long_t flops           = 208;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 7 -name c2cf
 * -standalone */

/*
 * This function contains 136 FP additions, 72 FP multiplications,
 * (or, 64 additions, 0 multiplications, 72 fused multiply/add),
 * 114 stack variables, 4 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 7>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1e, T11, TZ, T1u, T1s, T1c, T1a, T1k, T1i, T10, TV, T1t,
            T1q, T1d, T1b;
        SIMD_FLOAT T18, T1f, T1j;
        {
            SIMD_FLOAT T1l, T12, Td, T3, Tj, Tq, TI, T1D, Tg, Tb, T1h, TY, TD,
                T1z, Tt;
            SIMD_FLOAT To, T14, T1g, T1J, T8, T1E, TB, T19, Tm, Tf, TP, TX, T1m,
                Ts, T1r;
            SIMD_FLOAT T1y, TK, T1, TH, T2, Ti, T4, Ty, T7, Te, T13, TW, Tl, Tr,
                TJ;
            SIMD_FLOAT TA, T5, Tz, T6, Tk, T9, Tn, Ta, TC;
            T1  = ri[0];
            TH  = ii[0];
            T2  = ri[WS(is, 5)];
            Ti  = ii[WS(is, 5)];
            T4  = ri[WS(is, 4)];
            Ty  = ii[WS(is, 4)];
            T5  = ri[WS(is, 6)];
            Tz  = ii[WS(is, 6)];
            T6  = ri[WS(is, 1)];
            Tk  = ii[WS(is, 1)];
            T9  = ri[WS(is, 3)];
            Tn  = ii[WS(is, 3)];
            Ta  = ri[WS(is, 2)];
            TC  = ii[WS(is, 2)];
            T1l = T2 + TH;
            T12 = TH - T2;
            Td  = T1 - T2;
            T3  = T1 + T2;
            Tj  = T1 + Ti;
            Tq  = T1 - Ti;
            TI  = TH - Ti;
            T1D = TH + Ti;
            T7  = T5 + T6;
            Te  = T5 - T6;
            T13 = T6 + Tz;
            TW  = T6 - Tz;
            Tl  = Tk - T5;
            Tr  = T5 + Tk;
            TJ  = Tz - Tk;
            TA  = Tz + Tk;
            Tg  = Ta - T9;
            Tb  = T9 + Ta;
            T1h = T9 + TC;
            TY  = T9 - TC;
            TD  = Tn - TC;
            T1z = Tn + TC;
            Tt  = Tn - Ta;
            To  = Ta + Tn;
            T14 = Ty - T13;
            T1g = Ty + T13;
            T1J = T4 - T7;
            T8  = T4 + T7;
            T1E = Ty + TA;
            TB  = Ty - TA;
            T19 = T4 - Tl;
            Tm  = T4 + Tl;
            Tf  = T4 + Te;
            TP  = T4 - Te;
            TX  = Ty - TW;
            T1m = Ty + TW;
            Ts  = T4 - Tr;
            T1r = T4 + Tr;
            T1y = Ty - TJ;
            TK  = Ty + TJ;
            {
                SIMD_FLOAT TG, TE, T1M, T1K, TU, Tu, T1w, Tp, T15, T17, T1p,
                    T1n, TS, TQ, T1C;
                SIMD_FLOAT T1A, TF, Tx, TO, TR, T1I, T1L, T1v, Tc, Tw, TL, TN,
                    T1H, T1F, Th;
                SIMD_FLOAT Tv, TM, T1G, TT, T1B, T1x, T1o, T16;
                TG             = SIMD_FNMADD(KP618033988, TB, TD);
                TE             = SIMD_FMADD(KP618033988, TD, TB);
                T1M            = SIMD_FMADD(KP618033988, T1J, Tg);
                T1K            = SIMD_FNMADD(KP618033988, Tg, T1J);
                Tc             = T8 + Tb;
                Tw             = T8 - Tb;
                TU             = Ts - Tt;
                Tu             = Ts + Tt;
                TL             = TK - TD;
                TN             = TK + TD;
                T1H            = T1E - T1z;
                T1F            = T1E + T1z;
                Th             = Tf + Tg;
                T1w            = Tf - Tg;
                T1e            = Tm + To;
                Tp             = Tm - To;
                T15            = T14 + TY;
                T17            = T14 - TY;
                T1p            = T1m + T1h;
                T1n            = T1m - T1h;
                TS             = SIMD_FNMADD(KP618033988, Tb, TP);
                TQ             = SIMD_FMADD(KP618033988, TP, Tb);
                Tv             = SIMD_FNMADD(KP250000000, Tc, T3);
                ro[0]          = T3 + Tc;
                ro[WS(os, 15)] = Tq + Tu;
                TM             = SIMD_FNMADD(KP250000000, TL, TI);
                io[WS(os, 10)] = TI + TL;
                T1G            = SIMD_FNMADD(KP250000000, T1F, T1D);
                io[0]          = T1D + T1F;
                ro[WS(os, 10)] = Td + Th;
                ro[WS(os, 5)]  = Tj + Tp;
                io[WS(os, 5)]  = T12 + T15;
                io[WS(os, 15)] = T1l + T1n;
                T1C            = SIMD_FMADD(KP618033988, T1y, T1z);
                T1A            = SIMD_FNMADD(KP618033988, T1z, T1y);
                TF             = SIMD_FNMADD(KP559016994, Tw, Tv);
                Tx             = SIMD_FMADD(KP559016994, Tw, Tv);
                TO             = SIMD_FNMADD(KP559016994, TN, TM);
                TR             = SIMD_FMADD(KP559016994, TN, TM);
                T1I            = SIMD_FMADD(KP559016994, T1H, T1G);
                T1L            = SIMD_FNMADD(KP559016994, T1H, T1G);
                T1v            = SIMD_FNMADD(KP250000000, Th, Td);
                T11            = SIMD_FMADD(KP618033988, TX, TY);
                TZ             = SIMD_FNMADD(KP618033988, TY, TX);
                TT             = SIMD_FNMADD(KP250000000, Tu, Tq);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, TG, TF);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, TG, TF);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, TE, Tx);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, TE, Tx);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, TS, TR);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, TS, TR);
                io[WS(os, 18)] = SIMD_FMADD(KP951056516, TQ, TO);
                io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TQ, TO);
                io[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1M, T1L);
                io[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1M, T1L);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1K, T1I);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1K, T1I);
                T1B            = SIMD_FNMADD(KP559016994, T1w, T1v);
                T1x            = SIMD_FMADD(KP559016994, T1w, T1v);
                T1u            = SIMD_FMADD(KP618033988, To, T1r);
                T1s            = SIMD_FNMADD(KP618033988, T1r, To);
                T1o            = SIMD_FNMADD(KP250000000, T1n, T1l);
                T1c            = SIMD_FMADD(KP618033988, T19, Tt);
                T1a            = SIMD_FNMADD(KP618033988, Tt, T19);
                T16            = SIMD_FNMADD(KP250000000, T15, T12);
                T1k            = SIMD_FNMADD(KP618033988, T1g, T1h);
                T1i            = SIMD_FMADD(KP618033988, T1h, T1g);
                ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1C, T1B);
                ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1C, T1B);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1A, T1x);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1A, T1x);
                T10            = SIMD_FNMADD(KP559016994, TU, TT);
                TV             = SIMD_FMADD(KP559016994, TU, TT);
                T1t            = SIMD_FMADD(KP559016994, T1p, T1o);
                T1q            = SIMD_FNMADD(KP559016994, T1p, T1o);
                T1d            = SIMD_FNMADD(KP250000000, Tp, Tj);
                T1b            = SIMD_FNMADD(KP559016994, T17, T16);
                T18            = SIMD_FMADD(KP559016994, T17, T16);
            }
        }
        ro[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T11, T10);
        ro[WS(os, 7)]  = SIMD_FMADD(KP951056516, T11, T10);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, TZ, TV);
        ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, TZ, TV);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1u, T1t);
        io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1u, T1t);
        io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1s, T1q);
        io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1s, T1q);
        io[WS(os, 13)] = SIMD_FMADD(KP951056516, T1c, T1b);
        io[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1c, T1b);
        io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1a, T18);
        io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1a, T18);
        T1f            = SIMD_FMADD(KP559016994, T1e, T1d);
        T1j            = SIMD_FNMADD(KP559016994, T1e, T1d);
        ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1k, T1j);
        ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1k, T1j);
        ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1i, T1f);
        ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1i, T1f);
    }
}

template <>
struct c2cf_traits<20, 8>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 152;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 8 -name c2cf
 * -standalone */

/*
 * This function contains 152 FP additions, 72 FP multiplications,
 * (or, 80 additions, 0 multiplications, 72 fused multiply/add),
 * 132 stack variables, 4 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 8>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T4, Tn, Tc, TH, T5, To, Tm, Tv, T3, Tf, T1T, T1b, TP, T1x,
            Ts;
        SIMD_FLOAT Ty, Tb, Ti, T1M, T16, TJ, T1s, T6, TE, T1, Tl, T2, TO, T9,
            Tr;
        SIMD_FLOAT Ta, TI;
        T1  = ri[0];
        Tl  = ii[0];
        T2  = ri[WS(is, 5)];
        TO  = ii[WS(is, 5)];
        T4  = ri[WS(is, 4)];
        Tn  = ii[WS(is, 4)];
        Tc  = ri[WS(is, 3)];
        TH  = ii[WS(is, 3)];
        T9  = ri[WS(is, 2)];
        Tr  = ii[WS(is, 2)];
        Ta  = ri[WS(is, 7)];
        TI  = ii[WS(is, 7)];
        T5  = ri[WS(is, 6)];
        To  = ii[WS(is, 6)];
        Tm  = T2 + Tl;
        Tv  = Tl - T2;
        T3  = T1 - T2;
        Tf  = T1 + T2;
        T1T = T1 - TO;
        T1b = T1 + TO;
        TP  = Tl - TO;
        T1x = Tl + TO;
        Ts  = Ta + Tr;
        Ty  = Ta - Tr;
        Tb  = T9 - Ta;
        Ti  = T9 + Ta;
        T1M = TI - T9;
        T16 = T9 + TI;
        TJ  = Tr - TI;
        T1s = Tr + TI;
        T6  = ri[WS(is, 1)];
        TE  = ii[WS(is, 1)];
        {
            SIMD_FLOAT T1j, Tz, T20, Tt, T1F, Tj, TW, Td, T17, T1d, TK, TR, T1N,
                T1V, T1t;
            SIMD_FLOAT T1z, Tp, Tw, T7, Tg, T1O, T14, TF, T1q, T1i, Tx, T21, Tq,
                T1E, Th;
            SIMD_FLOAT TX, T8, T15, T1c, TG, TQ;
            T1j = Tc - Ty;
            Tz  = Tc + Ty;
            T20 = Ts - Tc;
            Tt  = Tc + Ts;
            T1F = Tc - Ti;
            Tj  = Tc + Ti;
            TW  = Tc + Tb;
            Td  = Tb - Tc;
            T17 = T16 - TH;
            T1d = TH + T16;
            TK  = TH + TJ;
            TR  = TJ - TH;
            T1N = TH - T1M;
            T1V = TH + T1M;
            T1t = TH - T1s;
            T1z = TH + T1s;
            Tp  = T6 - To;
            Tw  = T6 + To;
            T7  = T5 - T6;
            Tg  = T5 + T6;
            T1O = T5 + TE;
            T14 = TE - T5;
            TF  = To - TE;
            T1q = To + TE;
            T1i = Tn + Tw;
            Tx  = Tn - Tw;
            T21 = Tn - Tp;
            Tq  = Tn + Tp;
            T1E = T4 - Tg;
            Th  = T4 + Tg;
            TX  = T4 - T7;
            T8  = T4 + T7;
            T15 = T4 - T14;
            T1c = T4 + T14;
            TG  = Tn - TF;
            TQ  = Tn + TF;
            {
                SIMD_FLOAT T1P, T1U, T1r, T1y, TA, T12, T1k, T1m, Tu, T1K, T22,
                    T24, Tk, T1o, T1G;
                SIMD_FLOAT T1I, Te, TC, TY, T10, T1e, T1g, T18, T1a, TS, TU, TL,
                    TN, T1W, T1Y;
                T1P = T4 + T1O;
                T1U = T4 - T1O;
                T1r = Tn - T1q;
                T1y = Tn + T1q;
                TA  = Tx + Tz;
                T12 = Tx - Tz;
                T1k = SIMD_FMADD(KP618033988, T1j, T1i);
                T1m = SIMD_FNMADD(KP618033988, T1i, T1j);
                Tu  = Tq - Tt;
                T1K = Tq + Tt;
                T22 = SIMD_FNMADD(KP618033988, T21, T20);
                T24 = SIMD_FMADD(KP618033988, T20, T21);
                Tk  = Th + Tj;
                T1o = Th - Tj;
                T1G = SIMD_FMADD(KP618033988, T1F, T1E);
                T1I = SIMD_FNMADD(KP618033988, T1E, T1F);
                Te  = T8 + Td;
                TC  = T8 - Td;
                TY  = SIMD_FMADD(KP618033988, TX, TW);
                T10 = SIMD_FNMADD(KP618033988, TW, TX);
                T1e = T1c - T1d;
                T1g = T1c + T1d;
                T18 = SIMD_FMADD(KP618033988, T17, T15);
                T1a = SIMD_FNMADD(KP618033988, T15, T17);
                TS  = TQ + TR;
                TU  = TQ - TR;
                TL  = SIMD_FNMADD(KP618033988, TK, TG);
                TN  = SIMD_FMADD(KP618033988, TG, TK);
                T1W = T1U + T1V;
                T1Y = T1U - T1V;
                {
                    SIMD_FLOAT T1Q, T1S, T1A, T1C, T1u, T1w, T11, T1J, T1n, TB,
                        T1f, TT, T1X, T1B, T13;
                    SIMD_FLOAT T19, T1L, T1R, T1p, T1v, TD, TM, T1h, T1l, TV,
                        TZ, T1Z, T23, T1D, T1H;
                    T1Q            = SIMD_FNMADD(KP618033988, T1P, T1N);
                    T1S            = SIMD_FMADD(KP618033988, T1N, T1P);
                    T1A            = T1y + T1z;
                    T1C            = T1y - T1z;
                    T1u            = SIMD_FMADD(KP618033988, T1t, T1r);
                    T1w            = SIMD_FNMADD(KP618033988, T1r, T1t);
                    T11            = SIMD_FNMADD(KP250000000, TA, Tv);
                    io[WS(os, 5)]  = Tv + TA;
                    T1J            = SIMD_FNMADD(KP250000000, Tu, Tm);
                    io[WS(os, 15)] = Tm + Tu;
                    T1n            = SIMD_FNMADD(KP250000000, Tk, Tf);
                    ro[0]          = Tf + Tk;
                    TB             = SIMD_FNMADD(KP250000000, Te, T3);
                    ro[WS(os, 10)] = T3 + Te;
                    T1f            = SIMD_FNMADD(KP250000000, T1e, T1b);
                    ro[WS(os, 5)]  = T1b + T1e;
                    TT             = SIMD_FNMADD(KP250000000, TS, TP);
                    io[WS(os, 10)] = TP + TS;
                    T1X            = SIMD_FNMADD(KP250000000, T1W, T1T);
                    ro[WS(os, 15)] = T1T + T1W;
                    T1B            = SIMD_FNMADD(KP250000000, T1A, T1x);
                    io[0]          = T1x + T1A;
                    T13            = SIMD_FMADD(KP559016994, T12, T11);
                    T19            = SIMD_FNMADD(KP559016994, T12, T11);
                    T1L            = SIMD_FNMADD(KP559016994, T1K, T1J);
                    T1R            = SIMD_FMADD(KP559016994, T1K, T1J);
                    T1p            = SIMD_FMADD(KP559016994, T1o, T1n);
                    T1v            = SIMD_FNMADD(KP559016994, T1o, T1n);
                    TD             = SIMD_FMADD(KP559016994, TC, TB);
                    TM             = SIMD_FNMADD(KP559016994, TC, TB);
                    T1h            = SIMD_FMADD(KP559016994, T1g, T1f);
                    T1l            = SIMD_FNMADD(KP559016994, T1g, T1f);
                    TV             = SIMD_FNMADD(KP559016994, TU, TT);
                    TZ             = SIMD_FMADD(KP559016994, TU, TT);
                    T1Z            = SIMD_FNMADD(KP559016994, T1Y, T1X);
                    T23            = SIMD_FMADD(KP559016994, T1Y, T1X);
                    T1D            = SIMD_FMADD(KP559016994, T1C, T1B);
                    T1H            = SIMD_FNMADD(KP559016994, T1C, T1B);
                    io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1a, T19);
                    io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1a, T19);
                    io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T18, T13);
                    io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T18, T13);
                    io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1S, T1R);
                    io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1S, T1R);
                    io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1Q, T1L);
                    io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1Q, T1L);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1w, T1v);
                    ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1w, T1v);
                    ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1u, T1p);
                    ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1u, T1p);
                    ro[WS(os, 18)] = SIMD_FNMADD(KP951056516, TN, TM);
                    ro[WS(os, 2)]  = SIMD_FMADD(KP951056516, TN, TM);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, TL, TD);
                    ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, TL, TD);
                    ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1m, T1l);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1m, T1l);
                    ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1k, T1h);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1k, T1h);
                    io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T10, TZ);
                    io[WS(os, 14)] = SIMD_FMADD(KP951056516, T10, TZ);
                    io[WS(os, 18)] = SIMD_FMADD(KP951056516, TY, TV);
                    io[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TY, TV);
                    ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T24, T23);
                    ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T24, T23);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T22, T1Z);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T22, T1Z);
                    io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1I, T1H);
                    io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1I, T1H);
                    io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1G, T1D);
                    io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1G, T1D);
                }
            }
        }
    }
}

template <>
struct c2cf_traits<20, 9>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 160;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 110;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 9 -name c2cf
 * -standalone */

/*
 * This function contains 160 FP additions, 72 FP multiplications,
 * (or, 88 additions, 0 multiplications, 72 fused multiply/add),
 * 110 stack variables, 4 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 9>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1T, T28, T1R, T1P, T22, T20, T1S, T2e, T2c, T1Q, T1M, T27,
            T1U, T21, T29;
        SIMD_FLOAT T2d;
        {
            SIMD_FLOAT Tp, TA, T3, Th, T23, T1j, TW, T1G, Tj, T1N, TR, T2b, T1c,
                T1k, T14;
            SIMD_FLOAT T1Z, T1q, T1z, T1H, T1r, T2a, Tm, T1O, T13, T1f, T1l, TO,
                T1X, T1I, T1C;
            SIMD_FLOAT TG, T19, Tz, Tg, TI, T11, TZ, T26, T1, To, T2, TV;
            T1 = ri[0];
            To = ii[0];
            T2 = ri[WS(is, 5)];
            TV = ii[WS(is, 5)];
            {
                SIMD_FLOAT T4, Tq, Ts, TB, T7, Ti, T1Y, T1b, TQ, T1y, Tk, Tb,
                    T1A, TL, T1d;
                SIMD_FLOAT T1V, TD, Tv, Tc, Tw, Td, TM, T5, Tr, T6, TP, T9, Tu,
                    Ta, TK;
                SIMD_FLOAT TX, Tt, T8, T24, TC, Tx, TE, Te, Tl, T1W, T1e, TN,
                    T1B, Tf, TY;
                SIMD_FLOAT T25, TF, Ty;
                T4  = ri[WS(is, 4)];
                Tq  = ii[WS(is, 4)];
                T5  = ri[WS(is, 6)];
                Tr  = ii[WS(is, 6)];
                T6  = ri[WS(is, 1)];
                TP  = ii[WS(is, 1)];
                T9  = ri[WS(is, 8)];
                Tu  = ii[WS(is, 8)];
                Ta  = ri[WS(is, 3)];
                TK  = ii[WS(is, 3)];
                Tp  = T2 + To;
                TA  = To - T2;
                T3  = T1 - T2;
                Th  = T1 + T2;
                T23 = T1 - TV;
                T1j = T1 + TV;
                TW  = To - TV;
                T1G = To + TV;
                Ts  = T6 - Tr;
                TB  = T6 + Tr;
                T7  = T5 - T6;
                Ti  = T5 + T6;
                T1Y = T5 + TP;
                T1b = TP - T5;
                TQ  = Tr - TP;
                T1y = Tr + TP;
                Tk  = T9 + Ta;
                Tb  = T9 - Ta;
                T1A = Tu + TK;
                TL  = Tu - TK;
                T1d = T9 - TK;
                T1V = T9 + TK;
                TD  = Ta + Tu;
                Tv  = Tu - Ta;
                Tc  = ri[WS(is, 2)];
                Tw  = ii[WS(is, 2)];
                Td  = ri[WS(is, 7)];
                TM  = ii[WS(is, 7)];
                Tj  = T4 + Ti;
                T1N = T4 - Ti;
                TR  = Tq - TQ;
                TX  = Tq + TQ;
                Tt  = Tq + Ts;
                T2b = Tq - Ts;
                T1c = T4 - T1b;
                T1k = T4 + T1b;
                T8  = T4 + T7;
                T14 = T4 - T7;
                T1Z = T4 + T1Y;
                T24 = T4 - T1Y;
                TC  = Tq - TB;
                T1q = Tq + TB;
                T1z = Tq - T1y;
                T1H = Tq + T1y;
                Tx  = Td + Tw;
                TE  = Td - Tw;
                Te  = Tc - Td;
                Tl  = Tc + Td;
                T1W = TM - Tc;
                T1e = Tc + TM;
                TN  = Tw - TM;
                T1B = Tw + TM;
                T1r = TD - TE;
                TF  = TD + TE;
                T2a = Tv + Tx;
                Ty  = Tv - Tx;
                Tm  = Tk + Tl;
                T1O = Tk - Tl;
                Tf  = Tb + Te;
                T13 = Tb - Te;
                T1f = T1d + T1e;
                T1l = T1d - T1e;
                TO  = TL - TN;
                TY  = TL + TN;
                T1X = T1V - T1W;
                T25 = T1V + T1W;
                T1I = T1A + T1B;
                T1C = T1A - T1B;
                TG  = TC + TF;
                T19 = TC - TF;
                T1T = Tt - Ty;
                Tz  = Tt + Ty;
                Tg  = T8 + Tf;
                TI  = T8 - Tf;
                T11 = TX - TY;
                TZ  = TX + TY;
                T28 = T24 - T25;
                T26 = T24 + T25;
            }
            {
                SIMD_FLOAT T1J, T1L, T1o, Tn, T1w, T15, T17, T1i, T1g, T18, T1u,
                    T1s, T12, T16, T1n;
                SIMD_FLOAT TS, TU, TH, T1m, T10, TT, TJ, T1F, T1D, T1v, T1t,
                    T1p, T1K, T1h, T1a;
                SIMD_FLOAT T1E, T1x;
                TS             = SIMD_FNMADD(KP618033988, TR, TO);
                TU             = SIMD_FMADD(KP618033988, TO, TR);
                io[WS(os, 5)]  = TA + TG;
                io[WS(os, 15)] = Tp + Tz;
                T1J            = T1H + T1I;
                T1L            = T1H - T1I;
                TH             = SIMD_FNMADD(KP250000000, Tg, T3);
                ro[WS(os, 10)] = T3 + Tg;
                T1m            = T1k + T1l;
                T1o            = T1k - T1l;
                io[WS(os, 10)] = TW + TZ;
                Tn             = Tj + Tm;
                T1w            = Tj - Tm;
                ro[WS(os, 15)] = T23 + T26;
                T15            = SIMD_FNMADD(KP618033988, T14, T13);
                T17            = SIMD_FMADD(KP618033988, T13, T14);
                T10            = SIMD_FNMADD(KP250000000, TZ, TW);
                io[0]          = T1G + T1J;
                T1i            = SIMD_FNMADD(KP618033988, T1c, T1f);
                T1g            = SIMD_FMADD(KP618033988, T1f, T1c);
                TT             = SIMD_FMADD(KP559016994, TI, TH);
                TJ             = SIMD_FNMADD(KP559016994, TI, TH);
                ro[WS(os, 5)]  = T1j + T1m;
                ro[0]          = Th + Tn;
                T18            = SIMD_FNMADD(KP250000000, TG, TA);
                T1u            = SIMD_FNMADD(KP618033988, T1q, T1r);
                T1s            = SIMD_FMADD(KP618033988, T1r, T1q);
                T12            = SIMD_FNMADD(KP559016994, T11, T10);
                T16            = SIMD_FMADD(KP559016994, T11, T10);
                T1n            = SIMD_FNMADD(KP250000000, T1m, T1j);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, TU, TT);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, TU, TT);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, TS, TJ);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TS, TJ);
                T1F            = SIMD_FNMADD(KP618033988, T1z, T1C);
                T1D            = SIMD_FMADD(KP618033988, T1C, T1z);
                T1h            = SIMD_FNMADD(KP559016994, T19, T18);
                T1a            = SIMD_FMADD(KP559016994, T19, T18);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T17, T16);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T17, T16);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T15, T12);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T15, T12);
                T1v            = SIMD_FNMADD(KP250000000, Tn, Th);
                T1R            = SIMD_FNMADD(KP618033988, T1N, T1O);
                T1P            = SIMD_FMADD(KP618033988, T1O, T1N);
                T1t            = SIMD_FNMADD(KP559016994, T1o, T1n);
                T1p            = SIMD_FMADD(KP559016994, T1o, T1n);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1i, T1h);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1i, T1h);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1g, T1a);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1g, T1a);
                T1K            = SIMD_FNMADD(KP250000000, T1J, T1G);
                T22            = SIMD_FMADD(KP618033988, T1X, T1Z);
                T20            = SIMD_FNMADD(KP618033988, T1Z, T1X);
                T1E            = SIMD_FNMADD(KP559016994, T1w, T1v);
                T1x            = SIMD_FMADD(KP559016994, T1w, T1v);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1u, T1t);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1u, T1t);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1s, T1p);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1s, T1p);
                T1S            = SIMD_FNMADD(KP250000000, Tz, Tp);
                T2e            = SIMD_FMADD(KP618033988, T2a, T2b);
                T2c            = SIMD_FNMADD(KP618033988, T2b, T2a);
                T1Q            = SIMD_FNMADD(KP559016994, T1L, T1K);
                T1M            = SIMD_FMADD(KP559016994, T1L, T1K);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1F, T1E);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1F, T1E);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1D, T1x);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1D, T1x);
                T27            = SIMD_FNMADD(KP250000000, T26, T23);
            }
        }
        T1U            = SIMD_FNMADD(KP559016994, T1T, T1S);
        T21            = SIMD_FMADD(KP559016994, T1T, T1S);
        io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T1R, T1Q);
        io[WS(os, 12)] = SIMD_FMADD(KP951056516, T1R, T1Q);
        io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1P, T1M);
        io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1P, T1M);
        T29            = SIMD_FNMADD(KP559016994, T28, T27);
        T2d            = SIMD_FMADD(KP559016994, T28, T27);
        io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T22, T21);
        io[WS(os, 19)] = SIMD_FMADD(KP951056516, T22, T21);
        io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T20, T1U);
        io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T20, T1U);
        ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2e, T2d);
        ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2e, T2d);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2c, T29);
        ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2c, T29);
    }
}

template <>
struct c2cf_traits<20, 10>
{
    static constexpr long_t flops           = 240;
    static constexpr long_t operations      = 168;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 152;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 10 -name c2cf
 * -standalone */

/*
 * This function contains 168 FP additions, 72 FP multiplications,
 * (or, 96 additions, 0 multiplications, 72 fused multiply/add),
 * 152 stack variables, 4 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 10>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T7, Tv, Ts, TE, T3, Tj, T2d, T1r, T13, T1P, Tu, TF, T6, Tk,
            T27;
        SIMD_FLOAT T1i, TV, T1G, TB, TJ, Tg, To, T25, T1m, TS, T1K, T8, TW, Tb,
            Ty;
        SIMD_FLOAT Tc, TP, T1, Tr, T2, T12, T4, Tt, T5, TU, Te, TA, Tf, TR, Tw;
        SIMD_FLOAT TG, T9, Tl, T28, T1j, TX, T1H, Tz, TI, Td, Tn, T24, T1l;
        T1  = ri[0];
        Tr  = ii[0];
        T2  = ri[WS(is, 5)];
        T12 = ii[WS(is, 5)];
        T4  = ri[WS(is, 4)];
        Tt  = ii[WS(is, 4)];
        T5  = ri[WS(is, 9)];
        TU  = ii[WS(is, 9)];
        Te  = ri[WS(is, 2)];
        TA  = ii[WS(is, 2)];
        Tf  = ri[WS(is, 7)];
        TR  = ii[WS(is, 7)];
        T7  = ri[WS(is, 6)];
        Tv  = ii[WS(is, 6)];
        Ts  = T2 + Tr;
        TE  = Tr - T2;
        T3  = T1 - T2;
        Tj  = T1 + T2;
        T2d = T1 - T12;
        T1r = T1 + T12;
        T13 = Tr - T12;
        T1P = Tr + T12;
        Tu  = T5 + Tt;
        TF  = Tt - T5;
        T6  = T4 - T5;
        Tk  = T4 + T5;
        T27 = T4 - TU;
        T1i = T4 + TU;
        TV  = Tt - TU;
        T1G = Tt + TU;
        TB  = Tf + TA;
        TJ  = Tf - TA;
        Tg  = Te - Tf;
        To  = Te + Tf;
        T25 = TR - Te;
        T1m = Te + TR;
        TS  = TA - TR;
        T1K = TA + TR;
        T8  = ri[WS(is, 1)];
        TW  = ii[WS(is, 1)];
        Tb  = ri[WS(is, 8)];
        Ty  = ii[WS(is, 8)];
        Tc  = ri[WS(is, 3)];
        TP  = ii[WS(is, 3)];
        Tw  = T8 - Tv;
        TG  = T8 + Tv;
        T9  = T7 - T8;
        Tl  = T7 + T8;
        T28 = T7 + TW;
        T1j = TW - T7;
        TX  = Tv - TW;
        T1H = Tv + TW;
        Tz  = Ty - Tc;
        TI  = Tc + Ty;
        Td  = Tb - Tc;
        Tn  = Tb + Tc;
        T24 = Tb + TP;
        T1l = Tb - TP;
        {
            SIMD_FLOAT TQ, T1J, T1y, TH, T2l, Tx, T1W, Tm, T1b, Ta, T1k, T1s,
                TY, T14, T29;
            SIMD_FLOAT T2e, T1I, T1Q, T1z, TK, T2k, TC, T1X, Tp, T1a, Th, T1n,
                T1t, TT, T15;
            TQ  = Ty - TP;
            T1J = Ty + TP;
            T1y = TF + TG;
            TH  = TF - TG;
            T2l = Tu - Tw;
            Tx  = Tu + Tw;
            T1W = Tk - Tl;
            Tm  = Tk + Tl;
            T1b = T6 - T9;
            Ta  = T6 + T9;
            T1k = T1i - T1j;
            T1s = T1i + T1j;
            TY  = TV - TX;
            T14 = TV + TX;
            T29 = T27 + T28;
            T2e = T27 - T28;
            T1I = T1G - T1H;
            T1Q = T1G + T1H;
            T1z = TI - TJ;
            TK  = TI + TJ;
            T2k = Tz + TB;
            TC  = Tz - TB;
            T1X = Tn - To;
            Tp  = Tn + To;
            T1a = Td - Tg;
            Th  = Td + Tg;
            T1n = T1l + T1m;
            T1t = T1l - T1m;
            TT  = TQ - TS;
            T15 = TQ + TS;
            {
                SIMD_FLOAT T26, T2f, T1L, T1R, TL, T1g, T1A, T1C, TD, T22, T2m,
                    T2o, Tq, T1E, T1Y;
                SIMD_FLOAT T20, Ti, TN, T1c, T1e, T1u, T1w, T1o, T1q, T16, T18,
                    TZ, T11, T2g, T2i;
                T26 = T24 - T25;
                T2f = T24 + T25;
                T1L = T1J - T1K;
                T1R = T1J + T1K;
                TL  = TH + TK;
                T1g = TH - TK;
                T1A = SIMD_FMADD(KP618033988, T1z, T1y);
                T1C = SIMD_FNMADD(KP618033988, T1y, T1z);
                TD  = Tx + TC;
                T22 = Tx - TC;
                T2m = SIMD_FNMADD(KP618033988, T2l, T2k);
                T2o = SIMD_FMADD(KP618033988, T2k, T2l);
                Tq  = Tm + Tp;
                T1E = Tm - Tp;
                T1Y = SIMD_FMADD(KP618033988, T1X, T1W);
                T20 = SIMD_FNMADD(KP618033988, T1W, T1X);
                Ti  = Ta + Th;
                TN  = Ta - Th;
                T1c = SIMD_FNMADD(KP618033988, T1b, T1a);
                T1e = SIMD_FMADD(KP618033988, T1a, T1b);
                T1u = T1s + T1t;
                T1w = T1s - T1t;
                T1o = SIMD_FMADD(KP618033988, T1n, T1k);
                T1q = SIMD_FNMADD(KP618033988, T1k, T1n);
                T16 = T14 + T15;
                T18 = T14 - T15;
                TZ  = SIMD_FNMADD(KP618033988, TY, TT);
                T11 = SIMD_FMADD(KP618033988, TT, TY);
                T2g = T2e + T2f;
                T2i = T2e - T2f;
                {
                    SIMD_FLOAT T2a, T2c, T1S, T1U, T1M, T1O, T1f, T21, T1D, TM,
                        T1v, T17, T2h, T1T, T1h;
                    SIMD_FLOAT T1p, T23, T2b, T1F, T1N, TO, T10, T1x, T1B, T19,
                        T1d, T2j, T2n, T1V, T1Z;
                    T2a            = SIMD_FNMADD(KP618033988, T29, T26);
                    T2c            = SIMD_FMADD(KP618033988, T26, T29);
                    T1S            = T1Q + T1R;
                    T1U            = T1Q - T1R;
                    T1M            = SIMD_FMADD(KP618033988, T1L, T1I);
                    T1O            = SIMD_FNMADD(KP618033988, T1I, T1L);
                    T1f            = SIMD_FNMADD(KP250000000, TL, TE);
                    io[WS(os, 5)]  = TE + TL;
                    T21            = SIMD_FNMADD(KP250000000, TD, Ts);
                    io[WS(os, 15)] = Ts + TD;
                    T1D            = SIMD_FNMADD(KP250000000, Tq, Tj);
                    ro[0]          = Tj + Tq;
                    TM             = SIMD_FNMADD(KP250000000, Ti, T3);
                    ro[WS(os, 10)] = T3 + Ti;
                    T1v            = SIMD_FNMADD(KP250000000, T1u, T1r);
                    ro[WS(os, 5)]  = T1r + T1u;
                    T17            = SIMD_FNMADD(KP250000000, T16, T13);
                    io[WS(os, 10)] = T13 + T16;
                    T2h            = SIMD_FNMADD(KP250000000, T2g, T2d);
                    ro[WS(os, 15)] = T2d + T2g;
                    T1T            = SIMD_FNMADD(KP250000000, T1S, T1P);
                    io[0]          = T1P + T1S;
                    T1h            = SIMD_FMADD(KP559016994, T1g, T1f);
                    T1p            = SIMD_FNMADD(KP559016994, T1g, T1f);
                    T23            = SIMD_FNMADD(KP559016994, T22, T21);
                    T2b            = SIMD_FMADD(KP559016994, T22, T21);
                    T1F            = SIMD_FMADD(KP559016994, T1E, T1D);
                    T1N            = SIMD_FNMADD(KP559016994, T1E, T1D);
                    TO             = SIMD_FNMADD(KP559016994, TN, TM);
                    T10            = SIMD_FMADD(KP559016994, TN, TM);
                    T1x            = SIMD_FMADD(KP559016994, T1w, T1v);
                    T1B            = SIMD_FNMADD(KP559016994, T1w, T1v);
                    T19            = SIMD_FNMADD(KP559016994, T18, T17);
                    T1d            = SIMD_FMADD(KP559016994, T18, T17);
                    T2j            = SIMD_FNMADD(KP559016994, T2i, T2h);
                    T2n            = SIMD_FMADD(KP559016994, T2i, T2h);
                    T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                    T1Z            = SIMD_FNMADD(KP559016994, T1U, T1T);
                    io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1q, T1p);
                    io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1q, T1p);
                    io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1o, T1h);
                    io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1o, T1h);
                    io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2c, T2b);
                    io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2c, T2b);
                    io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2a, T23);
                    io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2a, T23);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1O, T1N);
                    ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1O, T1N);
                    ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1M, T1F);
                    ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1M, T1F);
                    ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T11, T10);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T11, T10);
                    ro[WS(os, 18)] = SIMD_FMADD(KP951056516, TZ, TO);
                    ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, TZ, TO);
                    ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1C, T1B);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1C, T1B);
                    ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1A, T1x);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1A, T1x);
                    io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1e, T1d);
                    io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1e, T1d);
                    io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1c, T19);
                    io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1c, T19);
                    ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2o, T2n);
                    ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2o, T2n);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2m, T2j);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2m, T2j);
                    io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T20, T1Z);
                    io[WS(os, 12)] = SIMD_FMADD(KP951056516, T20, T1Z);
                    io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T1Y, T1V);
                    io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T1Y, T1V);
                }
            }
        }
    }
}

template <>
struct c2cf_traits<20, 11>
{
    static constexpr long_t flops           = 244;
    static constexpr long_t operations      = 172;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 158;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 11 -name c2cf
 * -standalone */

/*
 * This function contains 172 FP additions, 72 FP multiplications,
 * (or, 100 additions, 0 multiplications, 72 fused multiply/add),
 * 158 stack variables, 4 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 11>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T9, Tz, Ty, TJ, T8, Tm, T2d, T1n, TZ, T1M, TF, TN, Ti, Tq,
            T2b;
        SIMD_FLOAT T1r, TW, T1Q, T2j, T1x, T5, Tl, T1V, T18, Tw, TI, Ta, T10,
            Td, TC;
        SIMD_FLOAT Te, TT, T4, T17, T1, T2, Tt, Tu, T6, Tx, T7, TY, Tg, TE, Th;
        SIMD_FLOAT TV, T1w, T3, T16, Tv, TA, TK, Tb, Tn, T2e, T1o, T11, T1N, TD,
            TM;
        SIMD_FLOAT Tf, Tp, T2a, T1q;
        T4  = ri[WS(is, 5)];
        T17 = ii[WS(is, 5)];
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        Tt  = ii[0];
        Tu  = ii[WS(is, 10)];
        T6  = ri[WS(is, 4)];
        Tx  = ii[WS(is, 4)];
        T7  = ri[WS(is, 9)];
        TY  = ii[WS(is, 9)];
        Tg  = ri[WS(is, 2)];
        TE  = ii[WS(is, 2)];
        Th  = ri[WS(is, 7)];
        TV  = ii[WS(is, 7)];
        T9  = ri[WS(is, 6)];
        T1w = T1 - T2;
        T3  = T1 + T2;
        T16 = Tt + Tu;
        Tv  = Tt - Tu;
        Tz  = ii[WS(is, 6)];
        Ty  = T7 + Tx;
        TJ  = Tx - T7;
        T8  = T6 - T7;
        Tm  = T6 + T7;
        T2d = T6 - TY;
        T1n = T6 + TY;
        TZ  = Tx - TY;
        T1M = Tx + TY;
        TF  = Th + TE;
        TN  = Th - TE;
        Ti  = Tg - Th;
        Tq  = Tg + Th;
        T2b = TV - Tg;
        T1r = Tg + TV;
        TW  = TE - TV;
        T1Q = TE + TV;
        T2j = T1w - T17;
        T1x = T1w + T17;
        T5  = T3 - T4;
        Tl  = T3 + T4;
        T1V = T16 + T17;
        T18 = T16 - T17;
        Tw  = T4 + Tv;
        TI  = Tv - T4;
        Ta  = ri[WS(is, 1)];
        T10 = ii[WS(is, 1)];
        Td  = ri[WS(is, 8)];
        TC  = ii[WS(is, 8)];
        Te  = ri[WS(is, 3)];
        TT  = ii[WS(is, 3)];
        TA  = Ta - Tz;
        TK  = Ta + Tz;
        Tb  = T9 - Ta;
        Tn  = T9 + Ta;
        T2e = T9 + T10;
        T1o = T10 - T9;
        T11 = Tz - T10;
        T1N = Tz + T10;
        TD  = TC - Te;
        TM  = Te + TC;
        Tf  = Td - Te;
        Tp  = Td + Te;
        T2a = Td + TT;
        T1q = Td - TT;
        {
            SIMD_FLOAT TU, T1P, T1E, TL, T2r, TB, T22, To, T1g, Tc, T1p, T1y,
                T12, T19, T2f;
            SIMD_FLOAT T2k, T1O, T1W, T1F, TO, T2q, TG, T23, Tr, T1f, Tj, T1s,
                T1z, TX, T1a;
            TU  = TC - TT;
            T1P = TC + TT;
            T1E = TJ + TK;
            TL  = TJ - TK;
            T2r = Ty - TA;
            TB  = Ty + TA;
            T22 = Tm - Tn;
            To  = Tm + Tn;
            T1g = T8 - Tb;
            Tc  = T8 + Tb;
            T1p = T1n - T1o;
            T1y = T1n + T1o;
            T12 = TZ - T11;
            T19 = TZ + T11;
            T2f = T2d + T2e;
            T2k = T2d - T2e;
            T1O = T1M - T1N;
            T1W = T1M + T1N;
            T1F = TM - TN;
            TO  = TM + TN;
            T2q = TD + TF;
            TG  = TD - TF;
            T23 = Tp - Tq;
            Tr  = Tp + Tq;
            T1f = Tf - Ti;
            Tj  = Tf + Ti;
            T1s = T1q + T1r;
            T1z = T1q - T1r;
            TX  = TU - TW;
            T1a = TU + TW;
            {
                SIMD_FLOAT T2c, T2l, T1R, T1X, TP, T1l, T1G, T1I, TH, T28, T2s,
                    T2u, Ts, T1K, T24;
                SIMD_FLOAT T26, Tk, TR, T1h, T1j, T1A, T1C, T1t, T1v, T1b, T1d,
                    T13, T15, T2m, T2o;
                T2c = T2a - T2b;
                T2l = T2a + T2b;
                T1R = T1P - T1Q;
                T1X = T1P + T1Q;
                TP  = TL + TO;
                T1l = TL - TO;
                T1G = SIMD_FMADD(KP618033988, T1F, T1E);
                T1I = SIMD_FNMADD(KP618033988, T1E, T1F);
                TH  = TB + TG;
                T28 = TB - TG;
                T2s = SIMD_FNMADD(KP618033988, T2r, T2q);
                T2u = SIMD_FMADD(KP618033988, T2q, T2r);
                Ts  = To + Tr;
                T1K = To - Tr;
                T24 = SIMD_FMADD(KP618033988, T23, T22);
                T26 = SIMD_FNMADD(KP618033988, T22, T23);
                Tk  = Tc + Tj;
                TR  = Tc - Tj;
                T1h = SIMD_FNMADD(KP618033988, T1g, T1f);
                T1j = SIMD_FMADD(KP618033988, T1f, T1g);
                T1A = T1y + T1z;
                T1C = T1y - T1z;
                T1t = SIMD_FMADD(KP618033988, T1s, T1p);
                T1v = SIMD_FNMADD(KP618033988, T1p, T1s);
                T1b = T19 + T1a;
                T1d = T19 - T1a;
                T13 = SIMD_FNMADD(KP618033988, T12, TX);
                T15 = SIMD_FMADD(KP618033988, TX, T12);
                T2m = T2k + T2l;
                T2o = T2k - T2l;
                {
                    SIMD_FLOAT T2g, T2i, T1Y, T20, T1S, T1U, T1k, T27, T1J, TQ,
                        T1B, T1c, T2n, T1Z, T1m;
                    SIMD_FLOAT T1u, T29, T2h, T1L, T1T, TS, T14, T1D, T1H, T1e,
                        T1i, T2p, T2t, T21, T25;
                    T2g            = SIMD_FNMADD(KP618033988, T2f, T2c);
                    T2i            = SIMD_FMADD(KP618033988, T2c, T2f);
                    T1Y            = T1W + T1X;
                    T20            = T1W - T1X;
                    T1S            = SIMD_FMADD(KP618033988, T1R, T1O);
                    T1U            = SIMD_FNMADD(KP618033988, T1O, T1R);
                    T1k            = SIMD_FNMADD(KP250000000, TP, TI);
                    io[WS(os, 5)]  = TI + TP;
                    T27            = SIMD_FNMADD(KP250000000, TH, Tw);
                    io[WS(os, 15)] = Tw + TH;
                    T1J            = SIMD_FNMADD(KP250000000, Ts, Tl);
                    ro[0]          = Tl + Ts;
                    TQ             = SIMD_FNMADD(KP250000000, Tk, T5);
                    ro[WS(os, 10)] = T5 + Tk;
                    T1B            = SIMD_FNMADD(KP250000000, T1A, T1x);
                    ro[WS(os, 5)]  = T1x + T1A;
                    T1c            = SIMD_FNMADD(KP250000000, T1b, T18);
                    io[WS(os, 10)] = T18 + T1b;
                    T2n            = SIMD_FNMADD(KP250000000, T2m, T2j);
                    ro[WS(os, 15)] = T2j + T2m;
                    T1Z            = SIMD_FNMADD(KP250000000, T1Y, T1V);
                    io[0]          = T1V + T1Y;
                    T1m            = SIMD_FMADD(KP559016994, T1l, T1k);
                    T1u            = SIMD_FNMADD(KP559016994, T1l, T1k);
                    T29            = SIMD_FNMADD(KP559016994, T28, T27);
                    T2h            = SIMD_FMADD(KP559016994, T28, T27);
                    T1L            = SIMD_FMADD(KP559016994, T1K, T1J);
                    T1T            = SIMD_FNMADD(KP559016994, T1K, T1J);
                    TS             = SIMD_FNMADD(KP559016994, TR, TQ);
                    T14            = SIMD_FMADD(KP559016994, TR, TQ);
                    T1D            = SIMD_FMADD(KP559016994, T1C, T1B);
                    T1H            = SIMD_FNMADD(KP559016994, T1C, T1B);
                    T1e            = SIMD_FNMADD(KP559016994, T1d, T1c);
                    T1i            = SIMD_FMADD(KP559016994, T1d, T1c);
                    T2p            = SIMD_FNMADD(KP559016994, T2o, T2n);
                    T2t            = SIMD_FMADD(KP559016994, T2o, T2n);
                    T21            = SIMD_FMADD(KP559016994, T20, T1Z);
                    T25            = SIMD_FNMADD(KP559016994, T20, T1Z);
                    io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1v, T1u);
                    io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1v, T1u);
                    io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1t, T1m);
                    io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1t, T1m);
                    io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2i, T2h);
                    io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2i, T2h);
                    io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2g, T29);
                    io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2g, T29);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T1U, T1T);
                    ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T1U, T1T);
                    ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1S, T1L);
                    ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1S, T1L);
                    ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T15, T14);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T15, T14);
                    ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T13, TS);
                    ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T13, TS);
                    ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1I, T1H);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1I, T1H);
                    ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1G, T1D);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1G, T1D);
                    io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1j, T1i);
                    io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1j, T1i);
                    io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1h, T1e);
                    io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1h, T1e);
                    ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2u, T2t);
                    ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2u, T2t);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2s, T2p);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2s, T2p);
                    io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T26, T25);
                    io[WS(os, 12)] = SIMD_FMADD(KP951056516, T26, T25);
                    io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T24, T21);
                    io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T24, T21);
                }
            }
        }
    }
}

template <>
struct c2cf_traits<20, 12>
{
    static constexpr long_t flops           = 248;
    static constexpr long_t operations      = 176;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 130;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 12 -name c2cf
 * -standalone */

/*
 * This function contains 176 FP additions, 72 FP multiplications,
 * (or, 104 additions, 0 multiplications, 72 fused multiply/add),
 * 130 stack variables, 4 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 12>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T9, TC, T2p, T1D, T5, Tn, T21, T1d, Ty, TL, TR, T1L, T2w, TJ,
            T29;
        SIMD_FLOAT Tt, Tl, T1k, T1y, T1F, T10, T1f, T2i, T2r, T23, T1X, Ta, Tb,
            T13, T14;
        SIMD_FLOAT T6, Tz, T7, T11;
        {
            SIMD_FLOAT T4, T1c, T1, T2, Tv, Tw, Tf, TF, Tg, TW, Ti, TH, Tj, TY,
                T1C;
            SIMD_FLOAT T3, T1b, Tx, TG, TP, Th, Tr, T2g, T1w, TX, T1V, TI, TQ,
                Tk, Ts;
            SIMD_FLOAT T2h, T1x, TZ, T1W;
            T4  = ri[WS(is, 5)];
            T1c = ii[WS(is, 5)];
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            Tv  = ii[0];
            Tw  = ii[WS(is, 10)];
            Tf  = ri[WS(is, 8)];
            TF  = ii[WS(is, 8)];
            Tg  = ri[WS(is, 3)];
            TW  = ii[WS(is, 3)];
            Ti  = ri[WS(is, 2)];
            TH  = ii[WS(is, 2)];
            Tj  = ri[WS(is, 7)];
            TY  = ii[WS(is, 7)];
            T9  = ri[WS(is, 6)];
            T1C = T1 - T2;
            T3  = T1 + T2;
            T1b = Tv + Tw;
            Tx  = Tv - Tw;
            TC  = ii[WS(is, 6)];
            TG  = TF - Tg;
            TP  = Tg + TF;
            Th  = Tf - Tg;
            Tr  = Tf + Tg;
            T2g = Tf + TW;
            T1w = Tf - TW;
            TX  = TF - TW;
            T1V = TF + TW;
            TI  = Tj + TH;
            TQ  = Tj - TH;
            Tk  = Ti - Tj;
            Ts  = Ti + Tj;
            T2h = TY - Ti;
            T1x = Ti + TY;
            TZ  = TH - TY;
            T1W = TH + TY;
            T2p = T1C - T1c;
            T1D = T1C + T1c;
            T5  = T3 - T4;
            Tn  = T3 + T4;
            T21 = T1b + T1c;
            T1d = T1b - T1c;
            Ty  = T4 + Tx;
            TL  = Tx - T4;
            TR  = TP + TQ;
            T1L = TP - TQ;
            T2w = TG + TI;
            TJ  = TG - TI;
            T29 = Tr - Ts;
            Tt  = Tr + Ts;
            Tl  = Th + Tk;
            T1k = Th - Tk;
            T1y = T1w + T1x;
            T1F = T1w - T1x;
            T10 = TX - TZ;
            T1f = TX + TZ;
            T2i = T2g - T2h;
            T2r = T2g + T2h;
            T23 = T1V + T1W;
            T1X = T1V - T1W;
            Ta  = ri[WS(is, 1)];
            Tb  = ri[WS(is, 11)];
            T13 = ii[WS(is, 1)];
            T14 = ii[WS(is, 11)];
            T6  = ri[WS(is, 4)];
            Tz  = ii[WS(is, 4)];
            T7  = ri[WS(is, 9)];
            T11 = ii[WS(is, 9)];
        }
        {
            SIMD_FLOAT Tc, TB, T15, T1t, TA, TM, T8, To, T2j, T1s, T12, T1S, TD,
                TN, Td;
            SIMD_FLOAT Tp, T2k, T1u, T1T, T16, TO, T1K, TE, T2x, Tq, T28, Te,
                T1l, T1E, T1v;
            SIMD_FLOAT T2q, T2l;
            Tc  = Ta + Tb;
            TB  = Ta - Tb;
            T15 = T13 + T14;
            T1t = T13 - T14;
            TA  = T7 + Tz;
            TM  = Tz - T7;
            T8  = T6 - T7;
            To  = T6 + T7;
            T2j = T6 - T11;
            T1s = T6 + T11;
            T12 = Tz - T11;
            T1S = Tz + T11;
            TD  = TB - TC;
            TN  = TB + TC;
            Td  = T9 - Tc;
            Tp  = T9 + Tc;
            T2k = T9 + T1t;
            T1u = T1t - T9;
            T1T = TC + T15;
            T16 = TC - T15;
            TO  = TM - TN;
            T1K = TM + TN;
            TE  = TA + TD;
            T2x = TA - TD;
            Tq  = To + Tp;
            T28 = To - Tp;
            Te  = T8 + Td;
            T1l = T8 - Td;
            T1E = T1s + T1u;
            T1v = T1s - T1u;
            T2q = T2j - T2k;
            T2l = T2j + T2k;
            {
                SIMD_FLOAT T1e, T17, T22, T1U, T1M, T1O, T1q, TS, T2y, T2A, T2e,
                    TK, T2a, T2c, T1Q;
                SIMD_FLOAT Tu, T1m, T1o, TU, Tm, T1z, T1B, T1I, T1G, T2m, T2o,
                    T2u, T2s, T18, T1a;
                T1e = T12 + T16;
                T17 = T12 - T16;
                T22 = T1S + T1T;
                T1U = T1S - T1T;
                T1M = SIMD_FMADD(KP618033988, T1L, T1K);
                T1O = SIMD_FNMADD(KP618033988, T1K, T1L);
                T1q = TO - TR;
                TS  = TO + TR;
                T2y = SIMD_FNMADD(KP618033988, T2x, T2w);
                T2A = SIMD_FMADD(KP618033988, T2w, T2x);
                T2e = TE - TJ;
                TK  = TE + TJ;
                T2a = SIMD_FMADD(KP618033988, T29, T28);
                T2c = SIMD_FNMADD(KP618033988, T28, T29);
                T1Q = Tq - Tt;
                Tu  = Tq + Tt;
                T1m = SIMD_FNMADD(KP618033988, T1l, T1k);
                T1o = SIMD_FMADD(KP618033988, T1k, T1l);
                TU  = Te - Tl;
                Tm  = Te + Tl;
                T1z = SIMD_FMADD(KP618033988, T1y, T1v);
                T1B = SIMD_FNMADD(KP618033988, T1v, T1y);
                T1I = T1E - T1F;
                T1G = T1E + T1F;
                T2m = SIMD_FNMADD(KP618033988, T2l, T2i);
                T2o = SIMD_FMADD(KP618033988, T2i, T2l);
                T2u = T2q - T2r;
                T2s = T2q + T2r;
                T18 = SIMD_FNMADD(KP618033988, T17, T10);
                T1a = SIMD_FMADD(KP618033988, T10, T17);
                {
                    SIMD_FLOAT T1i, T1g, T1Y, T20, T26, T24, T1p, T2d, T1P, TT,
                        T1H, T2t, T1h, T25, T1A;
                    SIMD_FLOAT T1r, T2n, T2f, T1Z, T1R, T19, TV, T1N, T1J, T2z,
                        T2v, T1n, T1j, T2b, T27;
                    T1i            = T1e - T1f;
                    T1g            = T1e + T1f;
                    T1Y            = SIMD_FMADD(KP618033988, T1X, T1U);
                    T20            = SIMD_FNMADD(KP618033988, T1U, T1X);
                    T26            = T22 - T23;
                    T24            = T22 + T23;
                    io[WS(os, 5)]  = TL + TS;
                    T1p            = SIMD_FNMADD(KP250000000, TS, TL);
                    io[WS(os, 15)] = Ty + TK;
                    T2d            = SIMD_FNMADD(KP250000000, TK, Ty);
                    ro[0]          = Tn + Tu;
                    T1P            = SIMD_FNMADD(KP250000000, Tu, Tn);
                    ro[WS(os, 10)] = T5 + Tm;
                    TT             = SIMD_FNMADD(KP250000000, Tm, T5);
                    ro[WS(os, 5)]  = T1D + T1G;
                    T1H            = SIMD_FNMADD(KP250000000, T1G, T1D);
                    ro[WS(os, 15)] = T2p + T2s;
                    T2t            = SIMD_FNMADD(KP250000000, T2s, T2p);
                    io[WS(os, 10)] = T1d + T1g;
                    T1h            = SIMD_FNMADD(KP250000000, T1g, T1d);
                    io[0]          = T21 + T24;
                    T25            = SIMD_FNMADD(KP250000000, T24, T21);
                    T1A            = SIMD_FNMADD(KP559016994, T1q, T1p);
                    T1r            = SIMD_FMADD(KP559016994, T1q, T1p);
                    T2n            = SIMD_FMADD(KP559016994, T2e, T2d);
                    T2f            = SIMD_FNMADD(KP559016994, T2e, T2d);
                    T1Z            = SIMD_FNMADD(KP559016994, T1Q, T1P);
                    T1R            = SIMD_FMADD(KP559016994, T1Q, T1P);
                    T19            = SIMD_FMADD(KP559016994, TU, TT);
                    TV             = SIMD_FNMADD(KP559016994, TU, TT);
                    T1N            = SIMD_FNMADD(KP559016994, T1I, T1H);
                    T1J            = SIMD_FMADD(KP559016994, T1I, T1H);
                    T2z            = SIMD_FMADD(KP559016994, T2u, T2t);
                    T2v            = SIMD_FNMADD(KP559016994, T2u, T2t);
                    T1n            = SIMD_FMADD(KP559016994, T1i, T1h);
                    T1j            = SIMD_FNMADD(KP559016994, T1i, T1h);
                    T2b            = SIMD_FNMADD(KP559016994, T26, T25);
                    T27            = SIMD_FMADD(KP559016994, T26, T25);
                    io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1z, T1r);
                    io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1z, T1r);
                    io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1B, T1A);
                    io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1B, T1A);
                    io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2m, T2f);
                    io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2m, T2f);
                    io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2o, T2n);
                    io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2o, T2n);
                    ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T1Y, T1R);
                    ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T1Y, T1R);
                    ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T20, T1Z);
                    ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T20, T1Z);
                    ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T18, TV);
                    ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T18, TV);
                    ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1a, T19);
                    ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1a, T19);
                    ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1M, T1J);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1M, T1J);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1O, T1N);
                    ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1O, T1N);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2y, T2v);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2y, T2v);
                    ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2A, T2z);
                    ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2A, T2z);
                    io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1m, T1j);
                    io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1m, T1j);
                    io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1o, T1n);
                    io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1o, T1n);
                    io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2a, T27);
                    io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2a, T27);
                    io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2c, T2b);
                    io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2c, T2b);
                }
            }
        }
    }
}

template <>
struct c2cf_traits<20, 13>
{
    static constexpr long_t flops           = 252;
    static constexpr long_t operations      = 180;
    static constexpr long_t memory_accesses = 66;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 13 -name c2cf
 * -standalone */

/*
 * This function contains 180 FP additions, 72 FP multiplications,
 * (or, 108 additions, 0 multiplications, 72 fused multiply/add),
 * 132 stack variables, 4 constants, and 66 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 13>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2v, T1i, T5, Tp, T27, T1J, TA, TP, T1c, T1k, T2x, T2o, T2f,
            Tv, Tn;
        SIMD_FLOAT T1Q, T1A, T1L, T29, T23, T2C, TV, TN, T1q, TR, TF, Tr, Td,
            T1D, T1Z;
        SIMD_FLOAT T15, T2q, TQ, TC, Tq, T8, T1B, T1Y, T2p, T11, T9, TE, T6, TD,
            Tc;
        SIMD_FLOAT T1C, T14, TB, T7, T10, T4, T1h, T1, T2, Tx, Ty, TS, T2D, TG,
            T1p;
        SIMD_FLOAT Ts, T2e, Te, T1R, T1K, T1E, T1j, T16;
        T4  = ri[WS(is, 5)];
        T1h = ii[WS(is, 5)];
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        Tx  = ii[0];
        Ty  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Tl, T1a, Ti, Tj, TJ, TK, Tf, TH, Tg, T1g, T3, T1I, Tz,
                T17, T19;
            SIMD_FLOAT Tk, T1y, TL, TI, TT, Th, Tt, T21, T1x, T18, T2m, T2n,
                T1b, Tm, Tu;
            SIMD_FLOAT T22, T1z, TM, TU, Ta, Tb, T12, T13;
            Tl  = ri[WS(is, 7)];
            T1a = ii[WS(is, 7)];
            Ti  = ri[WS(is, 12)];
            Tj  = ri[WS(is, 2)];
            TJ  = ii[WS(is, 12)];
            TK  = ii[WS(is, 2)];
            Tf  = ri[WS(is, 8)];
            TH  = ii[WS(is, 8)];
            Tg  = ri[WS(is, 3)];
            T1g = T1 - T2;
            T3  = T1 + T2;
            T1I = Tx + Ty;
            Tz  = Tx - Ty;
            T17 = ii[WS(is, 3)];
            T9  = ri[WS(is, 6)];
            T19 = Ti - Tj;
            Tk  = Ti + Tj;
            T1y = TJ + TK;
            TL  = TJ - TK;
            TE  = ii[WS(is, 6)];
            TI  = Tg + TH;
            TT  = TH - Tg;
            Th  = Tf - Tg;
            Tt  = Tf + Tg;
            T2v = T1g - T1h;
            T1i = T1g + T1h;
            T5  = T3 - T4;
            Tp  = T3 + T4;
            T27 = T1I + T1h;
            T1J = T1I - T1h;
            TA  = Tz - T4;
            TP  = T4 + Tz;
            T21 = TH + T17;
            T1x = TH - T17;
            T18 = Tf - T17;
            T2m = Tf + T17;
            T2n = T19 + T1a;
            T1b = T19 - T1a;
            Tm  = Tk - Tl;
            Tu  = Tk + Tl;
            T22 = T1y + T1a;
            T1z = T1y - T1a;
            TM  = Tl + TL;
            TU  = TL - Tl;
            Ta  = ri[WS(is, 1)];
            Tb  = ri[WS(is, 11)];
            T12 = ii[WS(is, 1)];
            T13 = ii[WS(is, 11)];
            T1c = T18 - T1b;
            T1k = T18 + T1b;
            T2x = T2m + T2n;
            T2o = T2m - T2n;
            T2f = Tt - Tu;
            Tv  = Tt + Tu;
            Tn  = Th + Tm;
            T1Q = Th - Tm;
            T1A = T1x - T1z;
            T1L = T1x + T1z;
            T29 = T21 + T22;
            T23 = T21 - T22;
            T2C = TT - TU;
            TV  = TT + TU;
            TN  = TI + TM;
            T1q = TI - TM;
            T6  = ri[WS(is, 4)];
            TD  = Ta - Tb;
            Tc  = Ta + Tb;
            T1C = T12 + T13;
            T14 = T12 - T13;
            TB  = ii[WS(is, 4)];
            T7  = ri[WS(is, 9)];
            T10 = ii[WS(is, 9)];
        }
        TR  = TD - TE;
        TF  = TD + TE;
        Tr  = T9 + Tc;
        Td  = T9 - Tc;
        T1D = TE - T1C;
        T1Z = TE + T1C;
        T15 = T14 - T9;
        T2q = T9 + T14;
        TQ  = T7 + TB;
        TC  = TB - T7;
        Tq  = T6 + T7;
        T8  = T6 - T7;
        T1B = TB - T10;
        T1Y = TB + T10;
        T2p = T6 - T10;
        T11 = T6 + T10;
        TS  = TQ + TR;
        T2D = TQ - TR;
        TG  = TC - TF;
        T1p = TC + TF;
        Ts  = Tq + Tr;
        T2e = Tq - Tr;
        Te  = T8 + Td;
        T1R = T8 - Td;
        T1K = T1B + T1D;
        T1E = T1B - T1D;
        T1j = T11 + T15;
        T16 = T11 - T15;
        {
            SIMD_FLOAT T2w, T2r, T28, T20, T2E, T2G, T2k, TW, T1r, T1t, TY, TO,
                T2g, T2i, T1W;
            SIMD_FLOAT Tw, T1S, T1U, T1v, To, T1F, T1H, T1O, T1M, T1d, T1f, T1n,
                T1l, T2s, T2u;
            T2w = T2p - T2q;
            T2r = T2p + T2q;
            T28 = T1Y + T1Z;
            T20 = T1Y - T1Z;
            T2E = SIMD_FNMADD(KP618033988, T2D, T2C);
            T2G = SIMD_FMADD(KP618033988, T2C, T2D);
            T2k = TS - TV;
            TW  = TS + TV;
            T1r = SIMD_FMADD(KP618033988, T1q, T1p);
            T1t = SIMD_FNMADD(KP618033988, T1p, T1q);
            TY  = TG - TN;
            TO  = TG + TN;
            T2g = SIMD_FMADD(KP618033988, T2f, T2e);
            T2i = SIMD_FNMADD(KP618033988, T2e, T2f);
            T1W = Ts - Tv;
            Tw  = Ts + Tv;
            T1S = SIMD_FNMADD(KP618033988, T1R, T1Q);
            T1U = SIMD_FMADD(KP618033988, T1Q, T1R);
            T1v = Te - Tn;
            To  = Te + Tn;
            T1F = SIMD_FNMADD(KP618033988, T1E, T1A);
            T1H = SIMD_FMADD(KP618033988, T1A, T1E);
            T1O = T1K - T1L;
            T1M = T1K + T1L;
            T1d = SIMD_FMADD(KP618033988, T1c, T16);
            T1f = SIMD_FNMADD(KP618033988, T16, T1c);
            T1n = T1j - T1k;
            T1l = T1j + T1k;
            T2s = SIMD_FNMADD(KP618033988, T2r, T2o);
            T2u = SIMD_FMADD(KP618033988, T2o, T2r);
            {
                SIMD_FLOAT T2A, T2y, T24, T26, T2c, T2a, T2j, TX, T1V, T1u, T1N,
                    T1m, T2z, T2b, T2t;
                SIMD_FLOAT T2l, T1e, TZ, T25, T1X, T1G, T1w, T1T, T1P, T1s, T1o,
                    T2F, T2B, T2h, T2d;
                T2A            = T2w - T2x;
                T2y            = T2w + T2x;
                T24            = SIMD_FMADD(KP618033988, T23, T20);
                T26            = SIMD_FNMADD(KP618033988, T20, T23);
                T2c            = T28 - T29;
                T2a            = T28 + T29;
                io[WS(os, 15)] = TP + TW;
                T2j            = SIMD_FNMADD(KP250000000, TW, TP);
                io[WS(os, 5)]  = TA + TO;
                TX             = SIMD_FNMADD(KP250000000, TO, TA);
                ro[0]          = Tp + Tw;
                T1V            = SIMD_FNMADD(KP250000000, Tw, Tp);
                ro[WS(os, 10)] = T5 + To;
                T1u            = SIMD_FNMADD(KP250000000, To, T5);
                io[WS(os, 10)] = T1J + T1M;
                T1N            = SIMD_FNMADD(KP250000000, T1M, T1J);
                ro[WS(os, 5)]  = T1i + T1l;
                T1m            = SIMD_FNMADD(KP250000000, T1l, T1i);
                ro[WS(os, 15)] = T2v + T2y;
                T2z            = SIMD_FNMADD(KP250000000, T2y, T2v);
                io[0]          = T27 + T2a;
                T2b            = SIMD_FNMADD(KP250000000, T2a, T27);
                T2t            = SIMD_FMADD(KP559016994, T2k, T2j);
                T2l            = SIMD_FNMADD(KP559016994, T2k, T2j);
                T1e            = SIMD_FNMADD(KP559016994, TY, TX);
                TZ             = SIMD_FMADD(KP559016994, TY, TX);
                T25            = SIMD_FNMADD(KP559016994, T1W, T1V);
                T1X            = SIMD_FMADD(KP559016994, T1W, T1V);
                T1G            = SIMD_FMADD(KP559016994, T1v, T1u);
                T1w            = SIMD_FNMADD(KP559016994, T1v, T1u);
                T1T            = SIMD_FMADD(KP559016994, T1O, T1N);
                T1P            = SIMD_FNMADD(KP559016994, T1O, T1N);
                T1s            = SIMD_FNMADD(KP559016994, T1n, T1m);
                T1o            = SIMD_FMADD(KP559016994, T1n, T1m);
                T2F            = SIMD_FMADD(KP559016994, T2A, T2z);
                T2B            = SIMD_FNMADD(KP559016994, T2A, T2z);
                T2h            = SIMD_FNMADD(KP559016994, T2c, T2b);
                T2d            = SIMD_FMADD(KP559016994, T2c, T2b);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2s, T2l);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2s, T2l);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2u, T2t);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2u, T2t);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1d, TZ);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1d, TZ);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1f, T1e);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1f, T1e);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T24, T1X);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T24, T1X);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T26, T25);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T26, T25);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T1F, T1w);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1F, T1w);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1H, T1G);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1H, T1G);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1S, T1P);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1S, T1P);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T1U, T1T);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T1U, T1T);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1r, T1o);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1r, T1o);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1t, T1s);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1t, T1s);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2E, T2B);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2E, T2B);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2G, T2F);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2G, T2F);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2g, T2d);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2g, T2d);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2i, T2h);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2i, T2h);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 14>
{
    static constexpr long_t flops           = 256;
    static constexpr long_t operations      = 184;
    static constexpr long_t memory_accesses = 68;
    static constexpr long_t stack_vars      = 140;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 14 -name c2cf
 * -standalone */

/*
 * This function contains 184 FP additions, 72 FP multiplications,
 * (or, 112 additions, 0 multiplications, 72 fused multiply/add),
 * 140 stack variables, 4 constants, and 68 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 14>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2B, T1n, T5, Tr, T2d, T1P, TC, TS, Tn, T1f, T2J, TV, TI,
            T1u, T2k;
        SIMD_FLOAT Tu, Te, T1X, T1K, T1Q, T2e, T26, T19, T1o, T2C, T2x, TW, TL,
            Tv, Tj;
        SIMD_FLOAT T1e, Tm, T1E, TO, T1D, T27, T1d, T2s, Tf, TJ, T1a, T1b, Tk,
            TK, Ti;
        SIMD_FLOAT Tl, TM, TN, T4, T1m, T1, T2, Tz, TA, T1C, T1c, T2t, T1g, To,
            Tw;
        SIMD_FLOAT T28, T1F, TP, TX, T1p, T1h, T2D, T2u, Tx, T2l, Tp, T1W, T1R,
            T1G, T2f;
        SIMD_FLOAT T29;
        T4  = ri[WS(is, 5)];
        T1m = ii[WS(is, 5)];
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        Tz  = ii[0];
        TA  = ii[WS(is, 10)];
        {
            SIMD_FLOAT T9, TG, Ta, Tb, T15, T16, T6, TD, T7, T1l, T3, T1O, TB,
                T13, TE;
            SIMD_FLOAT TT, T8, Ts, T24, T1H, T14, T2v, TH, TU, Td, Tt, T25, T1J,
                T2w, T18;
            SIMD_FLOAT TF, Tc, T1I, T17, Tg, Th;
            T9  = ri[WS(is, 6)];
            TG  = ii[WS(is, 6)];
            Ta  = ri[WS(is, 1)];
            Tb  = ri[WS(is, 11)];
            T15 = ii[WS(is, 1)];
            T16 = ii[WS(is, 11)];
            T6  = ri[WS(is, 4)];
            TD  = ii[WS(is, 4)];
            T7  = ri[WS(is, 9)];
            T1l = T1 - T2;
            T3  = T1 + T2;
            T1O = Tz + TA;
            TB  = Tz - TA;
            T13 = ii[WS(is, 9)];
            Tf  = ri[WS(is, 8)];
            TF  = Ta - Tb;
            Tc  = Ta + Tb;
            T1I = T15 + T16;
            T17 = T15 - T16;
            TJ  = ii[WS(is, 8)];
            TE  = TD - T7;
            TT  = T7 + TD;
            T8  = T6 - T7;
            Ts  = T6 + T7;
            T2B = T1l - T1m;
            T1n = T1l + T1m;
            T5  = T3 - T4;
            Tr  = T3 + T4;
            T2d = T1O + T1m;
            T1P = T1O - T1m;
            TC  = TB - T4;
            TS  = T4 + TB;
            T24 = TD + T13;
            T1H = TD - T13;
            T14 = T6 + T13;
            T2v = T6 - T13;
            TH  = TF + TG;
            TU  = TF - TG;
            Td  = T9 - Tc;
            Tt  = T9 + Tc;
            T25 = TG + T1I;
            T1J = TG - T1I;
            T2w = T9 + T17;
            T18 = T17 - T9;
            Tn  = ri[WS(is, 7)];
            T1f = ii[WS(is, 7)];
            Tg  = ri[WS(is, 13)];
            Th  = ri[WS(is, 3)];
            T2J = TT - TU;
            TV  = TT + TU;
            TI  = TE - TH;
            T1u = TE + TH;
            T2k = Ts - Tt;
            Tu  = Ts + Tt;
            Te  = T8 + Td;
            T1X = T8 - Td;
            T1K = T1H - T1J;
            T1Q = T1H + T1J;
            T2e = T24 + T25;
            T26 = T24 - T25;
            T19 = T14 - T18;
            T1o = T14 + T18;
            T2C = T2v - T2w;
            T2x = T2v + T2w;
            T1a = ii[WS(is, 13)];
            T1b = ii[WS(is, 3)];
            Tk  = ri[WS(is, 12)];
            TK  = Tg - Th;
            Ti  = Tg + Th;
            Tl  = ri[WS(is, 2)];
            TM  = ii[WS(is, 12)];
            TN  = ii[WS(is, 2)];
        }
        T1C = T1a + T1b;
        T1c = T1a - T1b;
        TW  = TK + TJ;
        TL  = TJ - TK;
        Tv  = Tf + Ti;
        Tj  = Tf - Ti;
        T1e = Tk - Tl;
        Tm  = Tk + Tl;
        T1E = TM + TN;
        TO  = TM - TN;
        T1D = TJ - T1C;
        T27 = TJ + T1C;
        T1d = Tf + T1c;
        T2s = Tf - T1c;
        T2t = T1e + T1f;
        T1g = T1e - T1f;
        To  = Tm - Tn;
        Tw  = Tm + Tn;
        T28 = T1E + T1f;
        T1F = T1E - T1f;
        TP  = Tn + TO;
        TX  = TO - Tn;
        T1p = T1d + T1g;
        T1h = T1d - T1g;
        T2D = T2s + T2t;
        T2u = T2s - T2t;
        Tx  = Tv + Tw;
        T2l = Tv - Tw;
        Tp  = Tj + To;
        T1W = Tj - To;
        T1R = T1D + T1F;
        T1G = T1D - T1F;
        T2f = T27 + T28;
        T29 = T27 - T28;
        {
            SIMD_FLOAT TY, T2I, TQ, T1v, T1i, T1k, T1s, T1q, T2y, T2A, T2G, T2E,
                T2m, T2o, T22;
            SIMD_FLOAT Ty, T1Y, T20, T1A, Tq, T1L, T1N, T1U, T1S, T2a, T2c, T2i,
                T2g, T2K, T2M;
            TY  = TW + TX;
            T2I = TW - TX;
            TQ  = TL + TP;
            T1v = TL - TP;
            T1i = SIMD_FMADD(KP618033988, T1h, T19);
            T1k = SIMD_FNMADD(KP618033988, T19, T1h);
            T1s = T1o - T1p;
            T1q = T1o + T1p;
            T2y = SIMD_FNMADD(KP618033988, T2x, T2u);
            T2A = SIMD_FMADD(KP618033988, T2u, T2x);
            T2G = T2C - T2D;
            T2E = T2C + T2D;
            T2m = SIMD_FMADD(KP618033988, T2l, T2k);
            T2o = SIMD_FNMADD(KP618033988, T2k, T2l);
            T22 = Tu - Tx;
            Ty  = Tu + Tx;
            T1Y = SIMD_FNMADD(KP618033988, T1X, T1W);
            T20 = SIMD_FMADD(KP618033988, T1W, T1X);
            T1A = Te - Tp;
            Tq  = Te + Tp;
            T1L = SIMD_FNMADD(KP618033988, T1K, T1G);
            T1N = SIMD_FMADD(KP618033988, T1G, T1K);
            T1U = T1Q - T1R;
            T1S = T1Q + T1R;
            T2a = SIMD_FMADD(KP618033988, T29, T26);
            T2c = SIMD_FNMADD(KP618033988, T26, T29);
            T2i = T2e - T2f;
            T2g = T2e + T2f;
            T2K = SIMD_FNMADD(KP618033988, T2J, T2I);
            T2M = SIMD_FMADD(KP618033988, T2I, T2J);
            {
                SIMD_FLOAT T2q, TZ, T1w, T1y, T11, TR, T1r, T2F, T21, T1z, T1T,
                    T2h, T2p, T10, T1x;
                SIMD_FLOAT T1t, T2L, T2H, T2b, T23, T1M, T1B, T1Z, T1V, T2n,
                    T2j, T2z, T2r, T1j, T12;
                T2q            = TV - TY;
                TZ             = TV + TY;
                T1w            = SIMD_FMADD(KP618033988, T1v, T1u);
                T1y            = SIMD_FNMADD(KP618033988, T1u, T1v);
                T11            = TI - TQ;
                TR             = TI + TQ;
                ro[WS(os, 5)]  = T1n + T1q;
                T1r            = SIMD_FNMADD(KP250000000, T1q, T1n);
                ro[WS(os, 15)] = T2B + T2E;
                T2F            = SIMD_FNMADD(KP250000000, T2E, T2B);
                ro[0]          = Tr + Ty;
                T21            = SIMD_FNMADD(KP250000000, Ty, Tr);
                ro[WS(os, 10)] = T5 + Tq;
                T1z            = SIMD_FNMADD(KP250000000, Tq, T5);
                io[WS(os, 10)] = T1P + T1S;
                T1T            = SIMD_FNMADD(KP250000000, T1S, T1P);
                io[0]          = T2d + T2g;
                T2h            = SIMD_FNMADD(KP250000000, T2g, T2d);
                io[WS(os, 15)] = TS + TZ;
                T2p            = SIMD_FNMADD(KP250000000, TZ, TS);
                io[WS(os, 5)]  = TC + TR;
                T10            = SIMD_FNMADD(KP250000000, TR, TC);
                T1x            = SIMD_FNMADD(KP559016994, T1s, T1r);
                T1t            = SIMD_FMADD(KP559016994, T1s, T1r);
                T2L            = SIMD_FMADD(KP559016994, T2G, T2F);
                T2H            = SIMD_FNMADD(KP559016994, T2G, T2F);
                T2b            = SIMD_FNMADD(KP559016994, T22, T21);
                T23            = SIMD_FMADD(KP559016994, T22, T21);
                T1M            = SIMD_FMADD(KP559016994, T1A, T1z);
                T1B            = SIMD_FNMADD(KP559016994, T1A, T1z);
                T1Z            = SIMD_FMADD(KP559016994, T1U, T1T);
                T1V            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T2n            = SIMD_FNMADD(KP559016994, T2i, T2h);
                T2j            = SIMD_FMADD(KP559016994, T2i, T2h);
                T2z            = SIMD_FMADD(KP559016994, T2q, T2p);
                T2r            = SIMD_FNMADD(KP559016994, T2q, T2p);
                T1j            = SIMD_FNMADD(KP559016994, T11, T10);
                T12            = SIMD_FMADD(KP559016994, T11, T10);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1w, T1t);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1w, T1t);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1y, T1x);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1y, T1x);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2K, T2H);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2K, T2H);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2M, T2L);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2M, T2L);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T2a, T23);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2a, T23);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2c, T2b);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2c, T2b);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T1L, T1B);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1L, T1B);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1N, T1M);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1N, T1M);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T1Y, T1V);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T1Y, T1V);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T20, T1Z);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T20, T1Z);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2m, T2j);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2m, T2j);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2o, T2n);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2o, T2n);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2y, T2r);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2y, T2r);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2A, T2z);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2A, T2z);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1i, T12);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1i, T12);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1k, T1j);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1k, T1j);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 15>
{
    static constexpr long_t flops           = 260;
    static constexpr long_t operations      = 188;
    static constexpr long_t memory_accesses = 70;
    static constexpr long_t stack_vars      = 142;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 15 -name c2cf
 * -standalone */

/*
 * This function contains 188 FP additions, 72 FP multiplications,
 * (or, 116 additions, 0 multiplications, 72 fused multiply/add),
 * 142 stack variables, 4 constants, and 70 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 15>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T9, T1s, T2H, Tt, T5, T1V, T2j, TW, TE, T18, Tb, TK, T1u,
            T1m, T2A;
        SIMD_FLOAT T2J, Tz, T2r, T22, Tr, T1X, T1L, T2f, T2l, T12, T2O, T1A, TU,
            T17, T8;
        SIMD_FLOAT T1M, TH, TJ, Te, T1O, T1c, T6, T7, TF, TG, Tc, Td, T1a, T1b,
            T4;
        SIMD_FLOAT T1r, T1, T2, TB, TC, T2B, T19, Ta, Tu, T2a, T1N, TI, TX, TL,
            TY;
        SIMD_FLOAT Tf, Tv, T2b, T1P, T2C, T1d, TZ, T2P, TM, T1z, Tw, T2q, Tg,
            T23, T1W;
        SIMD_FLOAT T1Q, T2k, T2c;
        T4  = ri[WS(is, 5)];
        T1r = ii[WS(is, 5)];
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TB  = ii[0];
        TC  = ii[WS(is, 10)];
        {
            SIMD_FLOAT Th, TN, Tp, T1k, Ti, Tj, T1f, T1g, Tm, T1q, T3, T1U, TD,
                Tn, TQ;
            SIMD_FLOAT TR, T10, TP, Tx, Tl, T1I, T2d, T1i, T2y, T1l, T2z, Ty,
                Tq, T1K, T2e;
            SIMD_FLOAT T11, TT, TO, Tk, T1H, T1h, T1j, To, T1J, TS;
            Th  = ri[WS(is, 8)];
            TN  = ii[WS(is, 8)];
            Tp  = ri[WS(is, 7)];
            T1k = ii[WS(is, 7)];
            Ti  = ri[WS(is, 13)];
            Tj  = ri[WS(is, 3)];
            T1f = ii[WS(is, 13)];
            T1g = ii[WS(is, 3)];
            Tm  = ri[WS(is, 12)];
            T1q = T1 - T2;
            T3  = T1 + T2;
            T1U = TB + TC;
            TD  = TB - TC;
            Tn  = ri[WS(is, 2)];
            TQ  = ii[WS(is, 12)];
            TR  = ii[WS(is, 2)];
            T9  = ri[WS(is, 9)];
            TO  = Ti - Tj;
            Tk  = Ti + Tj;
            T1H = T1f + T1g;
            T1h = T1f - T1g;
            T1s = T1q + T1r;
            T2H = T1q - T1r;
            Tt  = T3 + T4;
            T5  = T3 - T4;
            T1V = T1U - T1r;
            T2j = T1U + T1r;
            TW  = T4 + TD;
            TE  = TD - T4;
            T1j = Tm - Tn;
            To  = Tm + Tn;
            T1J = TQ + TR;
            TS  = TQ - TR;
            T10 = TO + TN;
            TP  = TN - TO;
            Tx  = Th + Tk;
            Tl  = Th - Tk;
            T1I = TN - T1H;
            T2d = TN + T1H;
            T1i = Th + T1h;
            T2y = Th - T1h;
            T1l = T1j - T1k;
            T2z = T1j + T1k;
            Ty  = To + Tp;
            Tq  = To - Tp;
            T1K = T1J - T1k;
            T2e = T1J + T1k;
            T11 = TS - Tp;
            TT  = Tp + TS;
            T18 = ii[WS(is, 9)];
            Tb  = ri[WS(is, 6)];
            TK  = ii[WS(is, 6)];
            T6  = ri[WS(is, 4)];
            T1u = T1i + T1l;
            T1m = T1i - T1l;
            T2A = T2y - T2z;
            T2J = T2y + T2z;
            Tz  = Tx + Ty;
            T2r = Tx - Ty;
            T22 = Tl - Tq;
            Tr  = Tl + Tq;
            T1X = T1I + T1K;
            T1L = T1I - T1K;
            T2f = T2d - T2e;
            T2l = T2d + T2e;
            T12 = T10 + T11;
            T2O = T10 - T11;
            T1A = TP - TT;
            TU  = TP + TT;
            T7  = ri[WS(is, 14)];
            TF  = ii[WS(is, 4)];
            TG  = ii[WS(is, 14)];
            Tc  = ri[WS(is, 1)];
            Td  = ri[WS(is, 11)];
            T1a = ii[WS(is, 1)];
            T1b = ii[WS(is, 11)];
        }
        T17 = T6 - T7;
        T8  = T6 + T7;
        T1M = TF + TG;
        TH  = TF - TG;
        TJ  = Tc - Td;
        Te  = Tc + Td;
        T1O = T1a + T1b;
        T1c = T1a - T1b;
        T2B = T17 - T18;
        T19 = T17 + T18;
        Ta  = T8 - T9;
        Tu  = T8 + T9;
        T2a = T1M + T18;
        T1N = T1M - T18;
        TI  = TH - T9;
        TX  = T9 + TH;
        TL  = TJ + TK;
        TY  = TJ - TK;
        Tf  = Tb - Te;
        Tv  = Tb + Te;
        T2b = TK + T1O;
        T1P = TK - T1O;
        T2C = Tb + T1c;
        T1d = T1c - Tb;
        TZ  = TX + TY;
        T2P = TX - TY;
        TM  = TI - TL;
        T1z = TI + TL;
        Tw  = Tu + Tv;
        T2q = Tu - Tv;
        Tg  = Ta + Tf;
        T23 = Ta - Tf;
        T1W = T1N + T1P;
        T1Q = T1N - T1P;
        T2k = T2a + T2b;
        T2c = T2a - T2b;
        {
            SIMD_FLOAT T1t, T1e, T2I, T2D, T2Q, T2S, T2w, T13, T1B, T1D, T15,
                TV, T2s, T2u, T28;
            SIMD_FLOAT TA, T24, T26, T1F, Ts, T1R, T1T, T20, T1Y, T2g, T2i, T2o,
                T2m, T1n, T1p;
            T1t = T19 + T1d;
            T1e = T19 - T1d;
            T2I = T2B - T2C;
            T2D = T2B + T2C;
            T2Q = SIMD_FNMADD(KP618033988, T2P, T2O);
            T2S = SIMD_FMADD(KP618033988, T2O, T2P);
            T2w = TZ - T12;
            T13 = TZ + T12;
            T1B = SIMD_FMADD(KP618033988, T1A, T1z);
            T1D = SIMD_FNMADD(KP618033988, T1z, T1A);
            T15 = TM - TU;
            TV  = TM + TU;
            T2s = SIMD_FMADD(KP618033988, T2r, T2q);
            T2u = SIMD_FNMADD(KP618033988, T2q, T2r);
            T28 = Tw - Tz;
            TA  = Tw + Tz;
            T24 = SIMD_FNMADD(KP618033988, T23, T22);
            T26 = SIMD_FMADD(KP618033988, T22, T23);
            T1F = Tg - Tr;
            Ts  = Tg + Tr;
            T1R = SIMD_FNMADD(KP618033988, T1Q, T1L);
            T1T = SIMD_FMADD(KP618033988, T1L, T1Q);
            T20 = T1W - T1X;
            T1Y = T1W + T1X;
            T2g = SIMD_FMADD(KP618033988, T2f, T2c);
            T2i = SIMD_FNMADD(KP618033988, T2c, T2f);
            T2o = T2k - T2l;
            T2m = T2k + T2l;
            T1n = SIMD_FMADD(KP618033988, T1m, T1e);
            T1p = SIMD_FNMADD(KP618033988, T1e, T1m);
            {
                SIMD_FLOAT T1x, T1v, T2E, T2G, T2M, T2K, T2v, T14, T27, T1E,
                    T1Z, T2n, T1w, T2L, T2F;
                SIMD_FLOAT T2x, T1o, T16, T2h, T29, T1S, T1G, T25, T21, T2t,
                    T2p, T1C, T1y, T2R, T2N;
                T1x            = T1t - T1u;
                T1v            = T1t + T1u;
                T2E            = SIMD_FNMADD(KP618033988, T2D, T2A);
                T2G            = SIMD_FMADD(KP618033988, T2A, T2D);
                T2M            = T2I - T2J;
                T2K            = T2I + T2J;
                io[WS(os, 15)] = TW + T13;
                T2v            = SIMD_FNMADD(KP250000000, T13, TW);
                io[WS(os, 5)]  = TE + TV;
                T14            = SIMD_FNMADD(KP250000000, TV, TE);
                ro[0]          = Tt + TA;
                T27            = SIMD_FNMADD(KP250000000, TA, Tt);
                ro[WS(os, 10)] = T5 + Ts;
                T1E            = SIMD_FNMADD(KP250000000, Ts, T5);
                io[WS(os, 10)] = T1V + T1Y;
                T1Z            = SIMD_FNMADD(KP250000000, T1Y, T1V);
                io[0]          = T2j + T2m;
                T2n            = SIMD_FNMADD(KP250000000, T2m, T2j);
                ro[WS(os, 5)]  = T1s + T1v;
                T1w            = SIMD_FNMADD(KP250000000, T1v, T1s);
                ro[WS(os, 15)] = T2H + T2K;
                T2L            = SIMD_FNMADD(KP250000000, T2K, T2H);
                T2F            = SIMD_FMADD(KP559016994, T2w, T2v);
                T2x            = SIMD_FNMADD(KP559016994, T2w, T2v);
                T1o            = SIMD_FNMADD(KP559016994, T15, T14);
                T16            = SIMD_FMADD(KP559016994, T15, T14);
                T2h            = SIMD_FNMADD(KP559016994, T28, T27);
                T29            = SIMD_FMADD(KP559016994, T28, T27);
                T1S            = SIMD_FMADD(KP559016994, T1F, T1E);
                T1G            = SIMD_FNMADD(KP559016994, T1F, T1E);
                T25            = SIMD_FMADD(KP559016994, T20, T1Z);
                T21            = SIMD_FNMADD(KP559016994, T20, T1Z);
                T2t            = SIMD_FNMADD(KP559016994, T2o, T2n);
                T2p            = SIMD_FMADD(KP559016994, T2o, T2n);
                T1C            = SIMD_FNMADD(KP559016994, T1x, T1w);
                T1y            = SIMD_FMADD(KP559016994, T1x, T1w);
                T2R            = SIMD_FMADD(KP559016994, T2M, T2L);
                T2N            = SIMD_FNMADD(KP559016994, T2M, T2L);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2E, T2x);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2E, T2x);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2G, T2F);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2G, T2F);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1n, T16);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1n, T16);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1p, T1o);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1p, T1o);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T2g, T29);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2g, T29);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2i, T2h);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2i, T2h);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T1R, T1G);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1R, T1G);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1T, T1S);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1T, T1S);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T24, T21);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T24, T21);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T26, T25);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T26, T25);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2s, T2p);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2s, T2p);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2u, T2t);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2u, T2t);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1B, T1y);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1B, T1y);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1D, T1C);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1D, T1C);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2Q, T2N);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2Q, T2N);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2S, T2R);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2S, T2R);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 16>
{
    static constexpr long_t flops           = 264;
    static constexpr long_t operations      = 192;
    static constexpr long_t memory_accesses = 72;
    static constexpr long_t stack_vars      = 140;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 16 -name c2cf
 * -standalone */

/*
 * This function contains 192 FP additions, 72 FP multiplications,
 * (or, 120 additions, 0 multiplications, 72 fused multiply/add),
 * 140 stack variables, 4 constants, and 72 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 16>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT TZ, TH, Tv, T7, T21, T2p, T1x, T2N, Td, TN, T1z, T1p, T2G,
            T2P, TB;
        SIMD_FLOAT T2x, T28, Tt, T23, T1Q, T2l, T2r, T15, T2U, T1F, TX, T1c,
            T2H, Tw, Tc;
        SIMD_FLOAT T1S, T2g, T10, TL, TM, Tg, T1T, T1f, Tb, T1b, Te, T1a, Ta,
            T1R, TK;
        SIMD_FLOAT Tf, T1d, T1e, T1, T2, TD, TE, T4, T5, T1u, T1v, TO, T11, Th,
            Tx;
        SIMD_FLOAT T2h, T1U, T2I, T1g, T12, T2V, TP, T1E, Ty, T2w, Ti, T29, T22,
            T1V, T2q;
        SIMD_FLOAT T2i;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TD  = ii[0];
        TE  = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T1u = ii[WS(is, 5)];
        T1v = ii[WS(is, 15)];
        {
            SIMD_FLOAT Tj, TQ, Tr, T1n, Tk, T1t, T3, T1Z, TF, TG, T6, T20, T1w,
                Tl, T1i;
            SIMD_FLOAT T1j, To, Tp, TT, TU, TR, Tm, T1M, T1k, T1m, Tq, T1O, TV,
                T8, T13;
            SIMD_FLOAT TS, Tz, Tn, T1N, T2j, T1l, T2E, T1o, T2F, TA, Ts, T1P,
                T2k, T14, TW;
            SIMD_FLOAT T9, TI, TJ;
            Tj  = ri[WS(is, 8)];
            TQ  = ii[WS(is, 8)];
            Tr  = ri[WS(is, 7)];
            T1n = ii[WS(is, 7)];
            Tk  = ri[WS(is, 13)];
            T1t = T1 - T2;
            T3  = T1 + T2;
            T1Z = TD + TE;
            TF  = TD - TE;
            TG  = T4 - T5;
            T6  = T4 + T5;
            T20 = T1u + T1v;
            T1w = T1u - T1v;
            Tl  = ri[WS(is, 3)];
            T1i = ii[WS(is, 13)];
            T1j = ii[WS(is, 3)];
            To  = ri[WS(is, 12)];
            Tp  = ri[WS(is, 2)];
            TT  = ii[WS(is, 12)];
            TU  = ii[WS(is, 2)];
            Tb  = ri[WS(is, 9)];
            TZ  = TG + TF;
            TH  = TF - TG;
            Tv  = T3 + T6;
            T7  = T3 - T6;
            T21 = T1Z - T20;
            T2p = T1Z + T20;
            T1x = T1t + T1w;
            T2N = T1t - T1w;
            TR  = Tk - Tl;
            Tm  = Tk + Tl;
            T1M = T1i + T1j;
            T1k = T1i - T1j;
            T1m = To - Tp;
            Tq  = To + Tp;
            T1O = TT + TU;
            TV  = TT - TU;
            T1b = ii[WS(is, 9)];
            Td  = ri[WS(is, 6)];
            TN  = ii[WS(is, 6)];
            T8  = ri[WS(is, 4)];
            T13 = TR + TQ;
            TS  = TQ - TR;
            Tz  = Tj + Tm;
            Tn  = Tj - Tm;
            T1N = TQ - T1M;
            T2j = TQ + T1M;
            T1l = Tj + T1k;
            T2E = Tj - T1k;
            T1o = T1m - T1n;
            T2F = T1m + T1n;
            TA  = Tq + Tr;
            Ts  = Tq - Tr;
            T1P = T1O - T1n;
            T2k = T1O + T1n;
            T14 = TV - Tr;
            TW  = Tr + TV;
            T9  = ri[WS(is, 14)];
            TI  = ii[WS(is, 4)];
            TJ  = ii[WS(is, 14)];
            Te  = ri[WS(is, 1)];
            T1z = T1l + T1o;
            T1p = T1l - T1o;
            T2G = T2E - T2F;
            T2P = T2E + T2F;
            TB  = Tz + TA;
            T2x = Tz - TA;
            T28 = Tn - Ts;
            Tt  = Tn + Ts;
            T23 = T1N + T1P;
            T1Q = T1N - T1P;
            T2l = T2j - T2k;
            T2r = T2j + T2k;
            T15 = T13 + T14;
            T2U = T13 - T14;
            T1F = TS - TW;
            TX  = TS + TW;
            T1a = T8 - T9;
            Ta  = T8 + T9;
            T1R = TI + TJ;
            TK  = TI - TJ;
            Tf  = ri[WS(is, 11)];
            T1d = ii[WS(is, 1)];
            T1e = ii[WS(is, 11)];
        }
        T1c = T1a + T1b;
        T2H = T1a - T1b;
        Tw  = Ta + Tb;
        Tc  = Ta - Tb;
        T1S = T1R - T1b;
        T2g = T1R + T1b;
        T10 = Tb + TK;
        TL  = TK - Tb;
        TM  = Te - Tf;
        Tg  = Te + Tf;
        T1T = T1d + T1e;
        T1f = T1d - T1e;
        TO  = TM + TN;
        T11 = TM - TN;
        Th  = Td - Tg;
        Tx  = Td + Tg;
        T2h = TN + T1T;
        T1U = TN - T1T;
        T2I = Td + T1f;
        T1g = T1f - Td;
        T12 = T10 + T11;
        T2V = T10 - T11;
        TP  = TL - TO;
        T1E = TL + TO;
        Ty  = Tw + Tx;
        T2w = Tw - Tx;
        Ti  = Tc + Th;
        T29 = Tc - Th;
        T22 = T1S + T1U;
        T1V = T1S - T1U;
        T2q = T2g + T2h;
        T2i = T2g - T2h;
        {
            SIMD_FLOAT T1y, T1h, T2O, T2J, T2W, T2Y, T2C, T16, T1G, T1I, T18,
                TY, T2y, T2A, T2e;
            SIMD_FLOAT TC, T2a, T2c, T1K, Tu, T1W, T1Y, T26, T24, T2m, T2o, T2u,
                T2s, T1q, T1s;
            T1y = T1c + T1g;
            T1h = T1c - T1g;
            T2O = T2H - T2I;
            T2J = T2H + T2I;
            T2W = SIMD_FNMADD(KP618033988, T2V, T2U);
            T2Y = SIMD_FMADD(KP618033988, T2U, T2V);
            T2C = T12 - T15;
            T16 = T12 + T15;
            T1G = SIMD_FMADD(KP618033988, T1F, T1E);
            T1I = SIMD_FNMADD(KP618033988, T1E, T1F);
            T18 = TP - TX;
            TY  = TP + TX;
            T2y = SIMD_FMADD(KP618033988, T2x, T2w);
            T2A = SIMD_FNMADD(KP618033988, T2w, T2x);
            T2e = Ty - TB;
            TC  = Ty + TB;
            T2a = SIMD_FNMADD(KP618033988, T29, T28);
            T2c = SIMD_FMADD(KP618033988, T28, T29);
            T1K = Ti - Tt;
            Tu  = Ti + Tt;
            T1W = SIMD_FNMADD(KP618033988, T1V, T1Q);
            T1Y = SIMD_FMADD(KP618033988, T1Q, T1V);
            T26 = T22 - T23;
            T24 = T22 + T23;
            T2m = SIMD_FMADD(KP618033988, T2l, T2i);
            T2o = SIMD_FNMADD(KP618033988, T2i, T2l);
            T2u = T2q - T2r;
            T2s = T2q + T2r;
            T1q = SIMD_FMADD(KP618033988, T1p, T1h);
            T1s = SIMD_FNMADD(KP618033988, T1h, T1p);
            {
                SIMD_FLOAT T1C, T1A, T2K, T2M, T2S, T2Q, T2B, T17, T2d, T1J,
                    T25, T2t, T1B, T2R, T2L;
                SIMD_FLOAT T2D, T1r, T19, T2n, T2f, T1X, T1L, T2b, T27, T2z,
                    T2v, T1H, T1D, T2X, T2T;
                T1C            = T1y - T1z;
                T1A            = T1y + T1z;
                T2K            = SIMD_FNMADD(KP618033988, T2J, T2G);
                T2M            = SIMD_FMADD(KP618033988, T2G, T2J);
                T2S            = T2O - T2P;
                T2Q            = T2O + T2P;
                io[WS(os, 15)] = TZ + T16;
                T2B            = SIMD_FNMADD(KP250000000, T16, TZ);
                io[WS(os, 5)]  = TH + TY;
                T17            = SIMD_FNMADD(KP250000000, TY, TH);
                ro[0]          = Tv + TC;
                T2d            = SIMD_FNMADD(KP250000000, TC, Tv);
                ro[WS(os, 10)] = T7 + Tu;
                T1J            = SIMD_FNMADD(KP250000000, Tu, T7);
                io[WS(os, 10)] = T21 + T24;
                T25            = SIMD_FNMADD(KP250000000, T24, T21);
                io[0]          = T2p + T2s;
                T2t            = SIMD_FNMADD(KP250000000, T2s, T2p);
                ro[WS(os, 5)]  = T1x + T1A;
                T1B            = SIMD_FNMADD(KP250000000, T1A, T1x);
                ro[WS(os, 15)] = T2N + T2Q;
                T2R            = SIMD_FNMADD(KP250000000, T2Q, T2N);
                T2L            = SIMD_FMADD(KP559016994, T2C, T2B);
                T2D            = SIMD_FNMADD(KP559016994, T2C, T2B);
                T1r            = SIMD_FNMADD(KP559016994, T18, T17);
                T19            = SIMD_FMADD(KP559016994, T18, T17);
                T2n            = SIMD_FNMADD(KP559016994, T2e, T2d);
                T2f            = SIMD_FMADD(KP559016994, T2e, T2d);
                T1X            = SIMD_FMADD(KP559016994, T1K, T1J);
                T1L            = SIMD_FNMADD(KP559016994, T1K, T1J);
                T2b            = SIMD_FMADD(KP559016994, T26, T25);
                T27            = SIMD_FNMADD(KP559016994, T26, T25);
                T2z            = SIMD_FNMADD(KP559016994, T2u, T2t);
                T2v            = SIMD_FMADD(KP559016994, T2u, T2t);
                T1H            = SIMD_FNMADD(KP559016994, T1C, T1B);
                T1D            = SIMD_FMADD(KP559016994, T1C, T1B);
                T2X            = SIMD_FMADD(KP559016994, T2S, T2R);
                T2T            = SIMD_FNMADD(KP559016994, T2S, T2R);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2K, T2D);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2K, T2D);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2M, T2L);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2M, T2L);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1q, T19);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1q, T19);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1s, T1r);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1s, T1r);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T2m, T2f);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2m, T2f);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2o, T2n);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2o, T2n);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T1W, T1L);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T1W, T1L);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T1Y, T1X);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T1Y, T1X);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2a, T27);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2a, T27);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2c, T2b);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2c, T2b);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2y, T2v);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2y, T2v);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2A, T2z);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2A, T2z);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1G, T1D);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1G, T1D);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1I, T1H);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1I, T1H);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T2W, T2T);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T2W, T2T);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T2Y, T2X);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T2Y, T2X);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 17>
{
    static constexpr long_t flops           = 268;
    static constexpr long_t operations      = 196;
    static constexpr long_t memory_accesses = 74;
    static constexpr long_t stack_vars      = 134;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 17 -name c2cf
 * -standalone */

/*
 * This function contains 196 FP additions, 72 FP multiplications,
 * (or, 124 additions, 0 multiplications, 72 fused multiply/add),
 * 134 stack variables, 4 constants, and 74 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 17>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T13, TJ, Tx, T7, T27, T2v, T1C, T2T, T1E, T1u, T2M, T2V, TD,
            T2D, T2e;
        SIMD_FLOAT Tv, T29, T1V, T2r, T2x, T19, T30, T1K, T11, Ty, Tc, T2N, T1g,
            T2m, T1X;
        SIMD_FLOAT T14, TN, T15, TS, Tz, Tj, T20, T2n, T1l, T2O, T16, T31, TT,
            T1J, TA;
        SIMD_FLOAT T2C, Tk, T2f, T28, T21, T2w, T2o;
        {
            SIMD_FLOAT T1h, Tf, T1Y, TQ, TR, Ti, T1Z, T1k, T1, T2, TF, TG, T4,
                T5, T1z;
            SIMD_FLOAT T1A, Tl, TU, Tt, T1s, Tm, T1y, T3, T25, TH, TI, T6, T26,
                T1B, Tn;
            SIMD_FLOAT T1n, T1o, Tq, Tr, TX, TY;
            T1  = ri[0];
            T2  = ri[WS(is, 10)];
            TF  = ii[0];
            TG  = ii[WS(is, 10)];
            T4  = ri[WS(is, 5)];
            T5  = ri[WS(is, 15)];
            T1z = ii[WS(is, 5)];
            T1A = ii[WS(is, 15)];
            Tl  = ri[WS(is, 8)];
            TU  = ii[WS(is, 8)];
            Tt  = ri[WS(is, 7)];
            T1s = ii[WS(is, 7)];
            Tm  = ri[WS(is, 13)];
            T1y = T1 - T2;
            T3  = T1 + T2;
            T25 = TF + TG;
            TH  = TF - TG;
            TI  = T4 - T5;
            T6  = T4 + T5;
            T26 = T1z + T1A;
            T1B = T1z - T1A;
            Tn  = ri[WS(is, 3)];
            T1n = ii[WS(is, 13)];
            T1o = ii[WS(is, 3)];
            Tq  = ri[WS(is, 12)];
            Tr  = ri[WS(is, 2)];
            TX  = ii[WS(is, 12)];
            TY  = ii[WS(is, 2)];
            {
                SIMD_FLOAT Tb, T1f, T1e, Ta, Td, Te, TO, T1W, TM, TP, Tg, Th,
                    T1i, T1j, TK;
                SIMD_FLOAT T17, TW, TB, Tp, T1S, T2p, T1q, T2K, T1t, T2L, TC,
                    Tu, T1U, T2q, T18;
                SIMD_FLOAT T10, TL, TV, To, T1R, T1p, T1r, Ts, T1T, TZ, T8, T9;
                Tb  = ri[WS(is, 9)];
                T13 = TI + TH;
                TJ  = TH - TI;
                Tx  = T3 + T6;
                T7  = T3 - T6;
                T27 = T25 - T26;
                T2v = T25 + T26;
                T1C = T1y + T1B;
                T2T = T1y - T1B;
                TV  = Tm - Tn;
                To  = Tm + Tn;
                T1R = T1n + T1o;
                T1p = T1n - T1o;
                T1r = Tq - Tr;
                Ts  = Tq + Tr;
                T1T = TX + TY;
                TZ  = TX - TY;
                T1f = ii[WS(is, 9)];
                T8  = ri[WS(is, 4)];
                T9  = ri[WS(is, 14)];
                TK  = ii[WS(is, 4)];
                T17 = TV + TU;
                TW  = TU - TV;
                TB  = Tl + To;
                Tp  = Tl - To;
                T1S = TU - T1R;
                T2p = TU + T1R;
                T1q = Tl + T1p;
                T2K = Tl - T1p;
                T1t = T1r - T1s;
                T2L = T1r + T1s;
                TC  = Ts + Tt;
                Tu  = Ts - Tt;
                T1U = T1T - T1s;
                T2q = T1T + T1s;
                T18 = TZ - Tt;
                T10 = Tt + TZ;
                T1e = T8 - T9;
                Ta  = T8 + T9;
                TL  = ii[WS(is, 14)];
                Td  = ri[WS(is, 16)];
                T1E = T1q + T1t;
                T1u = T1q - T1t;
                T2M = T2K - T2L;
                T2V = T2K + T2L;
                TD  = TB + TC;
                T2D = TB - TC;
                T2e = Tp - Tu;
                Tv  = Tp + Tu;
                T29 = T1S + T1U;
                T1V = T1S - T1U;
                T2r = T2p - T2q;
                T2x = T2p + T2q;
                T19 = T17 + T18;
                T30 = T17 - T18;
                T1K = TW - T10;
                T11 = TW + T10;
                Te  = ri[WS(is, 6)];
                TO  = ii[WS(is, 16)];
                T1W = TK + TL;
                TM  = TK - TL;
                TP  = ii[WS(is, 6)];
                Tg  = ri[WS(is, 1)];
                Th  = ri[WS(is, 11)];
                T1i = ii[WS(is, 1)];
                T1j = ii[WS(is, 11)];
                Ty  = Ta + Tb;
                Tc  = Ta - Tb;
                T2N = T1e - T1f;
                T1g = T1e + T1f;
                T1h = Td - Te;
                Tf  = Td + Te;
                T2m = T1W + T1f;
                T1X = T1W - T1f;
                T14 = Tb + TM;
                TN  = TM - Tb;
                T1Y = TO + TP;
                TQ  = TO - TP;
                TR  = Tg - Th;
                Ti  = Tg + Th;
                T1Z = T1i + T1j;
                T1k = T1i - T1j;
            }
            T15 = TR + TQ;
            TS  = TQ - TR;
            Tz  = Tf + Ti;
            Tj  = Tf - Ti;
            T20 = T1Y - T1Z;
            T2n = T1Y + T1Z;
            T1l = T1h + T1k;
            T2O = T1h - T1k;
        }
        T16 = T14 + T15;
        T31 = T14 - T15;
        TT  = TN + TS;
        T1J = TN - TS;
        TA  = Ty + Tz;
        T2C = Ty - Tz;
        Tk  = Tc + Tj;
        T2f = Tc - Tj;
        T28 = T1X + T20;
        T21 = T1X - T20;
        T2w = T2m + T2n;
        T2o = T2m - T2n;
        {
            SIMD_FLOAT T1D, T1m, T2U, T2P, T32, T34, T2I, T1a, T1L, T1N, T1c,
                T12, T2E, T2G, T2k;
            SIMD_FLOAT TE, T2g, T2i, T1P, Tw, T22, T24, T2c, T2a, T2s, T2u, T2A,
                T2y, T1v, T1x;
            T1D = T1g + T1l;
            T1m = T1g - T1l;
            T2U = T2N + T2O;
            T2P = T2N - T2O;
            T32 = SIMD_FNMADD(KP618033988, T31, T30);
            T34 = SIMD_FMADD(KP618033988, T30, T31);
            T2I = T16 - T19;
            T1a = T16 + T19;
            T1L = SIMD_FMADD(KP618033988, T1K, T1J);
            T1N = SIMD_FNMADD(KP618033988, T1J, T1K);
            T1c = TT - T11;
            T12 = TT + T11;
            T2E = SIMD_FMADD(KP618033988, T2D, T2C);
            T2G = SIMD_FNMADD(KP618033988, T2C, T2D);
            T2k = TA - TD;
            TE  = TA + TD;
            T2g = SIMD_FNMADD(KP618033988, T2f, T2e);
            T2i = SIMD_FMADD(KP618033988, T2e, T2f);
            T1P = Tk - Tv;
            Tw  = Tk + Tv;
            T22 = SIMD_FNMADD(KP618033988, T21, T1V);
            T24 = SIMD_FMADD(KP618033988, T1V, T21);
            T2c = T28 - T29;
            T2a = T28 + T29;
            T2s = SIMD_FMADD(KP618033988, T2r, T2o);
            T2u = SIMD_FNMADD(KP618033988, T2o, T2r);
            T2A = T2w - T2x;
            T2y = T2w + T2x;
            T1v = SIMD_FMADD(KP618033988, T1u, T1m);
            T1x = SIMD_FNMADD(KP618033988, T1m, T1u);
            {
                SIMD_FLOAT T1H, T1F, T2Q, T2S, T2Y, T2W, T2H, T1b, T2j, T1O,
                    T2b, T2z, T1G, T2X, T2R;
                SIMD_FLOAT T2J, T1w, T1d, T2t, T2l, T23, T1Q, T2h, T2d, T2F,
                    T2B, T1M, T1I, T33, T2Z;
                T1H            = T1D - T1E;
                T1F            = T1D + T1E;
                T2Q            = SIMD_FNMADD(KP618033988, T2P, T2M);
                T2S            = SIMD_FMADD(KP618033988, T2M, T2P);
                T2Y            = T2U - T2V;
                T2W            = T2U + T2V;
                io[WS(os, 15)] = T13 + T1a;
                T2H            = SIMD_FNMADD(KP250000000, T1a, T13);
                io[WS(os, 5)]  = TJ + T12;
                T1b            = SIMD_FNMADD(KP250000000, T12, TJ);
                ro[0]          = Tx + TE;
                T2j            = SIMD_FNMADD(KP250000000, TE, Tx);
                ro[WS(os, 10)] = T7 + Tw;
                T1O            = SIMD_FNMADD(KP250000000, Tw, T7);
                io[WS(os, 10)] = T27 + T2a;
                T2b            = SIMD_FNMADD(KP250000000, T2a, T27);
                io[0]          = T2v + T2y;
                T2z            = SIMD_FNMADD(KP250000000, T2y, T2v);
                ro[WS(os, 5)]  = T1C + T1F;
                T1G            = SIMD_FNMADD(KP250000000, T1F, T1C);
                ro[WS(os, 15)] = T2T + T2W;
                T2X            = SIMD_FNMADD(KP250000000, T2W, T2T);
                T2R            = SIMD_FMADD(KP559016994, T2I, T2H);
                T2J            = SIMD_FNMADD(KP559016994, T2I, T2H);
                T1w            = SIMD_FNMADD(KP559016994, T1c, T1b);
                T1d            = SIMD_FMADD(KP559016994, T1c, T1b);
                T2t            = SIMD_FNMADD(KP559016994, T2k, T2j);
                T2l            = SIMD_FMADD(KP559016994, T2k, T2j);
                T23            = SIMD_FMADD(KP559016994, T1P, T1O);
                T1Q            = SIMD_FNMADD(KP559016994, T1P, T1O);
                T2h            = SIMD_FMADD(KP559016994, T2c, T2b);
                T2d            = SIMD_FNMADD(KP559016994, T2c, T2b);
                T2F            = SIMD_FNMADD(KP559016994, T2A, T2z);
                T2B            = SIMD_FMADD(KP559016994, T2A, T2z);
                T1M            = SIMD_FNMADD(KP559016994, T1H, T1G);
                T1I            = SIMD_FMADD(KP559016994, T1H, T1G);
                T33            = SIMD_FMADD(KP559016994, T2Y, T2X);
                T2Z            = SIMD_FNMADD(KP559016994, T2Y, T2X);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T2Q, T2J);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T2Q, T2J);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T2S, T2R);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T2S, T2R);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T1v, T1d);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T1v, T1d);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T1x, T1w);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T1x, T1w);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T2s, T2l);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2s, T2l);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2u, T2t);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2u, T2t);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T22, T1Q);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T22, T1Q);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T24, T23);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T24, T23);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2g, T2d);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2g, T2d);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2i, T2h);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2i, T2h);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T2E, T2B);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T2E, T2B);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T2G, T2F);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T2G, T2F);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T1L, T1I);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T1L, T1I);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T1N, T1M);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T1N, T1M);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T32, T2Z);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T32, T2Z);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T34, T33);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T34, T33);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 18>
{
    static constexpr long_t flops           = 272;
    static constexpr long_t operations      = 200;
    static constexpr long_t memory_accesses = 76;
    static constexpr long_t stack_vars      = 140;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 18 -name c2cf
 * -standalone */

/*
 * This function contains 200 FP additions, 72 FP multiplications,
 * (or, 128 additions, 0 multiplications, 72 fused multiply/add),
 * 140 stack variables, 4 constants, and 76 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 18>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T16, TL, Tz, T7, T2Z, T2B, T25, T1H, T1c, T1O, T2d, T14, TF,
            T37, T2I;
        SIMD_FLOAT Tx, T31, T2V, T2p, T2D, T27, T21, T1q, T1J, TA, Tc, T2r, T2Q,
            T17, TP;
        SIMD_FLOAT T1t, T1W, T18, TU, TB, Tj, T2R, T2u, T1X, T1y, T1u, Tf, T2s,
            TS, TT;
        SIMD_FLOAT Ti, T2t, T1x, T1, T2, TH, TI, T4, T5, T1E, T1F, T19, T1P, TV,
            T2c;
        SIMD_FLOAT TC, T36, Tk, T2J, T30, T2S, T2C, T2v;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TH  = ii[0];
        TI  = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T1E = ii[WS(is, 5)];
        T1F = ii[WS(is, 15)];
        {
            SIMD_FLOAT Tt, T1l, Ts, T2m, T11, Tu, T1m, T1n, TD, Tp, T1a, TY,
                T2T, T2l, T1k;
            SIMD_FLOAT T1Z, Tl, TW, TX, To, T2k, T1j, Tm, Tn, T1h, T1D, T3, T2z,
                TJ, TK;
            SIMD_FLOAT T6, T2A, T1G, T1i, Tq, Tr, TZ, T10;
            Tl  = ri[WS(is, 8)];
            TW  = ii[WS(is, 8)];
            Tm  = ri[WS(is, 13)];
            Tn  = ri[WS(is, 3)];
            T1h = ii[WS(is, 13)];
            T1D = T1 - T2;
            T3  = T1 + T2;
            T2z = TH + TI;
            TJ  = TH - TI;
            TK  = T4 - T5;
            T6  = T4 + T5;
            T2A = T1E + T1F;
            T1G = T1E - T1F;
            T1i = ii[WS(is, 3)];
            Tq  = ri[WS(is, 12)];
            TX  = Tm - Tn;
            To  = Tm + Tn;
            Tr  = ri[WS(is, 2)];
            TZ  = ii[WS(is, 12)];
            T10 = ii[WS(is, 2)];
            Tt  = ri[WS(is, 17)];
            T16 = TK + TJ;
            TL  = TJ - TK;
            Tz  = T3 + T6;
            T7  = T3 - T6;
            T2Z = T2z + T2A;
            T2B = T2z - T2A;
            T25 = T1D + T1G;
            T1H = T1D - T1G;
            T2k = T1h + T1i;
            T1j = T1h - T1i;
            T1l = Tq - Tr;
            Ts  = Tq + Tr;
            T2m = TZ + T10;
            T11 = TZ - T10;
            Tu  = ri[WS(is, 7)];
            T1m = ii[WS(is, 17)];
            T1n = ii[WS(is, 7)];
            TD  = Tl + To;
            Tp  = Tl - To;
            T1a = TX + TW;
            TY  = TW - TX;
            T2T = TW + T2k;
            T2l = TW - T2k;
            T1k = Tl - T1j;
            T1Z = Tl + T1j;
            {
                SIMD_FLOAT Tb, T1s, TQ, T1r, Ta, T2q, TO, TR, Tg, Th, T1v, T1w,
                    T12, Tv, T2n;
                SIMD_FLOAT T1o, T8, T9, TM, TN, Td, Te, T1b, T13, TE, Tw, T2U,
                    T2o, T20, T1p;
                Tb  = ri[WS(is, 9)];
                T12 = Tt - Tu;
                Tv  = Tt + Tu;
                T2n = T1m + T1n;
                T1o = T1m - T1n;
                T1s = ii[WS(is, 9)];
                T8  = ri[WS(is, 4)];
                T9  = ri[WS(is, 14)];
                TM  = ii[WS(is, 4)];
                TN  = ii[WS(is, 14)];
                Td  = ri[WS(is, 16)];
                Te  = ri[WS(is, 6)];
                TQ  = ii[WS(is, 16)];
                T1b = T12 + T11;
                T13 = T11 - T12;
                TE  = Ts + Tv;
                Tw  = Ts - Tv;
                T2U = T2m + T2n;
                T2o = T2m - T2n;
                T20 = T1l + T1o;
                T1p = T1l - T1o;
                T1r = T8 - T9;
                Ta  = T8 + T9;
                T2q = TM + TN;
                TO  = TM - TN;
                T1u = Td - Te;
                Tf  = Td + Te;
                T1c = T1a + T1b;
                T1O = T1a - T1b;
                T2d = TY - T13;
                T14 = TY + T13;
                TF  = TD + TE;
                T37 = TD - TE;
                T2I = Tp - Tw;
                Tx  = Tp + Tw;
                T31 = T2T + T2U;
                T2V = T2T - T2U;
                T2p = T2l - T2o;
                T2D = T2l + T2o;
                T27 = T1Z + T20;
                T21 = T1Z - T20;
                T1q = T1k - T1p;
                T1J = T1k + T1p;
                TR  = ii[WS(is, 6)];
                Tg  = ri[WS(is, 1)];
                Th  = ri[WS(is, 11)];
                T1v = ii[WS(is, 1)];
                T1w = ii[WS(is, 11)];
                TA  = Ta + Tb;
                Tc  = Ta - Tb;
                T2r = T2q - T1s;
                T2Q = T2q + T1s;
                T17 = Tb + TO;
                TP  = TO - Tb;
                T1t = T1r - T1s;
                T1W = T1r + T1s;
                T2s = TQ + TR;
                TS  = TQ - TR;
                TT  = Tg - Th;
                Ti  = Tg + Th;
                T2t = T1v + T1w;
                T1x = T1v - T1w;
            }
        }
        T18 = TT + TS;
        TU  = TS - TT;
        TB  = Tf + Ti;
        Tj  = Tf - Ti;
        T2R = T2s + T2t;
        T2u = T2s - T2t;
        T1X = T1u + T1x;
        T1y = T1u - T1x;
        T19 = T17 + T18;
        T1P = T17 - T18;
        TV  = TP + TU;
        T2c = TP - TU;
        TC  = TA + TB;
        T36 = TA - TB;
        Tk  = Tc + Tj;
        T2J = Tc - Tj;
        T30 = T2Q + T2R;
        T2S = T2Q - T2R;
        T2C = T2r + T2u;
        T2v = T2r - T2u;
        {
            SIMD_FLOAT T26, T1Y, T1I, T1z, T1Q, T1S, T1f, T1d, T2e, T2g, T1U,
                T15, T38, T3a, T2O;
            SIMD_FLOAT TG, T2K, T2M, T2i, Ty, T2W, T2Y, T34, T32, T2w, T2y, T2G,
                T2E, T22, T24;
            T26 = T1W + T1X;
            T1Y = T1W - T1X;
            T1I = T1t + T1y;
            T1z = T1t - T1y;
            T1Q = SIMD_FNMADD(KP618033988, T1P, T1O);
            T1S = SIMD_FMADD(KP618033988, T1O, T1P);
            T1f = T19 - T1c;
            T1d = T19 + T1c;
            T2e = SIMD_FMADD(KP618033988, T2d, T2c);
            T2g = SIMD_FNMADD(KP618033988, T2c, T2d);
            T1U = TV - T14;
            T15 = TV + T14;
            T38 = SIMD_FMADD(KP618033988, T37, T36);
            T3a = SIMD_FNMADD(KP618033988, T36, T37);
            T2O = TC - TF;
            TG  = TC + TF;
            T2K = SIMD_FNMADD(KP618033988, T2J, T2I);
            T2M = SIMD_FMADD(KP618033988, T2I, T2J);
            T2i = Tk - Tx;
            Ty  = Tk + Tx;
            T2W = SIMD_FMADD(KP618033988, T2V, T2S);
            T2Y = SIMD_FNMADD(KP618033988, T2S, T2V);
            T34 = T30 - T31;
            T32 = T30 + T31;
            T2w = SIMD_FNMADD(KP618033988, T2v, T2p);
            T2y = SIMD_FMADD(KP618033988, T2p, T2v);
            T2G = T2C - T2D;
            T2E = T2C + T2D;
            T22 = SIMD_FMADD(KP618033988, T21, T1Y);
            T24 = SIMD_FNMADD(KP618033988, T1Y, T21);
            {
                SIMD_FLOAT T2a, T28, T1A, T1C, T1M, T1K, T1e, T1T, T2N, T2h,
                    T33, T2F, T29, T1L, T1B;
                SIMD_FLOAT T1g, T23, T1V, T2X, T2P, T2x, T2j, T39, T35, T2L,
                    T2H, T2f, T2b, T1R, T1N;
                T2a            = T26 - T27;
                T28            = T26 + T27;
                T1A            = SIMD_FNMADD(KP618033988, T1z, T1q);
                T1C            = SIMD_FMADD(KP618033988, T1q, T1z);
                T1M            = T1I - T1J;
                T1K            = T1I + T1J;
                io[WS(os, 15)] = T16 + T1d;
                T1e            = SIMD_FNMADD(KP250000000, T1d, T16);
                io[WS(os, 5)]  = TL + T15;
                T1T            = SIMD_FNMADD(KP250000000, T15, TL);
                ro[0]          = Tz + TG;
                T2N            = SIMD_FNMADD(KP250000000, TG, Tz);
                ro[WS(os, 10)] = T7 + Ty;
                T2h            = SIMD_FNMADD(KP250000000, Ty, T7);
                io[0]          = T2Z + T32;
                T33            = SIMD_FNMADD(KP250000000, T32, T2Z);
                io[WS(os, 10)] = T2B + T2E;
                T2F            = SIMD_FNMADD(KP250000000, T2E, T2B);
                ro[WS(os, 5)]  = T25 + T28;
                T29            = SIMD_FNMADD(KP250000000, T28, T25);
                ro[WS(os, 15)] = T1H + T1K;
                T1L            = SIMD_FNMADD(KP250000000, T1K, T1H);
                T1B            = SIMD_FMADD(KP559016994, T1f, T1e);
                T1g            = SIMD_FNMADD(KP559016994, T1f, T1e);
                T23            = SIMD_FNMADD(KP559016994, T1U, T1T);
                T1V            = SIMD_FMADD(KP559016994, T1U, T1T);
                T2X            = SIMD_FNMADD(KP559016994, T2O, T2N);
                T2P            = SIMD_FMADD(KP559016994, T2O, T2N);
                T2x            = SIMD_FMADD(KP559016994, T2i, T2h);
                T2j            = SIMD_FNMADD(KP559016994, T2i, T2h);
                T39            = SIMD_FNMADD(KP559016994, T34, T33);
                T35            = SIMD_FMADD(KP559016994, T34, T33);
                T2L            = SIMD_FMADD(KP559016994, T2G, T2F);
                T2H            = SIMD_FNMADD(KP559016994, T2G, T2F);
                T2f            = SIMD_FNMADD(KP559016994, T2a, T29);
                T2b            = SIMD_FMADD(KP559016994, T2a, T29);
                T1R            = SIMD_FMADD(KP559016994, T1M, T1L);
                T1N            = SIMD_FNMADD(KP559016994, T1M, T1L);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1A, T1g);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1A, T1g);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1C, T1B);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1C, T1B);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T22, T1V);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T22, T1V);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T24, T23);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T24, T23);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T2W, T2P);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T2W, T2P);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T2Y, T2X);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T2Y, T2X);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T2w, T2j);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2w, T2j);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2y, T2x);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T2y, T2x);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T38, T35);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T38, T35);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T3a, T39);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T3a, T39);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2K, T2H);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2K, T2H);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2M, T2L);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2M, T2L);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2e, T2b);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2e, T2b);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T2g, T2f);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T2g, T2f);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1Q, T1N);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1Q, T1N);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T1S, T1R);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1S, T1R);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 19>
{
    static constexpr long_t flops           = 276;
    static constexpr long_t operations      = 204;
    static constexpr long_t memory_accesses = 78;
    static constexpr long_t stack_vars      = 146;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 19 -name c2cf
 * -standalone */

/*
 * This function contains 204 FP additions, 72 FP multiplications,
 * (or, 132 additions, 0 multiplications, 72 fused multiply/add),
 * 146 stack variables, 4 constants, and 78 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 19>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1a, TN, TB, T7, T35, T2H, T2a, T1M, T1d, T1U, T2h, TX, TE,
            T3c, T2P;
        SIMD_FLOAT Tk, T36, T2Y, T2B, T2I, T2b, T23, T1E, T1N, TF, Tr, T2r, T2Z,
            T1e, T12;
        SIMD_FLOAT T1p, T24, T1f, T17, TG, Ty, T30, T2u, T25, T1u, T1q, Tu, T2s,
            T15, T16;
        SIMD_FLOAT Tx, T2t, T1t, T1, T2, TJ, TK, T4, T5, T1J, T1K, T1g, T1T,
            T18, T2i;
        SIMD_FLOAT TH, T3d, Tz, T2O, T37, T31, T2J, T2v;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TJ  = ii[0];
        TK  = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T1J = ii[WS(is, 5)];
        T1K = ii[WS(is, 15)];
        {
            SIMD_FLOAT Tg, T1z, Tf, T2y, TU, Th, T1A, T1B, TC, Tc, T21, T1y,
                T2W, T2x, TR;
            SIMD_FLOAT T1b, Tb, T1x, T1w, Ta, T2w, TQ, T8, T9, TO, T1I, T3, T2F,
                TL, TM;
            SIMD_FLOAT T6, T2G, T1L, TP, Td, Te, TS, TT;
            Tb  = ri[WS(is, 9)];
            T1x = ii[WS(is, 9)];
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 14)];
            TO  = ii[WS(is, 4)];
            T1I = T1 - T2;
            T3  = T1 + T2;
            T2F = TJ + TK;
            TL  = TJ - TK;
            TM  = T4 - T5;
            T6  = T4 + T5;
            T2G = T1J + T1K;
            T1L = T1J - T1K;
            TP  = ii[WS(is, 14)];
            Td  = ri[WS(is, 16)];
            T1w = T8 - T9;
            Ta  = T8 + T9;
            Te  = ri[WS(is, 6)];
            TS  = ii[WS(is, 16)];
            TT  = ii[WS(is, 6)];
            Tg  = ri[WS(is, 1)];
            T1a = TM + TL;
            TN  = TL - TM;
            TB  = T3 + T6;
            T7  = T3 - T6;
            T35 = T2F + T2G;
            T2H = T2F - T2G;
            T2a = T1I + T1L;
            T1M = T1I - T1L;
            T2w = TO + TP;
            TQ  = TO - TP;
            T1z = Td - Te;
            Tf  = Td + Te;
            T2y = TS + TT;
            TU  = TS - TT;
            Th  = ri[WS(is, 11)];
            T1A = ii[WS(is, 1)];
            T1B = ii[WS(is, 11)];
            TC  = Ta + Tb;
            Tc  = Ta - Tb;
            T21 = T1w + T1x;
            T1y = T1w - T1x;
            T2W = T2w + T1x;
            T2x = T2w - T1x;
            TR  = TQ - Tb;
            T1b = Tb + TQ;
            {
                SIMD_FLOAT Ts, T1l, Tn, T2p, T10, T11, Tq, T2q, T1o, Tt, T13,
                    T14, Tv, Tw, T1r;
                SIMD_FLOAT T1s, Tl, TV, Ti, T2z, T1C, Tm, TY, TZ, To, Tp, T1m,
                    T1n, T1c, TW;
                SIMD_FLOAT TD, Tj, T2X, T2A, T22, T1D;
                Tl  = ri[WS(is, 8)];
                TV  = Tg - Th;
                Ti  = Tg + Th;
                T2z = T1A + T1B;
                T1C = T1A - T1B;
                Tm  = ri[WS(is, 18)];
                TY  = ii[WS(is, 8)];
                TZ  = ii[WS(is, 18)];
                To  = ri[WS(is, 13)];
                Tp  = ri[WS(is, 3)];
                T1m = ii[WS(is, 13)];
                T1n = ii[WS(is, 3)];
                Ts  = ri[WS(is, 12)];
                T1c = TV + TU;
                TW  = TU - TV;
                TD  = Tf + Ti;
                Tj  = Tf - Ti;
                T2X = T2y + T2z;
                T2A = T2y - T2z;
                T22 = T1z + T1C;
                T1D = T1z - T1C;
                T1l = Tl - Tm;
                Tn  = Tl + Tm;
                T2p = TY + TZ;
                T10 = TY - TZ;
                T11 = To - Tp;
                Tq  = To + Tp;
                T2q = T1m + T1n;
                T1o = T1m - T1n;
                T1d = T1b + T1c;
                T1U = T1b - T1c;
                T2h = TR - TW;
                TX  = TR + TW;
                TE  = TC + TD;
                T3c = TC - TD;
                T2P = Tc - Tj;
                Tk  = Tc + Tj;
                T36 = T2W + T2X;
                T2Y = T2W - T2X;
                T2B = T2x - T2A;
                T2I = T2x + T2A;
                T2b = T21 + T22;
                T23 = T21 - T22;
                T1E = T1y - T1D;
                T1N = T1y + T1D;
                Tt  = ri[WS(is, 2)];
                T13 = ii[WS(is, 12)];
                T14 = ii[WS(is, 2)];
                Tv  = ri[WS(is, 17)];
                Tw  = ri[WS(is, 7)];
                T1r = ii[WS(is, 17)];
                T1s = ii[WS(is, 7)];
                TF  = Tn + Tq;
                Tr  = Tn - Tq;
                T2r = T2p - T2q;
                T2Z = T2p + T2q;
                T1e = T11 + T10;
                T12 = T10 - T11;
                T1q = Ts - Tt;
                Tu  = Ts + Tt;
                T2s = T13 + T14;
                T15 = T13 - T14;
                T16 = Tv - Tw;
                Tx  = Tv + Tw;
                T2t = T1r + T1s;
                T1t = T1r - T1s;
                T1p = T1l - T1o;
                T24 = T1l + T1o;
            }
        }
        T1f = T16 + T15;
        T17 = T15 - T16;
        TG  = Tu + Tx;
        Ty  = Tu - Tx;
        T30 = T2s + T2t;
        T2u = T2s - T2t;
        T25 = T1q + T1t;
        T1u = T1q - T1t;
        T1g = T1e + T1f;
        T1T = T1e - T1f;
        T18 = T12 + T17;
        T2i = T12 - T17;
        TH  = TF + TG;
        T3d = TF - TG;
        Tz  = Tr + Ty;
        T2O = Tr - Ty;
        T37 = T2Z + T30;
        T31 = T2Z - T30;
        T2J = T2r + T2u;
        T2v = T2r - T2u;
        {
            SIMD_FLOAT T2c, T26, T1O, T1v, T1V, T1X, T1j, T1h, T2j, T2l, T1Z,
                T19, T3e, T3g, T2U;
            SIMD_FLOAT TI, T2Q, T2S, T2n, TA, T32, T34, T3a, T38, T2C, T2E, T2M,
                T2K, T27, T29;
            T2c = T24 + T25;
            T26 = T24 - T25;
            T1O = T1p + T1u;
            T1v = T1p - T1u;
            T1V = SIMD_FNMADD(KP618033988, T1U, T1T);
            T1X = SIMD_FMADD(KP618033988, T1T, T1U);
            T1j = T1d - T1g;
            T1h = T1d + T1g;
            T2j = SIMD_FMADD(KP618033988, T2i, T2h);
            T2l = SIMD_FNMADD(KP618033988, T2h, T2i);
            T1Z = TX - T18;
            T19 = TX + T18;
            T3e = SIMD_FMADD(KP618033988, T3d, T3c);
            T3g = SIMD_FNMADD(KP618033988, T3c, T3d);
            T2U = TE - TH;
            TI  = TE + TH;
            T2Q = SIMD_FNMADD(KP618033988, T2P, T2O);
            T2S = SIMD_FMADD(KP618033988, T2O, T2P);
            T2n = Tk - Tz;
            TA  = Tk + Tz;
            T32 = SIMD_FMADD(KP618033988, T31, T2Y);
            T34 = SIMD_FNMADD(KP618033988, T2Y, T31);
            T3a = T36 - T37;
            T38 = T36 + T37;
            T2C = SIMD_FNMADD(KP618033988, T2B, T2v);
            T2E = SIMD_FMADD(KP618033988, T2v, T2B);
            T2M = T2I - T2J;
            T2K = T2I + T2J;
            T27 = SIMD_FMADD(KP618033988, T26, T23);
            T29 = SIMD_FNMADD(KP618033988, T23, T26);
            {
                SIMD_FLOAT T2f, T2d, T1F, T1H, T1R, T1P, T1i, T1Y, T2T, T2m,
                    T39, T2L, T2e, T1Q, T1G;
                SIMD_FLOAT T1k, T28, T20, T33, T2V, T2D, T2o, T3f, T3b, T2R,
                    T2N, T2k, T2g, T1W, T1S;
                T2f            = T2b - T2c;
                T2d            = T2b + T2c;
                T1F            = SIMD_FNMADD(KP618033988, T1E, T1v);
                T1H            = SIMD_FMADD(KP618033988, T1v, T1E);
                T1R            = T1N - T1O;
                T1P            = T1N + T1O;
                io[WS(os, 15)] = T1a + T1h;
                T1i            = SIMD_FNMADD(KP250000000, T1h, T1a);
                io[WS(os, 5)]  = TN + T19;
                T1Y            = SIMD_FNMADD(KP250000000, T19, TN);
                ro[0]          = TB + TI;
                T2T            = SIMD_FNMADD(KP250000000, TI, TB);
                ro[WS(os, 10)] = T7 + TA;
                T2m            = SIMD_FNMADD(KP250000000, TA, T7);
                io[0]          = T35 + T38;
                T39            = SIMD_FNMADD(KP250000000, T38, T35);
                io[WS(os, 10)] = T2H + T2K;
                T2L            = SIMD_FNMADD(KP250000000, T2K, T2H);
                ro[WS(os, 5)]  = T2a + T2d;
                T2e            = SIMD_FNMADD(KP250000000, T2d, T2a);
                ro[WS(os, 15)] = T1M + T1P;
                T1Q            = SIMD_FNMADD(KP250000000, T1P, T1M);
                T1G            = SIMD_FMADD(KP559016994, T1j, T1i);
                T1k            = SIMD_FNMADD(KP559016994, T1j, T1i);
                T28            = SIMD_FNMADD(KP559016994, T1Z, T1Y);
                T20            = SIMD_FMADD(KP559016994, T1Z, T1Y);
                T33            = SIMD_FNMADD(KP559016994, T2U, T2T);
                T2V            = SIMD_FMADD(KP559016994, T2U, T2T);
                T2D            = SIMD_FMADD(KP559016994, T2n, T2m);
                T2o            = SIMD_FNMADD(KP559016994, T2n, T2m);
                T3f            = SIMD_FNMADD(KP559016994, T3a, T39);
                T3b            = SIMD_FMADD(KP559016994, T3a, T39);
                T2R            = SIMD_FMADD(KP559016994, T2M, T2L);
                T2N            = SIMD_FNMADD(KP559016994, T2M, T2L);
                T2k            = SIMD_FNMADD(KP559016994, T2f, T2e);
                T2g            = SIMD_FMADD(KP559016994, T2f, T2e);
                T1W            = SIMD_FMADD(KP559016994, T1R, T1Q);
                T1S            = SIMD_FNMADD(KP559016994, T1R, T1Q);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1F, T1k);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1F, T1k);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1H, T1G);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1H, T1G);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T27, T20);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T27, T20);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T29, T28);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T29, T28);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T32, T2V);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T32, T2V);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T34, T33);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T34, T33);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T2C, T2o);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2C, T2o);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2E, T2D);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T2E, T2D);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T3e, T3b);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T3e, T3b);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T3g, T3f);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T3g, T3f);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2Q, T2N);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2Q, T2N);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2S, T2R);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2S, T2R);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2j, T2g);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2j, T2g);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T2l, T2k);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T2l, T2k);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T1V, T1S);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T1V, T1S);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T1X, T1W);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T1X, T1W);
            }
        }
    }
}

template <>
struct c2cf_traits<20, 20>
{
    static constexpr long_t flops           = 280;
    static constexpr long_t operations      = 208;
    static constexpr long_t memory_accesses = 80;
    static constexpr long_t stack_vars      = 152;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 20 -first-k 20 -name c2cf
 * -standalone */

/*
 * This function contains 208 FP additions, 72 FP multiplications,
 * (or, 136 additions, 0 multiplications, 72 fused multiply/add),
 * 152 stack variables, 4 constants, and 80 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 20 && ProvidedElements == 20>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1d, TP, TD, T7, T3b, T2N, T2f, T1R, T1j, T1Y, T2n, T1b, TJ,
            T3j, T2U;
        SIMD_FLOAT TB, T3d, T37, T2A, T2P, T2h, T2b, T1y, T1T, TE, Te, T2D, T32,
            T1e, TU;
        SIMD_FLOAT T1D, T26, T1f, TZ, TF, Tl, T33, T2G, T27, T1I, T1E, Th, T2E,
            TX, TY;
        SIMD_FLOAT Tk, T2F, T1H, T1, T2, TL, TM, T4, T5, T1O, T1P, T1g, T1Z,
            T10, T2m;
        SIMD_FLOAT TG, T3i, Tm, T2V, T3c, T34, T2O, T2H;
        T1  = ri[0];
        T2  = ri[WS(is, 10)];
        TL  = ii[0];
        TM  = ii[WS(is, 10)];
        T4  = ri[WS(is, 5)];
        T5  = ri[WS(is, 15)];
        T1O = ii[WS(is, 5)];
        T1P = ii[WS(is, 15)];
        {
            SIMD_FLOAT T1o, Tp, T2u, T13, Tu, T14, Ts, T2v, T1r, Tv, T16, T17,
                Tx, Ty, T1u;
            SIMD_FLOAT T1v, Tq, T1N, T3, T2L, TN, TO, T6, T2M, T1Q, Tr, T1p,
                T1q, Tn, To;
            SIMD_FLOAT T11, T12, Tf, T1z, Ta, T2B, TS, TT, Td, T2C, T1C, Tg, TV,
                TW, Ti;
            SIMD_FLOAT Tj, T1F, T1G;
            Tn  = ri[WS(is, 8)];
            To  = ri[WS(is, 18)];
            T11 = ii[WS(is, 8)];
            T12 = ii[WS(is, 18)];
            Tq  = ri[WS(is, 13)];
            T1N = T1 - T2;
            T3  = T1 + T2;
            T2L = TL + TM;
            TN  = TL - TM;
            TO  = T4 - T5;
            T6  = T4 + T5;
            T2M = T1O + T1P;
            T1Q = T1O - T1P;
            T1o = Tn - To;
            Tp  = Tn + To;
            T2u = T11 + T12;
            T13 = T11 - T12;
            Tr  = ri[WS(is, 3)];
            T1p = ii[WS(is, 13)];
            T1q = ii[WS(is, 3)];
            Tu  = ri[WS(is, 12)];
            T1d = TO + TN;
            TP  = TN - TO;
            TD  = T3 + T6;
            T7  = T3 - T6;
            T3b = T2L + T2M;
            T2N = T2L - T2M;
            T2f = T1N + T1Q;
            T1R = T1N - T1Q;
            T14 = Tq - Tr;
            Ts  = Tq + Tr;
            T2v = T1p + T1q;
            T1r = T1p - T1q;
            Tv  = ri[WS(is, 2)];
            T16 = ii[WS(is, 12)];
            T17 = ii[WS(is, 2)];
            Tx  = ri[WS(is, 17)];
            Ty  = ri[WS(is, 7)];
            T1u = ii[WS(is, 17)];
            T1v = ii[WS(is, 7)];
            {
                SIMD_FLOAT T8, T1h, T15, TH, Tt, T35, T2w, T29, T1s, T1t, Tw,
                    T2x, T18, T19, Tz;
                SIMD_FLOAT T2y, T1w, T9, TQ, TR, Tb, Tc, T1A, T1B, T1i, T1a, TI,
                    TA, T36, T2z;
                SIMD_FLOAT T2a, T1x;
                T8  = ri[WS(is, 4)];
                T1h = T14 + T13;
                T15 = T13 - T14;
                TH  = Tp + Ts;
                Tt  = Tp - Ts;
                T35 = T2u + T2v;
                T2w = T2u - T2v;
                T29 = T1o + T1r;
                T1s = T1o - T1r;
                T1t = Tu - Tv;
                Tw  = Tu + Tv;
                T2x = T16 + T17;
                T18 = T16 - T17;
                T19 = Tx - Ty;
                Tz  = Tx + Ty;
                T2y = T1u + T1v;
                T1w = T1u - T1v;
                T9  = ri[WS(is, 14)];
                TQ  = ii[WS(is, 4)];
                TR  = ii[WS(is, 14)];
                Tb  = ri[WS(is, 9)];
                Tc  = ri[WS(is, 19)];
                T1A = ii[WS(is, 9)];
                T1B = ii[WS(is, 19)];
                Tf  = ri[WS(is, 16)];
                T1i = T19 + T18;
                T1a = T18 - T19;
                TI  = Tw + Tz;
                TA  = Tw - Tz;
                T36 = T2x + T2y;
                T2z = T2x - T2y;
                T2a = T1t + T1w;
                T1x = T1t - T1w;
                T1z = T8 - T9;
                Ta  = T8 + T9;
                T2B = TQ + TR;
                TS  = TQ - TR;
                TT  = Tb - Tc;
                Td  = Tb + Tc;
                T2C = T1A + T1B;
                T1C = T1A - T1B;
                T1j = T1h + T1i;
                T1Y = T1h - T1i;
                T2n = T15 - T1a;
                T1b = T15 + T1a;
                TJ  = TH + TI;
                T3j = TH - TI;
                T2U = Tt - TA;
                TB  = Tt + TA;
                T3d = T35 + T36;
                T37 = T35 - T36;
                T2A = T2w - T2z;
                T2P = T2w + T2z;
                T2h = T29 + T2a;
                T2b = T29 - T2a;
                T1y = T1s - T1x;
                T1T = T1s + T1x;
                Tg  = ri[WS(is, 6)];
                TV  = ii[WS(is, 16)];
                TW  = ii[WS(is, 6)];
                Ti  = ri[WS(is, 1)];
                Tj  = ri[WS(is, 11)];
                T1F = ii[WS(is, 1)];
                T1G = ii[WS(is, 11)];
            }
            TE  = Ta + Td;
            Te  = Ta - Td;
            T2D = T2B - T2C;
            T32 = T2B + T2C;
            T1e = TT + TS;
            TU  = TS - TT;
            T1E = Tf - Tg;
            Th  = Tf + Tg;
            T2E = TV + TW;
            TX  = TV - TW;
            TY  = Ti - Tj;
            Tk  = Ti + Tj;
            T2F = T1F + T1G;
            T1H = T1F - T1G;
            T1D = T1z - T1C;
            T26 = T1z + T1C;
        }
        T1f = TY + TX;
        TZ  = TX - TY;
        TF  = Th + Tk;
        Tl  = Th - Tk;
        T33 = T2E + T2F;
        T2G = T2E - T2F;
        T27 = T1E + T1H;
        T1I = T1E - T1H;
        T1g = T1e + T1f;
        T1Z = T1e - T1f;
        T10 = TU + TZ;
        T2m = TU - TZ;
        TG  = TE + TF;
        T3i = TE - TF;
        Tm  = Te + Tl;
        T2V = Te - Tl;
        T3c = T32 + T33;
        T34 = T32 - T33;
        T2O = T2D + T2G;
        T2H = T2D - T2G;
        {
            SIMD_FLOAT T2g, T28, T1S, T1J, T20, T22, T1m, T1k, T2o, T2q, T24,
                T1c, T3k, T3m, T30;
            SIMD_FLOAT TK, T2W, T2Y, T2s, TC, T38, T3a, T3g, T3e, T2I, T2K, T2S,
                T2Q, T2c, T2e;
            T2g = T26 + T27;
            T28 = T26 - T27;
            T1S = T1D + T1I;
            T1J = T1D - T1I;
            T20 = SIMD_FNMADD(KP618033988, T1Z, T1Y);
            T22 = SIMD_FMADD(KP618033988, T1Y, T1Z);
            T1m = T1g - T1j;
            T1k = T1g + T1j;
            T2o = SIMD_FMADD(KP618033988, T2n, T2m);
            T2q = SIMD_FNMADD(KP618033988, T2m, T2n);
            T24 = T10 - T1b;
            T1c = T10 + T1b;
            T3k = SIMD_FMADD(KP618033988, T3j, T3i);
            T3m = SIMD_FNMADD(KP618033988, T3i, T3j);
            T30 = TG - TJ;
            TK  = TG + TJ;
            T2W = SIMD_FNMADD(KP618033988, T2V, T2U);
            T2Y = SIMD_FMADD(KP618033988, T2U, T2V);
            T2s = Tm - TB;
            TC  = Tm + TB;
            T38 = SIMD_FMADD(KP618033988, T37, T34);
            T3a = SIMD_FNMADD(KP618033988, T34, T37);
            T3g = T3c - T3d;
            T3e = T3c + T3d;
            T2I = SIMD_FNMADD(KP618033988, T2H, T2A);
            T2K = SIMD_FMADD(KP618033988, T2A, T2H);
            T2S = T2O - T2P;
            T2Q = T2O + T2P;
            T2c = SIMD_FMADD(KP618033988, T2b, T28);
            T2e = SIMD_FNMADD(KP618033988, T28, T2b);
            {
                SIMD_FLOAT T2k, T2i, T1K, T1M, T1W, T1U, T1l, T23, T2Z, T2r,
                    T3f, T2R, T2j, T1V, T1L;
                SIMD_FLOAT T1n, T2d, T25, T39, T31, T2J, T2t, T3l, T3h, T2X,
                    T2T, T2p, T2l, T21, T1X;
                T2k            = T2g - T2h;
                T2i            = T2g + T2h;
                T1K            = SIMD_FNMADD(KP618033988, T1J, T1y);
                T1M            = SIMD_FMADD(KP618033988, T1y, T1J);
                T1W            = T1S - T1T;
                T1U            = T1S + T1T;
                io[WS(os, 15)] = T1d + T1k;
                T1l            = SIMD_FNMADD(KP250000000, T1k, T1d);
                io[WS(os, 5)]  = TP + T1c;
                T23            = SIMD_FNMADD(KP250000000, T1c, TP);
                ro[0]          = TD + TK;
                T2Z            = SIMD_FNMADD(KP250000000, TK, TD);
                ro[WS(os, 10)] = T7 + TC;
                T2r            = SIMD_FNMADD(KP250000000, TC, T7);
                io[0]          = T3b + T3e;
                T3f            = SIMD_FNMADD(KP250000000, T3e, T3b);
                io[WS(os, 10)] = T2N + T2Q;
                T2R            = SIMD_FNMADD(KP250000000, T2Q, T2N);
                ro[WS(os, 5)]  = T2f + T2i;
                T2j            = SIMD_FNMADD(KP250000000, T2i, T2f);
                ro[WS(os, 15)] = T1R + T1U;
                T1V            = SIMD_FNMADD(KP250000000, T1U, T1R);
                T1L            = SIMD_FMADD(KP559016994, T1m, T1l);
                T1n            = SIMD_FNMADD(KP559016994, T1m, T1l);
                T2d            = SIMD_FNMADD(KP559016994, T24, T23);
                T25            = SIMD_FMADD(KP559016994, T24, T23);
                T39            = SIMD_FNMADD(KP559016994, T30, T2Z);
                T31            = SIMD_FMADD(KP559016994, T30, T2Z);
                T2J            = SIMD_FMADD(KP559016994, T2s, T2r);
                T2t            = SIMD_FNMADD(KP559016994, T2s, T2r);
                T3l            = SIMD_FNMADD(KP559016994, T3g, T3f);
                T3h            = SIMD_FMADD(KP559016994, T3g, T3f);
                T2X            = SIMD_FMADD(KP559016994, T2S, T2R);
                T2T            = SIMD_FNMADD(KP559016994, T2S, T2R);
                T2p            = SIMD_FNMADD(KP559016994, T2k, T2j);
                T2l            = SIMD_FMADD(KP559016994, T2k, T2j);
                T21            = SIMD_FMADD(KP559016994, T1W, T1V);
                T1X            = SIMD_FNMADD(KP559016994, T1W, T1V);
                io[WS(os, 7)]  = SIMD_FMADD(KP951056516, T1K, T1n);
                io[WS(os, 3)]  = SIMD_FNMADD(KP951056516, T1K, T1n);
                io[WS(os, 19)] = SIMD_FMADD(KP951056516, T1M, T1L);
                io[WS(os, 11)] = SIMD_FNMADD(KP951056516, T1M, T1L);
                io[WS(os, 9)]  = SIMD_FMADD(KP951056516, T2c, T25);
                io[WS(os, 1)]  = SIMD_FNMADD(KP951056516, T2c, T25);
                io[WS(os, 17)] = SIMD_FMADD(KP951056516, T2e, T2d);
                io[WS(os, 13)] = SIMD_FNMADD(KP951056516, T2e, T2d);
                ro[WS(os, 16)] = SIMD_FMADD(KP951056516, T38, T31);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP951056516, T38, T31);
                ro[WS(os, 8)]  = SIMD_FMADD(KP951056516, T3a, T39);
                ro[WS(os, 12)] = SIMD_FNMADD(KP951056516, T3a, T39);
                ro[WS(os, 18)] = SIMD_FMADD(KP951056516, T2I, T2t);
                ro[WS(os, 2)]  = SIMD_FNMADD(KP951056516, T2I, T2t);
                ro[WS(os, 6)]  = SIMD_FMADD(KP951056516, T2K, T2J);
                ro[WS(os, 14)] = SIMD_FNMADD(KP951056516, T2K, T2J);
                io[WS(os, 16)] = SIMD_FNMADD(KP951056516, T3k, T3h);
                io[WS(os, 4)]  = SIMD_FMADD(KP951056516, T3k, T3h);
                io[WS(os, 12)] = SIMD_FMADD(KP951056516, T3m, T3l);
                io[WS(os, 8)]  = SIMD_FNMADD(KP951056516, T3m, T3l);
                io[WS(os, 18)] = SIMD_FNMADD(KP951056516, T2W, T2T);
                io[WS(os, 2)]  = SIMD_FMADD(KP951056516, T2W, T2T);
                io[WS(os, 14)] = SIMD_FMADD(KP951056516, T2Y, T2X);
                io[WS(os, 6)]  = SIMD_FNMADD(KP951056516, T2Y, T2X);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP951056516, T2o, T2l);
                ro[WS(os, 1)]  = SIMD_FMADD(KP951056516, T2o, T2l);
                ro[WS(os, 17)] = SIMD_FNMADD(KP951056516, T2q, T2p);
                ro[WS(os, 13)] = SIMD_FMADD(KP951056516, T2q, T2p);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP951056516, T20, T1X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP951056516, T20, T1X);
                ro[WS(os, 19)] = SIMD_FNMADD(KP951056516, T22, T21);
                ro[WS(os, 11)] = SIMD_FMADD(KP951056516, T22, T21);
            }
        }
    }
}
