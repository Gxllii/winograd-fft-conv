//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<14, 0>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 104;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 148 FP additions, 84 FP multiplications,
 * (or, 64 additions, 0 multiplications, 84 fused multiply/add),
 * 104 stack variables, 6 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tp, T1L, T24, T1X, T21, T28, T2a, T26, T1W, T1Y, T29, T2b;
        {
            SIMD_FLOAT T3, T1x, T1b, Ts, T1M, Ta, T1k, Ty, T1K, To, T1i, T1Z,
                TZ, Tv, Th;
            SIMD_FLOAT T1j, TJ, T27, T2c, T14, Tz, TK, T1d, TI, T1z, TO, T1D,
                T23, T1G, TW;
            SIMD_FLOAT T1e, T1, T2, T19, T1a, T1y, TL, TA, T1v, T10, T1q, T1f,
                T12;
            T1  = ri[0];
            T2  = ri[WS(is, 7)];
            T19 = ii[0];
            T1a = ii[WS(is, 7)];
            {
                SIMD_FLOAT Te, Tq, T6, Tr, T9, Tx, Tn, Tw, Tk, Tf, Tb, Tc, T4,
                    T5, T7;
                SIMD_FLOAT T8, Tl, Tm, Ti, Tj, T1B, TE, TM, T1C, TH, TN, TV,
                    T1F, T1E, TS;
                SIMD_FLOAT TF, Tu, Tg, Tt, Td, TG, TT, TU, TC, TD, TQ, TR;
                T4  = ri[WS(is, 2)];
                T5  = ri[WS(is, 9)];
                T7  = ri[WS(is, 12)];
                T8  = ri[WS(is, 5)];
                Tl  = ri[WS(is, 8)];
                Tm  = ri[WS(is, 1)];
                Ti  = ri[WS(is, 6)];
                Tj  = ri[WS(is, 13)];
                Te  = ri[WS(is, 10)];
                Tp  = T1 + T2;
                T3  = T1 - T2;
                T1x = T19 + T1a;
                T1b = T19 - T1a;
                Tq  = T4 + T5;
                T6  = T4 - T5;
                Tr  = T7 + T8;
                T9  = T7 - T8;
                Tx  = Tl + Tm;
                Tn  = Tl - Tm;
                Tw  = Ti + Tj;
                Tk  = Ti - Tj;
                Tf  = ri[WS(is, 3)];
                Tb  = ri[WS(is, 4)];
                Tc  = ri[WS(is, 11)];
                TC  = ii[WS(is, 4)];
                TD  = ii[WS(is, 11)];
                TF  = ii[WS(is, 10)];
                Ts  = Tq + Tr;
                T1M = Tr - Tq;
                Ta  = T6 + T9;
                T1k = T9 - T6;
                Ty  = Tw + Tx;
                T1K = Tw - Tx;
                To  = Tk + Tn;
                T1i = Tn - Tk;
                Tu  = Te + Tf;
                Tg  = Te - Tf;
                Tt  = Tb + Tc;
                Td  = Tb - Tc;
                T1B = TC + TD;
                TE  = TC - TD;
                TG  = ii[WS(is, 3)];
                TT  = ii[WS(is, 8)];
                T1Z = SIMD_FNMADD(KP356895867, Ts, Ty);
                TU  = ii[WS(is, 1)];
                TZ  = SIMD_FNMADD(KP356895867, Ta, To);
                TQ  = ii[WS(is, 6)];
                TR  = ii[WS(is, 13)];
                TM  = ii[WS(is, 12)];
                Tv  = Tt + Tu;
                T1L = Tt - Tu;
                Th  = Td + Tg;
                T1j = Tg - Td;
                T1C = TF + TG;
                TH  = TF - TG;
                TN  = ii[WS(is, 5)];
                TV  = TT - TU;
                T1F = TT + TU;
                TJ  = ii[WS(is, 2)];
                T1E = TQ + TR;
                TS  = TQ - TR;
                T27 = SIMD_FNMADD(KP356895867, Tv, Ts);
                T2c = SIMD_FNMADD(KP356895867, Ty, Tv);
                T14 = SIMD_FNMADD(KP356895867, To, Th);
                Tz  = SIMD_FNMADD(KP356895867, Th, Ta);
                TK  = ii[WS(is, 9)];
                T1d = TE + TH;
                TI  = TE - TH;
                T1z = TM + TN;
                TO  = TM - TN;
                T24 = T1C - T1B;
                T1D = T1B + T1C;
                T23 = T1F - T1E;
                T1G = T1E + T1F;
                TW  = TS - TV;
                T1e = TS + TV;
            }
            ro[WS(os, 7)] = T3 + Ta + Th + To;
            T1y           = TJ + TK;
            TL            = TJ - TK;
            ro[0]         = Tp + Ts + Tv + Ty;
            TA            = SIMD_FNMADD(KP692021471, Tz, To);
            T1v           = SIMD_FMADD(KP554958132, T1i, T1k);
            T10           = SIMD_FNMADD(KP692021471, TZ, Th);
            T1q           = SIMD_FMADD(KP554958132, T1j, T1i);
            T1f           = SIMD_FNMADD(KP356895867, T1e, T1d);
            T12           = SIMD_FMADD(KP554958132, TI, TW);
            {
                SIMD_FLOAT T22, TB, T1w, T11, T1r, T16, T1m, T1P, T1U, T1g, T1n,
                    T1s, T17, T13, TX;
                SIMD_FLOAT T1O, T1J, T2e, T2f, T15, T1H, T1l, T1A, T1c, TP, T1N,
                    T2d, T1I, T1R, T1p;
                SIMD_FLOAT T1u, T1T, T20, T25, T2g, TY, T1Q, T1h, T1S, T1o, T1t,
                    T18, T1V;
                T15            = SIMD_FNMADD(KP692021471, T14, Ta);
                T1H            = SIMD_FNMADD(KP356895867, T1G, T1D);
                T1l            = SIMD_FNMADD(KP554958132, T1k, T1j);
                T1A            = T1y + T1z;
                T22            = T1y - T1z;
                T1c            = TL + TO;
                TP             = TL - TO;
                TB             = SIMD_FNMADD(KP900968867, TA, T3);
                T1w            = SIMD_FMADD(KP801937735, T1v, T1j);
                T11            = SIMD_FNMADD(KP900968867, T10, T3);
                T1r            = SIMD_FNMADD(KP801937735, T1q, T1k);
                T1N            = SIMD_FMADD(KP554958132, T1M, T1L);
                T16            = SIMD_FNMADD(KP900968867, T15, T3);
                T2d            = SIMD_FNMADD(KP692021471, T2c, Ts);
                T1m            = SIMD_FNMADD(KP801937735, T1l, T1i);
                T1I            = SIMD_FNMADD(KP692021471, T1H, T1A);
                io[0]          = T1x + T1A + T1D + T1G;
                T1P            = SIMD_FNMADD(KP356895867, T1A, T1G);
                T1U            = SIMD_FNMADD(KP356895867, T1D, T1A);
                T1g            = SIMD_FNMADD(KP692021471, T1f, T1c);
                io[WS(os, 7)]  = T1b + T1c + T1d + T1e;
                T1n            = SIMD_FNMADD(KP356895867, T1c, T1e);
                T1s            = SIMD_FNMADD(KP356895867, T1d, T1c);
                T17            = SIMD_FNMADD(KP554958132, TP, TI);
                T13            = SIMD_FNMADD(KP801937735, T12, TP);
                TX             = SIMD_FMADD(KP554958132, TW, TP);
                T1O            = SIMD_FNMADD(KP801937735, T1N, T1K);
                T1J            = SIMD_FNMADD(KP900968867, T1I, T1x);
                T2e            = SIMD_FNMADD(KP900968867, T2d, Tp);
                T2f            = SIMD_FMADD(KP554958132, T22, T24);
                T1Q            = SIMD_FNMADD(KP692021471, T1P, T1D);
                T1h            = SIMD_FNMADD(KP900968867, T1g, T1b);
                T1S            = SIMD_FMADD(KP554958132, T1L, T1K);
                T1o            = SIMD_FNMADD(KP692021471, T1n, T1d);
                T1t            = SIMD_FNMADD(KP692021471, T1s, T1e);
                T18            = SIMD_FNMADD(KP801937735, T17, TW);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, T13, T11);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T13, T11);
                TY             = SIMD_FMADD(KP801937735, TX, TI);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1O, T1J);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1O, T1J);
                T2g            = SIMD_FNMADD(KP801937735, T2f, T23);
                T1R            = SIMD_FNMADD(KP900968867, T1Q, T1x);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1m, T1h);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1m, T1h);
                T1p            = SIMD_FNMADD(KP900968867, T1o, T1b);
                T1u            = SIMD_FNMADD(KP900968867, T1t, T1b);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T18, T16);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T18, T16);
                T1T            = SIMD_FMADD(KP801937735, T1S, T1M);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TY, TB);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TY, TB);
                T20            = SIMD_FNMADD(KP692021471, T1Z, Tv);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T2g, T2e);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T2g, T2e);
                T25            = SIMD_FMADD(KP554958132, T24, T23);
                T1V            = SIMD_FNMADD(KP692021471, T1U, T1G);
                io[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1r, T1p);
                io[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T1r, T1p);
                io[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1w, T1u);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1w, T1u);
                io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1T, T1R);
                io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1T, T1R);
                T1X            = SIMD_FNMADD(KP554958132, T1K, T1M);
                T21            = SIMD_FNMADD(KP900968867, T20, Tp);
                T28            = SIMD_FNMADD(KP692021471, T27, Ty);
                T2a            = SIMD_FNMADD(KP554958132, T23, T22);
                T26            = SIMD_FMADD(KP801937735, T25, T22);
                T1W            = SIMD_FNMADD(KP900968867, T1V, T1x);
            }
        }
        T1Y            = SIMD_FNMADD(KP801937735, T1X, T1L);
        T29            = SIMD_FNMADD(KP900968867, T28, Tp);
        T2b            = SIMD_FNMADD(KP801937735, T2a, T24);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T26, T21);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T26, T21);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1Y, T1W);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1Y, T1W);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, T2b, T29);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T2b, T29);
    }
}

template <>
struct c2cb_traits<14, 1>
{
    static constexpr long_t flops           = 226;
    static constexpr long_t operations      = 142;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 105;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 142 FP additions, 84 FP multiplications,
 * (or, 58 additions, 0 multiplications, 84 fused multiply/add),
 * 105 stack variables, 6 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT T3, T1z, T1G, T1e, T1p, T1E, T1J, T1a, T1r, T1l, T1F, T1K,
            T1b, T1m;
        {
            SIMD_FLOAT Tp, T1V, Tv, T23, Ta, T1I, Ts, T24, To, T14, T1s, Ty,
                T22, Th, T1H;
            SIMD_FLOAT TJ, TZ, Tz, T1n, T19, TK, T1Y, TI, T1i, TO, T1h, T1B,
                T1C, TW, T1W;
            SIMD_FLOAT T1, T2, T1x, T1y, T1j, TL, TA, T25, T15, T10, T1D, T2f,
                T17;
            T1  = ri[0];
            T2  = ri[WS(is, 7)];
            T1x = ii[0];
            T1y = ii[WS(is, 7)];
            {
                SIMD_FLOAT Te, Tt, T6, Tu, T9, Tr, Tn, Tq, Tk, Tf, Tb, Tc, T4,
                    T5, T7;
                SIMD_FLOAT T8, Tl, Tm, Ti, Tj, T1f, TE, TM, T1g, TH, TN, TV,
                    T1c, T1d, TS;
                SIMD_FLOAT TF, Tx, Tg, Tw, Td, TG, TT, TU, TC, TD, TQ, TR;
                T4  = ri[WS(is, 6)];
                T5  = ri[WS(is, 13)];
                T7  = ri[WS(is, 8)];
                T8  = ri[WS(is, 1)];
                Tl  = ri[WS(is, 10)];
                Tm  = ri[WS(is, 3)];
                Ti  = ri[WS(is, 4)];
                Tj  = ri[WS(is, 11)];
                Te  = ri[WS(is, 12)];
                Tp  = T1 + T2;
                T3  = T1 - T2;
                T1V = T1x + T1y;
                T1z = T1x - T1y;
                Tt  = T4 + T5;
                T6  = T4 - T5;
                Tu  = T7 + T8;
                T9  = T7 - T8;
                Tr  = Tl + Tm;
                Tn  = Tl - Tm;
                Tq  = Ti + Tj;
                Tk  = Ti - Tj;
                Tf  = ri[WS(is, 5)];
                Tb  = ri[WS(is, 2)];
                Tc  = ri[WS(is, 9)];
                TC  = ii[WS(is, 2)];
                TD  = ii[WS(is, 9)];
                TF  = ii[WS(is, 12)];
                Tv  = Tt + Tu;
                T23 = Tt - Tu;
                Ta  = T6 + T9;
                T1I = T9 - T6;
                Ts  = Tq + Tr;
                T24 = Tq - Tr;
                To  = Tk + Tn;
                T1G = Tn - Tk;
                Tx  = Te + Tf;
                Tg  = Te - Tf;
                Tw  = Tb + Tc;
                Td  = Tb - Tc;
                T1f = TC - TD;
                TE  = TC + TD;
                TG  = ii[WS(is, 5)];
                TT  = ii[WS(is, 4)];
                T14 = SIMD_FNMADD(KP356895867, Tv, Ts);
                TU  = ii[WS(is, 11)];
                T1s = SIMD_FNMADD(KP356895867, Ta, To);
                TQ  = ii[WS(is, 10)];
                TR  = ii[WS(is, 3)];
                TM  = ii[WS(is, 6)];
                Ty  = Tw + Tx;
                T22 = Tx - Tw;
                Th  = Td + Tg;
                T1H = Tg - Td;
                T1g = TF - TG;
                TH  = TF + TG;
                TN  = ii[WS(is, 13)];
                TV  = TT + TU;
                T1c = TT - TU;
                TJ  = ii[WS(is, 8)];
                T1d = TQ - TR;
                TS  = TQ + TR;
                TZ  = SIMD_FNMADD(KP356895867, Ts, Ty);
                Tz  = SIMD_FNMADD(KP356895867, Ty, Tv);
                T1n = SIMD_FNMADD(KP356895867, Th, Ta);
                T19 = SIMD_FNMADD(KP356895867, To, Th);
                TK  = ii[WS(is, 1)];
                T1Y = TE + TH;
                TI  = TE - TH;
                T1i = TM - TN;
                TO  = TM + TN;
                T1h = T1f - T1g;
                T1B = T1f + T1g;
                T1C = T1c + T1d;
                T1e = T1c - T1d;
                TW  = TS - TV;
                T1W = TV + TS;
            }
            ro[WS(os, 6)] = T3 + Ta + Th + To;
            T1j           = TJ - TK;
            TL            = TJ + TK;
            TA            = SIMD_FNMADD(KP692021471, Tz, Ts);
            T25           = SIMD_FMADD(KP554958132, T24, T23);
            T15           = SIMD_FNMADD(KP692021471, T14, Ty);
            T10           = SIMD_FNMADD(KP692021471, TZ, Tv);
            T1D           = SIMD_FNMADD(KP356895867, T1C, T1B);
            T2f           = SIMD_FNMADD(KP554958132, T23, T22);
            T17           = SIMD_FMADD(KP554958132, TI, TW);
            {
                SIMD_FLOAT T1A, T1k, TB, T26, T16, T11, T2g, T2b, T1u, T1L, T1Q,
                    T2d, T27, T1Z, T12;
                SIMD_FLOAT T18, TX, T1O, T1w, T2a, T2c, T1v, T1t, T1X, TP, T1q,
                    T1T, T1P, T1U, T1N;
                SIMD_FLOAT T1S, T29, T21, T1o, T1M, T1R, T2e, T28, T20, T13, TY;
                T2a            = SIMD_FMADD(KP554958132, T22, T24);
                T2c            = SIMD_FNMADD(KP356895867, T1W, T1Y);
                T1t            = SIMD_FNMADD(KP692021471, T1s, Th);
                T1A            = T1i + T1j;
                T1k            = T1i - T1j;
                T1X            = TO + TL;
                TP             = TL - TO;
                TB             = SIMD_FNMADD(KP900968867, TA, Tp);
                T26            = SIMD_FMADD(KP801937735, T25, T22);
                T16            = SIMD_FNMADD(KP900968867, T15, Tp);
                T11            = SIMD_FNMADD(KP900968867, T10, Tp);
                T2g            = SIMD_FNMADD(KP801937735, T2f, T24);
                T2b            = SIMD_FNMADD(KP801937735, T2a, T23);
                T1v            = SIMD_FNMADD(KP554958132, T1h, T1e);
                T1u            = SIMD_FNMADD(KP900968867, T1t, T3);
                io[WS(os, 6)]  = T1C + T1B + T1A + T1z;
                T1L            = SIMD_FNMADD(KP356895867, T1A, T1C);
                T1Q            = SIMD_FNMADD(KP356895867, T1B, T1A);
                T2d            = SIMD_FNMADD(KP692021471, T2c, T1X);
                T27            = SIMD_FNMADD(KP356895867, T1X, T1W);
                T1Z            = SIMD_FNMADD(KP356895867, T1Y, T1X);
                T12            = SIMD_FNMADD(KP554958132, TP, TI);
                T18            = SIMD_FNMADD(KP801937735, T17, TP);
                TX             = SIMD_FMADD(KP554958132, TW, TP);
                T1O            = SIMD_FNMADD(KP554958132, T1H, T1G);
                T1w            = SIMD_FNMADD(KP801937735, T1v, T1k);
                T1T            = SIMD_FMADD(KP554958132, T1G, T1I);
                T1o            = SIMD_FNMADD(KP692021471, T1n, To);
                T1M            = SIMD_FNMADD(KP692021471, T1L, T1B);
                T1R            = SIMD_FNMADD(KP692021471, T1Q, T1C);
                T2e            = SIMD_FNMADD(KP900968867, T2d, T1V);
                T28            = SIMD_FNMADD(KP692021471, T27, T1Y);
                T20            = SIMD_FNMADD(KP692021471, T1Z, T1W);
                T13            = SIMD_FNMADD(KP801937735, T12, TW);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T18, T16);
                ro[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T18, T16);
                TY             = SIMD_FMADD(KP801937735, TX, TI);
                T1P            = SIMD_FNMADD(KP801937735, T1O, T1I);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1w, T1u);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1w, T1u);
                T1U            = SIMD_FNMADD(KP801937735, T1T, T1H);
                T1N            = SIMD_FNMADD(KP900968867, T1M, T1z);
                T1S            = SIMD_FNMADD(KP900968867, T1R, T1z);
                io[WS(os, 7)]  = SIMD_FNMADD(KP974927912, T2g, T2e);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, T2g, T2e);
                T29            = SIMD_FNMADD(KP900968867, T28, T1V);
                T21            = SIMD_FNMADD(KP900968867, T20, T1V);
                ro[WS(os, 5)]  = SIMD_FMADD(KP974927912, T13, T11);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP974927912, T13, T11);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TY, TB);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TY, TB);
                T1p            = SIMD_FNMADD(KP900968867, T1o, T3);
                T1q            = SIMD_FMADD(KP554958132, T1e, T1k);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1P, T1N);
                io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1P, T1N);
                io[WS(os, 8)]  = SIMD_FMADD(KP974927912, T1U, T1S);
                io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, T1U, T1S);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T2b, T29);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T2b, T29);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T26, T21);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T26, T21);
                T1E            = SIMD_FNMADD(KP692021471, T1D, T1A);
                T1J            = SIMD_FMADD(KP554958132, T1I, T1H);
                T1a            = SIMD_FNMADD(KP692021471, T19, Ta);
                T1r            = SIMD_FNMADD(KP801937735, T1q, T1h);
                T1l            = SIMD_FMADD(KP554958132, T1k, T1h);
            }
        }
        T1F            = SIMD_FNMADD(KP900968867, T1E, T1z);
        T1K            = SIMD_FMADD(KP801937735, T1J, T1G);
        T1b            = SIMD_FNMADD(KP900968867, T1a, T3);
        ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, T1r, T1p);
        ro[WS(os, 4)]  = SIMD_FNMADD(KP974927912, T1r, T1p);
        T1m            = SIMD_FMADD(KP801937735, T1l, T1e);
        io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1K, T1F);
        io[0]          = SIMD_FMADD(KP974927912, T1K, T1F);
        ro[0]          = SIMD_FMADD(KP974927912, T1m, T1b);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1m, T1b);
    }
}

template <>
struct c2cb_traits<14, 2>
{
    static constexpr long_t flops           = 222;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 108;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 140 FP additions, 82 FP multiplications,
 * (or, 58 additions, 0 multiplications, 82 fused multiply/add),
 * 108 stack variables, 11 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT Tp, T3, T1V, T1e, T23, T1I, TP, T1N, T1O, T1a, T1r, T1l, T28,
            T2a, T15;
        SIMD_FLOAT T17, T1z, T1H, Ta, TI, T1Y, Ts, T24, T1A, T1k, T1B, T22, Ty,
            T1W, TW;
        SIMD_FLOAT Tv, Th, T1G, To, T1Q, T1X, T1C, T1h, T1, T2, T1x, T1y, T1P,
            T1b, T1m;
        SIMD_FLOAT T29, T2b, T16, T18;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1x = ii[0];
        T1y = ii[WS(is, 7)];
        {
            SIMD_FLOAT Tw, Tk, T1c, TE, Tx, Tn, T1d, TH, TJ, Tq, Tr, TS, T1i,
                TV, T1j;
            SIMD_FLOAT Tt, Td, Tu, Tg, TK, TM, TN, Ti, Tj, TC, TD, Tl, Tm, TF,
                TG;
            SIMD_FLOAT T4, T5, T7, T8, TQ, TR, TT, TU, Tb, Tc, Te, Tf, T6, T9,
                TL;
            SIMD_FLOAT T1g, TO, T1f;
            Ti  = ri[WS(is, 2)];
            Tj  = ri[WS(is, 9)];
            TC  = ii[WS(is, 2)];
            TD  = ii[WS(is, 9)];
            Tl  = ri[WS(is, 12)];
            Tm  = ri[WS(is, 5)];
            TF  = ii[WS(is, 12)];
            TG  = ii[WS(is, 5)];
            T4  = ri[WS(is, 4)];
            Tp  = T1 + T2;
            T3  = T1 - T2;
            T1V = T1x + T1y;
            T1z = T1x - T1y;
            Tw  = Ti + Tj;
            Tk  = Ti - Tj;
            T1c = TC - TD;
            TE  = TC + TD;
            Tx  = Tl + Tm;
            Tn  = Tl - Tm;
            T1d = TF - TG;
            TH  = TF + TG;
            T5  = ri[WS(is, 11)];
            T7  = ri[WS(is, 10)];
            T8  = ri[WS(is, 3)];
            TQ  = ii[WS(is, 10)];
            TR  = ii[WS(is, 3)];
            TT  = ii[WS(is, 4)];
            TU  = ii[WS(is, 11)];
            Tb  = ri[WS(is, 6)];
            Tc  = ri[WS(is, 13)];
            Te  = ri[WS(is, 8)];
            Tf  = ri[WS(is, 1)];
            TJ  = ii[WS(is, 8)];
            Tq  = T4 + T5;
            T6  = T4 - T5;
            Tr  = T7 + T8;
            T9  = T7 - T8;
            TS  = TQ + TR;
            T1i = TQ - TR;
            TV  = TT + TU;
            T1j = TT - TU;
            Tt  = Tb + Tc;
            Td  = Tb - Tc;
            Tu  = Te + Tf;
            Tg  = Te - Tf;
            TK  = ii[WS(is, 1)];
            TM  = ii[WS(is, 6)];
            TN  = ii[WS(is, 13)];
            T1H = T6 - T9;
            Ta  = T6 + T9;
            TI  = TE - TH;
            T1Y = TE + TH;
            Ts  = Tq + Tr;
            T24 = Tq - Tr;
            T1e = T1c - T1d;
            T1A = T1c + T1d;
            T1k = T1i - T1j;
            T1B = T1i + T1j;
            T22 = Tx - Tw;
            Ty  = Tw + Tx;
            T1W = TS + TV;
            TW  = TS - TV;
            T23 = Tt - Tu;
            Tv  = Tt + Tu;
            Th  = Td + Tg;
            T1G = Tg - Td;
            TL  = TJ + TK;
            T1g = TJ - TK;
            TO  = TM + TN;
            T1f = TM - TN;
            T1I = Tn - Tk;
            To  = Tk + Tn;
            T1Q = SIMD_FMADD(KP512858431, T1B, T1G);
            T1X = TL + TO;
            TP  = TL - TO;
            T1C = T1g + T1f;
            T1h = T1f - T1g;
        }
        {
            SIMD_FLOAT T2c, T1s, T19, T27, T1L, T1D, T1n, TZ, T14, Tz, T1S, T26,
                T20, TY, T13;
            SIMD_FLOAT T1Z, TX, T12, T25, T1R, T2d, T2f, T1t, T1o, T10, T1v, TA,
                T1T, T1E, T21;
            SIMD_FLOAT T1J, T1q, T2e, T2g, T1u, T1p, T11, T1w, TB, T1U, T1F,
                T1K, T1M;
            T25            = SIMD_FMADD(KP554958132, T24, T23);
            T2c            = SIMD_FNMADD(KP356895867, T1W, T1Y);
            T1s            = SIMD_FNMADD(KP356895867, Th, Ta);
            T1R            = SIMD_FNMADD(KP695895486, T1Q, T1A);
            ro[WS(os, 5)]  = T3 + Ta + Th + To;
            T19            = SIMD_FNMADD(KP356895867, To, Th);
            T27            = SIMD_FNMADD(KP356895867, T1X, T1W);
            T1Z            = SIMD_FNMADD(KP356895867, T1Y, T1X);
            TX             = SIMD_FMADD(KP554958132, TW, TP);
            T12            = SIMD_FNMADD(KP554958132, TP, TI);
            io[WS(os, 5)]  = T1A + T1B + T1C + T1z;
            T1L            = SIMD_FNMADD(KP356895867, T1A, T1C);
            T1D            = SIMD_FNMADD(KP356895867, T1C, T1B);
            T1n            = SIMD_FMADD(KP512858431, Ta, T1h);
            TZ             = SIMD_FNMADD(KP356895867, Ts, Ty);
            T14            = SIMD_FNMADD(KP356895867, Tv, Ts);
            Tz             = SIMD_FNMADD(KP356895867, Ty, Tv);
            T1S            = SIMD_FNMADD(KP797473388, T1R, T1I);
            T26            = SIMD_FMADD(KP801937735, T25, T22);
            T20            = SIMD_FNMADD(KP692021471, T1Z, T1W);
            TY             = SIMD_FMADD(KP801937735, TX, TI);
            T13            = SIMD_FNMADD(KP801937735, T12, TW);
            T2d            = SIMD_FNMADD(KP692021471, T2c, T1X);
            T2f            = SIMD_FNMADD(KP554958132, T23, T22);
            T1t            = SIMD_FNMADD(KP692021471, T1s, To);
            T1o            = SIMD_FNMADD(KP695895486, T1n, To);
            T10            = SIMD_FNMADD(KP692021471, TZ, Tv);
            T1v            = SIMD_FMADD(KP554958132, T1e, T1k);
            TA             = SIMD_FNMADD(KP692021471, Tz, Ts);
            T1T            = SIMD_FMADD(KP867767478, T1S, T1C);
            T1E            = SIMD_FNMADD(KP692021471, T1D, T1A);
            T21            = SIMD_FNMADD(KP900968867, T20, T1V);
            T1J            = SIMD_FMADD(KP554958132, T1I, T1H);
            T1M            = SIMD_FNMADD(KP692021471, T1L, T1B);
            T2e            = SIMD_FNMADD(KP900968867, T2d, T1V);
            T2g            = SIMD_FNMADD(KP801937735, T2f, T24);
            T1u            = SIMD_FNMADD(KP900968867, T1t, T3);
            T1p            = SIMD_FNMADD(KP797473388, T1o, T1e);
            T11            = SIMD_FNMADD(KP900968867, T10, Tp);
            T1w            = SIMD_FMADD(KP801937735, T1v, T1h);
            TB             = SIMD_FNMADD(KP900968867, TA, Tp);
            T1U            = SIMD_FNMADD(KP924138961, T1T, T1H);
            T1F            = SIMD_FNMADD(KP900968867, T1E, T1z);
            io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T26, T21);
            io[0]          = SIMD_FMADD(KP974927912, T26, T21);
            T1K            = SIMD_FMADD(KP801937735, T1J, T1G);
            T1N            = SIMD_FNMADD(KP900968867, T1M, T1z);
            io[WS(os, 6)]  = SIMD_FNMADD(KP974927912, T2g, T2e);
            io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T2g, T2e);
            T1q            = SIMD_FMADD(KP867767478, T1p, Th);
            ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T13, T11);
            ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, T13, T11);
            ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1w, T1u);
            ro[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1w, T1u);
            ro[0]          = SIMD_FMADD(KP974927912, TY, TB);
            ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, TY, TB);
            io[WS(os, 11)] = SIMD_FMADD(KP974927912, T1U, T1z);
            io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1K, T1F);
            io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1K, T1F);
            T1O            = SIMD_FNMADD(KP554958132, T1H, T1G);
            T1a            = SIMD_FNMADD(KP692021471, T19, Ta);
            T1r            = SIMD_FNMADD(KP924138961, T1q, T1k);
            T1l            = SIMD_FNMADD(KP554958132, T1k, T1h);
            T28            = SIMD_FNMADD(KP692021471, T27, T1Y);
            T2a            = SIMD_FMADD(KP554958132, T22, T24);
            T15            = SIMD_FNMADD(KP692021471, T14, Ty);
            T17            = SIMD_FMADD(KP554958132, TI, TW);
        }
        T1P            = SIMD_FNMADD(KP801937735, T1O, T1I);
        T1b            = SIMD_FNMADD(KP900968867, T1a, T3);
        ro[WS(os, 11)] = SIMD_FMADD(KP974927912, T1r, T3);
        T1m            = SIMD_FNMADD(KP801937735, T1l, T1e);
        T29            = SIMD_FNMADD(KP900968867, T28, T1V);
        T2b            = SIMD_FNMADD(KP801937735, T2a, T23);
        T16            = SIMD_FNMADD(KP900968867, T15, Tp);
        T18            = SIMD_FNMADD(KP801937735, T17, TP);
        io[WS(os, 7)]  = SIMD_FMADD(KP974927912, T1P, T1N);
        io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, T1P, T1N);
        ro[WS(os, 7)]  = SIMD_FMADD(KP974927912, T1m, T1b);
        ro[WS(os, 3)]  = SIMD_FNMADD(KP974927912, T1m, T1b);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T2b, T29);
        io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T2b, T29);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T18, T16);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T18, T16);
    }
}

template <>
struct c2cb_traits<14, 3>
{
    static constexpr long_t flops           = 218;
    static constexpr long_t operations      = 138;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 138 FP additions, 80 FP multiplications,
 * (or, 58 additions, 0 multiplications, 80 fused multiply/add),
 * 111 stack variables, 11 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT TZ, T3, T1V, T1z, T1I, TM, T18, T21, T1m, T1U, T26, T1o, T1q,
            T1M, T2g;
        SIMD_FLOAT T1O, TQ, TY, TS, T24, T1h, T12, T1W, To, T1G, Ta, T1C, Ty,
            T22, T1b;
        SIMD_FLOAT T1A, T1Y, T1e, T1X, T1B, TF, T15, T23, T1H, Th, TP, T1i, T1,
            T2, T1x;
        SIMD_FLOAT T1y, T1p, T1r, T1N, T1P, TR, TT;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1x = ii[0];
        T1y = ii[WS(is, 7)];
        {
            SIMD_FLOAT T6, T9, TI, TL, TC, T19, T1a, T16, Tu, T17, Tx, TD, TB,
                T1c, Tb;
            SIMD_FLOAT Tc, Te, Tf, Ti, T1f, T1g, T11, T10, Tj, Tl, Tm, T4, T5,
                T7, T8;
            SIMD_FLOAT TG, TH, TJ, TK, Ts, Tt, Tv, Tw, Tk, Tn, Tz, TA, T1d, TE,
                T13;
            SIMD_FLOAT Td, T14, Tg;
            T4  = ri[WS(is, 2)];
            T5  = ri[WS(is, 9)];
            T7  = ri[WS(is, 12)];
            T8  = ri[WS(is, 5)];
            TG  = ii[WS(is, 2)];
            TH  = ii[WS(is, 9)];
            TJ  = ii[WS(is, 12)];
            TK  = ii[WS(is, 5)];
            Ti  = ri[WS(is, 6)];
            TZ  = T1 + T2;
            T3  = T1 - T2;
            T1V = T1x + T1y;
            T1z = T1x - T1y;
            T6  = T4 - T5;
            T1f = T4 + T5;
            T9  = T7 - T8;
            T1g = T7 + T8;
            TI  = TG - TH;
            T11 = TG + TH;
            TL  = TJ - TK;
            T10 = TJ + TK;
            Tj  = ri[WS(is, 13)];
            Tl  = ri[WS(is, 8)];
            Tm  = ri[WS(is, 1)];
            Ts  = ii[WS(is, 6)];
            Tt  = ii[WS(is, 13)];
            Tv  = ii[WS(is, 8)];
            Tw  = ii[WS(is, 1)];
            T24 = T1f - T1g;
            T1h = T1f + T1g;
            Tz  = ii[WS(is, 10)];
            TA  = ii[WS(is, 3)];
            TC  = ii[WS(is, 4)];
            T12 = T10 - T11;
            T1W = T11 + T10;
            T19 = Ti + Tj;
            Tk  = Ti - Tj;
            T1a = Tl + Tm;
            Tn  = Tl - Tm;
            T16 = Ts + Tt;
            Tu  = Ts - Tt;
            T17 = Tv + Tw;
            Tx  = Tv - Tw;
            TD  = ii[WS(is, 11)];
            TB  = Tz - TA;
            T1c = Tz + TA;
            Tb  = ri[WS(is, 4)];
            Tc  = ri[WS(is, 11)];
            Te  = ri[WS(is, 10)];
            Tf  = ri[WS(is, 3)];
            To  = Tk + Tn;
            T1G = Tn - Tk;
            Ta  = T6 + T9;
            T1I = T9 - T6;
            T1C = Tu + Tx;
            Ty  = Tu - Tx;
            T1d = TC + TD;
            TE  = TC - TD;
            T22 = T1a - T19;
            T1b = T19 + T1a;
            T1A = TI + TL;
            TM  = TI - TL;
            T13 = Tb + Tc;
            Td  = Tb - Tc;
            T14 = Te + Tf;
            Tg  = Te - Tf;
            T18 = T16 - T17;
            T1Y = T16 + T17;
            T1e = T1c - T1d;
            T1X = T1c + T1d;
            T1B = TB + TE;
            TF  = TB - TE;
            T15 = T13 + T14;
            T23 = T13 - T14;
            T1H = Td - Tg;
            Th  = Td + Tg;
            TP  = SIMD_FNMADD(KP356895867, Ta, To);
            T1i = SIMD_FMADD(KP512858431, T1h, T1e);
        }
        {
            SIMD_FLOAT T1L, T1D, T27, T1n, T1s, T2c, Tp, TU, T1Z, T1j, T1R, TO,
                TN, T1Q, T1E;
            SIMD_FLOAT T1J, T1v, T1t, T2d, T28, Tq, TV, T2a, T1k, T1S, T2f, TX,
                T1F, T1K, T1w;
            SIMD_FLOAT T1u, T2e, T29, Tr, TW, T2b, T1l, T1T, T20, T25;
            TN            = SIMD_FMADD(KP554958132, TM, TF);
            T1Q           = SIMD_FMADD(KP512858431, T1B, T1G);
            io[WS(os, 4)] = T1C + T1A + T1B + T1z;
            T1L           = SIMD_FNMADD(KP356895867, T1A, T1C);
            T1D           = SIMD_FNMADD(KP356895867, T1C, T1B);
            T27           = SIMD_FNMADD(KP356895867, T1X, T1W);
            T1n           = SIMD_FNMADD(KP356895867, T1b, T15);
            T1s           = SIMD_FNMADD(KP356895867, T15, T1h);
            T2c           = SIMD_FMADD(KP512858431, T1W, T23);
            ro[WS(os, 4)] = T3 + Ta + Th + To;
            Tp            = SIMD_FNMADD(KP356895867, To, Th);
            TU            = SIMD_FMADD(KP512858431, Th, Ty);
            T1Z           = SIMD_FNMADD(KP356895867, T1Y, T1X);
            T1j           = SIMD_FNMADD(KP695895486, T1i, T1b);
            T1R           = SIMD_FNMADD(KP695895486, T1Q, T1A);
            TO            = SIMD_FMADD(KP801937735, TN, Ty);
            T1E           = SIMD_FNMADD(KP692021471, T1D, T1A);
            T1J           = SIMD_FMADD(KP554958132, T1I, T1H);
            T1v           = SIMD_FNMADD(KP554958132, T18, T12);
            T1t           = SIMD_FNMADD(KP692021471, T1s, T1b);
            T2d           = SIMD_FNMADD(KP695895486, T2c, T1Y);
            T28           = SIMD_FNMADD(KP692021471, T27, T1Y);
            Tq            = SIMD_FNMADD(KP692021471, Tp, Ta);
            TV            = SIMD_FNMADD(KP695895486, TU, Ta);
            T2a           = SIMD_FNMADD(KP554958132, T22, T24);
            T1k           = SIMD_FMADD(KP797473388, T1j, T18);
            T1S           = SIMD_FNMADD(KP797473388, T1R, T1I);
            T20           = SIMD_FNMADD(KP692021471, T1Z, T1W);
            T1F           = SIMD_FNMADD(KP900968867, T1E, T1z);
            T1K           = SIMD_FMADD(KP801937735, T1J, T1G);
            T1w           = SIMD_FMADD(KP801937735, T1v, T1e);
            T1u           = SIMD_FNMADD(KP900968867, T1t, TZ);
            T2e           = SIMD_FMADD(KP797473388, T2d, T22);
            T29           = SIMD_FNMADD(KP900968867, T28, T1V);
            Tr            = SIMD_FNMADD(KP900968867, Tq, T3);
            TW            = SIMD_FNMADD(KP797473388, TV, TM);
            T2b           = SIMD_FMADD(KP801937735, T2a, T23);
            T1l           = SIMD_FNMADD(KP867767478, T1k, T15);
            T1T           = SIMD_FMADD(KP867767478, T1S, T1C);
            T21           = SIMD_FNMADD(KP900968867, T20, T1V);
            T25           = SIMD_FNMADD(KP554958132, T24, T23);
            io[WS(os, 8)] = SIMD_FNMADD(KP974927912, T1K, T1F);
            io[0]         = SIMD_FMADD(KP974927912, T1K, T1F);
            ro[WS(os, 3)] = SIMD_FMADD(KP974927912, T1w, T1u);
            ro[WS(os, 5)] = SIMD_FNMADD(KP974927912, T1w, T1u);
            T2f           = SIMD_FNMADD(KP867767478, T2e, T1X);
            ro[0]         = SIMD_FMADD(KP974927912, TO, Tr);
            ro[WS(os, 8)] = SIMD_FNMADD(KP974927912, TO, Tr);
            TX            = SIMD_FMADD(KP867767478, TW, To);
            io[WS(os, 5)] = SIMD_FNMADD(KP974927912, T2b, T29);
            io[WS(os, 3)] = SIMD_FMADD(KP974927912, T2b, T29);
            T1m           = SIMD_FNMADD(KP924138961, T1l, T12);
            T1U           = SIMD_FNMADD(KP924138961, T1T, T1H);
            T26           = SIMD_FMADD(KP801937735, T25, T22);
            T1o           = SIMD_FNMADD(KP692021471, T1n, T1h);
            T1q           = SIMD_FNMADD(KP554958132, T12, T1e);
            T1M           = SIMD_FNMADD(KP692021471, T1L, T1B);
            T2g           = SIMD_FNMADD(KP924138961, T2f, T24);
            T1O           = SIMD_FNMADD(KP554958132, T1H, T1G);
            TQ            = SIMD_FNMADD(KP692021471, TP, Th);
            TY            = SIMD_FNMADD(KP924138961, TX, TF);
            TS            = SIMD_FNMADD(KP554958132, TF, Ty);
        }
        ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1m, TZ);
        io[WS(os, 10)] = SIMD_FMADD(KP974927912, T1U, T1z);
        io[WS(os, 7)]  = SIMD_FMADD(KP974927912, T26, T21);
        io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T26, T21);
        T1p            = SIMD_FNMADD(KP900968867, T1o, TZ);
        T1r            = SIMD_FMADD(KP801937735, T1q, T18);
        T1N            = SIMD_FNMADD(KP900968867, T1M, T1z);
        io[WS(os, 9)]  = SIMD_FMADD(KP974927912, T2g, T1V);
        T1P            = SIMD_FNMADD(KP801937735, T1O, T1I);
        TR             = SIMD_FNMADD(KP900968867, TQ, T3);
        ro[WS(os, 10)] = SIMD_FMADD(KP974927912, TY, T3);
        TT             = SIMD_FNMADD(KP801937735, TS, TM);
        ro[WS(os, 7)]  = SIMD_FMADD(KP974927912, T1r, T1p);
        ro[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T1r, T1p);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1P, T1N);
        io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, T1P, T1N);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, TT, TR);
        ro[WS(os, 2)]  = SIMD_FNMADD(KP974927912, TT, TR);
    }
}

template <>
struct c2cb_traits<14, 4>
{
    static constexpr long_t flops           = 214;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 107;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 136 FP additions, 78 FP multiplications,
 * (or, 58 additions, 0 multiplications, 78 fused multiply/add),
 * 107 stack variables, 11 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT Tp, T3, T1z, TG, T1b, T22, T1l, TY, T1w, T21, T25, T1P, T10,
            T12, T1U;
        SIMD_FLOAT T1V, TT, T24, Ta, T1G, T1h, T1C, Tw, T1W, T23, Tz, T1I, Th,
            T1A, T1e;
        SIMD_FLOAT T1X, TQ, T1Y, T1B, T2c, TJ, To, T1H, TU, T27, T1, T2, T1x,
            T1y, T1m;
        SIMD_FLOAT T26, T11, T13;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1x = ii[0];
        T1y = ii[WS(is, 7)];
        {
            SIMD_FLOAT TA, T1c, TM, TB, TD, T1d, TP, TE, Ti, Tj, Tl, Tm, Tb, TR,
                T6;
            SIMD_FLOAT TS, T9, T1g, Ts, T1f, Tv, Tc, Te, Tf, T4, T5, T7, T8, Tq,
                Tr;
            SIMD_FLOAT Tt, Tu, TK, TL, TN, TO, Tx, Td, Ty, Tg, TC, T1a, TF, T19,
                TH;
            SIMD_FLOAT Tk, TI, Tn;
            T4  = ri[WS(is, 2)];
            T5  = ri[WS(is, 9)];
            T7  = ri[WS(is, 12)];
            T8  = ri[WS(is, 5)];
            Tq  = ii[WS(is, 12)];
            Tr  = ii[WS(is, 5)];
            Tt  = ii[WS(is, 2)];
            Tu  = ii[WS(is, 9)];
            Tb  = ri[WS(is, 4)];
            Tp  = T1 + T2;
            T3  = T1 - T2;
            T1V = T1x + T1y;
            T1z = T1x - T1y;
            TR  = T4 + T5;
            T6  = T4 - T5;
            TS  = T7 + T8;
            T9  = T7 - T8;
            T1g = Tq - Tr;
            Ts  = Tq + Tr;
            T1f = Tt - Tu;
            Tv  = Tt + Tu;
            Tc  = ri[WS(is, 11)];
            Te  = ri[WS(is, 10)];
            Tf  = ri[WS(is, 3)];
            TK  = ii[WS(is, 10)];
            TL  = ii[WS(is, 3)];
            TN  = ii[WS(is, 4)];
            TT  = TR + TS;
            T24 = TR - TS;
            Ta  = T6 + T9;
            T1G = T9 - T6;
            TO  = ii[WS(is, 11)];
            TA  = ii[WS(is, 6)];
            T1h = T1f - T1g;
            T1C = T1f + T1g;
            Tw  = Ts - Tv;
            T1W = Tv + Ts;
            Tx  = Tb + Tc;
            Td  = Tb - Tc;
            Ty  = Te + Tf;
            Tg  = Te - Tf;
            T1c = TK - TL;
            TM  = TK + TL;
            TB  = ii[WS(is, 13)];
            TD  = ii[WS(is, 8)];
            T1d = TN - TO;
            TP  = TN + TO;
            TE  = ii[WS(is, 1)];
            Ti  = ri[WS(is, 6)];
            Tj  = ri[WS(is, 13)];
            Tl  = ri[WS(is, 8)];
            T23 = Tx - Ty;
            Tz  = Tx + Ty;
            T1I = Td - Tg;
            Th  = Td + Tg;
            Tm  = ri[WS(is, 1)];
            TC  = TA + TB;
            T1a = TA - TB;
            T1A = T1c + T1d;
            T1e = T1c - T1d;
            T1X = TM + TP;
            TQ  = TM - TP;
            TF  = TD + TE;
            T19 = TD - TE;
            TH  = Ti + Tj;
            Tk  = Ti - Tj;
            TI  = Tl + Tm;
            Tn  = Tl - Tm;
            TG  = TC - TF;
            T1Y = TC + TF;
            T1B = T1a + T19;
            T1b = T19 - T1a;
            T2c = SIMD_FMADD(KP512858431, T1W, T23);
            T22 = TI - TH;
            TJ  = TH + TI;
            To  = Tk + Tn;
            T1H = Tk - Tn;
            TU  = SIMD_FMADD(KP512858431, TT, TQ);
            T27 = SIMD_FNMADD(KP356895867, T1X, T1W);
        }
        {
            SIMD_FLOAT T1Z, TZ, T1r, T2b, T1K, T1R, T1o, T1j, TW, T29, T1u, T1F,
                T1N, T2f, T16;
            SIMD_FLOAT T18, T17, T1q, T1s, T1D, T1L, T2d, T14, T2a, T1J, T1Q,
                T1n, T1i, TV, T28;
            SIMD_FLOAT T1t, T1E, T1M, T2e, T15, T1T, T1O, T2g, T20, T1S, T1p,
                T1k, TX, T1v;
            T17           = SIMD_FNMADD(KP554958132, TG, Tw);
            T1q           = SIMD_FMADD(KP554958132, T1e, T1b);
            T1s           = SIMD_FNMADD(KP512858431, Th, T1b);
            io[WS(os, 3)] = T1B + T1C + T1A + T1z;
            T1D           = SIMD_FNMADD(KP356895867, T1C, T1B);
            T1L           = SIMD_FMADD(KP512858431, T1B, T1G);
            T2d           = SIMD_FNMADD(KP695895486, T2c, T1Y);
            T1Z           = SIMD_FNMADD(KP356895867, T1Y, T1X);
            T14           = SIMD_FNMADD(KP356895867, Tz, TT);
            T2a           = SIMD_FNMADD(KP554958132, T22, T24);
            T1J           = SIMD_FMADD(KP554958132, T1I, T1H);
            T1Q           = SIMD_FNMADD(KP512858431, T1A, T1H);
            ro[WS(os, 3)] = T3 + Ta + Th + To;
            T1n           = SIMD_FNMADD(KP356895867, Ta, To);
            T1i           = SIMD_FMADD(KP512858431, To, T1h);
            TZ            = SIMD_FNMADD(KP356895867, TJ, Tz);
            TV            = SIMD_FNMADD(KP695895486, TU, TJ);
            T28           = SIMD_FNMADD(KP692021471, T27, T1Y);
            T1r           = SIMD_FMADD(KP801937735, T1q, T1h);
            T1t           = SIMD_FMADD(KP695895486, T1s, Ta);
            T1E           = SIMD_FNMADD(KP692021471, T1D, T1A);
            T1M           = SIMD_FNMADD(KP695895486, T1L, T1A);
            T2e           = SIMD_FMADD(KP797473388, T2d, T22);
            T15           = SIMD_FNMADD(KP692021471, T14, TJ);
            T2b           = SIMD_FMADD(KP801937735, T2a, T23);
            T1K           = SIMD_FMADD(KP801937735, T1J, T1G);
            T1R           = SIMD_FMADD(KP695895486, T1Q, T1C);
            T1o           = SIMD_FNMADD(KP692021471, T1n, Th);
            T1j           = SIMD_FNMADD(KP695895486, T1i, Th);
            TW            = SIMD_FMADD(KP797473388, TV, TG);
            T29           = SIMD_FNMADD(KP900968867, T28, T1V);
            T1u           = SIMD_FNMADD(KP797473388, T1t, T1h);
            T1F           = SIMD_FNMADD(KP900968867, T1E, T1z);
            T1N           = SIMD_FNMADD(KP797473388, T1M, T1I);
            T2f           = SIMD_FNMADD(KP867767478, T2e, T1X);
            T16           = SIMD_FNMADD(KP900968867, T15, Tp);
            T18           = SIMD_FMADD(KP801937735, T17, TQ);
            T20           = SIMD_FNMADD(KP692021471, T1Z, T1W);
            T1S           = SIMD_FNMADD(KP797473388, T1R, T1G);
            T1p           = SIMD_FNMADD(KP900968867, T1o, T3);
            T1k           = SIMD_FNMADD(KP797473388, T1j, T1e);
            TX            = SIMD_FNMADD(KP867767478, TW, Tz);
            io[WS(os, 4)] = SIMD_FNMADD(KP974927912, T2b, T29);
            io[WS(os, 2)] = SIMD_FMADD(KP974927912, T2b, T29);
            T1v           = SIMD_FMADD(KP867767478, T1u, To);
            io[WS(os, 5)] = SIMD_FMADD(KP974927912, T1K, T1F);
            io[WS(os, 1)] = SIMD_FNMADD(KP974927912, T1K, T1F);
            T1O           = SIMD_FMADD(KP867767478, T1N, T1C);
            T2g           = SIMD_FNMADD(KP924138961, T2f, T24);
            ro[WS(os, 2)] = SIMD_FMADD(KP974927912, T18, T16);
            ro[WS(os, 4)] = SIMD_FNMADD(KP974927912, T18, T16);
            T1T           = SIMD_FMADD(KP867767478, T1S, T1B);
            ro[WS(os, 5)] = SIMD_FMADD(KP974927912, T1r, T1p);
            ro[WS(os, 1)] = SIMD_FNMADD(KP974927912, T1r, T1p);
            T1l           = SIMD_FMADD(KP867767478, T1k, Ta);
            TY            = SIMD_FNMADD(KP924138961, TX, Tw);
            T1w           = SIMD_FNMADD(KP924138961, T1v, T1e);
            T21           = SIMD_FNMADD(KP900968867, T20, T1V);
            T25           = SIMD_FNMADD(KP554958132, T24, T23);
            T1P           = SIMD_FNMADD(KP924138961, T1O, T1H);
            io[WS(os, 8)] = SIMD_FMADD(KP974927912, T2g, T1V);
            T10           = SIMD_FNMADD(KP692021471, TZ, TT);
            T12           = SIMD_FNMADD(KP554958132, Tw, TQ);
            T1U           = SIMD_FNMADD(KP924138961, T1T, T1I);
        }
        T1m           = SIMD_FNMADD(KP924138961, T1l, T1b);
        ro[WS(os, 8)] = SIMD_FMADD(KP974927912, TY, Tp);
        ro[WS(os, 9)] = SIMD_FMADD(KP974927912, T1w, T3);
        T26           = SIMD_FMADD(KP801937735, T25, T22);
        io[WS(os, 7)] = SIMD_FMADD(KP974927912, T1P, T1z);
        T11           = SIMD_FNMADD(KP900968867, T10, Tp);
        T13           = SIMD_FMADD(KP801937735, T12, TG);
        io[WS(os, 9)] = SIMD_FMADD(KP974927912, T1U, T1z);
        ro[WS(os, 7)] = SIMD_FMADD(KP974927912, T1m, T3);
        io[WS(os, 6)] = SIMD_FMADD(KP974927912, T26, T21);
        io[0]         = SIMD_FNMADD(KP974927912, T26, T21);
        ro[WS(os, 6)] = SIMD_FMADD(KP974927912, T13, T11);
        ro[0]         = SIMD_FNMADD(KP974927912, T13, T11);
    }
}

template <>
struct c2cb_traits<14, 5>
{
    static constexpr long_t flops           = 210;
    static constexpr long_t operations      = 134;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 113;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 134 FP additions, 76 FP multiplications,
 * (or, 58 additions, 0 multiplications, 76 fused multiply/add),
 * 113 stack variables, 11 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT Tp, T3, T1V, T1z, TI, T1H, T21, T1O, T26, TA, T1w, T2g, T18,
            T2b, T13;
        SIMD_FLOAT TX, T1P, TB, TY;
        {
            SIMD_FLOAT T22, Ty, T1I, Ta, T1A, T1k, T1Y, Ts, T24, Th, T1B, T1h,
                T1W, TW, T1n;
            SIMD_FLOAT T1Q, T1e, T1C, TP, T1X, Tv, T23, T1G, To, T1, T2, T1x,
                T1y, Tl, Tm;
            SIMD_FLOAT T1d, TL, TO, T1c, Tk, Tt, Tn, Tu;
            T1  = ri[0];
            T2  = ri[WS(is, 7)];
            T1x = ii[0];
            T1y = ii[WS(is, 7)];
            {
                SIMD_FLOAT Tb, Tw, T6, Tx, T9, T1j, TE, T1i, TH, Tc, Te, Tf, T4,
                    T5, T7;
                SIMD_FLOAT T8, TC, TD, TF, TG, TQ, TR, TT, TU, TJ, Tq, Td, Tr,
                    Tg, T1g;
                SIMD_FLOAT TS, TK, TM, T1f, TV, TN, Ti, Tj;
                T4  = ri[WS(is, 4)];
                T5  = ri[WS(is, 11)];
                T7  = ri[WS(is, 10)];
                T8  = ri[WS(is, 3)];
                TC  = ii[WS(is, 4)];
                TD  = ii[WS(is, 11)];
                TF  = ii[WS(is, 10)];
                TG  = ii[WS(is, 3)];
                Tb  = ri[WS(is, 6)];
                Tp  = T1 + T2;
                T3  = T1 - T2;
                T1V = T1x + T1y;
                T1z = T1x - T1y;
                Tw  = T4 + T5;
                T6  = T4 - T5;
                Tx  = T7 + T8;
                T9  = T7 - T8;
                T1j = TC - TD;
                TE  = TC + TD;
                T1i = TF - TG;
                TH  = TF + TG;
                Tc  = ri[WS(is, 13)];
                Te  = ri[WS(is, 8)];
                Tf  = ri[WS(is, 1)];
                TQ  = ii[WS(is, 6)];
                TR  = ii[WS(is, 13)];
                TT  = ii[WS(is, 8)];
                T22 = Tx - Tw;
                Ty  = Tw + Tx;
                T1I = T6 - T9;
                Ta  = T6 + T9;
                TU  = ii[WS(is, 1)];
                TJ  = ii[WS(is, 12)];
                T1A = T1i + T1j;
                T1k = T1i - T1j;
                T1Y = TH + TE;
                TI  = TE - TH;
                Tq  = Tb + Tc;
                Td  = Tb - Tc;
                Tr  = Te + Tf;
                Tg  = Te - Tf;
                T1g = TQ - TR;
                TS  = TQ + TR;
                TK  = ii[WS(is, 5)];
                TM  = ii[WS(is, 2)];
                T1f = TT - TU;
                TV  = TT + TU;
                TN  = ii[WS(is, 9)];
                Ti  = ri[WS(is, 2)];
                Tj  = ri[WS(is, 9)];
                Tl  = ri[WS(is, 12)];
                Ts  = Tq + Tr;
                T24 = Tr - Tq;
                Th  = Td + Tg;
                T1H = Td - Tg;
                Tm  = ri[WS(is, 5)];
                T1d = TJ - TK;
                TL  = TJ + TK;
                T1B = T1f + T1g;
                T1h = T1f - T1g;
                T1W = TV + TS;
                TW  = TS - TV;
                TO  = TM + TN;
                T1c = TM - TN;
                Tk  = Ti - Tj;
                Tt  = Ti + Tj;
            }
            Tn  = Tl - Tm;
            Tu  = Tl + Tm;
            T1n = SIMD_FNMADD(KP512858431, Ta, T1h);
            T1Q = SIMD_FNMADD(KP512858431, T1A, T1H);
            T1e = T1c - T1d;
            T1C = T1c + T1d;
            TP  = TL - TO;
            T1X = TO + TL;
            Tv  = Tt + Tu;
            T23 = Tt - Tu;
            T1G = Tn - Tk;
            To  = Tk + Tn;
            {
                SIMD_FLOAT T1Z, Tz, T1K, T1S, T1E, T1t, T2d, T15, T28, T10, T1m,
                    T1p, T1a, T1M, T1J;
                SIMD_FLOAT T1o, T19, T1L, T1l, T1R, T1D, T1s, T2c, T14, T27, TZ,
                    T1v, T2f, T17, T2a;
                SIMD_FLOAT T12, T1r, T20, T1T, T1F, T1u, T2e, T16, T29, T11,
                    T25, T1q, T1b, T1N, T1U;
                T1J           = SIMD_FMADD(KP554958132, T1I, T1H);
                T1l           = SIMD_FMADD(KP554958132, T1k, T1h);
                io[WS(os, 2)] = T1C + T1A + T1B + T1z;
                T1R           = SIMD_FMADD(KP695895486, T1Q, T1C);
                T1D           = SIMD_FNMADD(KP356895867, T1C, T1B);
                T1s           = SIMD_FMADD(KP512858431, Th, T1e);
                T2c           = SIMD_FNMADD(KP512858431, T1X, T22);
                T14           = SIMD_FMADD(KP512858431, Ts, TP);
                T1Z           = SIMD_FNMADD(KP356895867, T1Y, T1X);
                T27           = SIMD_FMADD(KP512858431, T1W, T23);
                Tz            = SIMD_FNMADD(KP356895867, Ty, Tv);
                TZ            = SIMD_FNMADD(KP512858431, Tv, TI);
                ro[WS(os, 2)] = T3 + Ta + Th + To;
                T1o           = SIMD_FMADD(KP695895486, T1n, To);
                T19           = SIMD_FNMADD(KP356895867, To, Th);
                T1L           = SIMD_FMADD(KP512858431, T1B, T1G);
                T1K           = SIMD_FMADD(KP801937735, T1J, T1G);
                T1S           = SIMD_FNMADD(KP797473388, T1R, T1G);
                T1E           = SIMD_FNMADD(KP692021471, T1D, T1A);
                T1t           = SIMD_FNMADD(KP695895486, T1s, Ta);
                T2d           = SIMD_FMADD(KP695895486, T2c, T1W);
                T15           = SIMD_FNMADD(KP695895486, T14, Ty);
                T28           = SIMD_FNMADD(KP695895486, T27, T1Y);
                T10           = SIMD_FMADD(KP695895486, TZ, Ts);
                T1m           = SIMD_FMADD(KP801937735, T1l, T1e);
                T1p           = SIMD_FNMADD(KP797473388, T1o, T1e);
                T1a           = SIMD_FNMADD(KP692021471, T19, Ta);
                T1M           = SIMD_FNMADD(KP695895486, T1L, T1A);
                T20           = SIMD_FNMADD(KP692021471, T1Z, T1W);
                T1T           = SIMD_FMADD(KP867767478, T1S, T1B);
                T1F           = SIMD_FNMADD(KP900968867, T1E, T1z);
                T1u           = SIMD_FNMADD(KP797473388, T1t, T1k);
                T2e           = SIMD_FMADD(KP797473388, T2d, T24);
                T16           = SIMD_FNMADD(KP797473388, T15, TI);
                T29           = SIMD_FNMADD(KP797473388, T28, T22);
                T11           = SIMD_FMADD(KP797473388, T10, TW);
                T25           = SIMD_FNMADD(KP554958132, T24, T23);
                T1q           = SIMD_FMADD(KP867767478, T1p, Th);
                T1b           = SIMD_FNMADD(KP900968867, T1a, T3);
                T1N           = SIMD_FNMADD(KP797473388, T1M, T1I);
                T21           = SIMD_FNMADD(KP900968867, T20, T1V);
                T1U           = SIMD_FNMADD(KP924138961, T1T, T1I);
                io[WS(os, 4)] = SIMD_FMADD(KP974927912, T1K, T1F);
                io[0]         = SIMD_FNMADD(KP974927912, T1K, T1F);
                T1v           = SIMD_FMADD(KP867767478, T1u, To);
                T2f           = SIMD_FNMADD(KP867767478, T2e, T1Y);
                T17           = SIMD_FMADD(KP867767478, T16, Tv);
                T2a           = SIMD_FMADD(KP867767478, T29, T1X);
                T12           = SIMD_FNMADD(KP867767478, T11, Ty);
                T1r           = SIMD_FNMADD(KP924138961, T1q, T1k);
                ro[WS(os, 4)] = SIMD_FMADD(KP974927912, T1m, T1b);
                ro[0]         = SIMD_FNMADD(KP974927912, T1m, T1b);
                T1O           = SIMD_FMADD(KP867767478, T1N, T1C);
                io[WS(os, 8)] = SIMD_FMADD(KP974927912, T1U, T1z);
                T26           = SIMD_FNMADD(KP801937735, T25, T22);
                TA            = SIMD_FNMADD(KP692021471, Tz, Ts);
                T1w           = SIMD_FNMADD(KP924138961, T1v, T1h);
                T2g           = SIMD_FNMADD(KP924138961, T2f, T23);
                T18           = SIMD_FNMADD(KP924138961, T17, TW);
                T2b           = SIMD_FNMADD(KP924138961, T2a, T24);
                T13           = SIMD_FNMADD(KP924138961, T12, TP);
                ro[WS(os, 8)] = SIMD_FMADD(KP974927912, T1r, T3);
                TX            = SIMD_FNMADD(KP554958132, TW, TP);
            }
        }
        T1P           = SIMD_FNMADD(KP924138961, T1O, T1H);
        io[WS(os, 3)] = SIMD_FMADD(KP974927912, T26, T21);
        io[WS(os, 1)] = SIMD_FNMADD(KP974927912, T26, T21);
        TB            = SIMD_FNMADD(KP900968867, TA, Tp);
        ro[WS(os, 6)] = SIMD_FMADD(KP974927912, T1w, T3);
        io[WS(os, 7)] = SIMD_FMADD(KP974927912, T2g, T1V);
        ro[WS(os, 5)] = SIMD_FMADD(KP974927912, T18, Tp);
        io[WS(os, 5)] = SIMD_FMADD(KP974927912, T2b, T1V);
        ro[WS(os, 7)] = SIMD_FMADD(KP974927912, T13, Tp);
        TY            = SIMD_FNMADD(KP801937735, TX, TI);
        io[WS(os, 6)] = SIMD_FMADD(KP974927912, T1P, T1z);
        ro[WS(os, 3)] = SIMD_FMADD(KP974927912, TY, TB);
        ro[WS(os, 1)] = SIMD_FNMADD(KP974927912, TY, TB);
    }
}

template <>
struct c2cb_traits<14, 6>
{
    static constexpr long_t flops           = 206;
    static constexpr long_t operations      = 132;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 113;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 132 FP additions, 74 FP multiplications,
 * (or, 58 additions, 0 multiplications, 74 fused multiply/add),
 * 113 stack variables, 11 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT Tp, T3, T1V, T1C, Ts, T24, Ta, T1E, T1z, T1e, T1W, TW, Ty,
            T22, T1F;
        SIMD_FLOAT To, T1h, T1x, TI, T1Y, Td, Tt, Tg, Tu, T1n, T1Q, T1b, T1y,
            TP, T1X;
        SIMD_FLOAT T1, T2, T1A, T1B, Te, Tf, T1a, TL, TO, T19;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1A = ii[0];
        T1B = ii[WS(is, 7)];
        {
            SIMD_FLOAT Ti, Tq, T6, Tr, T9, T1d, TS, T1c, TV, Tj, Tl, Tm, T4, T5,
                T7;
            SIMD_FLOAT T8, TQ, TR, TT, TU, TF, TG, Tk, Tw, Tn, Tx, TE, T1g, TC,
                TD;
            SIMD_FLOAT TJ, TK, TH, T1f, TM, TN, Tb, Tc;
            T4  = ri[WS(is, 6)];
            T5  = ri[WS(is, 13)];
            T7  = ri[WS(is, 8)];
            T8  = ri[WS(is, 1)];
            TQ  = ii[WS(is, 6)];
            TR  = ii[WS(is, 13)];
            TT  = ii[WS(is, 8)];
            TU  = ii[WS(is, 1)];
            Ti  = ri[WS(is, 4)];
            Tp  = T1 + T2;
            T3  = T1 - T2;
            T1V = T1A + T1B;
            T1C = T1A - T1B;
            Tq  = T4 + T5;
            T6  = T4 - T5;
            Tr  = T7 + T8;
            T9  = T7 - T8;
            T1d = TQ - TR;
            TS  = TQ + TR;
            T1c = TT - TU;
            TV  = TT + TU;
            Tj  = ri[WS(is, 11)];
            Tl  = ri[WS(is, 10)];
            Tm  = ri[WS(is, 3)];
            TC  = ii[WS(is, 4)];
            TD  = ii[WS(is, 11)];
            TF  = ii[WS(is, 10)];
            Ts  = Tq + Tr;
            T24 = Tr - Tq;
            Ta  = T6 + T9;
            T1E = T6 - T9;
            TG  = ii[WS(is, 3)];
            T1z = T1d + T1c;
            T1e = T1c - T1d;
            T1W = TS + TV;
            TW  = TS - TV;
            Tk  = Ti - Tj;
            Tw  = Ti + Tj;
            Tn  = Tl - Tm;
            Tx  = Tl + Tm;
            TE  = TC + TD;
            T1g = TC - TD;
            TJ  = ii[WS(is, 12)];
            TK  = ii[WS(is, 5)];
            TH  = TF + TG;
            T1f = TF - TG;
            TM  = ii[WS(is, 2)];
            TN  = ii[WS(is, 9)];
            Tb  = ri[WS(is, 2)];
            Tc  = ri[WS(is, 9)];
            Ty  = Tw + Tx;
            T22 = Tx - Tw;
            T1F = Tk - Tn;
            To  = Tk + Tn;
            Te  = ri[WS(is, 12)];
            Tf  = ri[WS(is, 5)];
            T1a = TJ - TK;
            TL  = TJ + TK;
            T1h = T1f - T1g;
            T1x = T1g + T1f;
            TI  = TE - TH;
            T1Y = TE + TH;
            TO  = TM + TN;
            T19 = TM - TN;
            Td  = Tb - Tc;
            Tt  = Tb + Tc;
        }
        Tg  = Te - Tf;
        Tu  = Te + Tf;
        T1n = SIMD_FNMADD(KP512858431, To, T1e);
        T1Q = SIMD_FNMADD(KP512858431, T1x, T1E);
        T1b = T19 - T1a;
        T1y = T19 + T1a;
        TP  = TL - TO;
        T1X = TO + TL;
        {
            SIMD_FLOAT T23, Tv, Th, T1D, T12, T2a, T1O, T1r, T1l, T1K, T1w, T2g,
                T18, T1G, T1R;
            SIMD_FLOAT T1s, T1Z, T2c, TX, T14, Tz, TZ, T25, T27, T1L, T1o, T1i,
                T1H, T13, T2b;
            SIMD_FLOAT T1P, T1m;
            T23           = Tt - Tu;
            Tv            = Tt + Tu;
            Th            = Td + Tg;
            T1D           = Tg - Td;
            io[WS(os, 1)] = T1x + T1y + T1z + T1C;
            T1G           = SIMD_FNMADD(KP512858431, T1y, T1F);
            T1R           = SIMD_FMADD(KP695895486, T1Q, T1y);
            T1s           = SIMD_FMADD(KP512858431, Ta, T1b);
            T1Z           = SIMD_FNMADD(KP356895867, T1Y, T1X);
            T2c           = SIMD_FNMADD(KP512858431, T1X, T22);
            TX            = SIMD_FNMADD(KP554958132, TW, TP);
            T14           = SIMD_FMADD(KP512858431, Ts, TP);
            Tz            = SIMD_FNMADD(KP356895867, Ty, Tv);
            TZ            = SIMD_FNMADD(KP512858431, Tv, TI);
            T25           = SIMD_FNMADD(KP554958132, T24, T23);
            T27           = SIMD_FMADD(KP512858431, T1W, T23);
            T1L           = SIMD_FMADD(KP512858431, T1z, T1D);
            ro[WS(os, 1)] = T3 + Ta + Th + To;
            T1o           = SIMD_FMADD(KP695895486, T1n, Th);
            T1i           = SIMD_FNMADD(KP512858431, Th, T1h);
            T1H           = SIMD_FMADD(KP695895486, T1G, T1z);
            {
                SIMD_FLOAT T1S, T1t, T20, T2d, TY, T15, TA, T10, T26, T28, T1M,
                    T1p, T1j, T1I, T1T;
                SIMD_FLOAT T1u, T21, T2e, T16, TB, T11, T29, T1N, T1q, T1k, T1J,
                    T1U, T1v, T2f, T17;
                T1S           = SIMD_FNMADD(KP797473388, T1R, T1D);
                T1t           = SIMD_FNMADD(KP695895486, T1s, To);
                T20           = SIMD_FNMADD(KP692021471, T1Z, T1W);
                T2d           = SIMD_FMADD(KP695895486, T2c, T1W);
                TY            = SIMD_FNMADD(KP801937735, TX, TI);
                T15           = SIMD_FNMADD(KP695895486, T14, Ty);
                TA            = SIMD_FNMADD(KP692021471, Tz, Ts);
                T10           = SIMD_FMADD(KP695895486, TZ, Ts);
                T26           = SIMD_FNMADD(KP801937735, T25, T22);
                T28           = SIMD_FNMADD(KP695895486, T27, T1Y);
                T1M           = SIMD_FNMADD(KP695895486, T1L, T1x);
                T1p           = SIMD_FNMADD(KP797473388, T1o, T1b);
                T1j           = SIMD_FMADD(KP695895486, T1i, Ta);
                T1I           = SIMD_FMADD(KP797473388, T1H, T1E);
                T1T           = SIMD_FMADD(KP867767478, T1S, T1z);
                T1u           = SIMD_FNMADD(KP797473388, T1t, T1h);
                T21           = SIMD_FNMADD(KP900968867, T20, T1V);
                T2e           = SIMD_FMADD(KP797473388, T2d, T24);
                T16           = SIMD_FNMADD(KP797473388, T15, TI);
                TB            = SIMD_FNMADD(KP900968867, TA, Tp);
                T11           = SIMD_FMADD(KP797473388, T10, TW);
                T29           = SIMD_FNMADD(KP797473388, T28, T22);
                T1N           = SIMD_FNMADD(KP797473388, T1M, T1F);
                T1q           = SIMD_FMADD(KP867767478, T1p, Ta);
                T1k           = SIMD_FMADD(KP797473388, T1j, T1e);
                T1J           = SIMD_FNMADD(KP867767478, T1I, T1x);
                T1U           = SIMD_FNMADD(KP924138961, T1T, T1F);
                T1v           = SIMD_FMADD(KP867767478, T1u, Th);
                io[WS(os, 2)] = SIMD_FMADD(KP974927912, T26, T21);
                io[0]         = SIMD_FNMADD(KP974927912, T26, T21);
                T2f           = SIMD_FNMADD(KP867767478, T2e, T1Y);
                T17           = SIMD_FMADD(KP867767478, T16, Tv);
                ro[WS(os, 2)] = SIMD_FMADD(KP974927912, TY, TB);
                ro[0]         = SIMD_FNMADD(KP974927912, TY, TB);
                T12           = SIMD_FNMADD(KP867767478, T11, Ty);
                T2a           = SIMD_FMADD(KP867767478, T29, T1X);
                T1O           = SIMD_FMADD(KP867767478, T1N, T1y);
                T1r           = SIMD_FNMADD(KP924138961, T1q, T1h);
                T1l           = SIMD_FNMADD(KP867767478, T1k, To);
                T1K           = SIMD_FNMADD(KP924138961, T1J, T1D);
                io[WS(os, 7)] = SIMD_FMADD(KP974927912, T1U, T1C);
                T1w           = SIMD_FNMADD(KP924138961, T1v, T1e);
                T2g           = SIMD_FNMADD(KP924138961, T2f, T23);
                T18           = SIMD_FNMADD(KP924138961, T17, TW);
            }
            T13           = SIMD_FNMADD(KP924138961, T12, TP);
            T2b           = SIMD_FNMADD(KP924138961, T2a, T24);
            T1P           = SIMD_FNMADD(KP924138961, T1O, T1E);
            ro[WS(os, 7)] = SIMD_FMADD(KP974927912, T1r, T3);
            T1m           = SIMD_FNMADD(KP924138961, T1l, T1b);
            io[WS(os, 3)] = SIMD_FMADD(KP974927912, T1K, T1C);
            ro[WS(os, 5)] = SIMD_FMADD(KP974927912, T1w, T3);
            io[WS(os, 6)] = SIMD_FMADD(KP974927912, T2g, T1V);
            ro[WS(os, 4)] = SIMD_FMADD(KP974927912, T18, Tp);
            ro[WS(os, 6)] = SIMD_FMADD(KP974927912, T13, Tp);
            io[WS(os, 4)] = SIMD_FMADD(KP974927912, T2b, T1V);
            io[WS(os, 5)] = SIMD_FMADD(KP974927912, T1P, T1C);
            ro[WS(os, 3)] = SIMD_FMADD(KP974927912, T1m, T3);
        }
    }
}

template <>
struct c2cb_traits<14, 7>
{
    static constexpr long_t flops           = 202;
    static constexpr long_t operations      = 130;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 112;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 130 FP additions, 72 FP multiplications,
 * (or, 58 additions, 0 multiplications, 72 fused multiply/add),
 * 112 stack variables, 6 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT T1n, T3, T1V, Tr, T1z, T20, TI, Ta, T1w, T1X, T15, Tz, T1o,
            TD, Tl;
        SIMD_FLOAT T1F, T1Y, TA, Th, T1p, TG, T1A, TL, T1B, TO, T1r, Tk, Tm,
            T27, TV;
        SIMD_FLOAT T1, T2, Tp, Tq, T1Z, T1q, TH, T17, T21, T1C, TP, T16, Tn,
            T1s, T1L;
        SIMD_FLOAT T18;
        T1 = ri[0];
        T2 = ri[WS(is, 7)];
        Tp = ii[0];
        Tq = ii[WS(is, 7)];
        {
            SIMD_FLOAT Tb, T1x, T6, T1y, T9, T1v, Tv, T1u, Ty, Tc, Te, Tf, T4,
                T5, T7;
            SIMD_FLOAT T8, Tt, Tu, Tw, Tx, TE, T1D, Td, T1E, Tg, TF, TB, TC, TJ,
                TK;
            SIMD_FLOAT TM, TN, Ti, Tj;
            T4  = ri[WS(is, 2)];
            T5  = ri[WS(is, 9)];
            T7  = ri[WS(is, 12)];
            T8  = ri[WS(is, 5)];
            Tt  = ii[WS(is, 2)];
            Tu  = ii[WS(is, 9)];
            Tw  = ii[WS(is, 12)];
            Tx  = ii[WS(is, 5)];
            Tb  = ri[WS(is, 4)];
            T1n = T1 + T2;
            T3  = T1 - T2;
            T1V = Tp + Tq;
            Tr  = Tp - Tq;
            T1x = T4 + T5;
            T6  = T4 - T5;
            T1y = T7 + T8;
            T9  = T7 - T8;
            T1v = Tt + Tu;
            Tv  = Tt - Tu;
            T1u = Tw + Tx;
            Ty  = Tw - Tx;
            Tc  = ri[WS(is, 11)];
            Te  = ri[WS(is, 10)];
            Tf  = ri[WS(is, 3)];
            TB  = ii[WS(is, 4)];
            TC  = ii[WS(is, 11)];
            TE  = ii[WS(is, 10)];
            T1z = T1x + T1y;
            T20 = T1x - T1y;
            TI  = T9 - T6;
            Ta  = T6 + T9;
            T1w = T1u - T1v;
            T1X = T1v + T1u;
            T15 = Tv - Ty;
            Tz  = Tv + Ty;
            T1D = Tb + Tc;
            Td  = Tb - Tc;
            T1E = Te + Tf;
            Tg  = Te - Tf;
            T1o = TB + TC;
            TD  = TB - TC;
            TF  = ii[WS(is, 3)];
            TJ  = ii[WS(is, 6)];
            TK  = ii[WS(is, 13)];
            TM  = ii[WS(is, 8)];
            TN  = ii[WS(is, 1)];
            Ti  = ri[WS(is, 6)];
            Tj  = ri[WS(is, 13)];
            Tl  = ri[WS(is, 8)];
            T1F = T1D + T1E;
            T1Y = T1E - T1D;
            TA  = Td - Tg;
            Th  = Td + Tg;
            T1p = TE + TF;
            TG  = TE - TF;
            T1A = TJ + TK;
            TL  = TJ - TK;
            T1B = TM + TN;
            TO  = TM - TN;
            T1r = Ti + Tj;
            Tk  = Ti - Tj;
            Tm  = ri[WS(is, 1)];
        }
        T27 = SIMD_FNMADD(KP512858431, T1X, T1Y);
        TV  = SIMD_FNMADD(KP512858431, Tz, TA);
        T1Z = T1o + T1p;
        T1q = T1o - T1p;
        TH  = TD + TG;
        T17 = TG - TD;
        T21 = T1A + T1B;
        T1C = T1A - T1B;
        TP  = TL + TO;
        T16 = TO - TL;
        Tn  = Tl - Tm;
        T1s = Tl + Tm;
        T1L = SIMD_FNMADD(KP512858431, T1z, T1q);
        T18 = SIMD_FNMADD(KP512858431, Ta, T17);
        {
            SIMD_FLOAT T1G, T28, T22, T1d, TW, TQ, T1t, T1W, Ts, To, T1H, T23,
                T1e, T2f, T13;
            SIMD_FLOAT T1l, T1c, T1U, TR, T1M, T1Q, T29, T2c, TX, T10, T1i, T19,
                T2g, T14, T1m;
            T1G   = SIMD_FNMADD(KP512858431, T1F, T1C);
            T28   = SIMD_FMADD(KP695895486, T27, T21);
            T22   = SIMD_FMADD(KP512858431, T21, T20);
            T1d   = SIMD_FNMADD(KP512858431, Th, T16);
            io[0] = Tr + Tz + TH + TP;
            TW    = SIMD_FMADD(KP695895486, TV, TP);
            TQ    = SIMD_FMADD(KP512858431, TP, TI);
            T1t   = T1r + T1s;
            T1W   = T1s - T1r;
            Ts    = Tk - Tn;
            To    = Tk + Tn;
            T1H   = SIMD_FMADD(KP695895486, T1G, T1z);
            T23   = SIMD_FNMADD(KP695895486, T22, T1Z);
            T1e   = SIMD_FMADD(KP695895486, T1d, Ta);
            TR    = SIMD_FNMADD(KP695895486, TQ, TH);
            T1M   = SIMD_FMADD(KP695895486, T1L, T1t);
            T1Q   = SIMD_FMADD(KP512858431, T1t, T1w);
            T29   = SIMD_FMADD(KP797473388, T28, T1W);
            T2c   = SIMD_FNMADD(KP512858431, T1Z, T1W);
            TX    = SIMD_FMADD(KP797473388, TW, Ts);
            T10   = SIMD_FNMADD(KP512858431, TH, Ts);
            ro[0] = T3 + Ta + Th + To;
            T1i   = SIMD_FMADD(KP512858431, To, T15);
            T19   = SIMD_FMADD(KP695895486, T18, To);
            {
                SIMD_FLOAT T1I, T24, T1f, TS, T1N, T1R, T2a, T2d, TY, T11, T1j,
                    T1a, T1J, T25, T1g;
                SIMD_FLOAT TT, T1O, T1S, T2b, T2e, TZ, T12, T1k, T1b, T1K, T26,
                    T1h, TU, T1P, T1T;
                T1I           = SIMD_FNMADD(KP797473388, T1H, T1w);
                T24           = SIMD_FNMADD(KP797473388, T23, T1Y);
                T1f           = SIMD_FNMADD(KP797473388, T1e, T15);
                TS            = SIMD_FNMADD(KP797473388, TR, TA);
                T1N           = SIMD_FMADD(KP797473388, T1M, T1C);
                T1R           = SIMD_FNMADD(KP695895486, T1Q, T1F);
                T2a           = SIMD_FNMADD(KP867767478, T29, T1Z);
                T2d           = SIMD_FMADD(KP695895486, T2c, T1X);
                TY            = SIMD_FNMADD(KP867767478, TX, TH);
                T11           = SIMD_FMADD(KP695895486, T10, Tz);
                T1j           = SIMD_FNMADD(KP695895486, T1i, Th);
                T1a           = SIMD_FMADD(KP797473388, T19, T16);
                T1J           = SIMD_FMADD(KP867767478, T1I, T1t);
                T25           = SIMD_FMADD(KP867767478, T24, T1X);
                T1g           = SIMD_FMADD(KP867767478, T1f, To);
                TT            = SIMD_FMADD(KP867767478, TS, Tz);
                T1O           = SIMD_FNMADD(KP867767478, T1N, T1F);
                T1S           = SIMD_FNMADD(KP797473388, T1R, T1q);
                T2b           = SIMD_FNMADD(KP924138961, T2a, T20);
                T2e           = SIMD_FNMADD(KP797473388, T2d, T20);
                TZ            = SIMD_FNMADD(KP924138961, TY, TI);
                T12           = SIMD_FNMADD(KP797473388, T11, TI);
                T1k           = SIMD_FNMADD(KP797473388, T1j, T17);
                T1b           = SIMD_FNMADD(KP867767478, T1a, Th);
                T1K           = SIMD_FNMADD(KP924138961, T1J, T1q);
                T26           = SIMD_FNMADD(KP924138961, T25, T1W);
                T1h           = SIMD_FNMADD(KP924138961, T1g, T17);
                TU            = SIMD_FNMADD(KP924138961, TT, Ts);
                T1P           = SIMD_FNMADD(KP924138961, T1O, T1w);
                T1T           = SIMD_FMADD(KP867767478, T1S, T1z);
                io[WS(os, 5)] = SIMD_FMADD(KP974927912, T2b, T1V);
                T2f           = SIMD_FMADD(KP867767478, T2e, T21);
                io[WS(os, 2)] = SIMD_FMADD(KP974927912, TZ, Tr);
                T13           = SIMD_FMADD(KP867767478, T12, TP);
                T1l           = SIMD_FMADD(KP867767478, T1k, Ta);
                T1c           = SIMD_FNMADD(KP924138961, T1b, T15);
                ro[WS(os, 1)] = SIMD_FMADD(KP974927912, T1K, T1n);
                io[WS(os, 3)] = SIMD_FMADD(KP974927912, T26, T1V);
                ro[WS(os, 6)] = SIMD_FMADD(KP974927912, T1h, T3);
                io[WS(os, 4)] = SIMD_FMADD(KP974927912, TU, Tr);
                ro[WS(os, 5)] = SIMD_FMADD(KP974927912, T1P, T1n);
                T1U           = SIMD_FNMADD(KP924138961, T1T, T1C);
            }
            T2g           = SIMD_FNMADD(KP924138961, T2f, T1Y);
            T14           = SIMD_FNMADD(KP924138961, T13, TA);
            T1m           = SIMD_FNMADD(KP924138961, T1l, T16);
            ro[WS(os, 2)] = SIMD_FMADD(KP974927912, T1c, T3);
            ro[WS(os, 3)] = SIMD_FMADD(KP974927912, T1U, T1n);
            io[WS(os, 1)] = SIMD_FMADD(KP974927912, T2g, T1V);
            io[WS(os, 6)] = SIMD_FMADD(KP974927912, T14, Tr);
            ro[WS(os, 4)] = SIMD_FMADD(KP974927912, T1m, T3);
        }
    }
}

template <>
struct c2cb_traits<14, 8>
{
    static constexpr long_t flops           = 196;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 112;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 124 FP additions, 72 FP multiplications,
 * (or, 52 additions, 0 multiplications, 72 fused multiply/add),
 * 112 stack variables, 6 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT TZ, T3, T1V, T1z, T1B, T1e, T21, Ta, T1E, T15, T1W, TJ, T16,
            Ty, Tl;
        SIMD_FLOAT T1C, T1b, T20, Th, T17, TB, T1f, Tr, T1g, Tu, T11, Tk, Tm,
            T1Q, T22;
        SIMD_FLOAT T1, T2, T1x, T1y, T18, T1D, TC, T1X, T1h, T1A, Tv, T1Y, Tn,
            T10, T1n;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1x = ii[0];
        T1y = ii[WS(is, 7)];
        {
            SIMD_FLOAT Tb, T1c, T6, T1d, T9, T14, TF, T13, TI, Tc, Te, Tf, T4,
                T5, T7;
            SIMD_FLOAT T8, TD, TE, TG, TH, Tz, T1a, Td, T19, Tg, TA, Tw, Tx, Tp,
                Tq;
            SIMD_FLOAT Ts, Tt, Ti, Tj;
            T4  = ii[WS(is, 4)];
            T5  = ii[WS(is, 11)];
            T7  = ii[WS(is, 10)];
            T8  = ii[WS(is, 3)];
            TD  = ri[WS(is, 4)];
            TE  = ri[WS(is, 11)];
            TG  = ri[WS(is, 10)];
            TH  = ri[WS(is, 3)];
            Tb  = ri[WS(is, 6)];
            TZ  = T1 - T2;
            T3  = T1 + T2;
            T1V = T1x + T1y;
            T1z = T1x - T1y;
            T1c = T5 - T4;
            T6  = T4 + T5;
            T1d = T7 - T8;
            T9  = T7 + T8;
            T14 = TD - TE;
            TF  = TD + TE;
            T13 = TH - TG;
            TI  = TG + TH;
            Tc  = ri[WS(is, 13)];
            Te  = ri[WS(is, 8)];
            Tf  = ri[WS(is, 1)];
            Tw  = ii[WS(is, 6)];
            Tx  = ii[WS(is, 13)];
            Tz  = ii[WS(is, 8)];
            T1B = T1c - T1d;
            T1e = T1c + T1d;
            T21 = T6 + T9;
            Ta  = T6 - T9;
            T1E = T14 + T13;
            T15 = T13 - T14;
            T1W = TI - TF;
            TJ  = TF + TI;
            T1a = Tb - Tc;
            Td  = Tb + Tc;
            T19 = Tf - Te;
            Tg  = Te + Tf;
            T16 = Tx - Tw;
            Ty  = Tw + Tx;
            TA  = ii[WS(is, 1)];
            Tp  = ri[WS(is, 2)];
            Tq  = ri[WS(is, 9)];
            Ts  = ri[WS(is, 12)];
            Tt  = ri[WS(is, 5)];
            Ti  = ii[WS(is, 12)];
            Tj  = ii[WS(is, 5)];
            Tl  = ii[WS(is, 2)];
            T1C = T1a + T19;
            T1b = T19 - T1a;
            T20 = Tg - Td;
            Th  = Td + Tg;
            T17 = Tz - TA;
            TB  = Tz + TA;
            T1f = Tq - Tp;
            Tr  = Tp + Tq;
            T1g = Ts - Tt;
            Tu  = Ts + Tt;
            T11 = Tj - Ti;
            Tk  = Ti + Tj;
            Tm  = ii[WS(is, 9)];
        }
        T1Q = SIMD_FMADD(KP512858431, T1B, T1C);
        T22 = SIMD_FNMADD(KP512858431, T21, T20);
        T18 = T16 + T17;
        T1D = T16 - T17;
        TC  = Ty - TB;
        T1X = Ty + TB;
        T1h = T1f - T1g;
        T1A = T1f + T1g;
        Tv  = Tr + Tu;
        T1Y = Tr - Tu;
        Tn  = Tl + Tm;
        T10 = Tl - Tm;
        T1n = SIMD_FMADD(KP512858431, T15, T18);
        {
            SIMD_FLOAT TK, T1L, T1i, T27, TP, T12, T1F, To, T1Z, T1o, T1K, T1w,
                T2g, TY, TL;
            SIMD_FLOAT T1M, T1j, T28, TQ, T1G, T1R, T1s, T23, T2c, TU, T1p, TM,
                T1N, T1k, T29;
            SIMD_FLOAT TR;
            TK  = SIMD_FNMADD(KP512858431, TJ, TC);
            T1L = SIMD_FNMADD(KP512858431, T1D, T1A);
            T1i = SIMD_FMADD(KP512858431, T1h, T1e);
            T27 = SIMD_FMADD(KP512858431, T1X, T1Y);
            TP  = SIMD_FNMADD(KP512858431, Tv, Ta);
            T12 = T10 + T11;
            T1F = T11 - T10;
            To  = Tk - Tn;
            T1Z = Tn + Tk;
            T1o = SIMD_FNMADD(KP695895486, T1n, T1h);
            TL  = SIMD_FMADD(KP695895486, TK, Tv);
            T1M = SIMD_FMADD(KP695895486, T1L, T1B);
            T1j = SIMD_FNMADD(KP695895486, T1i, T1b);
            T28 = SIMD_FNMADD(KP695895486, T27, T21);
            TQ  = SIMD_FMADD(KP695895486, TP, Th);
            T1G = SIMD_FMADD(KP512858431, T1F, T1E);
            T1R = SIMD_FNMADD(KP695895486, T1Q, T1F);
            T1s = SIMD_FNMADD(KP512858431, T1b, T12);
            T23 = SIMD_FMADD(KP695895486, T22, T1Z);
            T2c = SIMD_FNMADD(KP512858431, T1Z, T1W);
            TU  = SIMD_FMADD(KP512858431, Th, To);
            T1p = SIMD_FMADD(KP797473388, T1o, T12);
            TM  = SIMD_FNMADD(KP797473388, TL, To);
            T1N = SIMD_FMADD(KP797473388, T1M, T1E);
            T1k = SIMD_FNMADD(KP797473388, T1j, T18);
            T29 = SIMD_FNMADD(KP797473388, T28, T1W);
            TR  = SIMD_FMADD(KP797473388, TQ, TC);
            {
                SIMD_FLOAT T1H, T1S, T1t, T24, T2d, TV, T1q, TN, T1O, T1l, T2a,
                    TS, T1I, T1T, T1u;
                SIMD_FLOAT T25, T2e, TW, T1r, TO, T1P, T1m, T2b, TT, T1J, T1U,
                    T1v, T26, T2f, TX;
                T1H           = SIMD_FNMADD(KP695895486, T1G, T1D);
                T1S           = SIMD_FMADD(KP797473388, T1R, T1A);
                T1t           = SIMD_FMADD(KP695895486, T1s, T15);
                T24           = SIMD_FNMADD(KP797473388, T23, T1Y);
                T2d           = SIMD_FMADD(KP695895486, T2c, T1X);
                TV            = SIMD_FNMADD(KP695895486, TU, TJ);
                T1q           = SIMD_FNMADD(KP867767478, T1p, T1b);
                TN            = SIMD_FMADD(KP867767478, TM, Th);
                T1O           = SIMD_FNMADD(KP867767478, T1N, T1F);
                T1l           = SIMD_FMADD(KP867767478, T1k, T15);
                T2a           = SIMD_FMADD(KP867767478, T29, T1Z);
                TS            = SIMD_FNMADD(KP867767478, TR, TJ);
                T1I           = SIMD_FNMADD(KP797473388, T1H, T1C);
                T1T           = SIMD_FNMADD(KP867767478, T1S, T1D);
                T1u           = SIMD_FMADD(KP797473388, T1t, T1e);
                T25           = SIMD_FMADD(KP867767478, T24, T1X);
                T2e           = SIMD_FMADD(KP797473388, T2d, T20);
                TW            = SIMD_FNMADD(KP797473388, TV, Ta);
                T1r           = SIMD_FMADD(KP924138961, T1q, T1e);
                TO            = SIMD_FNMADD(KP924138961, TN, Ta);
                T1P           = SIMD_FMADD(KP924138961, T1O, T1C);
                T1m           = SIMD_FMADD(KP924138961, T1l, T12);
                T2b           = SIMD_FNMADD(KP924138961, T2a, T20);
                TT            = SIMD_FNMADD(KP924138961, TS, To);
                T1J           = SIMD_FMADD(KP867767478, T1I, T1B);
                T1U           = SIMD_FMADD(KP924138961, T1T, T1E);
                T1v           = SIMD_FNMADD(KP867767478, T1u, T1h);
                T26           = SIMD_FNMADD(KP924138961, T25, T1W);
                T2f           = SIMD_FNMADD(KP867767478, T2e, T21);
                TX            = SIMD_FMADD(KP867767478, TW, Tv);
                ro[WS(os, 5)] = SIMD_FMADD(KP974927912, T1r, TZ);
                ro[0]         = SIMD_FMADD(KP974927912, TO, T3);
                io[WS(os, 3)] = SIMD_FMADD(KP974927912, T1P, T1z);
                ro[WS(os, 1)] = SIMD_FMADD(KP974927912, T1m, TZ);
                io[WS(os, 2)] = SIMD_FMADD(KP974927912, T2b, T1V);
                ro[WS(os, 4)] = SIMD_FMADD(KP974927912, TT, T3);
                T1K           = SIMD_FMADD(KP924138961, T1J, T1A);
                io[WS(os, 5)] = SIMD_FMADD(KP974927912, T1U, T1z);
                T1w           = SIMD_FMADD(KP924138961, T1v, T18);
                io[0]         = SIMD_FMADD(KP974927912, T26, T1V);
                T2g           = SIMD_FNMADD(KP924138961, T2f, T1Y);
                TY            = SIMD_FNMADD(KP924138961, TX, TC);
            }
            io[WS(os, 1)] = SIMD_FMADD(KP974927912, T1K, T1z);
            ro[WS(os, 3)] = SIMD_FMADD(KP974927912, T1w, TZ);
            io[WS(os, 4)] = SIMD_FMADD(KP974927912, T2g, T1V);
            ro[WS(os, 2)] = SIMD_FMADD(KP974927912, TY, T3);
        }
    }
}

template <>
struct c2cb_traits<14, 9>
{
    static constexpr long_t flops           = 172;
    static constexpr long_t operations      = 112;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 107;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 9 -name c2cb
 * -standalone */

/*
 * This function contains 112 FP additions, 60 FP multiplications,
 * (or, 52 additions, 0 multiplications, 60 fused multiply/add),
 * 107 stack variables, 7 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 9>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    {
        SIMD_FLOAT TZ, T3, T1Q, T1u, Th, T1z, TC, T1w, T1S, T1e, T1A, Ta, T15,
            T1V, T1v;
        SIMD_FLOAT TJ, T11, Tk, T1B, T1U, T18, T1b, T1T, TK, T10, Tn, T1R, T1h,
            T1x, Tv;
        SIMD_FLOAT T1o, T1, T2, T1s, T1t, T1a, T19, T16, T17, Ts, T1g, Tr, Tt,
            Ti, Tj;
        SIMD_FLOAT Tl, Tm, T1f, Tu, T23, T1n, T12, T1W, T1y, To, T1i, T1L, TU,
            TL, T22;
        SIMD_FLOAT T1p;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1s = ii[0];
        T1t = ii[WS(is, 7)];
        {
            SIMD_FLOAT T4, Td, Tg, Ty, TB, T5, T7, T8, Tb, Tc, Te, Tf, Tw, Tx,
                Tz;
            SIMD_FLOAT TA, TD, TE, TG, TH, T6, T1c, T9, T1d, TF, T13, TI, T14,
                Tp, Tq;
            Tb  = ri[WS(is, 3)];
            Tc  = ri[WS(is, 10)];
            Te  = ri[WS(is, 4)];
            Tf  = ri[WS(is, 11)];
            Tw  = ii[WS(is, 10)];
            Tx  = ii[WS(is, 3)];
            Tz  = ii[WS(is, 11)];
            TA  = ii[WS(is, 4)];
            T4  = ii[WS(is, 2)];
            TZ  = T1 + T2;
            T3  = T1 - T2;
            T1Q = T1s + T1t;
            T1u = T1s - T1t;
            T1a = Tc + Tb;
            Td  = Tb - Tc;
            T19 = Te + Tf;
            Tg  = Te - Tf;
            T16 = Tw + Tx;
            Ty  = Tw - Tx;
            T17 = TA + Tz;
            TB  = Tz - TA;
            T5  = ii[WS(is, 9)];
            T7  = ii[WS(is, 5)];
            T8  = ii[WS(is, 12)];
            TD  = ri[WS(is, 9)];
            TE  = ri[WS(is, 2)];
            TG  = ri[WS(is, 12)];
            TH  = ri[WS(is, 5)];
            Th  = Td - Tg;
            T1z = Tg + Td;
            Tp  = ri[WS(is, 1)];
            Tq  = ri[WS(is, 8)];
            TC  = Ty + TB;
            T1w = TB - Ty;
            T6  = T4 - T5;
            T1c = T4 + T5;
            T9  = T7 - T8;
            T1d = T8 + T7;
            TF  = TD - TE;
            T13 = TE + TD;
            TI  = TG - TH;
            T14 = TG + TH;
            Ts  = ri[WS(is, 6)];
            T1g = Tq + Tp;
            Tr  = Tp - Tq;
            Tt  = ri[WS(is, 13)];
            Ti  = ii[WS(is, 8)];
            Tj  = ii[WS(is, 1)];
            T1S = T1c + T1d;
            T1e = T1c - T1d;
            T1A = T9 - T6;
            Ta  = T6 + T9;
            Tl  = ii[WS(is, 13)];
            T15 = T13 + T14;
            T1V = T14 - T13;
            T1v = TF + TI;
            TJ  = TF - TI;
            Tm  = ii[WS(is, 6)];
        }
        T1f = Ts + Tt;
        Tu  = Ts - Tt;
        T11 = Ti + Tj;
        Tk  = Ti - Tj;
        T1B = SIMD_FMADD(KP512858431, T1A, T1z);
        T1U = T16 + T17;
        T18 = T16 - T17;
        T1b = T19 + T1a;
        T1T = T19 - T1a;
        TK  = SIMD_FMADD(KP512858431, TJ, TC);
        T10 = Tm + Tl;
        Tn  = Tl - Tm;
        T1R = T1g - T1f;
        T1h = T1f + T1g;
        T1x = Tu + Tr;
        Tv  = Tr - Tu;
        T1o = SIMD_FMADD(KP512858431, T15, T18);
        T23 = SIMD_FMADD(KP512858431, T1S, T1T);
        T1n = SIMD_FMADD(KP924138961, T1b, T1e);
        T12 = T10 - T11;
        T1W = T11 + T10;
        T1y = Tn - Tk;
        To  = Tk + Tn;
        T1i = SIMD_FNMADD(KP512858431, T1h, T1e);
        T1L = SIMD_FMADD(KP512858431, T1w, T1x);
        TU  = SIMD_FNMADD(KP512858431, Tv, Ta);
        TL  = SIMD_FNMADD(KP695895486, TK, Tv);
        T22 = SIMD_FMADD(KP924138961, T1U, T1V);
        T1p = SIMD_FNMADD(KP695895486, T1o, T1h);
        {
            SIMD_FLOAT T24, T1X, T1C, T1G, TP, T1j, T1M, TV, TM, T1q, T25, T1Y,
                T1D, T1H, TQ;
            SIMD_FLOAT T1k, T1N, TW, TN, T1r, T26, T1Z, T1E, T1I, TR, T1l, T1O,
                TX, TO, T20;
            SIMD_FLOAT T1F, T1J, TS, T1m, T1P, TY, T21, T1K, TT;
            T24           = SIMD_FNMADD(KP695895486, T23, T1W);
            T1X           = SIMD_FNMADD(KP512858431, T1W, T1V);
            T1C           = SIMD_FNMADD(KP695895486, T1B, T1y);
            T1G           = SIMD_FNMADD(KP512858431, T1y, T1v);
            TP            = SIMD_FMADD(KP512858431, Th, To);
            T1j           = SIMD_FMADD(KP695895486, T1i, T1b);
            T1M           = SIMD_FNMADD(KP695895486, T1L, T1A);
            TV            = SIMD_FMADD(KP695895486, TU, Th);
            TM            = SIMD_FNMADD(KP797473388, TL, To);
            T1q           = SIMD_FMADD(KP797473388, T1p, T12);
            T25           = SIMD_FMADD(KP797473388, T24, T1R);
            T1Y           = SIMD_FMADD(KP695895486, T1X, T1U);
            T1D           = SIMD_FNMADD(KP797473388, T1C, T1x);
            T1H           = SIMD_FMADD(KP695895486, T1G, T1w);
            TQ            = SIMD_FNMADD(KP695895486, TP, TJ);
            T1k           = SIMD_FMADD(KP797473388, T1j, T18);
            T1N           = SIMD_FMADD(KP797473388, T1M, T1v);
            TW            = SIMD_FMADD(KP797473388, TV, TC);
            TN            = SIMD_FMADD(KP867767478, TM, Th);
            T1r           = SIMD_FNMADD(KP801937735, T1q, T1n);
            T26           = SIMD_FNMADD(KP801937735, T25, T22);
            T1Z           = SIMD_FMADD(KP797473388, T1Y, T1T);
            T1E           = SIMD_FMADD(KP867767478, T1D, T1w);
            T1I           = SIMD_FMADD(KP797473388, T1H, T1z);
            TR            = SIMD_FMADD(KP797473388, TQ, Ta);
            T1l           = SIMD_FNMADD(KP867767478, T1k, T15);
            T1O           = SIMD_FNMADD(KP867767478, T1N, T1y);
            TX            = SIMD_FNMADD(KP867767478, TW, TJ);
            TO            = SIMD_FMADD(KP924138961, TN, Ta);
            ro[WS(os, 3)] = SIMD_FNMADD(KP974927912, T1r, TZ);
            io[WS(os, 3)] = SIMD_FNMADD(KP974927912, T26, T1Q);
            T20           = SIMD_FNMADD(KP867767478, T1Z, T1S);
            T1F           = SIMD_FMADD(KP924138961, T1E, T1v);
            T1J           = SIMD_FNMADD(KP867767478, T1I, T1A);
            TS            = SIMD_FNMADD(KP867767478, TR, Tv);
            T1m           = SIMD_FNMADD(KP924138961, T1l, T12);
            T1P           = SIMD_FMADD(KP924138961, T1O, T1z);
            TY            = SIMD_FMADD(KP924138961, TX, To);
            ro[0]         = SIMD_FMADD(KP974927912, TO, T3);
            T21           = SIMD_FNMADD(KP924138961, T20, T1R);
            io[0]         = SIMD_FMADD(KP974927912, T1F, T1u);
            T1K           = SIMD_FMADD(KP924138961, T1J, T1x);
            TT            = SIMD_FMADD(KP924138961, TS, TC);
            ro[WS(os, 1)] = SIMD_FMADD(KP974927912, T1m, TZ);
            io[WS(os, 4)] = SIMD_FMADD(KP974927912, T1P, T1u);
            ro[WS(os, 2)] = SIMD_FMADD(KP974927912, TY, T3);
            io[WS(os, 1)] = SIMD_FMADD(KP974927912, T21, T1Q);
            io[WS(os, 2)] = SIMD_FMADD(KP974927912, T1K, T1u);
            ro[WS(os, 4)] = SIMD_FMADD(KP974927912, TT, T3);
        }
    }
}

template <>
struct c2cb_traits<14, 10>
{
    static constexpr long_t flops           = 148;
    static constexpr long_t operations      = 100;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 96;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 10 -name c2cb
 * -standalone */

/*
 * This function contains 100 FP additions, 48 FP multiplications,
 * (or, 52 additions, 0 multiplications, 48 fused multiply/add),
 * 96 stack variables, 7 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 10>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    {
        SIMD_FLOAT TU, T3, T1G, T1p, T1s, T16, T13, T1t, T19, T1r, T1I, T1u,
            T10, TK, T1L;
        SIMD_FLOAT T1J, Th, T1K, TD, T1c, T1q, T1H, Tw, Ti, T1v, TX, Tp, T1M,
            T1d, T1B;
        SIMD_FLOAT T1S, TP, T1T, Ta, TV, Tl, TW, To, T1, T2, T1n, T1o, TL, T1w,
            T1i;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1n = ii[0];
        T1o = ii[WS(is, 7)];
        {
            SIMD_FLOAT Td, Tg, Tz, TC, Tt, TY, TG, TZ, TJ, Tu, Ts, T1b, Tj, Tk,
                Tm;
            SIMD_FLOAT Tn, T4, T14, T15, T11, T12, T5, T7, T8, Tb, Tc, Te, Tf,
                Tx, Ty;
            SIMD_FLOAT TA, TB, TE, TF, TH, TI, T18, T6, T17, T9, Tq, Tr, T1a,
                Tv;
            Tb  = ri[WS(is, 4)];
            Tc  = ri[WS(is, 11)];
            Te  = ri[WS(is, 10)];
            Tf  = ri[WS(is, 3)];
            Tx  = ii[WS(is, 10)];
            Ty  = ii[WS(is, 3)];
            TA  = ii[WS(is, 4)];
            TB  = ii[WS(is, 11)];
            T4  = ii[WS(is, 2)];
            TU  = T1 - T2;
            T3  = T1 + T2;
            T1G = T1n + T1o;
            T1p = T1n - T1o;
            Td  = Tb + Tc;
            T14 = Tb - Tc;
            Tg  = Te + Tf;
            T15 = Tf - Te;
            Tz  = Tx + Ty;
            T11 = Tx - Ty;
            TC  = TA + TB;
            T12 = TB - TA;
            T5  = ii[WS(is, 9)];
            T7  = ii[WS(is, 12)];
            T8  = ii[WS(is, 5)];
            TE  = ri[WS(is, 2)];
            TF  = ri[WS(is, 9)];
            TH  = ri[WS(is, 12)];
            TI  = ri[WS(is, 5)];
            T1s = T14 + T15;
            T16 = T14 - T15;
            Tq  = ri[WS(is, 6)];
            Tr  = ri[WS(is, 13)];
            Tt  = ri[WS(is, 8)];
            T13 = T11 + T12;
            T1t = T11 - T12;
            T18 = T4 - T5;
            T6  = T4 + T5;
            T17 = T7 - T8;
            T9  = T7 + T8;
            TY  = TE - TF;
            TG  = TE + TF;
            TZ  = TH - TI;
            TJ  = TH + TI;
            Tu  = ri[WS(is, 1)];
            Ts  = Tq + Tr;
            T1b = Tq - Tr;
            Tj  = ii[WS(is, 6)];
            Tk  = ii[WS(is, 13)];
            Tm  = ii[WS(is, 8)];
            T19 = T17 - T18;
            T1r = T18 + T17;
            T1I = T6 + T9;
            Ta  = T6 - T9;
            Tn  = ii[WS(is, 1)];
            T1u = TY - TZ;
            T10 = TY + TZ;
            TK  = TG + TJ;
            T1L = TJ - TG;
            T1a = Tu - Tt;
            Tv  = Tt + Tu;
            T1J = Td - Tg;
            Th  = Td + Tg;
            TV  = Tk - Tj;
            Tl  = Tj + Tk;
            T1K = Tz + TC;
            TD  = Tz - TC;
            TW  = Tm - Tn;
            To  = Tm + Tn;
            T1c = T1a - T1b;
            T1q = T1b + T1a;
            T1H = Tv - Ts;
            Tw  = Ts + Tv;
        }
        Ti  = SIMD_FMADD(KP924138961, Th, Ta);
        T1v = TV - TW;
        TX  = TV + TW;
        Tp  = Tl - To;
        T1M = Tl + To;
        T1d = SIMD_FMADD(KP512858431, T1c, T19);
        T1B = SIMD_FNMADD(KP512858431, T1t, T1q);
        T1S = SIMD_FMADD(KP924138961, T1K, T1L);
        TP  = SIMD_FNMADD(KP512858431, Tw, Ta);
        T1T = SIMD_FMADD(KP512858431, T1I, T1J);
        TL  = SIMD_FMADD(KP512858431, TK, TD);
        T1w = SIMD_FMADD(KP512858431, T1v, T1u);
        T1i = SIMD_FNMADD(KP512858431, T16, TX);
        {
            SIMD_FLOAT T1N, T1e, T1C, TQ, T1U, TM, T1x, T1j, T1O, T1f, T1D, TR,
                T1V, TN, T1y;
            SIMD_FLOAT T1k, T1P, T1g, T1E, TS, T1W, TO, T1z, T1l, T1Q, T1h, T1F,
                TT, T1A, T1m;
            SIMD_FLOAT T1R;
            T1N           = SIMD_FNMADD(KP512858431, T1M, T1L);
            T1e           = SIMD_FMADD(KP695895486, T1d, T16);
            T1C           = SIMD_FMADD(KP695895486, T1B, T1r);
            TQ            = SIMD_FMADD(KP695895486, TP, Th);
            T1U           = SIMD_FNMADD(KP695895486, T1T, T1M);
            TM            = SIMD_FNMADD(KP695895486, TL, Tw);
            T1x           = SIMD_FMADD(KP695895486, T1w, T1t);
            T1j           = SIMD_FMADD(KP695895486, T1i, T10);
            T1O           = SIMD_FMADD(KP695895486, T1N, T1K);
            T1f           = SIMD_FNMADD(KP797473388, T1e, T13);
            T1D           = SIMD_FMADD(KP797473388, T1C, T1u);
            TR            = SIMD_FMADD(KP797473388, TQ, TD);
            T1V           = SIMD_FMADD(KP797473388, T1U, T1H);
            TN            = SIMD_FMADD(KP797473388, TM, Tp);
            T1y           = SIMD_FNMADD(KP797473388, T1x, T1s);
            T1k           = SIMD_FMADD(KP797473388, T1j, T19);
            T1P           = SIMD_FMADD(KP797473388, T1O, T1J);
            T1g           = SIMD_FMADD(KP867767478, T1f, T10);
            T1E           = SIMD_FMADD(KP867767478, T1D, T1v);
            TS            = SIMD_FNMADD(KP867767478, TR, TK);
            T1W           = SIMD_FNMADD(KP801937735, T1V, T1S);
            TO            = SIMD_FNMADD(KP801937735, TN, Ti);
            T1z           = SIMD_FMADD(KP867767478, T1y, T1r);
            T1l           = SIMD_FMADD(KP867767478, T1k, T1c);
            T1Q           = SIMD_FNMADD(KP867767478, T1P, T1I);
            T1h           = SIMD_FNMADD(KP924138961, T1g, TX);
            T1F           = SIMD_FMADD(KP924138961, T1E, T1s);
            TT            = SIMD_FNMADD(KP924138961, TS, Tp);
            io[WS(os, 2)] = SIMD_FNMADD(KP974927912, T1W, T1G);
            ro[WS(os, 2)] = SIMD_FNMADD(KP974927912, TO, T3);
            T1A           = SIMD_FNMADD(KP924138961, T1z, T1q);
            T1m           = SIMD_FMADD(KP924138961, T1l, T13);
            T1R           = SIMD_FNMADD(KP924138961, T1Q, T1H);
            ro[WS(os, 1)] = SIMD_FMADD(KP974927912, T1h, TU);
            io[WS(os, 3)] = SIMD_FMADD(KP974927912, T1F, T1p);
            ro[0]         = SIMD_FMADD(KP974927912, TT, T3);
            io[WS(os, 1)] = SIMD_FMADD(KP974927912, T1A, T1p);
            ro[WS(os, 3)] = SIMD_FMADD(KP974927912, T1m, TU);
            io[0]         = SIMD_FMADD(KP974927912, T1R, T1G);
        }
    }
}

template <>
struct c2cb_traits<14, 11>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 88;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 78;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 11 -name c2cb
 * -standalone */

/*
 * This function contains 88 FP additions, 38 FP multiplications,
 * (or, 50 additions, 0 multiplications, 38 fused multiply/add),
 * 78 stack variables, 6 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 11>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    {
        SIMD_FLOAT T1, T2, T1f, T1g, T3, T1h, Th, T1m, T1j, TC, TX, TY, T12, To,
            T1l;
        SIMD_FLOAT Tv, T1k, T6, T11, T17, TZ, T9, T1z, T14, T1i, TJ, T1a, T1y,
            T1B, T1C;
        SIMD_FLOAT TW;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T1f = ii[0];
        T1g = ii[WS(is, 7)];
        {
            SIMD_FLOAT T18, T19, TU, TV, T16, T15, T4, Tr, Tu, T5, TF, T7, T8,
                T13, TI;
            SIMD_FLOAT Tl, Td, Tg, Ty, TB, Tm, Tk, Tb, Tc, Te, Tf, Tw, Tx, Tz,
                TA;
            SIMD_FLOAT Ti, Tj, Tp, Tq, Ts, Tt, TD, TE, TG, Tn, TH;
            Tb  = ri[WS(is, 2)];
            Tc  = ri[WS(is, 9)];
            Te  = ri[WS(is, 12)];
            Tf  = ri[WS(is, 5)];
            Tw  = ii[WS(is, 12)];
            Tx  = ii[WS(is, 5)];
            Tz  = ii[WS(is, 2)];
            TA  = ii[WS(is, 9)];
            Ti  = ii[WS(is, 10)];
            T3  = T1 - T2;
            Tj  = ii[WS(is, 3)];
            T1h = T1f - T1g;
            Tl  = ii[WS(is, 11)];
            T18 = Tb + Tc;
            Td  = Tb - Tc;
            T19 = Te + Tf;
            Tg  = Te - Tf;
            TU  = Tw + Tx;
            Ty  = Tw - Tx;
            TV  = Tz + TA;
            TB  = Tz - TA;
            Tm  = ii[WS(is, 4)];
            T16 = Ti + Tj;
            Tk  = Ti - Tj;
            Tp  = ri[WS(is, 4)];
            Tq  = ri[WS(is, 11)];
            Ts  = ri[WS(is, 3)];
            Tt  = ri[WS(is, 10)];
            Th  = Td + Tg;
            T1m = Td - Tg;
            TD  = ri[WS(is, 1)];
            TE  = ri[WS(is, 8)];
            TG  = ri[WS(is, 6)];
            T1j = Ty + TB;
            TC  = Ty - TB;
            T15 = Tl + Tm;
            Tn  = Tl - Tm;
            TH  = ri[WS(is, 13)];
            T4  = ii[WS(is, 13)];
            TX  = Tp + Tq;
            Tr  = Tp - Tq;
            TY  = Ts + Tt;
            Tu  = Ts - Tt;
            T5  = ii[WS(is, 6)];
            TF  = TD - TE;
            T12 = TD + TE;
            T7  = ii[WS(is, 8)];
            T8  = ii[WS(is, 1)];
            To  = Tk + Tn;
            T1l = Tk - Tn;
            T13 = TG + TH;
            TI  = TG - TH;
            Tv  = Tr - Tu;
            T1k = Tr + Tu;
            T6  = T4 - T5;
            T11 = T4 + T5;
            T17 = T15 - T16;
            TZ  = T7 + T8;
            T9  = T7 - T8;
            T1z = T16 + (SIMD_FMADD(KP867767478, T13, T15));
            T14 = T12 + T13;
            T1i = TF + TI;
            TJ  = TF - TI;
            T1a = T18 + T19;
            T1y = T18 - T19;
            T1B = TY - TX;
            T1C = TU + TV;
            TW  = TU - TV;
        }
        {
            SIMD_FLOAT T10, T1A, Ta, T1n, T1t, TK, T1b, T1D, T1o, TP, T1u, TL,
                T1c, T1E, T1p;
            SIMD_FLOAT TQ, T1v, TM, T1d, T1F, T1q, TR, T1w, TN, T1e, T1G, T1r,
                TS, T1x, TO;
            SIMD_FLOAT T1s, TT;
            T10 = TX + (SIMD_FMADD(KP867767478, TZ, TY));
            T1A = T11 + TZ;
            Ta  = T6 + T9;
            T1n = T6 - T9;
            T1t = SIMD_FNMADD(KP512858431, T1l, T1i);
            TK  = SIMD_FMADD(KP512858431, TJ, TC);
            T1b = SIMD_FNMADD(KP512858431, T1a, T17);
            T1D = SIMD_FNMADD(KP512858431, T1C, T1B);
            T1o = SIMD_FMADD(KP512858431, T1n, T1m);
            TP  = SIMD_FNMADD(KP512858431, Tv, Ta);
            T1u = SIMD_FMADD(KP695895486, T1t, T1j);
            TL  = SIMD_FMADD(KP695895486, TK, Tv);
            T1c = SIMD_FMADD(KP695895486, T1b, T14);
            T1E = SIMD_FMADD(KP695895486, T1D, T1A);
            T1p = SIMD_FMADD(KP695895486, T1o, T1l);
            TQ  = SIMD_FMADD(KP695895486, TP, Th);
            T1v = SIMD_FMADD(KP797473388, T1u, T1m);
            TM  = SIMD_FNMADD(KP797473388, TL, To);
            T1d = SIMD_FMADD(KP797473388, T1c, T11);
            T1F = SIMD_FMADD(KP797473388, T1E, T12);
            T1q = SIMD_FNMADD(KP797473388, T1p, T1k);
            TR  = SIMD_FMADD(KP797473388, TQ, TC);
            T1w = SIMD_FMADD(KP867767478, T1v, T1n);
            TN  = SIMD_FMADD(KP867767478, TM, Th);
            T1e = SIMD_FNMADD(KP867767478, T1d, T10);
            T1G = SIMD_FNMADD(KP867767478, T1F, T1z);
            T1r = SIMD_FMADD(KP867767478, T1q, T1j);
            TS  = SIMD_FMADD(KP867767478, TR, TJ);
            T1x = SIMD_FMADD(KP924138961, T1w, T1k);
            TO  = SIMD_FNMADD(KP924138961, TN, Ta);
            ro[WS(os, 1)] =
                T1 +
                SIMD_FMADD(KP974927912, SIMD_FNMADD(KP924138961, T1e, TW), T2);
            io[WS(os, 1)] =
                T1f + SIMD_FMADD(KP974927912,
                                 SIMD_FNMADD(KP924138961, T1G, T1y), T1g);
            T1s           = SIMD_FNMADD(KP924138961, T1r, T1i);
            TT            = SIMD_FMADD(KP924138961, TS, To);
            io[WS(os, 2)] = SIMD_FMADD(KP974927912, T1x, T1h);
            ro[0]         = SIMD_FMADD(KP974927912, TO, T3);
            io[0]         = SIMD_FMADD(KP974927912, T1s, T1h);
            ro[WS(os, 2)] = SIMD_FMADD(KP974927912, TT, T3);
        }
    }
}

template <>
struct c2cb_traits<14, 12>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 76;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 95;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 12 -name c2cb
 * -standalone */

/*
 * This function contains 76 FP additions, 30 FP multiplications,
 * (or, 46 additions, 0 multiplications, 30 fused multiply/add),
 * 95 stack variables, 7 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 12>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    {
        SIMD_FLOAT T1, T17, T2, T1g, TP, Ts, TR, TT, T1i, TO, T1j, TQ, TV, Tm,
            Ti;
        SIMD_FLOAT T9, T1m, TX, Tf, TJ, T16, Tc, TY, TW, T1k, T1h, T1d, TK, T18,
            TZ;
        SIMD_FLOAT T1l, Tj, T1e, T10, T1n, TL, T1f, T11, T1o, T12, T1p, T13,
            T1q;
        {
            SIMD_FLOAT T14, TS, Tt, Tg, T5, Th, T15, T8, Td, Te, T1c, TI, Ta,
                Tb, Tn;
            SIMD_FLOAT To, Tq, Tr, TE, TF, TB, TC, Tx, Ty, Tu, Tv, T3, Tp, TN,
                Tz;
            SIMD_FLOAT TM, Tw, T4, T6, T1a, T7, Tk, TH, Tl, TG, TD, T1b, TA, TU,
                T19;
            T1  = ri[0];
            T17 = ii[0];
            T2  = ri[WS(is, 7)];
            T1g = ii[WS(is, 7)];
            Tn  = ri[WS(is, 6)];
            To  = ri[WS(is, 13)];
            Tq  = ri[WS(is, 8)];
            Tr  = ri[WS(is, 1)];
            TE  = ri[WS(is, 12)];
            TF  = ri[WS(is, 5)];
            TB  = ri[WS(is, 2)];
            TC  = ri[WS(is, 9)];
            Tx  = ii[WS(is, 10)];
            Ty  = ii[WS(is, 3)];
            Tu  = ii[WS(is, 4)];
            Tv  = ii[WS(is, 11)];
            T3  = ii[WS(is, 12)];
            T14 = Tn - To;
            Tp  = Tn + To;
            TP  = Tr - Tq;
            Ts  = Tq + Tr;
            TS  = TE - TF;
            TG  = TE + TF;
            TR  = TB - TC;
            TD  = TB + TC;
            TN  = Tx - Ty;
            Tz  = Tx + Ty;
            TM  = Tv - Tu;
            Tw  = Tu + Tv;
            T4  = ii[WS(is, 5)];
            T6  = ii[WS(is, 2)];
            T1a = T14 + TP;
            Tt  = Tp + Ts;
            T7  = ii[WS(is, 9)];
            Tk  = ii[WS(is, 6)];
            TT  = TR + TS;
            T1i = TD - TG;
            TH  = TD + TG;
            Tl  = ii[WS(is, 13)];
            Tg  = ii[WS(is, 8)];
            T1b = TM - TN;
            TO  = TM + TN;
            TA  = Tw - Tz;
            T1j = (SIMD_FMADD(KP867767478, Tp, Tw)) + Tz;
            T5  = T3 + T4;
            TQ  = T3 - T4;
            Th  = ii[WS(is, 1)];
            T15 = T6 - T7;
            T8  = T6 + T7;
            Td  = ri[WS(is, 10)];
            Te  = ri[WS(is, 3)];
            TV  = Tl - Tk;
            Tm  = Tk + Tl;
            T1c = SIMD_FMADD(KP512858431, T1b, T1a);
            TI  = SIMD_FNMADD(KP512858431, TH, TA);
            Ta  = ri[WS(is, 4)];
            Tb  = ri[WS(is, 11)];
            Ti  = Tg + Th;
            TU  = Tg - Th;
            T19 = TQ + T15;
            T9  = T5 - T8;
            T1m = T5 + T8;
            TX  = Te - Td;
            Tf  = Td + Te;
            TJ  = SIMD_FMADD(KP695895486, TI, Tt);
            T16 = SIMD_FMADD(KP867767478, T15, T14);
            Tc  = Ta + Tb;
            TY  = Ta - Tb;
            TW  = TU + TV;
            T1k = Ti + Tm;
            T1h = SIMD_FMADD(KP867767478, TS, TU);
            T1d = SIMD_FMADD(KP695895486, T1c, T19);
        }
        TK  = SIMD_FMADD(KP797473388, TJ, Tm);
        T18 = TY + TX;
        TZ  = TX - TY;
        T1l = Tf - Tc;
        Tj  = Tc + (SIMD_FMADD(KP867767478, Ti, Tf));
        T1e = SIMD_FMADD(KP797473388, T1d, TR);
        T10 = SIMD_FMADD(KP512858431, TZ, TW);
        T1n = SIMD_FNMADD(KP512858431, T1m, T1l);
        TL  = SIMD_FNMADD(KP867767478, TK, Tj);
        T1f = SIMD_FMADD(KP867767478, T1e, TV);
        T11 = SIMD_FMADD(KP695895486, T10, TT);
        T1o = SIMD_FMADD(KP695895486, T1n, T1k);
        ro[0] =
            T1 + SIMD_FMADD(KP974927912, SIMD_FNMADD(KP924138961, TL, T9), T2);
        io[WS(os, 1)] =
            SIMD_FMADD(KP974927912, SIMD_FMADD(KP924138961, T1f, T18), T17) -
            (SIMD_FMADD(KP900968867, T1h, T1g));
        T12 = SIMD_FMADD(KP797473388, T11, TQ);
        T1p = SIMD_FMADD(KP797473388, T1o, Ts);
        T13 = SIMD_FMADD(KP867767478, T12, TP);
        T1q = SIMD_FNMADD(KP867767478, T1p, T1j);
        ro[WS(os, 1)] =
            SIMD_FMADD(KP974927912, SIMD_FMADD(KP924138961, T13, TO), T1) -
            (SIMD_FMADD(KP900968867, T16, T2));
        io[0] = T17 + SIMD_FMADD(KP974927912,
                                 SIMD_FNMADD(KP924138961, T1q, T1i), T1g);
    }
}

template <>
struct c2cb_traits<14, 13>
{
    static constexpr long_t flops           = 54;
    static constexpr long_t operations      = 38;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 65;
    static constexpr long_t constants       = 7;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -skip-k 13 -name c2cb
 * -standalone */

/*
 * This function contains 38 FP additions, 16 FP multiplications,
 * (or, 22 additions, 0 multiplications, 16 fused multiply/add),
 * 65 stack variables, 7 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && SkippedOutputs == 13>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP924138961, +0.924138961091093314542963749712412773983469263);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP797473388, +0.797473388882403961415688254214434877743320657);
    DK(KP695895486, +0.695895486700943376465352387651397991244687582);
    DK(KP512858431, +0.512858431636276949746649808137724830241051169);
    DK(KP867767478, +0.867767478235116240951536665696717509219981456);
    {
        SIMD_FLOAT T1, TM, TE, TV, Te, Th, Tk, T4, TH, Tw, Tx, T7, TO, Tp, Tq;
        SIMD_FLOAT Tb, Tl, Tt, Tu, To, TL, TK, Tc, Td, TI, TJ, Tf, Tg, Ti, Tj;
        SIMD_FLOAT T2, T3, TF, TG, T5, T6, T9, Ta, Tm, Tn, Ty, T8, TQ, Tr, TP;
        SIMD_FLOAT Tv, TW, Ts, TR, TN, Tz, TS, TA, TT, TB, TU, TC, TD;
        T1    = ri[0];
        TM    = ii[0];
        TE    = ri[WS(is, 7)];
        TV    = ii[WS(is, 7)];
        Tc    = ii[WS(is, 12)];
        Td    = ii[WS(is, 5)];
        TI    = ii[WS(is, 2)];
        TJ    = ii[WS(is, 9)];
        Tf    = ri[WS(is, 2)];
        Tg    = ri[WS(is, 9)];
        Ti    = ri[WS(is, 12)];
        Tj    = ri[WS(is, 5)];
        T2    = ii[WS(is, 11)];
        T3    = ii[WS(is, 4)];
        TF    = ri[WS(is, 6)];
        TG    = ri[WS(is, 13)];
        T5    = ii[WS(is, 10)];
        Te    = Tc - Td;
        T6    = ii[WS(is, 3)];
        TK    = TI - TJ;
        T9    = ri[WS(is, 1)];
        Th    = Tf - Tg;
        Ta    = ri[WS(is, 8)];
        Tk    = Ti - Tj;
        Tm    = ii[WS(is, 13)];
        T4    = T2 - T3;
        Tn    = ii[WS(is, 6)];
        TH    = TF - TG;
        Tw    = ri[WS(is, 4)];
        Tx    = ri[WS(is, 11)];
        T7    = T5 - T6;
        TO    = Te + TK;
        Tp    = ii[WS(is, 8)];
        Tq    = ii[WS(is, 1)];
        Tb    = T9 - Ta;
        Tl    = Th + Tk;
        Tt    = ri[WS(is, 3)];
        Tu    = ri[WS(is, 10)];
        To    = Tm - Tn;
        TL    = SIMD_FMADD(KP867767478, TK, TH);
        Ty    = Tw - Tx;
        T8    = T4 + T7;
        TQ    = T4 - T7;
        Tr    = Tp - Tq;
        TP    = Tb + TH;
        Tv    = Tt - Tu;
        TW    = SIMD_FMADD(KP867767478, Tk, Tr);
        Ts    = To + Tr;
        TR    = SIMD_FMADD(KP512858431, TQ, TP);
        TN    = Tv + Ty;
        Tz    = Tv - Ty;
        TS    = SIMD_FMADD(KP695895486, TR, TO);
        TA    = SIMD_FMADD(KP512858431, Tz, Ts);
        TT    = SIMD_FMADD(KP797473388, TS, Th);
        TB    = SIMD_FMADD(KP695895486, TA, Tl);
        TU    = SIMD_FMADD(KP867767478, TT, To);
        TC    = SIMD_FMADD(KP797473388, TB, Te);
        io[0] = SIMD_FMADD(KP974927912, SIMD_FMADD(KP924138961, TU, TN), TM) -
                (SIMD_FMADD(KP900968867, TW, TV));
        TD    = SIMD_FMADD(KP867767478, TC, Tb);
        ro[0] = SIMD_FMADD(KP974927912, SIMD_FMADD(KP924138961, TD, T8), T1) -
                (SIMD_FMADD(KP900968867, TL, TE));
    }
}
