//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cf_traits<30, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 17;
    static constexpr long_t stack_vars      = 1;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 1 -name r2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 1 stack variables, 0 constants, and 17 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 1>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    {
        SIMD_FLOAT T1;
        T1             = R0[0];
        Cr[WS(cs, 10)] = T1;
        Cr[WS(cs, 9)]  = T1;
        Cr[WS(cs, 6)]  = T1;
        Cr[WS(cs, 5)]  = T1;
        Cr[WS(cs, 11)] = T1;
        Cr[WS(cs, 8)]  = T1;
        Cr[WS(cs, 7)]  = T1;
        Cr[WS(cs, 4)]  = T1;
        Cr[WS(cs, 14)] = T1;
        Cr[WS(cs, 13)] = T1;
        Cr[WS(cs, 2)]  = T1;
        Cr[WS(cs, 1)]  = T1;
        Cr[WS(cs, 15)] = T1;
        Cr[WS(cs, 12)] = T1;
        Cr[WS(cs, 3)]  = T1;
        Cr[0]          = T1;
    }
}

template <>
struct r2cf_traits<30, 2>
{
    static constexpr long_t flops           = 44;
    static constexpr long_t operations      = 30;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 16;
    static constexpr long_t constants       = 14;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 2 -name r2cf
 * -standalone */

/*
 * This function contains 16 FP additions, 28 FP multiplications,
 * (or, 2 additions, 14 multiplications, 14 fused multiply/add),
 * 16 stack variables, 14 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 2>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP587785252, +0.587785252292473129168705954639072768597652438);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP207911690, +0.207911690817759337101742284405125166216584761);
    DK(KP994521895, +0.994521895368273336922691944980570381520792089);
    DK(KP743144825, +0.743144825477394235014697048974256977189113873);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP406736643, +0.406736643075800207753985990341497612923139651);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP669130606, +0.669130606358858213826273330686780473599583219);
    DK(KP913545457, +0.913545457642600895502127571985317177940810459);
    DK(KP104528463, +0.104528463267653471399834154802498119080655869);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP978147600, +0.978147600733805637928566747869599532459737809);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2;
        T1             = R0[0];
        T2             = R0[WS(rs, 1)];
        Cr[WS(cs, 5)]  = SIMD_FMADD(KP500000000, T2, T1);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP978147600, T2, T1);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP309016994, T2, T1);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP104528463, T2, T1);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP913545457, T2, T1);
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2, T1);
        Cr[WS(cs, 8)]  = SIMD_FNMADD(KP104528463, T2, T1);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP309016994, T2, T1);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP913545457, T2, T1);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP669130606, T2, T1);
        Cr[WS(cs, 15)] = T1 - T2;
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP978147600, T2, T1);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP669130606, T2, T1);
        Cr[0]          = T1 + T2;
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP809016994, T2, T1);
        Cr[WS(cs, 12)] = SIMD_FNMADD(KP809016994, T2, T1);
        Ci[WS(cs, 2)]  = -(KP406736643 * T2);
        Ci[WS(cs, 10)] = -(KP866025403 * T2);
        Ci[WS(cs, 11)] = -(KP743144825 * T2);
        Ci[WS(cs, 8)]  = -(KP994521895 * T2);
        Ci[WS(cs, 5)]  = -(KP866025403 * T2);
        Ci[WS(cs, 14)] = -(KP207911690 * T2);
        Ci[WS(cs, 13)] = -(KP406736643 * T2);
        Ci[WS(cs, 7)]  = -(KP994521895 * T2);
        Ci[WS(cs, 9)]  = -(KP951056516 * T2);
        Ci[WS(cs, 3)]  = -(KP587785252 * T2);
        Ci[WS(cs, 4)]  = -(KP743144825 * T2);
        Ci[WS(cs, 6)]  = -(KP951056516 * T2);
        Ci[WS(cs, 12)] = -(KP587785252 * T2);
        Ci[WS(cs, 1)]  = -(KP207911690 * T2);
    }
}

template <>
struct r2cf_traits<30, 3>
{
    static constexpr long_t flops           = 86;
    static constexpr long_t operations      = 52;
    static constexpr long_t memory_accesses = 33;
    static constexpr long_t stack_vars      = 27;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 3 -name r2cf
 * -standalone */

/*
 * This function contains 38 FP additions, 48 FP multiplications,
 * (or, 4 additions, 14 multiplications, 34 fused multiply/add),
 * 27 stack variables, 10 constants, and 33 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 3>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP678715947, +0.678715947273502911267974484525210198014310886);
    DK(KP700629269, +0.700629269222036772338338967661033997221965870);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP404508497, +0.404508497187473712051146708591409529430077295);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    {
        SIMD_FLOAT T5, T1, T2, T8, Tc, T7, Tb, Td, Tf, T4, Th, T6, T3, T9, Tg;
        SIMD_FLOAT Te, Ta;
        T5             = R0[0];
        T1             = R0[WS(rs, 1)];
        T2             = R0[WS(rs, 2)];
        T8             = SIMD_FMADD(KP381966011, T1, T2);
        Tc             = T1 + T2;
        T7             = SIMD_FMADD(KP381966011, T2, T1);
        Tb             = SIMD_FMADD(KP618033988, T1, T2);
        Td             = SIMD_FMSUB(KP381966011, T1, T2);
        Tf             = SIMD_FNMADD(KP618033988, T1, T2);
        T4             = SIMD_FMSUB(KP618033988, T2, T1);
        Th             = T2 - T1;
        T6             = SIMD_FMSUB(KP381966011, T2, T1);
        T3             = SIMD_FMADD(KP618033988, T2, T1);
        T9             = SIMD_FMADD(KP404508497, T8, T5);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP809016994, T8, T5);
        Cr[0]          = T5 + Tc;
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, Tc, T5);
        Ci[WS(cs, 5)]  = -(KP866025403 * Tc);
        Tg             = SIMD_FNMADD(KP404508497, T7, T5);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP809016994, T7, T5);
        Ci[WS(cs, 3)]  = -(KP951056516 * Tb);
        Te             = SIMD_FNMADD(KP404508497, Td, T5);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP809016994, Td, T5);
        Ci[WS(cs, 8)]  = -(KP700629269 * (SIMD_FNMADD(KP678715947, Tf, T7)));
        Ci[WS(cs, 2)]  = -(KP700629269 * (SIMD_FMADD(KP678715947, Tf, T7)));
        Ci[WS(cs, 12)] = KP951056516 * Tf;
        Ci[WS(cs, 1)]  = KP700629269 * (SIMD_FMADD(KP678715947, T4, Td));
        Ci[WS(cs, 11)] = -(KP700629269 * (SIMD_FNMADD(KP678715947, T4, Td)));
        Ci[WS(cs, 9)]  = KP951056516 * T4;
        Cr[WS(cs, 15)] = T5 + Th;
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, Th, T5);
        Ci[WS(cs, 10)] = KP866025403 * Th;
        Ta             = SIMD_FNMADD(KP404508497, T6, T5);
        Ci[WS(cs, 13)] = KP700629269 * (SIMD_FMADD(KP678715947, Tb, T6));
        Ci[WS(cs, 7)]  = KP700629269 * (SIMD_FNMADD(KP678715947, Tb, T6));
        Cr[WS(cs, 12)] = SIMD_FMADD(KP809016994, T6, T5);
        Ci[WS(cs, 14)] = KP700629269 * (SIMD_FNMADD(KP678715947, T3, T8));
        Ci[WS(cs, 4)]  = -(KP700629269 * (SIMD_FMADD(KP678715947, T3, T8)));
        Ci[WS(cs, 6)]  = -(KP951056516 * T3);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T3, T9);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T3, T9);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, Tf, Tg);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, Tf, Tg);
        Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T4, Te);
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T4, Te);
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP823639103, Tb, Ta);
        Cr[WS(cs, 8)]  = SIMD_FNMADD(KP823639103, Tb, Ta);
    }
}

template <>
struct r2cf_traits<30, 4>
{
    static constexpr long_t flops           = 110;
    static constexpr long_t operations      = 66;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 40;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 4 -name r2cf
 * -standalone */

/*
 * This function contains 52 FP additions, 58 FP multiplications,
 * (or, 8 additions, 14 multiplications, 44 fused multiply/add),
 * 40 stack variables, 12 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 4>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP838939048, +0.838939048243212646470504469024752945383806265);
    DK(KP700629269, +0.700629269222036772338338967661033997221965870);
    DK(KP736685209, +0.736685209782634517111752706426402120020450737);
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP404508497, +0.404508497187473712051146708591409529430077295);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T4, T6, T1, T2, T7, T9, Ts, Tk, Ti, Tb, T3, T8, Tr, T5, To;
        SIMD_FLOAT Tl, Tf, Ta, Tj, Tc, Td, Tq, Tg, Tm, Tp, Tn, Th, Te;
        T4             = R0[WS(rs, 3)];
        T6             = R0[0];
        T1             = R0[WS(rs, 1)];
        T2             = R0[WS(rs, 2)];
        T7             = SIMD_FMADD(KP309016994, T4, T6);
        T9             = SIMD_FNMADD(KP309016994, T4, T6);
        Ts             = T6 - T4;
        Tk             = SIMD_FNMADD(KP809016994, T4, T6);
        Ti             = T6 + T4;
        Tb             = SIMD_FMADD(KP809016994, T4, T6);
        T3             = SIMD_FMADD(KP618033988, T2, T1);
        T8             = SIMD_FMSUB(KP381966011, T2, T1);
        Tr             = T2 - T1;
        T5             = SIMD_FMSUB(KP618033988, T2, T1);
        To             = SIMD_FNMADD(KP618033988, T1, T2);
        Tl             = SIMD_FMSUB(KP381966011, T1, T2);
        Tf             = SIMD_FMADD(KP618033988, T1, T2);
        Ta             = SIMD_FMADD(KP381966011, T2, T1);
        Tj             = T1 + T2;
        Tc             = SIMD_FMADD(KP381966011, T1, T2);
        Td             = SIMD_FMADD(KP404508497, Tc, Tb);
        Cr[WS(cs, 9)]  = SIMD_FNMADD(KP809016994, Tc, Tb);
        Cr[0]          = Ti + Tj;
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, Tj, Ti);
        Ci[WS(cs, 5)]  = -(KP866025403 * Tj);
        Tq             = SIMD_FNMADD(KP404508497, Ta, T9);
        Cr[WS(cs, 3)]  = SIMD_FMADD(KP809016994, Ta, T9);
        Tg             = SIMD_FNMADD(KP500000000, Tf, T4);
        Ci[WS(cs, 3)]  = -(KP951056516 * (T4 + Tf));
        Tm             = SIMD_FNMADD(KP404508497, Tl, Tk);
        Cr[WS(cs, 6)]  = SIMD_FMADD(KP809016994, Tl, Tk);
        Tp             = SIMD_FMADD(KP500000000, To, T4);
        Ci[WS(cs, 12)] = KP951056516 * (To - T4);
        Tn             = SIMD_FMSUB(KP809016994, T5, T4);
        Ci[WS(cs, 9)]  = KP951056516 * (SIMD_FMADD(KP618033988, T4, T5));
        Cr[WS(cs, 15)] = Ts + Tr;
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, Tr, Ts);
        Ci[WS(cs, 10)] = KP866025403 * Tr;
        Th             = SIMD_FNMADD(KP404508497, T8, T7);
        Cr[WS(cs, 12)] = SIMD_FMADD(KP809016994, T8, T7);
        Te             = SIMD_FMADD(KP809016994, T3, T4);
        Ci[WS(cs, 6)]  = -(KP951056516 * (SIMD_FNMADD(KP618033988, T4, T3)));
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T3, Td);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T3, Td);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, To, Tq);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, To, Tq);
        Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP736685209, T8, Tg));
        Ci[WS(cs, 13)] = -(KP951056516 * (SIMD_FNMADD(KP736685209, T8, Tg)));
        Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T5, Tm);
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T5, Tm);
        Ci[WS(cs, 8)]  = KP951056516 * (SIMD_FNMADD(KP736685209, Ta, Tp));
        Ci[WS(cs, 2)]  = -(KP951056516 * (SIMD_FMADD(KP736685209, Ta, Tp)));
        Ci[WS(cs, 1)]  = KP700629269 * (SIMD_FMADD(KP838939048, Tn, Tl));
        Ci[WS(cs, 11)] = -(KP700629269 * (SIMD_FNMADD(KP838939048, Tn, Tl)));
        Cr[WS(cs, 2)]  = SIMD_FMADD(KP823639103, Tf, Th);
        Cr[WS(cs, 8)]  = SIMD_FNMADD(KP823639103, Tf, Th);
        Ci[WS(cs, 14)] = KP700629269 * (SIMD_FNMADD(KP838939048, Te, Tc));
        Ci[WS(cs, 4)]  = -(KP700629269 * (SIMD_FMADD(KP838939048, Te, Tc)));
    }
}

template <>
struct r2cf_traits<30, 5>
{
    static constexpr long_t flops           = 130;
    static constexpr long_t operations      = 78;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 51;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 5 -name r2cf
 * -standalone */

/*
 * This function contains 64 FP additions, 66 FP multiplications,
 * (or, 12 additions, 14 multiplications, 52 fused multiply/add),
 * 51 stack variables, 12 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 5>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP736685209, +0.736685209782634517111752706426402120020450737);
    DK(KP838939048, +0.838939048243212646470504469024752945383806265);
    DK(KP700629269, +0.700629269222036772338338967661033997221965870);
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP404508497, +0.404508497187473712051146708591409529430077295);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP381966011, +0.381966011250105151795413165634361882279690820);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T6, T9, T4, T1, T2;
        T6 = R0[WS(rs, 3)];
        T9 = R0[0];
        T4 = R0[WS(rs, 2)];
        T1 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 1)];
        {
            SIMD_FLOAT Ti, Tm, TA, TC, Tc, Ta, T7, T3, Tr, Tw, Tp, Te, TD, Td,
                Tj;
            SIMD_FLOAT T8, Tx, Tz, Tt, Tg, Tl, TB, Tn, Tb, Tu, T5, Ts, Tk, Th,
                Ty;
            SIMD_FLOAT To, Tq, Tv, Tf;
            Ti             = SIMD_FMADD(KP809016994, T6, T9);
            Tm             = SIMD_FNMADD(KP809016994, T6, T9);
            TA             = T9 + T6;
            TC             = T9 - T6;
            Tc             = SIMD_FNMADD(KP309016994, T6, T9);
            Ta             = SIMD_FMADD(KP309016994, T6, T9);
            T7             = T1 - T2;
            T3             = T1 + T2;
            Tr             = SIMD_FMSUB(KP618033988, T7, T4);
            Tw             = SIMD_FMADD(KP381966011, T4, T7);
            Tp             = SIMD_FMADD(KP618033988, T4, T7);
            Te             = SIMD_FMADD(KP381966011, T7, T4);
            TD             = T7 + T4;
            Td             = SIMD_FNMADD(KP381966011, T4, T7);
            Tj             = SIMD_FNMADD(KP381966011, T7, T4);
            T8             = SIMD_FNMADD(KP618033988, T4, T7);
            Tx             = SIMD_FMADD(KP618033988, T7, T4);
            Ci[WS(cs, 5)]  = KP866025403 * (T7 - T4);
            Tz             = SIMD_FMADD(KP381966011, T4, T3);
            Tt             = SIMD_FMSUB(KP618033988, T3, T4);
            Tg             = SIMD_FMADD(KP381966011, T3, T4);
            Tl             = SIMD_FMADD(KP618033988, T4, T3);
            TB             = T3 + T4;
            Tn             = SIMD_FNMADD(KP381966011, T3, T4);
            Tb             = SIMD_FNMADD(KP381966011, T4, T3);
            Tu             = SIMD_FMADD(KP618033988, T3, T4);
            T5             = SIMD_FNMADD(KP618033988, T4, T3);
            Ci[WS(cs, 10)] = KP866025403 * (T4 - T3);
            Cr[WS(cs, 15)] = TC + TD;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, TD, TC);
            Ts             = SIMD_FMADD(KP404508497, Td, Tc);
            Cr[WS(cs, 3)]  = SIMD_FNMADD(KP809016994, Td, Tc);
            Tk             = SIMD_FMADD(KP404508497, Tj, Ti);
            Cr[WS(cs, 9)]  = SIMD_FNMADD(KP809016994, Tj, Ti);
            Th             = SIMD_FMSUB(KP809016994, T8, T6);
            Ci[WS(cs, 6)]  = KP951056516 * (SIMD_FMADD(KP618033988, T6, T8));
            Ty             = SIMD_FMADD(KP500000000, Tx, T6);
            Ci[WS(cs, 12)] = KP951056516 * (Tx - T6);
            Cr[0]          = TA + TB;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, TB, TA);
            To             = SIMD_FMADD(KP404508497, Tn, Tm);
            Cr[WS(cs, 6)]  = SIMD_FNMADD(KP809016994, Tn, Tm);
            Tq             = SIMD_FMADD(KP404508497, Tb, Ta);
            Cr[WS(cs, 12)] = SIMD_FNMADD(KP809016994, Tb, Ta);
            Tv             = SIMD_FNMADD(KP500000000, Tu, T6);
            Ci[WS(cs, 3)]  = -(KP951056516 * (T6 + Tu));
            Tf             = SIMD_FMADD(KP809016994, T5, T6);
            Ci[WS(cs, 9)] = -(KP951056516 * (SIMD_FNMADD(KP618033988, T6, T5)));
            Cr[WS(cs, 7)] = SIMD_FMADD(KP823639103, Tt, Ts);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, Tt, Ts);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, Tl, Tk);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, Tl, Tk);
            Ci[WS(cs, 14)] = KP700629269 * (SIMD_FMADD(KP838939048, Th, Tg));
            Ci[WS(cs, 4)] = -(KP700629269 * (SIMD_FNMADD(KP838939048, Th, Tg)));
            Ci[WS(cs, 8)] = KP951056516 * (SIMD_FNMADD(KP736685209, Tz, Ty));
            Ci[WS(cs, 2)] = -(KP951056516 * (SIMD_FMADD(KP736685209, Tz, Ty)));
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, Tp, To);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, Tp, To);
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, Tr, Tq);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, Tr, Tq);
            Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP736685209, Tw, Tv));
            Ci[WS(cs, 13)] =
                -(KP951056516 * (SIMD_FNMADD(KP736685209, Tw, Tv)));
            Ci[WS(cs, 11)] = KP700629269 * (SIMD_FNMADD(KP838939048, Tf, Te));
            Ci[WS(cs, 1)]  = -(KP700629269 * (SIMD_FMADD(KP838939048, Tf, Te)));
        }
    }
}

template <>
struct r2cf_traits<30, 6>
{
    static constexpr long_t flops           = 136;
    static constexpr long_t operations      = 84;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 55;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 6 -name r2cf
 * -standalone */

/*
 * This function contains 70 FP additions, 66 FP multiplications,
 * (or, 18 additions, 14 multiplications, 52 fused multiply/add),
 * 55 stack variables, 9 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 6>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP678715947, +0.678715947273502911267974484525210198014310886);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T6, Tb, T1, T2, T4, Td;
        T6 = R0[WS(rs, 3)];
        Tb = R0[0];
        T1 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 1)];
        T4 = R0[WS(rs, 2)];
        Td = R0[WS(rs, 5)];
        {
            SIMD_FLOAT Tc, Tl, TE, TA, Tu, Tq, T3, T7, Te, TF, Tn, Ty, Tv, Tk,
                T8;
            SIMD_FLOAT Ta, TI, TD, T5, T9, Th, Tt, Tm, Tw, TB, Tz, Tr, To, TG,
                TJ;
            SIMD_FLOAT Tf, Tj, Tx, TK, Ti, Tp, TC, Ts, TH, Tg;
            Tc             = SIMD_FNMADD(KP309016994, T6, Tb);
            Tl             = Tb - T6;
            TE             = SIMD_FNMADD(KP809016994, T6, Tb);
            TA             = SIMD_FMADD(KP309016994, T6, Tb);
            Tu             = Tb + T6;
            Tq             = SIMD_FMADD(KP809016994, T6, Tb);
            T3             = T1 + T2;
            T7             = T1 - T2;
            Te             = SIMD_FMSUB(KP309016994, T4, Td);
            TF             = SIMD_FNMADD(KP809016994, T4, Td);
            Tn             = SIMD_FMADD(KP809016994, T4, Td);
            Ty             = SIMD_FMADD(KP309016994, T4, Td);
            Tv             = T4 + Td;
            Tk             = T4 - Td;
            T8             = SIMD_FNMADD(KP618033988, T4, T7);
            Ta             = SIMD_FMADD(KP618033988, T7, T4);
            TI             = SIMD_FMADD(KP618033988, T4, T7);
            TD             = SIMD_FMSUB(KP618033988, T7, T4);
            T5             = SIMD_FNMADD(KP618033988, T4, T3);
            T9             = SIMD_FMADD(KP618033988, T3, T4);
            Th             = SIMD_FMSUB(KP618033988, T3, T4);
            Tt             = SIMD_FMADD(KP618033988, T4, T3);
            Tm             = T7 + Tk;
            Ci[WS(cs, 5)]  = KP866025403 * (T7 - Tk);
            Tw             = T3 + Tv;
            Ci[WS(cs, 10)] = KP866025403 * (Tv - T3);
            TB             = SIMD_FNMADD(KP809016994, T3, Ty);
            Tz             = SIMD_FMADD(KP809016994, T3, Ty);
            Tr             = SIMD_FNMADD(KP309016994, T7, Tn);
            To             = SIMD_FMADD(KP309016994, T7, Tn);
            TG             = SIMD_FMADD(KP309016994, T3, TF);
            TJ             = SIMD_FNMADD(KP309016994, T3, TF);
            Tf             = SIMD_FNMADD(KP809016994, T7, Te);
            Tj             = SIMD_FMADD(KP809016994, T7, Te);
            Tx             = SIMD_FMADD(KP500000000, Ta, T6);
            Ci[WS(cs, 12)] = KP951056516 * (Ta - T6);
            TK             = SIMD_FMSUB(KP809016994, T8, T6);
            Ci[WS(cs, 6)]  = KP951056516 * (SIMD_FMADD(KP618033988, T6, T8));
            Ti             = SIMD_FNMADD(KP500000000, T9, T6);
            Ci[WS(cs, 3)]  = -(KP951056516 * (T6 + T9));
            Tp             = SIMD_FMADD(KP809016994, T5, T6);
            Ci[WS(cs, 9)] = -(KP951056516 * (SIMD_FNMADD(KP618033988, T6, T5)));
            Cr[WS(cs, 15)] = Tl + Tm;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, Tm, Tl);
            Cr[0]          = Tu + Tw;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, Tw, Tu);
            TC             = SIMD_FNMADD(KP500000000, TB, TA);
            Cr[WS(cs, 12)] = TA + TB;
            Ts             = SIMD_FMADD(KP500000000, Tr, Tq);
            Cr[WS(cs, 9)]  = Tq - Tr;
            TH             = SIMD_FNMADD(KP500000000, TG, TE);
            Cr[WS(cs, 6)]  = TE + TG;
            Tg             = SIMD_FNMADD(KP500000000, Tf, Tc);
            Cr[WS(cs, 3)]  = Tc + Tf;
            Ci[WS(cs, 8)]  = KP951056516 * (SIMD_FNMADD(KP910592997, Tz, Tx));
            Ci[WS(cs, 2)]  = -(KP951056516 * (SIMD_FMADD(KP910592997, Tz, Tx)));
            Ci[WS(cs, 4)]  = KP866025403 * (SIMD_FMADD(KP678715947, TK, TJ));
            Ci[WS(cs, 14)] =
                -(KP866025403 * (SIMD_FNMADD(KP678715947, TK, TJ)));
            Ci[WS(cs, 13)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, Tj, Ti)));
            Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP910592997, Tj, Ti));
            Ci[WS(cs, 11)] = KP866025403 * (SIMD_FNMADD(KP678715947, Tp, To));
            Ci[WS(cs, 1)]  = -(KP866025403 * (SIMD_FMADD(KP678715947, Tp, To)));
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, TD, TC);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, TD, TC);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, Tt, Ts);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, Tt, Ts);
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, TI, TH);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, TI, TH);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, Th, Tg);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, Th, Tg);
        }
    }
}

template <>
struct r2cf_traits<30, 7>
{
    static constexpr long_t flops           = 147;
    static constexpr long_t operations      = 91;
    static constexpr long_t memory_accesses = 37;
    static constexpr long_t stack_vars      = 62;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 7 -name r2cf
 * -standalone */

/*
 * This function contains 77 FP additions, 70 FP multiplications,
 * (or, 21 additions, 14 multiplications, 56 fused multiply/add),
 * 62 stack variables, 8 constants, and 37 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 7>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2, T1, Tg, T4, T5, T7, Tj, Te, Td, Tb, T3, Tr, Tx, Th, T6;
        SIMD_FLOAT T9, Tk, TN, Tv, TG, TD, Tq, TC, Ts;
        T2 = R0[WS(rs, 3)];
        T1 = R0[WS(rs, 6)];
        Tg = R0[0];
        T4 = R0[WS(rs, 4)];
        T5 = R0[WS(rs, 1)];
        T7 = R0[WS(rs, 2)];
        Tj = R0[WS(rs, 5)];
        Te = SIMD_FMSUB(KP618033988, T1, T2);
        Td = SIMD_FMADD(KP618033988, T1, T2);
        Tb = SIMD_FNMADD(KP618033988, T2, T1);
        T3 = SIMD_FMADD(KP618033988, T2, T1);
        Tr = Tg + T1;
        Tx = SIMD_FMADD(KP309016994, T1, Tg);
        Th = SIMD_FNMADD(KP809016994, T1, Tg);
        T6 = T4 + T5;
        T9 = T4 - T5;
        Tk = SIMD_FMSUB(KP309016994, T7, Tj);
        TN = SIMD_FNMADD(KP809016994, T7, Tj);
        Tv = SIMD_FMADD(KP809016994, T7, Tj);
        TG = SIMD_FMADD(KP309016994, T7, Tj);
        TD = T7 + Tj;
        Tq = T7 - Tj;
        TC = Tr + T2;
        Ts = Tr - T2;
        {
            SIMD_FLOAT TM, Ty, TI, Ti, Tc, Ta, TL, TQ, T8, Tf, TB, Tn, Tt, TE,
                TJ;
            SIMD_FLOAT TH, Tz, Tw, TO, TS, Tl, Tp, TR, TF, To, Tu, TK, TA, TP,
                Tm;
            TM             = SIMD_FNMADD(KP809016994, T2, Tx);
            Ty             = SIMD_FMADD(KP809016994, T2, Tx);
            TI             = SIMD_FMADD(KP309016994, T2, Th);
            Ti             = SIMD_FNMADD(KP309016994, T2, Th);
            Tc             = SIMD_FMADD(KP618033988, T9, T7);
            Ta             = SIMD_FNMADD(KP618033988, T7, T9);
            TL             = SIMD_FMSUB(KP618033988, T9, T7);
            TQ             = SIMD_FMADD(KP618033988, T7, T9);
            T8             = SIMD_FNMADD(KP618033988, T7, T6);
            Tf             = SIMD_FMADD(KP618033988, T6, T7);
            TB             = SIMD_FMADD(KP618033988, T7, T6);
            Tn             = SIMD_FMSUB(KP618033988, T6, T7);
            Tt             = T9 + Tq;
            Ci[WS(cs, 5)]  = KP866025403 * (T9 - Tq);
            TE             = T6 + TD;
            Ci[WS(cs, 10)] = KP866025403 * (TD - T6);
            TJ             = SIMD_FNMADD(KP809016994, T6, TG);
            TH             = SIMD_FMADD(KP809016994, T6, TG);
            Tz             = SIMD_FNMADD(KP309016994, T9, Tv);
            Tw             = SIMD_FMADD(KP309016994, T9, Tv);
            TO             = SIMD_FMADD(KP309016994, T6, TN);
            TS             = SIMD_FNMADD(KP309016994, T6, TN);
            Tl             = SIMD_FNMADD(KP809016994, T9, Tk);
            Tp             = SIMD_FMADD(KP809016994, T9, Tk);
            TR             = SIMD_FMADD(KP500000000, Ta, Tb);
            Ci[WS(cs, 6)]  = KP951056516 * (Ta - Tb);
            TF             = SIMD_FMADD(KP500000000, Tc, Td);
            Ci[WS(cs, 12)] = KP951056516 * (Tc - Td);
            To             = SIMD_FMADD(KP500000000, Tf, Te);
            Ci[WS(cs, 3)]  = KP951056516 * (Te - Tf);
            Tu             = SIMD_FMADD(KP500000000, T8, T3);
            Ci[WS(cs, 9)]  = KP951056516 * (T3 - T8);
            Cr[WS(cs, 15)] = Ts + Tt;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, Tt, Ts);
            Cr[0]          = TC + TE;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, TE, TC);
            TK             = SIMD_FNMADD(KP500000000, TJ, TI);
            Cr[WS(cs, 12)] = TI + TJ;
            TA             = SIMD_FMADD(KP500000000, Tz, Ty);
            Cr[WS(cs, 9)]  = Ty - Tz;
            TP             = SIMD_FNMADD(KP500000000, TO, TM);
            Cr[WS(cs, 6)]  = TM + TO;
            Tm             = SIMD_FNMADD(KP500000000, Tl, Ti);
            Cr[WS(cs, 3)]  = Ti + Tl;
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, TS, TR));
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, TS, TR));
            Ci[WS(cs, 8)]  = KP951056516 * (SIMD_FNMADD(KP910592997, TH, TF));
            Ci[WS(cs, 2)]  = -(KP951056516 * (SIMD_FMADD(KP910592997, TH, TF)));
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FMADD(KP910592997, Tp, To));
            Ci[WS(cs, 7)] = -(KP951056516 * (SIMD_FNMADD(KP910592997, Tp, To)));
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, Tw, Tu)));
            Ci[WS(cs, 1)]  = -(KP951056516 * (SIMD_FMADD(KP910592997, Tw, Tu)));
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, TL, TK);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, TL, TK);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, TB, TA);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, TB, TA);
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, TQ, TP);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, TQ, TP);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, Tn, Tm);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, Tn, Tm);
        }
    }
}

template <>
struct r2cf_traits<30, 8>
{
    static constexpr long_t flops           = 167;
    static constexpr long_t operations      = 105;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 81;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 8 -name r2cf
 * -standalone */

/*
 * This function contains 91 FP additions, 76 FP multiplications,
 * (or, 29 additions, 14 multiplications, 62 fused multiply/add),
 * 81 stack variables, 12 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 8>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP690983005, +0.690983005625052575897706582817180941139845410);
    DK(KP552786404, +0.552786404500042060718165266253744752911876328);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T6, To, T9, T8, Tl, T1, T2, T3;
        T6 = R0[WS(rs, 2)];
        To = R0[WS(rs, 5)];
        T9 = R0[WS(rs, 3)];
        T8 = R0[WS(rs, 6)];
        Tl = R0[0];
        T1 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 7)];
        {
            SIMD_FLOAT Tp, TA, T11, TT, TQ, TF, Ta, Tb, Te, Tk, Tm, TJ, TB, Tq,
                Tf;
            SIMD_FLOAT Tr, T4, TO, TC, TK, T10, Tn, TW, Ti, Tg, TG, Ts, TP, Tz,
                Tc;
            SIMD_FLOAT T5;
            Tp  = SIMD_FMSUB(KP309016994, T6, To);
            TA  = T6 - To;
            T11 = SIMD_FNMADD(KP809016994, T6, To);
            TT  = SIMD_FMADD(KP309016994, T6, To);
            TQ  = T6 + To;
            TF  = SIMD_FMADD(KP809016994, T6, To);
            Ta  = SIMD_FNMADD(KP618033988, T9, T8);
            Tb  = SIMD_FMADD(KP618033988, T9, T8);
            Te  = SIMD_FMSUB(KP618033988, T8, T9);
            Tk  = SIMD_FMADD(KP618033988, T8, T9);
            Tm  = SIMD_FNMADD(KP809016994, T8, Tl);
            TJ  = SIMD_FMADD(KP309016994, T8, Tl);
            TB  = Tl + T8;
            Tq  = T2 - T3;
            Tf  = SIMD_FNMADD(KP618033988, T2, T3);
            Tr  = T2 + T3;
            T4  = SIMD_FMADD(KP618033988, T3, T2);
            TO  = TB + T9;
            TC  = TB - T9;
            TK  = SIMD_FMADD(KP809016994, T9, TJ);
            T10 = SIMD_FNMADD(KP809016994, T9, TJ);
            Tn  = SIMD_FNMADD(KP309016994, T9, Tm);
            TW  = SIMD_FMADD(KP309016994, T9, Tm);
            Ti  = SIMD_FMADD(KP618033988, T1, Tf);
            Tg  = SIMD_FNMADD(KP618033988, T1, Tf);
            TG  = SIMD_FNMADD(KP447213595, Tr, Tq);
            Ts  = SIMD_FMADD(KP447213595, Tr, Tq);
            TP  = T1 + Tr;
            Tz  = T1 - Tr;
            Tc  = T1 + T4;
            T5  = T1 - T4;
            {
                SIMD_FLOAT Tj, TZ, Tw, Th, T12, TH, TU, Tt, TR, TD, TN, Td, T7,
                    T15, TS;
                SIMD_FLOAT Tx, T17, T13, TL, TI, TV, TX, Tu, Ty, TE, T16, T14,
                    TM, TY, Tv;
                Tj             = Ti + T6;
                TZ             = Ti - T6;
                Tw             = Tg + T6;
                Th             = Tg - T6;
                T12            = SIMD_FMADD(KP552786404, T1, TG);
                TH             = SIMD_FNMADD(KP552786404, T1, TG);
                TU             = SIMD_FMADD(KP690983005, Ts, T1);
                Tt             = SIMD_FMSUB(KP690983005, Ts, T1);
                TR             = TP + TQ;
                Ci[WS(cs, 10)] = KP866025403 * (TQ - TP);
                TD             = Tz + TA;
                Ci[WS(cs, 5)]  = KP866025403 * (Tz - TA);
                TN             = SIMD_FMADD(KP618033988, T6, Tc);
                Td             = SIMD_FNMADD(KP618033988, T6, Tc);
                T7             = SIMD_FNMADD(KP618033988, T6, T5);
                T15            = SIMD_FMADD(KP618033988, T6, T5);
                Ci[WS(cs, 12)] = KP951056516 * (Tj - Tk);
                TS             = SIMD_FMADD(KP500000000, Tj, Tk);
                Ci[WS(cs, 3)]  = KP951056516 * (Te + Th);
                Tx             = SIMD_FNMADD(KP500000000, Th, Te);
                T17            = SIMD_FNMADD(KP559016994, T12, T11);
                T13            = SIMD_FMADD(KP559016994, T12, T11);
                TL             = SIMD_FMADD(KP559016994, TH, TF);
                TI             = SIMD_FNMADD(KP559016994, TH, TF);
                TV             = SIMD_FMADD(KP809016994, TU, TT);
                TX             = SIMD_FNMADD(KP809016994, TU, TT);
                Tu             = SIMD_FMADD(KP809016994, Tt, Tp);
                Ty             = SIMD_FNMADD(KP809016994, Tt, Tp);
                Cr[0]          = TO + TR;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, TR, TO);
                Cr[WS(cs, 15)] = TC + TD;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, TD, TC);
                Ci[WS(cs, 9)]  = KP951056516 * (Tb - Td);
                TE             = SIMD_FMADD(KP500000000, Td, Tb);
                Ci[WS(cs, 6)]  = KP951056516 * (T7 - Ta);
                T16            = SIMD_FMADD(KP500000000, T7, Ta);
                Cr[WS(cs, 6)]  = T10 + T13;
                T14            = SIMD_FNMADD(KP500000000, T13, T10);
                Cr[WS(cs, 9)]  = TK - TL;
                TM             = SIMD_FMADD(KP500000000, TL, TK);
                Ci[WS(cs, 2)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TV, TS)));
                Ci[WS(cs, 8)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, TV, TS));
                Cr[WS(cs, 12)] = TW + TX;
                TY             = SIMD_FNMADD(KP500000000, TX, TW);
                Cr[WS(cs, 3)]  = Tn + Tu;
                Tv             = SIMD_FNMADD(KP500000000, Tu, Tn);
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, Ty, Tx)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, Ty, Tx));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TI, TE)));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TI, TE)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T17, T16));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T17, T16));
                Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T15, T14);
                Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T15, T14);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, TN, TM);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, TN, TM);
                Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, TZ, TY);
                Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, TZ, TY);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, Tw, Tv);
                Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, Tw, Tv);
            }
        }
    }
}

template <>
struct r2cf_traits<30, 9>
{
    static constexpr long_t flops           = 169;
    static constexpr long_t operations      = 107;
    static constexpr long_t memory_accesses = 39;
    static constexpr long_t stack_vars      = 84;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 9 -name r2cf
 * -standalone */

/*
 * This function contains 93 FP additions, 76 FP multiplications,
 * (or, 31 additions, 14 multiplications, 62 fused multiply/add),
 * 84 stack variables, 12 constants, and 39 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 9>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP690983005, +0.690983005625052575897706582817180941139845410);
    DK(KP552786404, +0.552786404500042060718165266253744752911876328);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT Tq, T6, T7, Tb, Ta, Tn, T1, T2, T3;
        Tq = R0[WS(rs, 5)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 8)];
        Tb = R0[WS(rs, 3)];
        Ta = R0[WS(rs, 6)];
        Tn = R0[0];
        T1 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 7)];
        {
            SIMD_FLOAT T8, Tm, Tg, Td, Tc, Ts, T14, TW, TI, TD, TT, TF, TR, T13,
                TN;
            SIMD_FLOAT TZ, Tp, Ti, Tk, Tv, TJ, TC, TS, T5, Te, Tr, TE, TM, To,
                T4;
            SIMD_FLOAT Tu, Th, Tt;
            T8  = T6 - T7;
            Tr  = T6 + T7;
            Tm  = SIMD_FMADD(KP618033988, Ta, Tb);
            Tg  = SIMD_FMSUB(KP618033988, Ta, Tb);
            Td  = SIMD_FMADD(KP618033988, Tb, Ta);
            Tc  = SIMD_FNMADD(KP618033988, Tb, Ta);
            TE  = Tn + Ta;
            TM  = SIMD_FMADD(KP309016994, Ta, Tn);
            To  = SIMD_FNMADD(KP809016994, Ta, Tn);
            T4  = SIMD_FMADD(KP618033988, T3, T2);
            Tu  = T2 + T3;
            Th  = SIMD_FNMADD(KP618033988, T2, T3);
            Tt  = T2 - T3;
            Ts  = SIMD_FMSUB(KP309016994, Tr, Tq);
            T14 = SIMD_FNMADD(KP809016994, Tr, Tq);
            TW  = SIMD_FMADD(KP309016994, Tr, Tq);
            TI  = SIMD_FMADD(KP809016994, Tr, Tq);
            TD  = Tr - Tq;
            TT  = Tr + Tq;
            TF  = TE - Tb;
            TR  = TE + Tb;
            T13 = SIMD_FNMADD(KP809016994, Tb, TM);
            TN  = SIMD_FMADD(KP809016994, Tb, TM);
            TZ  = SIMD_FMADD(KP309016994, Tb, To);
            Tp  = SIMD_FNMADD(KP309016994, Tb, To);
            Ti  = SIMD_FNMADD(KP618033988, T1, Th);
            Tk  = SIMD_FMADD(KP618033988, T1, Th);
            Tv  = SIMD_FMADD(KP447213595, Tu, Tt);
            TJ  = SIMD_FNMADD(KP447213595, Tu, Tt);
            TC  = T1 - Tu;
            TS  = T1 + Tu;
            T5  = T1 - T4;
            Te  = T1 + T4;
            {
                SIMD_FLOAT T12, Tl, Tj, Tz, TK, T15, Tw, TX, TU, TG, Tf, TQ,
                    T18, T9, TV;
                SIMD_FLOAT TA, T16, T1a, TL, TO, T10, TY, TB, Tx, TH, T19, T17,
                    TP, T11, Ty;
                T12            = Tk - T8;
                Tl             = Tk + T8;
                Tj             = Ti - T8;
                Tz             = Ti + T8;
                TK             = SIMD_FNMADD(KP552786404, T1, TJ);
                T15            = SIMD_FMADD(KP552786404, T1, TJ);
                Tw             = SIMD_FMSUB(KP690983005, Tv, T1);
                TX             = SIMD_FMADD(KP690983005, Tv, T1);
                TU             = TS + TT;
                Ci[WS(cs, 10)] = KP866025403 * (TT - TS);
                TG             = TC + TD;
                Ci[WS(cs, 5)]  = KP866025403 * (TC - TD);
                Tf             = SIMD_FNMADD(KP618033988, T8, Te);
                TQ             = SIMD_FMADD(KP618033988, T8, Te);
                T18            = SIMD_FMADD(KP618033988, T8, T5);
                T9             = SIMD_FNMADD(KP618033988, T8, T5);
                Ci[WS(cs, 12)] = KP951056516 * (Tl - Tm);
                TV             = SIMD_FMADD(KP500000000, Tl, Tm);
                Ci[WS(cs, 3)]  = KP951056516 * (Tg + Tj);
                TA             = SIMD_FNMADD(KP500000000, Tj, Tg);
                T16            = SIMD_FMADD(KP559016994, T15, T14);
                T1a            = SIMD_FNMADD(KP559016994, T15, T14);
                TL             = SIMD_FNMADD(KP559016994, TK, TI);
                TO             = SIMD_FMADD(KP559016994, TK, TI);
                T10            = SIMD_FNMADD(KP809016994, TX, TW);
                TY             = SIMD_FMADD(KP809016994, TX, TW);
                TB             = SIMD_FNMADD(KP809016994, Tw, Ts);
                Tx             = SIMD_FMADD(KP809016994, Tw, Ts);
                Cr[0]          = TR + TU;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, TU, TR);
                Cr[WS(cs, 15)] = TF + TG;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, TG, TF);
                Ci[WS(cs, 9)]  = KP951056516 * (Td - Tf);
                TH             = SIMD_FMADD(KP500000000, Tf, Td);
                Ci[WS(cs, 6)]  = KP951056516 * (T9 - Tc);
                T19            = SIMD_FMADD(KP500000000, T9, Tc);
                Cr[WS(cs, 6)]  = T13 + T16;
                T17            = SIMD_FNMADD(KP500000000, T16, T13);
                Cr[WS(cs, 9)]  = TN - TO;
                TP             = SIMD_FMADD(KP500000000, TO, TN);
                Ci[WS(cs, 2)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TY, TV)));
                Ci[WS(cs, 8)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, TY, TV));
                Cr[WS(cs, 12)] = TZ + T10;
                T11            = SIMD_FNMADD(KP500000000, T10, TZ);
                Cr[WS(cs, 3)]  = Tp + Tx;
                Ty             = SIMD_FNMADD(KP500000000, Tx, Tp);
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TB, TA)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, TB, TA));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TL, TH)));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TL, TH)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1a, T19));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1a, T19));
                Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T18, T17);
                Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T18, T17);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, TQ, TP);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, TQ, TP);
                Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T12, T11);
                Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T12, T11);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, Tz, Ty);
                Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, Tz, Ty);
            }
        }
    }
}

template <>
struct r2cf_traits<30, 10>
{
    static constexpr long_t flops           = 177;
    static constexpr long_t operations      = 113;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 91;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 10 -name r2cf
 * -standalone */

/*
 * This function contains 99 FP additions, 78 FP multiplications,
 * (or, 35 additions, 14 multiplications, 64 fused multiply/add),
 * 91 stack variables, 12 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 10>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP690983005, +0.690983005625052575897706582817180941139845410);
    DK(KP552786404, +0.552786404500042060718165266253744752911876328);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT Tw, T6, T7, Ta, Tq, Tb, Tc, T1, T2, T3, Tx, T8, TS, Tr, TK;
        SIMD_FLOAT Ts, Ti, Tt, Td;
        Tw = R0[WS(rs, 5)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 8)];
        Ta = R0[WS(rs, 6)];
        Tq = R0[0];
        Tb = R0[WS(rs, 9)];
        Tc = R0[WS(rs, 3)];
        T1 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 7)];
        Tx = T6 + T7;
        T8 = T6 - T7;
        TS = SIMD_FMADD(KP309016994, Ta, Tq);
        Tr = SIMD_FNMADD(KP809016994, Ta, Tq);
        TK = Tq + Ta;
        Ts = Tb - Tc;
        Ti = SIMD_FMSUB(KP618033988, Tb, Tc);
        Tt = Tb + Tc;
        Td = SIMD_FMADD(KP618033988, Tc, Tb);
        {
            SIMD_FLOAT Tz, Tk, TA, T4, T10, TJ, TO, T13, T1b, Ty, Tn, Tj, TY,
                TL, Tu;
            SIMD_FLOAT TT, Tf, Te, To, Tl, TP, TB, TZ, TI, Tg, T5, T16, Tv, T1a,
                TU;
            Tz  = T2 - T3;
            Tk  = SIMD_FNMADD(KP618033988, T2, T3);
            TA  = T2 + T3;
            T4  = SIMD_FMADD(KP618033988, T3, T2);
            T10 = Tx + Tw;
            TJ  = Tx - Tw;
            TO  = SIMD_FMADD(KP809016994, Tx, Tw);
            T13 = SIMD_FMADD(KP309016994, Tx, Tw);
            T1b = SIMD_FNMADD(KP809016994, Tx, Tw);
            Ty  = SIMD_FMSUB(KP309016994, Tx, Tw);
            Tn  = SIMD_FNMADD(KP618033988, Ta, Ti);
            Tj  = SIMD_FMADD(KP618033988, Ta, Ti);
            TY  = TK + Tt;
            TL  = TK - Tt;
            Tu  = SIMD_FMADD(KP447213595, Tt, Ts);
            TT  = SIMD_FNMADD(KP447213595, Tt, Ts);
            Tf  = Ta + Td;
            Te  = Ta - Td;
            To  = SIMD_FMADD(KP618033988, T1, Tk);
            Tl  = SIMD_FNMADD(KP618033988, T1, Tk);
            TP  = SIMD_FNMADD(KP447213595, TA, Tz);
            TB  = SIMD_FMADD(KP447213595, TA, Tz);
            TZ  = T1 + TA;
            TI  = T1 - TA;
            Tg  = T1 + T4;
            T5  = T1 - T4;
            T16 = SIMD_FNMADD(KP559016994, Tu, Tr);
            Tv  = SIMD_FMADD(KP559016994, Tu, Tr);
            T1a = SIMD_FMADD(KP559016994, TT, TS);
            TU  = SIMD_FNMADD(KP559016994, TT, TS);
            {
                SIMD_FLOAT T19, Tp, TF, Tm, T1c, TQ, T14, TC, T11, TM, TX, Th,
                    T1f, T9, T12;
                SIMD_FLOAT TG, T1d, T1h, TV, TR, T17, T15, TD, TH, TN, T1g, T1e,
                    TW, T18, TE;
                T19            = To - T8;
                Tp             = To + T8;
                TF             = Tl + T8;
                Tm             = Tl - T8;
                T1c            = SIMD_FMADD(KP552786404, T1, TP);
                TQ             = SIMD_FNMADD(KP552786404, T1, TP);
                T14            = SIMD_FMADD(KP690983005, TB, T1);
                TC             = SIMD_FMSUB(KP690983005, TB, T1);
                T11            = TZ + T10;
                Ci[WS(cs, 10)] = KP866025403 * (T10 - TZ);
                TM             = TI + TJ;
                Ci[WS(cs, 5)]  = KP866025403 * (TI - TJ);
                TX             = SIMD_FMADD(KP618033988, T8, Tg);
                Th             = SIMD_FNMADD(KP618033988, T8, Tg);
                T1f            = SIMD_FMADD(KP618033988, T8, T5);
                T9             = SIMD_FNMADD(KP618033988, T8, T5);
                Ci[WS(cs, 12)] = KP951056516 * (Tn + Tp);
                T12            = SIMD_FNMADD(KP500000000, Tp, Tn);
                Ci[WS(cs, 3)]  = KP951056516 * (Tj + Tm);
                TG             = SIMD_FNMADD(KP500000000, Tm, Tj);
                T1d            = SIMD_FMADD(KP559016994, T1c, T1b);
                T1h            = SIMD_FNMADD(KP559016994, T1c, T1b);
                TV             = SIMD_FMADD(KP559016994, TQ, TO);
                TR             = SIMD_FNMADD(KP559016994, TQ, TO);
                T17            = SIMD_FNMADD(KP809016994, T14, T13);
                T15            = SIMD_FMADD(KP809016994, T14, T13);
                TD             = SIMD_FMADD(KP809016994, TC, Ty);
                TH             = SIMD_FNMADD(KP809016994, TC, Ty);
                Cr[0]          = TY + T11;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T11, TY);
                Cr[WS(cs, 15)] = TL + TM;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, TM, TL);
                Ci[WS(cs, 9)]  = KP951056516 * (Tf - Th);
                TN             = SIMD_FMADD(KP500000000, Th, Tf);
                Ci[WS(cs, 6)]  = KP951056516 * (T9 - Te);
                T1g            = SIMD_FMADD(KP500000000, T9, Te);
                Cr[WS(cs, 6)]  = T1a + T1d;
                T1e            = SIMD_FNMADD(KP500000000, T1d, T1a);
                Cr[WS(cs, 9)]  = TU - TV;
                TW             = SIMD_FMADD(KP500000000, TV, TU);
                Cr[WS(cs, 12)] = T16 + T17;
                T18            = SIMD_FNMADD(KP500000000, T17, T16);
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T15, T12));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T15, T12)));
                Cr[WS(cs, 3)] = Tv + TD;
                TE            = SIMD_FNMADD(KP500000000, TD, Tv);
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TH, TG)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, TH, TG));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TR, TN)));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TR, TN)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1h, T1g));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1h, T1g));
                Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1f, T1e);
                Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1f, T1e);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, TX, TW);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, TX, TW);
                Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T19, T18);
                Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T19, T18);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, TF, TE);
                Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, TF, TE);
            }
        }
    }
}

template <>
struct r2cf_traits<30, 11>
{
    static constexpr long_t flops           = 174;
    static constexpr long_t operations      = 116;
    static constexpr long_t memory_accesses = 41;
    static constexpr long_t stack_vars      = 93;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 11 -name r2cf
 * -standalone */

/*
 * This function contains 102 FP additions, 72 FP multiplications,
 * (or, 44 additions, 14 multiplications, 58 fused multiply/add),
 * 93 stack variables, 10 constants, and 41 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 11>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT TC, T6, T7, Ta, Tq, Tb, Tc, T1, Tw, T2, T3, T8, TD, TN, Tr;
        SIMD_FLOAT TW, Td, Tt, Ti, Ts, Tx, TR, TK;
        TC = R0[WS(rs, 5)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 8)];
        Ta = R0[WS(rs, 6)];
        Tq = R0[0];
        Tb = R0[WS(rs, 9)];
        Tc = R0[WS(rs, 3)];
        T1 = R0[WS(rs, 4)];
        Tw = R0[WS(rs, 10)];
        T2 = R0[WS(rs, 1)];
        T3 = R0[WS(rs, 7)];
        T8 = T6 - T7;
        TD = T6 + T7;
        TN = Tq + Ta;
        Tr = SIMD_FNMADD(KP809016994, Ta, Tq);
        TW = SIMD_FMADD(KP309016994, Ta, Tq);
        Td = SIMD_FMADD(KP618033988, Tc, Tb);
        Tt = Tb + Tc;
        Ti = SIMD_FMSUB(KP618033988, Tb, Tc);
        Ts = Tb - Tc;
        Tx = SIMD_FNMADD(KP809016994, T1, Tw);
        TR = SIMD_FMADD(KP309016994, T1, Tw);
        TK = Tw + T1;
        {
            SIMD_FLOAT Ty, Tk, Tz, T4, T14, TM, TU, T18, T1g, TE, Tn, Tj, T12,
                TO, Tu;
            SIMD_FLOAT TX, Tf, Te, To, Tl, TS, TA, T13, TL, Tg, T5, T1a, Tv,
                T1e, TY;
            Ty  = T2 - T3;
            Tk  = SIMD_FNMADD(KP618033988, T2, T3);
            Tz  = T2 + T3;
            T4  = SIMD_FMADD(KP618033988, T3, T2);
            T14 = TD + TC;
            TM  = TD - TC;
            TU  = SIMD_FMADD(KP809016994, TD, TC);
            T18 = SIMD_FMADD(KP309016994, TD, TC);
            T1g = SIMD_FNMADD(KP809016994, TD, TC);
            TE  = SIMD_FMSUB(KP309016994, TD, TC);
            Tn  = SIMD_FNMADD(KP618033988, Ta, Ti);
            Tj  = SIMD_FMADD(KP618033988, Ta, Ti);
            T12 = TN + Tt;
            TO  = TN - Tt;
            Tu  = SIMD_FMADD(KP447213595, Tt, Ts);
            TX  = SIMD_FNMADD(KP447213595, Tt, Ts);
            Tf  = Ta + Td;
            Te  = Ta - Td;
            To  = SIMD_FMADD(KP618033988, T1, Tk);
            Tl  = SIMD_FNMADD(KP618033988, T1, Tk);
            TS  = SIMD_FNMADD(KP447213595, Tz, Ty);
            TA  = SIMD_FMADD(KP447213595, Tz, Ty);
            T13 = TK + Tz;
            TL  = TK - Tz;
            Tg  = T1 + T4;
            T5  = T1 - T4;
            T1a = SIMD_FNMADD(KP559016994, Tu, Tr);
            Tv  = SIMD_FMADD(KP559016994, Tu, Tr);
            T1e = SIMD_FMADD(KP559016994, TX, TW);
            TY  = SIMD_FNMADD(KP559016994, TX, TW);
            {
                SIMD_FLOAT T1d, Tp, TH, Tm, T1f, TT, T17, TB, T15, TP, T11, Th,
                    T1j, T9, T16;
                SIMD_FLOAT TI, T1h, T1l, TZ, TV, T1b, T19, TF, TJ, TQ, T1k, T1i,
                    T10, T1c, TG;
                T1d            = To - T8;
                Tp             = To + T8;
                TH             = Tl + T8;
                Tm             = Tl - T8;
                T1f            = SIMD_FMADD(KP559016994, TS, TR);
                TT             = SIMD_FNMADD(KP559016994, TS, TR);
                T17            = SIMD_FNMADD(KP559016994, TA, Tx);
                TB             = SIMD_FMADD(KP559016994, TA, Tx);
                T15            = T13 + T14;
                Ci[WS(cs, 10)] = KP866025403 * (T14 - T13);
                TP             = TL + TM;
                Ci[WS(cs, 5)]  = KP866025403 * (TL - TM);
                T11            = SIMD_FMADD(KP618033988, T8, Tg);
                Th             = SIMD_FNMADD(KP618033988, T8, Tg);
                T1j            = SIMD_FMADD(KP618033988, T8, T5);
                T9             = SIMD_FNMADD(KP618033988, T8, T5);
                Ci[WS(cs, 12)] = KP951056516 * (Tn + Tp);
                T16            = SIMD_FNMADD(KP500000000, Tp, Tn);
                Ci[WS(cs, 3)]  = KP951056516 * (Tj + Tm);
                TI             = SIMD_FNMADD(KP500000000, Tm, Tj);
                T1h            = T1f + T1g;
                T1l            = T1g - T1f;
                TZ             = TT - TU;
                TV             = TT + TU;
                T1b            = T17 + T18;
                T19            = T17 - T18;
                TF             = TB + TE;
                TJ             = TE - TB;
                Cr[0]          = T12 + T15;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T15, T12);
                Cr[WS(cs, 15)] = TO + TP;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, TP, TO);
                Ci[WS(cs, 9)]  = KP951056516 * (Tf - Th);
                TQ             = SIMD_FMADD(KP500000000, Th, Tf);
                Ci[WS(cs, 6)]  = KP951056516 * (T9 - Te);
                T1k            = SIMD_FMADD(KP500000000, T9, Te);
                Cr[WS(cs, 6)]  = T1e + T1h;
                T1i            = SIMD_FNMADD(KP500000000, T1h, T1e);
                Cr[WS(cs, 9)]  = TY + TZ;
                T10            = SIMD_FNMADD(KP500000000, TZ, TY);
                Cr[WS(cs, 12)] = T1a + T1b;
                T1c            = SIMD_FNMADD(KP500000000, T1b, T1a);
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T19, T16));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T19, T16)));
                Cr[WS(cs, 3)] = Tv + TF;
                TG            = SIMD_FNMADD(KP500000000, TF, Tv);
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TJ, TI)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, TJ, TI));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TV, TQ)));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, TV, TQ)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1l, T1k));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1l, T1k));
                Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1j, T1i);
                Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1j, T1i);
                Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T11, T10);
                Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T11, T10);
                Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1d, T1c);
                Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1d, T1c);
                Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, TH, TG);
                Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, TH, TG);
            }
        }
    }
}

template <>
struct r2cf_traits<30, 12>
{
    static constexpr long_t flops           = 183;
    static constexpr long_t operations      = 123;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 101;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 12 -name r2cf
 * -standalone */

/*
 * This function contains 109 FP additions, 74 FP multiplications,
 * (or, 49 additions, 14 multiplications, 60 fused multiply/add),
 * 101 stack variables, 10 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 12>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T1, T2, T4, T5, Tm, Tn, Tj, Tk, Ta, Tb, Td, Te;
        T1 = R0[0];
        T2 = R0[WS(rs, 6)];
        T4 = R0[WS(rs, 9)];
        T5 = R0[WS(rs, 3)];
        Tm = R0[WS(rs, 2)];
        Tn = R0[WS(rs, 8)];
        Tj = R0[WS(rs, 5)];
        Tk = R0[WS(rs, 11)];
        Ta = R0[WS(rs, 10)];
        Tb = R0[WS(rs, 4)];
        Td = R0[WS(rs, 1)];
        Te = R0[WS(rs, 7)];
        {
            SIMD_FLOAT TX, TI, Tr, T9, TQ, T10, T1e, T15, TR, TT, T1h, T19, TY,
                TW, TO;
            SIMD_FLOAT TS, Tu, T1i, Tq, T1a, T3, T1n, TG, Tv, T7, T16, T6, Tz,
                To, TM;
            SIMD_FLOAT T1l, Tl, Tc, T1j, TJ, Tx, Tg, T12, Tf, TC, Tw, T1q, T1o,
                T17, T1f;
            SIMD_FLOAT T1b, T11, TZ, TP;
            T3  = SIMD_FMADD(KP309016994, T2, T1);
            T1n = T1 + T2;
            TG  = SIMD_FNMADD(KP809016994, T2, T1);
            Tv  = SIMD_FMSUB(KP618033988, T4, T5);
            T7  = T4 + T5;
            T16 = SIMD_FMADD(KP618033988, T5, T4);
            T6  = T4 - T5;
            Tz  = Tm - Tn;
            To  = Tm + Tn;
            TM  = SIMD_FNMADD(KP809016994, Tk, Tj);
            T1l = Tj + Tk;
            Tl  = SIMD_FMADD(KP309016994, Tk, Tj);
            Tc  = SIMD_FMADD(KP309016994, Tb, Ta);
            T1j = Ta + Tb;
            TJ  = SIMD_FNMADD(KP809016994, Tb, Ta);
            Tx  = SIMD_FNMADD(KP618033988, Td, Te);
            Tg  = Td + Te;
            T12 = SIMD_FMADD(KP618033988, Te, Td);
            Tf  = Td - Te;
            TC  = SIMD_FMADD(KP618033988, T2, Tv);
            Tw  = SIMD_FNMADD(KP618033988, T2, Tv);
            T1q = T1n + T7;
            T1o = T1n - T7;
            T17 = T2 + T16;
            T1f = T2 - T16;
            {
                SIMD_FLOAT TH, T8, T14, TE, T1d, TA, TN, TV, T1m, T1s, Tt, Tp,
                    TD, Ty, T1r;
                SIMD_FLOAT T1k, T1c, T13, TK, Th, TF, TB, T1t, T1p, T1g, T18,
                    TU, TL, Ts, Ti;
                TH             = SIMD_FMADD(KP447213595, T7, T6);
                T8             = SIMD_FNMADD(KP447213595, T7, T6);
                T14            = SIMD_FMSUB(KP618033988, Tz, Tk);
                TE             = SIMD_FMADD(KP618033988, Tk, Tz);
                T1d            = SIMD_FMADD(KP618033988, Tz, Tk);
                TA             = SIMD_FNMADD(KP618033988, Tk, Tz);
                TN             = SIMD_FNMADD(KP309016994, To, TM);
                TV             = SIMD_FMADD(KP309016994, To, TM);
                T1m            = To - T1l;
                T1s            = To + T1l;
                Tt             = SIMD_FNMADD(KP809016994, To, Tl);
                Tp             = SIMD_FMADD(KP809016994, To, Tl);
                TD             = SIMD_FNMADD(KP618033988, Tb, Tx);
                Ty             = SIMD_FMADD(KP618033988, Tb, Tx);
                T1r            = T1j + Tg;
                T1k            = T1j - Tg;
                T1c            = Tb - T12;
                T13            = Tb + T12;
                TK             = SIMD_FMADD(KP447213595, Tg, Tf);
                Th             = SIMD_FNMADD(KP447213595, Tg, Tf);
                TX             = SIMD_FNMADD(KP559016994, TH, TG);
                TI             = SIMD_FMADD(KP559016994, TH, TG);
                Tr             = SIMD_FMADD(KP559016994, T8, T3);
                T9             = SIMD_FNMADD(KP559016994, T8, T3);
                TQ             = TD + TE;
                TF             = TD - TE;
                T10            = Ty - TA;
                TB             = Ty + TA;
                T1t            = T1r + T1s;
                Ci[WS(cs, 10)] = KP866025403 * (T1s - T1r);
                T1p            = T1k + T1m;
                Ci[WS(cs, 5)]  = KP866025403 * (T1k - T1m);
                T1e            = T1c + T1d;
                T1g            = T1c - T1d;
                T15            = T13 + T14;
                T18            = T14 - T13;
                TU             = SIMD_FNMADD(KP559016994, TK, TJ);
                TL             = SIMD_FMADD(KP559016994, TK, TJ);
                Ts             = SIMD_FMADD(KP559016994, Th, Tc);
                Ti             = SIMD_FNMADD(KP559016994, Th, Tc);
                Ci[WS(cs, 3)]  = KP951056516 * (TC + TF);
                TR             = SIMD_FNMADD(KP500000000, TF, TC);
                Ci[WS(cs, 12)] = KP951056516 * (Tw + TB);
                TT             = SIMD_FNMADD(KP500000000, TB, Tw);
                Cr[0]          = T1q + T1t;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1t, T1q);
                Cr[WS(cs, 15)] = T1o + T1p;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1p, T1o);
                Ci[WS(cs, 6)]  = KP951056516 * (T1g - T1f);
                T1h            = SIMD_FMADD(KP500000000, T1g, T1f);
                Ci[WS(cs, 9)]  = KP951056516 * (T17 + T18);
                T19            = SIMD_FNMADD(KP500000000, T18, T17);
                TY             = TU + TV;
                TW             = TU - TV;
                TO             = TL - TN;
                TS             = TL + TN;
                Tu             = Ts + Tt;
                T1i            = Tt - Ts;
                Tq             = Ti - Tp;
                T1a            = Ti + Tp;
            }
            Cr[WS(cs, 12)] = TX + TY;
            TZ             = SIMD_FNMADD(KP500000000, TY, TX);
            Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, TW, TT));
            Ci[WS(cs, 8)] = -(KP951056516 * (SIMD_FNMADD(KP910592997, TW, TT)));
            Cr[WS(cs, 3)] = TI + TO;
            TP            = SIMD_FNMADD(KP500000000, TO, TI);
            Ci[WS(cs, 7)] = -(KP951056516 * (SIMD_FMADD(KP910592997, TS, TR)));
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FNMADD(KP910592997, TS, TR));
            Cr[WS(cs, 6)]  = Tr + Tu;
            T1b            = SIMD_FNMADD(KP500000000, Tu, Tr);
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1i, T1h));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1i, T1h));
            Cr[WS(cs, 9)]  = T9 + Tq;
            T11            = SIMD_FNMADD(KP500000000, Tq, T9);
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1a, T19)));
            Ci[WS(cs, 1)] =
                -(KP951056516 * (SIMD_FMADD(KP910592997, T1a, T19)));
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T10, TZ);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T10, TZ);
            Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, TQ, TP);
            Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, TQ, TP);
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1e, T1b);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1e, T1b);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T15, T11);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T15, T11);
        }
    }
}

template <>
struct r2cf_traits<30, 13>
{
    static constexpr long_t flops           = 189;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 43;
    static constexpr long_t stack_vars      = 108;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 13 -name r2cf
 * -standalone */

/*
 * This function contains 114 FP additions, 75 FP multiplications,
 * (or, 53 additions, 14 multiplications, 61 fused multiply/add),
 * 108 stack variables, 11 constants, and 43 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 13>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT T1k, T15, T13, TT, Ty, TV, T1a, Tv, TN, T12, T16, TU, T14,
            T1h;
        {
            SIMD_FLOAT T1, Tg, TO, TA, Tb, T1c, T19, TJ, T1j, TF, TS, T10, T1s,
                T1y, Tx;
            SIMD_FLOAT Tt, TI, TD, T1x, T1q, T1i, T18, TP, Tl, T4, T1b, T6, Tz,
                Tc, TM;
            SIMD_FLOAT Tq, Tr, Tn, To, Te, Tf, Th, Ti, Ta, T8, T9, T2, T3, TE,
                Ts;
            SIMD_FLOAT TR, T1r, Tp, T1p, TC, Tk, T17, Tj;
            Tq  = R0[WS(rs, 2)];
            Tr  = R0[WS(rs, 8)];
            Tn  = R0[WS(rs, 5)];
            To  = R0[WS(rs, 11)];
            Te  = R0[WS(rs, 10)];
            Tf  = R0[WS(rs, 4)];
            Th  = R0[WS(rs, 1)];
            Ti  = R0[WS(rs, 7)];
            T1  = R0[0];
            T8  = R0[WS(rs, 9)];
            T9  = R0[WS(rs, 3)];
            T2  = R0[WS(rs, 6)];
            T3  = R0[WS(rs, 12)];
            TE  = Tq - Tr;
            Ts  = Tq + Tr;
            TR  = SIMD_FNMADD(KP809016994, To, Tn);
            T1r = Tn + To;
            Tp  = SIMD_FMADD(KP309016994, To, Tn);
            Tg  = SIMD_FMADD(KP309016994, Tf, Te);
            T1p = Te + Tf;
            TO  = SIMD_FNMADD(KP809016994, Tf, Te);
            TC  = SIMD_FNMADD(KP618033988, Th, Ti);
            Tk  = Th + Ti;
            T17 = SIMD_FMADD(KP618033988, Ti, Th);
            Tj  = Th - Ti;
            TA  = SIMD_FMSUB(KP618033988, T8, T9);
            Tb  = T8 + T9;
            T1c = SIMD_FMADD(KP618033988, T9, T8);
            Ta  = T8 - T9;
            T19 = SIMD_FMSUB(KP618033988, TE, To);
            TJ  = SIMD_FMADD(KP618033988, To, TE);
            T1j = SIMD_FMADD(KP618033988, TE, To);
            TF  = SIMD_FNMADD(KP618033988, To, TE);
            TS  = SIMD_FNMADD(KP309016994, Ts, TR);
            T10 = SIMD_FMADD(KP309016994, Ts, TR);
            T1s = Ts - T1r;
            T1y = Ts + T1r;
            Tx  = SIMD_FNMADD(KP809016994, Ts, Tp);
            Tt  = SIMD_FMADD(KP809016994, Ts, Tp);
            TI  = SIMD_FNMADD(KP618033988, Tf, TC);
            TD  = SIMD_FMADD(KP618033988, Tf, TC);
            T1x = T1p + Tk;
            T1q = T1p - Tk;
            T1i = Tf - T17;
            T18 = Tf + T17;
            TP  = SIMD_FMADD(KP447213595, Tk, Tj);
            Tl  = SIMD_FNMADD(KP447213595, Tk, Tj);
            T4  = T2 + T3;
            T1b = SIMD_FMADD(KP618033988, T3, T2);
            T6  = T3 - T2;
            Tz  = SIMD_FNMADD(KP618033988, T2, T3);
            Tc  = SIMD_FNMADD(KP447213595, Tb, Ta);
            TM  = SIMD_FMADD(KP447213595, Tb, Ta);
            {
                SIMD_FLOAT T1v, T1z, TQ, Tw, Tm, T5, T1t, T1d, T1l, TH, TB, T1m,
                    TG, T11, TZ;
                SIMD_FLOAT TL, T1g, Tu, Td, T1f, TX, T1o, TK, T7, T1w, T1u, T1e,
                    T1n, TY, TW;
                Ci[WS(cs, 10)] = KP866025403 * (T1y - T1x);
                Ci[WS(cs, 5)]  = KP866025403 * (T1q - T1s);
                T1v            = T1q + T1s;
                T1z            = T1x + T1y;
                TZ             = SIMD_FNMADD(KP559016994, TP, TO);
                TQ             = SIMD_FMADD(KP559016994, TP, TO);
                Tw             = SIMD_FMADD(KP559016994, Tl, Tg);
                Tm             = SIMD_FNMADD(KP559016994, Tl, Tg);
                T5             = SIMD_FNMADD(KP250000000, T4, T1);
                T1t            = T1 + T4;
                T1d            = T1b + T1c;
                T1l            = T1b - T1c;
                TH             = TA - Tz;
                TB             = Tz + TA;
                T1m            = T1i - T1j;
                T1k            = T1i + T1j;
                T15            = TD - TF;
                TG             = TD + TF;
                T11            = TZ - T10;
                T13            = TZ + T10;
                TT             = TQ - TS;
                TX             = TQ + TS;
                T1o            = Tx - Tw;
                Ty             = Tw + Tx;
                TV             = TI + TJ;
                TK             = TI - TJ;
                TL             = SIMD_FMADD(KP559016994, T6, T5);
                T7             = SIMD_FNMADD(KP559016994, T6, T5);
                T1w            = T1t + Tb;
                T1u            = T1t - Tb;
                T1g            = Tm + Tt;
                Tu             = Tm - Tt;
                T1a            = T18 + T19;
                T1e            = T19 - T18;
                Ci[WS(cs, 6)]  = KP951056516 * (T1m - T1l);
                T1n            = SIMD_FMADD(KP500000000, T1m, T1l);
                Ci[WS(cs, 12)] = KP951056516 * (TB + TG);
                TY             = SIMD_FNMADD(KP500000000, TG, TB);
                Ci[WS(cs, 3)]  = KP951056516 * (TH + TK);
                TW             = SIMD_FNMADD(KP500000000, TK, TH);
                Tv             = SIMD_FMADD(KP559016994, Tc, T7);
                Td             = SIMD_FNMADD(KP559016994, Tc, T7);
                Cr[0]          = T1w + T1z;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1z, T1w);
                Cr[WS(cs, 15)] = T1u + T1v;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1v, T1u);
                Ci[WS(cs, 9)]  = KP951056516 * (T1d + T1e);
                T1f            = SIMD_FNMADD(KP500000000, T1e, T1d);
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1o, T1n));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1o, T1n));
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T11, TY));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T11, TY)));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, TX, TW)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, TX, TW));
                TN  = SIMD_FMADD(KP559016994, TM, TL);
                T12 = SIMD_FNMADD(KP559016994, TM, TL);
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1g, T1f)));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1g, T1f)));
                Cr[WS(cs, 9)] = Td + Tu;
                T16           = SIMD_FNMADD(KP500000000, Tu, Td);
            }
        }
        Cr[WS(cs, 3)]  = TN + TT;
        TU             = SIMD_FNMADD(KP500000000, TT, TN);
        Cr[WS(cs, 12)] = T12 + T13;
        T14            = SIMD_FNMADD(KP500000000, T13, T12);
        Cr[WS(cs, 6)]  = Tv + Ty;
        T1h            = SIMD_FNMADD(KP500000000, Ty, Tv);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1a, T16);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1a, T16);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, TV, TU);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, TV, TU);
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T15, T14);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T15, T14);
        Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1k, T1h);
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1k, T1h);
    }
}

template <>
struct r2cf_traits<30, 14>
{
    static constexpr long_t flops           = 191;
    static constexpr long_t operations      = 130;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 14 -name r2cf
 * -standalone */

/*
 * This function contains 116 FP additions, 75 FP multiplications,
 * (or, 55 additions, 14 multiplications, 61 fused multiply/add),
 * 111 stack variables, 11 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 14>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT Tf, T1, T2, Tg, TR, T1s, TC, Tb, T1f, T1c, TM, T1m, TI, TV,
            T13;
        SIMD_FLOAT T1v, T1B, Tz, Tv, TF, T1a, Tm, Tl, T3, TP, Tc, Ts, Tt, Tp,
            Tq;
        SIMD_FLOAT Te, Th, Ti, Tj, Ta, T8, T9, TH, Tu, TU, T1u, Tr, TE, Tk;
        Ts  = R0[WS(rs, 2)];
        Tt  = R0[WS(rs, 8)];
        Tp  = R0[WS(rs, 5)];
        Tq  = R0[WS(rs, 11)];
        Te  = R0[WS(rs, 10)];
        Th  = R0[WS(rs, 1)];
        Tf  = R0[WS(rs, 4)];
        Ti  = R0[WS(rs, 7)];
        Tj  = R0[WS(rs, 13)];
        T1  = R0[0];
        T8  = R0[WS(rs, 9)];
        T9  = R0[WS(rs, 3)];
        T2  = R0[WS(rs, 6)];
        TH  = Ts - Tt;
        Tu  = Ts + Tt;
        TU  = SIMD_FNMADD(KP809016994, Tq, Tp);
        T1u = Tp + Tq;
        Tr  = SIMD_FMADD(KP309016994, Tq, Tp);
        Tg  = SIMD_FMADD(KP309016994, Tf, Te);
        TR  = SIMD_FNMADD(KP809016994, Tf, Te);
        T1s = Te + Tf;
        TE  = Ti - Tj;
        Tk  = Ti + Tj;
        TC  = SIMD_FMSUB(KP618033988, T8, T9);
        Tb  = T8 + T9;
        T1f = SIMD_FMADD(KP618033988, T9, T8);
        Ta  = T8 - T9;
        T1c = SIMD_FMSUB(KP618033988, TH, Tq);
        TM  = SIMD_FMADD(KP618033988, Tq, TH);
        T1m = SIMD_FMADD(KP618033988, TH, Tq);
        TI  = SIMD_FNMADD(KP618033988, Tq, TH);
        TV  = SIMD_FNMADD(KP309016994, Tu, TU);
        T13 = SIMD_FMADD(KP309016994, Tu, TU);
        T1v = Tu - T1u;
        T1B = Tu + T1u;
        Tz  = SIMD_FNMADD(KP809016994, Tu, Tr);
        Tv  = SIMD_FMADD(KP809016994, Tu, Tr);
        TF  = SIMD_FNMADD(KP618033988, Th, TE);
        T1a = SIMD_FMADD(KP618033988, TE, Th);
        Tm  = Th + Tk;
        Tl  = Th - Tk;
        T3  = R0[WS(rs, 12)];
        TP  = SIMD_FMADD(KP447213595, Tb, Ta);
        Tc  = SIMD_FNMADD(KP447213595, Tb, Ta);
        {
            SIMD_FLOAT T6, TY, TN, T18, TJ, T1n, T1p, T1d, T1h, T1C, T1y, TT,
                T12, To, Ty;
            SIMD_FLOAT TD, TK, T1o, T1g, T1w, T5, TG, TL, T1b, T1l, T1t, T1A,
                Tn, TS, T4;
            SIMD_FLOAT T1e, TB, T14, T16, TW, T10, TA, T1r, Tw, T1j, TZ, T11,
                T1i, T1q, T7;
            SIMD_FLOAT TO, T1x, T1z, TQ, T15, Td, Tx, T17, TX, T1k, T19;
            TG             = SIMD_FMADD(KP618033988, Tf, TF);
            TL             = SIMD_FNMADD(KP618033988, Tf, TF);
            T1b            = Tf + T1a;
            T1l            = Tf - T1a;
            T1t            = T1s - Tm;
            T1A            = T1s + Tm;
            Tn             = SIMD_FNMADD(KP447213595, Tm, Tl);
            TS             = SIMD_FMADD(KP447213595, Tm, Tl);
            T4             = T2 + T3;
            T1e            = SIMD_FMADD(KP618033988, T3, T2);
            T6             = T3 - T2;
            TB             = SIMD_FNMADD(KP618033988, T2, T3);
            TY             = TL + TM;
            TN             = TL - TM;
            T18            = TG - TI;
            TJ             = TG + TI;
            T1n            = T1l + T1m;
            T1p            = T1l - T1m;
            T1d            = T1b + T1c;
            T1h            = T1c - T1b;
            Ci[WS(cs, 10)] = KP866025403 * (T1B - T1A);
            T1C            = T1A + T1B;
            Ci[WS(cs, 5)]  = KP866025403 * (T1t - T1v);
            T1y            = T1t + T1v;
            TT             = SIMD_FMADD(KP559016994, TS, TR);
            T12            = SIMD_FNMADD(KP559016994, TS, TR);
            To             = SIMD_FNMADD(KP559016994, Tn, Tg);
            Ty             = SIMD_FMADD(KP559016994, Tn, Tg);
            TD             = TB + TC;
            TK             = TC - TB;
            T1o            = T1e - T1f;
            T1g            = T1e + T1f;
            T1w            = T1 + T4;
            T5             = SIMD_FNMADD(KP250000000, T4, T1);
            T14            = T12 - T13;
            T16            = T12 + T13;
            TW             = TT - TV;
            T10            = TT + TV;
            TA             = Ty + Tz;
            T1r            = Tz - Ty;
            Tw             = To - Tv;
            T1j            = To + Tv;
            Ci[WS(cs, 3)]  = KP951056516 * (TK + TN);
            TZ             = SIMD_FNMADD(KP500000000, TN, TK);
            Ci[WS(cs, 12)] = KP951056516 * (TD + TJ);
            T11            = SIMD_FNMADD(KP500000000, TJ, TD);
            Ci[WS(cs, 9)]  = KP951056516 * (T1g + T1h);
            T1i            = SIMD_FNMADD(KP500000000, T1h, T1g);
            Ci[WS(cs, 6)]  = KP951056516 * (T1p - T1o);
            T1q            = SIMD_FMADD(KP500000000, T1p, T1o);
            T7             = SIMD_FNMADD(KP559016994, T6, T5);
            TO             = SIMD_FMADD(KP559016994, T6, T5);
            T1x            = T1w - Tb;
            T1z            = T1w + Tb;
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FNMADD(KP910592997, T10, TZ));
            Ci[WS(cs, 7)] = -(KP951056516 * (SIMD_FMADD(KP910592997, T10, TZ)));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T14, T11)));
            Ci[WS(cs, 2)] = KP951056516 * (SIMD_FMADD(KP910592997, T14, T11));
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1j, T1i)));
            Ci[WS(cs, 1)] =
                -(KP951056516 * (SIMD_FMADD(KP910592997, T1j, T1i)));
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1r, T1q));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1r, T1q));
            TQ             = SIMD_FMADD(KP559016994, TP, TO);
            T15            = SIMD_FNMADD(KP559016994, TP, TO);
            Td             = SIMD_FNMADD(KP559016994, Tc, T7);
            Tx             = SIMD_FMADD(KP559016994, Tc, T7);
            Cr[0]          = T1z + T1C;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1C, T1z);
            Cr[WS(cs, 15)] = T1x + T1y;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1y, T1x);
            T17            = SIMD_FNMADD(KP500000000, T16, T15);
            Cr[WS(cs, 12)] = T15 + T16;
            TX             = SIMD_FNMADD(KP500000000, TW, TQ);
            Cr[WS(cs, 3)]  = TQ + TW;
            T1k            = SIMD_FNMADD(KP500000000, TA, Tx);
            Cr[WS(cs, 6)]  = Tx + TA;
            T19            = SIMD_FNMADD(KP500000000, Tw, Td);
            Cr[WS(cs, 9)]  = Td + Tw;
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T18, T17);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T18, T17);
            Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, TY, TX);
            Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, TY, TX);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1n, T1k);
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1n, T1k);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1d, T19);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1d, T19);
        }
    }
}

template <>
struct r2cf_traits<30, 15>
{
    static constexpr long_t flops           = 199;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 45;
    static constexpr long_t stack_vars      = 118;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 15 -name r2cf
 * -standalone */

/*
 * This function contains 122 FP additions, 77 FP multiplications,
 * (or, 59 additions, 14 multiplications, 63 fused multiply/add),
 * 118 stack variables, 11 constants, and 45 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 15>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT Tf, Ts, Tq, T1, T2, Tg, TW, T1z, T1B, TZ, Tr, Tv, TL, Ta,
            T1m;
        SIMD_FLOAT Tb, TG, T3, TJ, T1g, Tm, Tl, Te, Th, Ti, Tj, Tp, Tt, Tu, T8;
        SIMD_FLOAT T9, TI, Tk, TM, T1i, Tx, Tw, T14, T1e, T1u, T1k, T1d, T13,
            T1r, T1f;
        SIMD_FLOAT TU, Tc;
        Te  = R0[WS(rs, 10)];
        Th  = R0[WS(rs, 1)];
        Tf  = R0[WS(rs, 4)];
        Ti  = R0[WS(rs, 7)];
        Tj  = R0[WS(rs, 13)];
        Tp  = R0[WS(rs, 5)];
        Ts  = R0[WS(rs, 14)];
        Tq  = R0[WS(rs, 11)];
        Tt  = R0[WS(rs, 2)];
        Tu  = R0[WS(rs, 8)];
        T1  = R0[0];
        T8  = R0[WS(rs, 9)];
        T9  = R0[WS(rs, 3)];
        T2  = R0[WS(rs, 6)];
        Tg  = SIMD_FMADD(KP309016994, Tf, Te);
        TW  = SIMD_FNMADD(KP809016994, Tf, Te);
        T1z = Te + Tf;
        TI  = Ti - Tj;
        Tk  = Ti + Tj;
        T1B = Tp + Tq;
        TZ  = SIMD_FNMADD(KP809016994, Tq, Tp);
        Tr  = SIMD_FMADD(KP309016994, Tq, Tp);
        Tv  = Tt + Tu;
        TL  = Tt - Tu;
        Ta  = T8 - T9;
        T1m = SIMD_FMADD(KP618033988, T9, T8);
        Tb  = T8 + T9;
        TG  = SIMD_FMSUB(KP618033988, T8, T9);
        T3  = R0[WS(rs, 12)];
        TJ  = SIMD_FNMADD(KP618033988, Th, TI);
        T1g = SIMD_FMADD(KP618033988, TI, Th);
        Tm  = Th + Tk;
        Tl  = Th - Tk;
        TM  = SIMD_FMADD(KP618033988, Ts, TL);
        T1i = SIMD_FNMADD(KP618033988, TL, Ts);
        Tx  = Ts + Tv;
        Tw  = Ts - Tv;
        TU  = SIMD_FMADD(KP447213595, Tb, Ta);
        Tc  = SIMD_FNMADD(KP447213595, Tb, Ta);
        {
            SIMD_FLOAT TF, T6, T1l, T4, TQ, TK, T1t, T1h, T1H, T1A, TX, Tn, TR,
                TN, T1s;
            SIMD_FLOAT T1j, T1I, T1C, T10, Ty, TP, TH, T1n, T1v, T5, T1D, T18,
                TY, TC, To;
            TF  = SIMD_FNMADD(KP618033988, T2, T3);
            T6  = T3 - T2;
            T1l = SIMD_FMADD(KP618033988, T3, T2);
            T4  = T2 + T3;
            TQ  = SIMD_FNMADD(KP618033988, Tf, TJ);
            TK  = SIMD_FMADD(KP618033988, Tf, TJ);
            T1t = Tf - T1g;
            T1h = Tf + T1g;
            T1H = T1z + Tm;
            T1A = T1z - Tm;
            TX  = SIMD_FMADD(KP447213595, Tm, Tl);
            Tn  = SIMD_FNMADD(KP447213595, Tm, Tl);
            TR  = SIMD_FMADD(KP618033988, Tq, TM);
            TN  = SIMD_FNMADD(KP618033988, Tq, TM);
            T1s = T1i - Tq;
            T1j = T1i + Tq;
            T1I = Tx + T1B;
            T1C = Tx - T1B;
            T10 = SIMD_FMADD(KP447213595, Tx, Tw);
            Ty  = SIMD_FNMADD(KP447213595, Tx, Tw);
            TP  = TG - TF;
            TH  = TF + TG;
            T1n = T1l + T1m;
            T1v = T1l - T1m;
            T5  = SIMD_FNMADD(KP250000000, T4, T1);
            T1D = T1 + T4;
            T18 = SIMD_FNMADD(KP559016994, TX, TW);
            TY  = SIMD_FMADD(KP559016994, TX, TW);
            TC  = SIMD_FMADD(KP559016994, Tn, Tg);
            To  = SIMD_FNMADD(KP559016994, Tn, Tg);
            {
                SIMD_FLOAT TS, TO, T1w, T1o, T1J, T1F, T19, T11, TD, Tz, TT, T7,
                    T1G, T1E, T15;
                SIMD_FLOAT T17, T1x, T1p, T1c, T1a, T16, T12, T1y, TE, T1q, TA,
                    T1b, TV, TB, Td;
                TS             = TQ - TR;
                T14            = TQ + TR;
                TO             = TK + TN;
                T1e            = TK - TN;
                T1w            = T1t + T1s;
                T1u            = T1s - T1t;
                T1o            = T1h + T1j;
                T1k            = T1h - T1j;
                Ci[WS(cs, 10)] = KP866025403 * (T1I - T1H);
                T1J            = T1H + T1I;
                Ci[WS(cs, 5)]  = KP866025403 * (T1A - T1C);
                T1F            = T1A + T1C;
                T19            = SIMD_FNMADD(KP559016994, T10, TZ);
                T11            = SIMD_FMADD(KP559016994, T10, TZ);
                TD             = SIMD_FMADD(KP559016994, Ty, Tr);
                Tz             = SIMD_FNMADD(KP559016994, Ty, Tr);
                TT             = SIMD_FMADD(KP559016994, T6, T5);
                T7             = SIMD_FNMADD(KP559016994, T6, T5);
                T1G            = T1D + Tb;
                T1E            = T1D - Tb;
                Ci[WS(cs, 3)]  = KP951056516 * (TP + TS);
                T15            = SIMD_FNMADD(KP500000000, TS, TP);
                Ci[WS(cs, 12)] = KP951056516 * (TH + TO);
                T17            = SIMD_FNMADD(KP500000000, TO, TH);
                Ci[WS(cs, 6)]  = KP951056516 * (T1w - T1v);
                T1x            = SIMD_FMADD(KP500000000, T1w, T1v);
                Ci[WS(cs, 9)]  = KP951056516 * (T1n - T1o);
                T1p            = SIMD_FMADD(KP500000000, T1o, T1n);
                T1c            = T18 + T19;
                T1a            = T18 - T19;
                T16            = TY + T11;
                T12            = TY - T11;
                T1y            = TD - TC;
                TE             = TC + TD;
                T1q            = To + Tz;
                TA             = To - Tz;
                T1b            = SIMD_FNMADD(KP559016994, TU, TT);
                TV             = SIMD_FMADD(KP559016994, TU, TT);
                TB             = SIMD_FMADD(KP559016994, Tc, T7);
                Td             = SIMD_FNMADD(KP559016994, Tc, T7);
                Cr[0]          = T1G + T1J;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1J, T1G);
                Cr[WS(cs, 15)] = T1E + T1F;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1F, T1E);
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1a, T17)));
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1a, T17));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T16, T15));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T16, T15)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1y, T1x));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1y, T1x));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1q, T1p)));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1q, T1p)));
                T1d            = SIMD_FNMADD(KP500000000, T1c, T1b);
                Cr[WS(cs, 12)] = T1b + T1c;
                T13            = SIMD_FNMADD(KP500000000, T12, TV);
                Cr[WS(cs, 3)]  = TV + T12;
                T1r            = SIMD_FNMADD(KP500000000, TE, TB);
                Cr[WS(cs, 6)]  = TB + TE;
                T1f            = SIMD_FNMADD(KP500000000, TA, Td);
                Cr[WS(cs, 9)]  = Td + TA;
            }
        }
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1e, T1d);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1e, T1d);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, T14, T13);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, T14, T13);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1u, T1r);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1u, T1r);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1k, T1f);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1k, T1f);
    }
}

template <>
struct r2cf_traits<30, 16>
{
    static constexpr long_t flops           = 198;
    static constexpr long_t operations      = 138;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 16 -name r2cf
 * -standalone */

/*
 * This function contains 124 FP additions, 74 FP multiplications,
 * (or, 64 additions, 14 multiplications, 60 fused multiply/add),
 * 121 stack variables, 11 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 16>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT Th, Ts, T1, T8, Ti, TY, T1B, T1D, T11, Tt, T9, TH, T6, T1n,
            T4;
        SIMD_FLOAT TL, T1i, To, Tn, Ta, T1k, TO, Ty, Tz, Tg, Tj, Tk, Tl, Tr, Tu;
        SIMD_FLOAT Tv, Tw, T2, T3, TK, Tm, Tx, TN, T16, T1g, T1w, T1m, T1f, T15,
            T1t;
        SIMD_FLOAT T1h, T1F, T5, TM, TS;
        Tg  = R0[WS(rs, 10)];
        Tj  = R0[WS(rs, 1)];
        Th  = R0[WS(rs, 4)];
        Tk  = R0[WS(rs, 7)];
        Tl  = R0[WS(rs, 13)];
        Tr  = R0[WS(rs, 5)];
        Tu  = R0[WS(rs, 14)];
        Ts  = R0[WS(rs, 11)];
        Tv  = R0[WS(rs, 2)];
        Tw  = R0[WS(rs, 8)];
        T1  = R0[0];
        T8  = R0[WS(rs, 15)];
        T2  = R0[WS(rs, 6)];
        T3  = R0[WS(rs, 12)];
        Ti  = SIMD_FMADD(KP309016994, Th, Tg);
        TY  = SIMD_FNMADD(KP809016994, Th, Tg);
        T1B = Tg + Th;
        TK  = Tk - Tl;
        Tm  = Tk + Tl;
        T1D = Tr + Ts;
        T11 = SIMD_FNMADD(KP809016994, Ts, Tr);
        Tt  = SIMD_FMADD(KP309016994, Ts, Tr);
        Tx  = Tv + Tw;
        TN  = Tv - Tw;
        T9  = R0[WS(rs, 9)];
        TH  = SIMD_FNMADD(KP618033988, T2, T3);
        T6  = T3 - T2;
        T1n = SIMD_FMADD(KP618033988, T3, T2);
        T4  = T2 + T3;
        TL  = SIMD_FNMADD(KP618033988, Tj, TK);
        T1i = SIMD_FMADD(KP618033988, TK, Tj);
        To  = Tj + Tm;
        Tn  = Tj - Tm;
        Ta  = R0[WS(rs, 3)];
        T1k = SIMD_FNMADD(KP618033988, TN, Tu);
        TO  = SIMD_FMADD(KP618033988, Tu, TN);
        Ty  = Tu - Tx;
        Tz  = Tu + Tx;
        T1F = T1 + T4;
        T5  = SIMD_FNMADD(KP250000000, T4, T1);
        TM  = SIMD_FMADD(KP618033988, Th, TL);
        TS  = SIMD_FNMADD(KP618033988, Th, TL);
        {
            SIMD_FLOAT T1j, T1v, T1C, T1K, Tp, TZ, Tb, T1o, Td, TI, TP, TT, T1l,
                T1u, T1E;
            SIMD_FLOAT T1L, TA, T12, T7, TV, T10, T1a, Tq, TE, TJ, TR, T1p, T1x,
                T1G, Tc;
            T1j = Th + T1i;
            T1v = Th - T1i;
            T1C = T1B - To;
            T1K = T1B + To;
            Tp  = SIMD_FNMADD(KP447213595, To, Tn);
            TZ  = SIMD_FMADD(KP447213595, To, Tn);
            Tb  = T9 + Ta;
            T1o = SIMD_FMADD(KP618033988, Ta, T9);
            Td  = T9 - Ta;
            TI  = SIMD_FMSUB(KP618033988, T9, Ta);
            TP  = SIMD_FNMADD(KP618033988, Ts, TO);
            TT  = SIMD_FMADD(KP618033988, Ts, TO);
            T1l = T1k + Ts;
            T1u = T1k - Ts;
            T1E = Tz - T1D;
            T1L = Tz + T1D;
            TA  = SIMD_FNMADD(KP447213595, Tz, Ty);
            T12 = SIMD_FMADD(KP447213595, Tz, Ty);
            T7  = SIMD_FNMADD(KP559016994, T6, T5);
            TV  = SIMD_FMADD(KP559016994, T6, T5);
            T10 = SIMD_FMADD(KP559016994, TZ, TY);
            T1a = SIMD_FNMADD(KP559016994, TZ, TY);
            Tq  = SIMD_FNMADD(KP559016994, Tp, Ti);
            TE  = SIMD_FMADD(KP559016994, Tp, Ti);
            TJ  = TH + TI;
            TR  = TI - TH;
            T1p = T1n + T1o;
            T1x = T1n - T1o;
            T1G = T8 + Tb;
            Tc  = SIMD_FNMADD(KP250000000, Tb, T8);
            {
                SIMD_FLOAT TU, TQ, T1y, T1q, T1M, T1I, T13, T1b, TB, TF, Te, TW,
                    T1H, T1J, T17;
                SIMD_FLOAT T19, T1z, T1r, T1c, T1e, T14, T18, TG, T1A, TC, T1s,
                    TX, T1d, Tf, TD;
                T16            = TS + TT;
                TU             = TS - TT;
                T1g            = TM - TP;
                TQ             = TM + TP;
                T1w            = T1u - T1v;
                T1y            = T1v + T1u;
                T1m            = T1j - T1l;
                T1q            = T1j + T1l;
                Ci[WS(cs, 10)] = KP866025403 * (T1L - T1K);
                T1M            = T1K + T1L;
                Ci[WS(cs, 5)]  = KP866025403 * (T1C - T1E);
                T1I            = T1C + T1E;
                T13            = SIMD_FMADD(KP559016994, T12, T11);
                T1b            = SIMD_FNMADD(KP559016994, T12, T11);
                TB             = SIMD_FNMADD(KP559016994, TA, Tt);
                TF             = SIMD_FMADD(KP559016994, TA, Tt);
                Te             = SIMD_FMADD(KP559016994, Td, Tc);
                TW             = SIMD_FNMADD(KP559016994, Td, Tc);
                T1H            = T1F - T1G;
                T1J            = T1F + T1G;
                Ci[WS(cs, 3)]  = KP951056516 * (TR + TU);
                T17            = SIMD_FNMADD(KP500000000, TU, TR);
                Ci[WS(cs, 12)] = KP951056516 * (TJ + TQ);
                T19            = SIMD_FNMADD(KP500000000, TQ, TJ);
                Ci[WS(cs, 6)]  = KP951056516 * (T1y - T1x);
                T1z            = SIMD_FMADD(KP500000000, T1y, T1x);
                Ci[WS(cs, 9)]  = KP951056516 * (T1p - T1q);
                T1r            = SIMD_FMADD(KP500000000, T1q, T1p);
                T1c            = T1a - T1b;
                T1e            = T1a + T1b;
                T14            = T10 - T13;
                T18            = T10 + T13;
                TG             = TE + TF;
                T1A            = TF - TE;
                TC             = Tq - TB;
                T1s            = Tq + TB;
                TX             = TV - TW;
                T1d            = TV + TW;
                Tf             = T7 - Te;
                TD             = T7 + Te;
                Cr[0]          = T1J + T1M;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1M, T1J);
                Cr[WS(cs, 15)] = T1H + T1I;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1I, T1H);
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1c, T19)));
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1c, T19));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T18, T17));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T18, T17)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1A, T1z));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1A, T1z));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1s, T1r)));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1s, T1r)));
                T1f            = SIMD_FNMADD(KP500000000, T1e, T1d);
                Cr[WS(cs, 12)] = T1d + T1e;
                T15            = SIMD_FNMADD(KP500000000, T14, TX);
                Cr[WS(cs, 3)]  = TX + T14;
                T1t            = SIMD_FNMADD(KP500000000, TG, TD);
                Cr[WS(cs, 6)]  = TD + TG;
                T1h            = SIMD_FNMADD(KP500000000, TC, Tf);
                Cr[WS(cs, 9)]  = Tf + TC;
            }
        }
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1g, T1f);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1g, T1f);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, T16, T15);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, T16, T15);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1w, T1t);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1w, T1t);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1m, T1h);
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1m, T1h);
    }
}

template <>
struct r2cf_traits<30, 17>
{
    static constexpr long_t flops           = 200;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 47;
    static constexpr long_t stack_vars      = 124;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 17 -name r2cf
 * -standalone */

/*
 * This function contains 126 FP additions, 74 FP multiplications,
 * (or, 66 additions, 14 multiplications, 60 fused multiply/add),
 * 124 stack variables, 11 constants, and 47 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 17>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    {
        SIMD_FLOAT Tw, Tu, Tg, Tl, T1, T8, T2, Tv, T14, T1G, TQ, Tz, T3, Tj, TO;
        SIMD_FLOAT To, TM, T9, Ta, Tt, Tx, Ty, Th, Ti, Tm, Tn, T19, T1j, T1z,
            T1p;
        SIMD_FLOAT T1i, T18, T1w, T1k, T1n, TR, TA, TB, T4, T1q, T6, TJ, Tk,
            T11, T1E;
        SIMD_FLOAT TN, T1l, Tq, Tp, TK, Td, T1r, Tb;
        Tt  = R0[WS(rs, 5)];
        Tw  = R0[WS(rs, 14)];
        Tu  = R0[WS(rs, 11)];
        Tx  = R0[WS(rs, 2)];
        Ty  = R0[WS(rs, 8)];
        Tg  = R0[WS(rs, 10)];
        Tl  = R0[WS(rs, 1)];
        Th  = R0[WS(rs, 16)];
        Ti  = R0[WS(rs, 4)];
        Tm  = R0[WS(rs, 7)];
        Tn  = R0[WS(rs, 13)];
        T1  = R0[0];
        T8  = R0[WS(rs, 15)];
        T2  = R0[WS(rs, 6)];
        Tv  = SIMD_FMADD(KP309016994, Tu, Tt);
        T14 = SIMD_FNMADD(KP809016994, Tu, Tt);
        T1G = Tt + Tu;
        TQ  = Tx - Ty;
        Tz  = Tx + Ty;
        T3  = R0[WS(rs, 12)];
        Tj  = Th + Ti;
        TO  = Th - Ti;
        To  = Tm + Tn;
        TM  = Tm - Tn;
        T9  = R0[WS(rs, 9)];
        Ta  = R0[WS(rs, 3)];
        T1n = SIMD_FNMADD(KP618033988, TQ, Tw);
        TR  = SIMD_FMADD(KP618033988, Tw, TQ);
        TA  = Tw - Tz;
        TB  = Tw + Tz;
        T4  = T2 + T3;
        T1q = SIMD_FMADD(KP618033988, T3, T2);
        T6  = T3 - T2;
        TJ  = SIMD_FNMADD(KP618033988, T2, T3);
        Tk  = SIMD_FMADD(KP309016994, Tj, Tg);
        T11 = SIMD_FNMADD(KP809016994, Tj, Tg);
        T1E = Tg + Tj;
        TN  = SIMD_FNMADD(KP618033988, Tl, TM);
        T1l = SIMD_FMADD(KP618033988, TM, Tl);
        Tq  = Tl + To;
        Tp  = Tl - To;
        TK  = SIMD_FMSUB(KP618033988, T9, Ta);
        Td  = T9 - Ta;
        T1r = SIMD_FMADD(KP618033988, Ta, T9);
        Tb  = T9 + Ta;
        {
            SIMD_FLOAT TW, TS, T1y, T1o, T1O, T1H, T15, TC, T5, T1I, TV, TP,
                T1x, T1m, T1N;
            SIMD_FLOAT T1F, T12, Tr, TU, TL, T1A, T1s, Tc, T1J, T1e, T16, TH,
                TD, TY, T7;
            TW  = SIMD_FMADD(KP618033988, Tu, TR);
            TS  = SIMD_FNMADD(KP618033988, Tu, TR);
            T1y = T1n - Tu;
            T1o = T1n + Tu;
            T1O = TB + T1G;
            T1H = TB - T1G;
            T15 = SIMD_FMADD(KP447213595, TB, TA);
            TC  = SIMD_FNMADD(KP447213595, TB, TA);
            T5  = SIMD_FNMADD(KP250000000, T4, T1);
            T1I = T1 + T4;
            TV  = SIMD_FMADD(KP618033988, TO, TN);
            TP  = SIMD_FNMADD(KP618033988, TO, TN);
            T1x = TO + T1l;
            T1m = TO - T1l;
            T1N = T1E + Tq;
            T1F = T1E - Tq;
            T12 = SIMD_FMADD(KP447213595, Tq, Tp);
            Tr  = SIMD_FNMADD(KP447213595, Tq, Tp);
            TU  = TK - TJ;
            TL  = TJ + TK;
            T1A = T1q - T1r;
            T1s = T1q + T1r;
            Tc  = SIMD_FNMADD(KP250000000, Tb, T8);
            T1J = T8 + Tb;
            T1e = SIMD_FNMADD(KP559016994, T15, T14);
            T16 = SIMD_FMADD(KP559016994, T15, T14);
            TH  = SIMD_FMADD(KP559016994, TC, Tv);
            TD  = SIMD_FNMADD(KP559016994, TC, Tv);
            TY  = SIMD_FMADD(KP559016994, T6, T5);
            T7  = SIMD_FNMADD(KP559016994, T6, T5);
            {
                SIMD_FLOAT TX, TT, T1B, T1t, T1P, T1L, T1d, T13, TG, Ts, TZ, Te,
                    T1M, T1K, T1a;
                SIMD_FLOAT T1c, T1C, T1u, T1h, T1f, T1b, T17, T1D, TI, T1v, TE,
                    T1g, T10, TF, Tf;
                TX             = TV - TW;
                T19            = TV + TW;
                TT             = TP + TS;
                T1j            = TP - TS;
                T1B            = T1y - T1x;
                T1z            = T1x + T1y;
                T1t            = T1m - T1o;
                T1p            = T1m + T1o;
                Ci[WS(cs, 10)] = KP866025403 * (T1O - T1N);
                T1P            = T1N + T1O;
                Ci[WS(cs, 5)]  = KP866025403 * (T1F - T1H);
                T1L            = T1F + T1H;
                T1d            = SIMD_FNMADD(KP559016994, T12, T11);
                T13            = SIMD_FMADD(KP559016994, T12, T11);
                TG             = SIMD_FMADD(KP559016994, Tr, Tk);
                Ts             = SIMD_FNMADD(KP559016994, Tr, Tk);
                TZ             = SIMD_FNMADD(KP559016994, Td, Tc);
                Te             = SIMD_FMADD(KP559016994, Td, Tc);
                T1M            = T1I + T1J;
                T1K            = T1I - T1J;
                Ci[WS(cs, 3)]  = KP951056516 * (TU + TX);
                T1a            = SIMD_FNMADD(KP500000000, TX, TU);
                Ci[WS(cs, 12)] = KP951056516 * (TL + TT);
                T1c            = SIMD_FNMADD(KP500000000, TT, TL);
                Ci[WS(cs, 6)]  = KP951056516 * (T1B - T1A);
                T1C            = SIMD_FMADD(KP500000000, T1B, T1A);
                Ci[WS(cs, 9)]  = KP951056516 * (T1s + T1t);
                T1u            = SIMD_FNMADD(KP500000000, T1t, T1s);
                T1h            = T1d + T1e;
                T1f            = T1d - T1e;
                T1b            = T13 + T16;
                T17            = T13 - T16;
                T1D            = TH - TG;
                TI             = TG + TH;
                T1v            = Ts + TD;
                TE             = Ts - TD;
                T1g            = TY + TZ;
                T10            = TY - TZ;
                TF             = T7 + Te;
                Tf             = T7 - Te;
                Cr[0]          = T1M + T1P;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1P, T1M);
                Cr[WS(cs, 15)] = T1K + T1L;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1L, T1K);
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1f, T1c)));
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1f, T1c));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1b, T1a));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1b, T1a)));
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1D, T1C));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1D, T1C));
                Ci[WS(cs, 11)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1v, T1u)));
                Ci[WS(cs, 1)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1v, T1u)));
                T1i            = SIMD_FNMADD(KP500000000, T1h, T1g);
                Cr[WS(cs, 12)] = T1g + T1h;
                T18            = SIMD_FNMADD(KP500000000, T17, T10);
                Cr[WS(cs, 3)]  = T10 + T17;
                T1w            = SIMD_FNMADD(KP500000000, TI, TF);
                Cr[WS(cs, 6)]  = TF + TI;
                T1k            = SIMD_FNMADD(KP500000000, TE, Tf);
                Cr[WS(cs, 9)]  = Tf + TE;
            }
        }
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1j, T1i);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1j, T1i);
        Cr[WS(cs, 13)] = SIMD_FMADD(KP823639103, T19, T18);
        Cr[WS(cs, 7)]  = SIMD_FNMADD(KP823639103, T19, T18);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1z, T1w);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1z, T1w);
        Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1p, T1k);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1p, T1k);
    }
}

template <>
struct r2cf_traits<30, 18>
{
    static constexpr long_t flops           = 206;
    static constexpr long_t operations      = 145;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 97;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 18 -name r2cf
 * -standalone */

/*
 * This function contains 131 FP additions, 75 FP multiplications,
 * (or, 70 additions, 14 multiplications, 61 fused multiply/add),
 * 97 stack variables, 11 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 18>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1h, T1i, T1J, T1G, T1g, T1l, T1C, T1H, T1F, T1m, T17, T4,
            T1K, T1r, TL;
        SIMD_FLOAT TO, T3, T15, Tv, TY, T1M, TP, T1s, Tg, Ts, Tz, TF, T5, T1v,
            TZ;
        SIMD_FLOAT TG, TC, Tr, Tp, T1u, TV, T1O, T14, T1I, T1n, T1j, T1k;
        {
            SIMD_FLOAT Tb, TJ, T8, T9, Tc, Td, Th, TR, Ti, Tj, Tm, Tn, T12, T13,
                T1;
            SIMD_FLOAT TK, Ta, TM, Te, T2, TB, TU, To, TX, Tl, TA, TT, TW, Tk,
                TS;
            SIMD_FLOAT TN, Ty, Tf;
            Tb  = R0[WS(rs, 1)];
            TJ  = R0[WS(rs, 10)];
            T8  = R0[WS(rs, 16)];
            T9  = R0[WS(rs, 4)];
            Tc  = R0[WS(rs, 7)];
            Td  = R0[WS(rs, 13)];
            Th  = R0[WS(rs, 14)];
            TR  = R0[WS(rs, 5)];
            Ti  = R0[WS(rs, 2)];
            Tj  = R0[WS(rs, 8)];
            Tm  = R0[WS(rs, 11)];
            Tn  = R0[WS(rs, 17)];
            T12 = R0[0];
            T17 = R0[WS(rs, 15)];
            T1  = R0[WS(rs, 6)];
            TK  = T8 + T9;
            Ta  = T8 - T9;
            TM  = Tc + Td;
            Te  = Tc - Td;
            T2  = R0[WS(rs, 12)];
            T4  = R0[WS(rs, 9)];
            TW  = Ti + Tj;
            Tk  = Ti - Tj;
            TS  = Tm + Tn;
            TB  = SIMD_FNMADD(KP618033988, Tm, Tn);
            TU  = Tm - Tn;
            To  = SIMD_FMADD(KP618033988, Tn, Tm);
            T1K = TJ + TK;
            T1r = SIMD_FNMADD(KP809016994, TK, TJ);
            TL  = SIMD_FMADD(KP309016994, TK, TJ);
            TN  = Tb - TM;
            TO  = Tb + TM;
            Ty  = SIMD_FNMADD(KP618033988, Tb, Te);
            Tf  = SIMD_FMADD(KP618033988, Te, Tb);
            T3  = SIMD_FMADD(KP618033988, T2, T1);
            T15 = T2 - T1;
            Tv  = SIMD_FNMADD(KP618033988, T1, T2);
            T13 = T1 + T2;
            TX  = Th - TW;
            TY  = Th + TW;
            Tl  = SIMD_FNMADD(KP618033988, Tk, Th);
            TA  = SIMD_FMADD(KP618033988, Th, Tk);
            T1M = TR + TS;
            TT  = SIMD_FNMADD(KP250000000, TS, TR);
            TP  = SIMD_FNMADD(KP447213595, TO, TN);
            T1s = SIMD_FMADD(KP447213595, TO, TN);
            Tg  = Ta - Tf;
            Ts  = Ta + Tf;
            Tz  = SIMD_FNMADD(KP618033988, Ta, Ty);
            TF  = SIMD_FMADD(KP618033988, Ta, Ty);
            T5  = R0[WS(rs, 3)];
            T1v = SIMD_FMADD(KP447213595, TY, TX);
            TZ  = SIMD_FNMADD(KP447213595, TY, TX);
            TG  = TB - TA;
            TC  = TA + TB;
            Tr  = Tl - To;
            Tp  = Tl + To;
            T1u = SIMD_FNMADD(KP559016994, TU, TT);
            TV  = SIMD_FMADD(KP559016994, TU, TT);
            T1O = T12 + T13;
            T14 = SIMD_FNMADD(KP250000000, T13, T12);
        }
        {
            SIMD_FLOAT T1a, T1f, Tq, TQ, T16, T1o, T1P, T19, Tx, TE, T7, Tu,
                T1R, T1V, T10;
            SIMD_FLOAT T1L, T1T, T6, Tw, T18, T1U, T1N, T1z, TH, T1b, T1p, T1Q,
                T1S, TI, T1t;
            SIMD_FLOAT T1D, T1E, T1w, TD, T1q, T1A, T1B, T1x, T1e, T11, T1d,
                T1c, Tt, T1y;
            T1L            = T1K - TO;
            T1T            = T1K + TO;
            T6             = SIMD_FMADD(KP618033988, T5, T4);
            T1a            = T4 - T5;
            Tw             = SIMD_FMSUB(KP618033988, T4, T5);
            T18            = T4 + T5;
            T1U            = TY + T1M;
            T1N            = TY - T1M;
            T1f            = Tg + Tp;
            Tq             = Tg - Tp;
            TQ             = SIMD_FNMADD(KP559016994, TP, TL);
            T1h            = SIMD_FMADD(KP559016994, TP, TL);
            T16            = SIMD_FNMADD(KP559016994, T15, T14);
            T1o            = SIMD_FMADD(KP559016994, T15, T14);
            T1P            = T17 + T18;
            T19            = SIMD_FNMADD(KP250000000, T18, T17);
            Tx             = Tv + Tw;
            TE             = Tw - Tv;
            T7             = T3 + T6;
            Tu             = T3 - T6;
            Ci[WS(cs, 5)]  = KP866025403 * (T1L - T1N);
            T1R            = T1L + T1N;
            Ci[WS(cs, 10)] = KP866025403 * (T1U - T1T);
            T1V            = T1T + T1U;
            T1i            = SIMD_FMADD(KP559016994, TZ, TV);
            T10            = SIMD_FNMADD(KP559016994, TZ, TV);
            T1z            = TG - TF;
            TH             = TF + TG;
            T1b            = SIMD_FMADD(KP559016994, T1a, T19);
            T1p            = SIMD_FNMADD(KP559016994, T1a, T19);
            T1Q            = T1O - T1P;
            T1S            = T1O + T1P;
            Ci[WS(cs, 9)]  = KP951056516 * (T7 + Tq);
            TI             = SIMD_FNMADD(KP500000000, Tq, T7);
            T1t            = SIMD_FMADD(KP559016994, T1s, T1r);
            T1D            = SIMD_FNMADD(KP559016994, T1s, T1r);
            T1E            = SIMD_FNMADD(KP559016994, T1v, T1u);
            T1w            = SIMD_FMADD(KP559016994, T1v, T1u);
            T1J            = Tz - TC;
            TD             = Tz + TC;
            T11            = TQ + T10;
            T1d            = TQ - T10;
            T1q            = T1o - T1p;
            T1G            = T1o + T1p;
            T1g            = T16 + T1b;
            T1c            = T16 - T1b;
            Cr[0]          = T1S + T1V;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1V, T1S);
            Cr[WS(cs, 15)] = T1Q + T1R;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1R, T1Q);
            Ci[WS(cs, 3)]  = KP951056516 * (TE + TH);
            T1A            = SIMD_FNMADD(KP500000000, TH, TE);
            T1B            = T1t + T1w;
            T1x            = T1t - T1w;
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T11, TI)));
            Ci[WS(cs, 1)] = -(KP951056516 * (SIMD_FMADD(KP910592997, T11, TI)));
            T1e           = SIMD_FNMADD(KP500000000, T1d, T1c);
            Cr[WS(cs, 9)] = T1c + T1d;
            T1l           = Ts + Tr;
            Tt            = Tr - Ts;
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1B, T1A));
            Ci[WS(cs, 7)] =
                -(KP951056516 * (SIMD_FMADD(KP910592997, T1B, T1A)));
            T1y            = SIMD_FNMADD(KP500000000, T1x, T1q);
            Cr[WS(cs, 3)]  = T1q + T1x;
            Ci[WS(cs, 12)] = KP951056516 * (Tx + TD);
            T1C            = SIMD_FNMADD(KP500000000, TD, Tx);
            Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1f, T1e);
            Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1f, T1e);
            T1H            = T1D + T1E;
            T1F            = T1D - T1E;
            T1m            = SIMD_FMADD(KP500000000, Tt, Tu);
            Ci[WS(cs, 6)]  = KP951056516 * (Tt - Tu);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1z, T1y);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1z, T1y);
        }
        T1I            = SIMD_FNMADD(KP500000000, T1H, T1G);
        Cr[WS(cs, 12)] = T1G + T1H;
        Ci[WS(cs, 8)]  = -(KP951056516 * (SIMD_FNMADD(KP910592997, T1F, T1C)));
        Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1F, T1C));
        T1n            = T1i - T1h;
        T1j            = T1h + T1i;
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1J, T1I);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1J, T1I);
        Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1n, T1m));
        Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1n, T1m));
        T1k            = SIMD_FNMADD(KP500000000, T1j, T1g);
        Cr[WS(cs, 6)]  = T1g + T1j;
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1l, T1k);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1l, T1k);
    }
}

template <>
struct r2cf_traits<30, 19>
{
    static constexpr long_t flops           = 208;
    static constexpr long_t operations      = 147;
    static constexpr long_t memory_accesses = 49;
    static constexpr long_t stack_vars      = 100;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 19 -name r2cf
 * -standalone */

/*
 * This function contains 133 FP additions, 75 FP multiplications,
 * (or, 72 additions, 14 multiplications, 61 fused multiply/add),
 * 100 stack variables, 11 constants, and 49 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 19>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1i, Ts, T1o, T1j, T1f, T9, TS, T1k, T1p, T12, T1l, TK, T1m,
            T1q, T13;
        SIMD_FLOAT T1g, T1n, T1h;
        {
            SIMD_FLOAT T8, Ty, TT, T1S, T18, Tx, T5, T1N, T1u, TN, TQ, T1e, T1s,
                T1R, T17;
            SIMD_FLOAT Tq, TW, TD, TU, T1v, TR, Tu, Ti, TH, TB, TZ, T10, Tn, TC,
                T1P;
            SIMD_FLOAT TV, T1O, T1W;
            {
                SIMD_FLOAT T1a, T6, T7, T1, T14, T2, T3, Td, TL, Ta, Tb, Te, Tf,
                    Tj, Tc;
                SIMD_FLOAT TP, TA, Th, Tm, TY, T1b, T1d, T4, T15, Tk, TM, Tg,
                    TO, Tl, To;
                SIMD_FLOAT Tp, T1c, T16;
                T1a = R0[WS(rs, 15)];
                T6  = R0[WS(rs, 9)];
                T7  = R0[WS(rs, 3)];
                T1  = R0[WS(rs, 6)];
                T14 = R0[0];
                T2  = R0[WS(rs, 12)];
                T3  = R0[WS(rs, 18)];
                Td  = R0[WS(rs, 1)];
                TL  = R0[WS(rs, 10)];
                Ta  = R0[WS(rs, 16)];
                Tb  = R0[WS(rs, 4)];
                Te  = R0[WS(rs, 7)];
                Tf  = R0[WS(rs, 13)];
                Tj  = R0[WS(rs, 14)];
                T1b = T6 + T7;
                T1d = T6 - T7;
                T8  = SIMD_FMADD(KP618033988, T7, T6);
                Ty  = SIMD_FMSUB(KP618033988, T6, T7);
                T4  = T2 - T3;
                T15 = T2 + T3;
                TT  = R0[WS(rs, 5)];
                Tk  = R0[WS(rs, 2)];
                Tc  = Ta - Tb;
                TM  = Ta + Tb;
                Tg  = Te - Tf;
                TO  = Te + Tf;
                Tl  = R0[WS(rs, 8)];
                To  = R0[WS(rs, 11)];
                Tp  = R0[WS(rs, 17)];
                T1c = SIMD_FNMADD(KP250000000, T1b, T1a);
                T1S = T1a + T1b;
                T16 = T1 + T15;
                T18 = T1 - T15;
                Tx  = SIMD_FNMADD(KP618033988, T1, T4);
                T5  = SIMD_FMADD(KP618033988, T4, T1);
                T1N = TL + TM;
                T1u = SIMD_FNMADD(KP809016994, TM, TL);
                TN  = SIMD_FMADD(KP309016994, TM, TL);
                TP  = Td - TO;
                TQ  = Td + TO;
                TA  = SIMD_FNMADD(KP618033988, Td, Tg);
                Th  = SIMD_FMADD(KP618033988, Tg, Td);
                Tm  = Tk - Tl;
                TY  = Tk + Tl;
                T1e = SIMD_FMADD(KP559016994, T1d, T1c);
                T1s = SIMD_FNMADD(KP559016994, T1d, T1c);
                T1R = T14 + T16;
                T17 = SIMD_FNMADD(KP250000000, T16, T14);
                Tq  = SIMD_FMADD(KP618033988, Tp, To);
                TW  = To - Tp;
                TD  = SIMD_FNMADD(KP618033988, To, Tp);
                TU  = To + Tp;
                T1v = SIMD_FMADD(KP447213595, TQ, TP);
                TR  = SIMD_FNMADD(KP447213595, TQ, TP);
                Tu  = Tc + Th;
                Ti  = Tc - Th;
                TH  = SIMD_FMADD(KP618033988, Tc, TA);
                TB  = SIMD_FNMADD(KP618033988, Tc, TA);
                TZ  = Tj - TY;
                T10 = Tj + TY;
                Tn  = SIMD_FNMADD(KP618033988, Tm, Tj);
                TC  = SIMD_FMADD(KP618033988, Tj, Tm);
            }
            T1P = TT + TU;
            TV  = SIMD_FNMADD(KP250000000, TU, TT);
            T1O = T1N - TQ;
            T1W = T1N + TQ;
            {
                SIMD_FLOAT T19, TG, Tz, T1G, T1w, T11, T1y, Tr, Tt, TE, TI, T1T,
                    T1V, TX, T1x;
                SIMD_FLOAT T1X, T1Q, T1t, T1J, T1r, Tv, Tw, T1C, T1M, T1D, T1F,
                    T1A, T1E, T1I, T1K;
                SIMD_FLOAT TJ, TF, T1H, T1z, T1U, T1Y, T1B, T1L;
                T19            = SIMD_FMADD(KP559016994, T18, T17);
                T1r            = SIMD_FNMADD(KP559016994, T18, T17);
                TG             = Ty - Tx;
                Tz             = Tx + Ty;
                T1G            = SIMD_FNMADD(KP559016994, T1v, T1u);
                T1w            = SIMD_FMADD(KP559016994, T1v, T1u);
                T11            = SIMD_FNMADD(KP447213595, T10, TZ);
                T1y            = SIMD_FMADD(KP447213595, T10, TZ);
                Tr             = Tn + Tq;
                Tt             = Tn - Tq;
                TE             = TC + TD;
                TI             = TD - TC;
                T1T            = T1R - T1S;
                T1V            = T1R + T1S;
                TX             = SIMD_FMADD(KP559016994, TW, TV);
                T1x            = SIMD_FNMADD(KP559016994, TW, TV);
                T1X            = T10 + T1P;
                T1Q            = T10 - T1P;
                T1t            = T1r - T1s;
                T1J            = T1r + T1s;
                T1i            = Ti + Tr;
                Ts             = Ti - Tr;
                T1C            = TI - TH;
                TJ             = TH + TI;
                T1M            = TB - TE;
                TF             = TB + TE;
                T1H            = SIMD_FNMADD(KP559016994, T1y, T1x);
                T1z            = SIMD_FMADD(KP559016994, T1y, T1x);
                Ci[WS(cs, 5)]  = KP866025403 * (T1O - T1Q);
                T1U            = T1O + T1Q;
                Ci[WS(cs, 10)] = KP866025403 * (T1X - T1W);
                T1Y            = T1W + T1X;
                Tv             = Tt - Tu;
                T1o            = Tu + Tt;
                Ci[WS(cs, 3)]  = KP951056516 * (TG + TJ);
                T1D            = SIMD_FNMADD(KP500000000, TJ, TG);
                Ci[WS(cs, 12)] = KP951056516 * (Tz + TF);
                T1F            = SIMD_FNMADD(KP500000000, TF, Tz);
                T1A            = T1w - T1z;
                T1E            = T1w + T1z;
                T1I            = T1G - T1H;
                T1K            = T1G + T1H;
                Cr[WS(cs, 15)] = T1T + T1U;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1U, T1T);
                Cr[0]          = T1V + T1Y;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T1Y, T1V);
                T1j            = T19 + T1e;
                T1f            = T19 - T1e;
                Tw             = T5 - T8;
                T9             = T5 + T8;
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1E, T1D));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FMADD(KP910592997, T1E, T1D)));
                T1B            = SIMD_FNMADD(KP500000000, T1A, T1t);
                Cr[WS(cs, 3)]  = T1t + T1A;
                T1L            = SIMD_FNMADD(KP500000000, T1K, T1J);
                Cr[WS(cs, 12)] = T1J + T1K;
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1I, T1F));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1I, T1F)));
                TS             = SIMD_FNMADD(KP559016994, TR, TN);
                T1k            = SIMD_FMADD(KP559016994, TR, TN);
                T1p            = SIMD_FMADD(KP500000000, Tv, Tw);
                T12            = SIMD_FNMADD(KP559016994, T11, TX);
                T1l            = SIMD_FMADD(KP559016994, T11, TX);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1C, T1B);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1C, T1B);
                Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1M, T1L);
                Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1M, T1L);
                Ci[WS(cs, 6)]  = KP951056516 * (Tv - Tw);
            }
        }
        Ci[WS(cs, 9)]  = KP951056516 * (T9 + Ts);
        TK             = SIMD_FNMADD(KP500000000, Ts, T9);
        T1m            = T1k + T1l;
        T1q            = T1l - T1k;
        T13            = TS + T12;
        T1g            = TS - T12;
        Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1q, T1p));
        Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1q, T1p));
        T1n            = SIMD_FNMADD(KP500000000, T1m, T1j);
        Cr[WS(cs, 6)]  = T1j + T1m;
        T1h            = SIMD_FNMADD(KP500000000, T1g, T1f);
        Cr[WS(cs, 9)]  = T1f + T1g;
        Ci[WS(cs, 11)] = -(KP951056516 * (SIMD_FNMADD(KP910592997, T13, TK)));
        Ci[WS(cs, 1)]  = -(KP951056516 * (SIMD_FMADD(KP910592997, T13, TK)));
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1o, T1n);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1o, T1n);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1i, T1h);
        Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1i, T1h);
    }
}

template <>
struct r2cf_traits<30, 20>
{
    static constexpr long_t flops           = 210;
    static constexpr long_t operations      = 149;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 106;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 20 -name r2cf
 * -standalone */

/*
 * This function contains 135 FP additions, 75 FP multiplications,
 * (or, 74 additions, 14 multiplications, 61 fused multiply/add),
 * 106 stack variables, 11 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 20>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT TG, TK, Tt, Tw, T1Y, T1W, T1T, T20, TI, TB, T1K, T1C, TP,
            T1x, T1w;
        SIMD_FLOAT T1M, Ty, T9, T1o, T15, T1R, T1Z, T1y, TU, Tv, Tk, TJ, TD,
            T1m, T1i;
        {
            SIMD_FLOAT TN, T8, TA, Ts, TZ, TF, Ta, T1V, T1b, Tz, T5, TR, Ti,
                T13, T12;
            SIMD_FLOAT TE, Tp, TY, T1S, T1v, T1h, T1a, T1U, Tb, Td, Te, T1d, T6,
                T7, T1;
            SIMD_FLOAT T17, T2, T3, Tl, TW, Tm, Tn, Tq, Tr, T1e, T1g, T4, T18,
                Tg, Th;
            SIMD_FLOAT To, T11, TX, T1f, T19, T14, T1B, T10, T1A, Tc, TO, Tf,
                TQ, T1c, T1Q;
            SIMD_FLOAT TT, TS, Tj, TC, T1u;
            T1d = R0[WS(rs, 15)];
            T6  = R0[WS(rs, 9)];
            T7  = R0[WS(rs, 3)];
            T1  = R0[WS(rs, 6)];
            T17 = R0[0];
            T2  = R0[WS(rs, 12)];
            T3  = R0[WS(rs, 18)];
            Tl  = R0[WS(rs, 14)];
            TW  = R0[WS(rs, 5)];
            Tm  = R0[WS(rs, 2)];
            Tn  = R0[WS(rs, 8)];
            Tq  = R0[WS(rs, 11)];
            Tr  = R0[WS(rs, 17)];
            TN  = R0[WS(rs, 10)];
            T1e = T6 + T7;
            T1g = T6 - T7;
            T8  = SIMD_FMADD(KP618033988, T7, T6);
            TA  = SIMD_FMSUB(KP618033988, T6, T7);
            T4  = T2 - T3;
            T18 = T2 + T3;
            Tg  = R0[WS(rs, 7)];
            Th  = R0[WS(rs, 13)];
            To  = Tm - Tn;
            T11 = Tm + Tn;
            Ts  = SIMD_FMADD(KP618033988, Tr, Tq);
            TZ  = Tq - Tr;
            TF  = SIMD_FNMADD(KP618033988, Tq, Tr);
            TX  = Tq + Tr;
            Ta  = R0[WS(rs, 16)];
            T1f = SIMD_FNMADD(KP250000000, T1e, T1d);
            T1V = T1d + T1e;
            T19 = T1 + T18;
            T1b = T1 - T18;
            Tz  = SIMD_FNMADD(KP618033988, T1, T4);
            T5  = SIMD_FMADD(KP618033988, T4, T1);
            TR  = Tg + Th;
            Ti  = Tg - Th;
            T13 = Tl + T11;
            T12 = Tl - T11;
            TE  = SIMD_FMADD(KP618033988, Tl, To);
            Tp  = SIMD_FNMADD(KP618033988, To, Tl);
            TY  = SIMD_FNMADD(KP250000000, TX, TW);
            T1S = TW + TX;
            T1v = SIMD_FNMADD(KP559016994, T1g, T1f);
            T1h = SIMD_FMADD(KP559016994, T1g, T1f);
            T1a = SIMD_FNMADD(KP250000000, T19, T17);
            T1U = T17 + T19;
            Tb  = R0[WS(rs, 4)];
            Td  = R0[WS(rs, 19)];
            Te  = R0[WS(rs, 1)];
            T14 = SIMD_FNMADD(KP447213595, T13, T12);
            T1B = SIMD_FMADD(KP447213595, T13, T12);
            TG  = TE + TF;
            TK  = TF - TE;
            Tt  = Tp + Ts;
            Tw  = Tp - Ts;
            T10 = SIMD_FMADD(KP559016994, TZ, TY);
            T1A = SIMD_FNMADD(KP559016994, TZ, TY);
            Tc  = Ta - Tb;
            TO  = Ta + Tb;
            Tf  = Td - Te;
            TQ  = Te + Td;
            T1Y = T1U + T1V;
            T1W = T1U - T1V;
            T1T = T13 - T1S;
            T20 = T13 + T1S;
            T1c = SIMD_FMADD(KP559016994, T1b, T1a);
            T1u = SIMD_FNMADD(KP559016994, T1b, T1a);
            TI  = TA - Tz;
            TB  = Tz + TA;
            T1K = SIMD_FNMADD(KP559016994, T1B, T1A);
            T1C = SIMD_FMADD(KP559016994, T1B, T1A);
            TP  = SIMD_FMADD(KP309016994, TO, TN);
            T1x = SIMD_FNMADD(KP809016994, TO, TN);
            T1Q = TN + TO;
            TT  = TQ + TR;
            TS  = TQ - TR;
            Tj  = SIMD_FNMADD(KP618033988, Ti, Tf);
            TC  = SIMD_FMADD(KP618033988, Tf, Ti);
            T1w = T1u - T1v;
            T1M = T1u + T1v;
            Ty  = T5 - T8;
            T9  = T5 + T8;
            T1o = SIMD_FMADD(KP559016994, T14, T10);
            T15 = SIMD_FNMADD(KP559016994, T14, T10);
            T1R = T1Q - TT;
            T1Z = T1Q + TT;
            T1y = SIMD_FMADD(KP447213595, TT, TS);
            TU  = SIMD_FNMADD(KP447213595, TT, TS);
            Tv  = Tj - Tc;
            Tk  = Tc + Tj;
            TJ  = SIMD_FMADD(KP618033988, Tc, TC);
            TD  = SIMD_FNMADD(KP618033988, Tc, TC);
            T1m = T1c + T1h;
            T1i = T1c - T1h;
        }
        Ci[WS(cs, 5)] = KP866025403 * (T1R - T1T);
        {
            SIMD_FLOAT T1X, T21, T1z, T1J, TV, T1n, Tx, T1r, Tu, T1l, TL, T1F,
                TH, T1P, T1H;
            SIMD_FLOAT T1D, T1N, T1L, T1j, T16, T1t, T1p, T1s, TM, T1G, T1I,
                T1E, T1O, T1k, T1q;
            T1X            = T1R + T1T;
            Ci[WS(cs, 10)] = KP866025403 * (T20 - T1Z);
            T21            = T1Z + T20;
            T1z            = SIMD_FMADD(KP559016994, T1y, T1x);
            T1J            = SIMD_FNMADD(KP559016994, T1y, T1x);
            TV             = SIMD_FNMADD(KP559016994, TU, TP);
            T1n            = SIMD_FMADD(KP559016994, TU, TP);
            Tx             = Tv + Tw;
            T1r            = Tw - Tv;
            Tu             = Tk - Tt;
            T1l            = Tk + Tt;
            TL             = TJ + TK;
            T1F            = TK - TJ;
            TH             = TD + TG;
            T1P            = TD - TG;
            Cr[WS(cs, 15)] = T1W + T1X;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T1X, T1W);
            Cr[0]          = T1Y + T21;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T21, T1Y);
            T1H            = T1z + T1C;
            T1D            = T1z - T1C;
            T1N            = T1J + T1K;
            T1L            = T1J - T1K;
            T1j            = TV - T15;
            T16            = TV + T15;
            T1t            = T1o - T1n;
            T1p            = T1n + T1o;
            Ci[WS(cs, 6)]  = KP951056516 * (Tx - Ty);
            T1s            = SIMD_FMADD(KP500000000, Tx, Ty);
            Ci[WS(cs, 9)]  = KP951056516 * (T9 + Tu);
            TM             = SIMD_FNMADD(KP500000000, Tu, T9);
            Ci[WS(cs, 3)]  = KP951056516 * (TI + TL);
            T1G            = SIMD_FNMADD(KP500000000, TL, TI);
            Ci[WS(cs, 12)] = KP951056516 * (TB + TH);
            T1I            = SIMD_FNMADD(KP500000000, TH, TB);
            T1E            = SIMD_FNMADD(KP500000000, T1D, T1w);
            Cr[WS(cs, 3)]  = T1w + T1D;
            T1O            = SIMD_FNMADD(KP500000000, T1N, T1M);
            Cr[WS(cs, 12)] = T1M + T1N;
            T1k            = SIMD_FNMADD(KP500000000, T1j, T1i);
            Cr[WS(cs, 9)]  = T1i + T1j;
            T1q            = SIMD_FNMADD(KP500000000, T1p, T1m);
            Cr[WS(cs, 6)]  = T1m + T1p;
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1t, T1s));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1t, T1s));
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T16, TM)));
            Ci[WS(cs, 1)] = -(KP951056516 * (SIMD_FMADD(KP910592997, T16, TM)));
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1H, T1G));
            Ci[WS(cs, 7)] =
                -(KP951056516 * (SIMD_FMADD(KP910592997, T1H, T1G)));
            Ci[WS(cs, 2)] = KP951056516 * (SIMD_FMADD(KP910592997, T1L, T1I));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1L, T1I)));
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1F, T1E);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1F, T1E);
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1P, T1O);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1P, T1O);
            Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1l, T1k);
            Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1l, T1k);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1r, T1q);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1r, T1q);
        }
    }
}

template <>
struct r2cf_traits<30, 21>
{
    static constexpr long_t flops           = 209;
    static constexpr long_t operations      = 151;
    static constexpr long_t memory_accesses = 51;
    static constexpr long_t stack_vars      = 105;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 21 -name r2cf
 * -standalone */

/*
 * This function contains 137 FP additions, 72 FP multiplications,
 * (or, 79 additions, 14 multiplications, 58 fused multiply/add),
 * 105 stack variables, 11 constants, and 51 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 21>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1T, T22, Tv, Tk, TJ, TD, T21, T1Z, TI, TB, T1V, T1L, T1B,
            T1b, T1y;
        SIMD_FLOAT T1O, T9, Ty, T1D, T1h, T16, T1p, TK, TG, Tw, Tt, T1a, T1U,
            T1o, TX;
        {
            SIMD_FLOAT T8, TA, T17, Tc, T1d, Tq, T1Y, TQ, Tz, T5, T1S, T1z, T10,
                T13, T14;
            SIMD_FLOAT TC, Tj, TW, T1x, T1X, TP, Tr, Tl, Tm, Tn, TS, T6, T7, T1,
                TM;
            SIMD_FLOAT T2, T3, TY, Tg, Th, Ta, Tb, Td, Te, TT, TV, T4, TN, T12,
                Ti;
            SIMD_FLOAT TZ, T11, Tf, TU, TO, T1A, T15, T1e, TF, T1g, Ts, To, T18,
                TR, T1w;
            SIMD_FLOAT T1f, TE, Tp, T19;
            TS  = R0[WS(rs, 15)];
            T6  = R0[WS(rs, 9)];
            T7  = R0[WS(rs, 3)];
            T1  = R0[WS(rs, 6)];
            TM  = R0[0];
            T2  = R0[WS(rs, 12)];
            T3  = R0[WS(rs, 18)];
            TY  = R0[WS(rs, 10)];
            Tg  = R0[WS(rs, 7)];
            Th  = R0[WS(rs, 13)];
            Ta  = R0[WS(rs, 16)];
            Tb  = R0[WS(rs, 4)];
            Td  = R0[WS(rs, 19)];
            Te  = R0[WS(rs, 1)];
            TT  = T6 + T7;
            TV  = T6 - T7;
            T8  = SIMD_FMADD(KP618033988, T7, T6);
            TA  = SIMD_FMSUB(KP618033988, T6, T7);
            T4  = T2 - T3;
            TN  = T2 + T3;
            T17 = R0[WS(rs, 20)];
            T12 = Tg + Th;
            Ti  = Tg - Th;
            TZ  = Ta + Tb;
            Tc  = Ta - Tb;
            T11 = Te + Td;
            Tf  = Td - Te;
            T1d = R0[WS(rs, 5)];
            Tq  = R0[WS(rs, 11)];
            TU  = SIMD_FNMADD(KP250000000, TT, TS);
            T1Y = TS + TT;
            TO  = T1 + TN;
            TQ  = T1 - TN;
            Tz  = SIMD_FNMADD(KP618033988, T1, T4);
            T5  = SIMD_FMADD(KP618033988, T4, T1);
            T1S = TY + TZ;
            T1z = SIMD_FNMADD(KP809016994, TZ, TY);
            T10 = SIMD_FMADD(KP309016994, TZ, TY);
            T13 = T11 - T12;
            T14 = T11 + T12;
            TC  = SIMD_FMADD(KP618033988, Tf, Ti);
            Tj  = SIMD_FNMADD(KP618033988, Ti, Tf);
            TW  = SIMD_FMADD(KP559016994, TV, TU);
            T1x = SIMD_FNMADD(KP559016994, TV, TU);
            T1X = TM + TO;
            TP  = SIMD_FNMADD(KP250000000, TO, TM);
            Tr  = R0[WS(rs, 17)];
            Tl  = R0[WS(rs, 14)];
            Tm  = R0[WS(rs, 2)];
            Tn  = R0[WS(rs, 8)];
            T1T = T1S - T14;
            T22 = T1S + T14;
            T1A = SIMD_FMADD(KP447213595, T14, T13);
            T15 = SIMD_FNMADD(KP447213595, T14, T13);
            Tv  = Tj - Tc;
            Tk  = Tc + Tj;
            TJ  = SIMD_FMADD(KP618033988, Tc, TC);
            TD  = SIMD_FNMADD(KP618033988, Tc, TC);
            T1e = Tq + Tr;
            TF  = SIMD_FNMADD(KP618033988, Tq, Tr);
            T1g = Tq - Tr;
            Ts  = SIMD_FMADD(KP618033988, Tr, Tq);
            To  = Tm - Tn;
            T18 = Tm + Tn;
            T21 = T1X + T1Y;
            T1Z = T1X - T1Y;
            TR  = SIMD_FMADD(KP559016994, TQ, TP);
            T1w = SIMD_FNMADD(KP559016994, TQ, TP);
            TI  = TA - Tz;
            TB  = Tz + TA;
            T1f = SIMD_FNMADD(KP250000000, T1e, T1d);
            T1V = T1d + T1e;
            T1L = SIMD_FNMADD(KP559016994, T1A, T1z);
            T1B = SIMD_FMADD(KP559016994, T1A, T1z);
            TE  = SIMD_FMADD(KP618033988, Tl, To);
            Tp  = SIMD_FNMADD(KP618033988, To, Tl);
            T1b = Tl - T18;
            T19 = Tl + T18;
            T1y = T1w - T1x;
            T1O = T1w + T1x;
            T9  = T5 + T8;
            Ty  = T5 - T8;
            T1D = SIMD_FNMADD(KP559016994, T1g, T1f);
            T1h = SIMD_FMADD(KP559016994, T1g, T1f);
            T16 = SIMD_FNMADD(KP559016994, T15, T10);
            T1p = SIMD_FMADD(KP559016994, T15, T10);
            TK  = TF - TE;
            TG  = TE + TF;
            Tw  = Tp - Ts;
            Tt  = Tp + Ts;
            T1a = SIMD_FNMADD(KP250000000, T19, T17);
            T1U = T17 + T19;
            T1o = TR + TW;
            TX  = TR - TW;
        }
        {
            SIMD_FLOAT T1H, T1R, T1t, T1l, T1I, T1K, T1u, T1m, T1M, T1E, T1q,
                T1i, T20, T24, TL;
            SIMD_FLOAT TH, Tx, Tu, T1c, T1C, T23, T1W, T1k, T1s, T1F, T1J, T1N,
                T1P, T1j, T1n;
            SIMD_FLOAT T1r, T1v, T1G, T1Q;
            T1H            = TK - TJ;
            TL             = TJ + TK;
            T1R            = TD - TG;
            TH             = TD + TG;
            T1t            = Tw - Tv;
            Tx             = Tv + Tw;
            T1l            = Tk + Tt;
            Tu             = Tk - Tt;
            T1c            = SIMD_FMADD(KP559016994, T1b, T1a);
            T1C            = SIMD_FNMADD(KP559016994, T1b, T1a);
            T23            = T1U + T1V;
            T1W            = T1U - T1V;
            Ci[WS(cs, 3)]  = KP951056516 * (TI + TL);
            T1I            = SIMD_FNMADD(KP500000000, TL, TI);
            Ci[WS(cs, 12)] = KP951056516 * (TB + TH);
            T1K            = SIMD_FNMADD(KP500000000, TH, TB);
            Ci[WS(cs, 6)]  = KP951056516 * (Tx - Ty);
            T1u            = SIMD_FMADD(KP500000000, Tx, Ty);
            Ci[WS(cs, 9)]  = KP951056516 * (T9 + Tu);
            T1m            = SIMD_FNMADD(KP500000000, Tu, T9);
            T1M            = T1C + T1D;
            T1E            = T1C - T1D;
            T1q            = T1c + T1h;
            T1i            = T1c - T1h;
            Ci[WS(cs, 5)]  = KP866025403 * (T1T - T1W);
            T20            = T1T + T1W;
            Ci[WS(cs, 10)] = KP866025403 * (T23 - T22);
            T24            = T22 + T23;
            T1F            = T1B + T1E;
            T1J            = T1E - T1B;
            T1N            = T1L - T1M;
            T1P            = T1L + T1M;
            T1j            = T16 + T1i;
            T1n            = T1i - T16;
            T1r            = T1p + T1q;
            T1v            = T1q - T1p;
            Cr[WS(cs, 15)] = T1Z + T20;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T20, T1Z);
            Cr[0]          = T21 + T24;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T24, T21);
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FMADD(KP910592997, T1J, T1I));
            Ci[WS(cs, 7)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1J, T1I)));
            T1G            = SIMD_FNMADD(KP500000000, T1F, T1y);
            Cr[WS(cs, 3)]  = T1y + T1F;
            T1Q            = SIMD_FNMADD(KP500000000, T1P, T1O);
            Cr[WS(cs, 12)] = T1O + T1P;
            Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1N, T1K));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1N, T1K)));
            Ci[WS(cs, 1)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1n, T1m)));
            Ci[WS(cs, 11)] =
                -(KP951056516 * (SIMD_FMADD(KP910592997, T1n, T1m)));
            T1k            = SIMD_FNMADD(KP500000000, T1j, TX);
            Cr[WS(cs, 9)]  = TX + T1j;
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1v, T1u));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1v, T1u));
            T1s            = SIMD_FNMADD(KP500000000, T1r, T1o);
            Cr[WS(cs, 6)]  = T1o + T1r;
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1H, T1G);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1H, T1G);
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1R, T1Q);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1R, T1Q);
            Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1l, T1k);
            Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1l, T1k);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1t, T1s);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1t, T1s);
        }
    }
}

template <>
struct r2cf_traits<30, 22>
{
    static constexpr long_t flops           = 211;
    static constexpr long_t operations      = 153;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 106;
    static constexpr long_t constants       = 11;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 22 -name r2cf
 * -standalone */

/*
 * This function contains 139 FP additions, 72 FP multiplications,
 * (or, 81 additions, 14 multiplications, 58 fused multiply/add),
 * 106 stack variables, 11 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 22>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP809016994, +0.809016994374947424102293417182819058860154590);
    DK(KP309016994, +0.309016994374947424102293417182819058860154590);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T25, T1W, Tx, Tb, TK, TF, T22, T24, TD, TN, T1E, T1O, TT,
            T1Y, TZ;
        SIMD_FLOAT T1e, Tw, TA, T19, T1s, T1G, T1k, T1R, T1B, TL, TI, Ty, Tk,
            T1d, T1X;
        {
            SIMD_FLOAT T1a, T1g, Th, T3, TY, Tq, TC, TS, Tv, TB, T13, T1C, T1V,
                T17, T16;
            SIMD_FLOAT Ta, TE, TX, T21, T20, TR, Ti, Tc, Td, Te, Tp, TU, Tm, Tn,
                Tr;
            SIMD_FLOAT TO, Ts, Tt, T11, T7, T8, T1, T2, T4, T5, TV, To, TP, Tu,
                T9;
            SIMD_FLOAT T15, T12, T6, T14, TW, TQ, T1D, T18, T1h, TH, T1j, Tj,
                Tf, T1b, T1z;
            SIMD_FLOAT T1i, T1A, TG, Tg, T1c;
            Tp  = R0[WS(rs, 3)];
            TU  = R0[WS(rs, 15)];
            Tm  = R0[WS(rs, 21)];
            Tn  = R0[WS(rs, 9)];
            Tr  = R0[WS(rs, 6)];
            TO  = R0[0];
            Ts  = R0[WS(rs, 12)];
            Tt  = R0[WS(rs, 18)];
            T11 = R0[WS(rs, 10)];
            T7  = R0[WS(rs, 7)];
            T8  = R0[WS(rs, 13)];
            T1  = R0[WS(rs, 16)];
            T2  = R0[WS(rs, 4)];
            T4  = R0[WS(rs, 19)];
            T5  = R0[WS(rs, 1)];
            TV  = Tm + Tn;
            To  = Tm - Tn;
            T1a = R0[WS(rs, 20)];
            T1g = R0[WS(rs, 5)];
            TP  = Ts + Tt;
            Tu  = Ts - Tt;
            Th  = R0[WS(rs, 11)];
            T9  = T7 - T8;
            T15 = T7 + T8;
            T3  = T1 - T2;
            T12 = T1 + T2;
            T6  = T4 - T5;
            T14 = T5 + T4;
            TY  = TV - Tp;
            TW  = TV + Tp;
            Tq  = SIMD_FNMADD(KP618033988, Tp, To);
            TC  = SIMD_FMADD(KP618033988, To, Tp);
            TS  = Tr - TP;
            TQ  = Tr + TP;
            Tv  = SIMD_FMADD(KP618033988, Tu, Tr);
            TB  = SIMD_FNMADD(KP618033988, Tr, Tu);
            T13 = SIMD_FMADD(KP309016994, T12, T11);
            T1C = SIMD_FNMADD(KP809016994, T12, T11);
            T1V = T11 + T12;
            T17 = T14 + T15;
            T16 = T14 - T15;
            Ta  = SIMD_FNMADD(KP618033988, T9, T6);
            TE  = SIMD_FMADD(KP618033988, T6, T9);
            TX  = SIMD_FNMADD(KP250000000, TW, TU);
            T21 = TU + TW;
            T20 = TO + TQ;
            TR  = SIMD_FNMADD(KP250000000, TQ, TO);
            Ti  = R0[WS(rs, 17)];
            Tc  = R0[WS(rs, 14)];
            Td  = R0[WS(rs, 2)];
            Te  = R0[WS(rs, 8)];
            T25 = T1V + T17;
            T1W = T1V - T17;
            T1D = SIMD_FMADD(KP447213595, T17, T16);
            T18 = SIMD_FNMADD(KP447213595, T17, T16);
            Tx  = Ta - T3;
            Tb  = T3 + Ta;
            TK  = SIMD_FMADD(KP618033988, T3, TE);
            TF  = SIMD_FNMADD(KP618033988, T3, TE);
            T1h = Th + Ti;
            TH  = SIMD_FNMADD(KP618033988, Th, Ti);
            T1j = Th - Ti;
            Tj  = SIMD_FMADD(KP618033988, Ti, Th);
            Tf  = Td - Te;
            T1b = Td + Te;
            T22 = T20 - T21;
            T24 = T20 + T21;
            TD  = TB - TC;
            TN  = TB + TC;
            T1E = SIMD_FMADD(KP559016994, T1D, T1C);
            T1O = SIMD_FNMADD(KP559016994, T1D, T1C);
            TT  = SIMD_FMADD(KP559016994, TS, TR);
            T1z = SIMD_FNMADD(KP559016994, TS, TR);
            T1i = SIMD_FNMADD(KP250000000, T1h, T1g);
            T1Y = T1g + T1h;
            T1A = SIMD_FNMADD(KP559016994, TY, TX);
            TZ  = SIMD_FMADD(KP559016994, TY, TX);
            TG  = SIMD_FMADD(KP618033988, Tc, Tf);
            Tg  = SIMD_FNMADD(KP618033988, Tf, Tc);
            T1e = Tc - T1b;
            T1c = Tc + T1b;
            Tw  = Tq - Tv;
            TA  = Tv + Tq;
            T19 = SIMD_FNMADD(KP559016994, T18, T13);
            T1s = SIMD_FMADD(KP559016994, T18, T13);
            T1G = SIMD_FNMADD(KP559016994, T1j, T1i);
            T1k = SIMD_FMADD(KP559016994, T1j, T1i);
            T1R = T1z + T1A;
            T1B = T1z - T1A;
            TL  = TH - TG;
            TI  = TG + TH;
            Ty  = Tg - Tj;
            Tk  = Tg + Tj;
            T1d = SIMD_FNMADD(KP250000000, T1c, T1a);
            T1X = T1a + T1c;
        }
        {
            SIMD_FLOAT T1K, T1U, T1w, T1o, T1r, T10, T1L, T1N, T1x, T1p, T1P,
                T1H, T1t, T1l, T27;
            SIMD_FLOAT T23, TM, TJ, Tz, Tl, T1F, T1f, T26, T1Z, T1v, T1n, T1S,
                T1Q, T1M, T1I;
            SIMD_FLOAT T1y, T1u, T1q, T1m, T1T, T1J;
            TM             = TK + TL;
            T1K            = TL - TK;
            TJ             = TF + TI;
            T1U            = TF - TI;
            Tz             = Tx + Ty;
            T1w            = Ty - Tx;
            Tl             = Tb - Tk;
            T1o            = Tb + Tk;
            T1F            = SIMD_FNMADD(KP559016994, T1e, T1d);
            T1f            = SIMD_FMADD(KP559016994, T1e, T1d);
            T26            = T1X + T1Y;
            T1Z            = T1X - T1Y;
            T1r            = TT + TZ;
            T10            = TT - TZ;
            Ci[WS(cs, 3)]  = KP951056516 * (TM - TN);
            T1L            = SIMD_FMADD(KP500000000, TM, TN);
            Ci[WS(cs, 12)] = KP951056516 * (TD + TJ);
            T1N            = SIMD_FNMADD(KP500000000, TJ, TD);
            Ci[WS(cs, 6)]  = KP951056516 * (Tz - TA);
            T1x            = SIMD_FMADD(KP500000000, Tz, TA);
            Ci[WS(cs, 9)]  = KP951056516 * (Tl - Tw);
            T1p            = SIMD_FMADD(KP500000000, Tl, Tw);
            T1P            = T1F + T1G;
            T1H            = T1F - T1G;
            T1t            = T1f + T1k;
            T1l            = T1f - T1k;
            Ci[WS(cs, 10)] = KP866025403 * (T26 - T25);
            T27            = T25 + T26;
            Ci[WS(cs, 5)]  = KP866025403 * (T1W - T1Z);
            T23            = T1W + T1Z;
            T1S            = T1O + T1P;
            T1Q            = T1O - T1P;
            T1M            = T1H - T1E;
            T1I            = T1E + T1H;
            T1y            = T1t - T1s;
            T1u            = T1s + T1t;
            T1q            = T1l - T19;
            T1m            = T19 + T1l;
            Cr[0]          = T24 + T27;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T27, T24);
            Cr[WS(cs, 15)] = T22 + T23;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T23, T22);
            T1T            = SIMD_FNMADD(KP500000000, T1S, T1R);
            Cr[WS(cs, 12)] = T1R + T1S;
            Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1Q, T1N));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1Q, T1N)));
            Ci[WS(cs, 13)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1M, T1L)));
            Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1M, T1L));
            T1J            = SIMD_FNMADD(KP500000000, T1I, T1B);
            Cr[WS(cs, 3)]  = T1B + T1I;
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1y, T1x));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1y, T1x));
            T1v            = SIMD_FNMADD(KP500000000, T1u, T1r);
            Cr[WS(cs, 6)]  = T1r + T1u;
            Ci[WS(cs, 1)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1q, T1p));
            Ci[WS(cs, 11)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1q, T1p));
            T1n            = SIMD_FNMADD(KP500000000, T1m, T10);
            Cr[WS(cs, 9)]  = T10 + T1m;
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T1U, T1T);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T1U, T1T);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1K, T1J);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1K, T1J);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1w, T1v);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1w, T1v);
            Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1o, T1n);
            Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1o, T1n);
        }
    }
}

template <>
struct r2cf_traits<30, 23>
{
    static constexpr long_t flops           = 217;
    static constexpr long_t operations      = 158;
    static constexpr long_t memory_accesses = 53;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 23 -name r2cf
 * -standalone */

/*
 * This function contains 144 FP additions, 73 FP multiplications,
 * (or, 85 additions, 14 multiplications, 59 fused multiply/add),
 * 111 stack variables, 9 constants, and 53 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 23>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T2a, T28, T1N, T1V, T1X, T1H, T1r, T1z, T1Q, T20, T1C, T1u,
            T1x, T13, T1R;
        SIMD_FLOAT T1T, T1D, T1v, T1U, T1K, T1y, T1f, T2d, T29, T1B, T1t, T1Y,
            T1W, T1S, T1O;
        SIMD_FLOAT T1E, T1A, T1w, T1s, T1Z, T1P;
        {
            SIMD_FLOAT T14, T11, TE, Ts, TV, TD, Tx, T1b, Tb, T24, T1k, T10,
                T27, T26, TU;
            SIMD_FLOAT T4, T1, T2, T1M, T1q, TO, TL, TA, Tm, T1j, T23, T1a, T8,
                T15, T3;
            {
                SIMD_FLOAT Tr, TX, To, Tp, Tt, TR, Tu, Tv, T1g, T1m, Tj, Tk, Te,
                    Tf, Tg;
                SIMD_FLOAT TY, Tq, T9, TS, Tw, Ta, T6, TK, T1p, Tl, T1o, TJ, Ti,
                    T1i, T7;
                SIMD_FLOAT T1n, Th, T1h, TZ, TT;
                Tr  = R0[WS(rs, 3)];
                TX  = R0[WS(rs, 15)];
                To  = R0[WS(rs, 21)];
                Tp  = R0[WS(rs, 9)];
                Tt  = R0[WS(rs, 6)];
                TR  = R0[0];
                Tu  = R0[WS(rs, 12)];
                Tv  = R0[WS(rs, 18)];
                T1g = R0[WS(rs, 20)];
                T1m = R0[WS(rs, 5)];
                Tj  = R0[WS(rs, 11)];
                Tk  = R0[WS(rs, 17)];
                Te  = R0[WS(rs, 14)];
                Tf  = R0[WS(rs, 2)];
                Tg  = R0[WS(rs, 8)];
                TY  = To + Tp;
                Tq  = To - Tp;
                T14 = R0[WS(rs, 10)];
                T9  = R0[WS(rs, 7)];
                TS  = Tu + Tv;
                Tw  = Tu - Tv;
                Ta  = R0[WS(rs, 13)];
                T6  = R0[WS(rs, 19)];
                T1n = Tj + Tk;
                TK  = SIMD_FNMADD(KP618033988, Tj, Tk);
                T1p = Tj - Tk;
                Tl  = SIMD_FMADD(KP618033988, Tk, Tj);
                Th  = Tf - Tg;
                T1h = Tf + Tg;
                TZ  = TY + Tr;
                T11 = TY - Tr;
                TE  = SIMD_FMADD(KP618033988, Tq, Tr);
                Ts  = SIMD_FNMADD(KP618033988, Tr, Tq);
                TT  = Tt + TS;
                TV  = Tt - TS;
                TD  = SIMD_FNMADD(KP618033988, Tt, Tw);
                Tx  = SIMD_FMADD(KP618033988, Tw, Tt);
                T1b = T9 + Ta;
                Tb  = T9 - Ta;
                T1o = SIMD_FNMADD(KP250000000, T1n, T1m);
                T24 = T1m + T1n;
                TJ  = SIMD_FMADD(KP618033988, Te, Th);
                Ti  = SIMD_FNMADD(KP618033988, Th, Te);
                T1k = Te - T1h;
                T1i = Te + T1h;
                T10 = SIMD_FNMADD(KP250000000, TZ, TX);
                T27 = TX + TZ;
                T26 = TR + TT;
                TU  = SIMD_FNMADD(KP250000000, TT, TR);
                T7  = R0[WS(rs, 1)];
                T4  = R0[WS(rs, 22)];
                T1  = R0[WS(rs, 16)];
                T2  = R0[WS(rs, 4)];
                T1M = SIMD_FNMADD(KP559016994, T1p, T1o);
                T1q = SIMD_FMADD(KP559016994, T1p, T1o);
                TO  = TK - TJ;
                TL  = TJ + TK;
                TA  = Ti - Tl;
                Tm  = Ti + Tl;
                T1j = SIMD_FNMADD(KP250000000, T1i, T1g);
                T23 = T1g + T1i;
                T1a = T7 + T6;
                T8  = T6 - T7;
            }
            T15 = T1 + T2;
            T3  = T1 - T2;
            {
                SIMD_FLOAT TF, TQ, TW, T12, T1l, T2c, T25, T1d, T18, T1e, T1J,
                    TN, TI, Tz, Td;
                SIMD_FLOAT T17, T21, T1c, TH, Tc, TG, T5, T16, T1F, T1G, T1L,
                    Ty, TC, TB, Tn;
                SIMD_FLOAT TP, TM, T1I, T19, T2b, T22;
                TF             = TD - TE;
                TQ             = TD + TE;
                T1F            = SIMD_FNMADD(KP559016994, TV, TU);
                TW             = SIMD_FMADD(KP559016994, TV, TU);
                T12            = SIMD_FMADD(KP559016994, T11, T10);
                T1G            = SIMD_FNMADD(KP559016994, T11, T10);
                T1L            = SIMD_FNMADD(KP559016994, T1k, T1j);
                T1l            = SIMD_FMADD(KP559016994, T1k, T1j);
                T2c            = T23 + T24;
                T25            = T23 - T24;
                T1d            = T1a + T1b;
                T1c            = T1a - T1b;
                TH             = SIMD_FMADD(KP618033988, T8, Tb);
                Tc             = SIMD_FNMADD(KP618033988, Tb, T8);
                TG             = SIMD_FNMADD(KP618033988, T3, T4);
                T5             = SIMD_FMADD(KP618033988, T4, T3);
                T18            = T15 - T4;
                T16            = T15 + T4;
                T2a            = T26 + T27;
                T28            = T26 - T27;
                T1N            = T1L - T1M;
                T1V            = T1L + T1M;
                T1X            = T1F + T1G;
                T1H            = T1F - T1G;
                T1e            = SIMD_FNMADD(KP447213595, T1d, T1c);
                T1J            = SIMD_FMADD(KP447213595, T1d, T1c);
                TN             = TH - TG;
                TI             = TG + TH;
                Tz             = Tc - T5;
                Td             = T5 + Tc;
                T17            = SIMD_FNMADD(KP250000000, T16, T14);
                T21            = T14 + T16;
                Ty             = Ts - Tx;
                TC             = Tx + Ts;
                T1r            = T1l - T1q;
                T1z            = T1l + T1q;
                TP             = TN + TO;
                T1Q            = TO - TN;
                TM             = TI + TL;
                T20            = TI - TL;
                TB             = Tz + TA;
                T1C            = TA - Tz;
                Tn             = Td - Tm;
                T1u            = Td + Tm;
                T1I            = SIMD_FNMADD(KP559016994, T18, T17);
                T19            = SIMD_FMADD(KP559016994, T18, T17);
                T2b            = T21 + T1d;
                T22            = T21 - T1d;
                T1x            = TW + T12;
                T13            = TW - T12;
                Ci[WS(cs, 3)]  = KP951056516 * (TP - TQ);
                T1R            = SIMD_FMADD(KP500000000, TP, TQ);
                Ci[WS(cs, 12)] = KP951056516 * (TF + TM);
                T1T            = SIMD_FNMADD(KP500000000, TM, TF);
                T1D            = SIMD_FMADD(KP500000000, TB, TC);
                T1v            = SIMD_FMADD(KP500000000, Tn, Ty);
                T1U            = SIMD_FNMADD(KP559016994, T1J, T1I);
                T1K            = SIMD_FMADD(KP559016994, T1J, T1I);
                T1y            = SIMD_FMADD(KP559016994, T1e, T19);
                T1f            = SIMD_FNMADD(KP559016994, T1e, T19);
                Ci[WS(cs, 10)] = KP866025403 * (T2c - T2b);
                T2d            = T2b + T2c;
                Ci[WS(cs, 5)]  = KP866025403 * (T22 - T25);
                T29            = T22 + T25;
                Ci[WS(cs, 9)]  = KP951056516 * (Tn - Ty);
                Ci[WS(cs, 6)]  = KP951056516 * (TB - TC);
            }
        }
        T1Y            = T1U + T1V;
        T1W            = T1U - T1V;
        T1S            = T1N - T1K;
        T1O            = T1K + T1N;
        T1E            = T1z - T1y;
        T1A            = T1y + T1z;
        T1w            = T1r - T1f;
        T1s            = T1f + T1r;
        Cr[0]          = T2a + T2d;
        Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2d, T2a);
        Cr[WS(cs, 15)] = T28 + T29;
        Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T29, T28);
        T1Z            = SIMD_FNMADD(KP500000000, T1Y, T1X);
        Cr[WS(cs, 12)] = T1X + T1Y;
        Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1W, T1T));
        Ci[WS(cs, 8)]  = -(KP951056516 * (SIMD_FNMADD(KP910592997, T1W, T1T)));
        Ci[WS(cs, 13)] = -(KP951056516 * (SIMD_FNMADD(KP910592997, T1S, T1R)));
        Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1S, T1R));
        T1P            = SIMD_FNMADD(KP500000000, T1O, T1H);
        Cr[WS(cs, 3)]  = T1H + T1O;
        Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1E, T1D));
        Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1E, T1D));
        T1B            = SIMD_FNMADD(KP500000000, T1A, T1x);
        Cr[WS(cs, 6)]  = T1x + T1A;
        Ci[WS(cs, 1)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1w, T1v));
        Ci[WS(cs, 11)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1w, T1v));
        T1t            = SIMD_FNMADD(KP500000000, T1s, T13);
        Cr[WS(cs, 9)]  = T13 + T1s;
        Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T20, T1Z);
        Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T20, T1Z);
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1Q, T1P);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1Q, T1P);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1C, T1B);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1C, T1B);
        Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1u, T1t);
        Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1u, T1t);
    }
}

template <>
struct r2cf_traits<30, 24>
{
    static constexpr long_t flops           = 219;
    static constexpr long_t operations      = 160;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 113;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 24 -name r2cf
 * -standalone */

/*
 * This function contains 146 FP additions, 73 FP multiplications,
 * (or, 87 additions, 14 multiplications, 59 fused multiply/add),
 * 113 stack variables, 9 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 24>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT TP, TK, TB, Td, TS, TH, TY, T14, TE, TA, T2e, T25, T2d, T2b,
            T1s;
        SIMD_FLOAT T20, T1K, T1X, T1N, T26, T1B, T1h, TQ, TN, TC, To, T1r, T27,
            T1n, T1O;
        {
            SIMD_FLOAT T16, T1i, T1o, Te, T13, TG, Tu, TX, TF, Tz, T1f, TJ, Tc,
                T12, T2a;
            SIMD_FLOAT Tf, TI, T5, T1a, T18, TW, T29, Tg, Tj, T1g, T1M, Tk, Tl,
                Tt, TZ;
            SIMD_FLOAT Tq, Tr, Tv, TT, Tw, Tx, T9, Ta, T6, T7, T4, T1, T10, Ts,
                T2;
            SIMD_FLOAT TU, Ty, Tb, T1d, T8, T1c, T1e, T11, T3, T17, TV, T19,
                T24, Th, T1j;
            SIMD_FLOAT Tm, T1p, T1I, T1J, T1b, TL, Ti, T1m, T1k, TM, Tn, T1q,
                T1L, T1l;
            Tt  = R0[WS(rs, 3)];
            TZ  = R0[WS(rs, 15)];
            Tq  = R0[WS(rs, 21)];
            Tr  = R0[WS(rs, 9)];
            Tv  = R0[WS(rs, 6)];
            TT  = R0[0];
            Tw  = R0[WS(rs, 12)];
            Tx  = R0[WS(rs, 18)];
            T16 = R0[WS(rs, 10)];
            T9  = R0[WS(rs, 7)];
            Ta  = R0[WS(rs, 13)];
            T6  = R0[WS(rs, 19)];
            T7  = R0[WS(rs, 1)];
            T4  = R0[WS(rs, 22)];
            T1  = R0[WS(rs, 16)];
            T10 = Tq + Tr;
            Ts  = Tq - Tr;
            T2  = R0[WS(rs, 4)];
            T1i = R0[WS(rs, 20)];
            TU  = Tw + Tx;
            Ty  = Tw - Tx;
            T1o = R0[WS(rs, 5)];
            Tb  = T9 - Ta;
            T1d = T9 + Ta;
            T8  = T6 - T7;
            T1c = T7 + T6;
            Te  = R0[WS(rs, 14)];
            T11 = T10 + Tt;
            T13 = T10 - Tt;
            TG  = SIMD_FMADD(KP618033988, Ts, Tt);
            Tu  = SIMD_FNMADD(KP618033988, Tt, Ts);
            T3  = T1 - T2;
            T17 = T1 + T2;
            TV  = Tv + TU;
            TX  = Tv - TU;
            TF  = SIMD_FNMADD(KP618033988, Tv, Ty);
            Tz  = SIMD_FMADD(KP618033988, Ty, Tv);
            T1f = T1c + T1d;
            T1e = T1c - T1d;
            TJ  = SIMD_FMADD(KP618033988, T8, Tb);
            Tc  = SIMD_FNMADD(KP618033988, Tb, T8);
            T12 = SIMD_FNMADD(KP250000000, T11, TZ);
            T2a = TZ + T11;
            Tf  = R0[WS(rs, 2)];
            TI  = SIMD_FNMADD(KP618033988, T3, T4);
            T5  = SIMD_FMADD(KP618033988, T4, T3);
            T1a = T17 - T4;
            T18 = T17 + T4;
            TW  = SIMD_FNMADD(KP250000000, TV, TT);
            T29 = TT + TV;
            Tg  = R0[WS(rs, 8)];
            Tj  = R0[WS(rs, 11)];
            T1g = SIMD_FNMADD(KP447213595, T1f, T1e);
            T1M = SIMD_FMADD(KP447213595, T1f, T1e);
            Tk  = R0[WS(rs, 17)];
            Tl  = R0[WS(rs, 23)];
            TP  = TJ - TI;
            TK  = TI + TJ;
            TB  = Tc - T5;
            Td  = T5 + Tc;
            T19 = SIMD_FNMADD(KP250000000, T18, T16);
            T24 = T16 + T18;
            Th  = Tf - Tg;
            T1j = Tf + Tg;
            TS  = TF + TG;
            TH  = TF - TG;
            Tm  = Tk - Tl;
            T1p = Tk + Tl;
            TY  = SIMD_FMADD(KP559016994, TX, TW);
            T1I = SIMD_FNMADD(KP559016994, TX, TW);
            T1J = SIMD_FNMADD(KP559016994, T13, T12);
            T14 = SIMD_FMADD(KP559016994, T13, T12);
            TE  = Tz + Tu;
            TA  = Tu - Tz;
            T1L = SIMD_FNMADD(KP559016994, T1a, T19);
            T1b = SIMD_FMADD(KP559016994, T1a, T19);
            T2e = T24 + T1f;
            T25 = T24 - T1f;
            TL  = SIMD_FMADD(KP618033988, Te, Th);
            Ti  = SIMD_FNMADD(KP618033988, Th, Te);
            T1m = Te - T1j;
            T1k = Te + T1j;
            T2d = T29 + T2a;
            T2b = T29 - T2a;
            TM  = SIMD_FNMADD(KP618033988, Tj, Tm);
            Tn  = SIMD_FMADD(KP618033988, Tm, Tj);
            T1s = Tj - T1p;
            T1q = Tj + T1p;
            T20 = T1I + T1J;
            T1K = T1I - T1J;
            T1X = SIMD_FNMADD(KP559016994, T1M, T1L);
            T1N = SIMD_FMADD(KP559016994, T1M, T1L);
            T26 = T1i + T1k;
            T1l = SIMD_FNMADD(KP250000000, T1k, T1i);
            T1B = SIMD_FMADD(KP559016994, T1g, T1b);
            T1h = SIMD_FNMADD(KP559016994, T1g, T1b);
            TQ  = TM - TL;
            TN  = TL + TM;
            TC  = Ti - Tn;
            To  = Ti + Tn;
            T1r = SIMD_FNMADD(KP250000000, T1q, T1o);
            T27 = T1o + T1q;
            T1n = SIMD_FMADD(KP559016994, T1m, T1l);
            T1O = SIMD_FNMADD(KP559016994, T1m, T1l);
        }
        {
            SIMD_FLOAT T1T, T23, T1F, T1x, T15, T1A, T1U, T1W, T1G, T1y, T1Q,
                T1Y, T1u, T1C, T2g;
            SIMD_FLOAT T2c, TR, TO, TD, Tp, T1t, T1P, T28, T2f, T1E, T1w, T1Z,
                T21, T1R, T1V;
            SIMD_FLOAT T1D, T1H, T1v, T1z, T22, T1S;
            T1T            = TQ - TP;
            TR             = TP + TQ;
            T23            = TK - TN;
            TO             = TK + TN;
            T1F            = TC - TB;
            TD             = TB + TC;
            T1x            = Td + To;
            Tp             = Td - To;
            T1t            = SIMD_FMADD(KP559016994, T1s, T1r);
            T1P            = SIMD_FNMADD(KP559016994, T1s, T1r);
            T28            = T26 - T27;
            T2f            = T26 + T27;
            T15            = TY - T14;
            T1A            = TY + T14;
            Ci[WS(cs, 3)]  = KP951056516 * (TR - TS);
            T1U            = SIMD_FMADD(KP500000000, TR, TS);
            Ci[WS(cs, 12)] = KP951056516 * (TH + TO);
            T1W            = SIMD_FNMADD(KP500000000, TO, TH);
            Ci[WS(cs, 6)]  = KP951056516 * (TD - TE);
            T1G            = SIMD_FMADD(KP500000000, TD, TE);
            Ci[WS(cs, 9)]  = KP951056516 * (Tp - TA);
            T1y            = SIMD_FMADD(KP500000000, Tp, TA);
            T1Q            = T1O - T1P;
            T1Y            = T1O + T1P;
            T1u            = T1n - T1t;
            T1C            = T1n + T1t;
            Ci[WS(cs, 10)] = KP866025403 * (T2f - T2e);
            T2g            = T2e + T2f;
            Ci[WS(cs, 5)]  = KP866025403 * (T25 - T28);
            T2c            = T25 + T28;
            T1Z            = T1X - T1Y;
            T21            = T1X + T1Y;
            T1R            = T1N + T1Q;
            T1V            = T1Q - T1N;
            T1D            = T1B + T1C;
            T1H            = T1C - T1B;
            T1v            = T1h + T1u;
            T1z            = T1u - T1h;
            Cr[0]          = T2d + T2g;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2g, T2d);
            Cr[WS(cs, 15)] = T2b + T2c;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2c, T2b);
            T22            = SIMD_FNMADD(KP500000000, T21, T20);
            Cr[WS(cs, 12)] = T20 + T21;
            Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1Z, T1W));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1Z, T1W)));
            Ci[WS(cs, 13)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T1V, T1U)));
            Ci[WS(cs, 7)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1V, T1U));
            T1S            = SIMD_FNMADD(KP500000000, T1R, T1K);
            Cr[WS(cs, 3)]  = T1K + T1R;
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1H, T1G));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1H, T1G));
            T1E            = SIMD_FNMADD(KP500000000, T1D, T1A);
            Cr[WS(cs, 6)]  = T1A + T1D;
            Ci[WS(cs, 1)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1z, T1y));
            Ci[WS(cs, 11)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1z, T1y));
            T1w            = SIMD_FNMADD(KP500000000, T1v, T15);
            Cr[WS(cs, 9)]  = T15 + T1v;
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T23, T22);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T23, T22);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1T, T1S);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1T, T1S);
            Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1F, T1E);
            Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1F, T1E);
            Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1x, T1w);
            Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1x, T1w);
        }
    }
}

template <>
struct r2cf_traits<30, 25>
{
    static constexpr long_t flops           = 221;
    static constexpr long_t operations      = 162;
    static constexpr long_t memory_accesses = 55;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 9;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 25 -name r2cf
 * -standalone */

/*
 * This function contains 148 FP additions, 73 FP multiplications,
 * (or, 89 additions, 14 multiplications, 59 fused multiply/add),
 * 121 stack variables, 9 constants, and 55 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 25>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP447213595, +0.447213595499957939281834733746255247088123672);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1I, T1A, T1z, T1H, T19, T16, TI, Tu, T1l, T10, TB, TH, T1i,
            Tc, TL;
        SIMD_FLOAT T2d, T15, T1r, T2c, TZ, Te, Tf, Tg, T5, TK, T1b, T1d, T1j,
            T1P, Tj;
        SIMD_FLOAT Tk, Tl;
        {
            SIMD_FLOAT Tt, T12, Tq, Tr, TV, Ty, Tz, Tv, Tw, T4, T1, TA, TX, Tx,
                TW;
            SIMD_FLOAT T2, T1g, Tb, T1f, T8, T14, T9, Ta, T6, T7, T13, Ts, TY,
                T1a, T3;
            SIMD_FLOAT T1h;
            Tt  = R0[WS(rs, 3)];
            T12 = R0[WS(rs, 15)];
            Tq  = R0[WS(rs, 21)];
            Tr  = R0[WS(rs, 9)];
            TV  = R0[0];
            Ty  = R0[WS(rs, 12)];
            Tz  = R0[WS(rs, 18)];
            Tv  = R0[WS(rs, 6)];
            Tw  = R0[WS(rs, 24)];
            T19 = R0[WS(rs, 10)];
            T9  = R0[WS(rs, 7)];
            Ta  = R0[WS(rs, 13)];
            T6  = R0[WS(rs, 19)];
            T7  = R0[WS(rs, 1)];
            T4  = R0[WS(rs, 22)];
            T13 = Tq + Tr;
            Ts  = Tq - Tr;
            T1  = R0[WS(rs, 16)];
            TA  = Ty - Tz;
            TX  = Ty + Tz;
            Tx  = Tv - Tw;
            TW  = Tv + Tw;
            T2  = R0[WS(rs, 4)];
            T1g = T9 + Ta;
            Tb  = T9 - Ta;
            T1f = T7 + T6;
            T8  = T6 - T7;
            T14 = T13 + Tt;
            T16 = T13 - Tt;
            TI  = SIMD_FMADD(KP618033988, Ts, Tt);
            Tu  = SIMD_FNMADD(KP618033988, Tt, Ts);
            T1l = R0[WS(rs, 20)];
            T10 = TW - TX;
            TY  = TW + TX;
            TB  = SIMD_FMADD(KP618033988, TA, Tx);
            TH  = SIMD_FNMADD(KP618033988, Tx, TA);
            T1a = T1 + T2;
            T3  = T1 - T2;
            T1h = T1f - T1g;
            T1i = T1f + T1g;
            Tc  = SIMD_FNMADD(KP618033988, Tb, T8);
            TL  = SIMD_FMADD(KP618033988, T8, Tb);
            T2d = T12 + T14;
            T15 = SIMD_FNMADD(KP250000000, T14, T12);
            T1r = R0[WS(rs, 5)];
            T2c = TV + TY;
            TZ  = SIMD_FNMADD(KP250000000, TY, TV);
            Te  = R0[WS(rs, 14)];
            Tf  = R0[WS(rs, 2)];
            Tg  = R0[WS(rs, 8)];
            T5  = SIMD_FMADD(KP618033988, T4, T3);
            TK  = SIMD_FNMADD(KP618033988, T3, T4);
            T1b = T1a + T4;
            T1d = T1a - T4;
            T1j = SIMD_FNMADD(KP447213595, T1i, T1h);
            T1P = SIMD_FMADD(KP447213595, T1i, T1h);
            Tj  = R0[WS(rs, 11)];
            Tk  = R0[WS(rs, 17)];
            Tl  = R0[WS(rs, 23)];
        }
        {
            SIMD_FLOAT Th, T1m, TR, TM, TD, Td, T1c, T27, TJ, TU, T2e, T2g, Ti,
                TN, T1p;
            SIMD_FLOAT T1e, T2h, T28, TO, Tn, T1v, T1t, T1L, T11, T17, T1M, T1o,
                T29, T1Q, T20;
            SIMD_FLOAT T1s, Tm, T1n, T1O;
            Th  = Tf - Tg;
            T1m = Tf + Tg;
            TR  = TL - TK;
            TM  = TK + TL;
            TD  = Tc - T5;
            Td  = T5 + Tc;
            T1c = SIMD_FNMADD(KP250000000, T1b, T19);
            T27 = T19 + T1b;
            TJ  = TH - TI;
            TU  = TH + TI;
            T1s = Tk + Tl;
            Tm  = Tk - Tl;
            T2e = T2c - T2d;
            T2g = T2c + T2d;
            Ti  = SIMD_FNMADD(KP618033988, Th, Te);
            TN  = SIMD_FMADD(KP618033988, Te, Th);
            T1n = Te + T1m;
            T1p = Te - T1m;
            T1O = SIMD_FNMADD(KP559016994, T1d, T1c);
            T1e = SIMD_FMADD(KP559016994, T1d, T1c);
            T2h = T27 + T1i;
            T28 = T27 - T1i;
            TO  = SIMD_FNMADD(KP618033988, Tj, Tm);
            Tn  = SIMD_FMADD(KP618033988, Tm, Tj);
            T1v = Tj - T1s;
            T1t = Tj + T1s;
            T1L = SIMD_FNMADD(KP559016994, T10, TZ);
            T11 = SIMD_FMADD(KP559016994, T10, TZ);
            T17 = SIMD_FMADD(KP559016994, T16, T15);
            T1M = SIMD_FNMADD(KP559016994, T16, T15);
            T1o = SIMD_FNMADD(KP250000000, T1n, T1l);
            T29 = T1l + T1n;
            T1Q = SIMD_FMADD(KP559016994, T1P, T1O);
            T20 = SIMD_FNMADD(KP559016994, T1P, T1O);
            {
                SIMD_FLOAT TC, TG, T23, T1N, T1k, T1E, T1W, T26, TF, Tp, T1X,
                    T1Z, T1J, T1B, T21;
                SIMD_FLOAT T1T, T1x, T1F, T2j, T2f, TS, TP, TE, To, T1u, T2a,
                    T1R, T1q, T1S, T1w;
                SIMD_FLOAT T2i, T2b, TT, TQ, T18, T1D, T1C, T1y, T1K, T1G, T25,
                    T1V, T24, T22, T1Y;
                SIMD_FLOAT T1U;
                TC             = Tu - TB;
                TG             = TB + Tu;
                TS             = TO - TN;
                TP             = TN + TO;
                TE             = Ti - Tn;
                To             = Ti + Tn;
                T1u            = SIMD_FNMADD(KP250000000, T1t, T1r);
                T2a            = T1r + T1t;
                T23            = T1L + T1M;
                T1N            = T1L - T1M;
                T1R            = SIMD_FNMADD(KP559016994, T1p, T1o);
                T1q            = SIMD_FMADD(KP559016994, T1p, T1o);
                T1k            = SIMD_FNMADD(KP559016994, T1j, T1e);
                T1E            = SIMD_FMADD(KP559016994, T1j, T1e);
                TT             = TR + TS;
                T1W            = TS - TR;
                TQ             = TM + TP;
                T26            = TM - TP;
                TF             = TD + TE;
                T1I            = TE - TD;
                Tp             = Td - To;
                T1A            = Td + To;
                T1S            = SIMD_FNMADD(KP559016994, T1v, T1u);
                T1w            = SIMD_FMADD(KP559016994, T1v, T1u);
                T2i            = T29 + T2a;
                T2b            = T29 - T2a;
                Ci[WS(cs, 3)]  = KP951056516 * (TT - TU);
                T1X            = SIMD_FMADD(KP500000000, TT, TU);
                Ci[WS(cs, 12)] = KP951056516 * (TJ + TQ);
                T1Z            = SIMD_FNMADD(KP500000000, TQ, TJ);
                T1J            = SIMD_FMADD(KP500000000, TF, TG);
                T1B            = SIMD_FMADD(KP500000000, Tp, TC);
                T21            = T1R + T1S;
                T1T            = T1R - T1S;
                T1x            = T1q - T1w;
                T1F            = T1q + T1w;
                Ci[WS(cs, 10)] = KP866025403 * (T2i - T2h);
                T2j            = T2h + T2i;
                Ci[WS(cs, 5)]  = KP866025403 * (T28 - T2b);
                T2f            = T28 + T2b;
                Ci[WS(cs, 9)]  = KP951056516 * (Tp - TC);
                T18            = T11 - T17;
                T1D            = T11 + T17;
                Ci[WS(cs, 6)]  = KP951056516 * (TF - TG);
                T24            = T20 + T21;
                T22            = T20 - T21;
                T1Y            = T1T - T1Q;
                T1U            = T1Q + T1T;
                T1C            = T1x - T1k;
                T1y            = T1k + T1x;
                Cr[0]          = T2g + T2j;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2j, T2g);
                Cr[WS(cs, 15)] = T2e + T2f;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2f, T2e);
                T1K            = T1F - T1E;
                T1G            = T1E + T1F;
                T25            = SIMD_FNMADD(KP500000000, T24, T23);
                Cr[WS(cs, 12)] = T23 + T24;
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T22, T1Z));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T22, T1Z)));
                Ci[WS(cs, 13)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T1Y, T1X)));
                Ci[WS(cs, 7)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1Y, T1X));
                T1V           = SIMD_FNMADD(KP500000000, T1U, T1N);
                Cr[WS(cs, 3)] = T1N + T1U;
                Cr[WS(cs, 9)] = T18 + T1y;
                Ci[WS(cs, 11)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1C, T1B));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1K, T1J));
                Cr[WS(cs, 6)] = T1D + T1G;
                Cr[WS(cs, 8)] = SIMD_FMADD(KP823639103, T26, T25);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP823639103, T26, T25);
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1K, T1J));
                Ci[WS(cs, 1)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1C, T1B));
                T1z            = SIMD_FNMADD(KP500000000, T1y, T18);
                T1H            = SIMD_FNMADD(KP500000000, T1G, T1D);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1W, T1V);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1W, T1V);
            }
        }
        Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1A, T1z);
        Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1A, T1z);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1I, T1H);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1I, T1H);
    }
}

template <>
struct r2cf_traits<30, 26>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 164;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 154;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 26 -name r2cf
 * -standalone */

/*
 * This function contains 150 FP additions, 70 FP multiplications,
 * (or, 94 additions, 14 multiplications, 56 fused multiply/add),
 * 154 stack variables, 8 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 26>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1K, T1C, T1B, T1J;
        {
            SIMD_FLOAT T1t, T19, T1f, T16, TI, Tu, T4, T10, TB, TH, Ti, TN, T1r,
                T2g, T15;
            SIMD_FLOAT T1, T2f, TZ, T2, T6, T7, Tn, TO, T1v, T1x, T9, T1q, T2c,
                Ta, Tt;
            SIMD_FLOAT T12, Tq, Tr, TV, Ty, Tz, Tv, Tw, T1n, Te, Tf, Tg, Tj,
                T13, Ts;
            SIMD_FLOAT Tk, TA, TX, Tx, TW, Tl, Th, T1o, T14, T1u, Tm, T1p, TY;
            Tt  = R0[WS(rs, 3)];
            T12 = R0[WS(rs, 15)];
            Tq  = R0[WS(rs, 21)];
            Tr  = R0[WS(rs, 9)];
            TV  = R0[0];
            Ty  = R0[WS(rs, 12)];
            Tz  = R0[WS(rs, 18)];
            Tv  = R0[WS(rs, 6)];
            Tw  = R0[WS(rs, 24)];
            T1n = R0[WS(rs, 20)];
            T1t = R0[WS(rs, 5)];
            Te  = R0[WS(rs, 14)];
            Tf  = R0[WS(rs, 2)];
            Tg  = R0[WS(rs, 8)];
            Tj  = R0[WS(rs, 11)];
            T13 = Tq + Tr;
            Ts  = Tq - Tr;
            Tk  = R0[WS(rs, 17)];
            TA  = Ty - Tz;
            TX  = Ty + Tz;
            Tx  = Tv - Tw;
            TW  = Tv + Tw;
            Tl  = R0[WS(rs, 23)];
            T19 = R0[WS(rs, 10)];
            T1f = R0[WS(rs, 25)];
            Th  = Tf - Tg;
            T1o = Tf + Tg;
            T14 = T13 + Tt;
            T16 = T13 - Tt;
            TI  = SIMD_FMADD(KP618033988, Ts, Tt);
            Tu  = SIMD_FNMADD(KP618033988, Tt, Ts);
            T4  = R0[WS(rs, 22)];
            T10 = TW - TX;
            TY  = TW + TX;
            TB  = SIMD_FMADD(KP618033988, TA, Tx);
            TH  = SIMD_FNMADD(KP618033988, Tx, TA);
            T1u = Tk + Tl;
            Tm  = Tk - Tl;
            Ti  = SIMD_FNMADD(KP618033988, Th, Te);
            TN  = SIMD_FMADD(KP618033988, Te, Th);
            T1p = Te + T1o;
            T1r = Te - T1o;
            T2g = T12 + T14;
            T15 = SIMD_FNMADD(KP250000000, T14, T12);
            T1  = R0[WS(rs, 16)];
            T2f = TV + TY;
            TZ  = SIMD_FNMADD(KP250000000, TY, TV);
            T2  = R0[WS(rs, 4)];
            T6  = R0[WS(rs, 19)];
            T7  = R0[WS(rs, 1)];
            Tn  = SIMD_FMADD(KP618033988, Tm, Tj);
            TO  = SIMD_FNMADD(KP618033988, Tj, Tm);
            T1v = Tj + T1u;
            T1x = Tj - T1u;
            T9  = R0[WS(rs, 7)];
            T1q = SIMD_FNMADD(KP250000000, T1p, T1n);
            T2c = T1n + T1p;
            Ta  = R0[WS(rs, 13)];
            {
                SIMD_FLOAT T8, T1g, TS, TP, TE, To, T1w, T2d, T1T, T1s, Tb, T1h,
                    TK, T5, T1d;
                SIMD_FLOAT T1b, T3, T1a, TU, TJ, T1y, T2l, T2e, T1k, T29, T2h,
                    T2j, T23, T1V, T1N;
                SIMD_FLOAT T11, T17, T1O, TR, TM, TD, Td, T1j, T2a, T1Q, T1e,
                    T1U, TL, Tc, T1i;
                SIMD_FLOAT T1c;
                T3  = T1 - T2;
                T1a = T1 + T2;
                T8  = T6 - T7;
                T1g = T7 + T6;
                TS  = TO - TN;
                TP  = TN + TO;
                TE  = Ti - Tn;
                To  = Ti + Tn;
                T1w = SIMD_FNMADD(KP250000000, T1v, T1t);
                T2d = T1t + T1v;
                T1T = SIMD_FNMADD(KP559016994, T1r, T1q);
                T1s = SIMD_FMADD(KP559016994, T1r, T1q);
                Tb  = T9 - Ta;
                T1h = T9 + Ta;
                TK  = SIMD_FNMADD(KP618033988, T3, T4);
                T5  = SIMD_FMADD(KP618033988, T4, T3);
                T1d = T1a - T4;
                T1b = T1a + T4;
                TU  = TH + TI;
                TJ  = TH - TI;
                T1U = SIMD_FNMADD(KP559016994, T1x, T1w);
                T1y = SIMD_FMADD(KP559016994, T1x, T1w);
                T2l = T2c + T2d;
                T2e = T2c - T2d;
                TL  = SIMD_FMADD(KP618033988, T8, Tb);
                Tc  = SIMD_FNMADD(KP618033988, Tb, T8);
                T1k = T1g - T1h;
                T1i = T1g + T1h;
                T29 = T19 + T1b;
                T1c = SIMD_FNMADD(KP250000000, T1b, T19);
                T2h = T2f - T2g;
                T2j = T2f + T2g;
                T23 = T1T + T1U;
                T1V = T1T - T1U;
                T1N = SIMD_FNMADD(KP559016994, T10, TZ);
                T11 = SIMD_FMADD(KP559016994, T10, TZ);
                T17 = SIMD_FMADD(KP559016994, T16, T15);
                T1O = SIMD_FNMADD(KP559016994, T16, T15);
                TR  = TL - TK;
                TM  = TK + TL;
                TD  = Tc - T5;
                Td  = T5 + Tc;
                T1j = SIMD_FNMADD(KP250000000, T1i, T1f);
                T2a = T1f + T1i;
                T1Q = SIMD_FNMADD(KP559016994, T1d, T1c);
                T1e = SIMD_FMADD(KP559016994, T1d, T1c);
                {
                    SIMD_FLOAT TG, TC, T1P, T25, T1Y, T28, TF, Tp, T1Z, T21,
                        T1L, T1z, T1H, T1D, T1S;
                    SIMD_FLOAT T22, T1G, T1m, T2m, T2i, T1l, T1R, T2b, T2k, TT,
                        TQ, T1A, T1E, T18, T1F;
                    SIMD_FLOAT T1I, T1M, T27, T1X, T24, T26, T1W, T20;
                    TG             = TB + Tu;
                    TC             = Tu - TB;
                    T1P            = T1N - T1O;
                    T25            = T1N + T1O;
                    T1Y            = TS - TR;
                    TT             = TR + TS;
                    T28            = TM - TP;
                    TQ             = TM + TP;
                    T1K            = TE - TD;
                    TF             = TD + TE;
                    T1C            = Td + To;
                    Tp             = Td - To;
                    T1l            = SIMD_FMADD(KP559016994, T1k, T1j);
                    T1R            = SIMD_FNMADD(KP559016994, T1k, T1j);
                    T2b            = T29 - T2a;
                    T2k            = T29 + T2a;
                    Ci[WS(cs, 3)]  = KP951056516 * (TT - TU);
                    T1Z            = SIMD_FMADD(KP500000000, TT, TU);
                    Ci[WS(cs, 12)] = KP951056516 * (TJ + TQ);
                    T21            = SIMD_FNMADD(KP500000000, TQ, TJ);
                    T1L            = SIMD_FMADD(KP500000000, TF, TG);
                    T1z            = T1s - T1y;
                    T1H            = T1s + T1y;
                    T1D            = SIMD_FMADD(KP500000000, Tp, TC);
                    T1S            = T1Q - T1R;
                    T22            = T1Q + T1R;
                    T1G            = T1e + T1l;
                    T1m            = T1e - T1l;
                    Ci[WS(cs, 10)] = KP866025403 * (T2l - T2k);
                    T2m            = T2k + T2l;
                    Ci[WS(cs, 5)]  = KP866025403 * (T2b - T2e);
                    T2i            = T2b + T2e;
                    Ci[WS(cs, 9)]  = KP951056516 * (Tp - TC);
                    Ci[WS(cs, 6)]  = KP951056516 * (TF - TG);
                    T24            = T22 - T23;
                    T26            = T22 + T23;
                    T1W            = T1S + T1V;
                    T20            = T1V - T1S;
                    T1A            = T1m + T1z;
                    T1E            = T1z - T1m;
                    Cr[0]          = T2j + T2m;
                    Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2m, T2j);
                    Cr[WS(cs, 15)] = T2h + T2i;
                    Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2i, T2h);
                    T18            = T11 - T17;
                    T1F            = T11 + T17;
                    T1I            = T1G + T1H;
                    T1M            = T1H - T1G;
                    T27            = SIMD_FNMADD(KP500000000, T26, T25);
                    Cr[WS(cs, 12)] = T25 + T26;
                    Ci[WS(cs, 2)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T24, T21));
                    Ci[WS(cs, 8)] =
                        -(KP951056516 * (SIMD_FNMADD(KP910592997, T24, T21)));
                    Ci[WS(cs, 13)] =
                        -(KP951056516 * (SIMD_FNMADD(KP910592997, T20, T1Z)));
                    Ci[WS(cs, 7)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T20, T1Z));
                    T1X           = SIMD_FNMADD(KP500000000, T1W, T1P);
                    Cr[WS(cs, 3)] = T1P + T1W;
                    Ci[WS(cs, 11)] =
                        KP951056516 * (SIMD_FNMADD(KP910592997, T1E, T1D));
                    Cr[WS(cs, 9)] = T18 + T1A;
                    Ci[WS(cs, 4)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T1M, T1L));
                    Cr[WS(cs, 6)] = T1F + T1I;
                    Cr[WS(cs, 8)] = SIMD_FMADD(KP823639103, T28, T27);
                    Cr[WS(cs, 2)] = SIMD_FNMADD(KP823639103, T28, T27);
                    Ci[WS(cs, 14)] =
                        KP951056516 * (SIMD_FNMADD(KP910592997, T1M, T1L));
                    Ci[WS(cs, 1)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T1E, T1D));
                    T1B            = SIMD_FNMADD(KP500000000, T1A, T18);
                    T1J            = SIMD_FNMADD(KP500000000, T1I, T1F);
                    Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T1Y, T1X);
                    Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T1Y, T1X);
                }
            }
        }
        Cr[WS(cs, 11)] = SIMD_FMADD(KP823639103, T1C, T1B);
        Cr[WS(cs, 1)]  = SIMD_FNMADD(KP823639103, T1C, T1B);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1K, T1J);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1K, T1J);
    }
}

template <>
struct r2cf_traits<30, 27>
{
    static constexpr long_t flops           = 222;
    static constexpr long_t operations      = 166;
    static constexpr long_t memory_accesses = 57;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 27 -name r2cf
 * -standalone */

/*
 * This function contains 152 FP additions, 70 FP multiplications,
 * (or, 96 additions, 14 multiplications, 56 fused multiply/add),
 * 125 stack variables, 8 constants, and 57 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 27>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1N, T1F, T1E, T1M, T1h, T1p, T18, TK, Tw, T12, TJ, TD, TM,
            T5, T1f;
        SIMD_FLOAT T17, T2j, T1w, T11, T2i, Tl, Tm, Tn, TN, Tc, T1m, T1k, Te,
            T2c, T1e;
        SIMD_FLOAT Tf, Th, Ti;
        {
            SIMD_FLOAT Tv, T14, Ts, Tt, TX, TA, TB, Tx, Ty, T1b, T4, T1, T2, T6,
                T15;
            SIMD_FLOAT Tu, T7, TC, TZ, Tz, TY, T9, Ta, T8, T1i, T10, Tb, T1j,
                T1d, T3;
            SIMD_FLOAT T1c, T16;
            Tv  = R0[WS(rs, 3)];
            T14 = R0[WS(rs, 15)];
            Ts  = R0[WS(rs, 21)];
            Tt  = R0[WS(rs, 9)];
            TX  = R0[0];
            TA  = R0[WS(rs, 12)];
            TB  = R0[WS(rs, 18)];
            Tx  = R0[WS(rs, 6)];
            Ty  = R0[WS(rs, 24)];
            T1b = R0[WS(rs, 10)];
            T1h = R0[WS(rs, 25)];
            T4  = R0[WS(rs, 22)];
            T1  = R0[WS(rs, 16)];
            T2  = R0[WS(rs, 4)];
            T6  = R0[WS(rs, 19)];
            T15 = Ts + Tt;
            Tu  = Ts - Tt;
            T7  = R0[WS(rs, 1)];
            TC  = TA - TB;
            TZ  = TA + TB;
            Tz  = Tx - Ty;
            TY  = Tx + Ty;
            T9  = R0[WS(rs, 7)];
            Ta  = R0[WS(rs, 13)];
            T1p = R0[WS(rs, 20)];
            T3  = T1 - T2;
            T1c = T1 + T2;
            T16 = T15 + Tv;
            T18 = T15 - Tv;
            TK  = SIMD_FMADD(KP618033988, Tu, Tv);
            Tw  = SIMD_FNMADD(KP618033988, Tv, Tu);
            T8  = T6 - T7;
            T1i = T7 + T6;
            T10 = TY + TZ;
            T12 = TY - TZ;
            TJ  = SIMD_FNMADD(KP618033988, Tz, TC);
            TD  = SIMD_FMADD(KP618033988, TC, Tz);
            Tb  = T9 - Ta;
            T1j = T9 + Ta;
            TM  = SIMD_FNMADD(KP618033988, T3, T4);
            T5  = SIMD_FMADD(KP618033988, T4, T3);
            T1f = T1c - T4;
            T1d = T1c + T4;
            T17 = SIMD_FNMADD(KP250000000, T16, T14);
            T2j = T14 + T16;
            T1w = R0[WS(rs, 5)];
            T11 = SIMD_FNMADD(KP250000000, T10, TX);
            T2i = TX + T10;
            Tl  = R0[WS(rs, 11)];
            Tm  = R0[WS(rs, 17)];
            Tn  = R0[WS(rs, 23)];
            TN  = SIMD_FMADD(KP618033988, T8, Tb);
            Tc  = SIMD_FNMADD(KP618033988, Tb, T8);
            T1m = T1i - T1j;
            T1k = T1i + T1j;
            Te  = R0[WS(rs, 26)];
            T2c = T1b + T1d;
            T1e = SIMD_FNMADD(KP250000000, T1d, T1b);
            Tf  = R0[WS(rs, 14)];
            Th  = R0[WS(rs, 2)];
            Ti  = R0[WS(rs, 8)];
        }
        {
            SIMD_FLOAT TO, TT, Td, TF, T1g, T1T, T1q, Tg, T1r, Tj, Tp, TQ, T1y,
                T1A, T1n;
            SIMD_FLOAT T1U, T2e, T2n, T1x, To, T2d, T1l, TL, TW, T1u, T2g, T1V,
                T25, T13, T19;
            SIMD_FLOAT T2k, T2m, TR, TU, Tq, TG, T2f, T1t, T1B, T1X, T28, T1S,
                Tk, TP, T1s;
            SIMD_FLOAT T1z, T1Q, T1R;
            T1x = Tm + Tn;
            To  = Tm - Tn;
            TO  = TM + TN;
            TT  = TN - TM;
            Td  = T5 + Tc;
            TF  = Tc - T5;
            T2d = T1h + T1k;
            T1l = SIMD_FNMADD(KP250000000, T1k, T1h);
            T1g = SIMD_FMADD(KP559016994, T1f, T1e);
            T1T = SIMD_FNMADD(KP559016994, T1f, T1e);
            T1q = Te + Tf;
            Tg  = Te - Tf;
            T1r = Th + Ti;
            Tj  = Th - Ti;
            Tp  = SIMD_FMADD(KP618033988, To, Tl);
            TQ  = SIMD_FNMADD(KP618033988, Tl, To);
            T1y = Tl + T1x;
            T1A = Tl - T1x;
            T1n = SIMD_FMADD(KP559016994, T1m, T1l);
            T1U = SIMD_FNMADD(KP559016994, T1m, T1l);
            T2e = T2c - T2d;
            T2n = T2c + T2d;
            TL  = TJ - TK;
            TW  = TJ + TK;
            Tk  = SIMD_FMADD(KP618033988, Tj, Tg);
            TP  = SIMD_FNMADD(KP618033988, Tg, Tj);
            T1s = T1q + T1r;
            T1u = T1q - T1r;
            T1z = SIMD_FNMADD(KP250000000, T1y, T1w);
            T2g = T1w + T1y;
            T1V = T1T - T1U;
            T25 = T1T + T1U;
            T13 = SIMD_FMADD(KP559016994, T12, T11);
            T1Q = SIMD_FNMADD(KP559016994, T12, T11);
            T1R = SIMD_FNMADD(KP559016994, T18, T17);
            T19 = SIMD_FMADD(KP559016994, T18, T17);
            T2k = T2i - T2j;
            T2m = T2i + T2j;
            TR  = TP + TQ;
            TU  = TQ - TP;
            Tq  = Tk - Tp;
            TG  = Tk + Tp;
            T2f = T1p + T1s;
            T1t = SIMD_FNMADD(KP250000000, T1s, T1p);
            T1B = SIMD_FMADD(KP559016994, T1A, T1z);
            T1X = SIMD_FNMADD(KP559016994, T1A, T1z);
            T28 = T1Q + T1R;
            T1S = T1Q - T1R;
            {
                SIMD_FLOAT TE, TI, T21, T2b, TH, Tr, T1G, T1O, T1H, T1D, T1I,
                    T1a, T2a, T20, T1L;
                SIMD_FLOAT T1P, TV, TS, T1W, T1v, T2o, T2h, T22, T24, T1J, T1o,
                    T26, T1Y, T2p, T2l;
                SIMD_FLOAT T1C, T1K, T29, T27, T23, T1Z;
                TE             = Tw - TD;
                TI             = TD + Tw;
                T21            = TU - TT;
                TV             = TT + TU;
                T2b            = TO - TR;
                TS             = TO + TR;
                TH             = TF - TG;
                T1N            = TF + TG;
                Tr             = Td + Tq;
                T1F            = Tq - Td;
                T1W            = SIMD_FNMADD(KP559016994, T1u, T1t);
                T1v            = SIMD_FMADD(KP559016994, T1u, T1t);
                T2o            = T2f + T2g;
                T2h            = T2f - T2g;
                Ci[WS(cs, 3)]  = KP951056516 * (TV - TW);
                T22            = SIMD_FMADD(KP500000000, TV, TW);
                Ci[WS(cs, 12)] = KP951056516 * (TL + TS);
                T24            = SIMD_FNMADD(KP500000000, TS, TL);
                T1G            = SIMD_FMADD(KP500000000, Tr, TE);
                T1J            = T1g + T1n;
                T1o            = T1g - T1n;
                T26            = T1W + T1X;
                T1Y            = T1W - T1X;
                Ci[WS(cs, 10)] = KP866025403 * (T2o - T2n);
                T2p            = T2n + T2o;
                Ci[WS(cs, 5)]  = KP866025403 * (T2e - T2h);
                T2l            = T2e + T2h;
                T1C            = T1v - T1B;
                T1K            = T1v + T1B;
                T1O            = SIMD_FMADD(KP500000000, TH, TI);
                T29            = T25 + T26;
                T27            = T25 - T26;
                T23            = T1Y - T1V;
                T1Z            = T1V + T1Y;
                Cr[0]          = T2m + T2p;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2p, T2m);
                Cr[WS(cs, 15)] = T2k + T2l;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2l, T2k);
                T1H            = T1C - T1o;
                T1D            = T1o + T1C;
                T1I            = T13 + T19;
                T1a            = T13 - T19;
                T2a            = SIMD_FNMADD(KP500000000, T29, T28);
                Cr[WS(cs, 12)] = T28 + T29;
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T27, T24));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T27, T24)));
                Ci[WS(cs, 13)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T23, T22)));
                Ci[WS(cs, 7)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T23, T22));
                T20           = SIMD_FNMADD(KP500000000, T1Z, T1S);
                Cr[WS(cs, 3)] = T1S + T1Z;
                T1L           = T1J + T1K;
                T1P           = T1K - T1J;
                Ci[WS(cs, 9)] = KP951056516 * (Tr - TE);
                Cr[WS(cs, 9)] = T1a + T1D;
                Cr[WS(cs, 8)] = SIMD_FMADD(KP823639103, T2b, T2a);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP823639103, T2b, T2a);
                Ci[WS(cs, 6)] = KP951056516 * (TH - TI);
                Ci[WS(cs, 11)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1H, T1G));
                Ci[WS(cs, 1)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1H, T1G));
                T1E            = SIMD_FNMADD(KP500000000, T1D, T1a);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T21, T20);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T21, T20);
                Cr[WS(cs, 6)]  = T1I + T1L;
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1P, T1O));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1P, T1O));
                T1M = SIMD_FNMADD(KP500000000, T1L, T1I);
            }
        }
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1F, T1E);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1F, T1E);
        Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1N, T1M);
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1N, T1M);
    }
}

template <>
struct r2cf_traits<30, 28>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 168;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 28 -name r2cf
 * -standalone */

/*
 * This function contains 154 FP additions, 70 FP multiplications,
 * (or, 98 additions, 14 multiplications, 56 fused multiply/add),
 * 125 stack variables, 8 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 28>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T1Q, T1I, T1H, T1P, T1k, T1s, T1b, Ty, TM, T14, TF, TL, T2m,
            T1a, T1z;
        SIMD_FLOAT T5, TO, T1i, T2l, T13, Tl, Tm, Tn, Tc, TP, T1n, T1p, Te, Tf,
            Th;
        SIMD_FLOAT T1h, T2f, Ti;
        {
            SIMD_FLOAT T16, Tv, Tw, Ts, Tt, TZ, TC, TD, Tz, TA, T1e, T4, T1, Tx,
                T18;
            SIMD_FLOAT Tu, T17, T2, T11, TE, T10, TB, T6, T7, T9, Ta, T1f, T3,
                T12, T1l;
            SIMD_FLOAT T8, T1m, Tb, T19, T1g;
            T16 = R0[WS(rs, 15)];
            Tv  = R0[WS(rs, 27)];
            Tw  = R0[WS(rs, 3)];
            Ts  = R0[WS(rs, 21)];
            Tt  = R0[WS(rs, 9)];
            TZ  = R0[0];
            TC  = R0[WS(rs, 12)];
            TD  = R0[WS(rs, 18)];
            Tz  = R0[WS(rs, 6)];
            TA  = R0[WS(rs, 24)];
            T1e = R0[WS(rs, 10)];
            T1k = R0[WS(rs, 25)];
            T4  = R0[WS(rs, 22)];
            T1  = R0[WS(rs, 16)];
            Tx  = Tv - Tw;
            T18 = Tv + Tw;
            Tu  = Ts - Tt;
            T17 = Ts + Tt;
            T2  = R0[WS(rs, 4)];
            T11 = TC + TD;
            TE  = TC - TD;
            T10 = Tz + TA;
            TB  = Tz - TA;
            T6  = R0[WS(rs, 19)];
            T7  = R0[WS(rs, 1)];
            T9  = R0[WS(rs, 7)];
            Ta  = R0[WS(rs, 13)];
            T1s = R0[WS(rs, 20)];
            T1b = T17 - T18;
            T19 = T17 + T18;
            Ty  = SIMD_FMADD(KP618033988, Tx, Tu);
            TM  = SIMD_FNMADD(KP618033988, Tu, Tx);
            T1f = T1 + T2;
            T3  = T1 - T2;
            T14 = T10 - T11;
            T12 = T10 + T11;
            TF  = SIMD_FMADD(KP618033988, TE, TB);
            TL  = SIMD_FNMADD(KP618033988, TB, TE);
            T1l = T7 + T6;
            T8  = T6 - T7;
            T1m = T9 + Ta;
            Tb  = T9 - Ta;
            T2m = T16 + T19;
            T1a = SIMD_FNMADD(KP250000000, T19, T16);
            T1z = R0[WS(rs, 5)];
            T5  = SIMD_FMADD(KP618033988, T4, T3);
            TO  = SIMD_FNMADD(KP618033988, T3, T4);
            T1g = T1f + T4;
            T1i = T1f - T4;
            T2l = TZ + T12;
            T13 = SIMD_FNMADD(KP250000000, T12, TZ);
            Tl  = R0[WS(rs, 11)];
            Tm  = R0[WS(rs, 17)];
            Tn  = R0[WS(rs, 23)];
            Tc  = SIMD_FNMADD(KP618033988, Tb, T8);
            TP  = SIMD_FMADD(KP618033988, T8, Tb);
            T1n = T1l + T1m;
            T1p = T1l - T1m;
            Te  = R0[WS(rs, 26)];
            Tf  = R0[WS(rs, 14)];
            Th  = R0[WS(rs, 2)];
            T1h = SIMD_FNMADD(KP250000000, T1g, T1e);
            T2f = T1e + T1g;
            Ti  = R0[WS(rs, 8)];
        }
        {
            SIMD_FLOAT TW, TQ, TH, Td, Tg, T1t, T1W, T1j, Tj, T1u, TS, Tp, T1D,
                T1B, T1X;
            SIMD_FLOAT T1q, T2q, T2h, To, T1A, T1o, T2g, TV, TN, T1x, T2j, T28,
                T1Y, T15, T1c;
            SIMD_FLOAT T2p, T2n, TX, TT, TI, Tq, T1w, T2i, T20, T1E, T1V, T2b,
                TR, Tk, T1v;
            SIMD_FLOAT T1C, T1T, T1U;
            To  = Tm - Tn;
            T1A = Tm + Tn;
            TW  = TP - TO;
            TQ  = TO + TP;
            TH  = Tc - T5;
            Td  = T5 + Tc;
            T1o = SIMD_FNMADD(KP250000000, T1n, T1k);
            T2g = T1k + T1n;
            Tg  = Te - Tf;
            T1t = Te + Tf;
            T1W = SIMD_FNMADD(KP559016994, T1i, T1h);
            T1j = SIMD_FMADD(KP559016994, T1i, T1h);
            Tj  = Th - Ti;
            T1u = Th + Ti;
            TS  = SIMD_FNMADD(KP618033988, Tl, To);
            Tp  = SIMD_FMADD(KP618033988, To, Tl);
            T1D = Tl - T1A;
            T1B = Tl + T1A;
            T1X = SIMD_FNMADD(KP559016994, T1p, T1o);
            T1q = SIMD_FMADD(KP559016994, T1p, T1o);
            T2q = T2f + T2g;
            T2h = T2f - T2g;
            TV  = TM - TL;
            TN  = TL + TM;
            TR  = SIMD_FNMADD(KP618033988, Tg, Tj);
            Tk  = SIMD_FMADD(KP618033988, Tj, Tg);
            T1x = T1t - T1u;
            T1v = T1t + T1u;
            T2j = T1z + T1B;
            T1C = SIMD_FNMADD(KP250000000, T1B, T1z);
            T28 = T1W + T1X;
            T1Y = T1W - T1X;
            T1T = SIMD_FNMADD(KP559016994, T14, T13);
            T15 = SIMD_FMADD(KP559016994, T14, T13);
            T1c = SIMD_FMADD(KP559016994, T1b, T1a);
            T1U = SIMD_FNMADD(KP559016994, T1b, T1a);
            T2p = T2l + T2m;
            T2n = T2l - T2m;
            TX  = TS - TR;
            TT  = TR + TS;
            TI  = Tk + Tp;
            Tq  = Tk - Tp;
            T1w = SIMD_FNMADD(KP250000000, T1v, T1s);
            T2i = T1s + T1v;
            T20 = SIMD_FNMADD(KP559016994, T1D, T1C);
            T1E = SIMD_FMADD(KP559016994, T1D, T1C);
            T1V = T1T - T1U;
            T2b = T1T + T1U;
            {
                SIMD_FLOAT TK, TG, T24, T2e, TJ, Tr, T1J, T1R, T1G, T1K, T1d,
                    T1L, T2d, T23, T1S;
                SIMD_FLOAT T1O, TY, TU, T1y, T1Z, T2k, T2r, T25, T27, T1r, T1M,
                    T21, T29, T2s, T2o;
                SIMD_FLOAT T1N, T1F, T2a, T2c, T22, T26;
                TK             = TF + Ty;
                TG             = Ty - TF;
                TY             = TW + TX;
                T24            = TX - TW;
                TU             = TQ + TT;
                T2e            = TQ - TT;
                T1Q            = TH + TI;
                TJ             = TH - TI;
                T1I            = Tq - Td;
                Tr             = Td + Tq;
                T1y            = SIMD_FMADD(KP559016994, T1x, T1w);
                T1Z            = SIMD_FNMADD(KP559016994, T1x, T1w);
                T2k            = T2i - T2j;
                T2r            = T2i + T2j;
                Ci[WS(cs, 3)]  = KP951056516 * (TV + TY);
                T25            = SIMD_FNMADD(KP500000000, TY, TV);
                Ci[WS(cs, 12)] = KP951056516 * (TN + TU);
                T27            = SIMD_FNMADD(KP500000000, TU, TN);
                T1J            = SIMD_FMADD(KP500000000, Tr, TG);
                T1r            = T1j - T1q;
                T1M            = T1j + T1q;
                T21            = T1Z - T20;
                T29            = T1Z + T20;
                Ci[WS(cs, 10)] = KP866025403 * (T2r - T2q);
                T2s            = T2q + T2r;
                Ci[WS(cs, 5)]  = KP866025403 * (T2h - T2k);
                T2o            = T2h + T2k;
                T1N            = T1y + T1E;
                T1F            = T1y - T1E;
                T1R            = SIMD_FMADD(KP500000000, TJ, TK);
                T2a            = T28 - T29;
                T2c            = T28 + T29;
                T22            = T1Y + T21;
                T26            = T21 - T1Y;
                Cr[0]          = T2p + T2s;
                Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2s, T2p);
                Cr[WS(cs, 15)] = T2n + T2o;
                Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2o, T2n);
                T1G            = T1r + T1F;
                T1K            = T1F - T1r;
                T1d            = T15 - T1c;
                T1L            = T15 + T1c;
                T2d            = SIMD_FNMADD(KP500000000, T2c, T2b);
                Cr[WS(cs, 12)] = T2b + T2c;
                Ci[WS(cs, 2)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T2a, T27));
                Ci[WS(cs, 8)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T2a, T27)));
                Ci[WS(cs, 13)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T26, T25));
                Ci[WS(cs, 7)] =
                    -(KP951056516 * (SIMD_FNMADD(KP910592997, T26, T25)));
                T23           = SIMD_FNMADD(KP500000000, T22, T1V);
                Cr[WS(cs, 3)] = T1V + T22;
                T1S           = T1N - T1M;
                T1O           = T1M + T1N;
                Ci[WS(cs, 9)] = KP951056516 * (Tr - TG);
                Cr[WS(cs, 9)] = T1d + T1G;
                Cr[WS(cs, 8)] = SIMD_FMADD(KP823639103, T2e, T2d);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP823639103, T2e, T2d);
                Ci[WS(cs, 6)] = KP951056516 * (TJ - TK);
                Ci[WS(cs, 11)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1K, T1J));
                Ci[WS(cs, 1)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1K, T1J));
                T1H            = SIMD_FNMADD(KP500000000, T1G, T1d);
                Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T24, T23);
                Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T24, T23);
                Cr[WS(cs, 6)]  = T1L + T1O;
                Ci[WS(cs, 14)] =
                    KP951056516 * (SIMD_FNMADD(KP910592997, T1S, T1R));
                Ci[WS(cs, 4)] =
                    KP951056516 * (SIMD_FMADD(KP910592997, T1S, T1R));
                T1P = SIMD_FNMADD(KP500000000, T1O, T1L);
            }
        }
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1I, T1H);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1I, T1H);
        Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1Q, T1P);
        Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1Q, T1P);
    }
}

template <>
struct r2cf_traits<30, 29>
{
    static constexpr long_t flops           = 226;
    static constexpr long_t operations      = 170;
    static constexpr long_t memory_accesses = 59;
    static constexpr long_t stack_vars      = 129;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 29 -name r2cf
 * -standalone */

/*
 * This function contains 156 FP additions, 70 FP multiplications,
 * (or, 100 additions, 14 multiplications, 56 fused multiply/add),
 * 129 stack variables, 8 constants, and 59 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 29>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT TV, TZ, Ts, TK, TP, TX, T2n, T2u, T2q, T2s, T24, T2c, T17,
            T1e, TI;
        SIMD_FLOAT TM, T2i, T1s, T1I, T1Q, T2e, T1Y, T1Z, T1m, TY, TS, TJ, Tf,
            T1r, T2j;
        SIMD_FLOAT T1O, T1f;
        {
            SIMD_FLOAT T1g, T1d, TA, TO, T16, TH, TN, T2p, T1c, T1n, T2o, T15,
                T1A, T2m, Tb;
            SIMD_FLOAT T1h, T3, T2l, T1z, T1i, T6, Ta, T1o, T23, T1H, Tc, T18,
                Tx, Ty, Tu;
            SIMD_FLOAT Tv, T11, TE, TF, TB, TC, T1B, T7, TQ, T1j, T1l, T1p, Td,
                T1W, T1X;
            SIMD_FLOAT T22, T1k, TR, Te, T1q;
            T18 = R0[WS(rs, 15)];
            Tx  = R0[WS(rs, 27)];
            Ty  = R0[WS(rs, 3)];
            Tu  = R0[WS(rs, 21)];
            Tv  = R0[WS(rs, 9)];
            T11 = R0[0];
            TE  = R0[WS(rs, 12)];
            TF  = R0[WS(rs, 18)];
            TB  = R0[WS(rs, 6)];
            TC  = R0[WS(rs, 24)];
            {
                SIMD_FLOAT T1v, T1C, Tn, To, Tz, T1a, Tw, T19, Tp, T13, TG, T12,
                    TD, Tg, Th;
                SIMD_FLOAT Tj, Tk, T1D, Tq, T14, T1w, Ti, T1x, Tl, T1b, Tr, TU,
                    T1E, T1G, T1;
                SIMD_FLOAT T2, T4, Tm, TT, T1y, T5, T8, T9, T1F;
                T1v = R0[WS(rs, 20)];
                T1C = R0[WS(rs, 5)];
                Tn  = R0[WS(rs, 11)];
                To  = R0[WS(rs, 17)];
                Tz  = Tx - Ty;
                T1a = Tx + Ty;
                Tw  = Tu - Tv;
                T19 = Tu + Tv;
                Tp  = R0[WS(rs, 23)];
                T13 = TE + TF;
                TG  = TE - TF;
                T12 = TB + TC;
                TD  = TB - TC;
                Tg  = R0[WS(rs, 26)];
                Th  = R0[WS(rs, 14)];
                Tj  = R0[WS(rs, 2)];
                Tk  = R0[WS(rs, 8)];
                T1g = R0[WS(rs, 10)];
                T1d = T19 - T1a;
                T1b = T19 + T1a;
                TA  = SIMD_FMADD(KP618033988, Tz, Tw);
                TO  = SIMD_FNMADD(KP618033988, Tw, Tz);
                T1D = To + Tp;
                Tq  = To - Tp;
                T16 = T12 - T13;
                T14 = T12 + T13;
                TH  = SIMD_FMADD(KP618033988, TG, TD);
                TN  = SIMD_FNMADD(KP618033988, TD, TG);
                T1w = Tg + Th;
                Ti  = Tg - Th;
                T1x = Tj + Tk;
                Tl  = Tj - Tk;
                T2p = T18 + T1b;
                T1c = SIMD_FNMADD(KP250000000, T1b, T18);
                T1n = R0[WS(rs, 25)];
                Tr  = SIMD_FMADD(KP618033988, Tq, Tn);
                TU  = SIMD_FNMADD(KP618033988, Tn, Tq);
                T1E = Tn + T1D;
                T1G = Tn - T1D;
                T2o = T11 + T14;
                T15 = SIMD_FNMADD(KP250000000, T14, T11);
                T1  = R0[WS(rs, 16)];
                T2  = R0[WS(rs, 4)];
                T4  = R0[WS(rs, 22)];
                Tm  = SIMD_FMADD(KP618033988, Tl, Ti);
                TT  = SIMD_FNMADD(KP618033988, Ti, Tl);
                T1y = T1w + T1x;
                T1A = T1w - T1x;
                T5  = R0[WS(rs, 28)];
                T8  = R0[WS(rs, 19)];
                T9  = R0[WS(rs, 1)];
                T1F = SIMD_FNMADD(KP250000000, T1E, T1C);
                T2m = T1C + T1E;
                Tb  = R0[WS(rs, 7)];
                T1h = T1 + T2;
                T3  = T1 - T2;
                TV  = TT + TU;
                TZ  = TU - TT;
                Ts  = Tm - Tr;
                TK  = Tm + Tr;
                T2l = T1v + T1y;
                T1z = SIMD_FNMADD(KP250000000, T1y, T1v);
                T1i = T4 + T5;
                T6  = T4 - T5;
                Ta  = T8 - T9;
                T1o = T9 + T8;
                T23 = SIMD_FNMADD(KP559016994, T1G, T1F);
                T1H = SIMD_FMADD(KP559016994, T1G, T1F);
                Tc  = R0[WS(rs, 13)];
            }
            TP  = TN + TO;
            TX  = TO - TN;
            T1B = SIMD_FMADD(KP559016994, T1A, T1z);
            T22 = SIMD_FNMADD(KP559016994, T1A, T1z);
            T2n = T2l - T2m;
            T2u = T2l + T2m;
            T7  = SIMD_FMADD(KP618033988, T6, T3);
            TQ  = SIMD_FNMADD(KP618033988, T3, T6);
            T1j = T1h + T1i;
            T1l = T1h - T1i;
            T1p = Tb + Tc;
            Td  = Tb - Tc;
            T2q = T2o - T2p;
            T2s = T2o + T2p;
            T24 = T22 - T23;
            T2c = T22 + T23;
            T17 = SIMD_FMADD(KP559016994, T16, T15);
            T1W = SIMD_FNMADD(KP559016994, T16, T15);
            T1X = SIMD_FNMADD(KP559016994, T1d, T1c);
            T1e = SIMD_FMADD(KP559016994, T1d, T1c);
            TI  = TA - TH;
            TM  = TH + TA;
            T1k = SIMD_FNMADD(KP250000000, T1j, T1g);
            T2i = T1g + T1j;
            TR  = SIMD_FMADD(KP618033988, Ta, Td);
            Te  = SIMD_FNMADD(KP618033988, Td, Ta);
            T1s = T1o - T1p;
            T1q = T1o + T1p;
            T1I = T1B - T1H;
            T1Q = T1B + T1H;
            T2e = T1W + T1X;
            T1Y = T1W - T1X;
            T1Z = SIMD_FNMADD(KP559016994, T1l, T1k);
            T1m = SIMD_FMADD(KP559016994, T1l, T1k);
            TY  = TR - TQ;
            TS  = TQ + TR;
            TJ  = Te - T7;
            Tf  = T7 + Te;
            T1r = SIMD_FNMADD(KP250000000, T1q, T1n);
            T2j = T1n + T1q;
        }
        T1O = T17 + T1e;
        T1f = T17 - T1e;
        {
            SIMD_FLOAT T27, T2h, T1T, T1L, T28, T2a, T1U, T1M, T2b, T21, T1P,
                T1u, T2v, T2r, T10;
            SIMD_FLOAT TW, TL, Tt, T20, T1t, T2t, T2k, T1S, T1K, T2f, T2d, T29,
                T25, T1V, T1R;
            SIMD_FLOAT T1N, T1J, T2g, T26;
            T10            = TY + TZ;
            T27            = TZ - TY;
            TW             = TS + TV;
            T2h            = TS - TV;
            TL             = TJ - TK;
            T1T            = TJ + TK;
            Tt             = Tf + Ts;
            T1L            = Ts - Tf;
            T20            = SIMD_FNMADD(KP559016994, T1s, T1r);
            T1t            = SIMD_FMADD(KP559016994, T1s, T1r);
            T2t            = T2i + T2j;
            T2k            = T2i - T2j;
            Ci[WS(cs, 3)]  = KP951056516 * (TX + T10);
            T28            = SIMD_FNMADD(KP500000000, T10, TX);
            Ci[WS(cs, 12)] = KP951056516 * (TP + TW);
            T2a            = SIMD_FNMADD(KP500000000, TW, TP);
            Ci[WS(cs, 6)]  = KP951056516 * (TL - TM);
            T1U            = SIMD_FMADD(KP500000000, TL, TM);
            Ci[WS(cs, 9)]  = KP951056516 * (Tt - TI);
            T1M            = SIMD_FMADD(KP500000000, Tt, TI);
            T2b            = T1Z + T20;
            T21            = T1Z - T20;
            T1P            = T1m + T1t;
            T1u            = T1m - T1t;
            Ci[WS(cs, 10)] = KP866025403 * (T2u - T2t);
            T2v            = T2t + T2u;
            Ci[WS(cs, 5)]  = KP866025403 * (T2k - T2n);
            T2r            = T2k + T2n;
            T2f            = T2b + T2c;
            T2d            = T2b - T2c;
            T29            = T24 - T21;
            T25            = T21 + T24;
            T1V            = T1Q - T1P;
            T1R            = T1P + T1Q;
            T1N            = T1I - T1u;
            T1J            = T1u + T1I;
            Cr[0]          = T2s + T2v;
            Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2v, T2s);
            Cr[WS(cs, 15)] = T2q + T2r;
            Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2r, T2q);
            T2g            = SIMD_FNMADD(KP500000000, T2f, T2e);
            Cr[WS(cs, 12)] = T2e + T2f;
            Ci[WS(cs, 2)]  = KP951056516 * (SIMD_FMADD(KP910592997, T2d, T2a));
            Ci[WS(cs, 8)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T2d, T2a)));
            Ci[WS(cs, 13)] = KP951056516 * (SIMD_FMADD(KP910592997, T29, T28));
            Ci[WS(cs, 7)] =
                -(KP951056516 * (SIMD_FNMADD(KP910592997, T29, T28)));
            T26            = SIMD_FNMADD(KP500000000, T25, T1Y);
            Cr[WS(cs, 3)]  = T1Y + T25;
            Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1V, T1U));
            Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1V, T1U));
            T1S            = SIMD_FNMADD(KP500000000, T1R, T1O);
            Cr[WS(cs, 6)]  = T1O + T1R;
            Ci[WS(cs, 1)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1N, T1M));
            Ci[WS(cs, 11)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1N, T1M));
            T1K            = SIMD_FNMADD(KP500000000, T1J, T1f);
            Cr[WS(cs, 9)]  = T1f + T1J;
            Cr[WS(cs, 8)]  = SIMD_FMADD(KP823639103, T2h, T2g);
            Cr[WS(cs, 2)]  = SIMD_FNMADD(KP823639103, T2h, T2g);
            Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T27, T26);
            Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T27, T26);
            Cr[WS(cs, 14)] = SIMD_FMADD(KP823639103, T1T, T1S);
            Cr[WS(cs, 4)]  = SIMD_FNMADD(KP823639103, T1T, T1S);
            Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1L, T1K);
            Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1L, T1K);
        }
    }
}

template <>
struct r2cf_traits<30, 30>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 172;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 132;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 30 -first-k 30 -name r2cf
 * -standalone */

/*
 * This function contains 158 FP additions, 70 FP multiplications,
 * (or, 102 additions, 14 multiplications, 56 fused multiply/add),
 * 132 stack variables, 8 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 30 && ProvidedElements == 30>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP823639103, +0.823639103546331925877420039278190003029660514);
    DK(KP910592997, +0.910592997310029334643087372129977886038870291);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP951056516, +0.951056516295153572116439333379382143405698634);
    DK(KP559016994, +0.559016994374947424102293417182819058860154590);
    DK(KP250000000, +0.250000000000000000000000000000000000000000000);
    DK(KP618033988, +0.618033988749894848204586834365638117720309180);
    {
        SIMD_FLOAT T19, T1g, T2a, T1O, T1W, T1S, T1P, T1T, T1X, T29, T1M, T1Q,
            T1h, T1R, T1U;
        SIMD_FLOAT T1Y, T1N, T1V;
        {
            SIMD_FLOAT T1i, T1p, T1f, TC, TQ, T18, TP, TJ, T1q, Ta, T2s, T1e,
                T1x, T1E, T17;
            SIMD_FLOAT T2r, Tj, TS, T7, T1n, T1l, Td, T1r, Tk, Tn, To, Tq, Ti,
                T1y, Tr;
            {
                SIMD_FLOAT T1a, Tz, TA, Tw, Tx, T13, TG, TH, TD, TE, T3, T1j,
                    Tb, T16, T6;
                SIMD_FLOAT T1k, Tc, T1, T2, TB, T1c, Ty, T1b, T4, T15, TI, T14,
                    TF, T5, T8;
                SIMD_FLOAT T9, T1d, Tg, Th;
                T1a = R0[WS(rs, 15)];
                Tz  = R0[WS(rs, 27)];
                TA  = R0[WS(rs, 3)];
                Tw  = R0[WS(rs, 21)];
                Tx  = R0[WS(rs, 9)];
                T13 = R0[0];
                TG  = R0[WS(rs, 12)];
                TH  = R0[WS(rs, 18)];
                TD  = R0[WS(rs, 6)];
                TE  = R0[WS(rs, 24)];
                T1i = R0[WS(rs, 10)];
                T1p = R0[WS(rs, 25)];
                T1  = R0[WS(rs, 16)];
                T2  = R0[WS(rs, 4)];
                TB  = Tz - TA;
                T1c = Tz + TA;
                Ty  = Tw - Tx;
                T1b = Tw + Tx;
                T4  = R0[WS(rs, 22)];
                T15 = TG + TH;
                TI  = TG - TH;
                T14 = TD + TE;
                TF  = TD - TE;
                T5  = R0[WS(rs, 28)];
                T8  = R0[WS(rs, 19)];
                T3  = T1 - T2;
                T1j = T1 + T2;
                T9  = R0[WS(rs, 1)];
                T1f = T1b - T1c;
                T1d = T1b + T1c;
                TC  = SIMD_FMADD(KP618033988, TB, Ty);
                TQ  = SIMD_FNMADD(KP618033988, Ty, TB);
                Tb  = R0[WS(rs, 7)];
                T16 = T14 + T15;
                T18 = T14 - T15;
                TP  = SIMD_FNMADD(KP618033988, TF, TI);
                TJ  = SIMD_FMADD(KP618033988, TI, TF);
                T6  = T4 - T5;
                T1k = T4 + T5;
                T1q = T9 + T8;
                Ta  = T8 - T9;
                T2s = T1a + T1d;
                T1e = SIMD_FNMADD(KP250000000, T1d, T1a);
                Tc  = R0[WS(rs, 13)];
                T1x = R0[WS(rs, 20)];
                T1E = R0[WS(rs, 5)];
                T17 = SIMD_FNMADD(KP250000000, T16, T13);
                T2r = T13 + T16;
                Tg  = R0[WS(rs, 26)];
                Th  = R0[WS(rs, 14)];
                Tj  = R0[WS(rs, 2)];
                TS  = SIMD_FNMADD(KP618033988, T3, T6);
                T7  = SIMD_FMADD(KP618033988, T6, T3);
                T1n = T1j - T1k;
                T1l = T1j + T1k;
                Td  = Tb - Tc;
                T1r = Tb + Tc;
                Tk  = R0[WS(rs, 8)];
                Tn  = R0[WS(rs, 29)];
                To  = R0[WS(rs, 11)];
                Tq  = R0[WS(rs, 17)];
                Ti  = Tg - Th;
                T1y = Tg + Th;
                Tr  = R0[WS(rs, 23)];
            }
            {
                SIMD_FLOAT T1o, T22, TU, T10, Tf, TL, Tm, TV, T1A, T1C, Tt, TW,
                    T1H, T1J, T2v;
                SIMD_FLOAT T2t, T1v, T23, T2n, T2w, T2l, T1u, T2m, T1t, T1m, Te,
                    TT, T1s, T1z, Tl;
                SIMD_FLOAT T1F, Tp, T1G, Ts;
                T2l = T1i + T1l;
                T1m = SIMD_FNMADD(KP250000000, T1l, T1i);
                Te  = SIMD_FNMADD(KP618033988, Td, Ta);
                TT  = SIMD_FMADD(KP618033988, Ta, Td);
                T1s = T1q + T1r;
                T1u = T1q - T1r;
                T1z = Tj + Tk;
                Tl  = Tj - Tk;
                T1F = To + Tn;
                Tp  = Tn - To;
                T1G = Tq + Tr;
                Ts  = Tq - Tr;
                T1o = SIMD_FMADD(KP559016994, T1n, T1m);
                T22 = SIMD_FNMADD(KP559016994, T1n, T1m);
                TU  = TS + TT;
                T10 = TT - TS;
                Tf  = T7 + Te;
                TL  = Te - T7;
                T2m = T1p + T1s;
                T1t = SIMD_FNMADD(KP250000000, T1s, T1p);
                Tm  = SIMD_FMADD(KP618033988, Tl, Ti);
                TV  = SIMD_FNMADD(KP618033988, Ti, Tl);
                T1A = T1y + T1z;
                T1C = T1y - T1z;
                Tt  = SIMD_FNMADD(KP618033988, Ts, Tp);
                TW  = SIMD_FMADD(KP618033988, Tp, Ts);
                T1H = T1F + T1G;
                T1J = T1F - T1G;
                T2v = T2r + T2s;
                T2t = T2r - T2s;
                T1v = SIMD_FMADD(KP559016994, T1u, T1t);
                T23 = SIMD_FNMADD(KP559016994, T1u, T1t);
                T2n = T2l - T2m;
                T2w = T2l + T2m;
                {
                    SIMD_FLOAT TZ, TR, TM, Tu, T2e, T24, T25, T1D, T12, TY, T2k,
                        T26, T1K, T2x, T2q;
                    SIMD_FLOAT T21, T2h, T1B, T2o, T11, TX, T1I, T2p, T1Z, T20,
                        Tv, TN, TK, TO, T2b;
                    SIMD_FLOAT T2d, T2f, T27, T2y, T2u, T1w, T2i, T2g, T2c, T28,
                        T1L, T2j;
                    TZ             = TQ - TP;
                    TR             = TP + TQ;
                    T1B            = SIMD_FNMADD(KP250000000, T1A, T1x);
                    T2o            = T1x + T1A;
                    T11            = TW - TV;
                    TX             = TV + TW;
                    TM             = Tt - Tm;
                    Tu             = Tm + Tt;
                    T1I            = SIMD_FNMADD(KP250000000, T1H, T1E);
                    T2p            = T1E + T1H;
                    T2e            = T22 + T23;
                    T24            = T22 - T23;
                    T1Z            = SIMD_FNMADD(KP559016994, T18, T17);
                    T19            = SIMD_FMADD(KP559016994, T18, T17);
                    T1g            = SIMD_FMADD(KP559016994, T1f, T1e);
                    T20            = SIMD_FNMADD(KP559016994, T1f, T1e);
                    T25            = SIMD_FNMADD(KP559016994, T1C, T1B);
                    T1D            = SIMD_FMADD(KP559016994, T1C, T1B);
                    T12            = T10 + T11;
                    T2a            = T11 - T10;
                    TY             = TU + TX;
                    T2k            = TU - TX;
                    T26            = SIMD_FNMADD(KP559016994, T1J, T1I);
                    T1K            = SIMD_FMADD(KP559016994, T1J, T1I);
                    T2x            = T2o + T2p;
                    T2q            = T2o - T2p;
                    T21            = T1Z - T20;
                    T2h            = T1Z + T20;
                    Tv             = Tf + Tu;
                    T1O            = Tu - Tf;
                    Ci[WS(cs, 3)]  = KP951056516 * (TZ + T12);
                    T2b            = SIMD_FNMADD(KP500000000, T12, TZ);
                    Ci[WS(cs, 12)] = KP951056516 * (TR + TY);
                    T2d            = SIMD_FNMADD(KP500000000, TY, TR);
                    T2f            = T25 + T26;
                    T27            = T25 - T26;
                    Ci[WS(cs, 10)] = KP866025403 * (T2x - T2w);
                    T2y            = T2w + T2x;
                    Ci[WS(cs, 5)]  = KP866025403 * (T2n - T2q);
                    T2u            = T2n + T2q;
                    T1W            = TM - TL;
                    TN             = TL + TM;
                    TK             = TC - TJ;
                    TO             = TJ + TC;
                    T1S            = T1o + T1v;
                    T1w            = T1o - T1v;
                    T2i            = T2e + T2f;
                    T2g            = T2e - T2f;
                    T2c            = T27 - T24;
                    T28            = T24 + T27;
                    Cr[0]          = T2v + T2y;
                    Cr[WS(cs, 10)] = SIMD_FNMADD(KP500000000, T2y, T2v);
                    Cr[WS(cs, 15)] = T2t + T2u;
                    Cr[WS(cs, 5)]  = SIMD_FNMADD(KP500000000, T2u, T2t);
                    T1P            = SIMD_FMADD(KP500000000, Tv, TK);
                    T1T            = T1D + T1K;
                    T1L            = T1D - T1K;
                    T1X            = SIMD_FMADD(KP500000000, TN, TO);
                    T2j            = SIMD_FNMADD(KP500000000, T2i, T2h);
                    Cr[WS(cs, 12)] = T2h + T2i;
                    Ci[WS(cs, 2)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T2g, T2d));
                    Ci[WS(cs, 8)] =
                        -(KP951056516 * (SIMD_FNMADD(KP910592997, T2g, T2d)));
                    Ci[WS(cs, 13)] =
                        KP951056516 * (SIMD_FMADD(KP910592997, T2c, T2b));
                    Ci[WS(cs, 7)] =
                        -(KP951056516 * (SIMD_FNMADD(KP910592997, T2c, T2b)));
                    T29           = SIMD_FNMADD(KP500000000, T28, T21);
                    Cr[WS(cs, 3)] = T21 + T28;
                    T1M           = T1w + T1L;
                    T1Q           = T1L - T1w;
                    Cr[WS(cs, 8)] = SIMD_FMADD(KP823639103, T2k, T2j);
                    Cr[WS(cs, 2)] = SIMD_FNMADD(KP823639103, T2k, T2j);
                    Ci[WS(cs, 9)] = KP951056516 * (Tv - TK);
                    Ci[WS(cs, 6)] = KP951056516 * (TN - TO);
                }
            }
        }
        Cr[WS(cs, 13)] = SIMD_FNMADD(KP823639103, T2a, T29);
        Cr[WS(cs, 7)]  = SIMD_FMADD(KP823639103, T2a, T29);
        T1h            = T19 - T1g;
        T1R            = T19 + T1g;
        Ci[WS(cs, 1)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1Q, T1P));
        Ci[WS(cs, 11)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1Q, T1P));
        T1U            = T1S + T1T;
        T1Y            = T1T - T1S;
        T1N            = SIMD_FNMADD(KP500000000, T1M, T1h);
        Cr[WS(cs, 9)]  = T1h + T1M;
        Ci[WS(cs, 14)] = KP951056516 * (SIMD_FNMADD(KP910592997, T1Y, T1X));
        Ci[WS(cs, 4)]  = KP951056516 * (SIMD_FMADD(KP910592997, T1Y, T1X));
        T1V            = SIMD_FNMADD(KP500000000, T1U, T1R);
        Cr[WS(cs, 6)]  = T1R + T1U;
        Cr[WS(cs, 11)] = SIMD_FNMADD(KP823639103, T1O, T1N);
        Cr[WS(cs, 1)]  = SIMD_FMADD(KP823639103, T1O, T1N);
        Cr[WS(cs, 14)] = SIMD_FNMADD(KP823639103, T1W, T1V);
        Cr[WS(cs, 4)]  = SIMD_FMADD(KP823639103, T1W, T1V);
    }
}
