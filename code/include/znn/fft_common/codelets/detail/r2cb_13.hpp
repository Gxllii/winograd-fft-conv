//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cb_traits<13, 0>
{
    static constexpr long_t flops           = 134;
    static constexpr long_t operations      = 76;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 102;
    static constexpr long_t constants       = 26;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 0 -name
 * r2cb -standalone */

/*
 * This function contains 76 FP additions, 58 FP multiplications,
 * (or, 18 additions, 0 multiplications, 58 fused multiply/add),
 * 102 stack variables, 26 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 0>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP2_000000000, +2.000000000000000000000000000000000000000000000);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ts, Tt, Tu, TB, Tx, Ty, T1, T7, T8, T9, T2, T3, T4, TE, Tv;
        Ts = Ci[WS(cs, 5)];
        Tt = Ci[WS(cs, 2)];
        Tu = Ci[WS(cs, 6)];
        TB = Ci[WS(cs, 1)];
        Tx = Ci[WS(cs, 3)];
        Ty = Ci[WS(cs, 4)];
        T1 = Cr[0];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        TE = Tu - Tt;
        Tv = Tt + Tu;
        {
            SIMD_FLOAT Tz, TC, Tf, Ta, Te, T5, TL, Tw, TM, TD, Ti, Tb, Tn, Tg,
                Th;
            SIMD_FLOAT T6, TH, TA, T16, TN, TI, TF, Tm, Tj, Tc, Tp, TV, TJ, TU,
                TG;
            Tz  = Tx + Ty;
            TC  = Tx - Ty;
            Tf  = T8 - T9;
            Ta  = T8 + T9;
            Te  = T3 - T4;
            T5  = T3 + T4;
            TL  = Ts + Tv;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
            TM  = TB + TC;
            TD  = SIMD_FNMADD(KP500000000, TC, TB);
            Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
            Tb  = T7 + Ta;
            Tn  = Te - Tf;
            Tg  = Te + Tf;
            Th  = SIMD_FNMADD(KP500000000, T5, T2);
            T6  = T2 + T5;
            TH  = SIMD_FNMADD(KP866025403, Tz, Tw);
            TA  = SIMD_FMADD(KP866025403, Tz, Tw);
            T16 = SIMD_FNMADD(KP302775637, TL, TM);
            TN  = SIMD_FMADD(KP302775637, TM, TL);
            TI  = SIMD_FNMADD(KP866025403, TE, TD);
            TF  = SIMD_FMADD(KP866025403, TE, TD);
            Tm  = Th + Ti;
            Tj  = Th - Ti;
            Tc  = T6 + Tb;
            Tp  = T6 - Tb;
            TV  = SIMD_FMADD(KP612264650, TH, TI);
            TJ  = SIMD_FNMADD(KP612264650, TI, TH);
            TU  = SIMD_FMADD(KP038632954, TA, TF);
            TG  = SIMD_FNMADD(KP038632954, TF, TA);
            {
                SIMD_FLOAT TY, To, TX, Tk, Td, T17, TW, TK, T14, Tq, TQ, T19,
                    TZ, Tl, TP;
                SIMD_FLOAT T1e, T18, TS, TO, T12, T10, T1d, Tr, T13, TR, T1c,
                    T1a, T1b, T15, T11;
                SIMD_FLOAT TT;
                TY             = SIMD_FMADD(KP686558370, Tm, Tn);
                To             = SIMD_FNMADD(KP514918778, Tn, Tm);
                TX             = SIMD_FNMADD(KP226109445, Tg, Tj);
                Tk             = SIMD_FMADD(KP301479260, Tj, Tg);
                R0[0]          = SIMD_FMADD(KP2_000000000, Tc, T1);
                Td             = SIMD_FNMADD(KP166666666, Tc, T1);
                T17            = SIMD_FNMADD(KP853480001, TV, TU);
                TW             = SIMD_FMADD(KP853480001, TV, TU);
                TK             = SIMD_FNMADD(KP853480001, TJ, TG);
                T14            = SIMD_FMADD(KP853480001, TJ, TG);
                Tq             = SIMD_FMADD(KP581704778, Tp, To);
                TQ             = SIMD_FNMADD(KP859542535, To, Tp);
                T19            = SIMD_FMADD(KP769338817, TY, TX);
                TZ             = SIMD_FNMADD(KP769338817, TY, TX);
                Tl             = SIMD_FMADD(KP1_007074065, Tk, Td);
                TP             = SIMD_FNMADD(KP503537032, Tk, Td);
                T1e            = SIMD_FMADD(KP957805992, T16, T17);
                T18            = SIMD_FNMADD(KP522026385, T17, T16);
                TS             = SIMD_FNMADD(KP522026385, TK, TN);
                TO             = SIMD_FMADD(KP957805992, TN, TK);
                T12            = SIMD_FMADD(KP968287244, TZ, TW);
                T10            = SIMD_FNMADD(KP968287244, TZ, TW);
                T1d            = SIMD_FNMADD(KP1_033041561, Tq, Tl);
                Tr             = SIMD_FMADD(KP1_033041561, Tq, Tl);
                T13            = SIMD_FNMADD(KP600925212, TQ, TP);
                TR             = SIMD_FMADD(KP600925212, TQ, TP);
                T1c            = SIMD_FMADD(KP875502302, T19, T18);
                T1a            = SIMD_FNMADD(KP875502302, T19, T18);
                R0[WS(rs, 8)]  = SIMD_FMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 12)] = SIMD_FMADD(KP1_200954543, TO, Tr);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_200954543, TO, Tr);
                T1b            = SIMD_FNMADD(KP1_040057143, T14, T13);
                T15            = SIMD_FMADD(KP1_040057143, T14, T13);
                T11            = SIMD_FMADD(KP1_150281458, TS, TR);
                TT             = SIMD_FNMADD(KP1_150281458, TS, TR);
                R0[WS(rs, 11)] = SIMD_FMADD(KP1_150281458, T1c, T1b);
                R0[WS(rs, 6)]  = SIMD_FNMADD(KP1_150281458, T1c, T1b);
                R0[WS(rs, 7)]  = SIMD_FMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 10)] = SIMD_FMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 9)]  = SIMD_FMADD(KP1_040057143, T10, TT);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_040057143, T10, TT);
            }
        }
    }
}

template <>
struct r2cb_traits<13, 1>
{
    static constexpr long_t flops           = 132;
    static constexpr long_t operations      = 75;
    static constexpr long_t memory_accesses = 25;
    static constexpr long_t stack_vars      = 101;
    static constexpr long_t constants       = 25;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 1 -name
 * r2cb -standalone */

/*
 * This function contains 75 FP additions, 57 FP multiplications,
 * (or, 18 additions, 0 multiplications, 57 fused multiply/add),
 * 101 stack variables, 25 constants, and 25 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 1>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ts, Tt, Tu, TB, Tx, Ty, T1, T7, T8, T9, T2, T3, T4, TE, Tv;
        Ts = Ci[WS(cs, 5)];
        Tt = Ci[WS(cs, 2)];
        Tu = Ci[WS(cs, 6)];
        TB = Ci[WS(cs, 1)];
        Tx = Ci[WS(cs, 3)];
        Ty = Ci[WS(cs, 4)];
        T1 = Cr[0];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        TE = Tu - Tt;
        Tv = Tt + Tu;
        {
            SIMD_FLOAT Tz, TC, Tf, Ta, Te, T5, TL, Tw, TM, TD, Ti, Tb, Tn, Tg,
                Th;
            SIMD_FLOAT T6, TH, TA, T16, TN, TI, TF, Tm, Tj, Tc, Tp, TV, TJ, TU,
                TG;
            Tz  = Tx + Ty;
            TC  = Tx - Ty;
            Tf  = T8 - T9;
            Ta  = T8 + T9;
            Te  = T3 - T4;
            T5  = T3 + T4;
            TL  = Ts + Tv;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
            TM  = TB + TC;
            TD  = SIMD_FNMADD(KP500000000, TC, TB);
            Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
            Tb  = T7 + Ta;
            Tn  = Te - Tf;
            Tg  = Te + Tf;
            Th  = SIMD_FNMADD(KP500000000, T5, T2);
            T6  = T2 + T5;
            TH  = SIMD_FNMADD(KP866025403, Tz, Tw);
            TA  = SIMD_FMADD(KP866025403, Tz, Tw);
            T16 = SIMD_FNMADD(KP302775637, TL, TM);
            TN  = SIMD_FMADD(KP302775637, TM, TL);
            TI  = SIMD_FNMADD(KP866025403, TE, TD);
            TF  = SIMD_FMADD(KP866025403, TE, TD);
            Tm  = Th + Ti;
            Tj  = Th - Ti;
            Tc  = T6 + Tb;
            Tp  = T6 - Tb;
            TV  = SIMD_FMADD(KP612264650, TH, TI);
            TJ  = SIMD_FNMADD(KP612264650, TI, TH);
            TU  = SIMD_FMADD(KP038632954, TA, TF);
            TG  = SIMD_FNMADD(KP038632954, TF, TA);
            {
                SIMD_FLOAT TY, To, TX, Tk, Td, TW, T17, T14, TK, TQ, Tq, TZ,
                    T19, TP, Tl;
                SIMD_FLOAT T18, T1e, TO, TS, T10, T12, Tr, T1d, TR, T13, T1a,
                    T1c, T15, T1b, TT;
                SIMD_FLOAT T11;
                TY             = SIMD_FMADD(KP686558370, Tm, Tn);
                To             = SIMD_FNMADD(KP514918778, Tn, Tm);
                TX             = SIMD_FNMADD(KP226109445, Tg, Tj);
                Tk             = SIMD_FMADD(KP301479260, Tj, Tg);
                Td             = SIMD_FNMADD(KP166666666, Tc, T1);
                TW             = SIMD_FMADD(KP853480001, TV, TU);
                T17            = SIMD_FNMADD(KP853480001, TV, TU);
                T14            = SIMD_FMADD(KP853480001, TJ, TG);
                TK             = SIMD_FNMADD(KP853480001, TJ, TG);
                TQ             = SIMD_FNMADD(KP859542535, To, Tp);
                Tq             = SIMD_FMADD(KP581704778, Tp, To);
                TZ             = SIMD_FNMADD(KP769338817, TY, TX);
                T19            = SIMD_FMADD(KP769338817, TY, TX);
                TP             = SIMD_FNMADD(KP503537032, Tk, Td);
                Tl             = SIMD_FMADD(KP1_007074065, Tk, Td);
                T18            = SIMD_FNMADD(KP522026385, T17, T16);
                T1e            = SIMD_FMADD(KP957805992, T16, T17);
                TO             = SIMD_FMADD(KP957805992, TN, TK);
                TS             = SIMD_FNMADD(KP522026385, TK, TN);
                T10            = SIMD_FNMADD(KP968287244, TZ, TW);
                T12            = SIMD_FMADD(KP968287244, TZ, TW);
                Tr             = SIMD_FMADD(KP1_033041561, Tq, Tl);
                T1d            = SIMD_FNMADD(KP1_033041561, Tq, Tl);
                TR             = SIMD_FMADD(KP600925212, TQ, TP);
                T13            = SIMD_FNMADD(KP600925212, TQ, TP);
                T1a            = SIMD_FNMADD(KP875502302, T19, T18);
                T1c            = SIMD_FMADD(KP875502302, T19, T18);
                R0[WS(rs, 7)]  = SIMD_FMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 11)] = SIMD_FMADD(KP1_200954543, TO, Tr);
                R0[0]          = SIMD_FNMADD(KP1_200954543, TO, Tr);
                T15            = SIMD_FMADD(KP1_040057143, T14, T13);
                T1b            = SIMD_FNMADD(KP1_040057143, T14, T13);
                TT             = SIMD_FNMADD(KP1_150281458, TS, TR);
                T11            = SIMD_FMADD(KP1_150281458, TS, TR);
                R0[WS(rs, 10)] = SIMD_FMADD(KP1_150281458, T1c, T1b);
                R0[WS(rs, 5)]  = SIMD_FNMADD(KP1_150281458, T1c, T1b);
                R0[WS(rs, 6)]  = SIMD_FMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 9)]  = SIMD_FMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 8)]  = SIMD_FMADD(KP1_040057143, T10, TT);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_040057143, T10, TT);
            }
        }
    }
}

template <>
struct r2cb_traits<13, 2>
{
    static constexpr long_t flops           = 130;
    static constexpr long_t operations      = 74;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 102;
    static constexpr long_t constants       = 26;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 2 -name
 * r2cb -standalone */

/*
 * This function contains 74 FP additions, 56 FP multiplications,
 * (or, 18 additions, 0 multiplications, 56 fused multiply/add),
 * 102 stack variables, 26 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 2>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ts, Tt, Tu, TB, Tx, Ty, T1, T7, T8, T9, T2, T3, T4, TE, Tv;
        Ts = Ci[WS(cs, 5)];
        Tt = Ci[WS(cs, 2)];
        Tu = Ci[WS(cs, 6)];
        TB = Ci[WS(cs, 1)];
        Tx = Ci[WS(cs, 3)];
        Ty = Ci[WS(cs, 4)];
        T1 = Cr[0];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        TE = Tu - Tt;
        Tv = Tt + Tu;
        {
            SIMD_FLOAT Tz, TC, Tf, Ta, Te, T5, TN, Tw, TM, TD, Ti, Tb, To, Tg,
                Th;
            SIMD_FLOAT T6, TH, TA, T14, TO, TI, TF, Tn, Tj, Tc, Tm, TQ, TJ, TP,
                TG;
            Tz  = Tx + Ty;
            TC  = Tx - Ty;
            Tf  = T8 - T9;
            Ta  = T8 + T9;
            Te  = T3 - T4;
            T5  = T3 + T4;
            TN  = Ts + Tv;
            Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
            TM  = TC + TB;
            TD  = SIMD_FNMADD(KP500000000, TC, TB);
            Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
            Tb  = T7 + Ta;
            To  = Te - Tf;
            Tg  = Te + Tf;
            Th  = SIMD_FNMADD(KP500000000, T5, T2);
            T6  = T2 + T5;
            TH  = SIMD_FNMADD(KP866025403, Tz, Tw);
            TA  = SIMD_FMADD(KP866025403, Tz, Tw);
            T14 = SIMD_FMADD(KP302775637, TM, TN);
            TO  = SIMD_FNMADD(KP302775637, TN, TM);
            TI  = SIMD_FNMADD(KP866025403, TE, TD);
            TF  = SIMD_FMADD(KP866025403, TE, TD);
            Tn  = Th + Ti;
            Tj  = Th - Ti;
            Tc  = T6 + Tb;
            Tm  = T6 - Tb;
            TQ  = SIMD_FMADD(KP612264650, TH, TI);
            TJ  = SIMD_FNMADD(KP612264650, TI, TH);
            TP  = SIMD_FMADD(KP038632954, TA, TF);
            TG  = SIMD_FNMADD(KP038632954, TF, TA);
            {
                SIMD_FLOAT TU, Tp, TT, Tk, Td, T18, TR, TK, T15, Tq, T10, TV,
                    T19, Tl, TZ;
                SIMD_FLOAT TS, T12, T16, T1d, T1c, T1a, T11, T13, Tr, TW, TY,
                    T1e, T1b, T17, TX;
                SIMD_FLOAT TL;
                TU             = SIMD_FMADD(KP686558370, Tn, To);
                Tp             = SIMD_FNMADD(KP514918778, To, Tn);
                TT             = SIMD_FNMADD(KP226109445, Tg, Tj);
                Tk             = SIMD_FMADD(KP301479260, Tj, Tg);
                Td             = SIMD_FNMADD(KP166666666, Tc, T1);
                T18            = SIMD_FMADD(KP853480001, TQ, TP);
                TR             = SIMD_FNMADD(KP853480001, TQ, TP);
                TK             = SIMD_FMADD(KP853480001, TJ, TG);
                T15            = SIMD_FNMADD(KP853480001, TJ, TG);
                Tq             = SIMD_FNMADD(KP859542535, Tp, Tm);
                T10            = SIMD_FMADD(KP581704778, Tm, Tp);
                TV             = SIMD_FMADD(KP769338817, TU, TT);
                T19            = SIMD_FNMADD(KP769338817, TU, TT);
                Tl             = SIMD_FNMADD(KP503537032, Tk, Td);
                TZ             = SIMD_FMADD(KP1_007074065, Tk, Td);
                TS             = SIMD_FNMADD(KP522026385, TR, TO);
                T12            = SIMD_FMADD(KP957805992, TO, TR);
                T16            = SIMD_FNMADD(KP522026385, T15, T14);
                T1d            = SIMD_FMADD(KP898077208, T10, T14);
                T1c            = SIMD_FMADD(KP968287244, T19, T18);
                T1a            = SIMD_FNMADD(KP968287244, T19, T18);
                T11            = SIMD_FNMADD(KP1_033041561, T10, TZ);
                T13            = SIMD_FMADD(KP600925212, Tq, Tl);
                Tr             = SIMD_FNMADD(KP600925212, Tq, Tl);
                TW             = SIMD_FNMADD(KP875502302, TV, TS);
                TY             = SIMD_FMADD(KP875502302, TV, TS);
                T1e            = SIMD_FMADD(KP957805992, T1d, T15);
                R0[WS(rs, 6)]  = SIMD_FMADD(KP1_200954543, T12, T11);
                R0[WS(rs, 3)]  = SIMD_FNMADD(KP1_200954543, T12, T11);
                T1b            = SIMD_FMADD(KP1_150281458, T16, T13);
                T17            = SIMD_FNMADD(KP1_150281458, T16, T13);
                TX             = SIMD_FNMADD(KP1_040057143, TK, Tr);
                TL             = SIMD_FMADD(KP1_040057143, TK, Tr);
                R0[WS(rs, 10)] = SIMD_FMADD(KP1_200954543, T1e, TZ);
                R0[WS(rs, 7)]  = SIMD_FMADD(KP1_040057143, T1a, T17);
                R0[WS(rs, 1)]  = SIMD_FNMADD(KP1_040057143, T1a, T17);
                R0[WS(rs, 8)]  = SIMD_FMADD(KP1_040057143, T1c, T1b);
                R0[WS(rs, 2)]  = SIMD_FNMADD(KP1_040057143, T1c, T1b);
                R0[WS(rs, 5)]  = SIMD_FMADD(KP1_150281458, TW, TL);
                R0[0]          = SIMD_FNMADD(KP1_150281458, TW, TL);
                R0[WS(rs, 9)]  = SIMD_FMADD(KP1_150281458, TY, TX);
                R0[WS(rs, 4)]  = SIMD_FNMADD(KP1_150281458, TY, TX);
            }
        }
    }
}

template <>
struct r2cb_traits<13, 3>
{
    static constexpr long_t flops           = 128;
    static constexpr long_t operations      = 73;
    static constexpr long_t memory_accesses = 23;
    static constexpr long_t stack_vars      = 103;
    static constexpr long_t constants       = 27;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 3 -name
 * r2cb -standalone */

/*
 * This function contains 73 FP additions, 55 FP multiplications,
 * (or, 18 additions, 0 multiplications, 55 fused multiply/add),
 * 103 stack variables, 27 constants, and 23 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 3>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tm, Tn, To, Tv, Tr, Ts, T1, T7, T8, T9, T2, T3, T4, Ty, Tp;
        Tm = Ci[WS(cs, 5)];
        Tn = Ci[WS(cs, 2)];
        To = Ci[WS(cs, 6)];
        Tv = Ci[WS(cs, 1)];
        Tr = Ci[WS(cs, 3)];
        Ts = Ci[WS(cs, 4)];
        T1 = Cr[0];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        Ty = To - Tn;
        Tp = Tn + To;
        {
            SIMD_FLOAT Tt, Tw, Tf, Ta, Te, T5, TF, Tq, TG, Tx, Ti, Tb, TJ, Tg,
                Th;
            SIMD_FLOAT T6, TB, Tu, T16, TH, TC, Tz, TI, Tj, Tc, TL, TV, TD, TU,
                TA;
            Tt  = Tr + Ts;
            Tw  = Tr - Ts;
            Tf  = T8 - T9;
            Ta  = T8 + T9;
            Te  = T3 - T4;
            T5  = T3 + T4;
            TF  = Tm + Tp;
            Tq  = SIMD_FNMADD(KP500000000, Tp, Tm);
            TG  = Tw + Tv;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tv);
            Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
            Tb  = T7 + Ta;
            TJ  = Te - Tf;
            Tg  = Te + Tf;
            Th  = SIMD_FNMADD(KP500000000, T5, T2);
            T6  = T2 + T5;
            TB  = SIMD_FNMADD(KP866025403, Tt, Tq);
            Tu  = SIMD_FMADD(KP866025403, Tt, Tq);
            T16 = SIMD_FNMADD(KP302775637, TF, TG);
            TH  = SIMD_FMADD(KP302775637, TG, TF);
            TC  = SIMD_FNMADD(KP866025403, Ty, Tx);
            Tz  = SIMD_FMADD(KP866025403, Ty, Tx);
            TI  = Th + Ti;
            Tj  = Th - Ti;
            Tc  = T6 + Tb;
            TL  = T6 - Tb;
            TV  = SIMD_FMADD(KP612264650, TB, TC);
            TD  = SIMD_FNMADD(KP612264650, TC, TB);
            TU  = SIMD_FMADD(KP038632954, Tu, Tz);
            TA  = SIMD_FNMADD(KP038632954, Tz, Tu);
            {
                SIMD_FLOAT TY, TK, TX, Tk, Td, T17, TW, TE, T14, TQ, TM, T19,
                    TZ, TP, Tl;
                SIMD_FLOAT T18, T1e, TS, TN, T10, T12, T1b, T1d, TR, T13, T1a,
                    TO, T1c, T15, T11;
                SIMD_FLOAT TT;
                TY            = SIMD_FMADD(KP686558370, TI, TJ);
                TK            = SIMD_FNMADD(KP514918778, TJ, TI);
                TX            = SIMD_FNMADD(KP226109445, Tg, Tj);
                Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
                Td            = SIMD_FNMADD(KP166666666, Tc, T1);
                T17           = SIMD_FNMADD(KP853480001, TV, TU);
                TW            = SIMD_FMADD(KP853480001, TV, TU);
                TE            = SIMD_FNMADD(KP853480001, TD, TA);
                T14           = SIMD_FMADD(KP853480001, TD, TA);
                TQ            = SIMD_FNMADD(KP859542535, TK, TL);
                TM            = SIMD_FMADD(KP581704778, TL, TK);
                T19           = SIMD_FMADD(KP769338817, TY, TX);
                TZ            = SIMD_FNMADD(KP769338817, TY, TX);
                TP            = SIMD_FNMADD(KP503537032, Tk, Td);
                Tl            = SIMD_FMADD(KP1_007074065, Tk, Td);
                T18           = SIMD_FNMADD(KP522026385, T17, T16);
                T1e           = SIMD_FMADD(KP957805992, T16, T17);
                TS            = SIMD_FNMADD(KP522026385, TE, TH);
                TN            = SIMD_FMADD(KP898077208, TM, TH);
                T10           = SIMD_FNMADD(KP968287244, TZ, TW);
                T12           = SIMD_FMADD(KP968287244, TZ, TW);
                T1b           = SIMD_FNMADD(KP968287244, T19, T14);
                T1d           = SIMD_FNMADD(KP1_033041561, TM, Tl);
                TR            = SIMD_FMADD(KP600925212, TQ, TP);
                T13           = SIMD_FNMADD(KP600925212, TQ, TP);
                T1a           = SIMD_FMADD(KP875502302, T19, T18);
                TO            = SIMD_FMADD(KP957805992, TN, TE);
                T1c           = SIMD_FMADD(KP904176221, T1b, T18);
                R0[WS(rs, 5)] = SIMD_FMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 2)] = SIMD_FNMADD(KP1_200954543, T1e, T1d);
                T15           = SIMD_FNMADD(KP1_040057143, T14, T13);
                T11           = SIMD_FMADD(KP1_150281458, TS, TR);
                TT            = SIMD_FNMADD(KP1_150281458, TS, TR);
                R0[WS(rs, 9)] = SIMD_FMADD(KP1_200954543, TO, Tl);
                R0[WS(rs, 4)] = SIMD_FMADD(KP1_150281458, T1c, T13);
                R0[WS(rs, 8)] = SIMD_FMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 3)] = SIMD_FNMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 6)] = SIMD_FMADD(KP1_040057143, T10, TT);
                R0[0]         = SIMD_FNMADD(KP1_040057143, T10, TT);
                R0[WS(rs, 7)] = SIMD_FMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 1)] = SIMD_FNMADD(KP1_040057143, T12, T11);
            }
        }
    }
}

template <>
struct r2cb_traits<13, 4>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 72;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 103;
    static constexpr long_t constants       = 27;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 4 -name
 * r2cb -standalone */

/*
 * This function contains 72 FP additions, 54 FP multiplications,
 * (or, 18 additions, 0 multiplications, 54 fused multiply/add),
 * 103 stack variables, 27 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 4>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tm, Tn, To, Tv, Tr, Ts, T1, T7, T8, T9, T2, T3, T4, Ty, Tp;
        Tm = Ci[WS(cs, 5)];
        Tn = Ci[WS(cs, 2)];
        To = Ci[WS(cs, 6)];
        Tv = Ci[WS(cs, 1)];
        Tr = Ci[WS(cs, 3)];
        Ts = Ci[WS(cs, 4)];
        T1 = Cr[0];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        Ty = To - Tn;
        Tp = Tn + To;
        {
            SIMD_FLOAT Tt, Tw, Tf, Ta, Te, T5, TF, Tq, TG, Tx, Ti, Tb, TJ, Tg,
                Th;
            SIMD_FLOAT T6, TB, Tu, T16, TH, TC, Tz, TI, Tj, Tc, TL, TY, TD, TX,
                TA;
            Tt  = Tr + Ts;
            Tw  = Tr - Ts;
            Tf  = T8 - T9;
            Ta  = T8 + T9;
            Te  = T3 - T4;
            T5  = T3 + T4;
            TF  = Tm + Tp;
            Tq  = SIMD_FNMADD(KP500000000, Tp, Tm);
            TG  = Tw + Tv;
            Tx  = SIMD_FNMADD(KP500000000, Tw, Tv);
            Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
            Tb  = T7 + Ta;
            TJ  = Te - Tf;
            Tg  = Te + Tf;
            Th  = SIMD_FNMADD(KP500000000, T5, T2);
            T6  = T2 + T5;
            TB  = SIMD_FNMADD(KP866025403, Tt, Tq);
            Tu  = SIMD_FMADD(KP866025403, Tt, Tq);
            T16 = SIMD_FNMADD(KP302775637, TF, TG);
            TH  = SIMD_FMADD(KP302775637, TG, TF);
            TC  = SIMD_FNMADD(KP866025403, Ty, Tx);
            Tz  = SIMD_FMADD(KP866025403, Ty, Tx);
            TI  = Th + Ti;
            Tj  = Th - Ti;
            Tc  = T6 + Tb;
            TL  = T6 - Tb;
            TY  = SIMD_FMADD(KP612264650, TB, TC);
            TD  = SIMD_FNMADD(KP612264650, TC, TB);
            TX  = SIMD_FMADD(KP038632954, Tu, Tz);
            TA  = SIMD_FNMADD(KP038632954, Tz, Tu);
            {
                SIMD_FLOAT TU, TK, TT, Tk, Td, T17, TZ, T14, TE, TQ, TM, T19,
                    TV, TP, Tl;
                SIMD_FLOAT T18, T1e, TS, TN, T12, T1b, T1d, T13, TR, T1a, TW,
                    TO, T1c, T15, T11;
                SIMD_FLOAT T10;
                TU            = SIMD_FMADD(KP686558370, TI, TJ);
                TK            = SIMD_FNMADD(KP514918778, TJ, TI);
                TT            = SIMD_FNMADD(KP226109445, Tg, Tj);
                Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
                Td            = SIMD_FNMADD(KP166666666, Tc, T1);
                T17           = SIMD_FNMADD(KP853480001, TY, TX);
                TZ            = SIMD_FMADD(KP853480001, TY, TX);
                T14           = SIMD_FMADD(KP853480001, TD, TA);
                TE            = SIMD_FNMADD(KP853480001, TD, TA);
                TQ            = SIMD_FNMADD(KP859542535, TK, TL);
                TM            = SIMD_FMADD(KP581704778, TL, TK);
                T19           = SIMD_FMADD(KP769338817, TU, TT);
                TV            = SIMD_FNMADD(KP769338817, TU, TT);
                TP            = SIMD_FNMADD(KP503537032, Tk, Td);
                Tl            = SIMD_FMADD(KP1_007074065, Tk, Td);
                T18           = SIMD_FNMADD(KP522026385, T17, T16);
                T1e           = SIMD_FMADD(KP957805992, T16, T17);
                TS            = SIMD_FNMADD(KP522026385, TE, TH);
                TN            = SIMD_FMADD(KP898077208, TM, TH);
                T12           = SIMD_FMADD(KP968287244, TV, TZ);
                T1b           = SIMD_FNMADD(KP968287244, T19, T14);
                T1d           = SIMD_FNMADD(KP1_033041561, TM, Tl);
                T13           = SIMD_FNMADD(KP600925212, TQ, TP);
                TR            = SIMD_FMADD(KP600925212, TQ, TP);
                T1a           = SIMD_FMADD(KP875502302, T19, T18);
                TW            = SIMD_FMADD(KP875502302, TV, TS);
                TO            = SIMD_FMADD(KP957805992, TN, TE);
                T1c           = SIMD_FMADD(KP904176221, T1b, T18);
                R0[WS(rs, 4)] = SIMD_FMADD(KP1_200954543, T1e, T1d);
                R0[WS(rs, 1)] = SIMD_FNMADD(KP1_200954543, T1e, T1d);
                T15           = SIMD_FNMADD(KP1_040057143, T14, T13);
                T11           = SIMD_FMADD(KP1_150281458, TS, TR);
                T10           = SIMD_FNMADD(KP904176221, TZ, TW);
                R0[WS(rs, 8)] = SIMD_FMADD(KP1_200954543, TO, Tl);
                R0[WS(rs, 3)] = SIMD_FMADD(KP1_150281458, T1c, T13);
                R0[WS(rs, 7)] = SIMD_FMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 2)] = SIMD_FNMADD(KP1_150281458, T1a, T15);
                R0[WS(rs, 6)] = SIMD_FMADD(KP1_040057143, T12, T11);
                R0[0]         = SIMD_FNMADD(KP1_040057143, T12, T11);
                R0[WS(rs, 5)] = SIMD_FNMADD(KP1_150281458, T10, TR);
            }
        }
    }
}

template <>
struct r2cb_traits<13, 5>
{
    static constexpr long_t flops           = 120;
    static constexpr long_t operations      = 69;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 103;
    static constexpr long_t constants       = 29;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 5 -name
 * r2cb -standalone */

/*
 * This function contains 69 FP additions, 51 FP multiplications,
 * (or, 18 additions, 0 multiplications, 51 fused multiply/add),
 * 103 stack variables, 29 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 5>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP1_033041561, +1.033041561246979445681802577138034271410067244);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP577780957, +0.577780957683374522786053194962428896227394785);
    DK(KP775028220, +0.775028220171938468306413342617313924344661103);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tm, Tn, To, Tv, Tr, Ts, T1, T7, T8, T9, T2, T3, T4, Ty, Tp;
        SIMD_FLOAT Tt, Tw, Tf, Ta, Te, T5, TF, Tq, TG, Tx, Ti, Tb, TJ, Tg, Th;
        SIMD_FLOAT T6, TB, Tu, T14, TH, TC, Tz, TI, Tj, Tc, TL;
        Tm  = Ci[WS(cs, 5)];
        Tn  = Ci[WS(cs, 2)];
        To  = Ci[WS(cs, 6)];
        Tv  = Ci[WS(cs, 1)];
        Tr  = Ci[WS(cs, 3)];
        Ts  = Ci[WS(cs, 4)];
        T1  = Cr[0];
        T7  = Cr[WS(cs, 5)];
        T8  = Cr[WS(cs, 2)];
        T9  = Cr[WS(cs, 6)];
        T2  = Cr[WS(cs, 1)];
        T3  = Cr[WS(cs, 3)];
        T4  = Cr[WS(cs, 4)];
        Ty  = To - Tn;
        Tp  = Tn + To;
        Tt  = Tr + Ts;
        Tw  = Tr - Ts;
        Tf  = T8 - T9;
        Ta  = T8 + T9;
        Te  = T3 - T4;
        T5  = T3 + T4;
        TF  = Tm + Tp;
        Tq  = SIMD_FNMADD(KP500000000, Tp, Tm);
        TG  = Tw + Tv;
        Tx  = SIMD_FNMADD(KP500000000, Tw, Tv);
        Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb  = T7 + Ta;
        TJ  = Te - Tf;
        Tg  = Te + Tf;
        Th  = SIMD_FNMADD(KP500000000, T5, T2);
        T6  = T2 + T5;
        TB  = SIMD_FNMADD(KP866025403, Tt, Tq);
        Tu  = SIMD_FMADD(KP866025403, Tt, Tq);
        T14 = SIMD_FNMADD(KP302775637, TF, TG);
        TH  = SIMD_FMADD(KP302775637, TG, TF);
        TC  = SIMD_FNMADD(KP866025403, Ty, Tx);
        Tz  = SIMD_FMADD(KP866025403, Ty, Tx);
        TI  = Th + Ti;
        Tj  = Th - Ti;
        Tc  = T6 + Tb;
        TL  = T6 - Tb;
        {
            SIMD_FLOAT TR, TD, TQ, TA, TX, TK, TW, Tk, Td, T15, TS, T12, TE, TM,
                TT;
            SIMD_FLOAT T17, TP, Tl, T1c, T16, TY, TU, TN, T19, T11, T1b, T18,
                TZ, TV, TO;
            SIMD_FLOAT T1a, T13, T10;
            TR            = SIMD_FMADD(KP612264650, TB, TC);
            TD            = SIMD_FNMADD(KP612264650, TC, TB);
            TQ            = SIMD_FMADD(KP038632954, Tu, Tz);
            TA            = SIMD_FNMADD(KP038632954, Tz, Tu);
            TX            = SIMD_FMADD(KP686558370, TI, TJ);
            TK            = SIMD_FNMADD(KP514918778, TJ, TI);
            TW            = SIMD_FNMADD(KP226109445, Tg, Tj);
            Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            T15           = SIMD_FNMADD(KP853480001, TR, TQ);
            TS            = SIMD_FMADD(KP853480001, TR, TQ);
            T12           = SIMD_FMADD(KP853480001, TD, TA);
            TE            = SIMD_FNMADD(KP853480001, TD, TA);
            TM            = SIMD_FMADD(KP581704778, TL, TK);
            TT            = SIMD_FNMADD(KP859542535, TK, TL);
            T17           = SIMD_FMADD(KP769338817, TX, TW);
            TP            = SIMD_FNMADD(KP503537032, Tk, Td);
            Tl            = SIMD_FMADD(KP1_007074065, Tk, Td);
            T1c           = SIMD_FMADD(KP957805992, T14, T15);
            T16           = SIMD_FNMADD(KP522026385, T15, T14);
            TY            = SIMD_FMADD(KP775028220, TE, TX);
            TU            = SIMD_FMADD(KP577780957, TT, TS);
            TN            = SIMD_FMADD(KP898077208, TM, TH);
            T19           = SIMD_FNMADD(KP968287244, T17, T12);
            T11           = SIMD_FNMADD(KP600925212, TT, TP);
            T1b           = SIMD_FNMADD(KP1_033041561, TM, Tl);
            T18           = SIMD_FMADD(KP875502302, T17, T16);
            TZ            = SIMD_FNMADD(KP769338817, TY, TW);
            TV            = SIMD_FMADD(KP1_040057143, TU, TP);
            TO            = SIMD_FMADD(KP957805992, TN, TE);
            T1a           = SIMD_FMADD(KP904176221, T19, T16);
            T13           = SIMD_FNMADD(KP1_040057143, T12, T11);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_200954543, T1c, T1b);
            R0[0]         = SIMD_FNMADD(KP1_200954543, T1c, T1b);
            T10           = SIMD_FMADD(KP875502302, TZ, TH);
            R0[WS(rs, 7)] = SIMD_FMADD(KP1_200954543, TO, Tl);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_150281458, T1a, T11);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_150281458, T18, T13);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_150281458, T18, T13);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_150281458, T10, TV);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_150281458, T10, TV);
        }
    }
}

template <>
struct r2cb_traits<13, 6>
{
    static constexpr long_t flops           = 118;
    static constexpr long_t operations      = 68;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 102;
    static constexpr long_t constants       = 28;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 6 -name
 * r2cb -standalone */

/*
 * This function contains 68 FP additions, 50 FP multiplications,
 * (or, 18 additions, 0 multiplications, 50 fused multiply/add),
 * 102 stack variables, 28 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 6>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP600925212, +0.600925212577331548853203544578415991041882762);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP577780957, +0.577780957683374522786053194962428896227394785);
    DK(KP775028220, +0.775028220171938468306413342617313924344661103);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ts, Tt, Tu, TB, Tx, Ty, T1, T7, T8, T9, T2, T3, T4, TE, Tv;
        SIMD_FLOAT Tz, TC, Tf, Ta, Te, T5, TN, Tw, TM, TD, Ti, Tb, To, Tg, Th;
        SIMD_FLOAT T6, TH, TA, T16, TO, TI, TF, Tn, Tj, Tc, Tm;
        Ts  = Ci[WS(cs, 5)];
        Tt  = Ci[WS(cs, 2)];
        Tu  = Ci[WS(cs, 6)];
        TB  = Ci[WS(cs, 1)];
        Tx  = Ci[WS(cs, 3)];
        Ty  = Ci[WS(cs, 4)];
        T1  = Cr[0];
        T7  = Cr[WS(cs, 5)];
        T8  = Cr[WS(cs, 2)];
        T9  = Cr[WS(cs, 6)];
        T2  = Cr[WS(cs, 1)];
        T3  = Cr[WS(cs, 3)];
        T4  = Cr[WS(cs, 4)];
        TE  = Tu - Tt;
        Tv  = Tt + Tu;
        Tz  = Tx + Ty;
        TC  = Tx - Ty;
        Tf  = T8 - T9;
        Ta  = T8 + T9;
        Te  = T3 - T4;
        T5  = T3 + T4;
        TN  = Ts + Tv;
        Tw  = SIMD_FNMADD(KP500000000, Tv, Ts);
        TM  = TC + TB;
        TD  = SIMD_FNMADD(KP500000000, TC, TB);
        Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb  = T7 + Ta;
        To  = Te - Tf;
        Tg  = Te + Tf;
        Th  = SIMD_FNMADD(KP500000000, T5, T2);
        T6  = T2 + T5;
        TH  = SIMD_FNMADD(KP866025403, Tz, Tw);
        TA  = SIMD_FMADD(KP866025403, Tz, Tw);
        T16 = SIMD_FMADD(KP302775637, TM, TN);
        TO  = SIMD_FNMADD(KP302775637, TN, TM);
        TI  = SIMD_FNMADD(KP866025403, TE, TD);
        TF  = SIMD_FMADD(KP866025403, TE, TD);
        Tn  = Th + Ti;
        Tj  = Th - Ti;
        Tc  = T6 + Tb;
        Tm  = T6 - Tb;
        {
            SIMD_FLOAT TQ, TJ, TP, TG, TU, Tp, TT, Tk, Td, TR, T13, TK, T17,
                T10, Tq;
            SIMD_FLOAT TV, Tl, TZ, TS, T18, T14, T1b, T11, TX, Tr, TW, T19, T15,
                T1c, T12;
            SIMD_FLOAT TY, TL, T1a;
            TQ            = SIMD_FMADD(KP612264650, TH, TI);
            TJ            = SIMD_FNMADD(KP612264650, TI, TH);
            TP            = SIMD_FMADD(KP038632954, TA, TF);
            TG            = SIMD_FNMADD(KP038632954, TF, TA);
            TU            = SIMD_FMADD(KP686558370, Tn, To);
            Tp            = SIMD_FNMADD(KP514918778, To, Tn);
            TT            = SIMD_FNMADD(KP226109445, Tg, Tj);
            Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            TR            = SIMD_FNMADD(KP853480001, TQ, TP);
            T13           = SIMD_FMADD(KP853480001, TQ, TP);
            TK            = SIMD_FMADD(KP853480001, TJ, TG);
            T17           = SIMD_FNMADD(KP853480001, TJ, TG);
            T10           = SIMD_FMADD(KP581704778, Tm, Tp);
            Tq            = SIMD_FNMADD(KP859542535, Tp, Tm);
            TV            = SIMD_FMADD(KP769338817, TU, TT);
            Tl            = SIMD_FNMADD(KP503537032, Tk, Td);
            TZ            = SIMD_FMADD(KP1_007074065, Tk, Td);
            TS            = SIMD_FNMADD(KP522026385, TR, TO);
            T18           = SIMD_FMADD(KP775028220, T17, TU);
            T14           = SIMD_FMADD(KP577780957, Tq, T13);
            T1b           = SIMD_FMADD(KP898077208, T10, T16);
            T11           = SIMD_FNMADD(KP898077208, T10, TO);
            TX            = SIMD_FNMADD(KP968287244, TV, TK);
            Tr            = SIMD_FNMADD(KP600925212, Tq, Tl);
            TW            = SIMD_FMADD(KP875502302, TV, TS);
            T19           = SIMD_FNMADD(KP769338817, T18, TT);
            T15           = SIMD_FMADD(KP1_040057143, T14, Tl);
            T1c           = SIMD_FMADD(KP957805992, T1b, T17);
            T12           = SIMD_FMADD(KP957805992, T11, TR);
            TY            = SIMD_FMADD(KP904176221, TX, TS);
            TL            = SIMD_FNMADD(KP1_040057143, TK, Tr);
            T1a           = SIMD_FMADD(KP875502302, T19, T16);
            R0[WS(rs, 6)] = SIMD_FMADD(KP1_200954543, T1c, TZ);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_200954543, T12, TZ);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_150281458, TY, Tr);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_150281458, TW, TL);
            R0[0]         = SIMD_FNMADD(KP1_150281458, TW, TL);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_150281458, T1a, T15);
            R0[WS(rs, 3)] = SIMD_FNMADD(KP1_150281458, T1a, T15);
        }
    }
}

template <>
struct r2cb_traits<13, 7>
{
    static constexpr long_t flops           = 112;
    static constexpr long_t operations      = 65;
    static constexpr long_t memory_accesses = 19;
    static constexpr long_t stack_vars      = 99;
    static constexpr long_t constants       = 27;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 7 -name
 * r2cb -standalone */

/*
 * This function contains 65 FP additions, 47 FP multiplications,
 * (or, 18 additions, 0 multiplications, 47 fused multiply/add),
 * 99 stack variables, 27 constants, and 19 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 7>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP522415803, +0.522415803456407715016982384787794227850894029);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP577780957, +0.577780957683374522786053194962428896227394785);
    DK(KP999254581, +0.999254581709519099972048691412783123156431503);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP775028220, +0.775028220171938468306413342617313924344661103);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T3, T4, T7, T8, T9, Tp, Tm, Tn, Tr, Ts, Tt, Te, T5;
        SIMD_FLOAT Tf, Ta, TG, To, TD, Tu, T6, Th, Tz, Tg, Tb, Ti, Tq, TC, Tv;
        SIMD_FLOAT TF, Tx, Tc, Ty, Tj, TE, TJ, T14, Tw, TH, TK;
        T1  = Cr[0];
        T2  = Cr[WS(cs, 1)];
        T3  = Cr[WS(cs, 3)];
        T4  = Cr[WS(cs, 4)];
        T7  = Cr[WS(cs, 5)];
        T8  = Cr[WS(cs, 2)];
        T9  = Cr[WS(cs, 6)];
        Tp  = Ci[WS(cs, 1)];
        Tm  = Ci[WS(cs, 3)];
        Tn  = Ci[WS(cs, 4)];
        Tr  = Ci[WS(cs, 5)];
        Ts  = Ci[WS(cs, 2)];
        Tt  = Ci[WS(cs, 6)];
        Te  = T3 - T4;
        T5  = T3 + T4;
        Tf  = T8 - T9;
        Ta  = T8 + T9;
        TG  = Tm + Tn;
        To  = Tm - Tn;
        TD  = Tt - Ts;
        Tu  = Ts + Tt;
        T6  = T2 + T5;
        Th  = SIMD_FNMADD(KP500000000, T5, T2);
        Tz  = Tf - Te;
        Tg  = Te + Tf;
        Tb  = T7 + Ta;
        Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
        Tq  = To + Tp;
        TC  = SIMD_FNMADD(KP500000000, To, Tp);
        Tv  = Tr + Tu;
        TF  = SIMD_FNMADD(KP500000000, Tu, Tr);
        Tx  = T6 - Tb;
        Tc  = T6 + Tb;
        Ty  = Th + Ti;
        Tj  = Th - Ti;
        TE  = SIMD_FMADD(KP866025403, TD, TC);
        TJ  = SIMD_FNMADD(KP866025403, TD, TC);
        T14 = SIMD_FMADD(KP302775637, Tq, Tv);
        Tw  = SIMD_FNMADD(KP302775637, Tv, Tq);
        TH  = SIMD_FMADD(KP866025403, TG, TF);
        TK  = SIMD_FNMADD(KP866025403, TG, TF);
        {
            SIMD_FLOAT Td, TA, TU, Tk, TT, TI, TQ, TL, TR, TY, TB, TV, TX, Tl,
                T15;
            SIMD_FLOAT TS, TM, T11, T19, TZ, T16, TW, TN, T12, T1a, T10, T17,
                TO, T13, T18;
            SIMD_FLOAT TP;
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            TA            = SIMD_FMADD(KP514918778, Tz, Ty);
            TU            = SIMD_FNMADD(KP686558370, Ty, Tz);
            Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
            TT            = SIMD_FNMADD(KP226109445, Tg, Tj);
            TI            = SIMD_FMADD(KP038632954, TH, TE);
            TQ            = SIMD_FNMADD(KP038632954, TE, TH);
            TL            = SIMD_FMADD(KP612264650, TK, TJ);
            TR            = SIMD_FNMADD(KP612264650, TJ, TK);
            TY            = SIMD_FMADD(KP581704778, Tx, TA);
            TB            = SIMD_FNMADD(KP859542535, TA, Tx);
            TV            = SIMD_FNMADD(KP769338817, TU, TT);
            TX            = SIMD_FMADD(KP1_007074065, Tk, Td);
            Tl            = SIMD_FNMADD(KP503537032, Tk, Td);
            T15           = SIMD_FNMADD(KP853480001, TR, TQ);
            TS            = SIMD_FMADD(KP853480001, TR, TQ);
            TM            = SIMD_FNMADD(KP853480001, TL, TI);
            T11           = SIMD_FMADD(KP853480001, TL, TI);
            T19           = SIMD_FMADD(KP898077208, TY, T14);
            TZ            = SIMD_FNMADD(KP898077208, TY, Tw);
            T16           = SIMD_FNMADD(KP775028220, T15, TU);
            TW            = SIMD_FNMADD(KP968287244, TV, TS);
            TN            = SIMD_FMADD(KP999254581, TM, TB);
            T12           = SIMD_FMADD(KP577780957, TB, T11);
            T1a           = SIMD_FMADD(KP957805992, T19, T15);
            T10           = SIMD_FMADD(KP957805992, TZ, TM);
            T17           = SIMD_FMADD(KP769338817, T16, TT);
            TO            = SIMD_FNMADD(KP522415803, TN, Tw);
            T13           = SIMD_FMADD(KP1_040057143, T12, Tl);
            R0[WS(rs, 5)] = SIMD_FMADD(KP1_200954543, T1a, TX);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_200954543, T10, TX);
            T18           = SIMD_FMADD(KP875502302, T17, T14);
            TP            = SIMD_FMADD(KP1_150281458, TO, Tl);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_150281458, T18, T13);
            R0[WS(rs, 2)] = SIMD_FNMADD(KP1_150281458, T18, T13);
            R0[WS(rs, 4)] = SIMD_FNMADD(KP1_040057143, TW, TP);
            R0[0]         = SIMD_FMADD(KP1_040057143, TW, TP);
        }
    }
}

template <>
struct r2cb_traits<13, 8>
{
    static constexpr long_t flops           = 110;
    static constexpr long_t operations      = 64;
    static constexpr long_t memory_accesses = 18;
    static constexpr long_t stack_vars      = 100;
    static constexpr long_t constants       = 28;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 8 -name
 * r2cb -standalone */

/*
 * This function contains 64 FP additions, 46 FP multiplications,
 * (or, 18 additions, 0 multiplications, 46 fused multiply/add),
 * 100 stack variables, 28 constants, and 18 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 8>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP775606371, +0.775606371347354307275827179986265179919778536);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP999254581, +0.999254581709519099972048691412783123156431503);
    DK(KP577780957, +0.577780957683374522786053194962428896227394785);
    DK(KP775028220, +0.775028220171938468306413342617313924344661103);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP1_007074065, +1.007074065727533254493747707736933954186697125);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T7, T3, T4, T8, T9, Tm, Tn, To, Tv, Tr, Ts, Te, T5;
        SIMD_FLOAT Tf, Ta, Ty, Tp, Tt, Tw, Th, T6, Tg, TJ, Ti, Tb, TF, Tq, TG;
        SIMD_FLOAT Tx, TI, Tj, TL, Tc, TB, Tu, T11, TH, TC, Tz;
        T1  = Cr[0];
        T2  = Cr[WS(cs, 1)];
        T7  = Cr[WS(cs, 5)];
        T3  = Cr[WS(cs, 3)];
        T4  = Cr[WS(cs, 4)];
        T8  = Cr[WS(cs, 2)];
        T9  = Cr[WS(cs, 6)];
        Tm  = Ci[WS(cs, 5)];
        Tn  = Ci[WS(cs, 2)];
        To  = Ci[WS(cs, 6)];
        Tv  = Ci[WS(cs, 1)];
        Tr  = Ci[WS(cs, 3)];
        Ts  = Ci[WS(cs, 4)];
        Te  = T3 - T4;
        T5  = T3 + T4;
        Tf  = T8 - T9;
        Ta  = T8 + T9;
        Ty  = To - Tn;
        Tp  = Tn + To;
        Tt  = Tr + Ts;
        Tw  = Tr - Ts;
        Th  = SIMD_FNMADD(KP500000000, T5, T2);
        T6  = T2 + T5;
        Tg  = Te + Tf;
        TJ  = Te - Tf;
        Ti  = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb  = T7 + Ta;
        TF  = Tm + Tp;
        Tq  = SIMD_FNMADD(KP500000000, Tp, Tm);
        TG  = Tw + Tv;
        Tx  = SIMD_FNMADD(KP500000000, Tw, Tv);
        TI  = Th + Ti;
        Tj  = Th - Ti;
        TL  = T6 - Tb;
        Tc  = T6 + Tb;
        TB  = SIMD_FNMADD(KP866025403, Tt, Tq);
        Tu  = SIMD_FMADD(KP866025403, Tt, Tq);
        T11 = SIMD_FNMADD(KP302775637, TF, TG);
        TH  = SIMD_FMADD(KP302775637, TG, TF);
        TC  = SIMD_FNMADD(KP866025403, Ty, Tx);
        Tz  = SIMD_FMADD(KP866025403, Ty, Tx);
        {
            SIMD_FLOAT TX, TK, Tk, TW, Td, TR, TD, TQ, TA, TT, TM, Tl, TP, T12,
                TE;
            SIMD_FLOAT T13, TS, T19, TN, TY, TU, T14, T1a, TO, TZ, TV, T15, T10,
                T16, T17;
            SIMD_FLOAT T18;
            TX            = SIMD_FMADD(KP686558370, TI, TJ);
            TK            = SIMD_FNMADD(KP514918778, TJ, TI);
            Tk            = SIMD_FMADD(KP301479260, Tj, Tg);
            TW            = SIMD_FNMADD(KP226109445, Tg, Tj);
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            TR            = SIMD_FMADD(KP612264650, TB, TC);
            TD            = SIMD_FNMADD(KP612264650, TC, TB);
            TQ            = SIMD_FMADD(KP038632954, Tu, Tz);
            TA            = SIMD_FNMADD(KP038632954, Tz, Tu);
            TT            = SIMD_FNMADD(KP859542535, TK, TL);
            TM            = SIMD_FMADD(KP581704778, TL, TK);
            Tl            = SIMD_FMADD(KP1_007074065, Tk, Td);
            TP            = SIMD_FNMADD(KP503537032, Tk, Td);
            T12           = SIMD_FMADD(KP853480001, TD, TA);
            TE            = SIMD_FNMADD(KP853480001, TD, TA);
            T13           = SIMD_FNMADD(KP853480001, TR, TQ);
            TS            = SIMD_FMADD(KP853480001, TR, TQ);
            T19           = SIMD_FNMADD(KP898077208, TM, T11);
            TN            = SIMD_FMADD(KP898077208, TM, TH);
            TY            = SIMD_FMADD(KP775028220, TE, TX);
            TU            = SIMD_FMADD(KP577780957, TT, TS);
            T14           = SIMD_FMADD(KP999254581, T13, TT);
            T1a           = SIMD_FMADD(KP957805992, T19, T13);
            TO            = SIMD_FMADD(KP957805992, TN, TE);
            TZ            = SIMD_FNMADD(KP769338817, TY, TW);
            TV            = SIMD_FMADD(KP1_040057143, TU, TP);
            T15           = SIMD_FNMADD(KP775606371, T14, TX);
            R0[0]         = SIMD_FMADD(KP1_200954543, T1a, Tl);
            R0[WS(rs, 4)] = SIMD_FMADD(KP1_200954543, TO, Tl);
            T10           = SIMD_FMADD(KP875502302, TZ, TH);
            T16           = SIMD_FMADD(KP769338817, T15, TW);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_150281458, T10, TV);
            R0[WS(rs, 1)] = SIMD_FNMADD(KP1_150281458, T10, TV);
            T17           = SIMD_FNMADD(KP968287244, T16, T12);
            T18           = SIMD_FNMADD(KP904176221, T17, T11);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_150281458, T18, TP);
        }
    }
}

template <>
struct r2cb_traits<13, 9>
{
    static constexpr long_t flops           = 104;
    static constexpr long_t operations      = 61;
    static constexpr long_t memory_accesses = 17;
    static constexpr long_t stack_vars      = 99;
    static constexpr long_t constants       = 29;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 9 -name
 * r2cb -standalone */

/*
 * This function contains 61 FP additions, 43 FP multiplications,
 * (or, 18 additions, 0 multiplications, 43 fused multiply/add),
 * 99 stack variables, 29 constants, and 17 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 9>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP968287244, +0.968287244361984016049539446938120421179794516);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP1_040057143, +1.040057143777729238234261000998465604986476278);
    DK(KP875502302, +0.875502302409147941146295545768755143177842006);
    DK(KP775606371, +0.775606371347354307275827179986265179919778536);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP999254581, +0.999254581709519099972048691412783123156431503);
    DK(KP974863067, +0.974863067960110962421673631006718851782981540);
    DK(KP676970703, +0.676970703970014723838419453856959046497886621);
    DK(KP775028220, +0.775028220171938468306413342617313924344661103);
    DK(KP580000640, +0.580000640462751750976769040243825299113513957);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP596704088, +0.596704088634443665550319828899964056346415191);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, Te, Tn, Tf, Tg, Tj, Tk, T2, T7, T3, T4, T8, T9, Tq, Th;
        SIMD_FLOAT To, Tl, TD, T5, TE, Ta, Tx, Ti, Ty, Tp, TA, T6, TH, TF, TB;
        SIMD_FLOAT Tb, Tt, Tm, Tz, Tr, Tu, TI, TC, Tc, TK;
        T1 = Cr[0];
        Te = Ci[WS(cs, 5)];
        Tn = Ci[WS(cs, 1)];
        Tf = Ci[WS(cs, 2)];
        Tg = Ci[WS(cs, 6)];
        Tj = Ci[WS(cs, 3)];
        Tk = Ci[WS(cs, 4)];
        T2 = Cr[WS(cs, 1)];
        T7 = Cr[WS(cs, 5)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        Tq = Tg - Tf;
        Th = Tf + Tg;
        To = Tj - Tk;
        Tl = Tj + Tk;
        TD = T3 - T4;
        T5 = T3 + T4;
        TE = T8 - T9;
        Ta = T8 + T9;
        Tx = Te + Th;
        Ti = SIMD_FNMADD(KP500000000, Th, Te);
        Ty = To + Tn;
        Tp = SIMD_FNMADD(KP500000000, To, Tn);
        TA = SIMD_FNMADD(KP500000000, T5, T2);
        T6 = T2 + T5;
        TH = TD + TE;
        TF = TD - TE;
        TB = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb = T7 + Ta;
        Tt = SIMD_FNMADD(KP866025403, Tl, Ti);
        Tm = SIMD_FMADD(KP866025403, Tl, Ti);
        Tz = SIMD_FMADD(KP302775637, Ty, Tx);
        Tr = SIMD_FMADD(KP866025403, Tq, Tp);
        Tu = SIMD_FNMADD(KP866025403, Tq, Tp);
        TI = TA - TB;
        TC = TA + TB;
        Tc = T6 + Tb;
        TK = T6 - Tb;
        {
            SIMD_FLOAT Tv, TR, Ts, TQ, TG, TX, TJ, TW, Td, T12, T11, Tw, TS, TL,
                TP;
            SIMD_FLOAT T13, TY, TT, TM, T14, TZ, TU, TN, T15, T10, TV, TO, T16,
                T17, T18;
            Tv            = SIMD_FNMADD(KP612264650, Tu, Tt);
            TR            = SIMD_FMADD(KP612264650, Tt, Tu);
            Ts            = SIMD_FNMADD(KP038632954, Tr, Tm);
            TQ            = SIMD_FMADD(KP038632954, Tm, Tr);
            TG            = SIMD_FNMADD(KP514918778, TF, TC);
            TX            = SIMD_FMADD(KP686558370, TC, TF);
            TJ            = SIMD_FMADD(KP301479260, TI, TH);
            TW            = SIMD_FNMADD(KP226109445, TH, TI);
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            T12           = SIMD_FNMADD(KP853480001, TR, TQ);
            T11           = SIMD_FMADD(KP853480001, Tv, Ts);
            Tw            = SIMD_FNMADD(KP853480001, Tv, Ts);
            TS            = SIMD_FNMADD(KP859542535, TG, TK);
            TL            = SIMD_FMADD(KP596704088, TK, TJ);
            TP            = SIMD_FNMADD(KP503537032, TJ, Td);
            T13           = SIMD_FMADD(KP580000640, Tx, T12);
            TY            = SIMD_FMADD(KP775028220, Tw, TX);
            TT            = SIMD_FMADD(KP676970703, TS, TR);
            TM            = SIMD_FMADD(KP974863067, TL, TG);
            T14           = SIMD_FMADD(KP999254581, T13, TS);
            TZ            = SIMD_FNMADD(KP769338817, TY, TW);
            TU            = SIMD_FMADD(KP853480001, TT, TQ);
            TN            = SIMD_FMADD(KP898077208, TM, Tz);
            T15           = SIMD_FNMADD(KP775606371, T14, TX);
            T10           = SIMD_FMADD(KP875502302, TZ, Tz);
            TV            = SIMD_FMADD(KP1_040057143, TU, TP);
            TO            = SIMD_FMADD(KP957805992, TN, Tw);
            T16           = SIMD_FMADD(KP769338817, T15, TW);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_150281458, T10, TV);
            R0[0]         = SIMD_FNMADD(KP1_150281458, T10, TV);
            R0[WS(rs, 3)] = SIMD_FMADD(KP1_200954543, TO, Td);
            T17           = SIMD_FNMADD(KP968287244, T16, T11);
            T18           = SIMD_FNMADD(KP904176221, T17, Ty);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_150281458, T18, TP);
        }
    }
}

template <>
struct r2cb_traits<13, 10>
{
    static constexpr long_t flops           = 94;
    static constexpr long_t operations      = 56;
    static constexpr long_t memory_accesses = 16;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 24;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 10 -name
 * r2cb -standalone */

/*
 * This function contains 56 FP additions, 38 FP multiplications,
 * (or, 18 additions, 0 multiplications, 38 fused multiply/add),
 * 90 stack variables, 24 constants, and 16 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 10>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP911475422, +0.911475422730042743301114282142878643240313190);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP991991884, +0.991991884194384484416833527603148399167195465);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP974863067, +0.974863067960110962421673631006718851782981540);
    DK(KP676466077, +0.676466077625155744021239599859497035455079717);
    DK(KP580000640, +0.580000640462751750976769040243825299113513957);
    DK(KP596704088, +0.596704088634443665550319828899964056346415191);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP855268093, +0.855268093653145522527541913246726873473840378);
    DK(KP573154020, +0.573154020863966621901284904558598753974845853);
    DK(KP885189183, +0.885189183772550605980453449851466048521771202);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP846719210, +0.846719210761886927255281474216801394888717286);
    DK(KP570771564, +0.570771564145963186829018575406091571859478626);
    DK(KP854990378, +0.854990378340835740470838109449066235590320837);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T7, T3, T4, T8, T9, Te, Tf, Tg, Tn, Tj, Tk, TD, T5;
        SIMD_FLOAT TE, Ta, Tq, Th, Tl, To, TA, T6, TF, TH, TB, Tb, Tx, Ti, Ty;
        SIMD_FLOAT Tp;
        T1 = Cr[0];
        T2 = Cr[WS(cs, 1)];
        T7 = Cr[WS(cs, 5)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        Te = Ci[WS(cs, 5)];
        Tf = Ci[WS(cs, 2)];
        Tg = Ci[WS(cs, 6)];
        Tn = Ci[WS(cs, 1)];
        Tj = Ci[WS(cs, 3)];
        Tk = Ci[WS(cs, 4)];
        TD = T3 - T4;
        T5 = T3 + T4;
        TE = T8 - T9;
        Ta = T8 + T9;
        Tq = Tg - Tf;
        Th = Tf + Tg;
        Tl = Tj + Tk;
        To = Tj - Tk;
        TA = SIMD_FNMADD(KP500000000, T5, T2);
        T6 = T2 + T5;
        TF = TD + TE;
        TH = TD - TE;
        TB = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb = T7 + Ta;
        Tx = Te + Th;
        Ti = SIMD_FNMADD(KP500000000, Th, Te);
        Ty = Tn + To;
        Tp = SIMD_FNMADD(KP500000000, To, Tn);
        {
            SIMD_FLOAT TI, TC, TG, Tc, Tt, Tm, Tz, Tr, Tu, TP, TJ, TR, Td, Tv,
                TV;
            SIMD_FLOAT Ts, TU, TK, TS, TQ, TW, Tw, TT, TL, TX, T11, TM, TY, T12,
                TN;
            SIMD_FLOAT TZ, T13, TO, T10, T14;
            TI            = TA - TB;
            TC            = TA + TB;
            TG            = T6 - Tb;
            Tc            = T6 + Tb;
            Tt            = SIMD_FNMADD(KP866025403, Tl, Ti);
            Tm            = SIMD_FMADD(KP866025403, Tl, Ti);
            Tz            = SIMD_FMADD(KP302775637, Ty, Tx);
            Tr            = SIMD_FMADD(KP866025403, Tq, Tp);
            Tu            = SIMD_FNMADD(KP866025403, Tq, Tp);
            TP            = SIMD_FNMADD(KP854990378, TF, TI);
            TJ            = SIMD_FNMADD(KP570771564, TI, TH);
            TR            = SIMD_FNMADD(KP846719210, TH, TG);
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            Tv            = SIMD_FNMADD(KP612264650, Tu, Tt);
            TV            = SIMD_FMADD(KP612264650, Tt, Tu);
            Ts            = SIMD_FNMADD(KP038632954, Tr, Tm);
            TU            = SIMD_FMADD(KP038632954, Tm, Tr);
            TK            = SIMD_FNMADD(KP885189183, TJ, TG);
            TS            = SIMD_FNMADD(KP573154020, TR, TC);
            TQ            = SIMD_FMADD(KP855268093, TP, Td);
            TW            = SIMD_FNMADD(KP853480001, TV, TU);
            Tw            = SIMD_FNMADD(KP853480001, Tv, Ts);
            TT            = SIMD_FMADD(KP853480001, Tv, Ts);
            TL            = SIMD_FMADD(KP596704088, TK, TF);
            TX            = SIMD_FMADD(KP580000640, Tx, TW);
            T11           = SIMD_FNMADD(KP676466077, Tw, TV);
            TM            = SIMD_FMADD(KP974863067, TL, TC);
            TY            = SIMD_FMADD(KP577350269, TX, TT);
            T12           = SIMD_FMADD(KP853480001, T11, TU);
            TN            = SIMD_FMADD(KP898077208, TM, Tz);
            TZ            = SIMD_FNMADD(KP991991884, TY, TS);
            T13           = SIMD_FNMADD(KP991991884, T12, TS);
            TO            = SIMD_FMADD(KP957805992, TN, Tw);
            T10           = SIMD_FMADD(KP911475422, TZ, Ty);
            T14           = SIMD_FNMADD(KP911475422, T13, Tz);
            R0[WS(rs, 2)] = SIMD_FMADD(KP1_200954543, TO, Td);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_150281458, T10, TQ);
            R0[0]         = SIMD_FMADD(KP1_150281458, T14, TQ);
        }
    }
}

template <>
struct r2cb_traits<13, 11>
{
    static constexpr long_t flops           = 84;
    static constexpr long_t operations      = 51;
    static constexpr long_t memory_accesses = 15;
    static constexpr long_t stack_vars      = 89;
    static constexpr long_t constants       = 27;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 11 -name
 * r2cb -standalone */

/*
 * This function contains 51 FP additions, 33 FP multiplications,
 * (or, 18 additions, 0 multiplications, 33 fused multiply/add),
 * 89 stack variables, 27 constants, and 15 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 11>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_150281458, +1.150281458948006242736771094910906776922003215);
    DK(KP924343643, +0.924343643651936772383826863607547190944553569);
    DK(KP993160353, +0.993160353581795289867184866101018920312557295);
    DK(KP1_200954543, +1.200954543865330565851538506669526018704025697);
    DK(KP992869407, +0.992869407180653666715045738012947426369465594);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP960533087, +0.960533087976032918821569633277039115354229589);
    DK(KP898077208, +0.898077208157167952792643131416763460963496040);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP992206630, +0.992206630190643181981759862080308058067939017);
    DK(KP943809708, +0.943809708349861864848589010560858695402617281);
    DK(KP982520211, +0.982520211312033041923693415723761986330641847);
    DK(KP821782573, +0.821782573844688534916459178258361003911346232);
    DK(KP623157308, +0.623157308447786091592726012764516171408574428);
    DK(KP955002684, +0.955002684013226553044486310209955890310259374);
    DK(KP957549691, +0.957549691779697834439052252313253728660992958);
    DK(KP976322094, +0.976322094299681411156047318317335880595995423);
    DK(KP885189183, +0.885189183772550605980453449851466048521771202);
    DK(KP621594140, +0.621594140117768177952669387409041017065349022);
    DK(KP654739470, +0.654739470388490733314464195707889448277453477);
    DK(KP763662529, +0.763662529316163242734068300493515475256850003);
    DK(KP871753712, +0.871753712674897921951063620611520104822313567);
    DK(KP570771564, +0.570771564145963186829018575406091571859478626);
    DK(KP152814878, +0.152814878720114049298606143215028573205511356);
    DK(KP166666666, +0.166666666666666666666666666666666666666666667);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, Th, Tj, Te, Tf, Tk, Tl, T2, T3, T4, T7, T8, T9, To, Tg;
        SIMD_FLOAT Tr, Tm, Tx, T5, Ty, Ta, Tq, Ti, Tn, TE, T6, Tt, TA, Tz, Tb;
        SIMD_FLOAT Tu;
        T1 = Cr[0];
        Th = Ci[WS(cs, 1)];
        Tj = Ci[WS(cs, 5)];
        Te = Ci[WS(cs, 3)];
        Tf = Ci[WS(cs, 4)];
        Tk = Ci[WS(cs, 2)];
        Tl = Ci[WS(cs, 6)];
        T2 = Cr[WS(cs, 1)];
        T3 = Cr[WS(cs, 3)];
        T4 = Cr[WS(cs, 4)];
        T7 = Cr[WS(cs, 5)];
        T8 = Cr[WS(cs, 2)];
        T9 = Cr[WS(cs, 6)];
        To = Te + Tf;
        Tg = Te - Tf;
        Tr = Tk - Tl;
        Tm = Tk + Tl;
        Tx = T3 - T4;
        T5 = T3 + T4;
        Ty = T8 - T9;
        Ta = T8 + T9;
        Tq = SIMD_FNMADD(KP500000000, Tg, Th);
        Ti = Tg + Th;
        Tn = SIMD_FNMADD(KP500000000, Tm, Tj);
        TE = Tj + Tm;
        T6 = T2 + T5;
        Tt = SIMD_FNMADD(KP500000000, T5, T2);
        TA = Tx + Ty;
        Tz = Tx - Ty;
        Tb = T7 + Ta;
        Tu = SIMD_FMSUB(KP500000000, Ta, T7);
        {
            SIMD_FLOAT Ts, TD, TC, Tp, Tc, TB, Tv, Tw, Td, TR, TF, TS, TG, TT,
                TH;
            SIMD_FLOAT TU, TI, TV, TJ, TW, TK, TX, TL, TY, TM, TZ, TN, T10, TO,
                TP;
            SIMD_FLOAT TQ;
            Ts            = SIMD_FMADD(KP866025403, Tr, Tq);
            TD            = SIMD_FNMADD(KP866025403, Tr, Tq);
            TC            = SIMD_FNMADD(KP866025403, To, Tn);
            Tp            = SIMD_FMADD(KP866025403, To, Tn);
            Tc            = T6 + Tb;
            TB            = T6 - Tb;
            Tv            = Tt + Tu;
            Tw            = Tt - Tu;
            Td            = SIMD_FNMADD(KP166666666, Tc, T1);
            TR            = SIMD_FNMADD(KP152814878, TD, Tw);
            TF            = SIMD_FMADD(KP570771564, Tw, Tz);
            TS            = SIMD_FMADD(KP871753712, TR, Ti);
            TG            = SIMD_FMADD(KP763662529, TF, TE);
            TT            = SIMD_FNMADD(KP654739470, TS, Tz);
            TH            = SIMD_FMADD(KP621594140, TG, TD);
            TU            = SIMD_FNMADD(KP885189183, TT, TB);
            TI            = SIMD_FMADD(KP976322094, TH, TC);
            TV            = SIMD_FMADD(KP957549691, TU, Ts);
            TJ            = SIMD_FMADD(KP955002684, TI, TB);
            TW            = SIMD_FMADD(KP623157308, TV, TA);
            TK            = SIMD_FMADD(KP821782573, TJ, TA);
            TX            = SIMD_FNMADD(KP982520211, TW, TC);
            TL            = SIMD_FNMADD(KP943809708, TK, Tz);
            TY            = SIMD_FNMADD(KP992206630, TX, Tv);
            TM            = SIMD_FMADD(KP769338817, TL, Tw);
            TZ            = SIMD_FMADD(KP898077208, TY, TE);
            TN            = SIMD_FMADD(KP960533087, TM, Tv);
            T10           = SIMD_FMADD(KP957805992, TZ, Tp);
            TO            = SIMD_FMADD(KP992869407, TN, Ts);
            R0[WS(rs, 1)] = SIMD_FMADD(KP1_200954543, T10, Td);
            TP            = SIMD_FNMADD(KP993160353, TO, Tp);
            TQ            = SIMD_FNMADD(KP924343643, TP, Ti);
            R0[0]         = SIMD_FMADD(KP1_150281458, TQ, Td);
        }
    }
}

template <>
struct r2cb_traits<13, 12>
{
    static constexpr long_t flops           = 24;
    static constexpr long_t operations      = 12;
    static constexpr long_t memory_accesses = 14;
    static constexpr long_t stack_vars      = 36;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -sign 1 -n 13 -skip-k 12 -name
 * r2cb -standalone */

/*
 * This function contains 12 FP additions, 12 FP multiplications,
 * (or, 0 additions, 0 multiplications, 12 fused multiply/add),
 * 36 stack variables, 12 constants, and 14 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && SkippedOutputs == 12>::type
r2cb(SIMD_FLOAT* __restrict R0, SIMD_FLOAT const* __restrict Cr,
     SIMD_FLOAT const* __restrict Ci)
{
    DK(KP1_985417748, +1.985417748196107985601503298985040358687351266);
    DK(KP978073071, +0.978073071330425174845510358206826754143430155);
    DK(KP962999250, +0.962999250731753209177997632122487669229498495);
    DK(KP946995341, +0.946995341075717111873083677469705125876260046);
    DK(KP929446344, +0.929446344087537091312030670266209555115471731);
    DK(KP909508411, +0.909508411028584492595111848672330274718393099);
    DK(KP885922693, +0.885922693643422280142121178600396087556049184);
    DK(KP856651088, +0.856651088108164644231638596029009237155558229);
    DK(KP818081344, +0.818081344983910730739775904626700167783561925);
    DK(KP763045417, +0.763045417948598090900751068625829745864906663);
    DK(KP674879769, +0.674879769095938414734857570542683241500025238);
    DK(KP503672338, +0.503672338432841405377996470389106802271960555);
    {
        SIMD_FLOAT T1, T2, T6, T5, T4, T3, T7, T8, T9, Ta, Tb, Tc, Td, Te, Tf;
        SIMD_FLOAT Tg, Th, Ti, Tj, Tk, Tl, Tm, Tn, To;
        T1    = Cr[0];
        T2    = Ci[WS(cs, 3)];
        T6    = Ci[WS(cs, 2)];
        T5    = Cr[WS(cs, 1)];
        T4    = Ci[WS(cs, 4)];
        T3    = Cr[WS(cs, 6)];
        T7    = Cr[WS(cs, 5)];
        T8    = Ci[WS(cs, 5)];
        T9    = Cr[WS(cs, 2)];
        Ta    = Ci[WS(cs, 1)];
        Tb    = Cr[WS(cs, 4)];
        Tc    = Ci[WS(cs, 6)];
        Td    = Cr[WS(cs, 3)];
        Te    = SIMD_FMADD(KP503672338, Td, Tc);
        Tf    = SIMD_FNMADD(KP674879769, Te, Tb);
        Tg    = SIMD_FNMADD(KP763045417, Tf, Ta);
        Th    = SIMD_FMADD(KP818081344, Tg, T9);
        Ti    = SIMD_FMADD(KP856651088, Th, T8);
        Tj    = SIMD_FNMADD(KP885922693, Ti, T7);
        Tk    = SIMD_FNMADD(KP909508411, Tj, T6);
        Tl    = SIMD_FMADD(KP929446344, Tk, T5);
        Tm    = SIMD_FMADD(KP946995341, Tl, T4);
        Tn    = SIMD_FNMADD(KP962999250, Tm, T3);
        To    = SIMD_FNMADD(KP978073071, Tn, T2);
        R0[0] = SIMD_FMADD(KP1_985417748, To, T1);
    }
}
