//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cb_traits<11, 0>
{
    static constexpr long_t flops           = 250;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 142;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 0 -name c2cb
 * -standalone */

/*
 * This function contains 140 FP additions, 110 FP multiplications,
 * (or, 30 additions, 0 multiplications, 110 fused multiply/add),
 * 142 stack variables, 10 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 0>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T1f, T4, TA, T28, T1Z, Tl, TS, T1Q, T11, T1H, T1o, T24,
            T15, TW;
        SIMD_FLOAT T1L, T1U, TE, T1y, T18, T1d, T1D, T1M, T1V, T19, T1e, T1p,
            T1a;
        {
            SIMD_FLOAT T1u, T1q, Tg, T1t, T7, T1s, Ta, T1r, Td, T1i, To, T1k,
                T26, T1w, TY;
            SIMD_FLOAT T1X, TP, Ti, T1F, T1O, T17, TG, T1h, Tr, Ts, Tt, Tv, Tw,
                TK, T2;
            SIMD_FLOAT T3, Te, Tf, T5, T6, T8, T9, Tb, Tc, Ty, Tz, Tm, Tn, Tp,
                T25;
            SIMD_FLOAT Tq, T1v, TX, T1W, TO, Th, T1E, T1N, T16, TF, Tj, T27,
                T1Y, TH;
            T1    = ri[0];
            T1f   = ii[0];
            T2    = ri[WS(is, 1)];
            T3    = ri[WS(is, 10)];
            Te    = ri[WS(is, 5)];
            Tf    = ri[WS(is, 6)];
            T5    = ri[WS(is, 2)];
            T6    = ri[WS(is, 9)];
            T8    = ri[WS(is, 3)];
            T9    = ri[WS(is, 8)];
            Tb    = ri[WS(is, 4)];
            Tc    = ri[WS(is, 7)];
            Tm    = ii[WS(is, 3)];
            Tn    = ii[WS(is, 8)];
            Ty    = ii[WS(is, 5)];
            T1u   = T3 - T2;
            T4    = T2 + T3;
            T1q   = Tf - Te;
            Tg    = Te + Tf;
            T1t   = T6 - T5;
            T7    = T5 + T6;
            T1s   = T9 - T8;
            Ta    = T8 + T9;
            T1r   = Tc - Tb;
            Td    = Tb + Tc;
            T1i   = Tm + Tn;
            To    = Tm - Tn;
            Tz    = ii[WS(is, 6)];
            Tp    = ii[WS(is, 2)];
            T25   = SIMD_FMADD(KP521108558, T1q, T1u);
            Tq    = ii[WS(is, 9)];
            T1v   = SIMD_FNMADD(KP521108558, T1u, T1t);
            TX    = SIMD_FNMADD(KP342584725, T7, Tg);
            T1W   = SIMD_FMADD(KP521108558, T1s, T1q);
            TO    = SIMD_FNMADD(KP342584725, T4, Ta);
            Th    = SIMD_FNMADD(KP342584725, Ta, T7);
            T1E   = SIMD_FMADD(KP521108558, T1r, T1s);
            T1N   = SIMD_FNMADD(KP521108558, T1t, T1r);
            T16   = SIMD_FNMADD(KP342584725, Tg, Td);
            TF    = SIMD_FNMADD(KP342584725, Td, T4);
            TA    = Ty - Tz;
            T1k   = Ty + Tz;
            T26   = SIMD_FMADD(KP715370323, T25, T1r);
            T1w   = SIMD_FNMADD(KP715370323, T1v, T1s);
            TY    = SIMD_FNMADD(KP634356270, TX, T4);
            T1X   = SIMD_FNMADD(KP715370323, T1W, T1t);
            TP    = SIMD_FNMADD(KP634356270, TO, Tg);
            Ti    = SIMD_FNMADD(KP634356270, Th, Td);
            T1F   = SIMD_FMADD(KP715370323, T1E, T1u);
            T1O   = SIMD_FMADD(KP715370323, T1N, T1q);
            T17   = SIMD_FNMADD(KP634356270, T16, Ta);
            TG    = SIMD_FNMADD(KP634356270, TF, T7);
            T1h   = Tp + Tq;
            Tr    = Tp - Tq;
            Ts    = ii[WS(is, 4)];
            Tt    = ii[WS(is, 7)];
            Tv    = ii[WS(is, 1)];
            Tw    = ii[WS(is, 10)];
            TK    = SIMD_FMADD(KP521108558, To, TA);
            ro[0] = T1 + T4 + T7 + Ta + Td + Tg;
            Tj    = SIMD_FNMADD(KP778434453, Ti, T4);
            T27   = SIMD_FMADD(KP830830026, T26, T1t);
            T1Y   = SIMD_FMADD(KP830830026, T1X, T1u);
            TH    = SIMD_FNMADD(KP778434453, TG, Tg);
            {
                SIMD_FLOAT T1j, Tu, T1g, Tx, T1A, TJ, T1m, T22, T13, TU, T1J,
                    T1S, T1c, TC, TN;
                SIMD_FLOAT T10, T1z, T20, TL, Tk, TI, TR, TQ, T1P, TZ, T1l, T21,
                    T12, TT, T1I;
                SIMD_FLOAT T1R, T1b, TB, TM, T1B, T1G, T1C, T1n, T23, T14, TV,
                    T1K, T1T, T1x, TD;
                TQ            = SIMD_FNMADD(KP778434453, TP, Td);
                T1z           = SIMD_FNMADD(KP342584725, T1h, T1k);
                T20           = SIMD_FNMADD(KP342584725, T1i, T1h);
                T1j           = Ts + Tt;
                Tu            = Ts - Tt;
                T1g           = Tv + Tw;
                Tx            = Tv - Tw;
                TL            = SIMD_FNMADD(KP715370323, TK, Tr);
                Tk            = SIMD_FNMADD(KP876768831, Tj, Tg);
                T28           = SIMD_FMADD(KP918985947, T27, T1s);
                T1Z           = SIMD_FNMADD(KP918985947, T1Y, T1r);
                TI            = SIMD_FNMADD(KP876768831, TH, Ta);
                TR            = SIMD_FNMADD(KP876768831, TQ, T7);
                T1P           = SIMD_FNMADD(KP830830026, T1O, T1s);
                TZ            = SIMD_FNMADD(KP778434453, TY, Ta);
                T1l           = SIMD_FNMADD(KP342584725, T1k, T1j);
                T21           = SIMD_FNMADD(KP634356270, T20, T1j);
                T12           = SIMD_FMADD(KP521108558, Tu, To);
                TT            = SIMD_FNMADD(KP521108558, Tr, Tu);
                io[0]         = T1f + T1g + T1h + T1i + T1j + T1k;
                T1A           = SIMD_FNMADD(KP634356270, T1z, T1g);
                T1I           = SIMD_FNMADD(KP342584725, T1g, T1i);
                T1R           = SIMD_FNMADD(KP342584725, T1j, T1g);
                T1b           = SIMD_FNMADD(KP521108558, Tx, Tr);
                TB            = SIMD_FMADD(KP521108558, TA, Tx);
                TM            = SIMD_FMADD(KP830830026, TL, Tx);
                Tl            = SIMD_FNMADD(KP959492973, Tk, T1);
                TJ            = SIMD_FNMADD(KP959492973, TI, T1);
                TS            = SIMD_FNMADD(KP959492973, TR, T1);
                T1Q           = SIMD_FNMADD(KP918985947, T1P, T1u);
                T1m           = SIMD_FNMADD(KP634356270, T1l, T1i);
                T22           = SIMD_FNMADD(KP778434453, T21, T1g);
                T13           = SIMD_FMADD(KP715370323, T12, Tx);
                TU            = SIMD_FMADD(KP715370323, TT, TA);
                T1J           = SIMD_FNMADD(KP634356270, T1I, T1k);
                T1S           = SIMD_FNMADD(KP634356270, T1R, T1h);
                T1c           = SIMD_FNMADD(KP715370323, T1b, To);
                TC            = SIMD_FMADD(KP715370323, TB, Tu);
                TN            = SIMD_FNMADD(KP918985947, TM, Tu);
                T10           = SIMD_FNMADD(KP876768831, TZ, Td);
                T1B           = SIMD_FNMADD(KP778434453, T1A, T1i);
                T1G           = SIMD_FNMADD(KP830830026, T1F, T1q);
                T1n           = SIMD_FNMADD(KP778434453, T1m, T1h);
                T23           = SIMD_FNMADD(KP876768831, T22, T1k);
                T14           = SIMD_FNMADD(KP830830026, T13, TA);
                TV            = SIMD_FNMADD(KP830830026, TU, To);
                T1K           = SIMD_FNMADD(KP778434453, T1J, T1j);
                T1T           = SIMD_FNMADD(KP778434453, T1S, T1k);
                T1x           = SIMD_FNMADD(KP830830026, T1w, T1r);
                TD            = SIMD_FMADD(KP830830026, TC, Tr);
                ro[WS(os, 9)] = SIMD_FMADD(KP989821441, TN, TJ);
                ro[WS(os, 2)] = SIMD_FNMADD(KP989821441, TN, TJ);
                T11           = SIMD_FNMADD(KP959492973, T10, T1);
                T1C           = SIMD_FNMADD(KP876768831, T1B, T1j);
                T1H           = SIMD_FMADD(KP918985947, T1G, T1t);
                T1o           = SIMD_FNMADD(KP876768831, T1n, T1g);
                T24           = SIMD_FNMADD(KP959492973, T23, T1f);
                T15           = SIMD_FMADD(KP918985947, T14, Tr);
                TW            = SIMD_FNMADD(KP918985947, TV, Tx);
                T1L           = SIMD_FNMADD(KP876768831, T1K, T1h);
                T1U           = SIMD_FNMADD(KP876768831, T1T, T1i);
                TE            = SIMD_FMADD(KP918985947, TD, To);
                T1y           = SIMD_FNMADD(KP918985947, T1x, T1q);
                T18           = SIMD_FNMADD(KP778434453, T17, T7);
                T1d           = SIMD_FNMADD(KP830830026, T1c, Tu);
                T1D           = SIMD_FNMADD(KP959492973, T1C, T1f);
            }
        }
        T1p            = SIMD_FNMADD(KP959492973, T1o, T1f);
        io[WS(os, 10)] = SIMD_FNMADD(KP989821441, T28, T24);
        io[WS(os, 1)]  = SIMD_FMADD(KP989821441, T28, T24);
        ro[WS(os, 7)]  = SIMD_FMADD(KP989821441, T15, T11);
        ro[WS(os, 4)]  = SIMD_FNMADD(KP989821441, T15, T11);
        ro[WS(os, 3)]  = SIMD_FMADD(KP989821441, TW, TS);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP989821441, TW, TS);
        T1M            = SIMD_FNMADD(KP959492973, T1L, T1f);
        T1V            = SIMD_FNMADD(KP959492973, T1U, T1f);
        ro[WS(os, 1)]  = SIMD_FMADD(KP989821441, TE, Tl);
        ro[WS(os, 10)] = SIMD_FNMADD(KP989821441, TE, Tl);
        T19            = SIMD_FNMADD(KP876768831, T18, T4);
        T1e            = SIMD_FNMADD(KP918985947, T1d, TA);
        io[WS(os, 7)]  = SIMD_FMADD(KP989821441, T1H, T1D);
        io[WS(os, 4)]  = SIMD_FNMADD(KP989821441, T1H, T1D);
        io[WS(os, 6)]  = SIMD_FNMADD(KP989821441, T1y, T1p);
        io[WS(os, 5)]  = SIMD_FMADD(KP989821441, T1y, T1p);
        io[WS(os, 8)]  = SIMD_FNMADD(KP989821441, T1Q, T1M);
        io[WS(os, 3)]  = SIMD_FMADD(KP989821441, T1Q, T1M);
        io[WS(os, 9)]  = SIMD_FMADD(KP989821441, T1Z, T1V);
        io[WS(os, 2)]  = SIMD_FNMADD(KP989821441, T1Z, T1V);
        T1a            = SIMD_FNMADD(KP959492973, T19, T1);
        ro[WS(os, 5)]  = SIMD_FMADD(KP989821441, T1e, T1a);
        ro[WS(os, 6)]  = SIMD_FNMADD(KP989821441, T1e, T1a);
    }
}

template <>
struct c2cb_traits<11, 1>
{
    static constexpr long_t flops           = 240;
    static constexpr long_t operations      = 130;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 142;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 1 -name c2cb
 * -standalone */

/*
 * This function contains 130 FP additions, 110 FP multiplications,
 * (or, 20 additions, 0 multiplications, 110 fused multiply/add),
 * 142 stack variables, 10 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 1>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1Z, T1V;
        {
            SIMD_FLOAT T1, T1f, T1u, T4, T1q, Tg, T1t, T7, T1s, Ta, T1r, Td,
                T1k, To, TA;
            SIMD_FLOAT T1g, T1F, T1w, TP, T1X, T17, TG, T1O, T26, TY, Ti, T1j,
                Tr, Ts, Tt;
            SIMD_FLOAT Tv, Tw, TK, T2, T3, Te, Tf, T5, T6, T8, T9, Tb, Tc, Ty,
                Tz;
            SIMD_FLOAT Tm, Tn, Tp, T1E, Tq, T1v, TO, T1W, T16, TF, T1N, T25, TX,
                Th, T1x;
            SIMD_FLOAT TH, T1G, TQ, Tj;
            T1  = ri[0];
            T1f = ii[0];
            T2  = ri[WS(is, 5)];
            T3  = ri[WS(is, 6)];
            Te  = ri[WS(is, 3)];
            Tf  = ri[WS(is, 8)];
            T5  = ri[WS(is, 1)];
            T6  = ri[WS(is, 10)];
            T8  = ri[WS(is, 4)];
            T9  = ri[WS(is, 7)];
            Tb  = ri[WS(is, 2)];
            Tc  = ri[WS(is, 9)];
            Tm  = ii[WS(is, 3)];
            Tn  = ii[WS(is, 8)];
            Ty  = ii[WS(is, 5)];
            T1u = T3 - T2;
            T4  = T2 + T3;
            T1q = Tf - Te;
            Tg  = Te + Tf;
            T1t = T6 - T5;
            T7  = T5 + T6;
            T1s = T9 - T8;
            Ta  = T8 + T9;
            T1r = Tc - Tb;
            Td  = Tb + Tc;
            T1k = Tm + Tn;
            To  = Tm - Tn;
            Tz  = ii[WS(is, 6)];
            Tp  = ii[WS(is, 2)];
            T1E = SIMD_FMADD(KP521108558, T1q, T1u);
            Tq  = ii[WS(is, 9)];
            T1v = SIMD_FMADD(KP521108558, T1u, T1t);
            TO  = SIMD_FNMADD(KP342584725, T7, Tg);
            T1W = SIMD_FMADD(KP521108558, T1s, T1q);
            T16 = SIMD_FNMADD(KP342584725, T4, Ta);
            TF  = SIMD_FNMADD(KP342584725, Ta, T7);
            T1N = SIMD_FNMADD(KP521108558, T1r, T1s);
            T25 = SIMD_FNMADD(KP521108558, T1t, T1r);
            TX  = SIMD_FNMADD(KP342584725, Td, T4);
            Th  = SIMD_FNMADD(KP342584725, Tg, Td);
            TA  = Ty - Tz;
            T1g = Ty + Tz;
            T1F = SIMD_FNMADD(KP715370323, T1E, T1r);
            T1w = SIMD_FMADD(KP715370323, T1v, T1s);
            TP  = SIMD_FNMADD(KP634356270, TO, T4);
            T1X = SIMD_FMADD(KP715370323, T1W, T1t);
            T17 = SIMD_FNMADD(KP634356270, T16, Tg);
            TG  = SIMD_FNMADD(KP634356270, TF, Td);
            T1O = SIMD_FMADD(KP715370323, T1N, T1u);
            T26 = SIMD_FNMADD(KP715370323, T25, T1q);
            TY  = SIMD_FNMADD(KP634356270, TX, T7);
            Ti  = SIMD_FNMADD(KP634356270, Th, Ta);
            T1j = Tp + Tq;
            Tr  = Tp - Tq;
            Ts  = ii[WS(is, 4)];
            Tt  = ii[WS(is, 7)];
            Tv  = ii[WS(is, 1)];
            Tw  = ii[WS(is, 10)];
            TK  = SIMD_FMADD(KP521108558, To, TA);
            T1x = SIMD_FMADD(KP830830026, T1w, T1r);
            TH  = SIMD_FNMADD(KP778434453, TG, T4);
            T1G = SIMD_FMADD(KP830830026, T1F, T1t);
            TQ  = SIMD_FNMADD(KP778434453, TP, Ta);
            Tj  = SIMD_FNMADD(KP778434453, Ti, T7);
            {
                SIMD_FLOAT T1i, Tu, T1h, Tx, T1y, T1H, T1Q, T1S, TJ, TS, Tl,
                    T1n, T21, T13, TU;
                SIMD_FLOAT T1A, T1J, T1c, TC, TN, T28, T1l, T1R, TL, TI, TR, Tk,
                    T1P, T27, T1m;
                SIMD_FLOAT T20, T12, TT, T1z, T1I, T1b, TB, TM, T18, T19, T10,
                    T1p, T23, T15, TW;
                SIMD_FLOAT T1C, T1L, T1e, TE, TV, T1B, T1K, T1d, TD, TZ, T1o,
                    T22, T14, T1D, T1M;
                SIMD_FLOAT T1U, T1T, T1Y, T1a, T11, T24;
                T1P           = SIMD_FNMADD(KP830830026, T1O, T1q);
                T1l           = SIMD_FNMADD(KP342584725, T1k, T1j);
                T1R           = SIMD_FNMADD(KP342584725, T1j, T1g);
                T1i           = Ts + Tt;
                Tu            = Ts - Tt;
                T1h           = Tv + Tw;
                Tx            = Tv - Tw;
                TL            = SIMD_FNMADD(KP715370323, TK, Tr);
                T1y           = SIMD_FMADD(KP918985947, T1x, T1q);
                TI            = SIMD_FNMADD(KP876768831, TH, Tg);
                T1H           = SIMD_FNMADD(KP918985947, T1G, T1s);
                TR            = SIMD_FNMADD(KP876768831, TQ, Td);
                Tk            = SIMD_FNMADD(KP876768831, Tj, T4);
                T1Q           = SIMD_FNMADD(KP918985947, T1P, T1t);
                T27           = SIMD_FNMADD(KP830830026, T26, T1s);
                T1m           = SIMD_FNMADD(KP634356270, T1l, T1i);
                T20           = SIMD_FNMADD(KP342584725, T1g, T1i);
                T12           = SIMD_FMADD(KP521108558, Tu, To);
                TT            = SIMD_FNMADD(KP521108558, Tr, Tu);
                T1z           = SIMD_FNMADD(KP342584725, T1i, T1h);
                T1I           = SIMD_FNMADD(KP342584725, T1h, T1k);
                T1S           = SIMD_FNMADD(KP634356270, T1R, T1h);
                T1b           = SIMD_FNMADD(KP521108558, Tx, Tr);
                TB            = SIMD_FMADD(KP521108558, TA, Tx);
                TM            = SIMD_FMADD(KP830830026, TL, Tx);
                TJ            = SIMD_FNMADD(KP959492973, TI, T1);
                TS            = SIMD_FNMADD(KP959492973, TR, T1);
                Tl            = SIMD_FNMADD(KP959492973, Tk, T1);
                T1n           = SIMD_FNMADD(KP778434453, T1m, T1h);
                T21           = SIMD_FNMADD(KP634356270, T20, T1k);
                T13           = SIMD_FMADD(KP715370323, T12, Tx);
                TU            = SIMD_FMADD(KP715370323, TT, TA);
                T1A           = SIMD_FNMADD(KP634356270, T1z, T1j);
                T1J           = SIMD_FNMADD(KP634356270, T1I, T1g);
                T1c           = SIMD_FNMADD(KP715370323, T1b, To);
                TC            = SIMD_FMADD(KP715370323, TB, Tu);
                TN            = SIMD_FNMADD(KP918985947, TM, Tu);
                T28           = SIMD_FNMADD(KP918985947, T27, T1u);
                T18           = SIMD_FNMADD(KP778434453, T17, Td);
                TZ            = SIMD_FNMADD(KP778434453, TY, Tg);
                T1o           = SIMD_FNMADD(KP876768831, T1n, T1g);
                T22           = SIMD_FNMADD(KP778434453, T21, T1j);
                T14           = SIMD_FNMADD(KP830830026, T13, TA);
                TV            = SIMD_FNMADD(KP830830026, TU, To);
                T1B           = SIMD_FNMADD(KP778434453, T1A, T1g);
                T1K           = SIMD_FNMADD(KP778434453, T1J, T1i);
                T1d           = SIMD_FNMADD(KP830830026, T1c, Tu);
                TD            = SIMD_FMADD(KP830830026, TC, Tr);
                ro[WS(os, 8)] = SIMD_FMADD(KP989821441, TN, TJ);
                ro[WS(os, 1)] = SIMD_FNMADD(KP989821441, TN, TJ);
                T19           = SIMD_FNMADD(KP876768831, T18, T7);
                T10           = SIMD_FNMADD(KP876768831, TZ, Ta);
                T1p           = SIMD_FNMADD(KP959492973, T1o, T1f);
                T23           = SIMD_FNMADD(KP876768831, T22, T1h);
                T15           = SIMD_FMADD(KP918985947, T14, Tr);
                TW            = SIMD_FNMADD(KP918985947, TV, Tx);
                T1C           = SIMD_FNMADD(KP876768831, T1B, T1k);
                T1L           = SIMD_FNMADD(KP876768831, T1K, T1j);
                T1e           = SIMD_FNMADD(KP918985947, T1d, TA);
                TE            = SIMD_FMADD(KP918985947, TD, To);
                T1T           = SIMD_FNMADD(KP778434453, T1S, T1k);
                T1Y           = SIMD_FNMADD(KP830830026, T1X, T1u);
                T1a           = SIMD_FNMADD(KP959492973, T19, T1);
                T11           = SIMD_FNMADD(KP959492973, T10, T1);
                io[WS(os, 9)] = SIMD_FNMADD(KP989821441, T1y, T1p);
                io[0]         = SIMD_FMADD(KP989821441, T1y, T1p);
                T24           = SIMD_FNMADD(KP959492973, T23, T1f);
                ro[WS(os, 2)] = SIMD_FMADD(KP989821441, TW, TS);
                ro[WS(os, 7)] = SIMD_FNMADD(KP989821441, TW, TS);
                T1D           = SIMD_FNMADD(KP959492973, T1C, T1f);
                T1M           = SIMD_FNMADD(KP959492973, T1L, T1f);
                ro[0]         = SIMD_FMADD(KP989821441, TE, Tl);
                ro[WS(os, 9)] = SIMD_FNMADD(KP989821441, TE, Tl);
                T1U           = SIMD_FNMADD(KP876768831, T1T, T1i);
                ro[WS(os, 4)] = SIMD_FMADD(KP989821441, T1e, T1a);
                ro[WS(os, 5)] = SIMD_FNMADD(KP989821441, T1e, T1a);
                ro[WS(os, 6)] = SIMD_FMADD(KP989821441, T15, T11);
                ro[WS(os, 3)] = SIMD_FNMADD(KP989821441, T15, T11);
                io[WS(os, 5)] = SIMD_FNMADD(KP989821441, T28, T24);
                io[WS(os, 4)] = SIMD_FMADD(KP989821441, T28, T24);
                T1Z           = SIMD_FMADD(KP918985947, T1Y, T1r);
                io[WS(os, 8)] = SIMD_FMADD(KP989821441, T1H, T1D);
                io[WS(os, 1)] = SIMD_FNMADD(KP989821441, T1H, T1D);
                io[WS(os, 7)] = SIMD_FNMADD(KP989821441, T1Q, T1M);
                io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1Q, T1M);
                T1V           = SIMD_FNMADD(KP959492973, T1U, T1f);
            }
        }
        io[WS(os, 6)] = SIMD_FMADD(KP989821441, T1Z, T1V);
        io[WS(os, 3)] = SIMD_FNMADD(KP989821441, T1Z, T1V);
    }
}

template <>
struct c2cb_traits<11, 2>
{
    static constexpr long_t flops           = 236;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 151;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 2 -name c2cb
 * -standalone */

/*
 * This function contains 128 FP additions, 108 FP multiplications,
 * (or, 20 additions, 0 multiplications, 108 fused multiply/add),
 * 151 stack variables, 19 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 2>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T1f, T1s, Ta, T1i, Tu, T1r, Td, T1j, Tr, T1q, Tg, T1k,
            To, T1W;
        SIMD_FLOAT T1E, T1b, TT, T1u, T4, T1h, Tx, T7, T1t, TA, T1g, T1l, Ti,
            T2, T3;
        SIMD_FLOAT Tv, Tw, T5, T6, Ty, Tz, T8, T9, Ts, Tt, Tb, Tc, Tp, Tq, Te;
        SIMD_FLOAT Tf, Tm, Tn, Th;
        T1  = ri[0];
        T1f = ii[0];
        T8  = ri[WS(is, 2)];
        T9  = ri[WS(is, 9)];
        Ts  = ii[WS(is, 2)];
        Tt  = ii[WS(is, 9)];
        Tb  = ri[WS(is, 1)];
        Tc  = ri[WS(is, 10)];
        Tp  = ii[WS(is, 1)];
        Tq  = ii[WS(is, 10)];
        Te  = ri[WS(is, 4)];
        Tf  = ri[WS(is, 7)];
        Tm  = ii[WS(is, 7)];
        Tn  = ii[WS(is, 4)];
        T2  = ri[WS(is, 3)];
        T1s = T9 - T8;
        Ta  = T8 + T9;
        T1i = Ts + Tt;
        Tu  = Ts - Tt;
        T1r = Tc - Tb;
        Td  = Tb + Tc;
        T1j = Tp + Tq;
        Tr  = Tp - Tq;
        T1q = Te - Tf;
        Tg  = Te + Tf;
        T1k = Tm + Tn;
        To  = Tm - Tn;
        T3  = ri[WS(is, 8)];
        Tv  = ii[WS(is, 6)];
        Tw  = ii[WS(is, 5)];
        T5  = ri[WS(is, 5)];
        T6  = ri[WS(is, 6)];
        Ty  = ii[WS(is, 8)];
        Tz  = ii[WS(is, 3)];
        T1W = SIMD_FNMADD(KP521108558, T1r, T1s);
        T1E = SIMD_FMADD(KP521108558, T1s, T1q);
        Th  = SIMD_FNMADD(KP342584725, Tg, Td);
        T1b = SIMD_FNMADD(KP521108558, Tr, Tu);
        TT  = SIMD_FMADD(KP521108558, Tu, To);
        T1u = T2 - T3;
        T4  = T2 + T3;
        T1h = Tv + Tw;
        Tx  = Tv - Tw;
        T7  = T5 + T6;
        T1t = T5 - T6;
        TA  = Ty - Tz;
        T1g = Ty + Tz;
        T1l = SIMD_FNMADD(KP342584725, T1k, T1j);
        Ti  = SIMD_FNMADD(KP634356270, Th, Ta);
        {
            SIMD_FLOAT T1Z, TW, T1H, T1e, Tl, T1Q, T1y, T15, TE, T1C, T23, T1p,
                TS, T1V, T1M;
            SIMD_FLOAT TJ, T1a, T11, T1N, T1X, TO, T1R, T1I, TU, TF, T16, TX,
                T1v, T1F, T12;
            SIMD_FLOAT T1c, TB, T1z, T20, T1m, Tj, T1O, T1Y, TP, T1S, T1J, TV,
                TG, TK, T25;
            SIMD_FLOAT T1D, T24, TL, T26, TM, T27, TN, T28;
            T1N = SIMD_FMADD(KP521108558, T1q, T1u);
            T1X = SIMD_FMADD(KP715370323, T1W, T1u);
            TO  = SIMD_FNMADD(KP342584725, Td, T4);
            T1R = SIMD_FNMADD(KP342584725, T1h, T1k);
            T1I = SIMD_FNMADD(KP342584725, T1i, T1h);
            TU  = SIMD_FMADD(KP715370323, TT, Tx);
            TF  = SIMD_FNMADD(KP505141613, T4, Tx);
            T16 = SIMD_FNMADD(KP342584725, T7, Tg);
            TX  = SIMD_FNMADD(KP342584725, Ta, T7);
            T1v = SIMD_FMADD(KP521108558, T1u, T1t);
            T1F = SIMD_FMADD(KP715370323, T1E, T1t);
            T12 = SIMD_FMADD(KP521108558, To, TA);
            T1c = SIMD_FMADD(KP715370323, T1b, TA);
            TB  = SIMD_FMADD(KP521108558, TA, Tx);
            T1z = SIMD_FNMADD(KP342584725, T1j, T1g);
            T20 = SIMD_FNMADD(KP505141613, T1g, T1t);
            T1m = SIMD_FNMADD(KP634356270, T1l, T1i);
            Tj  = SIMD_FNMADD(KP778434453, Ti, T7);
            T1O = SIMD_FNMADD(KP715370323, T1N, T1r);
            T1Y = SIMD_FNMADD(KP830830026, T1X, T1q);
            TP  = SIMD_FNMADD(KP634356270, TO, T7);
            T1S = SIMD_FNMADD(KP634356270, T1R, T1g);
            T1J = SIMD_FNMADD(KP634356270, T1I, T1j);
            TV  = SIMD_FNMADD(KP830830026, TU, TA);
            TG  = SIMD_FMADD(KP678195414, TF, Ta);
            {
                SIMD_FLOAT T17, TY, T1w, T1G, T13, T1d, TC, T1A, T21, T1n, Tk,
                    T1P, TQ, T1T, T1K;
                SIMD_FLOAT TH, T18, TZ, T1x, T14, TD, T1B, T22, T1o, TR, T1U,
                    T1L, TI, T19, T10;
                T17 = SIMD_FNMADD(KP634356270, T16, T4);
                TY  = SIMD_FNMADD(KP634356270, TX, Td);
                T1w = SIMD_FMADD(KP715370323, T1v, T1s);
                T1G = SIMD_FNMADD(KP830830026, T1F, T1u);
                T13 = SIMD_FNMADD(KP715370323, T12, Tr);
                T1d = SIMD_FNMADD(KP830830026, T1c, To);
                TC  = SIMD_FMADD(KP715370323, TB, Tu);
                T1A = SIMD_FNMADD(KP634356270, T1z, T1h);
                T21 = SIMD_FMADD(KP678195414, T20, T1i);
                T1n = SIMD_FNMADD(KP778434453, T1m, T1h);
                Tk  = SIMD_FNMADD(KP876768831, Tj, T4);
                T1P = SIMD_FMADD(KP830830026, T1O, T1t);
                T1Z = SIMD_FNMADD(KP918985947, T1Y, T1t);
                TQ  = SIMD_FNMADD(KP778434453, TP, Tg);
                T1T = SIMD_FNMADD(KP778434453, T1S, T1i);
                T1K = SIMD_FNMADD(KP778434453, T1J, T1g);
                TW  = SIMD_FMADD(KP918985947, TV, Tr);
                TH  = SIMD_FNMADD(KP768375231, TG, Tr);
                T18 = SIMD_FNMADD(KP778434453, T17, Ta);
                TZ  = SIMD_FNMADD(KP778434453, TY, T4);
                T1x = SIMD_FMADD(KP830830026, T1w, T1r);
                T1H = SIMD_FMADD(KP918985947, T1G, T1r);
                T14 = SIMD_FMADD(KP830830026, T13, Tx);
                T1e = SIMD_FNMADD(KP918985947, T1d, Tx);
                TD  = SIMD_FMADD(KP830830026, TC, Tr);
                T1B = SIMD_FNMADD(KP778434453, T1A, T1k);
                T22 = SIMD_FNMADD(KP768375231, T21, T1r);
                T1o = SIMD_FNMADD(KP876768831, T1n, T1g);
                Tl  = SIMD_FNMADD(KP959492973, Tk, T1);
                T1Q = SIMD_FNMADD(KP918985947, T1P, T1s);
                TR  = SIMD_FNMADD(KP876768831, TQ, Ta);
                T1U = SIMD_FNMADD(KP876768831, T1T, T1j);
                T1L = SIMD_FNMADD(KP876768831, T1K, T1k);
                TI  = SIMD_FMADD(KP825581363, TH, Tg);
                T19 = SIMD_FNMADD(KP876768831, T18, Td);
                T10 = SIMD_FNMADD(KP876768831, TZ, Tg);
                T1y = SIMD_FMADD(KP918985947, T1x, T1q);
                T15 = SIMD_FNMADD(KP918985947, T14, Tu);
                TE  = SIMD_FMADD(KP918985947, TD, To);
                T1C = SIMD_FNMADD(KP876768831, T1B, T1i);
                T23 = SIMD_FMADD(KP825581363, T22, T1k);
                T1p = SIMD_FNMADD(KP959492973, T1o, T1f);
                TS  = SIMD_FNMADD(KP959492973, TR, T1);
                T1V = SIMD_FNMADD(KP959492973, T1U, T1f);
                T1M = SIMD_FNMADD(KP959492973, T1L, T1f);
                TJ  = SIMD_FNMADD(KP866504932, TI, To);
                T1a = SIMD_FNMADD(KP959492973, T19, T1);
                T11 = SIMD_FNMADD(KP959492973, T10, T1);
            }
            ro[0]         = SIMD_FMADD(KP989821441, TE, Tl);
            ro[WS(os, 7)] = SIMD_FNMADD(KP989821441, TE, Tl);
            T1D           = SIMD_FNMADD(KP959492973, T1C, T1f);
            T24           = SIMD_FNMADD(KP866504932, T23, T1q);
            io[WS(os, 7)] = SIMD_FNMADD(KP989821441, T1y, T1p);
            io[0]         = SIMD_FMADD(KP989821441, T1y, T1p);
            ro[WS(os, 1)] = SIMD_FMADD(KP989821441, TW, TS);
            ro[WS(os, 6)] = SIMD_FNMADD(KP989821441, TW, TS);
            io[WS(os, 4)] = SIMD_FMADD(KP989821441, T1Z, T1V);
            io[WS(os, 3)] = SIMD_FNMADD(KP989821441, T1Z, T1V);
            io[WS(os, 5)] = SIMD_FMADD(KP989821441, T1Q, T1M);
            io[WS(os, 2)] = SIMD_FNMADD(KP989821441, T1Q, T1M);
            TK            = SIMD_FMADD(KP898361248, TJ, Td);
            ro[WS(os, 4)] = SIMD_FMADD(KP989821441, T1e, T1a);
            ro[WS(os, 3)] = SIMD_FNMADD(KP989821441, T1e, T1a);
            ro[WS(os, 5)] = SIMD_FMADD(KP989821441, T15, T11);
            ro[WS(os, 2)] = SIMD_FNMADD(KP989821441, T15, T11);
            io[WS(os, 6)] = SIMD_FNMADD(KP989821441, T1H, T1D);
            io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1H, T1D);
            T25           = SIMD_FMADD(KP898361248, T24, T1j);
            TL            = SIMD_FNMADD(KP924828432, TK, Tu);
            T26           = SIMD_FNMADD(KP924828432, T25, T1s);
            TM            = SIMD_FMADD(KP948034035, TL, T7);
            T27           = SIMD_FMADD(KP948034035, T26, T1h);
            TN            = SIMD_FNMADD(KP969359657, TM, TA);
            T28           = SIMD_FNMADD(KP969359657, T27, T1u);
            ro[WS(os, 8)] = SIMD_FMADD(KP989821441, TN, T1);
            io[WS(os, 8)] = SIMD_FMADD(KP989821441, T28, T1f);
        }
    }
}

template <>
struct c2cb_traits<11, 3>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 126;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 151;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 3 -name c2cb
 * -standalone */

/*
 * This function contains 126 FP additions, 106 FP multiplications,
 * (or, 20 additions, 0 multiplications, 106 fused multiply/add),
 * 151 stack variables, 19 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 3>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    {
        SIMD_FLOAT T1, T1f, T1u, T4, T1g, TA, T1q, Tg, T1k, To, Tu, T1i, T1h,
            Tx, T1N;
        SIMD_FLOAT T12, Td, T1r, TB, T1I, T1z, T1t, T7, Ta, T1s, T1j, Tr, Tb,
            Tc, T5;
        SIMD_FLOAT T6, T8, T9, Tp, Tq, T2, T3, Ty, Tz, Te, Tf, Tm, Tn, Ts, Tt;
        SIMD_FLOAT Tv, Tw;
        T1  = ri[0];
        T1f = ii[0];
        T2  = ri[WS(is, 2)];
        T3  = ri[WS(is, 9)];
        Ty  = ii[WS(is, 9)];
        Tz  = ii[WS(is, 2)];
        Te  = ri[WS(is, 1)];
        Tf  = ri[WS(is, 10)];
        Tm  = ii[WS(is, 1)];
        Tn  = ii[WS(is, 10)];
        Ts  = ii[WS(is, 5)];
        Tt  = ii[WS(is, 6)];
        Tv  = ii[WS(is, 4)];
        Tw  = ii[WS(is, 7)];
        Tb  = ri[WS(is, 3)];
        T1u = T2 - T3;
        T4  = T2 + T3;
        T1g = Ty + Tz;
        TA  = Ty - Tz;
        T1q = Tf - Te;
        Tg  = Te + Tf;
        T1k = Tm + Tn;
        To  = Tm - Tn;
        Tu  = Ts - Tt;
        T1i = Ts + Tt;
        Tc  = ri[WS(is, 8)];
        T1h = Tv + Tw;
        Tx  = Tv - Tw;
        T5  = ri[WS(is, 4)];
        T6  = ri[WS(is, 7)];
        T8  = ri[WS(is, 5)];
        T9  = ri[WS(is, 6)];
        Tp  = ii[WS(is, 8)];
        Tq  = ii[WS(is, 3)];
        T1N = SIMD_FMADD(KP521108558, T1q, T1u);
        T12 = SIMD_FMADD(KP521108558, To, TA);
        Td  = Tb + Tc;
        T1r = Tb - Tc;
        TB  = SIMD_FMADD(KP521108558, TA, Tx);
        T1I = SIMD_FNMADD(KP342584725, T1i, T1h);
        T1z = SIMD_FNMADD(KP342584725, T1g, T1i);
        T1t = T6 - T5;
        T7  = T5 + T6;
        Ta  = T8 + T9;
        T1s = T9 - T8;
        T1j = Tp + Tq;
        Tr  = Tp - Tq;
        {
            SIMD_FLOAT T1Q, TE, T15, T1D, T1y, T1H, T10, TI, T1o, T1M, T23, TN,
                T19, T1V, Tl;
            SIMD_FLOAT TS, T1O, T1R, Th, TO, TC, T1A, T1v, T1E, TX, TF, T1l,
                T1J, T20, T13;
            SIMD_FLOAT TK, T16, T1P, T1S, T11, TJ, T1p, T24, T1a, T1W, TT, T25,
                T1b, T1X, TU;
            SIMD_FLOAT T26, T1c, T1Y, TV, T27, T1d, T1Z, TW, T28, T1e;
            T1O = SIMD_FNMADD(KP715370323, T1N, T1r);
            T1R = SIMD_FMADD(KP505141613, T1h, T1r);
            Th  = SIMD_FNMADD(KP342584725, Tg, Td);
            TO  = SIMD_FMADD(KP505141613, Td, Tu);
            TC  = SIMD_FMADD(KP715370323, TB, Tu);
            T1A = SIMD_FNMADD(KP634356270, T1z, T1k);
            T1v = SIMD_FMADD(KP521108558, T1u, T1t);
            T1E = SIMD_FNMADD(KP521108558, T1t, T1r);
            TX  = SIMD_FNMADD(KP342584725, Ta, T7);
            TF  = SIMD_FNMADD(KP342584725, T4, Ta);
            T1l = SIMD_FNMADD(KP342584725, T1k, T1j);
            T1J = SIMD_FNMADD(KP634356270, T1I, T1j);
            T20 = SIMD_FMADD(KP505141613, T1j, T1s);
            T13 = SIMD_FNMADD(KP715370323, T12, Tr);
            TK  = SIMD_FNMADD(KP521108558, Tx, Tr);
            T16 = SIMD_FMADD(KP505141613, T7, Tr);
            T1P = SIMD_FMADD(KP830830026, T1O, T1t);
            T1S = SIMD_FNMADD(KP678195414, T1R, T1k);
            {
                SIMD_FLOAT Ti, TP, TD, T1B, T1w, T1F, TY, TG, T1m, T1K, T21,
                    T14, TL, T17, T1T;
                SIMD_FLOAT Tj, TQ, T1C, T1x, T1G, TZ, TH, T1n, T1L, T22, TM,
                    T18, T1U, Tk, TR;
                Ti  = SIMD_FNMADD(KP634356270, Th, Ta);
                TP  = SIMD_FNMADD(KP678195414, TO, T4);
                TD  = SIMD_FMADD(KP830830026, TC, Tr);
                T1B = SIMD_FNMADD(KP778434453, T1A, T1j);
                T1w = SIMD_FMADD(KP715370323, T1v, T1s);
                T1F = SIMD_FNMADD(KP715370323, T1E, T1q);
                TY  = SIMD_FNMADD(KP634356270, TX, Td);
                TG  = SIMD_FNMADD(KP634356270, TF, Tg);
                T1m = SIMD_FNMADD(KP634356270, T1l, T1i);
                T1K = SIMD_FNMADD(KP778434453, T1J, T1g);
                T21 = SIMD_FNMADD(KP678195414, T20, T1g);
                T14 = SIMD_FMADD(KP830830026, T13, Tx);
                TL  = SIMD_FNMADD(KP715370323, TK, To);
                T17 = SIMD_FNMADD(KP678195414, T16, Tg);
                T1Q = SIMD_FNMADD(KP918985947, T1P, T1s);
                T1T = SIMD_FMADD(KP768375231, T1S, T1s);
                Tj  = SIMD_FNMADD(KP778434453, Ti, T7);
                TQ  = SIMD_FNMADD(KP768375231, TP, To);
                TE  = SIMD_FMADD(KP918985947, TD, To);
                T1C = SIMD_FNMADD(KP876768831, T1B, T1h);
                T1x = SIMD_FMADD(KP830830026, T1w, T1r);
                T1G = SIMD_FNMADD(KP830830026, T1F, T1s);
                TZ  = SIMD_FNMADD(KP778434453, TY, T4);
                TH  = SIMD_FNMADD(KP778434453, TG, Td);
                T1n = SIMD_FNMADD(KP778434453, T1m, T1h);
                T1L = SIMD_FNMADD(KP876768831, T1K, T1k);
                T22 = SIMD_FNMADD(KP768375231, T21, T1q);
                T15 = SIMD_FNMADD(KP918985947, T14, Tu);
                TM  = SIMD_FNMADD(KP830830026, TL, Tu);
                T18 = SIMD_FMADD(KP768375231, T17, Tu);
                T1U = SIMD_FNMADD(KP825581363, T1T, T1g);
                Tk  = SIMD_FNMADD(KP876768831, Tj, T4);
                TR  = SIMD_FMADD(KP825581363, TQ, T7);
                T1D = SIMD_FNMADD(KP959492973, T1C, T1f);
                T1y = SIMD_FMADD(KP918985947, T1x, T1q);
                T1H = SIMD_FNMADD(KP918985947, T1G, T1u);
                T10 = SIMD_FNMADD(KP876768831, TZ, Tg);
                TI  = SIMD_FNMADD(KP876768831, TH, T7);
                T1o = SIMD_FNMADD(KP876768831, T1n, T1g);
                T1M = SIMD_FNMADD(KP959492973, T1L, T1f);
                T23 = SIMD_FMADD(KP825581363, T22, T1h);
                TN  = SIMD_FNMADD(KP918985947, TM, TA);
                T19 = SIMD_FNMADD(KP825581363, T18, T4);
                T1V = SIMD_FNMADD(KP866504932, T1U, T1u);
                Tl  = SIMD_FNMADD(KP959492973, Tk, T1);
                TS  = SIMD_FMADD(KP866504932, TR, Tx);
            }
            io[WS(os, 4)] = SIMD_FNMADD(KP989821441, T1H, T1D);
            io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1H, T1D);
            T11           = SIMD_FNMADD(KP959492973, T10, T1);
            TJ            = SIMD_FNMADD(KP959492973, TI, T1);
            T1p           = SIMD_FNMADD(KP959492973, T1o, T1f);
            io[WS(os, 3)] = SIMD_FNMADD(KP989821441, T1Q, T1M);
            io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1Q, T1M);
            T24           = SIMD_FMADD(KP866504932, T23, T1t);
            T1a           = SIMD_FNMADD(KP866504932, T19, TA);
            T1W           = SIMD_FMADD(KP898361248, T1V, T1i);
            ro[0]         = SIMD_FMADD(KP989821441, TE, Tl);
            ro[WS(os, 5)] = SIMD_FNMADD(KP989821441, TE, Tl);
            TT            = SIMD_FNMADD(KP898361248, TS, Tg);
            ro[WS(os, 2)] = SIMD_FMADD(KP989821441, T15, T11);
            ro[WS(os, 3)] = SIMD_FNMADD(KP989821441, T15, T11);
            ro[WS(os, 1)] = SIMD_FMADD(KP989821441, TN, TJ);
            ro[WS(os, 4)] = SIMD_FNMADD(KP989821441, TN, TJ);
            io[WS(os, 5)] = SIMD_FNMADD(KP989821441, T1y, T1p);
            io[0]         = SIMD_FMADD(KP989821441, T1y, T1p);
            T25           = SIMD_FNMADD(KP898361248, T24, T1k);
            T1b           = SIMD_FMADD(KP898361248, T1a, Ta);
            T1X           = SIMD_FNMADD(KP924828432, T1W, T1q);
            TU            = SIMD_FMADD(KP924828432, TT, TA);
            T26           = SIMD_FMADD(KP924828432, T25, T1u);
            T1c           = SIMD_FNMADD(KP924828432, T1b, To);
            T1Y           = SIMD_FMADD(KP948034035, T1X, T1j);
            TV            = SIMD_FNMADD(KP948034035, TU, Ta);
            T27           = SIMD_FNMADD(KP948034035, T26, T1i);
            T1d           = SIMD_FMADD(KP948034035, T1c, Td);
            T1Z           = SIMD_FNMADD(KP969359657, T1Y, T1t);
            TW            = SIMD_FNMADD(KP969359657, TV, Tr);
            T28           = SIMD_FNMADD(KP969359657, T27, T1r);
            T1e           = SIMD_FNMADD(KP969359657, T1d, Tx);
            io[WS(os, 6)] = SIMD_FMADD(KP989821441, T1Z, T1f);
            ro[WS(os, 7)] = SIMD_FMADD(KP989821441, TW, T1);
            io[WS(os, 7)] = SIMD_FMADD(KP989821441, T28, T1f);
            ro[WS(os, 6)] = SIMD_FMADD(KP989821441, T1e, T1);
        }
    }
}

template <>
struct c2cb_traits<11, 4>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 124;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 151;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 4 -name c2cb
 * -standalone */

/*
 * This function contains 124 FP additions, 104 FP multiplications,
 * (or, 20 additions, 0 multiplications, 104 fused multiply/add),
 * 151 stack variables, 19 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 4>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T1f, T4, T1i, T7, T1q, T1k, Ts, T1s, Tv, Td, T1u, T1r,
            Tj, T1I;
        SIMD_FLOAT Tn, Tw, To, Ta, T1h, TF, T1E, T12, T1j, Tg, TX, T1g, Tm, Te,
            Tf;
        SIMD_FLOAT Tk, Tl, T2, T3, T5, T6, Tq, Tr, Tt, Tu, T8, T9, Tb, Tc, Th;
        SIMD_FLOAT Ti, Tp, T1t, T1J, T20, T16, TG, T13, T1l, TK, T1z;
        T1  = ri[0];
        T1f = ii[0];
        T2  = ii[WS(is, 10)];
        T3  = ii[WS(is, 1)];
        T5  = ri[WS(is, 2)];
        T6  = ri[WS(is, 9)];
        Tq  = ii[WS(is, 9)];
        Tr  = ii[WS(is, 2)];
        Tt  = ri[WS(is, 1)];
        Tu  = ri[WS(is, 10)];
        Tb  = ri[WS(is, 4)];
        Tc  = ri[WS(is, 7)];
        Th  = ri[WS(is, 5)];
        Ti  = ri[WS(is, 6)];
        T8  = ii[WS(is, 8)];
        T4  = T2 - T3;
        T1i = T3 + T2;
        T7  = T5 + T6;
        T1q = T5 - T6;
        T1k = Tq + Tr;
        Ts  = Tq - Tr;
        T1s = Tt - Tu;
        Tv  = Tt + Tu;
        Td  = Tb + Tc;
        T1u = Tc - Tb;
        T9  = ii[WS(is, 3)];
        T1r = Th - Ti;
        Tj  = Th + Ti;
        Te  = ii[WS(is, 6)];
        Tf  = ii[WS(is, 5)];
        T1I = SIMD_FMADD(KP505141613, T1i, T1q);
        Tk  = ii[WS(is, 4)];
        Tl  = ii[WS(is, 7)];
        Tn  = ri[WS(is, 3)];
        Tw  = SIMD_FMADD(KP505141613, Tv, Ts);
        To  = ri[WS(is, 8)];
        Ta  = T8 - T9;
        T1h = T9 + T8;
        TF  = SIMD_FNMADD(KP342584725, T7, Tj);
        T1E = SIMD_FNMADD(KP521108558, T1s, T1q);
        T12 = SIMD_FNMADD(KP521108558, T4, Ts);
        T1j = Te + Tf;
        Tg  = Te - Tf;
        TX  = SIMD_FNMADD(KP342584725, Tj, Td);
        T1g = Tk + Tl;
        Tm  = Tk - Tl;
        Tp  = Tn + To;
        T1t = Tn - To;
        T1J = SIMD_FNMADD(KP678195414, T1I, T1h);
        T20 = SIMD_FNMADD(KP505141613, T1h, T1r);
        T16 = SIMD_FMADD(KP505141613, Td, Ta);
        TG  = SIMD_FNMADD(KP634356270, TF, Tv);
        T13 = SIMD_FNMADD(KP715370323, T12, Ta);
        T1l = SIMD_FNMADD(KP342584725, T1k, T1j);
        TK  = SIMD_FNMADD(KP521108558, Tm, Ta);
        T1z = SIMD_FNMADD(KP342584725, T1j, T1g);
        {
            SIMD_FLOAT T15, T1H, TJ, T1o, TN, T1C, T1y, T1U, TA, T11, TR, T1N,
                T24, T1a, T1v;
            SIMD_FLOAT T1F, T1R, Tx, TY, T1D, T1V, TB, TS, T1O, T25, T1b, T1p,
                T1W, TC, TT;
            SIMD_FLOAT T1P, T26, T1c, T1X, TD, TU, T1Q, T27, T1d, T1Y, TE, TV,
                T28, T1e, T1Z;
            SIMD_FLOAT TW;
            T1v = SIMD_FNMADD(KP521108558, T1u, T1t);
            T1F = SIMD_FNMADD(KP715370323, T1E, T1t);
            T1R = SIMD_FMADD(KP505141613, T1g, T1t);
            Tx  = SIMD_FNMADD(KP678195414, Tw, Tp);
            TY  = SIMD_FNMADD(KP634356270, TX, Tp);
            {
                SIMD_FLOAT TO, T1K, T21, T17, TH, T14, T1m, TL, T1A, T1w, T1G,
                    T1S, Ty, TZ, TP;
                SIMD_FLOAT T1L, T22, T18, TI, T1n, TM, T1B, T1x, T1T, Tz, T10,
                    TQ, T1M, T23, T19;
                TO  = SIMD_FNMADD(KP505141613, Tp, Tg);
                T1K = SIMD_FNMADD(KP768375231, T1J, T1u);
                T21 = SIMD_FMADD(KP678195414, T20, T1k);
                T17 = SIMD_FNMADD(KP678195414, T16, Tv);
                TH  = SIMD_FNMADD(KP778434453, TG, Tp);
                T14 = SIMD_FMADD(KP830830026, T13, Tm);
                T1m = SIMD_FNMADD(KP634356270, T1l, T1i);
                TL  = SIMD_FMADD(KP715370323, TK, T4);
                T1A = SIMD_FNMADD(KP634356270, T1z, T1h);
                T1w = SIMD_FMADD(KP715370323, T1v, T1s);
                T1G = SIMD_FMADD(KP830830026, T1F, T1u);
                T1S = SIMD_FNMADD(KP678195414, T1R, T1i);
                Ty  = SIMD_FNMADD(KP768375231, Tx, Tm);
                TZ  = SIMD_FNMADD(KP778434453, TY, T7);
                TP  = SIMD_FMADD(KP678195414, TO, T7);
                T1L = SIMD_FMADD(KP825581363, T1K, T1j);
                T22 = SIMD_FMADD(KP768375231, T21, T1s);
                T18 = SIMD_FNMADD(KP768375231, T17, Tg);
                TI  = SIMD_FNMADD(KP876768831, TH, Td);
                T15 = SIMD_FMADD(KP918985947, T14, Tg);
                T1n = SIMD_FNMADD(KP778434453, T1m, T1h);
                TM  = SIMD_FNMADD(KP830830026, TL, Tg);
                T1B = SIMD_FNMADD(KP778434453, T1A, T1k);
                T1x = SIMD_FNMADD(KP830830026, T1w, T1r);
                T1H = SIMD_FMADD(KP918985947, T1G, T1r);
                T1T = SIMD_FNMADD(KP768375231, T1S, T1r);
                Tz  = SIMD_FMADD(KP825581363, Ty, Tj);
                T10 = SIMD_FNMADD(KP876768831, TZ, Tv);
                TQ  = SIMD_FMADD(KP768375231, TP, T4);
                T1M = SIMD_FNMADD(KP866504932, T1L, T1r);
                T23 = SIMD_FNMADD(KP825581363, T22, T1g);
                T19 = SIMD_FMADD(KP825581363, T18, T7);
                TJ  = SIMD_FNMADD(KP959492973, TI, T1);
                T1o = SIMD_FNMADD(KP876768831, T1n, T1g);
                TN  = SIMD_FMADD(KP918985947, TM, Ts);
                T1C = SIMD_FNMADD(KP876768831, T1B, T1i);
                T1y = SIMD_FMADD(KP918985947, T1x, T1q);
                T1U = SIMD_FMADD(KP825581363, T1T, T1k);
                TA  = SIMD_FNMADD(KP866504932, Tz, Tg);
                T11 = SIMD_FNMADD(KP959492973, T10, T1);
                TR  = SIMD_FNMADD(KP825581363, TQ, Td);
                T1N = SIMD_FMADD(KP898361248, T1M, T1g);
                T24 = SIMD_FMADD(KP866504932, T23, T1u);
                T1a = SIMD_FNMADD(KP866504932, T19, Ts);
            }
            T1p           = SIMD_FNMADD(KP959492973, T1o, T1f);
            ro[0]         = SIMD_FMADD(KP989821441, TN, TJ);
            ro[WS(os, 3)] = SIMD_FNMADD(KP989821441, TN, TJ);
            T1D           = SIMD_FNMADD(KP959492973, T1C, T1f);
            T1V           = SIMD_FNMADD(KP866504932, T1U, T1q);
            TB            = SIMD_FMADD(KP898361248, TA, Td);
            ro[WS(os, 2)] = SIMD_FMADD(KP989821441, T15, T11);
            ro[WS(os, 1)] = SIMD_FNMADD(KP989821441, T15, T11);
            TS            = SIMD_FMADD(KP866504932, TR, Tm);
            T1O           = SIMD_FNMADD(KP924828432, T1N, T1t);
            T25           = SIMD_FNMADD(KP898361248, T24, T1i);
            T1b           = SIMD_FMADD(KP898361248, T1a, Tj);
            io[WS(os, 3)] = SIMD_FNMADD(KP989821441, T1y, T1p);
            io[0]         = SIMD_FMADD(KP989821441, T1y, T1p);
            io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1H, T1D);
            io[WS(os, 1)] = SIMD_FNMADD(KP989821441, T1H, T1D);
            T1W           = SIMD_FMADD(KP898361248, T1V, T1j);
            TC            = SIMD_FNMADD(KP924828432, TB, Ta);
            TT            = SIMD_FNMADD(KP898361248, TS, Tv);
            T1P           = SIMD_FMADD(KP948034035, T1O, T1k);
            T26           = SIMD_FMADD(KP924828432, T25, T1q);
            T1c           = SIMD_FMADD(KP924828432, T1b, T4);
            T1X           = SIMD_FMADD(KP924828432, T1W, T1s);
            TD            = SIMD_FMADD(KP948034035, TC, T7);
            TU            = SIMD_FMADD(KP924828432, TT, Ts);
            T1Q           = SIMD_FNMADD(KP969359657, T1P, T1s);
            T27           = SIMD_FNMADD(KP948034035, T26, T1j);
            T1d           = SIMD_FNMADD(KP948034035, T1c, Tp);
            T1Y           = SIMD_FNMADD(KP948034035, T1X, T1h);
            TE            = SIMD_FNMADD(KP969359657, TD, T4);
            TV            = SIMD_FNMADD(KP948034035, TU, Tj);
            io[WS(os, 4)] = SIMD_FMADD(KP989821441, T1Q, T1f);
            T28           = SIMD_FNMADD(KP969359657, T27, T1t);
            T1e           = SIMD_FNMADD(KP969359657, T1d, Tm);
            T1Z           = SIMD_FNMADD(KP969359657, T1Y, T1u);
            ro[WS(os, 4)] = SIMD_FMADD(KP989821441, TE, T1);
            TW            = SIMD_FNMADD(KP969359657, TV, Ta);
            io[WS(os, 6)] = SIMD_FMADD(KP989821441, T28, T1f);
            ro[WS(os, 5)] = SIMD_FMADD(KP989821441, T1e, T1);
            io[WS(os, 5)] = SIMD_FMADD(KP989821441, T1Z, T1f);
            ro[WS(os, 6)] = SIMD_FMADD(KP989821441, TW, T1);
        }
    }
}

template <>
struct c2cb_traits<11, 5>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 122;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 121;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 5 -name c2cb
 * -standalone */

/*
 * This function contains 122 FP additions, 102 FP multiplications,
 * (or, 20 additions, 0 multiplications, 102 fused multiply/add),
 * 121 stack variables, 19 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 5>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP959492973, +0.959492973614497389890368057066327699062454848);
    DK(KP918985947, +0.918985947228994779780736114132655398124909697);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP876768831, +0.876768831002589333891339807079336796764054852);
    DK(KP830830026, +0.830830026003772851058548298459246407048009821);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP778434453, +0.778434453334651800608337670740821884709317477);
    DK(KP715370323, +0.715370323453429719112414662767260662417897278);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP634356270, +0.634356270682424498893150776899916060542806975);
    DK(KP521108558, +0.521108558113202722944698153526659300680427422);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP342584725, +0.342584725681637509502641509861112333758894680);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T1f, T4, T1g, T1k, Tg, T1t, T7, T1j, Tm, T1s, Tp, T1q,
            Tj, T1I;
        SIMD_FLOAT T1u, Tv, Ta, T1i, Td, T1r, T1l, T1h, Ts, T1S, TY, T17, Tq,
            Tr, T16;
        SIMD_FLOAT T1R, TX, T2, T3, Te, Tf, T5, T6, Tk, Tl, Tn, To, Tt, Tu, T8;
        SIMD_FLOAT T9, Tb, Tc, Th, Ti, T1v, T1J, T20, T1y, T1M, T23, TI, TR,
            T1p, T1C;
        SIMD_FLOAT TN, Tz, T1W, T12, T1b, TF, TO, T1m;
        T1  = ri[0];
        T1f = ii[0];
        T2  = ii[WS(is, 10)];
        T3  = ii[WS(is, 1)];
        Te  = ii[WS(is, 5)];
        Tf  = ii[WS(is, 6)];
        T5  = ri[WS(is, 2)];
        T6  = ri[WS(is, 9)];
        Tk  = ii[WS(is, 4)];
        Tl  = ii[WS(is, 7)];
        Tn  = ri[WS(is, 3)];
        To  = ri[WS(is, 8)];
        Th  = ri[WS(is, 5)];
        Ti  = ri[WS(is, 6)];
        Tt  = ri[WS(is, 1)];
        T4  = T2 - T3;
        T1g = T3 + T2;
        T1k = Te + Tf;
        Tg  = Te - Tf;
        T1t = T6 - T5;
        T7  = T5 + T6;
        T1j = Tl + Tk;
        Tm  = Tk - Tl;
        T1s = Tn - To;
        Tp  = Tn + To;
        T1q = Ti - Th;
        Tj  = Th + Ti;
        Tu  = ri[WS(is, 10)];
        T8  = ii[WS(is, 8)];
        T9  = ii[WS(is, 3)];
        Tb  = ri[WS(is, 4)];
        Tc  = ri[WS(is, 7)];
        T1I = SIMD_FNMADD(KP505141613, T1g, T1t);
        Tq  = ii[WS(is, 2)];
        Tr  = ii[WS(is, 9)];
        T16 = SIMD_FMADD(KP505141613, T7, Tm);
        T1R = SIMD_FMADD(KP505141613, T1j, T1s);
        TX  = SIMD_FMADD(KP505141613, Tp, Tg);
        T1u = Tt - Tu;
        Tv  = Tt + Tu;
        Ta  = T8 - T9;
        T1i = T9 + T8;
        Td  = Tb + Tc;
        T1r = Tc - Tb;
        T1l = SIMD_FNMADD(KP342584725, T1k, T1j);
        T1h = Tr + Tq;
        Ts  = Tq - Tr;
        T1S = SIMD_FNMADD(KP678195414, T1R, T1g);
        TY  = SIMD_FNMADD(KP678195414, TX, T7);
        T17 = SIMD_FNMADD(KP678195414, T16, Tj);
        T1v = SIMD_FMADD(KP521108558, T1u, T1t);
        T1J = SIMD_FMADD(KP678195414, T1I, T1i);
        T20 = SIMD_FMADD(KP505141613, T1i, T1q);
        TF  = SIMD_FNMADD(KP342584725, Tj, Td);
        TO  = SIMD_FMADD(KP505141613, Td, Ta);
        T1m = SIMD_FNMADD(KP634356270, T1l, T1i);
        {
            SIMD_FLOAT T1z, TK, Tw, T1T, TZ, T18, T1w, T1K, T21, TG, TP, T1n,
                T1A, TL, Tx;
            SIMD_FLOAT T1U, T10, T19, T1x, T1L, T22, TH, TQ, T1o, T1B, TM, Ty,
                T1V, T11, T1a;
            T1z = SIMD_FMADD(KP505141613, T1h, T1r);
            TK  = SIMD_FMADD(KP521108558, T4, Ts);
            Tw  = SIMD_FNMADD(KP505141613, Tv, Ts);
            T1T = SIMD_FMADD(KP768375231, T1S, T1q);
            TZ  = SIMD_FMADD(KP768375231, TY, T4);
            T18 = SIMD_FMADD(KP768375231, T17, Ta);
            T1w = SIMD_FMADD(KP715370323, T1v, T1s);
            T1K = SIMD_FNMADD(KP768375231, T1J, T1r);
            T21 = SIMD_FNMADD(KP678195414, T20, T1h);
            TG  = SIMD_FNMADD(KP634356270, TF, Tp);
            TP  = SIMD_FNMADD(KP678195414, TO, Tv);
            T1n = SIMD_FNMADD(KP778434453, T1m, T1h);
            T1A = SIMD_FNMADD(KP678195414, T1z, T1k);
            TL  = SIMD_FMADD(KP715370323, TK, Ta);
            Tx  = SIMD_FMADD(KP678195414, Tw, Tp);
            T1U = SIMD_FNMADD(KP825581363, T1T, T1h);
            T10 = SIMD_FNMADD(KP825581363, TZ, Td);
            T19 = SIMD_FNMADD(KP825581363, T18, Tv);
            T1x = SIMD_FMADD(KP830830026, T1w, T1r);
            T1L = SIMD_FMADD(KP825581363, T1K, T1k);
            T22 = SIMD_FMADD(KP768375231, T21, T1u);
            TH  = SIMD_FNMADD(KP778434453, TG, T7);
            TQ  = SIMD_FMADD(KP768375231, TP, Tg);
            T1o = SIMD_FNMADD(KP876768831, T1n, T1g);
            T1B = SIMD_FMADD(KP768375231, T1A, T1s);
            TM  = SIMD_FMADD(KP830830026, TL, Tm);
            Ty  = SIMD_FNMADD(KP768375231, Tx, Tm);
            T1V = SIMD_FMADD(KP866504932, T1U, T1t);
            T11 = SIMD_FMADD(KP866504932, T10, Tm);
            T1a = SIMD_FNMADD(KP866504932, T19, T4);
            T1y = SIMD_FNMADD(KP918985947, T1x, T1q);
            T1M = SIMD_FMADD(KP866504932, T1L, T1q);
            T23 = SIMD_FNMADD(KP825581363, T22, T1j);
            TI  = SIMD_FNMADD(KP876768831, TH, Tv);
            TR  = SIMD_FNMADD(KP825581363, TQ, T7);
            T1p = SIMD_FNMADD(KP959492973, T1o, T1f);
            T1C = SIMD_FNMADD(KP825581363, T1B, T1g);
            TN  = SIMD_FNMADD(KP918985947, TM, Tg);
            Tz  = SIMD_FMADD(KP825581363, Ty, Tj);
            T1W = SIMD_FNMADD(KP898361248, T1V, T1k);
            T12 = SIMD_FNMADD(KP898361248, T11, Tv);
            T1b = SIMD_FMADD(KP898361248, T1a, Tp);
        }
        {
            SIMD_FLOAT T1N, T24, TJ, TS, T1D, TA, T1X, T13, T1c, T1O, T25, TT,
                T1E, TB, T1Y;
            SIMD_FLOAT T14, T1d, T1P, T26, TU, T1F, TC, T1Z, T15, T1e, T1Q, T27,
                TV, T1G, TD;
            SIMD_FLOAT T28, TW, T1H, TE;
            T1N           = SIMD_FNMADD(KP898361248, T1M, T1j);
            T24           = SIMD_FMADD(KP866504932, T23, T1r);
            TJ            = SIMD_FNMADD(KP959492973, TI, T1);
            TS            = SIMD_FMADD(KP866504932, TR, Ts);
            io[WS(os, 1)] = SIMD_FNMADD(KP989821441, T1y, T1p);
            io[0]         = SIMD_FMADD(KP989821441, T1y, T1p);
            T1D           = SIMD_FNMADD(KP866504932, T1C, T1u);
            TA            = SIMD_FMADD(KP866504932, Tz, Tg);
            T1X           = SIMD_FMADD(KP924828432, T1W, T1u);
            T13           = SIMD_FNMADD(KP924828432, T12, Ts);
            T1c           = SIMD_FMADD(KP924828432, T1b, Tg);
            T1O           = SIMD_FNMADD(KP924828432, T1N, T1s);
            T25           = SIMD_FNMADD(KP898361248, T24, T1g);
            ro[0]         = SIMD_FMADD(KP989821441, TN, TJ);
            ro[WS(os, 1)] = SIMD_FNMADD(KP989821441, TN, TJ);
            TT            = SIMD_FNMADD(KP898361248, TS, Tj);
            T1E           = SIMD_FMADD(KP898361248, T1D, T1i);
            TB            = SIMD_FNMADD(KP898361248, TA, Td);
            T1Y           = SIMD_FNMADD(KP948034035, T1X, T1i);
            T14           = SIMD_FMADD(KP948034035, T13, Tj);
            T1d           = SIMD_FNMADD(KP948034035, T1c, Td);
            T1P           = SIMD_FMADD(KP948034035, T1O, T1h);
            T26           = SIMD_FNMADD(KP924828432, T25, T1t);
            TU            = SIMD_FMADD(KP924828432, TT, T4);
            T1F           = SIMD_FMADD(KP924828432, T1E, T1q);
            TC            = SIMD_FNMADD(KP924828432, TB, Ta);
            T1Z           = SIMD_FNMADD(KP969359657, T1Y, T1r);
            T15           = SIMD_FNMADD(KP969359657, T14, Ta);
            T1e           = SIMD_FNMADD(KP969359657, T1d, Ts);
            T1Q           = SIMD_FNMADD(KP969359657, T1P, T1u);
            T27           = SIMD_FMADD(KP948034035, T26, T1k);
            TV            = SIMD_FNMADD(KP948034035, TU, Tp);
            T1G           = SIMD_FNMADD(KP948034035, T1F, T1j);
            TD            = SIMD_FMADD(KP948034035, TC, T7);
            io[WS(os, 4)] = SIMD_FMADD(KP989821441, T1Z, T1f);
            ro[WS(os, 5)] = SIMD_FMADD(KP989821441, T15, T1);
            ro[WS(os, 2)] = SIMD_FMADD(KP989821441, T1e, T1);
            io[WS(os, 3)] = SIMD_FMADD(KP989821441, T1Q, T1f);
            T28           = SIMD_FNMADD(KP969359657, T27, T1s);
            TW            = SIMD_FNMADD(KP969359657, TV, Tm);
            T1H           = SIMD_FNMADD(KP969359657, T1G, T1t);
            TE            = SIMD_FNMADD(KP969359657, TD, T4);
            io[WS(os, 5)] = SIMD_FMADD(KP989821441, T28, T1f);
            ro[WS(os, 4)] = SIMD_FMADD(KP989821441, TW, T1);
            io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1H, T1f);
            ro[WS(os, 3)] = SIMD_FMADD(KP989821441, TE, T1);
        }
    }
}

template <>
struct c2cb_traits<11, 6>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 142;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 6 -name c2cb
 * -standalone */

/*
 * This function contains 120 FP additions, 100 FP multiplications,
 * (or, 20 additions, 0 multiplications, 100 fused multiply/add),
 * 142 stack variables, 10 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 6>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T1f, Th, T1p, T4, T1g, Tv, T1o, T7, T1h, Ts, T1n, Ta,
            T1i, Tp;
        SIMD_FLOAT Ti, Te, Tf, Tb, Tc, Tk, Tl, Tw, T1q, T2, T3, Tt, Tu, T5, T6;
        SIMD_FLOAT Tq, Tr, T8, T9, Tn, To;
        T1  = ri[0];
        T1f = ii[0];
        T2  = ii[WS(is, 6)];
        T3  = ii[WS(is, 5)];
        Tt  = ri[WS(is, 5)];
        Tu  = ri[WS(is, 6)];
        T5  = ri[WS(is, 1)];
        T6  = ri[WS(is, 10)];
        Tq  = ii[WS(is, 10)];
        Tr  = ii[WS(is, 1)];
        T8  = ii[WS(is, 4)];
        T9  = ii[WS(is, 7)];
        Tn  = ri[WS(is, 4)];
        To  = ri[WS(is, 7)];
        Th  = ri[WS(is, 3)];
        T1p = T3 + T2;
        T4  = T2 - T3;
        T1g = Tt - Tu;
        Tv  = Tt + Tu;
        T1o = T5 - T6;
        T7  = T5 + T6;
        T1h = Tr + Tq;
        Ts  = Tq - Tr;
        T1n = T9 + T8;
        Ta  = T8 - T9;
        T1i = To - Tn;
        Tp  = Tn + To;
        Ti  = ri[WS(is, 8)];
        Te  = ii[WS(is, 8)];
        Tf  = ii[WS(is, 3)];
        Tb  = ri[WS(is, 2)];
        Tc  = ri[WS(is, 9)];
        Tk  = ii[WS(is, 2)];
        Tl  = ii[WS(is, 9)];
        Tw  = SIMD_FNMADD(KP505141613, Tv, Ts);
        T1q = SIMD_FNMADD(KP505141613, T1p, T1o);
        {
            SIMD_FLOAT Tj, T1k, Tg, T1l, Td, T1m, Tm, T1j, Tx, T1r, T1R, TX,
                T20, TO, T1I;
            SIMD_FLOAT T16, T1z, TF, Ty, T1s, T1S, TY, T21, TP, T1J, T17, T1A,
                TG, Tz, T1t;
            Tj  = Th + Ti;
            T1k = Th - Ti;
            Tg  = Te - Tf;
            T1l = Tf + Te;
            Td  = Tb + Tc;
            T1m = Tc - Tb;
            Tm  = Tk - Tl;
            T1j = Tl + Tk;
            Tx  = SIMD_FMADD(KP678195414, Tw, Tp);
            T1r = SIMD_FMADD(KP678195414, T1q, T1n);
            T1R = SIMD_FMADD(KP505141613, T1n, T1k);
            TX  = SIMD_FNMADD(KP505141613, Tj, T4);
            T20 = SIMD_FNMADD(KP505141613, T1l, T1g);
            TO  = SIMD_FMADD(KP505141613, Tp, Tg);
            T1I = SIMD_FNMADD(KP505141613, T1h, T1m);
            T16 = SIMD_FMADD(KP505141613, Td, Ta);
            T1z = SIMD_FMADD(KP505141613, T1j, T1i);
            TF  = SIMD_FNMADD(KP505141613, T7, Tm);
            Ty  = SIMD_FMADD(KP768375231, Tx, Tm);
            T1s = SIMD_FMADD(KP768375231, T1r, T1m);
            T1S = SIMD_FNMADD(KP678195414, T1R, T1h);
            TY  = SIMD_FMADD(KP678195414, TX, Td);
            T21 = SIMD_FMADD(KP678195414, T20, T1j);
            TP  = SIMD_FNMADD(KP678195414, TO, T7);
            T1J = SIMD_FMADD(KP678195414, T1I, T1l);
            T17 = SIMD_FNMADD(KP678195414, T16, Tv);
            T1A = SIMD_FNMADD(KP678195414, T1z, T1p);
            TG  = SIMD_FMADD(KP678195414, TF, Tj);
            Tz  = SIMD_FNMADD(KP825581363, Ty, Tj);
            T1t = SIMD_FNMADD(KP825581363, T1s, T1l);
            {
                SIMD_FLOAT T1T, TZ, T22, TQ, T1K, T18, T1B, TH, TA, T1u, T1U,
                    T10, T23, TR, T1L;
                SIMD_FLOAT T19, T1C, TI, TB, T1v, T1V, T11, T24, TS, T1M, T1a,
                    T1D, TJ, TC, T1w;
                T1T = SIMD_FNMADD(KP768375231, T1S, T1g);
                TZ  = SIMD_FMADD(KP768375231, TY, Ts);
                T22 = SIMD_FMADD(KP768375231, T21, T1o);
                TQ  = SIMD_FNMADD(KP768375231, TP, T4);
                T1K = SIMD_FNMADD(KP768375231, T1J, T1i);
                T18 = SIMD_FMADD(KP768375231, T17, Tg);
                T1B = SIMD_FMADD(KP768375231, T1A, T1k);
                TH  = SIMD_FNMADD(KP768375231, TG, Ta);
                TA  = SIMD_FNMADD(KP866504932, Tz, Tg);
                T1u = SIMD_FNMADD(KP866504932, T1t, T1k);
                T1U = SIMD_FMADD(KP825581363, T1T, T1j);
                T10 = SIMD_FNMADD(KP825581363, TZ, Tp);
                T23 = SIMD_FNMADD(KP825581363, T22, T1n);
                TR  = SIMD_FMADD(KP825581363, TQ, Td);
                T1L = SIMD_FMADD(KP825581363, T1K, T1p);
                T19 = SIMD_FNMADD(KP825581363, T18, T7);
                T1C = SIMD_FNMADD(KP825581363, T1B, T1h);
                TI  = SIMD_FMADD(KP825581363, TH, Tv);
                TB  = SIMD_FMADD(KP898361248, TA, Td);
                T1v = SIMD_FMADD(KP898361248, T1u, T1j);
                T1V = SIMD_FMADD(KP866504932, T1U, T1m);
                T11 = SIMD_FMADD(KP866504932, T10, Ta);
                T24 = SIMD_FMADD(KP866504932, T23, T1i);
                TS  = SIMD_FMADD(KP866504932, TR, Tm);
                T1M = SIMD_FNMADD(KP866504932, T1L, T1g);
                T1a = SIMD_FNMADD(KP866504932, T19, Ts);
                T1D = SIMD_FNMADD(KP866504932, T1C, T1o);
                TJ  = SIMD_FNMADD(KP866504932, TI, T4);
                TC  = SIMD_FMADD(KP924828432, TB, Ta);
                T1w = SIMD_FMADD(KP924828432, T1v, T1i);
                {
                    SIMD_FLOAT T1W, T12, T25, TT, T1N, T1b, T1E, TK, TD, T1x,
                        T1X, T13, T26, TU, T1O;
                    SIMD_FLOAT T1c, T1F, TL, TE, T1y, T1Y, T14, T27, TV, T1P,
                        T1d, T1G, TM, T1Z, T15;
                    SIMD_FLOAT T28, TW, T1Q, T1e, T1H, TN;
                    T1W           = SIMD_FNMADD(KP898361248, T1V, T1p);
                    T12           = SIMD_FNMADD(KP898361248, T11, T7);
                    T25           = SIMD_FNMADD(KP898361248, T24, T1h);
                    TT            = SIMD_FNMADD(KP898361248, TS, Tv);
                    T1N           = SIMD_FMADD(KP898361248, T1M, T1n);
                    T1b           = SIMD_FMADD(KP898361248, T1a, Tj);
                    T1E           = SIMD_FMADD(KP898361248, T1D, T1l);
                    TK            = SIMD_FMADD(KP898361248, TJ, Tp);
                    TD            = SIMD_FNMADD(KP948034035, TC, T7);
                    T1x           = SIMD_FNMADD(KP948034035, T1w, T1h);
                    T1X           = SIMD_FMADD(KP924828432, T1W, T1o);
                    T13           = SIMD_FNMADD(KP924828432, T12, Tm);
                    T26           = SIMD_FNMADD(KP924828432, T25, T1m);
                    TU            = SIMD_FMADD(KP924828432, TT, Ts);
                    T1O           = SIMD_FNMADD(KP924828432, T1N, T1k);
                    T1c           = SIMD_FNMADD(KP924828432, T1b, T4);
                    T1F           = SIMD_FNMADD(KP924828432, T1E, T1g);
                    TL            = SIMD_FNMADD(KP924828432, TK, Tg);
                    TE            = SIMD_FNMADD(KP969359657, TD, T4);
                    T1y           = SIMD_FNMADD(KP969359657, T1x, T1g);
                    T1Y           = SIMD_FNMADD(KP948034035, T1X, T1l);
                    T14           = SIMD_FMADD(KP948034035, T13, Tv);
                    T27           = SIMD_FMADD(KP948034035, T26, T1p);
                    TV            = SIMD_FNMADD(KP948034035, TU, Tj);
                    T1P           = SIMD_FMADD(KP948034035, T1O, T1j);
                    T1d           = SIMD_FMADD(KP948034035, T1c, Tp);
                    T1G           = SIMD_FMADD(KP948034035, T1F, T1n);
                    TM            = SIMD_FMADD(KP948034035, TL, Td);
                    ro[0]         = SIMD_FMADD(KP989821441, TE, T1);
                    io[0]         = SIMD_FMADD(KP989821441, T1y, T1f);
                    T1Z           = SIMD_FNMADD(KP969359657, T1Y, T1i);
                    T15           = SIMD_FNMADD(KP969359657, T14, Tg);
                    T28           = SIMD_FNMADD(KP969359657, T27, T1k);
                    TW            = SIMD_FNMADD(KP969359657, TV, Ta);
                    T1Q           = SIMD_FNMADD(KP969359657, T1P, T1o);
                    T1e           = SIMD_FNMADD(KP969359657, T1d, Tm);
                    T1H           = SIMD_FNMADD(KP969359657, T1G, T1m);
                    TN            = SIMD_FNMADD(KP969359657, TM, Ts);
                    io[WS(os, 3)] = SIMD_FMADD(KP989821441, T1Z, T1f);
                    ro[WS(os, 4)] = SIMD_FMADD(KP989821441, T15, T1);
                    io[WS(os, 4)] = SIMD_FMADD(KP989821441, T28, T1f);
                    ro[WS(os, 3)] = SIMD_FMADD(KP989821441, TW, T1);
                    io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1Q, T1f);
                    ro[WS(os, 1)] = SIMD_FMADD(KP989821441, T1e, T1);
                    io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1H, T1f);
                    ro[WS(os, 2)] = SIMD_FMADD(KP989821441, TN, T1);
                }
            }
        }
    }
}

template <>
struct c2cb_traits<11, 7>
{
    static constexpr long_t flops           = 180;
    static constexpr long_t operations      = 100;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 124;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 7 -name c2cb
 * -standalone */

/*
 * This function contains 100 FP additions, 80 FP multiplications,
 * (or, 20 additions, 0 multiplications, 80 fused multiply/add),
 * 124 stack variables, 10 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 7>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, T16, T1b, Tj, Tp, T19, T1g, T4, T1f, T7, T1a, Tm, Ta,
            T1e, Tt;
        SIMD_FLOAT TF, T1h, Tu, T1I, TX, T1c, Tg, Td, T1d, Ts, T18, Th, Ti, Tn,
            To;
        SIMD_FLOAT T2, T3, T5, T6, Tk, Tl, Te, Tf, Tb, Tc, Tq, Tr, T8, T9, Tv;
        SIMD_FLOAT T17, T1J, TY, T1i, TG, TO, T1z;
        T1  = ri[0];
        T16 = ii[0];
        Th  = ri[WS(is, 1)];
        Ti  = ri[WS(is, 10)];
        Tn  = ri[WS(is, 5)];
        To  = ri[WS(is, 6)];
        T2  = ii[WS(is, 2)];
        T3  = ii[WS(is, 9)];
        T5  = ri[WS(is, 4)];
        T6  = ri[WS(is, 7)];
        Tk  = ii[WS(is, 8)];
        Tl  = ii[WS(is, 3)];
        T8  = ii[WS(is, 5)];
        T9  = ii[WS(is, 6)];
        Te  = ii[WS(is, 10)];
        T1b = Th - Ti;
        Tj  = Th + Ti;
        Tp  = Tn + To;
        T19 = To - Tn;
        T1g = T3 + T2;
        T4  = T2 - T3;
        T1f = T6 - T5;
        T7  = T5 + T6;
        T1a = Tl + Tk;
        Tm  = Tk - Tl;
        Ta  = T8 - T9;
        T1e = T9 + T8;
        Tf  = ii[WS(is, 1)];
        Tb  = ri[WS(is, 3)];
        Tc  = ri[WS(is, 8)];
        Tq  = ii[WS(is, 4)];
        Tr  = ii[WS(is, 7)];
        Tt  = ri[WS(is, 2)];
        TF  = SIMD_FNMADD(KP505141613, Tj, T4);
        T1h = SIMD_FMADD(KP505141613, T1g, T1f);
        Tu  = ri[WS(is, 9)];
        T1I = SIMD_FMADD(KP505141613, T1a, T19);
        TX  = SIMD_FMADD(KP505141613, T7, Tm);
        T1c = Tf + Te;
        Tg  = Te - Tf;
        Td  = Tb + Tc;
        T1d = Tb - Tc;
        Ts  = Tq - Tr;
        T18 = Tq + Tr;
        Tv  = Tt + Tu;
        T17 = Tu - Tt;
        T1J = SIMD_FNMADD(KP678195414, T1I, T1g);
        TY  = SIMD_FNMADD(KP678195414, TX, Tj);
        T1i = SIMD_FNMADD(KP678195414, T1h, T1e);
        TG  = SIMD_FMADD(KP678195414, TF, Td);
        TO  = SIMD_FMADD(KP505141613, Td, Ta);
        T1z = SIMD_FMADD(KP505141613, T18, T1d);
        {
            SIMD_FLOAT T1q, Tw, T1K, TZ, T1j, TH, TP, T1A, T1r, Tx, T1L, T10,
                T1k, TI, TQ;
            SIMD_FLOAT T1B, T1s, Ty, T1M, T11, T1l, TJ, TR, T1C, T1t, Tz, T1N,
                T12, T1m, TK;
            SIMD_FLOAT TS, T1D;
            T1q = SIMD_FNMADD(KP505141613, T1c, T17);
            Tw  = SIMD_FMADD(KP505141613, Tv, Ts);
            T1K = SIMD_FMADD(KP768375231, T1J, T1b);
            TZ  = SIMD_FMADD(KP768375231, TY, Ta);
            T1j = SIMD_FMADD(KP768375231, T1i, T1d);
            TH  = SIMD_FNMADD(KP768375231, TG, Ts);
            TP  = SIMD_FNMADD(KP678195414, TO, Tv);
            T1A = SIMD_FNMADD(KP678195414, T1z, T1c);
            T1r = SIMD_FMADD(KP678195414, T1q, T1a);
            Tx  = SIMD_FNMADD(KP678195414, Tw, Tp);
            T1L = SIMD_FNMADD(KP825581363, T1K, T18);
            T10 = SIMD_FNMADD(KP825581363, TZ, Tv);
            T1k = SIMD_FNMADD(KP825581363, T1j, T1c);
            TI  = SIMD_FMADD(KP825581363, TH, Tp);
            TQ  = SIMD_FMADD(KP768375231, TP, Tg);
            T1B = SIMD_FMADD(KP768375231, T1A, T19);
            T1s = SIMD_FNMADD(KP768375231, T1r, T1f);
            Ty  = SIMD_FMADD(KP768375231, Tx, Tm);
            T1M = SIMD_FMADD(KP866504932, T1L, T1f);
            T11 = SIMD_FMADD(KP866504932, T10, T4);
            T1l = SIMD_FNMADD(KP866504932, T1k, T1b);
            TJ  = SIMD_FMADD(KP866504932, TI, Ta);
            TR  = SIMD_FNMADD(KP825581363, TQ, T7);
            T1C = SIMD_FNMADD(KP825581363, T1B, T1g);
            T1t = SIMD_FMADD(KP825581363, T1s, T1e);
            Tz  = SIMD_FNMADD(KP825581363, Ty, Tj);
            T1N = SIMD_FNMADD(KP898361248, T1M, T1c);
            T12 = SIMD_FNMADD(KP898361248, T11, Tp);
            T1m = SIMD_FMADD(KP898361248, T1l, T1a);
            TK  = SIMD_FNMADD(KP898361248, TJ, T7);
            TS  = SIMD_FMADD(KP866504932, TR, Ts);
            T1D = SIMD_FMADD(KP866504932, T1C, T17);
            {
                SIMD_FLOAT T1u, TA, T1O, T13, T1n, TL, TT, T1E, T1v, TB, T1P,
                    T14, T1o, TM, TU;
                SIMD_FLOAT T1F, T1w, TC, T1Q, T15, T1p, TN, TV, T1G, T1x, TD,
                    TW, T1H, T1y, TE;
                T1u           = SIMD_FMADD(KP866504932, T1t, T19);
                TA            = SIMD_FNMADD(KP866504932, Tz, Tg);
                T1O           = SIMD_FNMADD(KP924828432, T1N, T17);
                T13           = SIMD_FMADD(KP924828432, T12, Tg);
                T1n           = SIMD_FMADD(KP924828432, T1m, T19);
                TL            = SIMD_FNMADD(KP924828432, TK, Tm);
                TT            = SIMD_FNMADD(KP898361248, TS, Tj);
                T1E           = SIMD_FNMADD(KP898361248, T1D, T1e);
                T1v           = SIMD_FNMADD(KP898361248, T1u, T18);
                TB            = SIMD_FMADD(KP898361248, TA, Td);
                T1P           = SIMD_FMADD(KP948034035, T1O, T1e);
                T14           = SIMD_FNMADD(KP948034035, T13, Td);
                T1o           = SIMD_FNMADD(KP948034035, T1n, T18);
                TM            = SIMD_FMADD(KP948034035, TL, Tv);
                TU            = SIMD_FNMADD(KP924828432, TT, T4);
                T1F           = SIMD_FMADD(KP924828432, T1E, T1b);
                T1w           = SIMD_FNMADD(KP924828432, T1v, T1d);
                TC            = SIMD_FMADD(KP924828432, TB, Ta);
                T1Q           = SIMD_FNMADD(KP969359657, T1P, T1d);
                T15           = SIMD_FNMADD(KP969359657, T14, Ts);
                T1p           = SIMD_FNMADD(KP969359657, T1o, T17);
                TN            = SIMD_FNMADD(KP969359657, TM, Tg);
                TV            = SIMD_FMADD(KP948034035, TU, Tp);
                T1G           = SIMD_FNMADD(KP948034035, T1F, T1a);
                T1x           = SIMD_FMADD(KP948034035, T1w, T1g);
                TD            = SIMD_FNMADD(KP948034035, TC, T7);
                io[WS(os, 3)] = SIMD_FMADD(KP989821441, T1Q, T16);
                ro[WS(os, 2)] = SIMD_FMADD(KP989821441, T15, T1);
                io[0]         = SIMD_FMADD(KP989821441, T1p, T16);
                ro[WS(os, 1)] = SIMD_FMADD(KP989821441, TN, T1);
                TW            = SIMD_FNMADD(KP969359657, TV, Tm);
                T1H           = SIMD_FNMADD(KP969359657, T1G, T1f);
                T1y           = SIMD_FNMADD(KP969359657, T1x, T1b);
                TE            = SIMD_FNMADD(KP969359657, TD, T4);
                ro[WS(os, 3)] = SIMD_FMADD(KP989821441, TW, T1);
                io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1H, T16);
                io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1y, T16);
                ro[0]         = SIMD_FMADD(KP989821441, TE, T1);
            }
        }
    }
}

template <>
struct c2cb_traits<11, 8>
{
    static constexpr long_t flops           = 140;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 28;
    static constexpr long_t stack_vars      = 106;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 8 -name c2cb
 * -standalone */

/*
 * This function contains 80 FP additions, 60 FP multiplications,
 * (or, 20 additions, 0 multiplications, 60 fused multiply/add),
 * 106 stack variables, 10 constants, and 28 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 8>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    {
        SIMD_FLOAT T1, TX, T4, T17, T7, T16, TZ, Ts, TY, Tv, Td, T14, T12, Tj,
            Te;
        SIMD_FLOAT Tf, T18, Tk, Tl, Tn, Tw, To, Ta, T15, T2, T3, T5, T6, Tq, Tr;
        SIMD_FLOAT Tt, Tu, T8, T9, Tb, Tc, Th, Ti, Tg, T13, T11, Tm, Tp, T10,
            T19;
        SIMD_FLOAT T1q, TO, T1h, Tx, TF, T1a, T1r, TP, T1i, Ty, TG, T1b, T1s,
            TQ, T1j;
        SIMD_FLOAT Tz, TH, T1c, T1t, TR;
        T1  = ri[0];
        TX  = ii[0];
        T2  = ii[WS(is, 10)];
        T3  = ii[WS(is, 1)];
        T5  = ri[WS(is, 2)];
        T6  = ri[WS(is, 9)];
        Tq  = ii[WS(is, 9)];
        Tr  = ii[WS(is, 2)];
        Tt  = ri[WS(is, 1)];
        Tu  = ri[WS(is, 10)];
        Tb  = ri[WS(is, 4)];
        Tc  = ri[WS(is, 7)];
        Th  = ri[WS(is, 5)];
        Ti  = ri[WS(is, 6)];
        T8  = ii[WS(is, 8)];
        T4  = T2 - T3;
        T17 = T3 + T2;
        T7  = T5 + T6;
        T16 = T5 - T6;
        TZ  = Tq + Tr;
        Ts  = Tq - Tr;
        TY  = Tt - Tu;
        Tv  = Tt + Tu;
        Td  = Tb + Tc;
        T14 = Tc - Tb;
        T9  = ii[WS(is, 3)];
        T12 = Th - Ti;
        Tj  = Th + Ti;
        Te  = ii[WS(is, 6)];
        Tf  = ii[WS(is, 5)];
        T18 = SIMD_FMADD(KP505141613, T17, T16);
        Tk  = ii[WS(is, 4)];
        Tl  = ii[WS(is, 7)];
        Tn  = ri[WS(is, 3)];
        Tw  = SIMD_FMADD(KP505141613, Tv, Ts);
        To  = ri[WS(is, 8)];
        Ta  = T8 - T9;
        T15 = T8 + T9;
        Tg  = Te - Tf;
        T13 = Tf + Te;
        T11 = Tk + Tl;
        Tm  = Tk - Tl;
        Tp  = Tn + To;
        T10 = Tn - To;
        T19 = SIMD_FNMADD(KP678195414, T18, T15);
        T1q = SIMD_FNMADD(KP505141613, T15, T12);
        TO  = SIMD_FMADD(KP505141613, Td, Ta);
        T1h = SIMD_FMADD(KP505141613, T11, T10);
        Tx  = SIMD_FNMADD(KP678195414, Tw, Tp);
        TF  = SIMD_FNMADD(KP505141613, Tp, Tg);
        T1a = SIMD_FNMADD(KP768375231, T19, T14);
        T1r = SIMD_FMADD(KP678195414, T1q, TZ);
        TP  = SIMD_FNMADD(KP678195414, TO, Tv);
        T1i = SIMD_FNMADD(KP678195414, T1h, T17);
        Ty  = SIMD_FNMADD(KP768375231, Tx, Tm);
        TG  = SIMD_FMADD(KP678195414, TF, T7);
        T1b = SIMD_FMADD(KP825581363, T1a, T13);
        T1s = SIMD_FMADD(KP768375231, T1r, TY);
        TQ  = SIMD_FNMADD(KP768375231, TP, Tg);
        T1j = SIMD_FNMADD(KP768375231, T1i, T12);
        Tz  = SIMD_FMADD(KP825581363, Ty, Tj);
        TH  = SIMD_FMADD(KP768375231, TG, T4);
        T1c = SIMD_FNMADD(KP866504932, T1b, T12);
        T1t = SIMD_FNMADD(KP825581363, T1s, T11);
        TR  = SIMD_FMADD(KP825581363, TQ, T7);
        {
            SIMD_FLOAT T1k, TA, TI, T1d, T1u, TS, T1l, TB, TJ, T1e, T1v, TT,
                T1m, TC, TK;
            SIMD_FLOAT T1f, T1w, TU, T1n, TD, TL, T1g, T1x, TV, T1o, TE, TM,
                T1y, TW, T1p;
            SIMD_FLOAT TN;
            T1k           = SIMD_FMADD(KP825581363, T1j, TZ);
            TA            = SIMD_FNMADD(KP866504932, Tz, Tg);
            TI            = SIMD_FNMADD(KP825581363, TH, Td);
            T1d           = SIMD_FMADD(KP898361248, T1c, T11);
            T1u           = SIMD_FMADD(KP866504932, T1t, T14);
            TS            = SIMD_FNMADD(KP866504932, TR, Ts);
            T1l           = SIMD_FNMADD(KP866504932, T1k, T16);
            TB            = SIMD_FMADD(KP898361248, TA, Td);
            TJ            = SIMD_FMADD(KP866504932, TI, Tm);
            T1e           = SIMD_FNMADD(KP924828432, T1d, T10);
            T1v           = SIMD_FNMADD(KP898361248, T1u, T17);
            TT            = SIMD_FMADD(KP898361248, TS, Tj);
            T1m           = SIMD_FMADD(KP898361248, T1l, T13);
            TC            = SIMD_FNMADD(KP924828432, TB, Ta);
            TK            = SIMD_FNMADD(KP898361248, TJ, Tv);
            T1f           = SIMD_FMADD(KP948034035, T1e, TZ);
            T1w           = SIMD_FMADD(KP924828432, T1v, T16);
            TU            = SIMD_FMADD(KP924828432, TT, T4);
            T1n           = SIMD_FMADD(KP924828432, T1m, TY);
            TD            = SIMD_FMADD(KP948034035, TC, T7);
            TL            = SIMD_FMADD(KP924828432, TK, Ts);
            T1g           = SIMD_FNMADD(KP969359657, T1f, TY);
            T1x           = SIMD_FNMADD(KP948034035, T1w, T13);
            TV            = SIMD_FNMADD(KP948034035, TU, Tp);
            T1o           = SIMD_FNMADD(KP948034035, T1n, T15);
            TE            = SIMD_FNMADD(KP969359657, TD, T4);
            TM            = SIMD_FNMADD(KP948034035, TL, Tj);
            io[0]         = SIMD_FMADD(KP989821441, T1g, TX);
            T1y           = SIMD_FNMADD(KP969359657, T1x, T10);
            TW            = SIMD_FNMADD(KP969359657, TV, Tm);
            T1p           = SIMD_FNMADD(KP969359657, T1o, T14);
            ro[0]         = SIMD_FMADD(KP989821441, TE, T1);
            TN            = SIMD_FNMADD(KP969359657, TM, Ta);
            io[WS(os, 2)] = SIMD_FMADD(KP989821441, T1y, TX);
            ro[WS(os, 1)] = SIMD_FMADD(KP989821441, TW, T1);
            io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1p, TX);
            ro[WS(os, 2)] = SIMD_FMADD(KP989821441, TN, T1);
        }
    }
}

template <>
struct c2cb_traits<11, 9>
{
    static constexpr long_t flops           = 100;
    static constexpr long_t operations      = 60;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 9 -name c2cb
 * -standalone */

/*
 * This function contains 60 FP additions, 40 FP multiplications,
 * (or, 20 additions, 0 multiplications, 40 fused multiply/add),
 * 90 stack variables, 12 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 9>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP549672837, +0.549672837535943181976026476842489594988382388);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP661594815, +0.661594815223309085457969653633252453045438196);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    {
        SIMD_FLOAT T1, TO, Ts, TX, T7, TQ, To, TY, Ti, TV, Tr, TR, Tl, Tt, Tx;
        SIMD_FLOAT TP, T2, T3, T8, T9, Td, Te, T5, T6, Tm, Tn, Tg, Th, Tp, Tq;
        SIMD_FLOAT Tj, Tk, Tv, Tw, TS, TU, Tu, T4, T10, TW, Ta, TZ, Tf, TT, T18;
        SIMD_FLOAT Ty;
        T1  = ri[0];
        TO  = ii[0];
        T5  = ri[WS(is, 2)];
        T6  = ri[WS(is, 9)];
        Tm  = ii[WS(is, 9)];
        Tn  = ii[WS(is, 2)];
        Tg  = ii[WS(is, 10)];
        Th  = ii[WS(is, 1)];
        Tp  = ri[WS(is, 1)];
        Tq  = ri[WS(is, 10)];
        Tj  = ri[WS(is, 5)];
        Tk  = ri[WS(is, 6)];
        Tv  = ri[WS(is, 4)];
        Tw  = ri[WS(is, 7)];
        Ts  = ii[WS(is, 8)];
        TX  = T5 - T6;
        T7  = T5 + T6;
        TQ  = Tn + Tm;
        To  = Tm - Tn;
        TY  = Th + Tg;
        Ti  = Tg - Th;
        TV  = Tp - Tq;
        Tr  = Tp + Tq;
        TR  = Tj - Tk;
        Tl  = Tj + Tk;
        Tt  = ii[WS(is, 3)];
        Tx  = Tv + Tw;
        TP  = Tv - Tw;
        T2  = ii[WS(is, 7)];
        T3  = ii[WS(is, 4)];
        T8  = ii[WS(is, 6)];
        T9  = ii[WS(is, 5)];
        Td  = ri[WS(is, 3)];
        Te  = ri[WS(is, 8)];
        TS  = SIMD_FMADD(KP825581363, TR, TQ);
        TU  = Ts + Tt;
        Tu  = Ts - Tt;
        T4  = T2 - T3;
        T10 = T2 + T3;
        TW  = T8 + T9;
        Ta  = T8 - T9;
        TZ  = Td - Te;
        Tf  = Td + Te;
        TT  = SIMD_FMADD(KP661594815, TS, TP);
        T18 = SIMD_FNMADD(KP505141613, TU, TR);
        Ty  = SIMD_FMADD(KP505141613, Tx, Tu);
        {
            SIMD_FLOAT Tb, T11, TF, T19, Tz, Tc, T12, TG, T1a, TA, T13, TH, T1b,
                TB, T14;
            SIMD_FLOAT TI, T1c, TC, T15, TJ, T1d, TD, T16, TK, T1e, TE, T17, TL,
                T1f, TM;
            SIMD_FLOAT T1g, TN;
            Tb            = SIMD_FMADD(KP825581363, Ta, T7);
            T11           = SIMD_FMADD(KP505141613, T10, TZ);
            TF            = SIMD_FNMADD(KP505141613, Tf, Ta);
            T19           = SIMD_FMADD(KP678195414, T18, TQ);
            Tz            = SIMD_FNMADD(KP678195414, Ty, Tr);
            Tc            = SIMD_FMADD(KP661594815, Tb, T4);
            T12           = SIMD_FNMADD(KP678195414, T11, TY);
            TG            = SIMD_FMADD(KP678195414, TF, T7);
            T1a           = SIMD_FMADD(KP768375231, T19, TV);
            TA            = SIMD_FMADD(KP549672837, Tz, To);
            T13           = SIMD_FMADD(KP549672837, T12, TX);
            TH            = SIMD_FMADD(KP768375231, TG, Ti);
            T1b           = SIMD_FNMADD(KP825581363, T1a, T10);
            TB            = SIMD_FMADD(KP898361248, TA, Tl);
            T14           = SIMD_FMADD(KP898361248, T13, TW);
            TI            = SIMD_FNMADD(KP825581363, TH, Tx);
            T1c           = SIMD_FNMADD(KP866504932, T1b, TP);
            TC            = SIMD_FMADD(KP924828432, TB, Ti);
            T15           = SIMD_FMADD(KP924828432, T14, TV);
            TJ            = SIMD_FNMADD(KP866504932, TI, T4);
            T1d           = SIMD_FMADD(KP898361248, T1c, TY);
            TD            = SIMD_FNMADD(KP948034035, TC, Tf);
            T16           = SIMD_FNMADD(KP948034035, T15, TU);
            TK            = SIMD_FMADD(KP898361248, TJ, Tr);
            T1e           = SIMD_FMADD(KP924828432, T1d, TX);
            TE            = SIMD_FMADD(KP969359657, TD, Tc);
            T17           = SIMD_FMADD(KP969359657, T16, TT);
            TL            = SIMD_FMADD(KP924828432, TK, To);
            T1f           = SIMD_FNMADD(KP948034035, T1e, TW);
            ro[0]         = SIMD_FNMADD(KP989821441, TE, T1);
            io[0]         = SIMD_FNMADD(KP989821441, T17, TO);
            TM            = SIMD_FNMADD(KP948034035, TL, Tl);
            T1g           = SIMD_FNMADD(KP969359657, T1f, TZ);
            TN            = SIMD_FNMADD(KP969359657, TM, Tu);
            io[WS(os, 1)] = SIMD_FMADD(KP989821441, T1g, TO);
            ro[WS(os, 1)] = SIMD_FMADD(KP989821441, TN, T1);
        }
    }
}

template <>
struct c2cb_traits<11, 10>
{
    static constexpr long_t flops           = 62;
    static constexpr long_t operations      = 40;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 68;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwb.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 11 -skip-k 10 -name c2cb
 * -standalone */

/*
 * This function contains 40 FP additions, 22 FP multiplications,
 * (or, 18 additions, 0 multiplications, 22 fused multiply/add),
 * 68 stack variables, 10 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t SkippedOutputs, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 11 && SkippedOutputs == 10>::type
c2cb(SIMD_FLOAT const* __restrict ii, SIMD_FLOAT const* __restrict ri,
     SIMD_FLOAT* __restrict io, SIMD_FLOAT* __restrict ro)
{
    DK(KP989821441, +0.989821441880932732376092037776718787376519372);
    DK(KP969359657, +0.969359657223829260733328731846620532806485408);
    DK(KP924828432, +0.924828432956904180766729926857539458791379688);
    DK(KP898361248, +0.898361248850670300536912166916054183889497528);
    DK(KP866504932, +0.866504932543062887353321768017714181693100558);
    DK(KP825581363, +0.825581363228855944067795156157517672553032630);
    DK(KP768375231, +0.768375231002613197318187945077695526719218160);
    DK(KP678195414, +0.678195414281164490721189387339530247424542059);
    DK(KP505141613, +0.505141613269018102009427671853408520973276668);
    DK(KP948034035, +0.948034035025657172125235857251455042287879092);
    {
        SIMD_FLOAT T1, TE, T9, Tm, TL, Tn, Tf, TJ, Tc, TK, T4, TN, T8, TM, Ti;
        SIMD_FLOAT TI, Tj, Tk, To, Tp, Tq, Ts, Tt, T7, Td, Te, Ta, Tb, T2, T3;
        SIMD_FLOAT T5, T6, Tg, Th, TO, TH, Tl, TG, Tr, TF, Tu, TP, Tv, TQ, Tw;
        SIMD_FLOAT TR, Tx, TS, Ty, TT, Tz, TU, TA, TV, TB, TW, TC, TD;
        T1    = ri[0];
        TE    = ii[0];
        T7    = ii[WS(is, 2)];
        T9    = ii[WS(is, 9)];
        Td    = ii[WS(is, 7)];
        Te    = ii[WS(is, 4)];
        Ta    = ri[WS(is, 1)];
        Tb    = ri[WS(is, 10)];
        T2    = ii[WS(is, 8)];
        T3    = ii[WS(is, 3)];
        T5    = ri[WS(is, 6)];
        T6    = ri[WS(is, 5)];
        Tg    = ri[WS(is, 4)];
        Th    = ri[WS(is, 7)];
        Tm    = ri[WS(is, 2)];
        TL    = T7 + T9;
        Tn    = ri[WS(is, 9)];
        Tf    = Td - Te;
        TJ    = Td + Te;
        Tc    = Ta + Tb;
        TK    = Ta - Tb;
        T4    = T2 - T3;
        TN    = T2 + T3;
        T8    = T5 + (SIMD_FMADD(KP948034035, T7, T6));
        TM    = T6 - T5;
        Ti    = Tg + Th;
        TI    = Tg - Th;
        Tj    = ii[WS(is, 10)];
        Tk    = ii[WS(is, 1)];
        To    = Tm + Tn;
        Tp    = ii[WS(is, 6)];
        Tq    = ii[WS(is, 5)];
        Ts    = ri[WS(is, 3)];
        Tt    = ri[WS(is, 8)];
        TO    = SIMD_FNMADD(KP505141613, TN, TM);
        TH    = Tj + Tk;
        Tl    = Tj - Tk;
        TG    = (SIMD_FMADD(KP948034035, Tn, Tp)) + Tq;
        Tr    = Tp - Tq;
        TF    = Ts - Tt;
        Tu    = Ts + Tt;
        TP    = SIMD_FMADD(KP678195414, TO, TL);
        Tv    = SIMD_FNMADD(KP505141613, Tu, Tr);
        TQ    = SIMD_FMADD(KP768375231, TP, TK);
        Tw    = SIMD_FMADD(KP678195414, Tv, To);
        TR    = SIMD_FNMADD(KP825581363, TQ, TJ);
        Tx    = SIMD_FMADD(KP768375231, Tw, Tl);
        TS    = SIMD_FNMADD(KP866504932, TR, TI);
        Ty    = SIMD_FNMADD(KP825581363, Tx, Ti);
        TT    = SIMD_FMADD(KP898361248, TS, TH);
        Tz    = SIMD_FNMADD(KP866504932, Ty, Tf);
        TU    = SIMD_FMADD(KP924828432, TT, Tm);
        TA    = SIMD_FMADD(KP898361248, Tz, Tc);
        TV    = SIMD_FNMADD(KP948034035, TU, TG);
        TB    = SIMD_FMADD(KP924828432, TA, T9);
        TW    = SIMD_FNMADD(KP969359657, TV, TF);
        TC    = SIMD_FNMADD(KP948034035, TB, T8);
        io[0] = SIMD_FMADD(KP989821441, TW, TE);
        TD    = SIMD_FNMADD(KP969359657, TC, T4);
        ro[0] = SIMD_FMADD(KP989821441, TD, T1);
    }
}
