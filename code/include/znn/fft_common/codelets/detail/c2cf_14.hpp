//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cf_traits<14, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 2;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 1 -name c2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 2 stack variables, 0 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 1>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    {
        SIMD_FLOAT T1, T2;
        T1             = ri[0];
        T2             = ii[0];
        ro[WS(os, 8)]  = T1;
        ro[WS(os, 9)]  = T1;
        ro[WS(os, 5)]  = T1;
        ro[WS(os, 6)]  = T1;
        ro[WS(os, 7)]  = T1;
        ro[WS(os, 4)]  = T1;
        ro[WS(os, 10)] = T1;
        ro[WS(os, 2)]  = T1;
        ro[WS(os, 1)]  = T1;
        ro[WS(os, 12)] = T1;
        ro[WS(os, 11)] = T1;
        ro[WS(os, 3)]  = T1;
        ro[WS(os, 13)] = T1;
        ro[0]          = T1;
        io[WS(os, 8)]  = T2;
        io[WS(os, 9)]  = T2;
        io[WS(os, 5)]  = T2;
        io[WS(os, 6)]  = T2;
        io[WS(os, 7)]  = T2;
        io[WS(os, 4)]  = T2;
        io[WS(os, 10)] = T2;
        io[WS(os, 2)]  = T2;
        io[WS(os, 1)]  = T2;
        io[WS(os, 12)] = T2;
        io[WS(os, 11)] = T2;
        io[WS(os, 3)]  = T2;
        io[WS(os, 13)] = T2;
        io[0]          = T2;
    }
}

template <>
struct c2cf_traits<14, 2>
{
    static constexpr long_t flops           = 76;
    static constexpr long_t operations      = 40;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 22;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 2 -name c2cf
 * -standalone */

/*
 * This function contains 40 FP additions, 36 FP multiplications,
 * (or, 4 additions, 0 multiplications, 36 fused multiply/add),
 * 22 stack variables, 6 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 2>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP433883739, +0.433883739117558120475768332848358754609990728);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP781831482, +0.781831482468029808708444526674057750232334519);
    DK(KP623489801, +0.623489801858733530525004884004239810632274731);
    DK(KP222520933, +0.222520933956314404288902564496794759466355569);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    {
        SIMD_FLOAT T1, T2, T3, T4, T5, T6, Tg, Tf, Tc, Tb, T7, T8, Te, Td, Ta;
        SIMD_FLOAT T9;
        T1             = ri[0];
        T2             = ri[WS(is, 1)];
        T3             = ii[0];
        T4             = ii[WS(is, 1)];
        ro[0]          = T1 + T2;
        ro[WS(os, 7)]  = T1 - T2;
        T5             = SIMD_FNMADD(KP900968867, T2, T1);
        T6             = SIMD_FMADD(KP900968867, T2, T1);
        Tg             = SIMD_FMADD(KP222520933, T2, T1);
        Tf             = SIMD_FNMADD(KP222520933, T2, T1);
        Tc             = SIMD_FMADD(KP623489801, T2, T1);
        Tb             = SIMD_FNMADD(KP623489801, T2, T1);
        io[0]          = T3 + T4;
        io[WS(os, 7)]  = T3 - T4;
        T7             = SIMD_FNMADD(KP222520933, T4, T3);
        T8             = SIMD_FMADD(KP222520933, T4, T3);
        Te             = SIMD_FMADD(KP900968867, T4, T3);
        Td             = SIMD_FNMADD(KP900968867, T4, T3);
        Ta             = SIMD_FMADD(KP623489801, T4, T3);
        T9             = SIMD_FNMADD(KP623489801, T4, T3);
        ro[WS(os, 9)]  = SIMD_FNMADD(KP781831482, T4, Tb);
        ro[WS(os, 5)]  = SIMD_FMADD(KP781831482, T4, Tb);
        ro[WS(os, 2)]  = SIMD_FMADD(KP781831482, T4, Tc);
        ro[WS(os, 12)] = SIMD_FNMADD(KP781831482, T4, Tc);
        ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T4, Tf);
        ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T4, Tf);
        ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T4, Tg);
        ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T4, Tg);
        ro[WS(os, 1)]  = SIMD_FMADD(KP433883739, T4, T6);
        ro[WS(os, 13)] = SIMD_FNMADD(KP433883739, T4, T6);
        ro[WS(os, 6)]  = SIMD_FMADD(KP433883739, T4, T5);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP433883739, T4, T5);
        io[WS(os, 9)]  = SIMD_FMADD(KP781831482, T2, T9);
        io[WS(os, 5)]  = SIMD_FNMADD(KP781831482, T2, T9);
        io[WS(os, 2)]  = SIMD_FNMADD(KP781831482, T2, Ta);
        io[WS(os, 12)] = SIMD_FMADD(KP781831482, T2, Ta);
        io[WS(os, 6)]  = SIMD_FNMADD(KP433883739, T2, Td);
        io[WS(os, 8)]  = SIMD_FMADD(KP433883739, T2, Td);
        io[WS(os, 1)]  = SIMD_FNMADD(KP433883739, T2, Te);
        io[WS(os, 13)] = SIMD_FMADD(KP433883739, T2, Te);
        io[WS(os, 11)] = SIMD_FMADD(KP974927912, T2, T8);
        io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, T2, T8);
        io[WS(os, 10)] = SIMD_FMADD(KP974927912, T2, T7);
        io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, T2, T7);
    }
}

template <>
struct c2cf_traits<14, 3>
{
    static constexpr long_t flops           = 128;
    static constexpr long_t operations      = 68;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 52;
    static constexpr long_t constants       = 10;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 3 -name c2cf
 * -standalone */

/*
 * This function contains 68 FP additions, 60 FP multiplications,
 * (or, 8 additions, 0 multiplications, 60 fused multiply/add),
 * 52 stack variables, 10 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 3>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP781831482, +0.781831482468029808708444526674057750232334519);
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP623489801, +0.623489801858733530525004884004239810632274731);
    DK(KP445041867, +0.445041867912628808577805128993589518932711138);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP246979603, +0.246979603717467061050009768008479621264549462);
    {
        SIMD_FLOAT T1, T9, T2, T3, T6, T7;
        T1            = ri[0];
        T9            = ii[0];
        T2            = ri[WS(is, 2)];
        T3            = ri[WS(is, 1)];
        T6            = ii[WS(is, 1)];
        T7            = ii[WS(is, 2)];
        ro[0]         = T1 + T2 + T3;
        ro[WS(os, 7)] = T1 + T2 - T3;
        {
            SIMD_FLOAT T4, TE, Ty, Td, TD, Tc, Tg, Tv, Tr, To, Tu, Tl, T8, TG,
                TA;
            SIMD_FLOAT Tf, TB, Ta, Ti, Tx, Tp, Tm, Ts, Tj, Tw, Th, Te, Tz, TF,
                T5;
            SIMD_FLOAT Tk, Tt, Tn, Tq, Tb, TC;
            T4             = SIMD_FMADD(KP246979603, T3, T2);
            TE             = SIMD_FMSUB(KP246979603, T3, T2);
            Ty             = SIMD_FNMADD(KP356895867, T2, T3);
            Td             = SIMD_FMSUB(KP692021471, T2, T3);
            TD             = SIMD_FMADD(KP554958132, T3, T2);
            Tc             = SIMD_FMSUB(KP554958132, T3, T2);
            Tg             = SIMD_FMADD(KP692021471, T2, T3);
            Tv             = SIMD_FMADD(KP356895867, T2, T3);
            Tr             = SIMD_FMSUB(KP801937735, T3, T2);
            To             = SIMD_FMADD(KP445041867, T2, T3);
            Tu             = SIMD_FMADD(KP801937735, T3, T2);
            Tl             = SIMD_FNMADD(KP445041867, T2, T3);
            io[0]          = T9 + T7 + T6;
            io[WS(os, 7)]  = T9 + T7 - T6;
            T8             = SIMD_FMSUB(KP445041867, T7, T6);
            TG             = SIMD_FMADD(KP445041867, T7, T6);
            TA             = SIMD_FMADD(KP801937735, T6, T7);
            Tf             = SIMD_FNMADD(KP554958132, T6, T7);
            TB             = SIMD_FMADD(KP692021471, T7, T6);
            Ta             = SIMD_FMSUB(KP692021471, T7, T6);
            Ti             = SIMD_FMADD(KP554958132, T6, T7);
            Tx             = SIMD_FNMADD(KP801937735, T6, T7);
            Tp             = SIMD_FMADD(KP356895867, T7, T6);
            Tm             = SIMD_FMSUB(KP246979603, T6, T7);
            Ts             = SIMD_FNMADD(KP356895867, T7, T6);
            Tj             = SIMD_FMADD(KP246979603, T6, T7);
            Tw             = SIMD_FNMADD(KP623489801, Tv, T1);
            Th             = SIMD_FMADD(KP900968867, Tg, T1);
            Te             = SIMD_FMADD(KP900968867, Td, T1);
            Tz             = SIMD_FMADD(KP623489801, Ty, T1);
            TF             = SIMD_FMADD(KP900968867, TE, T1);
            T5             = SIMD_FNMADD(KP900968867, T4, T1);
            Tk             = SIMD_FNMADD(KP900968867, Tj, T9);
            Tt             = SIMD_FMADD(KP623489801, Ts, T9);
            Tn             = SIMD_FMADD(KP900968867, Tm, T9);
            Tq             = SIMD_FNMADD(KP623489801, Tp, T9);
            Tb             = SIMD_FMADD(KP900968867, Ta, T9);
            TC             = SIMD_FMADD(KP900968867, TB, T9);
            ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, Tx, Tw);
            ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, Tx, Tw);
            ro[WS(os, 1)]  = SIMD_FMADD(KP781831482, Ti, Th);
            ro[WS(os, 13)] = SIMD_FNMADD(KP781831482, Ti, Th);
            ro[WS(os, 8)]  = SIMD_FMADD(KP781831482, Tf, Te);
            ro[WS(os, 6)]  = SIMD_FNMADD(KP781831482, Tf, Te);
            ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TA, Tz);
            ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TA, Tz);
            ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TG, TF);
            ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TG, TF);
            ro[WS(os, 10)] = SIMD_FMADD(KP974927912, T8, T5);
            ro[WS(os, 4)]  = SIMD_FNMADD(KP974927912, T8, T5);
            io[WS(os, 10)] = SIMD_FMADD(KP974927912, Tl, Tk);
            io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, Tl, Tk);
            io[WS(os, 12)] = SIMD_FMADD(KP974927912, Tu, Tt);
            io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, Tu, Tt);
            io[WS(os, 11)] = SIMD_FMADD(KP974927912, To, Tn);
            io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, To, Tn);
            io[WS(os, 9)]  = SIMD_FMADD(KP974927912, Tr, Tq);
            io[WS(os, 5)]  = SIMD_FNMADD(KP974927912, Tr, Tq);
            io[WS(os, 8)]  = SIMD_FMADD(KP781831482, Tc, Tb);
            io[WS(os, 6)]  = SIMD_FNMADD(KP781831482, Tc, Tb);
            io[WS(os, 13)] = SIMD_FMADD(KP781831482, TD, TC);
            io[WS(os, 1)]  = SIMD_FNMADD(KP781831482, TD, TC);
        }
    }
}

template <>
struct c2cf_traits<14, 4>
{
    static constexpr long_t flops           = 158;
    static constexpr long_t operations      = 85;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 65;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 4 -name c2cf
 * -standalone */

/*
 * This function contains 85 FP additions, 73 FP multiplications,
 * (or, 12 additions, 0 multiplications, 73 fused multiply/add),
 * 65 stack variables, 8 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 4>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP445041867, +0.445041867912628808577805128993589518932711138);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    DK(KP246979603, +0.246979603717467061050009768008479621264549462);
    {
        SIMD_FLOAT T1, T5, T2, T3, T4, T6, T7, T8, T9, TN, Tx, Tk, TI, Ts, Th;
        SIMD_FLOAT TF, Tp, Tc, TA, TQ, TU, Tw, Tt, TJ, TM, To, Tl;
        T1            = ri[0];
        T5            = ii[0];
        T2            = ri[WS(is, 2)];
        T3            = ri[WS(is, 1)];
        T4            = ri[WS(is, 3)];
        T6            = ii[WS(is, 2)];
        T7            = ii[WS(is, 1)];
        T8            = ii[WS(is, 3)];
        ro[0]         = T1 + T2 + T4 + T3;
        ro[WS(os, 7)] = T1 + T2 - T3 - T4;
        T9            = SIMD_FMADD(KP246979603, T4, T3);
        TN            = SIMD_FMSUB(KP356895867, T3, T4);
        Tx            = SIMD_FMSUB(KP692021471, T3, T4);
        Tk            = SIMD_FNMADD(KP801937735, T4, T3);
        TI            = SIMD_FMADD(KP445041867, T3, T4);
        Ts            = SIMD_FMADD(KP554958132, T4, T3);
        io[0]         = T5 + T6 + T8 + T7;
        io[WS(os, 7)] = T5 + T6 - T7 - T8;
        Th            = SIMD_FMSUB(KP356895867, T7, T8);
        TF            = SIMD_FMADD(KP246979603, T8, T7);
        Tp            = SIMD_FMSUB(KP692021471, T7, T8);
        Tc            = SIMD_FMADD(KP445041867, T7, T8);
        TA            = SIMD_FMADD(KP554958132, T8, T7);
        TQ            = SIMD_FMSUB(KP554958132, T6, T8);
        TU            = SIMD_FMADD(KP554958132, T6, T8);
        Tw            = SIMD_FMADD(KP801937735, Ts, T2);
        Tt            = SIMD_FNMADD(KP801937735, Ts, T2);
        TJ            = SIMD_FNMADD(KP801937735, T2, TI);
        TM            = SIMD_FMADD(KP801937735, T2, TI);
        To            = SIMD_FMADD(KP445041867, T2, Tk);
        Tl            = SIMD_FNMADD(KP445041867, T2, Tk);
        {
            SIMD_FLOAT TC, Ty, TS, TO, Te, Ta, TE, TB, TR, TV, Tg, Td, Tu, Tq,
                TG;
            SIMD_FLOAT TK, Ti, Tm, TD, Tz, TT, TP, Tf, Tb, Tv, Tr, TH, TL, Tj,
                Tn;
            TC             = SIMD_FNMADD(KP246979603, T2, Tx);
            Ty             = SIMD_FMADD(KP246979603, T2, Tx);
            TS             = SIMD_FMADD(KP692021471, TN, T2);
            TO             = SIMD_FMSUB(KP692021471, TN, T2);
            Te             = SIMD_FNMADD(KP692021471, T2, T9);
            Ta             = SIMD_FMADD(KP692021471, T2, T9);
            TE             = SIMD_FMADD(KP801937735, TA, T6);
            TB             = SIMD_FNMADD(KP801937735, TA, T6);
            TR             = SIMD_FMADD(KP801937735, TQ, T7);
            TV             = SIMD_FNMADD(KP801937735, TU, T7);
            Tg             = SIMD_FNMADD(KP801937735, T6, Tc);
            Td             = SIMD_FMADD(KP801937735, T6, Tc);
            Tu             = SIMD_FNMADD(KP246979603, T6, Tp);
            Tq             = SIMD_FMADD(KP246979603, T6, Tp);
            TG             = SIMD_FNMADD(KP692021471, T6, TF);
            TK             = SIMD_FMADD(KP692021471, T6, TF);
            Ti             = SIMD_FMADD(KP692021471, Th, T6);
            Tm             = SIMD_FMSUB(KP692021471, Th, T6);
            TD             = SIMD_FMADD(KP900968867, TC, T1);
            Tz             = SIMD_FNMADD(KP900968867, Ty, T1);
            TT             = SIMD_FNMADD(KP900968867, TS, T1);
            TP             = SIMD_FMADD(KP900968867, TO, T1);
            Tf             = SIMD_FNMADD(KP900968867, Te, T1);
            Tb             = SIMD_FMADD(KP900968867, Ta, T1);
            Tv             = SIMD_FMADD(KP900968867, Tu, T5);
            Tr             = SIMD_FNMADD(KP900968867, Tq, T5);
            TH             = SIMD_FNMADD(KP900968867, TG, T5);
            TL             = SIMD_FMADD(KP900968867, TK, T5);
            Tj             = SIMD_FNMADD(KP900968867, Ti, T5);
            Tn             = SIMD_FMADD(KP900968867, Tm, T5);
            ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TE, TD);
            ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TE, TD);
            ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TB, Tz);
            ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TB, Tz);
            ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, TV, TT);
            ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, TV, TT);
            ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TR, TP);
            ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TR, TP);
            ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, Tg, Tf);
            ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, Tg, Tf);
            ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, Td, Tb);
            ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, Td, Tb);
            io[WS(os, 12)] = SIMD_FMADD(KP974927912, Tw, Tv);
            io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, Tw, Tv);
            io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, Tt, Tr);
            io[WS(os, 5)]  = SIMD_FMADD(KP974927912, Tt, Tr);
            io[WS(os, 8)]  = SIMD_FMADD(KP974927912, TJ, TH);
            io[WS(os, 6)]  = SIMD_FNMADD(KP974927912, TJ, TH);
            io[WS(os, 13)] = SIMD_FMADD(KP974927912, TM, TL);
            io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, TM, TL);
            io[WS(os, 10)] = SIMD_FMADD(KP974927912, Tl, Tj);
            io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, Tl, Tj);
            io[WS(os, 11)] = SIMD_FMADD(KP974927912, To, Tn);
            io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, To, Tn);
        }
    }
}

template <>
struct c2cf_traits<14, 5>
{
    static constexpr long_t flops           = 184;
    static constexpr long_t operations      = 100;
    static constexpr long_t memory_accesses = 38;
    static constexpr long_t stack_vars      = 80;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 5 -name c2cf
 * -standalone */

/*
 * This function contains 100 FP additions, 84 FP multiplications,
 * (or, 16 additions, 0 multiplications, 84 fused multiply/add),
 * 80 stack variables, 6 constants, and 38 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 5>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT T1, T8, T2, T6, T3, T4, T9, Td, Ta, Tb;
        T1 = ri[0];
        T8 = ii[0];
        T2 = ri[WS(is, 2)];
        T6 = ri[WS(is, 1)];
        T3 = ri[WS(is, 4)];
        T4 = ri[WS(is, 3)];
        T9 = ii[WS(is, 2)];
        Td = ii[WS(is, 1)];
        Ta = ii[WS(is, 4)];
        Tb = ii[WS(is, 3)];
        {
            SIMD_FLOAT TJ, TO, T11, TW, T5, T7, Tz, TE, Ts, Tx, Tc, Te, T12,
                T18, TC;
            SIMD_FLOAT TP, Tp, Tn, TX, TH, T13, TK, Tu, Ti, Ty, TF, TM, Tf, T16,
                TT;
            SIMD_FLOAT Tt, TA, Tk, TR;
            TJ            = SIMD_FMADD(KP356895867, T2, T6);
            TO            = SIMD_FNMADD(KP356895867, T2, T6);
            T11           = SIMD_FMADD(KP554958132, T6, T2);
            TW            = SIMD_FNMADD(KP554958132, T6, T2);
            T5            = T3 - T4;
            T7            = T3 + T4;
            Tz            = SIMD_FMADD(KP356895867, T9, Td);
            TE            = SIMD_FNMADD(KP356895867, T9, Td);
            Ts            = SIMD_FNMADD(KP554958132, Td, T9);
            Tx            = SIMD_FMADD(KP554958132, Td, T9);
            Tc            = Ta - Tb;
            Te            = Ta + Tb;
            T12           = SIMD_FMADD(KP801937735, T11, T7);
            ro[0]         = T1 + T2 + T7 + T6;
            T18           = SIMD_FNMADD(KP356895867, T6, T7);
            TC            = SIMD_FMADD(KP554958132, T7, T6);
            TP            = SIMD_FNMADD(KP692021471, TO, T7);
            Tp            = SIMD_FNMADD(KP356895867, T7, T2);
            Tn            = SIMD_FNMADD(KP554958132, T2, T7);
            TX            = SIMD_FMADD(KP801937735, TW, T5);
            ro[WS(os, 7)] = T1 + T2 + T5 - T6;
            TH            = SIMD_FNMADD(KP554958132, T5, T6);
            T13           = SIMD_FMADD(KP356895867, T6, T5);
            TK            = SIMD_FMADD(KP692021471, TJ, T5);
            Tu            = SIMD_FNMADD(KP356895867, T5, T2);
            Ti            = SIMD_FNMADD(KP554958132, T2, T5);
            Ty            = SIMD_FMADD(KP801937735, Tx, Te);
            io[0]         = T8 + T9 + Te + Td;
            TF            = SIMD_FNMADD(KP692021471, TE, Te);
            TM            = SIMD_FMADD(KP554958132, Te, Td);
            Tf            = SIMD_FNMADD(KP356895867, Td, Te);
            T16           = SIMD_FNMADD(KP554958132, T9, Te);
            TT            = SIMD_FNMADD(KP356895867, Te, T9);
            Tt            = SIMD_FMADD(KP801937735, Ts, Tc);
            io[WS(os, 7)] = T8 + T9 + Tc - Td;
            TA            = SIMD_FMADD(KP692021471, Tz, Tc);
            Tk            = SIMD_FMADD(KP356895867, Td, Tc);
            TR            = SIMD_FNMADD(KP554958132, Tc, Td);
            {
                SIMD_FLOAT T1b, TY, TD, TQ, To, Tq, T19, TI, TL, Tv, T14, Tj,
                    TG, TN, TU;
                SIMD_FLOAT T17, Tg, TB, TS, Tl, TZ, T1c, Tr, T1a, Tw, T15, TV,
                    Th, Tm, T10;
                T1b            = SIMD_FNMADD(KP554958132, T9, Tc);
                TY             = SIMD_FNMADD(KP356895867, Tc, T9);
                TD             = SIMD_FNMADD(KP801937735, TC, T2);
                TQ             = SIMD_FNMADD(KP900968867, TP, T1);
                To             = SIMD_FNMADD(KP801937735, Tn, T6);
                Tq             = SIMD_FNMADD(KP692021471, Tp, T6);
                T19            = SIMD_FNMADD(KP692021471, T18, T2);
                TI             = SIMD_FMADD(KP801937735, TH, T2);
                TL             = SIMD_FNMADD(KP900968867, TK, T1);
                Tv             = SIMD_FMADD(KP692021471, Tu, T6);
                T14            = SIMD_FNMADD(KP692021471, T13, T2);
                Tj             = SIMD_FMADD(KP801937735, Ti, T6);
                TG             = SIMD_FNMADD(KP900968867, TF, T8);
                TN             = SIMD_FNMADD(KP801937735, TM, T9);
                TU             = SIMD_FNMADD(KP692021471, TT, Td);
                T17            = SIMD_FNMADD(KP801937735, T16, Td);
                Tg             = SIMD_FNMADD(KP692021471, Tf, T9);
                TB             = SIMD_FNMADD(KP900968867, TA, T8);
                TS             = SIMD_FMADD(KP801937735, TR, T9);
                Tl             = SIMD_FNMADD(KP692021471, Tk, T9);
                TZ             = SIMD_FMADD(KP692021471, TY, Td);
                T1c            = SIMD_FMADD(KP801937735, T1b, Td);
                Tr             = SIMD_FNMADD(KP900968867, Tq, T1);
                T1a            = SIMD_FNMADD(KP900968867, T19, T1);
                Tw             = SIMD_FMADD(KP900968867, Tv, T1);
                T15            = SIMD_FNMADD(KP900968867, T14, T1);
                io[WS(os, 12)] = SIMD_FMADD(KP974927912, TI, TG);
                io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, TI, TG);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TN, TL);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TN, TL);
                TV             = SIMD_FNMADD(KP900968867, TU, T8);
                Th             = SIMD_FNMADD(KP900968867, Tg, T8);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, TD, TB);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, TD, TB);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TS, TQ);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TS, TQ);
                Tm             = SIMD_FNMADD(KP900968867, Tl, T8);
                T10            = SIMD_FMADD(KP900968867, TZ, T8);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, Tt, Tr);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, Tt, Tr);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1c, T1a);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1c, T1a);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, Ty, Tw);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, Ty, Tw);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T17, T15);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T17, T15);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, TX, TV);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, TX, TV);
                io[WS(os, 10)] = SIMD_FMADD(KP974927912, Tj, Th);
                io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, Tj, Th);
                io[WS(os, 11)] = SIMD_FMADD(KP974927912, To, Tm);
                io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, To, Tm);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, T12, T10);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T12, T10);
            }
        }
    }
}

template <>
struct c2cf_traits<14, 6>
{
    static constexpr long_t flops           = 188;
    static constexpr long_t operations      = 104;
    static constexpr long_t memory_accesses = 40;
    static constexpr long_t stack_vars      = 86;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 6 -name c2cf
 * -standalone */

/*
 * This function contains 104 FP additions, 84 FP multiplications,
 * (or, 20 additions, 0 multiplications, 84 fused multiply/add),
 * 86 stack variables, 6 constants, and 40 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 6>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT T1, Tb, T8, T5, T6, T2, T3, Ti, Tf, Tg, Tc, Td, T7, Ta, T4;
        SIMD_FLOAT T9, Th, Tk, Te, Tj;
        T1 = ri[0];
        Tb = ii[0];
        T8 = ri[WS(is, 1)];
        T5 = ri[WS(is, 4)];
        T6 = ri[WS(is, 3)];
        T2 = ri[WS(is, 2)];
        T3 = ri[WS(is, 5)];
        Ti = ii[WS(is, 1)];
        Tf = ii[WS(is, 4)];
        Tg = ii[WS(is, 3)];
        Tc = ii[WS(is, 2)];
        Td = ii[WS(is, 5)];
        T7 = T5 - T6;
        Ta = T5 + T6;
        T4 = T2 - T3;
        T9 = T2 + T3;
        Th = Tf - Tg;
        Tk = Tf + Tg;
        Te = Tc - Td;
        Tj = Tc + Td;
        {
            SIMD_FLOAT T1e, TI, T19, TN, TU, T17, Tv, Tt, T12, TP, To, TA, Tl,
                TS, Tq;
            SIMD_FLOAT TX, TK, TD, T1c, TZ, Ty, TF, T1h, T14, TJ, T1f, TO, T1a,
                TV, Tu;
            T1e           = SIMD_FNMADD(KP356895867, T8, Ta);
            TI            = SIMD_FMADD(KP554958132, Ta, T8);
            T19           = SIMD_FMADD(KP356895867, T8, T7);
            TN            = SIMD_FNMADD(KP554958132, T7, T8);
            ro[0]         = T1 + T9 + Ta + T8;
            TU            = SIMD_FNMADD(KP356895867, T9, T8);
            T17           = SIMD_FMADD(KP554958132, T8, T9);
            Tv            = SIMD_FNMADD(KP356895867, Ta, T9);
            Tt            = SIMD_FNMADD(KP554958132, T9, Ta);
            ro[WS(os, 7)] = T1 + T4 + T7 - T8;
            T12           = SIMD_FNMADD(KP554958132, T8, T4);
            TP            = SIMD_FMADD(KP356895867, T4, T8);
            To            = SIMD_FNMADD(KP554958132, T4, T7);
            TA            = SIMD_FNMADD(KP356895867, T7, T4);
            Tl            = SIMD_FNMADD(KP356895867, Ti, Tk);
            TS            = SIMD_FMADD(KP554958132, Tk, Ti);
            Tq            = SIMD_FMADD(KP356895867, Ti, Th);
            TX            = SIMD_FNMADD(KP554958132, Th, Ti);
            io[0]         = Tb + Tj + Tk + Ti;
            TK            = SIMD_FNMADD(KP356895867, Tj, Ti);
            TD            = SIMD_FMADD(KP554958132, Ti, Tj);
            T1c           = SIMD_FNMADD(KP554958132, Tj, Tk);
            TZ            = SIMD_FNMADD(KP356895867, Tk, Tj);
            io[WS(os, 7)] = Tb + Te + Th - Ti;
            Ty            = SIMD_FNMADD(KP554958132, Ti, Te);
            TF            = SIMD_FMADD(KP356895867, Te, Ti);
            T1h           = SIMD_FNMADD(KP554958132, Te, Th);
            T14           = SIMD_FNMADD(KP356895867, Th, Te);
            TJ            = SIMD_FNMADD(KP801937735, TI, T9);
            T1f           = SIMD_FNMADD(KP692021471, T1e, T9);
            TO            = SIMD_FMADD(KP801937735, TN, T4);
            T1a           = SIMD_FNMADD(KP692021471, T19, T4);
            TV            = SIMD_FNMADD(KP692021471, TU, Ta);
            Tu            = SIMD_FNMADD(KP801937735, Tt, T8);
            {
                SIMD_FLOAT Tw, T18, TQ, T13, TB, Tp, TT, Tm, TY, Tr, TL, T10,
                    TE, T1d, TG;
                SIMD_FLOAT Tz, T15, T1i, T1g, T1b, TW, Tx, TR, TC, Tn, Ts, TM,
                    T11, TH, T16;
                Tw             = SIMD_FNMADD(KP692021471, Tv, T8);
                T18            = SIMD_FMADD(KP801937735, T17, Ta);
                TQ             = SIMD_FMADD(KP692021471, TP, T7);
                T13            = SIMD_FMADD(KP801937735, T12, T7);
                TB             = SIMD_FMADD(KP692021471, TA, T8);
                Tp             = SIMD_FMADD(KP801937735, To, T8);
                TT             = SIMD_FNMADD(KP801937735, TS, Tj);
                Tm             = SIMD_FNMADD(KP692021471, Tl, Tj);
                TY             = SIMD_FMADD(KP801937735, TX, Te);
                Tr             = SIMD_FNMADD(KP692021471, Tq, Te);
                TL             = SIMD_FNMADD(KP692021471, TK, Tk);
                T10            = SIMD_FNMADD(KP692021471, TZ, Ti);
                TE             = SIMD_FMADD(KP801937735, TD, Tk);
                T1d            = SIMD_FNMADD(KP801937735, T1c, Ti);
                TG             = SIMD_FMADD(KP692021471, TF, Th);
                Tz             = SIMD_FMADD(KP801937735, Ty, Th);
                T15            = SIMD_FMADD(KP692021471, T14, Ti);
                T1i            = SIMD_FMADD(KP801937735, T1h, Ti);
                T1g            = SIMD_FNMADD(KP900968867, T1f, T1);
                T1b            = SIMD_FNMADD(KP900968867, T1a, T1);
                TW             = SIMD_FNMADD(KP900968867, TV, T1);
                Tx             = SIMD_FNMADD(KP900968867, Tw, T1);
                TR             = SIMD_FNMADD(KP900968867, TQ, T1);
                TC             = SIMD_FMADD(KP900968867, TB, T1);
                Tn             = SIMD_FNMADD(KP900968867, Tm, Tb);
                Ts             = SIMD_FNMADD(KP900968867, Tr, Tb);
                TM             = SIMD_FNMADD(KP900968867, TL, Tb);
                T11            = SIMD_FNMADD(KP900968867, T10, Tb);
                TH             = SIMD_FNMADD(KP900968867, TG, Tb);
                T16            = SIMD_FMADD(KP900968867, T15, Tb);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1i, T1g);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1i, T1g);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1d, T1b);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1d, T1b);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TY, TW);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TY, TW);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, Tz, Tx);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, Tz, Tx);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TT, TR);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TT, TR);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TE, TC);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TE, TC);
                io[WS(os, 10)] = SIMD_FMADD(KP974927912, Tp, Tn);
                io[WS(os, 4)]  = SIMD_FNMADD(KP974927912, Tp, Tn);
                io[WS(os, 11)] = SIMD_FMADD(KP974927912, Tu, Ts);
                io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, Tu, Ts);
                io[WS(os, 12)] = SIMD_FMADD(KP974927912, TO, TM);
                io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, TO, TM);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T13, T11);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T13, T11);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, TJ, TH);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, TJ, TH);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, T18, T16);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T18, T16);
            }
        }
    }
}

template <>
struct c2cf_traits<14, 7>
{
    static constexpr long_t flops           = 192;
    static constexpr long_t operations      = 108;
    static constexpr long_t memory_accesses = 42;
    static constexpr long_t stack_vars      = 92;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 7 -name c2cf
 * -standalone */

/*
 * This function contains 108 FP additions, 84 FP multiplications,
 * (or, 24 additions, 0 multiplications, 84 fused multiply/add),
 * 92 stack variables, 6 constants, and 42 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 7>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT T1, Te, T2, T3, T8, T9, T5, T6, Tf, Tg, Tl, Tm, Ti, Tj, T4;
        SIMD_FLOAT Tb, Ta, Td, T7, Tc, Th, TS, Tn, TU, Tk, TT;
        T1 = ri[0];
        Te = ii[0];
        T2 = ri[WS(is, 2)];
        T3 = ri[WS(is, 5)];
        T8 = ri[WS(is, 6)];
        T9 = ri[WS(is, 1)];
        T5 = ri[WS(is, 4)];
        T6 = ri[WS(is, 3)];
        Tf = ii[WS(is, 2)];
        Tg = ii[WS(is, 5)];
        Tl = ii[WS(is, 6)];
        Tm = ii[WS(is, 1)];
        Ti = ii[WS(is, 4)];
        Tj = ii[WS(is, 3)];
        T4 = T2 - T3;
        Tb = T2 + T3;
        Ta = T8 - T9;
        Td = T8 + T9;
        T7 = T5 - T6;
        Tc = T5 + T6;
        Th = Tf - Tg;
        TS = Tf + Tg;
        Tn = Tl - Tm;
        TU = Tl + Tm;
        Tk = Ti - Tj;
        TT = Ti + Tj;
        {
            SIMD_FLOAT TD, TL, T1a, T1i, TN, TB, Tr, Tt, TY, T10, T1k, T18, T15,
                T13, Ty;
            SIMD_FLOAT Tw, TV, T1d, T1n, T1f, TQ, TI, To, TG, TM, TE, T1j, T1b,
                TO, Tu;
            TD            = SIMD_FNMADD(KP356895867, Tb, Td);
            TL            = SIMD_FMADD(KP554958132, Td, Tb);
            T1a           = SIMD_FNMADD(KP356895867, T4, Ta);
            T1i           = SIMD_FMADD(KP554958132, Ta, T4);
            ro[0]         = T1 + Tb + Tc + Td;
            TN            = SIMD_FNMADD(KP356895867, Td, Tc);
            TB            = SIMD_FMADD(KP554958132, Tc, Td);
            Tr            = SIMD_FNMADD(KP554958132, Tb, Tc);
            Tt            = SIMD_FNMADD(KP356895867, Tc, Tb);
            ro[WS(os, 7)] = T1 + T4 + T7 + Ta;
            TY            = SIMD_FNMADD(KP554958132, T4, T7);
            T10           = SIMD_FNMADD(KP356895867, T7, T4);
            T1k           = SIMD_FNMADD(KP356895867, Ta, T7);
            T18           = SIMD_FMADD(KP554958132, T7, Ta);
            T15           = SIMD_FNMADD(KP356895867, TS, TU);
            T13           = SIMD_FMADD(KP554958132, TU, TS);
            Ty            = SIMD_FNMADD(KP356895867, Th, Tn);
            Tw            = SIMD_FMADD(KP554958132, Tn, Th);
            io[0]         = Te + TS + TT + TU;
            TV            = SIMD_FNMADD(KP356895867, TU, TT);
            T1d           = SIMD_FMADD(KP554958132, TT, TU);
            T1n           = SIMD_FNMADD(KP554958132, TS, TT);
            T1f           = SIMD_FNMADD(KP356895867, TT, TS);
            io[WS(os, 7)] = Te + Th + Tk + Tn;
            TQ            = SIMD_FNMADD(KP554958132, Th, Tk);
            TI            = SIMD_FNMADD(KP356895867, Tk, Th);
            To            = SIMD_FNMADD(KP356895867, Tn, Tk);
            TG            = SIMD_FMADD(KP554958132, Tk, Tn);
            TM            = SIMD_FMADD(KP801937735, TL, Tc);
            TE            = SIMD_FNMADD(KP692021471, TD, Tc);
            T1j           = SIMD_FMADD(KP801937735, T1i, T7);
            T1b           = SIMD_FNMADD(KP692021471, T1a, T7);
            TO            = SIMD_FNMADD(KP692021471, TN, Tb);
            Tu            = SIMD_FNMADD(KP692021471, Tt, Td);
            {
                SIMD_FLOAT TC, Ts, T11, TZ, T19, T1l, T14, T16, Tx, Tz, TW, T1g,
                    T1e, T1o, TJ;
                SIMD_FLOAT TR, TH, Tp, TF, T1c, TP, Tv, T12, T1m, T17, TA, TX,
                    T1h, TK, Tq;
                TC             = SIMD_FNMADD(KP801937735, TB, Tb);
                Ts             = SIMD_FNMADD(KP801937735, Tr, Td);
                T11            = SIMD_FNMADD(KP692021471, T10, Ta);
                TZ             = SIMD_FNMADD(KP801937735, TY, Ta);
                T19            = SIMD_FNMADD(KP801937735, T18, T4);
                T1l            = SIMD_FNMADD(KP692021471, T1k, T4);
                T14            = SIMD_FMADD(KP801937735, T13, TT);
                T16            = SIMD_FNMADD(KP692021471, T15, TT);
                Tx             = SIMD_FMADD(KP801937735, Tw, Tk);
                Tz             = SIMD_FNMADD(KP692021471, Ty, Tk);
                TW             = SIMD_FNMADD(KP692021471, TV, TS);
                T1g            = SIMD_FNMADD(KP692021471, T1f, TU);
                T1e            = SIMD_FNMADD(KP801937735, T1d, TS);
                T1o            = SIMD_FNMADD(KP801937735, T1n, TU);
                TJ             = SIMD_FNMADD(KP692021471, TI, Tn);
                TR             = SIMD_FNMADD(KP801937735, TQ, Tn);
                TH             = SIMD_FNMADD(KP801937735, TG, Th);
                Tp             = SIMD_FNMADD(KP692021471, To, Th);
                TF             = SIMD_FNMADD(KP900968867, TE, T1);
                T1c            = SIMD_FNMADD(KP900968867, T1b, T1);
                TP             = SIMD_FNMADD(KP900968867, TO, T1);
                Tv             = SIMD_FNMADD(KP900968867, Tu, T1);
                T12            = SIMD_FNMADD(KP900968867, T11, T1);
                T1m            = SIMD_FNMADD(KP900968867, T1l, T1);
                T17            = SIMD_FNMADD(KP900968867, T16, Te);
                TA             = SIMD_FNMADD(KP900968867, Tz, Te);
                TX             = SIMD_FNMADD(KP900968867, TW, Te);
                T1h            = SIMD_FNMADD(KP900968867, T1g, Te);
                TK             = SIMD_FNMADD(KP900968867, TJ, Te);
                Tq             = SIMD_FNMADD(KP900968867, Tp, Te);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TH, TF);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TH, TF);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1e, T1c);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T1e, T1c);
                ro[WS(os, 10)] = SIMD_FMADD(KP974927912, TR, TP);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP974927912, TR, TP);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, Tx, Tv);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, Tx, Tv);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, T14, T12);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, T14, T12);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1o, T1m);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1o, T1m);
                io[WS(os, 12)] = SIMD_FMADD(KP974927912, T19, T17);
                io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, T19, T17);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, TC, TA);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, TC, TA);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, TZ, TX);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, TZ, TX);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1j, T1h);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1j, T1h);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, TM, TK);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, TM, TK);
                io[WS(os, 11)] = SIMD_FMADD(KP974927912, Ts, Tq);
                io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, Ts, Tq);
            }
        }
    }
}

template <>
struct c2cf_traits<14, 8>
{
    static constexpr long_t flops           = 196;
    static constexpr long_t operations      = 112;
    static constexpr long_t memory_accesses = 44;
    static constexpr long_t stack_vars      = 98;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 8 -name c2cf
 * -standalone */

/*
 * This function contains 112 FP additions, 84 FP multiplications,
 * (or, 28 additions, 0 multiplications, 84 fused multiply/add),
 * 98 stack variables, 6 constants, and 44 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 8>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tq, Td, T3, TX, Tj, Te, T6, Tg, Tc, Tf, T9, TY, Tm, Tr, Tn;
        SIMD_FLOAT To, T1, T2, Th, Ti, T4, T5, Ta, Tb, T7, T8, Tk, Tl, Tx, Tv;
        T1 = ri[0];
        T2 = ri[WS(is, 7)];
        Th = ii[0];
        Ti = ii[WS(is, 7)];
        T4 = ri[WS(is, 2)];
        T5 = ri[WS(is, 5)];
        Ta = ri[WS(is, 6)];
        Tb = ri[WS(is, 1)];
        T7 = ri[WS(is, 4)];
        T8 = ri[WS(is, 3)];
        Tk = ii[WS(is, 2)];
        Tl = ii[WS(is, 5)];
        Tq = ii[WS(is, 6)];
        Td = T1 + T2;
        T3 = T1 - T2;
        TX = Th + Ti;
        Tj = Th - Ti;
        Te = T4 + T5;
        T6 = T4 - T5;
        Tg = Ta + Tb;
        Tc = Ta - Tb;
        Tf = T7 + T8;
        T9 = T7 - T8;
        TY = Tk + Tl;
        Tm = Tk - Tl;
        Tr = ii[WS(is, 1)];
        Tn = ii[WS(is, 4)];
        To = ii[WS(is, 3)];
        {
            SIMD_FLOAT TI, TQ, T1g, T1o, TS, TG, Tw, Ty, T14, T16, T1q, T1e, Ts,
                T10, Tp;
            SIMD_FLOAT TZ, TR, TJ, T1p, T1h, TT, Tz, TH, T17, T15, T1f, T1r,
                T1b, T19, TD;
            SIMD_FLOAT TB;
            TI            = SIMD_FNMADD(KP356895867, Te, Tg);
            TQ            = SIMD_FMADD(KP554958132, Tg, Te);
            T1g           = SIMD_FNMADD(KP356895867, T6, Tc);
            T1o           = SIMD_FMADD(KP554958132, Tc, T6);
            ro[0]         = Td + Te + Tf + Tg;
            TS            = SIMD_FNMADD(KP356895867, Tg, Tf);
            TG            = SIMD_FMADD(KP554958132, Tf, Tg);
            Tw            = SIMD_FNMADD(KP554958132, Te, Tf);
            Ty            = SIMD_FNMADD(KP356895867, Tf, Te);
            ro[WS(os, 7)] = T3 + T6 + T9 + Tc;
            T14           = SIMD_FNMADD(KP554958132, T6, T9);
            T16           = SIMD_FNMADD(KP356895867, T9, T6);
            T1q           = SIMD_FNMADD(KP356895867, Tc, T9);
            T1e           = SIMD_FMADD(KP554958132, T9, Tc);
            Ts            = Tq - Tr;
            T10           = Tq + Tr;
            Tp            = Tn - To;
            TZ            = Tn + To;
            TR            = SIMD_FMADD(KP801937735, TQ, Tf);
            TJ            = SIMD_FNMADD(KP692021471, TI, Tf);
            T1p           = SIMD_FMADD(KP801937735, T1o, T9);
            T1h           = SIMD_FNMADD(KP692021471, T1g, T9);
            TT            = SIMD_FNMADD(KP692021471, TS, Te);
            Tz            = SIMD_FNMADD(KP692021471, Ty, Tg);
            TH            = SIMD_FNMADD(KP801937735, TG, Te);
            Tx            = SIMD_FNMADD(KP801937735, Tw, Tg);
            T17           = SIMD_FNMADD(KP692021471, T16, Tc);
            T15           = SIMD_FNMADD(KP801937735, T14, Tc);
            T1f           = SIMD_FNMADD(KP801937735, T1e, T6);
            T1r           = SIMD_FNMADD(KP692021471, T1q, T6);
            T1b           = SIMD_FNMADD(KP356895867, TY, T10);
            T19           = SIMD_FMADD(KP554958132, T10, TY);
            TD            = SIMD_FNMADD(KP356895867, Tm, Ts);
            TB            = SIMD_FMADD(KP554958132, Ts, Tm);
            io[0]         = TX + TY + TZ + T10;
            {
                SIMD_FLOAT T11, T1j, T1t, T1l, TV, TN, Tt, TL, TK, T1i, TU, TA,
                    T18, T1s, T1a;
                SIMD_FLOAT T1c, TC, TE, T12, T1m, T1k, T1u, TO, TW, TM, Tu, T1d,
                    TF, T13, T1n;
                SIMD_FLOAT TP;
                T11            = SIMD_FNMADD(KP356895867, T10, TZ);
                T1j            = SIMD_FMADD(KP554958132, TZ, T10);
                T1t            = SIMD_FNMADD(KP554958132, TY, TZ);
                T1l            = SIMD_FNMADD(KP356895867, TZ, TY);
                io[WS(os, 7)]  = Tj + Tm + Tp + Ts;
                TV             = SIMD_FNMADD(KP554958132, Tm, Tp);
                TN             = SIMD_FNMADD(KP356895867, Tp, Tm);
                Tt             = SIMD_FNMADD(KP356895867, Ts, Tp);
                TL             = SIMD_FMADD(KP554958132, Tp, Ts);
                TK             = SIMD_FNMADD(KP900968867, TJ, Td);
                T1i            = SIMD_FNMADD(KP900968867, T1h, T3);
                TU             = SIMD_FNMADD(KP900968867, TT, Td);
                TA             = SIMD_FNMADD(KP900968867, Tz, Td);
                T18            = SIMD_FNMADD(KP900968867, T17, T3);
                T1s            = SIMD_FNMADD(KP900968867, T1r, T3);
                T1a            = SIMD_FMADD(KP801937735, T19, TZ);
                T1c            = SIMD_FNMADD(KP692021471, T1b, TZ);
                TC             = SIMD_FMADD(KP801937735, TB, Tp);
                TE             = SIMD_FNMADD(KP692021471, TD, Tp);
                T12            = SIMD_FNMADD(KP692021471, T11, TY);
                T1m            = SIMD_FNMADD(KP692021471, T1l, T10);
                T1k            = SIMD_FNMADD(KP801937735, T1j, TY);
                T1u            = SIMD_FNMADD(KP801937735, T1t, T10);
                TO             = SIMD_FNMADD(KP692021471, TN, Ts);
                TW             = SIMD_FNMADD(KP801937735, TV, Ts);
                TM             = SIMD_FNMADD(KP801937735, TL, Tm);
                Tu             = SIMD_FNMADD(KP692021471, Tt, Tm);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1a, T18);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1a, T18);
                T1d            = SIMD_FNMADD(KP900968867, T1c, TX);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, TC, TA);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, TC, TA);
                TF             = SIMD_FNMADD(KP900968867, TE, Tj);
                T13            = SIMD_FNMADD(KP900968867, T12, TX);
                T1n            = SIMD_FNMADD(KP900968867, T1m, TX);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1k, T1i);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T1k, T1i);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1u, T1s);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1u, T1s);
                TP             = SIMD_FNMADD(KP900968867, TO, Tj);
                ro[WS(os, 10)] = SIMD_FMADD(KP974927912, TW, TU);
                ro[WS(os, 4)]  = SIMD_FNMADD(KP974927912, TW, TU);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TM, TK);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TM, TK);
                Tv             = SIMD_FNMADD(KP900968867, Tu, Tj);
                io[WS(os, 12)] = SIMD_FMADD(KP974927912, T1f, T1d);
                io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, T1f, T1d);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, TH, TF);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, TH, TF);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T15, T13);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T15, T13);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1p, T1n);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1p, T1n);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, TR, TP);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, TR, TP);
            }
        }
        io[WS(os, 11)] = SIMD_FMADD(KP974927912, Tx, Tv);
        io[WS(os, 3)]  = SIMD_FNMADD(KP974927912, Tx, Tv);
    }
}

template <>
struct c2cf_traits<14, 9>
{
    static constexpr long_t flops           = 204;
    static constexpr long_t operations      = 120;
    static constexpr long_t memory_accesses = 46;
    static constexpr long_t stack_vars      = 108;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 9 -name c2cf
 * -standalone */

/*
 * This function contains 120 FP additions, 84 FP multiplications,
 * (or, 36 additions, 0 multiplications, 84 fused multiply/add),
 * 108 stack variables, 6 constants, and 46 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 9>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Ta, Tt, Tu, Tf, T3, T1n, T15, Tv, Td, Ti, T6, Tg, T9, Th, Tn;
        SIMD_FLOAT To, Tq, Tr, T1, T2, T13, T14, Tb, Tc, T4, T5, T7, T8, Tw, TP;
        SIMD_FLOAT T1s, Tj, T1a, Te, TK, T1b, Tk, T1t, Tp, TN, Ts, TO;
        T1  = ri[0];
        T2  = ri[WS(is, 7)];
        T13 = ii[0];
        T14 = ii[WS(is, 7)];
        Ta  = ri[WS(is, 6)];
        Tb  = ri[WS(is, 8)];
        Tc  = ri[WS(is, 1)];
        T4  = ri[WS(is, 2)];
        T5  = ri[WS(is, 5)];
        T7  = ri[WS(is, 4)];
        T8  = ri[WS(is, 3)];
        Tt  = ii[WS(is, 6)];
        Tu  = ii[WS(is, 8)];
        Tf  = T1 + T2;
        T3  = T1 - T2;
        T1n = T13 + T14;
        T15 = T13 - T14;
        Tv  = ii[WS(is, 1)];
        Td  = Tb - Tc;
        Ti  = Tb + Tc;
        T6  = T4 - T5;
        Tg  = T4 + T5;
        T9  = T7 - T8;
        Th  = T7 + T8;
        Tn  = ii[WS(is, 4)];
        To  = ii[WS(is, 3)];
        Tq  = ii[WS(is, 2)];
        Tr  = ii[WS(is, 5)];
        Tw  = Tu - Tv;
        TP  = Tu + Tv;
        T1s = Ta - Ti;
        Tj  = Ta + Ti;
        T1a = Td - Ta;
        Te  = Ta + Td;
        TK  = SIMD_FNMADD(KP356895867, Th, Tg);
        T1b = SIMD_FNMADD(KP554958132, Tg, Th);
        Tk  = SIMD_FNMADD(KP356895867, T9, T6);
        T1t = SIMD_FNMADD(KP554958132, T6, T9);
        Tp  = Tn + To;
        TN  = Tn - To;
        Ts  = Tq + Tr;
        TO  = Tq - Tr;
        {
            SIMD_FLOAT TQ, T1o, Tx, T16, TY, TT, T1y, T1D, TF, TA, T1g, T1l,
                T1c, TL, T1u;
            SIMD_FLOAT Tl, T1i, T11, T1A, TI, T1v, T1p, TW, TR, T1d, T17, TD,
                Ty, TZ, TU;
            TQ            = TP - Tt;
            T1o           = Tt + TP;
            Tx            = Tt - Tw;
            T16           = Tt + Tw;
            ro[0]         = Tf + Tg + Th + Tj;
            TY            = SIMD_FNMADD(KP356895867, Tj, Th);
            TT            = SIMD_FNMADD(KP356895867, Tg, Tj);
            T1y           = SIMD_FMADD(KP554958132, T9, T1s);
            T1D           = SIMD_FMADD(KP554958132, T1s, T6);
            ro[WS(os, 7)] = T3 + T6 + T9 + Te;
            TF            = SIMD_FNMADD(KP356895867, Te, T9);
            TA            = SIMD_FNMADD(KP356895867, T6, Te);
            T1g           = SIMD_FNMADD(KP554958132, Th, T1a);
            T1l           = SIMD_FNMADD(KP554958132, T1a, Tg);
            T1c           = SIMD_FMADD(KP801937735, T1b, T1a);
            TL            = SIMD_FNMADD(KP692021471, TK, Tj);
            T1u           = SIMD_FNMADD(KP801937735, T1t, T1s);
            Tl            = SIMD_FNMADD(KP692021471, Tk, Te);
            T1i           = SIMD_FNMADD(KP356895867, TN, TO);
            T11           = SIMD_FNMADD(KP554958132, TO, TN);
            T1A           = SIMD_FNMADD(KP356895867, Tp, Ts);
            TI            = SIMD_FNMADD(KP554958132, Ts, Tp);
            io[0]         = Tp + Ts + T1o + T1n;
            T1v           = SIMD_FNMADD(KP356895867, Ts, T1o);
            T1p           = SIMD_FNMADD(KP356895867, T1o, Tp);
            TW            = SIMD_FNMADD(KP554958132, TN, TQ);
            TR            = SIMD_FNMADD(KP554958132, TQ, TO);
            io[WS(os, 7)] = TN + TO + T16 + T15;
            T1d           = SIMD_FNMADD(KP356895867, TO, T16);
            T17           = SIMD_FNMADD(KP356895867, T16, TN);
            TD            = SIMD_FMADD(KP554958132, Tp, Tx);
            Ty            = SIMD_FMADD(KP554958132, Tx, Ts);
            TZ            = SIMD_FNMADD(KP692021471, TY, Tg);
            TU            = SIMD_FNMADD(KP692021471, TT, Th);
            {
                SIMD_FLOAT T1z, T1E, TG, TB, T1h, T1m, TM, Tm, T12, T1j, TJ,
                    T1B, T1w, T1q, TX;
                SIMD_FLOAT TS, T1e, T18, TE, Tz, T10, TV, TH, TC, T1k, T1C, T1x,
                    T1r, T1f, T19;
                T1z            = SIMD_FNMADD(KP801937735, T1y, T6);
                T1E            = SIMD_FMADD(KP801937735, T1D, T9);
                TG             = SIMD_FNMADD(KP692021471, TF, T6);
                TB             = SIMD_FNMADD(KP692021471, TA, T9);
                T1h            = SIMD_FMADD(KP801937735, T1g, Tg);
                T1m            = SIMD_FMADD(KP801937735, T1l, Th);
                TM             = SIMD_FNMADD(KP900968867, TL, Tf);
                Tm             = SIMD_FNMADD(KP900968867, Tl, T3);
                T12            = SIMD_FMADD(KP801937735, T11, TQ);
                T1j            = SIMD_FNMADD(KP692021471, T1i, T16);
                TJ             = SIMD_FNMADD(KP801937735, TI, Tx);
                T1B            = SIMD_FNMADD(KP692021471, T1A, T1o);
                T1w            = SIMD_FNMADD(KP692021471, T1v, Tp);
                T1q            = SIMD_FNMADD(KP692021471, T1p, Ts);
                TX             = SIMD_FMADD(KP801937735, TW, TO);
                TS             = SIMD_FMADD(KP801937735, TR, TN);
                T1e            = SIMD_FNMADD(KP692021471, T1d, TN);
                T18            = SIMD_FNMADD(KP692021471, T17, TO);
                TE             = SIMD_FNMADD(KP801937735, TD, Ts);
                Tz             = SIMD_FMADD(KP801937735, Ty, Tp);
                T10            = SIMD_FNMADD(KP900968867, TZ, Tf);
                TV             = SIMD_FNMADD(KP900968867, TU, Tf);
                TH             = SIMD_FNMADD(KP900968867, TG, T3);
                TC             = SIMD_FNMADD(KP900968867, TB, T3);
                T1k            = SIMD_FNMADD(KP900968867, T1j, T15);
                T1C            = SIMD_FNMADD(KP900968867, T1B, T1n);
                T1x            = SIMD_FNMADD(KP900968867, T1w, T1n);
                T1r            = SIMD_FNMADD(KP900968867, T1q, T1n);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, TS, TM);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, TS, TM);
                T1f            = SIMD_FNMADD(KP900968867, T1e, T15);
                T19            = SIMD_FNMADD(KP900968867, T18, T15);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, Tz, Tm);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, Tz, Tm);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T12, T10);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T12, T10);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, TX, TV);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, TX, TV);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TJ, TH);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TJ, TH);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TE, TC);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TE, TC);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, T1m, T1k);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T1m, T1k);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1E, T1C);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1E, T1C);
                io[WS(os, 12)] = SIMD_FMADD(KP974927912, T1z, T1x);
                io[WS(os, 2)]  = SIMD_FNMADD(KP974927912, T1z, T1x);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1u, T1r);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1u, T1r);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1h, T1f);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, T1h, T1f);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1c, T19);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1c, T19);
            }
        }
    }
}

template <>
struct c2cf_traits<14, 10>
{
    static constexpr long_t flops           = 212;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 48;
    static constexpr long_t stack_vars      = 118;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 10 -name c2cf
 * -standalone */

/*
 * This function contains 128 FP additions, 84 FP multiplications,
 * (or, 44 additions, 0 multiplications, 84 fused multiply/add),
 * 118 stack variables, 6 constants, and 48 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 10>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT T7, Tc, Tw, Th, T3, T1v, T1b, Ty, Tq, Ti, T6, Tk, Tb, Tl, Tf;
        SIMD_FLOAT Tr, Tt, Tu, Tz, TA, T1, T2, T19, T1a, T4, T5, T9, Ta, Td, Te;
        SIMD_FLOAT T1C, Tj, T1i, T8, T1B, Tm, T1h, Tg, Ts, TS, Tv, TT, TB, TV,
            TP;
        SIMD_FLOAT T1D, Tn, T1j, TZ, T14, T1I, T1N;
        T1            = ri[0];
        T2            = ri[WS(is, 7)];
        T19           = ii[0];
        T1a           = ii[WS(is, 7)];
        T7            = ri[WS(is, 5)];
        Tc            = ri[WS(is, 6)];
        T4            = ri[WS(is, 2)];
        T5            = ri[WS(is, 9)];
        T9            = ri[WS(is, 4)];
        Ta            = ri[WS(is, 3)];
        Td            = ri[WS(is, 8)];
        Te            = ri[WS(is, 1)];
        Tw            = ii[WS(is, 5)];
        Th            = T1 + T2;
        T3            = T1 - T2;
        T1v           = T19 + T1a;
        T1b           = T19 - T1a;
        Ty            = ii[WS(is, 6)];
        Tq            = ii[WS(is, 4)];
        Ti            = T4 + T5;
        T6            = T4 - T5;
        Tk            = T9 + Ta;
        Tb            = T9 - Ta;
        Tl            = Td + Te;
        Tf            = Td - Te;
        Tr            = ii[WS(is, 3)];
        Tt            = ii[WS(is, 2)];
        Tu            = ii[WS(is, 9)];
        Tz            = ii[WS(is, 8)];
        TA            = ii[WS(is, 1)];
        T1C           = T7 - Ti;
        Tj            = Ti + T7;
        T1i           = T6 + T7;
        T8            = T6 - T7;
        T1B           = Tc - Tl;
        Tm            = Tc + Tl;
        T1h           = Tf - Tc;
        Tg            = Tc + Tf;
        Ts            = Tq + Tr;
        TS            = Tq - Tr;
        Tv            = Tt - Tu;
        TT            = Tt + Tu;
        TB            = Tz - TA;
        TV            = Tz + TA;
        TP            = SIMD_FNMADD(KP356895867, Tk, Tj);
        T1D           = SIMD_FMADD(KP554958132, T1C, Tb);
        Tn            = SIMD_FNMADD(KP356895867, Tb, T8);
        T1j           = SIMD_FNMADD(KP554958132, T1i, Tk);
        ro[0]         = Th + Tj + Tk + Tm;
        TZ            = SIMD_FNMADD(KP356895867, Tj, Tm);
        T14           = SIMD_FNMADD(KP356895867, Tm, Tk);
        T1I           = SIMD_FMADD(KP554958132, Tb, T1B);
        T1N           = SIMD_FNMADD(KP554958132, T1B, T1C);
        ro[WS(os, 7)] = T3 + T8 + Tb + Tg;
        {
            SIMD_FLOAT TF, TK, T1o, T1t, TU, T1w, Tx, T1c, TW, T1x, TC, T1d, TQ,
                T1E, To;
            SIMD_FLOAT T1k, T10, T15, T1J, T1O, TG, TL, T1p, T1u, T1K, T17, T1q,
                TN, T1F, T1y;
            TF    = SIMD_FNMADD(KP356895867, T8, Tg);
            TK    = SIMD_FNMADD(KP356895867, Tg, Tb);
            T1o   = SIMD_FNMADD(KP554958132, Tk, T1h);
            T1t   = SIMD_FNMADD(KP554958132, T1h, T1i);
            TU    = TT - Tw;
            T1w   = TT + Tw;
            Tx    = Tv + Tw;
            T1c   = Tv - Tw;
            TW    = TV - Ty;
            T1x   = Ty + TV;
            TC    = Ty - TB;
            T1d   = Ty + TB;
            TQ    = SIMD_FNMADD(KP692021471, TP, Tm);
            T1E   = SIMD_FNMADD(KP801937735, T1D, T1B);
            To    = SIMD_FNMADD(KP692021471, Tn, Tg);
            T1k   = SIMD_FMADD(KP801937735, T1j, T1h);
            T10   = SIMD_FNMADD(KP692021471, TZ, Tk);
            T15   = SIMD_FNMADD(KP692021471, T14, Tj);
            T1J   = SIMD_FMADD(KP801937735, T1I, T1C);
            T1O   = SIMD_FNMADD(KP801937735, T1N, Tb);
            TG    = SIMD_FNMADD(KP692021471, TF, Tb);
            TL    = SIMD_FNMADD(KP692021471, TK, T8);
            T1p   = SIMD_FMADD(KP801937735, T1o, T1i);
            T1u   = SIMD_FMADD(KP801937735, T1t, Tk);
            T1K   = SIMD_FNMADD(KP356895867, Ts, T1w);
            T17   = SIMD_FNMADD(KP554958132, TU, TS);
            T1q   = SIMD_FNMADD(KP356895867, TS, T1c);
            TN    = SIMD_FNMADD(KP554958132, Tx, Ts);
            io[0] = Ts + T1w + T1x + T1v;
            T1F   = SIMD_FNMADD(KP356895867, T1w, T1x);
            T1y   = SIMD_FNMADD(KP356895867, T1x, Ts);
            {
                SIMD_FLOAT T12, TX, T1l, T1e, TI, TD, TR, Tp, T11, T16, TH, TM,
                    T1L, T18, T1r;
                SIMD_FLOAT TO, T1G, T1z, T13, TY, T1m, T1f, TJ, TE, T1M, T1s,
                    T1H, T1A, T1n, T1g;
                T12            = SIMD_FNMADD(KP554958132, TS, TW);
                TX             = SIMD_FNMADD(KP554958132, TW, TU);
                io[WS(os, 7)]  = TS + T1c + T1d + T1b;
                T1l            = SIMD_FNMADD(KP356895867, T1c, T1d);
                T1e            = SIMD_FNMADD(KP356895867, T1d, TS);
                TI             = SIMD_FMADD(KP554958132, Ts, TC);
                TD             = SIMD_FMADD(KP554958132, TC, Tx);
                TR             = SIMD_FNMADD(KP900968867, TQ, Th);
                Tp             = SIMD_FNMADD(KP900968867, To, T3);
                T11            = SIMD_FNMADD(KP900968867, T10, Th);
                T16            = SIMD_FNMADD(KP900968867, T15, Th);
                TH             = SIMD_FNMADD(KP900968867, TG, T3);
                TM             = SIMD_FNMADD(KP900968867, TL, T3);
                T1L            = SIMD_FNMADD(KP692021471, T1K, T1x);
                T18            = SIMD_FMADD(KP801937735, T17, TW);
                T1r            = SIMD_FNMADD(KP692021471, T1q, T1d);
                TO             = SIMD_FNMADD(KP801937735, TN, TC);
                T1G            = SIMD_FNMADD(KP692021471, T1F, Ts);
                T1z            = SIMD_FNMADD(KP692021471, T1y, T1w);
                T13            = SIMD_FMADD(KP801937735, T12, TU);
                TY             = SIMD_FMADD(KP801937735, TX, TS);
                T1m            = SIMD_FNMADD(KP692021471, T1l, TS);
                T1f            = SIMD_FNMADD(KP692021471, T1e, T1c);
                TJ             = SIMD_FNMADD(KP801937735, TI, Tx);
                TE             = SIMD_FMADD(KP801937735, TD, Ts);
                T1M            = SIMD_FNMADD(KP900968867, T1L, T1v);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T18, T16);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T18, T16);
                T1s            = SIMD_FNMADD(KP900968867, T1r, T1b);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TO, TM);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TO, TM);
                T1H            = SIMD_FNMADD(KP900968867, T1G, T1v);
                T1A            = SIMD_FNMADD(KP900968867, T1z, T1v);
                ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T13, T11);
                ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T13, T11);
                ro[WS(os, 8)]  = SIMD_FMADD(KP974927912, TY, TR);
                ro[WS(os, 6)]  = SIMD_FNMADD(KP974927912, TY, TR);
                T1n            = SIMD_FNMADD(KP900968867, T1m, T1b);
                T1g            = SIMD_FNMADD(KP900968867, T1f, T1b);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TJ, TH);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TJ, TH);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TE, Tp);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TE, Tp);
                io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1O, T1M);
                io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1O, T1M);
                io[WS(os, 13)] = SIMD_FMADD(KP974927912, T1u, T1s);
                io[WS(os, 1)]  = SIMD_FNMADD(KP974927912, T1u, T1s);
                io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1J, T1H);
                io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1J, T1H);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1E, T1A);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1E, T1A);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1p, T1n);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, T1p, T1n);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1k, T1g);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1k, T1g);
            }
        }
    }
}

template <>
struct c2cf_traits<14, 11>
{
    static constexpr long_t flops           = 220;
    static constexpr long_t operations      = 136;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 98;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 11 -name c2cf
 * -standalone */

/*
 * This function contains 136 FP additions, 84 FP multiplications,
 * (or, 52 additions, 0 multiplications, 84 fused multiply/add),
 * 98 stack variables, 6 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 11>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tj, T1i, T1t, T1K, T1M, T1W, T1Y, T1z, T1B, T1I, T1N, T1D,
            T1F, T1Q, T1S;
        SIMD_FLOAT T1J, T1O, T1E, T1G, T1R, T1T;
        {
            SIMD_FLOAT T3, TW, T1s, Tp, T13, Ti, Tn, T14, Td, T1u, Tl, T15, T8,
                T1U, TP;
            SIMD_FLOAT T1P, T1H, TK, Tq, T1o, T1L, TH, TZ, T1k, TC, TX, Tx, TY,
                T1m, T1;
            SIMD_FLOAT T2, TU, TV;
            T1 = ri[0];
            T2 = ri[WS(is, 7)];
            TU = ii[0];
            TV = ii[WS(is, 7)];
            {
                SIMD_FLOAT T7, T9, Te, Tf, Tg, Ta, Tb, T4, T5, Tt, TB, TD, TG,
                    T1n, TA;
                SIMD_FLOAT T1j, Tw, T1l, Th, To, Tc, Tm, T6, Tk, TE, TF, Ty, Tz,
                    Tu, Tv;
                T7  = ri[WS(is, 5)];
                T9  = ri[WS(is, 4)];
                Te  = ri[WS(is, 6)];
                Tf  = ri[WS(is, 8)];
                Tg  = ri[WS(is, 1)];
                Ta  = ri[WS(is, 10)];
                Tb  = ri[WS(is, 3)];
                T4  = ri[WS(is, 2)];
                T5  = ri[WS(is, 9)];
                Tj  = T1 + T2;
                T3  = T1 - T2;
                T1i = TU + TV;
                TW  = TU - TV;
                Tt  = ii[WS(is, 4)];
                TB  = ii[WS(is, 5)];
                TD  = ii[WS(is, 6)];
                Th  = Tf - Tg;
                To  = Tf + Tg;
                Tc  = Ta - Tb;
                Tm  = Ta + Tb;
                T6  = T4 - T5;
                Tk  = T4 + T5;
                TE  = ii[WS(is, 8)];
                TF  = ii[WS(is, 1)];
                Ty  = ii[WS(is, 2)];
                Tz  = ii[WS(is, 9)];
                Tu  = ii[WS(is, 10)];
                Tv  = ii[WS(is, 3)];
                T1s = Te - To;
                Tp  = Te + To;
                T13 = Th - Te;
                Ti  = Te + Th;
                T1t = T9 - Tm;
                Tn  = T9 + Tm;
                T14 = Tc - T9;
                Td  = T9 + Tc;
                T1u = T7 - Tk;
                Tl  = Tk + T7;
                T15 = T6 + T7;
                T8  = T6 - T7;
                TG  = TE - TF;
                T1n = TE + TF;
                TA  = Ty - Tz;
                T1j = Ty + Tz;
                T1U = SIMD_FNMADD(KP356895867, Tp, Tn);
                Tw  = Tu - Tv;
                T1l = Tu + Tv;
                TP  = SIMD_FNMADD(KP356895867, Ti, Td);
                T1P = SIMD_FNMADD(KP356895867, Tn, Tl);
                T1H = SIMD_FNMADD(KP356895867, Tl, Tp);
                TK  = SIMD_FNMADD(KP356895867, T8, Ti);
                Tq  = SIMD_FNMADD(KP356895867, Td, T8);
                T1o = TD + T1n;
                T1L = T1n - TD;
                TH  = TD - TG;
                TZ  = TD + TG;
                T1k = T1j + TB;
                T1K = T1j - TB;
                TC  = TA + TB;
                TX  = TA - TB;
                Tx  = Tt - Tw;
                TY  = Tt + Tw;
                T1M = T1l - Tt;
                T1m = Tt + T1l;
            }
            {
                SIMD_FLOAT T10, T1x, T1C, T1p, Ts, TJ, T1h, TM, TO, T19, T1e,
                    T1b, Tr, TI, T1g;
                SIMD_FLOAT T18, T1d, TL, TN, T1a, T1f, T1c, TR, TT, T12, T17,
                    T1r, T1V, T1w, T1X;
                SIMD_FLOAT TQ, TS, T11, T16, T1v, T1q, T1y, T1A;
                ro[WS(os, 7)]  = T3 + T8 + Td + Ti;
                ro[0]          = Tj + Tl + Tn + Tp;
                Tr             = SIMD_FNMADD(KP692021471, Tq, Ti);
                TI             = SIMD_FMADD(KP554958132, TH, TC);
                T1g            = SIMD_FNMADD(KP554958132, T13, T15);
                TL             = SIMD_FNMADD(KP692021471, TK, Td);
                T18            = SIMD_FNMADD(KP356895867, TX, TZ);
                TN             = SIMD_FMADD(KP554958132, Tx, TH);
                io[WS(os, 7)]  = TW + TX + TY + TZ;
                T1d            = SIMD_FNMADD(KP356895867, TY, TX);
                T10            = SIMD_FNMADD(KP356895867, TZ, TY);
                T1x            = SIMD_FNMADD(KP356895867, T1k, T1o);
                io[0]          = T1i + T1k + T1m + T1o;
                T1C            = SIMD_FNMADD(KP356895867, T1m, T1k);
                T1p            = SIMD_FNMADD(KP356895867, T1o, T1m);
                Ts             = SIMD_FNMADD(KP900968867, Tr, T3);
                TJ             = SIMD_FMADD(KP801937735, TI, Tx);
                T1h            = SIMD_FNMADD(KP801937735, T1g, T14);
                TM             = SIMD_FNMADD(KP900968867, TL, T3);
                TO             = SIMD_FNMADD(KP801937735, TN, TC);
                T19            = SIMD_FNMADD(KP692021471, T18, TY);
                T1e            = SIMD_FNMADD(KP692021471, T1d, TZ);
                T1b            = SIMD_FMADD(KP554958132, T14, T13);
                TQ             = SIMD_FNMADD(KP692021471, TP, T8);
                TS             = SIMD_FNMADD(KP554958132, TC, Tx);
                T11            = SIMD_FNMADD(KP692021471, T10, TX);
                T16            = SIMD_FMADD(KP554958132, T15, T14);
                T1q            = SIMD_FNMADD(KP692021471, T1p, T1k);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TJ, Ts);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TJ, Ts);
                T1v            = SIMD_FMADD(KP554958132, T1u, T1t);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TO, TM);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TO, TM);
                T1a            = SIMD_FNMADD(KP900968867, T19, TW);
                T1f            = SIMD_FNMADD(KP900968867, T1e, TW);
                T1c            = SIMD_FMADD(KP801937735, T1b, T15);
                TR             = SIMD_FNMADD(KP900968867, TQ, T3);
                TT             = SIMD_FNMADD(KP801937735, TS, TH);
                T12            = SIMD_FNMADD(KP900968867, T11, TW);
                T17            = SIMD_FNMADD(KP801937735, T16, T13);
                T1r            = SIMD_FNMADD(KP900968867, T1q, T1i);
                T1V            = SIMD_FNMADD(KP692021471, T1U, Tl);
                T1w            = SIMD_FNMADD(KP801937735, T1v, T1s);
                T1X            = SIMD_FMADD(KP554958132, T1K, T1M);
                T1y            = SIMD_FNMADD(KP692021471, T1x, T1m);
                T1A            = SIMD_FMADD(KP554958132, T1t, T1s);
                io[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1h, T1f);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1h, T1f);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1c, T1a);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, T1c, T1a);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TT, TR);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TT, TR);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T17, T12);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T17, T12);
                T1W            = SIMD_FNMADD(KP900968867, T1V, Tj);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1w, T1r);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1w, T1r);
                T1Y            = SIMD_FNMADD(KP801937735, T1X, T1L);
                T1z            = SIMD_FNMADD(KP900968867, T1y, T1i);
                T1B            = SIMD_FMADD(KP801937735, T1A, T1u);
                T1I            = SIMD_FNMADD(KP692021471, T1H, Tn);
                T1N            = SIMD_FMADD(KP554958132, T1M, T1L);
                T1D            = SIMD_FNMADD(KP692021471, T1C, T1o);
                T1F            = SIMD_FNMADD(KP554958132, T1s, T1u);
                T1Q            = SIMD_FNMADD(KP692021471, T1P, Tp);
                T1S            = SIMD_FNMADD(KP554958132, T1L, T1K);
            }
        }
        ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1Y, T1W);
        ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1Y, T1W);
        io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1B, T1z);
        io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1B, T1z);
        T1J            = SIMD_FNMADD(KP900968867, T1I, Tj);
        T1O            = SIMD_FMADD(KP801937735, T1N, T1K);
        T1E            = SIMD_FNMADD(KP900968867, T1D, T1i);
        T1G            = SIMD_FNMADD(KP801937735, T1F, T1t);
        T1R            = SIMD_FNMADD(KP900968867, T1Q, Tj);
        T1T            = SIMD_FNMADD(KP801937735, T1S, T1M);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1O, T1J);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1O, T1J);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1G, T1E);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1G, T1E);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1T, T1R);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1T, T1R);
    }
}

template <>
struct c2cf_traits<14, 12>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 140;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 134;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 12 -name c2cf
 * -standalone */

/*
 * This function contains 140 FP additions, 84 FP multiplications,
 * (or, 56 additions, 0 multiplications, 84 fused multiply/add),
 * 134 stack variables, 6 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 12>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tl, T1n, T1z, T1Q, T1S, T1O, T1T, T1J, T1L, T1W, T1Y, T1P,
            T1U, T1K, T1M;
        SIMD_FLOAT T1X, T1Z;
        {
            SIMD_FLOAT T3, T11, TG, TI, TJ, Tn, T1A, T8, T1a, Ts, T1y, Tk, T18,
                T1q, Ty;
            SIMD_FLOAT Tq, Tf, T19, TK, TD, T1N, TE, TP, Tz, TA, T1, T2, TZ,
                T10, T7;
            SIMD_FLOAT Tg, T4, T5, Th, Ti, Tc, Td, T9, Ta, Tm, T6, Tr, Tj, Tp,
                Te;
            SIMD_FLOAT Tw, Tx, To, Tb, T1V, T20, TU, Tt, T1t, TL, T1o, TF, T1r,
                TB, T1m;
            SIMD_FLOAT TQ, T1g, T1l;
            T1            = ri[0];
            T2            = ri[WS(is, 7)];
            TZ            = ii[0];
            T10           = ii[WS(is, 7)];
            T7            = ri[WS(is, 5)];
            Tg            = ri[WS(is, 6)];
            T4            = ri[WS(is, 2)];
            T5            = ri[WS(is, 9)];
            Th            = ri[WS(is, 8)];
            Ti            = ri[WS(is, 1)];
            Tc            = ri[WS(is, 10)];
            Td            = ri[WS(is, 3)];
            T9            = ri[WS(is, 4)];
            Tl            = T1 + T2;
            T3            = T1 - T2;
            T1n           = TZ + T10;
            T11           = TZ - T10;
            Ta            = ri[WS(is, 11)];
            TG            = ii[WS(is, 5)];
            Tm            = T4 + T5;
            T6            = T4 - T5;
            Tr            = Th + Ti;
            Tj            = Th - Ti;
            Tp            = Tc + Td;
            Te            = Tc - Td;
            TI            = ii[WS(is, 6)];
            Tw            = ii[WS(is, 4)];
            Tx            = ii[WS(is, 11)];
            TJ            = ii[WS(is, 8)];
            To            = T9 + Ta;
            Tb            = T9 - Ta;
            Tn            = Tm + T7;
            T1A           = T7 - Tm;
            T8            = T6 - T7;
            T1a           = T6 + T7;
            Ts            = Tg + Tr;
            T1y           = Tg - Tr;
            Tk            = Tg + Tj;
            T18           = Tj - Tg;
            T1q           = Tw + Tx;
            Ty            = Tw - Tx;
            Tq            = To + Tp;
            T1z           = To - Tp;
            Tf            = Tb + Te;
            T19           = Te - Tb;
            TK            = ii[WS(is, 1)];
            TD            = ii[WS(is, 2)];
            T1N           = SIMD_FNMADD(KP356895867, Tn, Ts);
            TE            = ii[WS(is, 9)];
            TP            = SIMD_FNMADD(KP356895867, T8, Tk);
            Tz            = ii[WS(is, 10)];
            TA            = ii[WS(is, 3)];
            T1l           = SIMD_FNMADD(KP554958132, T18, T1a);
            ro[0]         = Tl + Tn + Tq + Ts;
            T1V           = SIMD_FNMADD(KP356895867, Tq, Tn);
            T20           = SIMD_FNMADD(KP356895867, Ts, Tq);
            ro[WS(os, 7)] = T3 + T8 + Tf + Tk;
            TU            = SIMD_FNMADD(KP356895867, Tk, Tf);
            Tt            = SIMD_FNMADD(KP356895867, Tf, T8);
            T1t           = TJ + TK;
            TL            = TJ - TK;
            T1o           = TD + TE;
            TF            = TD - TE;
            T1r           = Tz + TA;
            TB            = Tz - TA;
            T1m           = SIMD_FNMADD(KP801937735, T1l, T19);
            TQ            = SIMD_FNMADD(KP692021471, TP, Tf);
            T1g           = SIMD_FMADD(KP554958132, T19, T18);
            {
                SIMD_FLOAT T1u, T1R, T14, TM, T1p, T12, TH, T1s, TR, T1h, TW,
                    Tv, T1D, T1c, T1I;
                SIMD_FLOAT T1v, T1i, T15, TX, TS, T1B, T21, T1e, TO, T23, T13,
                    TC, T1d, TN, T1b;
                SIMD_FLOAT TV, Tu, T1F, T1H, T1C, T22, T24, T1x, T1k, T17, T1E,
                    T1w, T1G, T1j, T16;
                SIMD_FLOAT TY, TT, T1f;
                T1b            = SIMD_FMADD(KP554958132, T1a, T19);
                TV             = SIMD_FNMADD(KP692021471, TU, T8);
                Tu             = SIMD_FNMADD(KP692021471, Tt, Tk);
                T1u            = TI + T1t;
                T1R            = T1t - TI;
                T14            = TI + TL;
                TM             = TI - TL;
                T1p            = T1o + TG;
                T1Q            = T1o - TG;
                T12            = TF - TG;
                TH             = TF + TG;
                T1s            = T1q + T1r;
                T1S            = T1r - T1q;
                T13            = Ty + TB;
                TC             = Ty - TB;
                TR             = SIMD_FNMADD(KP900968867, TQ, T3);
                T1h            = SIMD_FMADD(KP801937735, T1g, T1a);
                TW             = SIMD_FNMADD(KP900968867, TV, T3);
                Tv             = SIMD_FNMADD(KP900968867, Tu, T3);
                T1D            = SIMD_FNMADD(KP356895867, T1p, T1u);
                T1c            = SIMD_FNMADD(KP801937735, T1b, T18);
                T1d            = SIMD_FNMADD(KP356895867, T12, T14);
                TN             = SIMD_FMADD(KP554958132, TM, TH);
                io[0]          = T1n + T1p + T1s + T1u;
                T1I            = SIMD_FNMADD(KP356895867, T1s, T1p);
                T1v            = SIMD_FNMADD(KP356895867, T1u, T1s);
                io[WS(os, 7)]  = T11 + T12 + T13 + T14;
                T1i            = SIMD_FNMADD(KP356895867, T13, T12);
                T15            = SIMD_FNMADD(KP356895867, T14, T13);
                TX             = SIMD_FNMADD(KP554958132, TH, TC);
                TS             = SIMD_FMADD(KP554958132, TC, TM);
                T1B            = SIMD_FMADD(KP554958132, T1A, T1z);
                T21            = SIMD_FNMADD(KP692021471, T20, Tn);
                T1e            = SIMD_FNMADD(KP692021471, T1d, T13);
                TO             = SIMD_FMADD(KP801937735, TN, TC);
                T23            = SIMD_FMADD(KP554958132, T1Q, T1S);
                T1E            = SIMD_FNMADD(KP692021471, T1D, T1s);
                T1w            = SIMD_FNMADD(KP692021471, T1v, T1p);
                T1G            = SIMD_FMADD(KP554958132, T1z, T1y);
                T1j            = SIMD_FNMADD(KP692021471, T1i, T14);
                T16            = SIMD_FNMADD(KP692021471, T15, T12);
                TY             = SIMD_FNMADD(KP801937735, TX, TM);
                TT             = SIMD_FNMADD(KP801937735, TS, TH);
                T1C            = SIMD_FNMADD(KP801937735, T1B, T1y);
                T22            = SIMD_FNMADD(KP900968867, T21, Tl);
                T1f            = SIMD_FNMADD(KP900968867, T1e, T11);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TO, Tv);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TO, Tv);
                T24            = SIMD_FNMADD(KP801937735, T23, T1R);
                T1F            = SIMD_FNMADD(KP900968867, T1E, T1n);
                T1x            = SIMD_FNMADD(KP900968867, T1w, T1n);
                T1k            = SIMD_FNMADD(KP900968867, T1j, T11);
                T17            = SIMD_FNMADD(KP900968867, T16, T11);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, TY, TW);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, TY, TW);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TT, TR);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TT, TR);
                io[WS(os, 9)]  = SIMD_FNMADD(KP974927912, T1h, T1f);
                io[WS(os, 5)]  = SIMD_FMADD(KP974927912, T1h, T1f);
                T1H            = SIMD_FMADD(KP801937735, T1G, T1A);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T24, T22);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T24, T22);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1C, T1x);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1C, T1x);
                io[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1m, T1k);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1m, T1k);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1c, T17);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1c, T17);
                T1O            = SIMD_FNMADD(KP692021471, T1N, Tq);
                T1T            = SIMD_FMADD(KP554958132, T1S, T1R);
                T1J            = SIMD_FNMADD(KP692021471, T1I, T1u);
                io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1H, T1F);
                io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1H, T1F);
                T1L            = SIMD_FNMADD(KP554958132, T1y, T1A);
                T1W            = SIMD_FNMADD(KP692021471, T1V, Ts);
                T1Y            = SIMD_FNMADD(KP554958132, T1R, T1Q);
            }
        }
        T1P            = SIMD_FNMADD(KP900968867, T1O, Tl);
        T1U            = SIMD_FMADD(KP801937735, T1T, T1Q);
        T1K            = SIMD_FNMADD(KP900968867, T1J, T1n);
        T1M            = SIMD_FNMADD(KP801937735, T1L, T1z);
        T1X            = SIMD_FNMADD(KP900968867, T1W, Tl);
        T1Z            = SIMD_FNMADD(KP801937735, T1Y, T1S);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1U, T1P);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1U, T1P);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1M, T1K);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1M, T1K);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1Z, T1X);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1Z, T1X);
    }
}

template <>
struct c2cf_traits<14, 13>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 144;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 107;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 13 -name c2cf
 * -standalone */

/*
 * This function contains 144 FP additions, 84 FP multiplications,
 * (or, 60 additions, 0 multiplications, 84 fused multiply/add),
 * 107 stack variables, 6 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 13>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tn, T1s, T1F, T1G, T1W, T1Y, T1M, T1U, T1Z, T1L, T1P, T1R,
            T22, T24, T1N;
        SIMD_FLOAT T1V, T20, T1Q, T1S, T23, T25;
        {
            SIMD_FLOAT T3, T16, T1E, Tv, T1d, Tm, Tt, T1e, Th, TB, T1w, T26, TZ,
                Tq, T1f;
            SIMD_FLOAT Ta, T1A, T1X, T1u, TL, TR, T19, T1t, TI, T21, T1T, TU,
                Tw, T1x, TE;
            SIMD_FLOAT T1, T2, T14, T15, T1v, T17, TM, TV, Tx, T1y, T18, TF,
                T1l, T1r, T1J;
            SIMD_FLOAT T1q;
            T1  = ri[0];
            T2  = ri[WS(is, 7)];
            T14 = ii[0];
            T15 = ii[WS(is, 7)];
            {
                SIMD_FLOAT Ti, T7, T6, To, Tl, Tu, Tg, Ts, Td, Tr, T8, T4, T5,
                    Tj, Tk;
                SIMD_FLOAT Te, Tf, Tb, Tc, TN, T1z, TQ, TJ, TK, TG, TH, TC, TD,
                    T9, Tp;
                SIMD_FLOAT Tz, TA, TO, TP;
                Ti  = ri[WS(is, 6)];
                T4  = ri[WS(is, 2)];
                T5  = ri[WS(is, 9)];
                Tj  = ri[WS(is, 8)];
                Tk  = ri[WS(is, 1)];
                Te  = ri[WS(is, 10)];
                Tf  = ri[WS(is, 3)];
                Tb  = ri[WS(is, 4)];
                Tc  = ri[WS(is, 11)];
                Tn  = T1 + T2;
                T3  = T1 - T2;
                T1s = T14 + T15;
                T16 = T14 - T15;
                T7  = ri[WS(is, 12)];
                T6  = T4 - T5;
                To  = T4 + T5;
                Tl  = Tj - Tk;
                Tu  = Tj + Tk;
                Tg  = Te - Tf;
                Ts  = Te + Tf;
                Td  = Tb - Tc;
                Tr  = Tb + Tc;
                T8  = ri[WS(is, 5)];
                TN  = ii[WS(is, 6)];
                Tz  = ii[WS(is, 4)];
                TA  = ii[WS(is, 11)];
                TO  = ii[WS(is, 8)];
                TP  = ii[WS(is, 1)];
                T1E = Ti - Tu;
                Tv  = Ti + Tu;
                T1d = Tl - Ti;
                Tm  = Ti + Tl;
                T1F = Tr - Ts;
                Tt  = Tr + Ts;
                T1e = Tg - Td;
                Th  = Td + Tg;
                T9  = T7 - T8;
                Tp  = T7 + T8;
                TB  = Tz - TA;
                T1w = Tz + TA;
                T1z = TO + TP;
                TQ  = TO - TP;
                TJ  = ii[WS(is, 12)];
                TK  = ii[WS(is, 5)];
                T26 = SIMD_FNMADD(KP356895867, Tv, Tt);
                TG  = ii[WS(is, 2)];
                TZ  = SIMD_FNMADD(KP356895867, Tm, Th);
                TH  = ii[WS(is, 9)];
                T1G = Tp - To;
                Tq  = To + Tp;
                T1f = T9 - T6;
                Ta  = T6 + T9;
                TC  = ii[WS(is, 10)];
                TD  = ii[WS(is, 3)];
                T1A = TN + T1z;
                T1X = T1z - TN;
                T1u = TJ + TK;
                TL  = TJ - TK;
                TR  = TN - TQ;
                T19 = TN + TQ;
                T1t = TG + TH;
                TI  = TG - TH;
                T21 = SIMD_FNMADD(KP356895867, Tt, Tq);
                T1T = SIMD_FNMADD(KP356895867, Tq, Tv);
                TU  = SIMD_FNMADD(KP356895867, Ta, Tm);
                Tw  = SIMD_FNMADD(KP356895867, Th, Ta);
                T1x = TC + TD;
                TE  = TC - TD;
            }
            ro[WS(os, 7)] = T3 + Ta + Th + Tm;
            ro[0]         = Tn + Tq + Tt + Tv;
            T1q           = SIMD_FMADD(KP554958132, T1d, T1f);
            T1v           = T1t + T1u;
            T1W           = T1t - T1u;
            T17           = TI + TL;
            TM            = TI - TL;
            TV            = SIMD_FNMADD(KP692021471, TU, Th);
            Tx            = SIMD_FNMADD(KP692021471, Tw, Tm);
            T1y           = T1w + T1x;
            T1Y           = T1x - T1w;
            T18           = TB + TE;
            TF            = TB - TE;
            T1l           = SIMD_FMADD(KP554958132, T1e, T1d);
            T1r           = SIMD_FMADD(KP801937735, T1q, T1e);
            T1J           = SIMD_FNMADD(KP356895867, T1v, T1A);
            {
                SIMD_FLOAT T1O, T1h, T1I, T1D, T28, T1p, T1c, T2a, TW, Ty, T1B,
                    T1n, T1a, TX, T1m;
                SIMD_FLOAT T1j, TT, T11, T12, T1g, T10, T1i, TS, T1H, T1C, T13,
                    T27, T1o, T1b, TY;
                SIMD_FLOAT T29, T1k, T1K;
                T10            = SIMD_FNMADD(KP692021471, TZ, Ta);
                T1i            = SIMD_FNMADD(KP356895867, T17, T19);
                TS             = SIMD_FMADD(KP554958132, TR, TM);
                TW             = SIMD_FNMADD(KP900968867, TV, T3);
                Ty             = SIMD_FNMADD(KP900968867, Tx, T3);
                io[0]          = T1s + T1v + T1y + T1A;
                T1O            = SIMD_FNMADD(KP356895867, T1y, T1v);
                T1B            = SIMD_FNMADD(KP356895867, T1A, T1y);
                io[WS(os, 7)]  = T16 + T17 + T18 + T19;
                T1n            = SIMD_FNMADD(KP356895867, T18, T17);
                T1a            = SIMD_FNMADD(KP356895867, T19, T18);
                TX             = SIMD_FMADD(KP554958132, TF, TR);
                T1m            = SIMD_FNMADD(KP801937735, T1l, T1f);
                T1j            = SIMD_FNMADD(KP692021471, T1i, T18);
                TT             = SIMD_FMADD(KP801937735, TS, TF);
                T11            = SIMD_FNMADD(KP900968867, T10, T3);
                T12            = SIMD_FNMADD(KP554958132, TM, TF);
                T1g            = SIMD_FNMADD(KP554958132, T1f, T1e);
                T1H            = SIMD_FMADD(KP554958132, T1G, T1F);
                T1C            = SIMD_FNMADD(KP692021471, T1B, T1v);
                T27            = SIMD_FNMADD(KP692021471, T26, Tq);
                T1o            = SIMD_FNMADD(KP692021471, T1n, T19);
                T1b            = SIMD_FNMADD(KP692021471, T1a, T17);
                TY             = SIMD_FNMADD(KP801937735, TX, TM);
                T29            = SIMD_FMADD(KP554958132, T1W, T1Y);
                T1k            = SIMD_FNMADD(KP900968867, T1j, T16);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TT, Ty);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TT, Ty);
                T13            = SIMD_FNMADD(KP801937735, T12, TR);
                T1h            = SIMD_FNMADD(KP801937735, T1g, T1d);
                T1I            = SIMD_FNMADD(KP801937735, T1H, T1E);
                T1D            = SIMD_FNMADD(KP900968867, T1C, T1s);
                T28            = SIMD_FNMADD(KP900968867, T27, Tn);
                T1p            = SIMD_FNMADD(KP900968867, T1o, T16);
                T1c            = SIMD_FNMADD(KP900968867, T1b, T16);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, TY, TW);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, TY, TW);
                io[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1m, T1k);
                io[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T1m, T1k);
                T2a            = SIMD_FNMADD(KP801937735, T29, T1X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T13, T11);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T13, T11);
                T1K            = SIMD_FNMADD(KP692021471, T1J, T1y);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1I, T1D);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1I, T1D);
                io[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1r, T1p);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1r, T1p);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1h, T1c);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1h, T1c);
                T1M            = SIMD_FMADD(KP554958132, T1F, T1E);
                T1U            = SIMD_FNMADD(KP692021471, T1T, Tt);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T2a, T28);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T2a, T28);
                T1Z            = SIMD_FMADD(KP554958132, T1Y, T1X);
                T1L            = SIMD_FNMADD(KP900968867, T1K, T1s);
                T1P            = SIMD_FNMADD(KP692021471, T1O, T1A);
                T1R            = SIMD_FNMADD(KP554958132, T1E, T1G);
                T22            = SIMD_FNMADD(KP692021471, T21, Tv);
                T24            = SIMD_FNMADD(KP554958132, T1X, T1W);
            }
        }
        T1N            = SIMD_FMADD(KP801937735, T1M, T1G);
        T1V            = SIMD_FNMADD(KP900968867, T1U, Tn);
        T20            = SIMD_FMADD(KP801937735, T1Z, T1W);
        T1Q            = SIMD_FNMADD(KP900968867, T1P, T1s);
        T1S            = SIMD_FNMADD(KP801937735, T1R, T1F);
        T23            = SIMD_FNMADD(KP900968867, T22, Tn);
        T25            = SIMD_FNMADD(KP801937735, T24, T1Y);
        io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1N, T1L);
        io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1N, T1L);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T20, T1V);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T20, T1V);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1S, T1Q);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1S, T1Q);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, T25, T23);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T25, T23);
    }
}

template <>
struct c2cf_traits<14, 14>
{
    static constexpr long_t flops           = 232;
    static constexpr long_t operations      = 148;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 104;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 14 -first-k 14 -name c2cf
 * -standalone */

/*
 * This function contains 148 FP additions, 84 FP multiplications,
 * (or, 64 additions, 0 multiplications, 84 fused multiply/add),
 * 104 stack variables, 6 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 14 && ProvidedElements == 14>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP974927912, +0.974927912181823607018131682993931217232785801);
    DK(KP801937735, +0.801937735804838252472204639014890102331838324);
    DK(KP900968867, +0.900968867902419126236102319507445051165919162);
    DK(KP554958132, +0.554958132087371191422194871006410481067288862);
    DK(KP692021471, +0.692021471630095869627814897002069140197260599);
    DK(KP356895867, +0.356895867892209443894399510021300583399127187);
    {
        SIMD_FLOAT Tp, T1L, T24, T1X, T21, T28, T2a, T26, T1W, T1Y, T29, T2b;
        {
            SIMD_FLOAT T3, T1x, T1b, Ts, T1M, Ta, T1k, Ty, T1K, To, T1i, T1Z,
                TZ, Tv, Th;
            SIMD_FLOAT T1j, TJ, T27, T2c, T14, Tz, TK, T1d, TI, T1z, TO, T1D,
                T23, T1G, TW;
            SIMD_FLOAT T1e, T1, T2, T19, T1a, T1y, TL, TA, T1v, T10, T1q, T1f,
                T12;
            T1  = ri[0];
            T2  = ri[WS(is, 7)];
            T19 = ii[0];
            T1a = ii[WS(is, 7)];
            {
                SIMD_FLOAT Te, Tq, T6, Tr, T9, Tx, Tn, Tw, Tk, Tf, Tb, Tc, T4,
                    T5, T7;
                SIMD_FLOAT T8, Tl, Tm, Ti, Tj, T1B, TE, TM, T1C, TH, TN, TV,
                    T1F, T1E, TS;
                SIMD_FLOAT TF, Tu, Tg, Tt, Td, TG, TT, TU, TC, TD, TQ, TR;
                T4  = ri[WS(is, 2)];
                T5  = ri[WS(is, 9)];
                T7  = ri[WS(is, 12)];
                T8  = ri[WS(is, 5)];
                Tl  = ri[WS(is, 8)];
                Tm  = ri[WS(is, 1)];
                Ti  = ri[WS(is, 6)];
                Tj  = ri[WS(is, 13)];
                Te  = ri[WS(is, 10)];
                Tp  = T1 + T2;
                T3  = T1 - T2;
                T1x = T19 + T1a;
                T1b = T19 - T1a;
                Tq  = T4 + T5;
                T6  = T4 - T5;
                Tr  = T7 + T8;
                T9  = T7 - T8;
                Tx  = Tl + Tm;
                Tn  = Tl - Tm;
                Tw  = Ti + Tj;
                Tk  = Ti - Tj;
                Tf  = ri[WS(is, 3)];
                Tb  = ri[WS(is, 4)];
                Tc  = ri[WS(is, 11)];
                TC  = ii[WS(is, 4)];
                TD  = ii[WS(is, 11)];
                TF  = ii[WS(is, 10)];
                Ts  = Tq + Tr;
                T1M = Tr - Tq;
                Ta  = T6 + T9;
                T1k = T9 - T6;
                Ty  = Tw + Tx;
                T1K = Tw - Tx;
                To  = Tk + Tn;
                T1i = Tn - Tk;
                Tu  = Te + Tf;
                Tg  = Te - Tf;
                Tt  = Tb + Tc;
                Td  = Tb - Tc;
                T1B = TC + TD;
                TE  = TC - TD;
                TG  = ii[WS(is, 3)];
                TT  = ii[WS(is, 8)];
                T1Z = SIMD_FNMADD(KP356895867, Ts, Ty);
                TU  = ii[WS(is, 1)];
                TZ  = SIMD_FNMADD(KP356895867, Ta, To);
                TQ  = ii[WS(is, 6)];
                TR  = ii[WS(is, 13)];
                TM  = ii[WS(is, 12)];
                Tv  = Tt + Tu;
                T1L = Tt - Tu;
                Th  = Td + Tg;
                T1j = Tg - Td;
                T1C = TF + TG;
                TH  = TF - TG;
                TN  = ii[WS(is, 5)];
                TV  = TT - TU;
                T1F = TT + TU;
                TJ  = ii[WS(is, 2)];
                T1E = TQ + TR;
                TS  = TQ - TR;
                T27 = SIMD_FNMADD(KP356895867, Tv, Ts);
                T2c = SIMD_FNMADD(KP356895867, Ty, Tv);
                T14 = SIMD_FNMADD(KP356895867, To, Th);
                Tz  = SIMD_FNMADD(KP356895867, Th, Ta);
                TK  = ii[WS(is, 9)];
                T1d = TE + TH;
                TI  = TE - TH;
                T1z = TM + TN;
                TO  = TM - TN;
                T24 = T1C - T1B;
                T1D = T1B + T1C;
                T23 = T1F - T1E;
                T1G = T1E + T1F;
                TW  = TS - TV;
                T1e = TS + TV;
            }
            ro[WS(os, 7)] = T3 + Ta + Th + To;
            T1y           = TJ + TK;
            TL            = TJ - TK;
            ro[0]         = Tp + Ts + Tv + Ty;
            TA            = SIMD_FNMADD(KP692021471, Tz, To);
            T1v           = SIMD_FMADD(KP554958132, T1i, T1k);
            T10           = SIMD_FNMADD(KP692021471, TZ, Th);
            T1q           = SIMD_FMADD(KP554958132, T1j, T1i);
            T1f           = SIMD_FNMADD(KP356895867, T1e, T1d);
            T12           = SIMD_FMADD(KP554958132, TI, TW);
            {
                SIMD_FLOAT T22, TB, T1w, T11, T1r, T16, T1m, T1P, T1U, T1g, T1n,
                    T1s, T17, T13, TX;
                SIMD_FLOAT T1O, T1J, T2e, T2f, T15, T1H, T1l, T1A, T1c, TP, T1N,
                    T2d, T1I, T1R, T1p;
                SIMD_FLOAT T1u, T1T, T20, T25, T2g, TY, T1Q, T1h, T1S, T1o, T1t,
                    T18, T1V;
                T15            = SIMD_FNMADD(KP692021471, T14, Ta);
                T1H            = SIMD_FNMADD(KP356895867, T1G, T1D);
                T1l            = SIMD_FNMADD(KP554958132, T1k, T1j);
                T1A            = T1y + T1z;
                T22            = T1y - T1z;
                T1c            = TL + TO;
                TP             = TL - TO;
                TB             = SIMD_FNMADD(KP900968867, TA, T3);
                T1w            = SIMD_FMADD(KP801937735, T1v, T1j);
                T11            = SIMD_FNMADD(KP900968867, T10, T3);
                T1r            = SIMD_FNMADD(KP801937735, T1q, T1k);
                T1N            = SIMD_FMADD(KP554958132, T1M, T1L);
                T16            = SIMD_FNMADD(KP900968867, T15, T3);
                T2d            = SIMD_FNMADD(KP692021471, T2c, Ts);
                T1m            = SIMD_FNMADD(KP801937735, T1l, T1i);
                T1I            = SIMD_FNMADD(KP692021471, T1H, T1A);
                io[0]          = T1x + T1A + T1D + T1G;
                T1P            = SIMD_FNMADD(KP356895867, T1A, T1G);
                T1U            = SIMD_FNMADD(KP356895867, T1D, T1A);
                T1g            = SIMD_FNMADD(KP692021471, T1f, T1c);
                io[WS(os, 7)]  = T1b + T1c + T1d + T1e;
                T1n            = SIMD_FNMADD(KP356895867, T1c, T1e);
                T1s            = SIMD_FNMADD(KP356895867, T1d, T1c);
                T17            = SIMD_FNMADD(KP554958132, TP, TI);
                T13            = SIMD_FNMADD(KP801937735, T12, TP);
                TX             = SIMD_FMADD(KP554958132, TW, TP);
                T1O            = SIMD_FNMADD(KP801937735, T1N, T1K);
                T1J            = SIMD_FNMADD(KP900968867, T1I, T1x);
                T2e            = SIMD_FNMADD(KP900968867, T2d, Tp);
                T2f            = SIMD_FMADD(KP554958132, T22, T24);
                T1Q            = SIMD_FNMADD(KP692021471, T1P, T1D);
                T1h            = SIMD_FNMADD(KP900968867, T1g, T1b);
                T1S            = SIMD_FMADD(KP554958132, T1L, T1K);
                T1o            = SIMD_FNMADD(KP692021471, T1n, T1d);
                T1t            = SIMD_FNMADD(KP692021471, T1s, T1e);
                T18            = SIMD_FNMADD(KP801937735, T17, TW);
                ro[WS(os, 9)]  = SIMD_FMADD(KP974927912, T13, T11);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T13, T11);
                TY             = SIMD_FMADD(KP801937735, TX, TI);
                io[WS(os, 10)] = SIMD_FNMADD(KP974927912, T1O, T1J);
                io[WS(os, 4)]  = SIMD_FMADD(KP974927912, T1O, T1J);
                T2g            = SIMD_FNMADD(KP801937735, T2f, T23);
                T1R            = SIMD_FNMADD(KP900968867, T1Q, T1x);
                io[WS(os, 11)] = SIMD_FNMADD(KP974927912, T1m, T1h);
                io[WS(os, 3)]  = SIMD_FMADD(KP974927912, T1m, T1h);
                T1p            = SIMD_FNMADD(KP900968867, T1o, T1b);
                T1u            = SIMD_FNMADD(KP900968867, T1t, T1b);
                ro[WS(os, 3)]  = SIMD_FMADD(KP974927912, T18, T16);
                ro[WS(os, 11)] = SIMD_FNMADD(KP974927912, T18, T16);
                T1T            = SIMD_FMADD(KP801937735, T1S, T1M);
                ro[WS(os, 1)]  = SIMD_FMADD(KP974927912, TY, TB);
                ro[WS(os, 13)] = SIMD_FNMADD(KP974927912, TY, TB);
                T20            = SIMD_FNMADD(KP692021471, T1Z, Tv);
                ro[WS(os, 4)]  = SIMD_FMADD(KP974927912, T2g, T2e);
                ro[WS(os, 10)] = SIMD_FNMADD(KP974927912, T2g, T2e);
                T25            = SIMD_FMADD(KP554958132, T24, T23);
                T1V            = SIMD_FNMADD(KP692021471, T1U, T1G);
                io[WS(os, 9)]  = SIMD_FMADD(KP974927912, T1r, T1p);
                io[WS(os, 5)]  = SIMD_FNMADD(KP974927912, T1r, T1p);
                io[WS(os, 13)] = SIMD_FNMADD(KP974927912, T1w, T1u);
                io[WS(os, 1)]  = SIMD_FMADD(KP974927912, T1w, T1u);
                io[WS(os, 12)] = SIMD_FNMADD(KP974927912, T1T, T1R);
                io[WS(os, 2)]  = SIMD_FMADD(KP974927912, T1T, T1R);
                T1X            = SIMD_FNMADD(KP554958132, T1K, T1M);
                T21            = SIMD_FNMADD(KP900968867, T20, Tp);
                T28            = SIMD_FNMADD(KP692021471, T27, Ty);
                T2a            = SIMD_FNMADD(KP554958132, T23, T22);
                T26            = SIMD_FMADD(KP801937735, T25, T22);
                T1W            = SIMD_FNMADD(KP900968867, T1V, T1x);
            }
        }
        T1Y            = SIMD_FNMADD(KP801937735, T1X, T1L);
        T29            = SIMD_FNMADD(KP900968867, T28, Tp);
        T2b            = SIMD_FNMADD(KP801937735, T2a, T24);
        ro[WS(os, 2)]  = SIMD_FMADD(KP974927912, T26, T21);
        ro[WS(os, 12)] = SIMD_FNMADD(KP974927912, T26, T21);
        io[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T1Y, T1W);
        io[WS(os, 6)]  = SIMD_FMADD(KP974927912, T1Y, T1W);
        ro[WS(os, 6)]  = SIMD_FMADD(KP974927912, T2b, T29);
        ro[WS(os, 8)]  = SIMD_FNMADD(KP974927912, T2b, T29);
    }
}
