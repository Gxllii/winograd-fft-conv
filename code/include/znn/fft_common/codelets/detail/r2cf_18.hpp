//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cf_traits<18, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 11;
    static constexpr long_t stack_vars      = 1;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 1 -name r2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 1 stack variables, 0 constants, and 11 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 1>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    {
        SIMD_FLOAT T1;
        T1            = R0[0];
        Cr[WS(cs, 4)] = T1;
        Cr[WS(cs, 6)] = T1;
        Cr[WS(cs, 3)] = T1;
        Cr[WS(cs, 5)] = T1;
        Cr[WS(cs, 7)] = T1;
        Cr[WS(cs, 8)] = T1;
        Cr[WS(cs, 1)] = T1;
        Cr[WS(cs, 9)] = T1;
        Cr[WS(cs, 2)] = T1;
        Cr[0]         = T1;
    }
}

template <>
struct r2cf_traits<18, 2>
{
    static constexpr long_t flops           = 26;
    static constexpr long_t operations      = 18;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 10;
    static constexpr long_t constants       = 8;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 2 -name r2cf
 * -standalone */

/*
 * This function contains 10 FP additions, 16 FP multiplications,
 * (or, 2 additions, 8 multiplications, 8 fused multiply/add),
 * 10 stack variables, 8 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 2>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP342020143, +0.342020143325668733044099614682259580763083368);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP642787609, +0.642787609686539326322643409907263432907559884);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP173648177, +0.173648177666930348851716626769314796000375677);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2;
        T1            = R0[0];
        T2            = R0[WS(rs, 1)];
        Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T2, T1);
        Cr[WS(cs, 3)] = SIMD_FMADD(KP500000000, T2, T1);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP939692620, T2, T1);
        Cr[WS(cs, 4)] = SIMD_FMADD(KP173648177, T2, T1);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP173648177, T2, T1);
        Cr[WS(cs, 7)] = SIMD_FNMADD(KP766044443, T2, T1);
        Cr[0]         = T1 + T2;
        Cr[WS(cs, 9)] = T1 - T2;
        Cr[WS(cs, 8)] = SIMD_FNMADD(KP939692620, T2, T1);
        Cr[WS(cs, 2)] = SIMD_FMADD(KP766044443, T2, T1);
        Ci[WS(cs, 3)] = -(KP866025403 * T2);
        Ci[WS(cs, 7)] = -(KP642787609 * T2);
        Ci[WS(cs, 5)] = -(KP984807753 * T2);
        Ci[WS(cs, 4)] = -(KP984807753 * T2);
        Ci[WS(cs, 6)] = -(KP866025403 * T2);
        Ci[WS(cs, 2)] = -(KP642787609 * T2);
        Ci[WS(cs, 8)] = -(KP342020143 * T2);
        Ci[WS(cs, 1)] = -(KP342020143 * T2);
    }
}

template <>
struct r2cf_traits<18, 3>
{
    static constexpr long_t flops           = 60;
    static constexpr long_t operations      = 36;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 35;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 3 -name r2cf
 * -standalone */

/*
 * This function contains 28 FP additions, 32 FP multiplications,
 * (or, 4 additions, 8 multiplications, 24 fused multiply/add),
 * 35 stack variables, 18 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 3>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP556670399, +0.556670399226419366452912952047023132968291906);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP642787609, +0.642787609686539326322643409907263432907559884);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP394930843, +0.394930843634698457567117349190734585290304520);
    DK(KP813797681, +0.813797681349373692844693217248393223289101568);
    DK(KP844029628, +0.844029628745985356801595100370277782623888305);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP663413948, +0.663413948168938396205421319635891297216863310);
    DK(KP449098785, +0.449098785111286899234477751179543197333583785);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP652703644, +0.652703644666139302296566746461370407999248646);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    DK(KP226681596, +0.226681596905677465811651808188092531873167623);
    {
        SIMD_FLOAT T4, T1, T2, T9, Tc, T7, Ta, Te, Tf, T5, Th, T6, T3, Td, Tb;
        SIMD_FLOAT Tg, T8;
        T4            = R0[0];
        T1            = R0[WS(rs, 2)];
        T2            = R0[WS(rs, 1)];
        T9            = SIMD_FMADD(KP226681596, T1, T2);
        Tc            = SIMD_FNMADD(KP815207469, T1, T2);
        T7            = SIMD_FNMADD(KP226681596, T1, T2);
        Ta            = SIMD_FNMADD(KP652703644, T2, T1);
        Te            = SIMD_FMADD(KP815207469, T1, T2);
        Tf            = SIMD_FNMADD(KP532088886, T2, T1);
        T5            = SIMD_FMADD(KP652703644, T2, T1);
        Th            = T1 + T2;
        T6            = SIMD_FMADD(KP532088886, T2, T1);
        T3            = T1 - T2;
        Cr[WS(cs, 2)] = SIMD_FMADD(KP766044443, T9, T4);
        Tb            = SIMD_FNMADD(KP449098785, T9, Ta);
        Ci[WS(cs, 5)] = -(KP663413948 * (SIMD_FNMADD(KP742227198, Ta, T9)));
        Cr[WS(cs, 1)] = SIMD_FMADD(KP939692620, Te, T4);
        Tg            = SIMD_FNMADD(KP844029628, Te, Tf);
        Ci[WS(cs, 4)] = -(KP813797681 * (SIMD_FNMADD(KP394930843, Tf, Te)));
        T8            = SIMD_FNMADD(KP449098785, T7, T5);
        Ci[WS(cs, 8)] = -(KP663413948 * (SIMD_FNMADD(KP742227198, T5, T7)));
        Ci[WS(cs, 2)] = -(KP984807753 * T5);
        Cr[0]         = T4 + Th;
        Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, Th, T4);
        Ci[WS(cs, 3)] = -(KP866025403 * Th);
        Td            = SIMD_FNMADD(KP844029628, Tc, T6);
        Ci[WS(cs, 7)] = -(KP813797681 * (SIMD_FNMADD(KP394930843, T6, Tc)));
        Ci[WS(cs, 1)] = -(KP642787609 * T6);
        Cr[WS(cs, 9)] = T4 + T3;
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, T3, T4);
        Ci[WS(cs, 6)] = KP866025403 * T3;
        Cr[WS(cs, 8)] = SIMD_FMADD(KP852868531, Tb, T4);
        Cr[WS(cs, 7)] = SIMD_FMADD(KP556670399, Tg, T4);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, T8, T4);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP556670399, Td, T4);
    }
}

template <>
struct r2cf_traits<18, 4>
{
    static constexpr long_t flops           = 76;
    static constexpr long_t operations      = 45;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 43;
    static constexpr long_t constants       = 18;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 4 -name r2cf
 * -standalone */

/*
 * This function contains 37 FP additions, 39 FP multiplications,
 * (or, 6 additions, 8 multiplications, 31 fused multiply/add),
 * 43 stack variables, 18 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 4>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP371113599, +0.371113599484279577635275301364682088645527937);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP556670399, +0.556670399226419366452912952047023132968291906);
    DK(KP568579021, +0.568579021301628806418833975960049381290680197);
    DK(KP394930843, +0.394930843634698457567117349190734585290304520);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP449098785, +0.449098785111286899234477751179543197333583785);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP844029628, +0.844029628745985356801595100370277782623888305);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    DK(KP532088886, +0.532088886237956070404785301110833347871664914);
    DK(KP226681596, +0.226681596905677465811651808188092531873167623);
    DK(KP652703644, +0.652703644666139302296566746461370407999248646);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T4, T5, T1, T2, T6, To, Tb, Td, Te, Tf, T3, Tm, Tp, T7, T8;
        SIMD_FLOAT Tl, T9, Tj, Tn, Th, Tg, Ta, Tk, Tc, Ti;
        T4            = R0[0];
        T5            = R0[WS(rs, 3)];
        T1            = R0[WS(rs, 2)];
        T2            = R0[WS(rs, 1)];
        T6            = T4 - T5;
        To            = T4 + T5;
        Tb            = SIMD_FMADD(KP500000000, T5, T4);
        Td            = SIMD_FNMADD(KP500000000, T5, T4);
        Te            = SIMD_FNMADD(KP652703644, T2, T1);
        Tf            = SIMD_FMADD(KP226681596, T1, T2);
        T3            = T1 - T2;
        Tm            = SIMD_FNMADD(KP532088886, T2, T1);
        Tp            = T1 + T2;
        T7            = SIMD_FMADD(KP652703644, T2, T1);
        T8            = SIMD_FMADD(KP532088886, T2, T1);
        Tl            = SIMD_FMADD(KP815207469, T1, T2);
        T9            = SIMD_FNMADD(KP226681596, T1, T2);
        Tj            = SIMD_FNMADD(KP815207469, T1, T2);
        Ta            = SIMD_FMADD(KP766044443, T9, T5);
        Cr[WS(cs, 7)] = SIMD_FNMADD(KP766044443, T9, Tb);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP939692620, Tl, Tb);
        Tk            = SIMD_FNMADD(KP844029628, Tj, T8);
        Ci[WS(cs, 1)] = -(KP866025403 * (SIMD_FMADD(KP742227198, T8, T5)));
        Tc            = SIMD_FNMADD(KP449098785, T9, T7);
        Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FMADD(KP879385241, T5, T7)));
        Cr[0]         = To + Tp;
        Ci[WS(cs, 3)] = -(KP866025403 * Tp);
        Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, Tp, To);
        Tn            = SIMD_FNMADD(KP394930843, Tm, Tl);
        Cr[WS(cs, 9)] = T6 + T3;
        Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, T3, T6);
        Ci[WS(cs, 6)] = KP866025403 * T3;
        Cr[WS(cs, 2)] = SIMD_FMADD(KP766044443, Tf, Td);
        Th            = SIMD_FNMADD(KP742227198, Te, Tf);
        Tg            = SIMD_FNMADD(KP449098785, Tf, Te);
        Ci[WS(cs, 8)] = -(KP866025403 * (SIMD_FNMADD(KP568579021, T7, Ta)));
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP556670399, Tk, Td);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, Tc, Tb);
        Ci[WS(cs, 4)] = KP866025403 * (SIMD_FNMADD(KP939692620, Tn, T5));
        Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP766044443, Th, T5));
        Ti            = SIMD_FNMADD(KP852868531, Tg, T5);
        Cr[WS(cs, 8)] = SIMD_FMADD(KP852868531, Tg, Td);
        Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FNMADD(KP371113599, T8, Ti)));
    }
}

template <>
struct r2cf_traits<18, 5>
{
    static constexpr long_t flops           = 108;
    static constexpr long_t operations      = 63;
    static constexpr long_t memory_accesses = 23;
    static constexpr long_t stack_vars      = 63;
    static constexpr long_t constants       = 21;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 5 -name r2cf
 * -standalone */

/*
 * This function contains 55 FP additions, 53 FP multiplications,
 * (or, 10 additions, 8 multiplications, 45 fused multiply/add),
 * 63 stack variables, 21 constants, and 23 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 5>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP789861687, +0.789861687269396915134234698381469170580609040);
    DK(KP750000000, +0.750000000000000000000000000000000000000000000);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP766044443, +0.766044443118978035202392650555416673935832457);
    DK(KP633022221, +0.633022221559489017601196325277708336967916229);
    DK(KP840553250, +0.840553250922412339463061206474123317677563841);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP694592710, +0.694592710667721395406866507077259184001502709);
    DK(KP652703644, +0.652703644666139302296566746461370407999248646);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP184792530, +0.184792530904095372701352047572203755870913560);
    DK(KP347296355, +0.347296355333860697703433253538629592000751354);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T4, T5, T6;
        T1 = R0[0];
        T2 = R0[WS(rs, 3)];
        T4 = R0[WS(rs, 2)];
        T5 = R0[WS(rs, 4)];
        T6 = R0[WS(rs, 1)];
        {
            SIMD_FLOAT Tp, T9, TF, T3, Tk, Ts, TE, T7, Ti, Td, Tl, Ta, Tt, TG,
                T8;
            SIMD_FLOAT Tj, Tg, Tm, Ty, Tu, Tb, Tz, TB, Tq, Tn, Th, Tc, Tw, Tv,
                TA;
            SIMD_FLOAT TC, Tr, To, Te, Tx, TD, Tf;
            Tp            = SIMD_FMADD(KP500000000, T2, T1);
            T9            = SIMD_FNMADD(KP500000000, T2, T1);
            TF            = T1 + T2;
            T3            = T1 - T2;
            Tk            = SIMD_FMADD(KP815207469, T6, T5);
            Ts            = SIMD_FNMADD(KP815207469, T6, T5);
            TE            = T5 + T6;
            T7            = T5 - T6;
            Ti            = SIMD_FMADD(KP347296355, T6, T5);
            Td            = SIMD_FNMADD(KP347296355, T6, T5);
            Tl            = SIMD_FMADD(KP500000000, T6, T5);
            Ta            = SIMD_FNMADD(KP500000000, T6, T5);
            Tt            = SIMD_FNMADD(KP184792530, T4, Ts);
            TG            = T4 + TE;
            Ci[WS(cs, 6)] = KP866025403 * (T4 - TE);
            T8            = T4 + T7;
            Ci[WS(cs, 3)] = KP866025403 * (T7 - T4);
            Tj            = SIMD_FMADD(KP652703644, T4, Ti);
            Tg            = SIMD_FNMADD(KP694592710, T4, Td);
            Tm            = SIMD_FMSUB(KP420276625, Tl, T6);
            Ty            = SIMD_FMADD(KP203604859, Tl, T6);
            Tu            = SIMD_FMADD(KP420276625, Ta, T6);
            Tb            = SIMD_FMSUB(KP203604859, Ta, T6);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, Tt, T9);
            Cr[0]         = TF + TG;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, TG, TF);
            Cr[WS(cs, 9)] = T3 + T8;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, T8, T3);
            Tz            = SIMD_FMADD(KP742227198, Tj, T4);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, T2, Tj)));
            TB            = SIMD_FMADD(KP898197570, T4, Ty);
            Tq            = SIMD_FMADD(KP666666666, Tk, Tm);
            Tn            = SIMD_FMADD(KP840553250, T4, Tm);
            Th            = SIMD_FMADD(KP666666666, Tg, Tb);
            Tc            = SIMD_FMADD(KP898197570, T4, Tb);
            Tw            = SIMD_FMADD(KP633022221, Tu, T4);
            Tv            = SIMD_FMADD(KP939692620, Tu, T2);
            TA            = SIMD_FNMADD(KP898197570, Tz, Ty);
            TC            = SIMD_FNMADD(KP766044443, TB, T4);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TB, Tp);
            Tr            = SIMD_FNMADD(KP750000000, Tq, T4);
            To            = SIMD_FNMADD(KP500000000, Tn, Tk);
            Ci[WS(cs, 4)] = KP866025403 * (SIMD_FMADD(KP852868531, Th, T2));
            Te            = SIMD_FMADD(KP766044443, Tc, T4);
            Cr[WS(cs, 8)] = SIMD_FMADD(KP852868531, Tc, T9);
            Tx            = SIMD_FMADD(KP789861687, Tw, Ts);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FMADD(KP879385241, Tv, T4)));
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TA, T2)));
            TD            = SIMD_FNMADD(KP652703644, TC, Ti);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP939692620, Tr, Tp);
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, To, T2));
            Tf            = SIMD_FNMADD(KP652703644, Te, Td);
            Ci[WS(cs, 8)] = -(KP866025403 * (SIMD_FNMADD(KP939692620, Tx, T2)));
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TD, Tp);
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, Tf, T9);
        }
    }
}

template <>
struct r2cf_traits<18, 6>
{
    static constexpr long_t flops           = 135;
    static constexpr long_t operations      = 78;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 77;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 6 -name r2cf
 * -standalone */

/*
 * This function contains 70 FP additions, 65 FP multiplications,
 * (or, 13 additions, 8 multiplications, 57 fused multiply/add),
 * 77 stack variables, 19 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 6>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP226681596, +0.226681596905677465811651808188092531873167623);
    DK(KP347296355, +0.347296355333860697703433253538629592000751354);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T7, T8, T4, T5, T3, TV, Tb, TA, Tc, Tv, Ts, TU, T9;
        SIMD_FLOAT Tg, To, TE, Te, Tu, Th, Tp, T6, TN, TT;
        T1 = R0[0];
        T2 = R0[WS(rs, 3)];
        T7 = R0[WS(rs, 4)];
        T8 = R0[WS(rs, 1)];
        T4 = R0[WS(rs, 2)];
        T5 = R0[WS(rs, 5)];
        T3 = T1 - T2;
        TV = T1 + T2;
        Tb = SIMD_FNMADD(KP500000000, T2, T1);
        TA = SIMD_FMADD(KP500000000, T2, T1);
        Tc = SIMD_FNMADD(KP500000000, T8, T7);
        Tv = SIMD_FMADD(KP500000000, T8, T7);
        Ts = SIMD_FMADD(KP815207469, T8, T7);
        TU = T7 + T8;
        T9 = T7 - T8;
        Tg = SIMD_FNMADD(KP347296355, T8, T7);
        To = SIMD_FMADD(KP347296355, T8, T7);
        TE = SIMD_FNMADD(KP815207469, T8, T7);
        Te = SIMD_FMADD(KP226681596, T5, T4);
        Tu = SIMD_FMADD(KP347296355, T5, T4);
        Th = SIMD_FMSUB(KP500000000, T5, T4);
        Tp = SIMD_FMADD(KP500000000, T5, T4);
        T6 = T4 - T5;
        TN = SIMD_FNMADD(KP226681596, T5, T4);
        TT = T4 + T5;
        {
            SIMD_FLOAT Tw, TO, TR, Tl, TB, Tr, TQ, TG, TK, Tm, Ty, TJ, Tj, TM,
                TH;
            SIMD_FLOAT Td, TW, Ta, Tt, Tq, TF, Ti, Tx, TI, Tf, TC, TS, TP, Tn,
                Tz;
            SIMD_FLOAT TL, Tk, TD;
            Tw            = SIMD_FMSUB(KP420276625, Tv, T8);
            TM            = SIMD_FMADD(KP203604859, Tv, T8);
            TH            = Tc - T5;
            Td            = SIMD_FMSUB(KP203604859, Tc, T8);
            TW            = TT + TU;
            Ci[WS(cs, 6)] = KP866025403 * (TT - TU);
            Ta            = T6 + T9;
            Ci[WS(cs, 3)] = KP866025403 * (T9 - T6);
            Tt            = SIMD_FMADD(KP203604859, Tp, T5);
            Tq            = SIMD_FMADD(KP968908795, Tp, T5);
            TF            = SIMD_FMADD(KP203604859, Th, T5);
            Ti            = SIMD_FMADD(KP968908795, Th, T5);
            Tx            = SIMD_FMADD(KP826351822, Tw, Tu);
            TO            = SIMD_FNMADD(KP898197570, TN, TM);
            TR            = SIMD_FMADD(KP898197570, TN, TM);
            TI            = SIMD_FMADD(KP420276625, TH, T8);
            Tl            = SIMD_FNMADD(KP898197570, Te, Td);
            Tf            = SIMD_FMADD(KP898197570, Te, Td);
            Cr[0]         = TV + TW;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, TW, TV);
            Cr[WS(cs, 9)] = T3 + Ta;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Ta, T3);
            TB            = SIMD_FNMADD(KP907603734, Tt, Ts);
            Tr            = SIMD_FMADD(KP673648177, Tq, To);
            TQ            = SIMD_FNMADD(KP673648177, Tq, To);
            TG            = SIMD_FMADD(KP907603734, TF, TE);
            TK            = SIMD_FNMADD(KP907603734, TF, TE);
            Tm            = SIMD_FNMADD(KP673648177, Ti, Tg);
            Ty            = SIMD_FNMADD(KP666666666, Tx, Tt);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TR, TA);
            TJ            = SIMD_FMADD(KP826351822, TI, T4);
            Tj            = SIMD_FNMADD(KP742227198, Tf, Ti);
            Cr[WS(cs, 8)] = SIMD_FMADD(KP852868531, Tf, Tb);
            TC            = SIMD_FMADD(KP666666666, TB, Tw);
            TS            = SIMD_FMADD(KP500000000, TR, TQ);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, T2, Tr)));
            TP            = SIMD_FNMADD(KP666666666, Tr, TO);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, TG, Tb);
            Tn            = SIMD_FMADD(KP666666666, Tm, Tl);
            Tz            = SIMD_FMADD(KP907603734, Ty, Ts);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FMADD(KP879385241, T2, TJ)));
            TL            = SIMD_FMADD(KP605069156, TJ, TK);
            Tk            = SIMD_FMADD(KP673648177, Tj, Tg);
            TD            = SIMD_FNMADD(KP826351822, TC, Tu);
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TS, TA);
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TP, T2)));
            Ci[WS(cs, 4)] = KP866025403 * (SIMD_FMADD(KP852868531, Tn, T2));
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, Tz, T2));
            Ci[WS(cs, 8)] = -(KP866025403 * (SIMD_FNMADD(KP939692620, TL, T2)));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, Tk, Tb);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TD, TA);
        }
    }
}

template <>
struct r2cf_traits<18, 7>
{
    static constexpr long_t flops           = 137;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 25;
    static constexpr long_t stack_vars      = 80;
    static constexpr long_t constants       = 19;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 7 -name r2cf
 * -standalone */

/*
 * This function contains 72 FP additions, 65 FP multiplications,
 * (or, 15 additions, 8 multiplications, 57 fused multiply/add),
 * 80 stack variables, 19 constants, and 25 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 7>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP226681596, +0.226681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP347296355, +0.347296355333860697703433253538629592000751354);
    DK(KP815207469, +0.815207469095904627298647952427796244129086440);
    {
        SIMD_FLOAT T1, T2, T3, T9, Ta, T6, T7;
        T1 = R0[0];
        T2 = R0[WS(rs, 6)];
        T3 = R0[WS(rs, 3)];
        T9 = R0[WS(rs, 4)];
        Ta = R0[WS(rs, 1)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 5)];
        {
            SIMD_FLOAT Td, T4, Tj, Tv, Tx, Te, TD, Tz, TU, TR, To, TE, TT, Tu,
                TJ;
            SIMD_FLOAT TN, Tp, TB, TM, Tm, TH, Tr, Tb, TX, Ty, Tf, TW, TQ, T8,
                Ts;
            SIMD_FLOAT Tk, Th, TY, T5, TP, TK, Tg, TZ, Tc, Tt, Tw, Tl, TI, TA,
                TL;
            SIMD_FLOAT Ti, TF, TV, TS, Tq, TC, TO, Tn, TG;
            Td            = T2 + T3;
            T4            = T2 - T3;
            TH            = SIMD_FNMADD(KP815207469, Ta, T9);
            Tr            = SIMD_FMADD(KP347296355, Ta, T9);
            Tj            = SIMD_FNMADD(KP347296355, Ta, T9);
            Tb            = T9 - Ta;
            TX            = T9 + Ta;
            Tv            = SIMD_FMADD(KP815207469, Ta, T9);
            Ty            = SIMD_FMADD(KP500000000, Ta, T9);
            Tf            = SIMD_FNMADD(KP500000000, Ta, T9);
            TW            = T6 + T7;
            TQ            = SIMD_FNMADD(KP226681596, T7, T6);
            T8            = T6 - T7;
            Ts            = SIMD_FMADD(KP500000000, T7, T6);
            Tk            = SIMD_FMSUB(KP500000000, T7, T6);
            Tx            = SIMD_FMADD(KP347296355, T7, T6);
            Th            = SIMD_FMADD(KP226681596, T7, T6);
            TY            = T1 + Td;
            Te            = SIMD_FNMADD(KP500000000, Td, T1);
            T5            = T1 + T4;
            TD            = SIMD_FNMADD(KP500000000, T4, T1);
            TP            = SIMD_FMADD(KP203604859, Ty, Ta);
            Tz            = SIMD_FMSUB(KP420276625, Ty, Ta);
            TK            = Tf - T7;
            Tg            = SIMD_FMSUB(KP203604859, Tf, Ta);
            TZ            = TW + TX;
            Ci[WS(cs, 6)] = KP866025403 * (TW - TX);
            Tc            = T8 + Tb;
            Ci[WS(cs, 3)] = KP866025403 * (Tb - T8);
            Tt            = SIMD_FMADD(KP968908795, Ts, T7);
            Tw            = SIMD_FMADD(KP203604859, Ts, T7);
            Tl            = SIMD_FMADD(KP968908795, Tk, T7);
            TI            = SIMD_FMADD(KP203604859, Tk, T7);
            TA            = SIMD_FMADD(KP826351822, Tz, Tx);
            TU            = SIMD_FMADD(KP898197570, TQ, TP);
            TR            = SIMD_FNMADD(KP898197570, TQ, TP);
            TL            = SIMD_FMADD(KP420276625, TK, Ta);
            Ti            = SIMD_FMADD(KP898197570, Th, Tg);
            To            = SIMD_FNMADD(KP898197570, Th, Tg);
            Cr[0]         = TY + TZ;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, TZ, TY);
            Cr[WS(cs, 9)] = T5 + Tc;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tc, T5);
            TE            = SIMD_FNMADD(KP907603734, Tw, Tv);
            TT            = SIMD_FNMADD(KP673648177, Tt, Tr);
            Tu            = SIMD_FMADD(KP673648177, Tt, Tr);
            TJ            = SIMD_FMADD(KP907603734, TI, TH);
            TN            = SIMD_FNMADD(KP907603734, TI, TH);
            Tp            = SIMD_FNMADD(KP673648177, Tl, Tj);
            TB            = SIMD_FNMADD(KP666666666, TA, Tw);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TU, TD);
            TM            = SIMD_FMADD(KP826351822, TL, T6);
            Cr[WS(cs, 8)] = SIMD_FMADD(KP852868531, Ti, Te);
            Tm            = SIMD_FNMADD(KP742227198, Ti, Tl);
            TF            = SIMD_FMADD(KP666666666, TE, Tz);
            TV            = SIMD_FMADD(KP500000000, TU, TT);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, Td, Tu)));
            TS            = SIMD_FNMADD(KP666666666, Tu, TR);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, TJ, Te);
            Tq            = SIMD_FMADD(KP666666666, Tp, To);
            TC            = SIMD_FMADD(KP907603734, TB, Tv);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, T4, TM)));
            TO            = SIMD_FMADD(KP605069156, TM, TN);
            Tn            = SIMD_FMADD(KP673648177, Tm, Tj);
            TG            = SIMD_FNMADD(KP826351822, TF, Tx);
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TV, TD);
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TS, Td)));
            Ci[WS(cs, 4)] = -(KP866025403 * (SIMD_FNMADD(KP852868531, Tq, T4)));
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, TC, Td));
            Ci[WS(cs, 8)] = KP866025403 * (SIMD_FMADD(KP939692620, TO, T4));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, Tn, Te);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TG, TD);
        }
    }
}

template <>
struct r2cf_traits<18, 8>
{
    static constexpr long_t flops           = 139;
    static constexpr long_t operations      = 82;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 84;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 8 -name r2cf
 * -standalone */

/*
 * This function contains 74 FP additions, 65 FP multiplications,
 * (or, 17 additions, 8 multiplications, 57 fused multiply/add),
 * 84 stack variables, 20 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 8>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP226681596, +0.226681596905677465811651808188092531873167623);
    DK(KP347296355, +0.347296355333860697703433253538629592000751354);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T3, T9, Ta, Tb, T6, T7, T4, Th, Tl, Tu, TM, T8, Tf;
        SIMD_FLOAT TO, TJ, To, Tk, Ti, TG, T5, Tm, TH, Tg, Td, Tc, TN, TX, TC;
        SIMD_FLOAT Tv;
        T1 = R0[0];
        T2 = R0[WS(rs, 6)];
        T3 = R0[WS(rs, 3)];
        T9 = R0[WS(rs, 4)];
        Ta = R0[WS(rs, 1)];
        Tb = R0[WS(rs, 7)];
        T6 = R0[WS(rs, 2)];
        T7 = R0[WS(rs, 5)];
        T4 = T2 - T3;
        Th = T2 + T3;
        Tc = Ta + Tb;
        Tl = Ta - Tb;
        Tu = SIMD_FMSUB(KP500000000, T7, T6);
        TM = SIMD_FMADD(KP500000000, T7, T6);
        T8 = T6 - T7;
        Tf = T6 + T7;
        TO = SIMD_FMADD(KP347296355, T7, T6);
        TJ = SIMD_FNMADD(KP226681596, T7, T6);
        To = SIMD_FMADD(KP226681596, T7, T6);
        Tk = SIMD_FNMADD(KP500000000, Th, T1);
        Ti = T1 + Th;
        TG = SIMD_FNMADD(KP500000000, T4, T1);
        T5 = T1 + T4;
        Tm = SIMD_FNMADD(KP500000000, Tc, T9);
        TH = SIMD_FMADD(KP500000000, Tc, T9);
        Tg = T9 + Tc;
        Td = T9 - Tc;
        TN = SIMD_FMADD(KP203604859, TM, T7);
        TX = SIMD_FMADD(KP968908795, TM, T7);
        TC = SIMD_FMADD(KP203604859, Tu, T7);
        Tv = SIMD_FMADD(KP968908795, Tu, T7);
        {
            SIMD_FLOAT Tt, TL, TE, Ts, Tw, TA, TR, TU, TZ, T12, TB, Tn, Tq, TP,
                TW;
            SIMD_FLOAT TI, Tj, Te, Tz, Tr, TD, Tp, Ty, TQ, TT, TY, T10, TK, T11,
                TF;
            SIMD_FLOAT Tx, TS, TV;
            Tt            = SIMD_FMADD(KP152703644, Tl, Tm);
            TB            = SIMD_FNMADD(KP315207469, Tl, Tm);
            Tn            = SIMD_FNMADD(KP203604859, Tm, Tl);
            Tq            = Tm - T7;
            TP            = SIMD_FNMADD(KP420276625, TH, Tl);
            TL            = SIMD_FMADD(KP315207469, Tl, TH);
            TW            = SIMD_FNMADD(KP152703644, Tl, TH);
            TI            = SIMD_FMADD(KP203604859, TH, Tl);
            Tj            = Tf + Tg;
            Ci[WS(cs, 6)] = KP866025403 * (Tf - Tg);
            Te            = T8 + Td;
            Ci[WS(cs, 3)] = KP866025403 * (Td - T8);
            Tz            = SIMD_FNMADD(KP673648177, Tv, Tt);
            Tr            = SIMD_FMADD(KP420276625, Tq, Tl);
            TD            = SIMD_FMADD(KP907603734, TC, TB);
            TE            = SIMD_FNMADD(KP907603734, TC, TB);
            Tp            = SIMD_FNMADD(KP898197570, To, Tn);
            Ty            = SIMD_FMADD(KP898197570, To, Tn);
            TQ            = SIMD_FNMADD(KP826351822, TP, TO);
            TT            = SIMD_FNMADD(KP907603734, TN, TL);
            TY            = SIMD_FNMADD(KP673648177, TX, TW);
            T10           = SIMD_FMADD(KP673648177, TX, TW);
            TK            = SIMD_FMADD(KP898197570, TJ, TI);
            T11           = SIMD_FNMADD(KP898197570, TJ, TI);
            Cr[0]         = Ti + Tj;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, Tj, Ti);
            Cr[WS(cs, 9)] = T5 + Te;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Te, T5);
            Ts            = SIMD_FMADD(KP826351822, Tr, T6);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, TD, Tk);
            Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, Tp, Tk);
            Tw            = SIMD_FMADD(KP742227198, Tp, Tv);
            TA            = SIMD_FNMADD(KP666666666, Tz, Ty);
            TR            = SIMD_FNMADD(KP666666666, TQ, TN);
            TU            = SIMD_FNMADD(KP666666666, TT, TP);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, Th, T10)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TK, TG);
            TZ            = SIMD_FMADD(KP500000000, TK, TY);
            T12           = SIMD_FNMADD(KP666666666, T10, T11);
            TF            = SIMD_FMADD(KP605069156, Ts, TE);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, T4, Ts)));
            Tx            = SIMD_FMADD(KP673648177, Tw, Tt);
            Ci[WS(cs, 4)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TA, T4)));
            TS            = SIMD_FMADD(KP907603734, TR, TL);
            TV            = SIMD_FMADD(KP826351822, TU, TO);
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TZ, TG);
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, T12, Th)));
            Ci[WS(cs, 8)] = KP866025403 * (SIMD_FMADD(KP939692620, TF, T4));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, Tx, Tk);
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, TS, Th));
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TV, TG);
        }
    }
}

template <>
struct r2cf_traits<18, 9>
{
    static constexpr long_t flops           = 142;
    static constexpr long_t operations      = 84;
    static constexpr long_t memory_accesses = 27;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 9 -name r2cf
 * -standalone */

/*
 * This function contains 76 FP additions, 66 FP multiplications,
 * (or, 18 additions, 8 multiplications, 58 fused multiply/add),
 * 87 stack variables, 20 constants, and 27 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 9>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T3, T6, Tb, T7, T8, Tc, Td, Tk, T4, Th, T9, To, Te;
        SIMD_FLOAT Tn, Tl, TJ, T5, Tr, Ti, TM, Ta, Tp, TK, Tf, Tj;
        T1 = R0[0];
        T2 = R0[WS(rs, 6)];
        T3 = R0[WS(rs, 3)];
        T6 = R0[WS(rs, 2)];
        Tb = R0[WS(rs, 4)];
        T7 = R0[WS(rs, 8)];
        T8 = R0[WS(rs, 5)];
        Tc = R0[WS(rs, 1)];
        Td = R0[WS(rs, 7)];
        Tk = T2 + T3;
        T4 = T2 - T3;
        Th = T7 + T8;
        T9 = T7 - T8;
        To = Tc - Td;
        Te = Tc + Td;
        Tn = SIMD_FNMADD(KP500000000, Tk, T1);
        Tl = T1 + Tk;
        TJ = SIMD_FNMADD(KP500000000, T4, T1);
        T5 = T1 + T4;
        Tr = SIMD_FNMADD(KP500000000, Th, T6);
        Ti = T6 + Th;
        TM = SIMD_FNMADD(KP500000000, T9, T6);
        Ta = T6 + T9;
        Tp = SIMD_FNMADD(KP500000000, Te, Tb);
        TK = SIMD_FMADD(KP500000000, Te, Tb);
        Tf = Tb - Te;
        Tj = Tb + Te;
        {
            SIMD_FLOAT TR, Tx, TP, TH, Tw, Tz, TD, TU, TX, T12, T15, Ty, TF, Ts,
                TN;
            SIMD_FLOAT T10, TQ, Tq, TE, Tu, TL, TZ, TS, Tg, Tm, TC, Tv, TG, TB,
                Tt;
            SIMD_FLOAT TT, TW, T13, T11, T14, TO, TI, TA, TV, TY;
            Ty            = SIMD_FMADD(KP968908795, Tr, T9);
            TF            = SIMD_FMADD(KP203604859, Tr, T9);
            Ts            = SIMD_FNMADD(KP726681596, T9, Tr);
            TN            = SIMD_FNMADD(KP726681596, Th, TM);
            T10           = SIMD_FMADD(KP968908795, TM, Th);
            TQ            = SIMD_FMADD(KP203604859, TM, Th);
            TR            = SIMD_FNMADD(KP152703644, Th, TM);
            Tq            = SIMD_FNMADD(KP203604859, Tp, To);
            TE            = SIMD_FNMADD(KP315207469, To, Tp);
            Tx            = SIMD_FMADD(KP152703644, To, Tp);
            Tu            = SIMD_FNMADD(KP439692620, T9, Tp);
            TL            = SIMD_FMADD(KP203604859, TK, To);
            TZ            = SIMD_FNMADD(KP152703644, To, TK);
            TP            = SIMD_FMADD(KP315207469, To, TK);
            TS            = SIMD_FNMADD(KP420276625, TK, To);
            Tg            = Ta + Tf;
            Ci[WS(cs, 3)] = KP866025403 * (Tf - Ta);
            Tm            = Ti + Tj;
            Ci[WS(cs, 6)] = KP866025403 * (Ti - Tj);
            TC            = SIMD_FMADD(KP673648177, Ty, Tx);
            Tv            = SIMD_FMADD(KP420276625, Tu, To);
            TH            = SIMD_FMADD(KP907603734, TF, TE);
            TG            = SIMD_FNMADD(KP907603734, TF, TE);
            TB            = SIMD_FMADD(KP898197570, Ts, Tq);
            Tt            = SIMD_FNMADD(KP898197570, Ts, Tq);
            TT            = SIMD_FNMADD(KP826351822, TS, TR);
            TW            = SIMD_FNMADD(KP907603734, TQ, TP);
            T13           = SIMD_FMADD(KP673648177, T10, TZ);
            T11           = SIMD_FNMADD(KP673648177, T10, TZ);
            T14           = SIMD_FNMADD(KP898197570, TN, TL);
            TO            = SIMD_FMADD(KP898197570, TN, TL);
            Cr[WS(cs, 9)] = T5 + Tg;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tg, T5);
            Cr[0]         = Tl + Tm;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, Tm, Tl);
            Tw            = SIMD_FMADD(KP826351822, Tv, Tr);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, TG, Tn);
            Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, Tt, Tn);
            Tz            = SIMD_FNMADD(KP742227198, Tt, Ty);
            TD            = SIMD_FNMADD(KP666666666, TC, TB);
            TU            = SIMD_FNMADD(KP666666666, TT, TQ);
            TX            = SIMD_FNMADD(KP666666666, TW, TS);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, Tk, T13)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TO, TJ);
            T12           = SIMD_FMADD(KP500000000, TO, T11);
            T15           = SIMD_FNMADD(KP666666666, T13, T14);
            TI            = SIMD_FMADD(KP605069156, Tw, TH);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, T4, Tw)));
            TA            = SIMD_FNMADD(KP673648177, Tz, Tx);
            Ci[WS(cs, 4)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TD, T4)));
            TV            = SIMD_FMADD(KP907603734, TU, TP);
            TY            = SIMD_FMADD(KP826351822, TX, TR);
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, T12, TJ);
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, T15, Tk)));
            Ci[WS(cs, 8)] = KP866025403 * (SIMD_FMADD(KP939692620, TI, T4));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, TA, Tn);
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, TV, Tk));
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TY, TJ);
        }
    }
}

template <>
struct r2cf_traits<18, 10>
{
    static constexpr long_t flops           = 144;
    static constexpr long_t operations      = 86;
    static constexpr long_t memory_accesses = 28;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 10 -name r2cf
 * -standalone */

/*
 * This function contains 78 FP additions, 66 FP multiplications,
 * (or, 20 additions, 8 multiplications, 58 fused multiply/add),
 * 90 stack variables, 20 constants, and 28 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 10>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T4, T5, T8, Td, T9, Ta, Te, Tf, T3, Tm, T6, Tn, Tb;
        SIMD_FLOAT Tj, Tg, Tr, To, Tq, T7, TM, Tk, Tu, Tc, TP, Tl, Th, TN, Ts;
        T1 = R0[0];
        T2 = R0[WS(rs, 9)];
        T4 = R0[WS(rs, 6)];
        T5 = R0[WS(rs, 3)];
        T8 = R0[WS(rs, 2)];
        Td = R0[WS(rs, 4)];
        T9 = R0[WS(rs, 8)];
        Ta = R0[WS(rs, 5)];
        Te = R0[WS(rs, 1)];
        Tf = R0[WS(rs, 7)];
        T3 = T1 - T2;
        Tm = T1 + T2;
        T6 = T4 - T5;
        Tn = T4 + T5;
        Tb = T9 - Ta;
        Tj = T9 + Ta;
        Tg = Te + Tf;
        Tr = Te - Tf;
        To = Tm + Tn;
        Tq = SIMD_FNMADD(KP500000000, Tn, Tm);
        T7 = T3 + T6;
        TM = SIMD_FNMADD(KP500000000, T6, T3);
        Tk = T8 + Tj;
        Tu = SIMD_FNMADD(KP500000000, Tj, T8);
        Tc = T8 + Tb;
        TP = SIMD_FNMADD(KP500000000, Tb, T8);
        Tl = Td + Tg;
        Th = Td - Tg;
        TN = SIMD_FMADD(KP500000000, Tg, Td);
        Ts = SIMD_FNMADD(KP500000000, Tg, Td);
        {
            SIMD_FLOAT TU, TA, TS, TK, Tz, TC, TG, TX, T10, T15, T18, Tv, TI,
                TB, TT;
            SIMD_FLOAT T13, TQ, TH, Tt, Tx, TV, T12, TO, Ti, Tp, TF, Ty, TJ, Tw,
                TE;
            SIMD_FLOAT TW, TZ, T14, T16, TR, T17, TL, TD, TY, T11;
            Tv            = SIMD_FNMADD(KP726681596, Tb, Tu);
            TI            = SIMD_FMADD(KP203604859, Tu, Tb);
            TB            = SIMD_FMADD(KP968908795, Tu, Tb);
            TU            = SIMD_FNMADD(KP152703644, Tj, TP);
            TT            = SIMD_FMADD(KP203604859, TP, Tj);
            T13           = SIMD_FMADD(KP968908795, TP, Tj);
            TQ            = SIMD_FNMADD(KP726681596, Tj, TP);
            TA            = SIMD_FMADD(KP152703644, Tr, Ts);
            TH            = SIMD_FNMADD(KP315207469, Tr, Ts);
            Tt            = SIMD_FNMADD(KP203604859, Ts, Tr);
            Tx            = SIMD_FNMADD(KP439692620, Tb, Ts);
            TV            = SIMD_FNMADD(KP420276625, TN, Tr);
            TS            = SIMD_FMADD(KP315207469, Tr, TN);
            T12           = SIMD_FNMADD(KP152703644, Tr, TN);
            TO            = SIMD_FMADD(KP203604859, TN, Tr);
            Ti            = Tc + Th;
            Ci[WS(cs, 3)] = KP866025403 * (Th - Tc);
            Tp            = Tk + Tl;
            Ci[WS(cs, 6)] = KP866025403 * (Tk - Tl);
            TF            = SIMD_FMADD(KP673648177, TB, TA);
            Ty            = SIMD_FMADD(KP420276625, Tx, Tr);
            TJ            = SIMD_FNMADD(KP907603734, TI, TH);
            TK            = SIMD_FMADD(KP907603734, TI, TH);
            Tw            = SIMD_FNMADD(KP898197570, Tv, Tt);
            TE            = SIMD_FMADD(KP898197570, Tv, Tt);
            TW            = SIMD_FNMADD(KP826351822, TV, TU);
            TZ            = SIMD_FNMADD(KP907603734, TT, TS);
            T14           = SIMD_FNMADD(KP673648177, T13, T12);
            T16           = SIMD_FMADD(KP673648177, T13, T12);
            TR            = SIMD_FMADD(KP898197570, TQ, TO);
            T17           = SIMD_FNMADD(KP898197570, TQ, TO);
            Cr[WS(cs, 9)] = T7 + Ti;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Ti, T7);
            Cr[0]         = To + Tp;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, Tp, To);
            Tz            = SIMD_FMADD(KP826351822, Ty, Tu);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, TJ, Tq);
            Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, Tw, Tq);
            TC            = SIMD_FNMADD(KP742227198, Tw, TB);
            TG            = SIMD_FNMADD(KP666666666, TF, TE);
            TX            = SIMD_FNMADD(KP666666666, TW, TT);
            T10           = SIMD_FNMADD(KP666666666, TZ, TV);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FMADD(KP879385241, Tn, T16)));
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TR, TM);
            T15           = SIMD_FMADD(KP500000000, TR, T14);
            T18           = SIMD_FNMADD(KP666666666, T16, T17);
            TL            = SIMD_FMADD(KP605069156, Tz, TK);
            Ci[WS(cs, 2)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, T6, Tz)));
            TD            = SIMD_FNMADD(KP673648177, TC, TA);
            Ci[WS(cs, 4)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TG, T6)));
            TY            = SIMD_FMADD(KP907603734, TX, TS);
            T11           = SIMD_FMADD(KP826351822, T10, TU);
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, T15, TM);
            Ci[WS(cs, 7)] = -(KP866025403 * (SIMD_FMADD(KP852868531, T18, Tn)));
            Ci[WS(cs, 8)] = KP866025403 * (SIMD_FMADD(KP939692620, TL, T6));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, TD, Tq);
            Ci[WS(cs, 5)] = KP866025403 * (SIMD_FNMADD(KP939692620, TY, Tn));
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, T11, TM);
        }
    }
}

template <>
struct r2cf_traits<18, 11>
{
    static constexpr long_t flops           = 148;
    static constexpr long_t operations      = 90;
    static constexpr long_t memory_accesses = 29;
    static constexpr long_t stack_vars      = 95;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 11 -name r2cf
 * -standalone */

/*
 * This function contains 82 FP additions, 66 FP multiplications,
 * (or, 24 additions, 8 multiplications, 58 fused multiply/add),
 * 95 stack variables, 20 constants, and 29 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 11>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T4, T5, T8, Td, T9, Ta, Th, Te, Tf;
        T1 = R0[0];
        T2 = R0[WS(rs, 9)];
        T4 = R0[WS(rs, 6)];
        T5 = R0[WS(rs, 3)];
        T8 = R0[WS(rs, 2)];
        Td = R0[WS(rs, 4)];
        T9 = R0[WS(rs, 8)];
        Ta = R0[WS(rs, 5)];
        Th = R0[WS(rs, 7)];
        Te = R0[WS(rs, 10)];
        Tf = R0[WS(rs, 1)];
        {
            SIMD_FLOAT TL, T3, Ts, T6, To, Tb, TN, Tg, TM, T1c, Tt, T7, TS, T1a,
                Tp;
            SIMD_FLOAT Tc, TO, TP, Tm, Ti, TZ, T16, TT, Tq, TF, Tu, Tx, TQ, T1b,
                Tl;
            SIMD_FLOAT Tj;
            TL  = T1 + T2;
            T3  = T1 - T2;
            Ts  = T4 + T5;
            T6  = T4 - T5;
            To  = T9 + Ta;
            Tb  = T9 - Ta;
            TN  = Te + Tf;
            Tg  = Te - Tf;
            TM  = SIMD_FNMADD(KP500000000, Ts, TL);
            T1c = TL + Ts;
            Tt  = SIMD_FNMADD(KP500000000, T6, T3);
            T7  = T3 + T6;
            TS  = SIMD_FNMADD(KP500000000, To, T8);
            T1a = T8 + To;
            Tp  = SIMD_FNMADD(KP500000000, Tb, T8);
            Tc  = T8 + Tb;
            TO  = TN - Th;
            TP  = TN + Th;
            Tm  = Tg + Th;
            Ti  = Tg - Th;
            TZ  = SIMD_FMADD(KP968908795, TS, Tb);
            T16 = SIMD_FMADD(KP203604859, TS, Tb);
            TT  = SIMD_FNMADD(KP726681596, Tb, TS);
            Tq  = SIMD_FMADD(KP968908795, Tp, To);
            TF  = SIMD_FNMADD(KP726681596, To, Tp);
            Tu  = SIMD_FNMADD(KP152703644, To, Tp);
            Tx  = SIMD_FMADD(KP203604859, Tp, To);
            TQ  = SIMD_FNMADD(KP500000000, TP, Td);
            T1b = Td + TP;
            Tl  = SIMD_FNMADD(KP500000000, Ti, Td);
            Tj  = Td + Ti;
            {
                SIMD_FLOAT T1d, TR, TY, T15, TV, Tk, Tv, Tw, Tn, TE, T18, TG,
                    TJ, Tr, TH;
                SIMD_FLOAT Ty, TB, TX, T10, T14, T17, T13, TW, T12, TU, TI, TK,
                    Tz, TC, T19;
                SIMD_FLOAT T11, TA, TD;
                Ci[WS(cs, 6)] = KP866025403 * (T1a - T1b);
                T1d           = T1a + T1b;
                TR            = SIMD_FNMADD(KP203604859, TQ, TO);
                TY            = SIMD_FMADD(KP152703644, TO, TQ);
                T15           = SIMD_FNMADD(KP315207469, TO, TQ);
                TV            = SIMD_FNMADD(KP439692620, Tb, TQ);
                Ci[WS(cs, 3)] = KP866025403 * (Tj - Tc);
                Tk            = Tc + Tj;
                Tv            = SIMD_FMADD(KP420276625, Tl, Tm);
                Tw            = SIMD_FNMADD(KP315207469, Tm, Tl);
                Tn            = SIMD_FMADD(KP152703644, Tm, Tl);
                TE            = SIMD_FNMADD(KP203604859, Tl, Tm);
                Cr[0]         = T1c + T1d;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1d, T1c);
                T17           = SIMD_FNMADD(KP907603734, T16, T15);
                T18           = SIMD_FMADD(KP907603734, T16, T15);
                T13           = SIMD_FMADD(KP673648177, TZ, TY);
                TW            = SIMD_FMADD(KP420276625, TV, TO);
                T12           = SIMD_FMADD(KP898197570, TT, TR);
                TU            = SIMD_FNMADD(KP898197570, TT, TR);
                Cr[WS(cs, 9)] = T7 + Tk;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tk, T7);
                TG            = SIMD_FNMADD(KP898197570, TF, TE);
                TJ            = SIMD_FMADD(KP898197570, TF, TE);
                Tr            = SIMD_FMADD(KP673648177, Tq, Tn);
                TH            = SIMD_FNMADD(KP673648177, Tq, Tn);
                Ty            = SIMD_FNMADD(KP907603734, Tx, Tw);
                TB            = SIMD_FMADD(KP826351822, Tv, Tu);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T17, TM);
                TX            = SIMD_FMADD(KP826351822, TW, TS);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, TU, TM);
                T10           = SIMD_FNMADD(KP742227198, TU, TZ);
                T14           = SIMD_FNMADD(KP666666666, T13, T12);
                Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TG, Tt);
                TI            = SIMD_FNMADD(KP500000000, TG, TH);
                TK            = SIMD_FMADD(KP666666666, Tr, TJ);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, Ts, Tr)));
                Tz  = SIMD_FMADD(KP666666666, Ty, Tv);
                TC  = SIMD_FNMADD(KP666666666, TB, Tx);
                T19 = SIMD_FMADD(KP605069156, TX, T18);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, T6, TX)));
                T11 = SIMD_FNMADD(KP673648177, T10, TY);
                Ci[WS(cs, 4)] =
                    -(KP866025403 * (SIMD_FMADD(KP852868531, T14, T6)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TI, Tt);
                Ci[WS(cs, 7)] =
                    -(KP866025403 * (SIMD_FNMADD(KP852868531, TK, Ts)));
                TA = SIMD_FNMADD(KP826351822, Tz, Tu);
                TD = SIMD_FMADD(KP907603734, TC, Tw);
                Ci[WS(cs, 8)] =
                    KP866025403 * (SIMD_FMADD(KP939692620, T19, T6));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T11, TM);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TA, Tt);
                Ci[WS(cs, 5)] =
                    KP866025403 * (SIMD_FNMADD(KP939692620, TD, Ts));
            }
        }
    }
}

template <>
struct r2cf_traits<18, 12>
{
    static constexpr long_t flops           = 150;
    static constexpr long_t operations      = 92;
    static constexpr long_t memory_accesses = 30;
    static constexpr long_t stack_vars      = 98;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 12 -name r2cf
 * -standalone */

/*
 * This function contains 84 FP additions, 66 FP multiplications,
 * (or, 26 additions, 8 multiplications, 58 fused multiply/add),
 * 98 stack variables, 20 constants, and 30 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 12>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T2, T4, T5, Tf, Tb, Tc, T8, T9, Tj, Tg, Th;
        T1 = R0[0];
        T2 = R0[WS(rs, 9)];
        T4 = R0[WS(rs, 6)];
        T5 = R0[WS(rs, 3)];
        Tf = R0[WS(rs, 4)];
        Tb = R0[WS(rs, 8)];
        Tc = R0[WS(rs, 5)];
        T8 = R0[WS(rs, 2)];
        T9 = R0[WS(rs, 11)];
        Tj = R0[WS(rs, 7)];
        Tg = R0[WS(rs, 10)];
        Th = R0[WS(rs, 1)];
        {
            SIMD_FLOAT T3, TN, T6, Tu, Td, Tq, Ta, TU, Ti, TP, T1f, TO, T7, Tv,
                T1d;
            SIMD_FLOAT TV, Te, Tr, TR, TQ, Tk, To, TW, T19, T12, Tz, Tw, TH, Ts,
                T1e;
            SIMD_FLOAT TS, Tl, Tn;
            T3  = T1 - T2;
            TN  = T1 + T2;
            T6  = T4 - T5;
            Tu  = T4 + T5;
            Td  = Tb - Tc;
            Tq  = Tb + Tc;
            Ta  = T8 - T9;
            TU  = T8 + T9;
            Ti  = Tg - Th;
            TP  = Tg + Th;
            T1f = TN + Tu;
            TO  = SIMD_FNMADD(KP500000000, Tu, TN);
            T7  = T3 + T6;
            Tv  = SIMD_FNMADD(KP500000000, T6, T3);
            T1d = TU + Tq;
            TV  = SIMD_FNMADD(KP500000000, Tq, TU);
            Te  = Ta + Td;
            Tr  = SIMD_FNMADD(KP500000000, Td, Ta);
            TR  = TP + Tj;
            TQ  = TP - Tj;
            Tk  = Ti - Tj;
            To  = Ti + Tj;
            TW  = SIMD_FNMADD(KP726681596, Td, TV);
            T19 = SIMD_FMADD(KP203604859, TV, Td);
            T12 = SIMD_FMADD(KP968908795, TV, Td);
            Tz  = SIMD_FMADD(KP203604859, Tr, Tq);
            Tw  = SIMD_FNMADD(KP152703644, Tq, Tr);
            TH  = SIMD_FNMADD(KP726681596, Tq, Tr);
            Ts  = SIMD_FMADD(KP968908795, Tr, Tq);
            T1e = Tf + TR;
            TS  = SIMD_FNMADD(KP500000000, TR, Tf);
            Tl  = Tf + Tk;
            Tn  = SIMD_FNMADD(KP500000000, Tk, Tf);
            {
                SIMD_FLOAT T1g, T18, T11, TT, TY, Tm, TG, Tp, Ty, Tx, T1b, TL,
                    TI, TJ, Tt;
                SIMD_FLOAT TA, TD, T10, T13, T17, T1a, T16, TZ, TX, T15, TK, TM,
                    TB, TE, T1c;
                SIMD_FLOAT T14, TC, TF;
                Ci[WS(cs, 6)] = KP866025403 * (T1d - T1e);
                T1g           = T1d + T1e;
                T18           = SIMD_FNMADD(KP315207469, TQ, TS);
                T11           = SIMD_FMADD(KP152703644, TQ, TS);
                TT            = SIMD_FNMADD(KP203604859, TS, TQ);
                TY            = SIMD_FNMADD(KP439692620, Td, TS);
                Ci[WS(cs, 3)] = KP866025403 * (Tl - Te);
                Tm            = Te + Tl;
                TG            = SIMD_FNMADD(KP203604859, Tn, To);
                Tp            = SIMD_FMADD(KP152703644, To, Tn);
                Ty            = SIMD_FNMADD(KP315207469, To, Tn);
                Tx            = SIMD_FMADD(KP420276625, Tn, To);
                Cr[0]         = T1f + T1g;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1g, T1f);
                T1b           = SIMD_FMADD(KP907603734, T19, T18);
                T1a           = SIMD_FNMADD(KP907603734, T19, T18);
                T16           = SIMD_FMADD(KP673648177, T12, T11);
                TZ            = SIMD_FMADD(KP420276625, TY, TQ);
                TX            = SIMD_FNMADD(KP898197570, TW, TT);
                T15           = SIMD_FMADD(KP898197570, TW, TT);
                Cr[WS(cs, 9)] = T7 + Tm;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tm, T7);
                TL            = SIMD_FMADD(KP898197570, TH, TG);
                TI            = SIMD_FNMADD(KP898197570, TH, TG);
                TJ            = SIMD_FNMADD(KP673648177, Ts, Tp);
                Tt            = SIMD_FMADD(KP673648177, Ts, Tp);
                TA            = SIMD_FNMADD(KP907603734, Tz, Ty);
                TD            = SIMD_FMADD(KP826351822, Tx, Tw);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1a, TO);
                T10           = SIMD_FMADD(KP826351822, TZ, TV);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, TX, TO);
                T13           = SIMD_FNMADD(KP742227198, TX, T12);
                T17           = SIMD_FNMADD(KP666666666, T16, T15);
                Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TI, Tv);
                TK            = SIMD_FNMADD(KP500000000, TI, TJ);
                TM            = SIMD_FMADD(KP666666666, Tt, TL);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, Tu, Tt)));
                TB  = SIMD_FMADD(KP666666666, TA, Tx);
                TE  = SIMD_FNMADD(KP666666666, TD, Tz);
                T1c = SIMD_FMADD(KP605069156, T10, T1b);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, T6, T10)));
                T14 = SIMD_FNMADD(KP673648177, T13, T11);
                Ci[WS(cs, 4)] =
                    -(KP866025403 * (SIMD_FMADD(KP852868531, T17, T6)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TK, Tv);
                Ci[WS(cs, 7)] =
                    -(KP866025403 * (SIMD_FNMADD(KP852868531, TM, Tu)));
                TC = SIMD_FNMADD(KP826351822, TB, Tw);
                TF = SIMD_FMADD(KP907603734, TE, Ty);
                Ci[WS(cs, 8)] =
                    KP866025403 * (SIMD_FMADD(KP939692620, T1c, T6));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T14, TO);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TC, Tv);
                Ci[WS(cs, 5)] =
                    KP866025403 * (SIMD_FNMADD(KP939692620, TF, Tu));
            }
        }
    }
}

template <>
struct r2cf_traits<18, 13>
{
    static constexpr long_t flops           = 154;
    static constexpr long_t operations      = 96;
    static constexpr long_t memory_accesses = 31;
    static constexpr long_t stack_vars      = 103;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 13 -name r2cf
 * -standalone */

/*
 * This function contains 88 FP additions, 66 FP multiplications,
 * (or, 30 additions, 8 multiplications, 58 fused multiply/add),
 * 103 stack variables, 20 constants, and 31 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 13>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T4, T5, T6, Th, Td, Te, Ta, Tb, Tl, Ti, Tj, TP, T3, T1, T2;
        SIMD_FLOAT TQ, T7;
        T1 = R0[0];
        T2 = R0[WS(rs, 9)];
        T4 = R0[WS(rs, 6)];
        T5 = R0[WS(rs, 12)];
        T6 = R0[WS(rs, 3)];
        Th = R0[WS(rs, 4)];
        Td = R0[WS(rs, 8)];
        Te = R0[WS(rs, 5)];
        Ta = R0[WS(rs, 2)];
        Tb = R0[WS(rs, 11)];
        Tl = R0[WS(rs, 7)];
        Ti = R0[WS(rs, 10)];
        Tj = R0[WS(rs, 1)];
        TP = T1 + T2;
        T3 = T1 - T2;
        TQ = T5 + T6;
        T7 = T5 - T6;
        {
            SIMD_FLOAT Ts, Tf, TY, Tc, TT, Tk, T15, TR, Tw, T8, TZ, T1i, Tg, TU,
                Tq;
            SIMD_FLOAT TS, T1k, Tx, T9, T17, T1e, T10, Tu, TJ, Ty, TB, TW, T1j,
                Tp, Tn;
            SIMD_FLOAT Tt, TV, Tm;
            Ts  = Td + Te;
            Tf  = Td - Te;
            TY  = Ta + Tb;
            Tc  = Ta - Tb;
            TT  = Ti + Tj;
            Tk  = Ti - Tj;
            T15 = TQ - T4;
            TR  = T4 + TQ;
            Tw  = T7 - T4;
            T8  = T4 + T7;
            TZ  = SIMD_FNMADD(KP500000000, Ts, TY);
            T1i = TY + Ts;
            Tt  = SIMD_FNMADD(KP500000000, Tf, Tc);
            Tg  = Tc + Tf;
            TU  = TT - Tl;
            TV  = TT + Tl;
            Tq  = Tk + Tl;
            Tm  = Tk - Tl;
            TS  = SIMD_FNMADD(KP500000000, TR, TP);
            T1k = TP + TR;
            Tx  = SIMD_FNMADD(KP500000000, T8, T3);
            T9  = T3 + T8;
            T17 = SIMD_FMADD(KP968908795, TZ, Tf);
            T1e = SIMD_FMADD(KP203604859, TZ, Tf);
            T10 = SIMD_FNMADD(KP726681596, Tf, TZ);
            Tu  = SIMD_FMADD(KP968908795, Tt, Ts);
            TJ  = SIMD_FNMADD(KP726681596, Ts, Tt);
            Ty  = SIMD_FNMADD(KP152703644, Ts, Tt);
            TB  = SIMD_FMADD(KP203604859, Tt, Ts);
            TW  = SIMD_FNMADD(KP500000000, TV, Th);
            T1j = Th + TV;
            Tp  = SIMD_FNMADD(KP500000000, Tm, Th);
            Tn  = Th + Tm;
            {
                SIMD_FLOAT T1l, TX, T16, T1d, T12, To, TA, Tr, TI, Tz, T1g, TN,
                    TK, TL, Tv;
                SIMD_FLOAT TC, TF, T14, T18, T1c, TH, T1f, T1b, T13, T1a, T11,
                    TG, TM, TO, TD;
                SIMD_FLOAT T1h, T19, TE;
                Ci[WS(cs, 6)] = KP866025403 * (T1i - T1j);
                T1l           = T1i + T1j;
                TX            = SIMD_FNMADD(KP203604859, TW, TU);
                T16           = SIMD_FMADD(KP152703644, TU, TW);
                T1d           = SIMD_FNMADD(KP315207469, TU, TW);
                T12           = SIMD_FNMADD(KP439692620, Tf, TW);
                Ci[WS(cs, 3)] = KP866025403 * (Tn - Tg);
                To            = Tg + Tn;
                TA            = SIMD_FNMADD(KP315207469, Tq, Tp);
                Tr            = SIMD_FMADD(KP152703644, Tq, Tp);
                TI            = SIMD_FNMADD(KP203604859, Tp, Tq);
                Tz            = SIMD_FMADD(KP420276625, Tp, Tq);
                Cr[0]         = T1k + T1l;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1l, T1k);
                T1f           = SIMD_FNMADD(KP907603734, T1e, T1d);
                T1g           = SIMD_FMADD(KP907603734, T1e, T1d);
                T1b           = SIMD_FMADD(KP673648177, T17, T16);
                T13           = SIMD_FMADD(KP420276625, T12, TU);
                T1a           = SIMD_FMADD(KP898197570, T10, TX);
                T11           = SIMD_FNMADD(KP898197570, T10, TX);
                Cr[WS(cs, 9)] = T9 + To;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, To, T9);
                TG            = SIMD_FMADD(KP826351822, Tz, Ty);
                TN            = SIMD_FMADD(KP898197570, TJ, TI);
                TK            = SIMD_FNMADD(KP898197570, TJ, TI);
                TL            = SIMD_FNMADD(KP673648177, Tu, Tr);
                Tv            = SIMD_FMADD(KP673648177, Tu, Tr);
                TC            = SIMD_FNMADD(KP907603734, TB, TA);
                TF            = SIMD_FMADD(KP939692620, TA, Tw);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1f, TS);
                T14           = SIMD_FMADD(KP826351822, T13, TZ);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T11, TS);
                T18           = SIMD_FNMADD(KP742227198, T11, T17);
                T1c           = SIMD_FNMADD(KP666666666, T1b, T1a);
                TH            = SIMD_FNMADD(KP666666666, TG, TB);
                Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TK, Tx);
                TM            = SIMD_FNMADD(KP500000000, TK, TL);
                TO            = SIMD_FMADD(KP666666666, Tv, TN);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, Tw, Tv)));
                TD  = SIMD_FMADD(KP666666666, TC, Tz);
                T1h = SIMD_FMADD(KP605069156, T14, T1g);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, T15, T14)));
                T19 = SIMD_FNMADD(KP673648177, T18, T16);
                Ci[WS(cs, 4)] =
                    KP866025403 * (SIMD_FNMADD(KP852868531, T1c, T15));
                Ci[WS(cs, 5)] =
                    -(KP866025403 * (SIMD_FMADD(KP852868531, TH, TF)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TM, Tx);
                Ci[WS(cs, 7)] = KP866025403 * (SIMD_FMADD(KP852868531, TO, Tw));
                TE            = SIMD_FNMADD(KP826351822, TD, Ty);
                Ci[WS(cs, 8)] =
                    -(KP866025403 * (SIMD_FNMADD(KP939692620, T1h, T15)));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T19, TS);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TE, Tx);
            }
        }
    }
}

template <>
struct r2cf_traits<18, 14>
{
    static constexpr long_t flops           = 156;
    static constexpr long_t operations      = 98;
    static constexpr long_t memory_accesses = 32;
    static constexpr long_t stack_vars      = 106;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 14 -name r2cf
 * -standalone */

/*
 * This function contains 90 FP additions, 66 FP multiplications,
 * (or, 32 additions, 8 multiplications, 58 fused multiply/add),
 * 106 stack variables, 20 constants, and 32 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 14>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T4, Tn, Tk, TR, T3, Tl, T7, TS, Tc, T11, Tj, TX, Tf, Tu, T1;
        SIMD_FLOAT T2, T5, T6, Ta, Tb, Th, Ti, Td, Te, Tm, TV, TT, T18, T8, Ty;
        SIMD_FLOAT T1l, T12, Tg, Tv, TW, Ts, T1n, TU, T9, Tz, T13, T1h, T1a, TD,
            TA;
        SIMD_FLOAT TL, Tw, T1m, TZ, Tp, Tr, TY, To;
        T1  = R0[0];
        T2  = R0[WS(rs, 9)];
        T4  = R0[WS(rs, 6)];
        T5  = R0[WS(rs, 12)];
        T6  = R0[WS(rs, 3)];
        Ta  = R0[WS(rs, 2)];
        Tb  = R0[WS(rs, 11)];
        Th  = R0[WS(rs, 4)];
        Ti  = R0[WS(rs, 13)];
        Td  = R0[WS(rs, 8)];
        Te  = R0[WS(rs, 5)];
        Tn  = R0[WS(rs, 7)];
        Tk  = R0[WS(rs, 10)];
        TR  = T1 + T2;
        T3  = T1 - T2;
        Tl  = R0[WS(rs, 1)];
        T7  = T5 - T6;
        TS  = T5 + T6;
        Tc  = Ta - Tb;
        T11 = Ta + Tb;
        Tj  = Th - Ti;
        TX  = Th + Ti;
        Tf  = Td - Te;
        Tu  = Td + Te;
        Tm  = Tk - Tl;
        TV  = Tk + Tl;
        TT  = T4 + TS;
        T18 = TS - T4;
        T8  = T4 + T7;
        Ty  = T7 - T4;
        T1l = T11 + Tu;
        T12 = SIMD_FNMADD(KP500000000, Tu, T11);
        Tg  = Tc + Tf;
        Tv  = SIMD_FNMADD(KP500000000, Tf, Tc);
        TY  = TV + Tn;
        TW  = TV - Tn;
        To  = Tm - Tn;
        Ts  = Tm + Tn;
        T1n = TR + TT;
        TU  = SIMD_FNMADD(KP500000000, TT, TR);
        T9  = T3 + T8;
        Tz  = SIMD_FNMADD(KP500000000, T8, T3);
        T13 = SIMD_FNMADD(KP726681596, Tf, T12);
        T1h = SIMD_FMADD(KP203604859, T12, Tf);
        T1a = SIMD_FMADD(KP968908795, T12, Tf);
        TD  = SIMD_FMADD(KP203604859, Tv, Tu);
        TA  = SIMD_FNMADD(KP152703644, Tu, Tv);
        TL  = SIMD_FNMADD(KP726681596, Tu, Tv);
        Tw  = SIMD_FMADD(KP968908795, Tv, Tu);
        T1m = TX + TY;
        TZ  = SIMD_FNMADD(KP500000000, TY, TX);
        Tp  = Tj + To;
        Tr  = SIMD_FNMADD(KP500000000, To, Tj);
        {
            SIMD_FLOAT T1o, T1g, T19, T10, T15, Tq, TB, TK, Tt, TC, T1j, TM, TP,
                Tx, TN;
            SIMD_FLOAT TE, TH, T17, T1b, T1f, TJ, T1i, T1e, T16, T14, T1d, TI,
                TO, TQ, TF;
            SIMD_FLOAT T1k, T1c, TG;
            Ci[WS(cs, 6)] = KP866025403 * (T1l - T1m);
            T1o           = T1l + T1m;
            T1g           = SIMD_FNMADD(KP315207469, TW, TZ);
            T19           = SIMD_FMADD(KP152703644, TW, TZ);
            T10           = SIMD_FNMADD(KP203604859, TZ, TW);
            T15           = SIMD_FNMADD(KP439692620, Tf, TZ);
            Ci[WS(cs, 3)] = KP866025403 * (Tp - Tg);
            Tq            = Tg + Tp;
            TB            = SIMD_FMADD(KP420276625, Tr, Ts);
            TK            = SIMD_FNMADD(KP203604859, Tr, Ts);
            Tt            = SIMD_FMADD(KP152703644, Ts, Tr);
            TC            = SIMD_FNMADD(KP315207469, Ts, Tr);
            Cr[0]         = T1n + T1o;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1o, T1n);
            T1j           = SIMD_FMADD(KP907603734, T1h, T1g);
            T1i           = SIMD_FNMADD(KP907603734, T1h, T1g);
            T1e           = SIMD_FMADD(KP673648177, T1a, T19);
            T16           = SIMD_FMADD(KP420276625, T15, TW);
            T14           = SIMD_FNMADD(KP898197570, T13, T10);
            T1d           = SIMD_FMADD(KP898197570, T13, T10);
            Cr[WS(cs, 9)] = T9 + Tq;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tq, T9);
            TI            = SIMD_FMADD(KP826351822, TB, TA);
            TM            = SIMD_FNMADD(KP898197570, TL, TK);
            TP            = SIMD_FMADD(KP898197570, TL, TK);
            Tx            = SIMD_FMADD(KP673648177, Tw, Tt);
            TN            = SIMD_FNMADD(KP673648177, Tw, Tt);
            TE            = SIMD_FNMADD(KP907603734, TD, TC);
            TH            = SIMD_FMADD(KP939692620, TC, Ty);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1i, TU);
            T17           = SIMD_FMADD(KP826351822, T16, T12);
            Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T14, TU);
            T1b           = SIMD_FNMADD(KP742227198, T14, T1a);
            T1f           = SIMD_FNMADD(KP666666666, T1e, T1d);
            TJ            = SIMD_FNMADD(KP666666666, TI, TD);
            Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TM, Tz);
            TO            = SIMD_FNMADD(KP500000000, TM, TN);
            TQ            = SIMD_FMADD(KP666666666, Tx, TP);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, Ty, Tx)));
            TF            = SIMD_FMADD(KP666666666, TE, TB);
            T1k           = SIMD_FMADD(KP605069156, T17, T1j);
            Ci[WS(cs, 2)] =
                -(KP984807753 * (SIMD_FMADD(KP879385241, T18, T17)));
            T1c           = SIMD_FNMADD(KP673648177, T1b, T19);
            Ci[WS(cs, 4)] = KP866025403 * (SIMD_FNMADD(KP852868531, T1f, T18));
            Ci[WS(cs, 5)] = -(KP866025403 * (SIMD_FMADD(KP852868531, TJ, TH)));
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TO, Tz);
            Ci[WS(cs, 7)] = KP866025403 * (SIMD_FMADD(KP852868531, TQ, Ty));
            TG            = SIMD_FNMADD(KP826351822, TF, TA);
            Ci[WS(cs, 8)] =
                -(KP866025403 * (SIMD_FNMADD(KP939692620, T1k, T18)));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T1c, TU);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TG, Tz);
        }
    }
}

template <>
struct r2cf_traits<18, 15>
{
    static constexpr long_t flops           = 160;
    static constexpr long_t operations      = 102;
    static constexpr long_t memory_accesses = 33;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 15 -name r2cf
 * -standalone */

/*
 * This function contains 94 FP additions, 66 FP multiplications,
 * (or, 36 additions, 8 multiplications, 58 fused multiply/add),
 * 111 stack variables, 20 constants, and 33 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 15>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T4, Td, Tp, TT, T3, Tm, T7, TU, Tc, T13, Tl, TZ, Tn, T14, Tg;
        SIMD_FLOAT T1, T2, T5, T6, Ta, Tb, Tj, Tk, Te, Tf;
        T1  = R0[0];
        T2  = R0[WS(rs, 9)];
        T4  = R0[WS(rs, 6)];
        T5  = R0[WS(rs, 12)];
        T6  = R0[WS(rs, 3)];
        Ta  = R0[WS(rs, 2)];
        Tb  = R0[WS(rs, 11)];
        Tj  = R0[WS(rs, 4)];
        Tk  = R0[WS(rs, 13)];
        Td  = R0[WS(rs, 8)];
        Te  = R0[WS(rs, 14)];
        Tf  = R0[WS(rs, 5)];
        Tp  = R0[WS(rs, 7)];
        TT  = T1 + T2;
        T3  = T1 - T2;
        Tm  = R0[WS(rs, 10)];
        T7  = T5 - T6;
        TU  = T5 + T6;
        Tc  = Ta - Tb;
        T13 = Ta + Tb;
        Tl  = Tj - Tk;
        TZ  = Tj + Tk;
        Tn  = R0[WS(rs, 1)];
        T14 = Te + Tf;
        Tg  = Te - Tf;
        {
            SIMD_FLOAT T1d, TV, TA, T8, TX, To, T17, T15, Tw, Th, TW, T1s, TB,
                T9, TY;
            SIMD_FLOAT T10, Tu, Tq, T1q, T16, Ti, Tx, T1r, T11, Tr, Tt, T1f,
                T1m, T18, TF;
            SIMD_FLOAT Ty, TN, TC;
            T1d = TU - T4;
            TV  = T4 + TU;
            TA  = T7 - T4;
            T8  = T4 + T7;
            TX  = Tm + Tn;
            To  = Tm - Tn;
            T17 = Td - T14;
            T15 = Td + T14;
            Tw  = Tg - Td;
            Th  = Td + Tg;
            TW  = SIMD_FNMADD(KP500000000, TV, TT);
            T1s = TT + TV;
            TB  = SIMD_FNMADD(KP500000000, T8, T3);
            T9  = T3 + T8;
            TY  = TX - Tp;
            T10 = TX + Tp;
            Tu  = To + Tp;
            Tq  = To - Tp;
            T1q = T13 + T15;
            T16 = SIMD_FNMADD(KP500000000, T15, T13);
            Ti  = Tc + Th;
            Tx  = SIMD_FNMADD(KP500000000, Th, Tc);
            T1r = TZ + T10;
            T11 = SIMD_FNMADD(KP500000000, T10, TZ);
            Tr  = Tl + Tq;
            Tt  = SIMD_FNMADD(KP500000000, Tq, Tl);
            T1f = SIMD_FMADD(KP968908795, T16, T17);
            T1m = SIMD_FMADD(KP203604859, T16, T17);
            T18 = SIMD_FNMADD(KP726681596, T17, T16);
            TF  = SIMD_FNMADD(KP203604859, Tx, Tw);
            Ty  = SIMD_FNMADD(KP968908795, Tx, Tw);
            TN  = SIMD_FMADD(KP726681596, Tw, Tx);
            TC  = SIMD_FMADD(KP152703644, Tw, Tx);
            {
                SIMD_FLOAT T1t, T12, T1l, T1e, T1a, Ts, TE, Tv, TM, TD, T1o, TR,
                    TO, TP, Tz;
                SIMD_FLOAT TG, TJ, T1c, T1g, T1k, TL, T1j, T1n, T1b, T1i, T19,
                    TK, TQ, TS, TH;
                SIMD_FLOAT T1p, T1h, TI;
                Ci[WS(cs, 6)] = KP866025403 * (T1q - T1r);
                T1t           = T1q + T1r;
                T12           = SIMD_FNMADD(KP203604859, T11, TY);
                T1l           = SIMD_FNMADD(KP315207469, TY, T11);
                T1e           = SIMD_FMADD(KP152703644, TY, T11);
                T1a           = SIMD_FNMADD(KP439692620, T17, T11);
                Ci[WS(cs, 3)] = KP866025403 * (Tr - Ti);
                Ts            = Ti + Tr;
                TE            = SIMD_FNMADD(KP315207469, Tu, Tt);
                Tv            = SIMD_FMADD(KP152703644, Tu, Tt);
                TM            = SIMD_FNMADD(KP203604859, Tt, Tu);
                TD            = SIMD_FMADD(KP420276625, Tt, Tu);
                Cr[0]         = T1s + T1t;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1t, T1s);
                T1j           = SIMD_FMADD(KP673648177, T1f, T1e);
                T1o           = SIMD_FMADD(KP907603734, T1m, T1l);
                T1n           = SIMD_FNMADD(KP907603734, T1m, T1l);
                T1b           = SIMD_FMADD(KP420276625, T1a, TY);
                T1i           = SIMD_FMADD(KP898197570, T18, T12);
                T19           = SIMD_FNMADD(KP898197570, T18, T12);
                Cr[WS(cs, 9)] = T9 + Ts;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Ts, T9);
                TK            = SIMD_FMADD(KP826351822, TD, TC);
                TR            = SIMD_FMADD(KP898197570, TN, TM);
                TO            = SIMD_FNMADD(KP898197570, TN, TM);
                TP            = SIMD_FMADD(KP673648177, Ty, Tv);
                Tz            = SIMD_FNMADD(KP673648177, Ty, Tv);
                TG            = SIMD_FMADD(KP907603734, TF, TE);
                TJ            = SIMD_FMADD(KP939692620, TE, TA);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1n, TW);
                T1c           = SIMD_FMADD(KP826351822, T1b, T16);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T19, TW);
                T1g           = SIMD_FNMADD(KP742227198, T19, T1f);
                T1k           = SIMD_FNMADD(KP666666666, T1j, T1i);
                TL            = SIMD_FMADD(KP666666666, TK, TF);
                Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TO, TB);
                TQ            = SIMD_FNMADD(KP500000000, TO, TP);
                TS            = SIMD_FMADD(KP666666666, Tz, TR);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, TA, Tz)));
                TH  = SIMD_FMADD(KP666666666, TG, TD);
                T1p = SIMD_FMADD(KP605069156, T1c, T1o);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, T1d, T1c)));
                T1h = SIMD_FNMADD(KP673648177, T1g, T1e);
                Ci[WS(cs, 4)] =
                    KP866025403 * (SIMD_FNMADD(KP852868531, T1k, T1d));
                Ci[WS(cs, 5)] =
                    -(KP866025403 * (SIMD_FNMADD(KP852868531, TL, TJ)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TQ, TB);
                Ci[WS(cs, 7)] = KP866025403 * (SIMD_FMADD(KP852868531, TS, TA));
                TI            = SIMD_FNMADD(KP826351822, TH, TC);
                Ci[WS(cs, 8)] =
                    -(KP866025403 * (SIMD_FNMADD(KP939692620, T1p, T1d)));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T1h, TW);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TI, TB);
            }
        }
    }
}

template <>
struct r2cf_traits<18, 16>
{
    static constexpr long_t flops           = 162;
    static constexpr long_t operations      = 104;
    static constexpr long_t memory_accesses = 34;
    static constexpr long_t stack_vars      = 114;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 16 -name r2cf
 * -standalone */

/*
 * This function contains 96 FP additions, 66 FP multiplications,
 * (or, 38 additions, 8 multiplications, 58 fused multiply/add),
 * 114 stack variables, 20 constants, and 34 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 16>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tf, TV, T3, TW, T6, TX, T9, T16, Te, T12, Tn, Tr, Ti, T17,
            To;
        SIMD_FLOAT Tp, T1, T2, T4, T5, T7, T8, Tc, Td, Tl, Tm, Tg, Th;
        T1  = R0[0];
        T2  = R0[WS(rs, 9)];
        T4  = R0[WS(rs, 6)];
        T5  = R0[WS(rs, 15)];
        T7  = R0[WS(rs, 12)];
        T8  = R0[WS(rs, 3)];
        Tc  = R0[WS(rs, 2)];
        Td  = R0[WS(rs, 11)];
        Tl  = R0[WS(rs, 4)];
        Tm  = R0[WS(rs, 13)];
        Tf  = R0[WS(rs, 8)];
        Tg  = R0[WS(rs, 14)];
        Th  = R0[WS(rs, 5)];
        TV  = T1 + T2;
        T3  = T1 - T2;
        TW  = T4 + T5;
        T6  = T4 - T5;
        TX  = T7 + T8;
        T9  = T7 - T8;
        T16 = Tc + Td;
        Te  = Tc - Td;
        T12 = Tl + Tm;
        Tn  = Tl - Tm;
        Tr  = R0[WS(rs, 7)];
        Ti  = Tg - Th;
        T17 = Tg + Th;
        To  = R0[WS(rs, 10)];
        Tp  = R0[WS(rs, 1)];
        {
            SIMD_FLOAT TY, T1g, Ta, TC, T18, T1a, Tj, Ty, Tq, T10, T1v, TZ, Tb,
                TD, T19;
            SIMD_FLOAT T1t, Tz, Tk, T13, T11, Ts, Tw, T1b, T1p, T1i, TE, TP, TA,
                TH, T1u;
            SIMD_FLOAT T14, Tt, Tv;
            TY  = TW + TX;
            T1g = TX - TW;
            Ta  = T6 + T9;
            TC  = T9 - T6;
            T18 = Tf + T17;
            T1a = Tf - T17;
            Tj  = Tf + Ti;
            Ty  = Ti - Tf;
            Tq  = To - Tp;
            T10 = To + Tp;
            T1v = TV + TY;
            TZ  = SIMD_FNMADD(KP500000000, TY, TV);
            Tb  = T3 + Ta;
            TD  = SIMD_FNMADD(KP500000000, Ta, T3);
            T19 = SIMD_FNMADD(KP500000000, T18, T16);
            T1t = T16 + T18;
            Tz  = SIMD_FNMADD(KP500000000, Tj, Te);
            Tk  = Te + Tj;
            T13 = T10 + Tr;
            T11 = T10 - Tr;
            Ts  = Tq - Tr;
            Tw  = Tq + Tr;
            T1b = SIMD_FNMADD(KP726681596, T1a, T19);
            T1p = SIMD_FMADD(KP203604859, T19, T1a);
            T1i = SIMD_FMADD(KP968908795, T19, T1a);
            TE  = SIMD_FMADD(KP152703644, Ty, Tz);
            TP  = SIMD_FMADD(KP726681596, Ty, Tz);
            TA  = SIMD_FNMADD(KP968908795, Tz, Ty);
            TH  = SIMD_FNMADD(KP203604859, Tz, Ty);
            T1u = T12 + T13;
            T14 = SIMD_FNMADD(KP500000000, T13, T12);
            Tt  = Tn + Ts;
            Tv  = SIMD_FNMADD(KP500000000, Ts, Tn);
            {
                SIMD_FLOAT T1w, T1h, T1o, T15, T1d, Tu, TF, TO, Tx, TG, T1r, TQ,
                    TT, TB, TR;
                SIMD_FLOAT TI, TL, T1f, T1j, T1n, TN, T1m, T1q, T1e, T1c, T1l,
                    TM, TS, TU, TJ;
                SIMD_FLOAT T1s, T1k, TK;
                Ci[WS(cs, 6)] = KP866025403 * (T1t - T1u);
                T1w           = T1t + T1u;
                T1h           = SIMD_FMADD(KP152703644, T11, T14);
                T1o           = SIMD_FNMADD(KP315207469, T11, T14);
                T15           = SIMD_FNMADD(KP203604859, T14, T11);
                T1d           = SIMD_FNMADD(KP439692620, T1a, T14);
                Ci[WS(cs, 3)] = KP866025403 * (Tt - Tk);
                Tu            = Tk + Tt;
                TF            = SIMD_FMADD(KP420276625, Tv, Tw);
                TO            = SIMD_FNMADD(KP203604859, Tv, Tw);
                Tx            = SIMD_FMADD(KP152703644, Tw, Tv);
                TG            = SIMD_FNMADD(KP315207469, Tw, Tv);
                Cr[0]         = T1v + T1w;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1w, T1v);
                T1m           = SIMD_FMADD(KP673648177, T1i, T1h);
                T1q           = SIMD_FNMADD(KP907603734, T1p, T1o);
                T1r           = SIMD_FMADD(KP907603734, T1p, T1o);
                T1e           = SIMD_FMADD(KP420276625, T1d, T11);
                T1c           = SIMD_FNMADD(KP898197570, T1b, T15);
                T1l           = SIMD_FMADD(KP898197570, T1b, T15);
                Cr[WS(cs, 9)] = Tb + Tu;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tu, Tb);
                TM            = SIMD_FMADD(KP826351822, TF, TE);
                TQ            = SIMD_FNMADD(KP898197570, TP, TO);
                TT            = SIMD_FMADD(KP898197570, TP, TO);
                TB            = SIMD_FNMADD(KP673648177, TA, Tx);
                TR            = SIMD_FMADD(KP673648177, TA, Tx);
                TI            = SIMD_FMADD(KP907603734, TH, TG);
                TL            = SIMD_FMADD(KP939692620, TG, TC);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1q, TZ);
                T1f           = SIMD_FMADD(KP826351822, T1e, T19);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T1c, TZ);
                T1j           = SIMD_FNMADD(KP742227198, T1c, T1i);
                T1n           = SIMD_FNMADD(KP666666666, T1m, T1l);
                TN            = SIMD_FMADD(KP666666666, TM, TH);
                Cr[WS(cs, 1)] = SIMD_FNMADD(KP852868531, TQ, TD);
                TS            = SIMD_FNMADD(KP500000000, TQ, TR);
                TU            = SIMD_FMADD(KP666666666, TB, TT);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, TC, TB)));
                TJ  = SIMD_FMADD(KP666666666, TI, TF);
                T1s = SIMD_FMADD(KP605069156, T1f, T1r);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, T1g, T1f)));
                T1k = SIMD_FNMADD(KP673648177, T1j, T1h);
                Ci[WS(cs, 4)] =
                    KP866025403 * (SIMD_FNMADD(KP852868531, T1n, T1g));
                Ci[WS(cs, 5)] =
                    -(KP866025403 * (SIMD_FNMADD(KP852868531, TN, TL)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TS, TD);
                Ci[WS(cs, 7)] = KP866025403 * (SIMD_FMADD(KP852868531, TU, TC));
                TK            = SIMD_FNMADD(KP826351822, TJ, TE);
                Ci[WS(cs, 8)] =
                    -(KP866025403 * (SIMD_FNMADD(KP939692620, T1s, T1g)));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T1k, TZ);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TK, TD);
            }
        }
    }
}

template <>
struct r2cf_traits<18, 17>
{
    static constexpr long_t flops           = 164;
    static constexpr long_t operations      = 106;
    static constexpr long_t memory_accesses = 35;
    static constexpr long_t stack_vars      = 117;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 17 -name r2cf
 * -standalone */

/*
 * This function contains 98 FP additions, 66 FP multiplications,
 * (or, 40 additions, 8 multiplications, 58 fused multiply/add),
 * 117 stack variables, 20 constants, and 35 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 17>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tf, TX, T3, T19, Te, T15, Tn, To, Ti, T1a, Tp, Tr, Ts, T10,
            T1j;
        SIMD_FLOAT Ta, TE, T1, T2, T4, T5, T7, T8, Tc, Td, Tl, Tm, Tg, Th, TY;
        SIMD_FLOAT T6, TZ, T9;
        T1  = R0[0];
        T2  = R0[WS(rs, 9)];
        T4  = R0[WS(rs, 6)];
        T5  = R0[WS(rs, 15)];
        T7  = R0[WS(rs, 12)];
        T8  = R0[WS(rs, 3)];
        Tc  = R0[WS(rs, 2)];
        Td  = R0[WS(rs, 11)];
        Tl  = R0[WS(rs, 4)];
        Tm  = R0[WS(rs, 13)];
        Tf  = R0[WS(rs, 8)];
        Tg  = R0[WS(rs, 14)];
        Th  = R0[WS(rs, 5)];
        TX  = T1 + T2;
        T3  = T1 - T2;
        TY  = T4 + T5;
        T6  = T4 - T5;
        TZ  = T7 + T8;
        T9  = T7 - T8;
        T19 = Tc + Td;
        Te  = Tc - Td;
        T15 = Tl + Tm;
        Tn  = Tl - Tm;
        To  = R0[WS(rs, 10)];
        Ti  = Tg - Th;
        T1a = Tg + Th;
        Tp  = R0[WS(rs, 1)];
        Tr  = R0[WS(rs, 16)];
        Ts  = R0[WS(rs, 7)];
        T10 = TY + TZ;
        T1j = TZ - TY;
        Ta  = T6 + T9;
        TE  = T9 - T6;
        {
            SIMD_FLOAT T1d, T1b, TA, Tj, T12, Tq, T13, Tt, T11, T1y, TF, Tb,
                T1w, T1c, Tk;
            SIMD_FLOAT TB, T14, T16, Ty, Tu, T1l, T1s, T1e, TJ, TC, TR, TG, T17,
                T1x, Tx;
            SIMD_FLOAT Tv;
            T1d = Tf - T1a;
            T1b = Tf + T1a;
            TA  = Ti - Tf;
            Tj  = Tf + Ti;
            T12 = To + Tp;
            Tq  = To - Tp;
            T13 = Tr + Ts;
            Tt  = Tr - Ts;
            T11 = SIMD_FNMADD(KP500000000, T10, TX);
            T1y = TX + T10;
            TF  = SIMD_FNMADD(KP500000000, Ta, T3);
            Tb  = T3 + Ta;
            T1w = T19 + T1b;
            T1c = SIMD_FNMADD(KP500000000, T1b, T19);
            Tk  = Te + Tj;
            TB  = SIMD_FNMADD(KP500000000, Tj, Te);
            T14 = T12 - T13;
            T16 = T12 + T13;
            Ty  = Tt - Tq;
            Tu  = Tq + Tt;
            T1l = SIMD_FMADD(KP968908795, T1c, T1d);
            T1s = SIMD_FMADD(KP203604859, T1c, T1d);
            T1e = SIMD_FNMADD(KP726681596, T1d, T1c);
            TJ  = SIMD_FNMADD(KP203604859, TB, TA);
            TC  = SIMD_FNMADD(KP968908795, TB, TA);
            TR  = SIMD_FMADD(KP726681596, TA, TB);
            TG  = SIMD_FMADD(KP152703644, TA, TB);
            T17 = SIMD_FNMADD(KP500000000, T16, T15);
            T1x = T15 + T16;
            Tx  = SIMD_FNMADD(KP500000000, Tu, Tn);
            Tv  = Tn + Tu;
            {
                SIMD_FLOAT T1z, T18, T1r, T1k, T1g, Tw, TI, Tz, TQ, TH, T1u, TV,
                    TS, TU, TD;
                SIMD_FLOAT TK, TN, T1i, T1m, T1q, TP, T1p, T1t, T1h, T1o, T1f,
                    TO, TW, TT, TL;
                SIMD_FLOAT T1v, T1n, TM;
                Ci[WS(cs, 6)] = KP866025403 * (T1w - T1x);
                T1z           = T1w + T1x;
                T18           = SIMD_FNMADD(KP203604859, T17, T14);
                T1r           = SIMD_FNMADD(KP315207469, T14, T17);
                T1k           = SIMD_FMADD(KP152703644, T14, T17);
                T1g           = SIMD_FNMADD(KP439692620, T1d, T17);
                Ci[WS(cs, 3)] = KP866025403 * (Tv - Tk);
                Tw            = Tk + Tv;
                TI            = SIMD_FMADD(KP315207469, Ty, Tx);
                Tz            = SIMD_FNMADD(KP152703644, Ty, Tx);
                TQ            = SIMD_FMADD(KP203604859, Tx, Ty);
                TH            = SIMD_FNMADD(KP420276625, Tx, Ty);
                Cr[0]         = T1y + T1z;
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1z, T1y);
                T1p           = SIMD_FMADD(KP673648177, T1l, T1k);
                T1u           = SIMD_FMADD(KP907603734, T1s, T1r);
                T1t           = SIMD_FNMADD(KP907603734, T1s, T1r);
                T1h           = SIMD_FMADD(KP420276625, T1g, T14);
                T1o           = SIMD_FMADD(KP898197570, T1e, T18);
                T1f           = SIMD_FNMADD(KP898197570, T1e, T18);
                Cr[WS(cs, 9)] = Tb + Tw;
                Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Tw, Tb);
                TO            = SIMD_FNMADD(KP826351822, TH, TG);
                TV            = SIMD_FMADD(KP898197570, TR, TQ);
                TS            = SIMD_FNMADD(KP898197570, TR, TQ);
                TU            = SIMD_FMADD(KP673648177, TC, Tz);
                TD            = SIMD_FNMADD(KP673648177, TC, Tz);
                TK            = SIMD_FMADD(KP907603734, TJ, TI);
                TN            = SIMD_FMADD(KP939692620, TI, TE);
                Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1t, T11);
                T1i           = SIMD_FMADD(KP826351822, T1h, T1c);
                Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T1f, T11);
                T1m           = SIMD_FNMADD(KP742227198, T1f, T1l);
                T1q           = SIMD_FNMADD(KP666666666, T1p, T1o);
                TP            = SIMD_FMADD(KP666666666, TO, TJ);
                Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TV, TF);
                TW            = SIMD_FMADD(KP500000000, TV, TU);
                TT            = SIMD_FNMADD(KP666666666, TD, TS);
                Ci[WS(cs, 1)] =
                    -(KP984807753 * (SIMD_FNMADD(KP879385241, TE, TD)));
                TL  = SIMD_FNMADD(KP666666666, TK, TH);
                T1v = SIMD_FMADD(KP605069156, T1i, T1u);
                Ci[WS(cs, 2)] =
                    -(KP984807753 * (SIMD_FMADD(KP879385241, T1j, T1i)));
                T1n = SIMD_FNMADD(KP673648177, T1m, T1k);
                Ci[WS(cs, 4)] =
                    KP866025403 * (SIMD_FNMADD(KP852868531, T1q, T1j));
                Ci[WS(cs, 5)] =
                    -(KP866025403 * (SIMD_FNMADD(KP852868531, TP, TN)));
                Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TW, TF);
                Ci[WS(cs, 7)] =
                    KP866025403 * (SIMD_FNMADD(KP852868531, TT, TE));
                TM = SIMD_FMADD(KP826351822, TL, TG);
                Ci[WS(cs, 8)] =
                    -(KP866025403 * (SIMD_FNMADD(KP939692620, T1v, T1j)));
                Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T1n, T11);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TM, TF);
            }
        }
    }
}

template <>
struct r2cf_traits<18, 18>
{
    static constexpr long_t flops           = 166;
    static constexpr long_t operations      = 108;
    static constexpr long_t memory_accesses = 36;
    static constexpr long_t stack_vars      = 120;
    static constexpr long_t constants       = 20;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 18 -first-k 18 -name r2cf
 * -standalone */

/*
 * This function contains 100 FP additions, 66 FP multiplications,
 * (or, 42 additions, 8 multiplications, 58 fused multiply/add),
 * 120 stack variables, 20 constants, and 36 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 18 && ProvidedElements == 18>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP605069156, +0.605069156365301542432882650809265414709695480);
    DK(KP879385241, +0.879385241571816768108218554649462939872416269);
    DK(KP984807753, +0.984807753012208059366743024589523013670643252);
    DK(KP666666666, +0.666666666666666666666666666666666666666666667);
    DK(KP742227198, +0.742227198968559155270550602729364177291055874);
    DK(KP852868531, +0.852868531952443209628250963940074071936020296);
    DK(KP939692620, +0.939692620785908384054109277324731469936208134);
    DK(KP826351822, +0.826351822333069651148283373230685203999624323);
    DK(KP898197570, +0.898197570222573798468955502359086394667167570);
    DK(KP907603734, +0.907603734547952313649323976213898122064543220);
    DK(KP673648177, +0.673648177666930348851716626769314796000375677);
    DK(KP420276625, +0.420276625461206169731530603237061658838781920);
    DK(KP439692620, +0.439692620785908384054109277324731469936208134);
    DK(KP315207469, +0.315207469095904627298647952427796244129086440);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP152703644, +0.152703644666139302296566746461370407999248646);
    DK(KP968908795, +0.968908795874236621082202410917456709164223497);
    DK(KP203604859, +0.203604859554852403062088995281827210665664861);
    DK(KP726681596, +0.726681596905677465811651808188092531873167623);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Ti, TZ, T3, T1b, Te, T17, Tp, T1c, Th, Tj, Tq, Tr, Tt, T12,
            T1m;
        SIMD_FLOAT Ta, TG, Tu, T1, T2, T4, T5, T7, T8, Tc, Td, Tn, To, T10, T6;
        SIMD_FLOAT T11, T9, Tf, Tg, Tk, T1d, Ts, T14, T1B, T13, Tb, TH, Tv, T15,
            T1e;
        SIMD_FLOAT T1g, Tl, TC, T18, T16, Tw, TA, T1f, T1z, TD, Tm, T19, T1A,
            Tz, Tx;
        T1  = R0[0];
        T2  = R0[WS(rs, 9)];
        T4  = R0[WS(rs, 6)];
        T5  = R0[WS(rs, 15)];
        T7  = R0[WS(rs, 12)];
        T8  = R0[WS(rs, 3)];
        Tc  = R0[WS(rs, 2)];
        Td  = R0[WS(rs, 11)];
        Tn  = R0[WS(rs, 4)];
        To  = R0[WS(rs, 13)];
        Tf  = R0[WS(rs, 8)];
        Tg  = R0[WS(rs, 17)];
        Ti  = R0[WS(rs, 14)];
        TZ  = T1 + T2;
        T3  = T1 - T2;
        T10 = T4 + T5;
        T6  = T4 - T5;
        T11 = T7 + T8;
        T9  = T7 - T8;
        T1b = Tc + Td;
        Te  = Tc - Td;
        T17 = Tn + To;
        Tp  = Tn - To;
        T1c = Tf + Tg;
        Th  = Tf - Tg;
        Tj  = R0[WS(rs, 5)];
        Tq  = R0[WS(rs, 10)];
        Tr  = R0[WS(rs, 1)];
        Tt  = R0[WS(rs, 16)];
        T12 = T10 + T11;
        T1m = T11 - T10;
        Ta  = T6 + T9;
        TG  = T9 - T6;
        Tu  = R0[WS(rs, 7)];
        Tk  = Ti - Tj;
        T1d = Ti + Tj;
        Ts  = Tq - Tr;
        T14 = Tq + Tr;
        T1B = TZ + T12;
        T13 = SIMD_FNMADD(KP500000000, T12, TZ);
        Tb  = T3 + Ta;
        TH  = SIMD_FNMADD(KP500000000, Ta, T3);
        Tv  = Tt - Tu;
        T15 = Tt + Tu;
        T1e = T1c + T1d;
        T1g = T1c - T1d;
        Tl  = Th + Tk;
        TC  = Tk - Th;
        T18 = T14 + T15;
        T16 = T14 - T15;
        Tw  = Ts + Tv;
        TA  = Tv - Ts;
        T1f = SIMD_FNMADD(KP500000000, T1e, T1b);
        T1z = T1b + T1e;
        TD  = SIMD_FNMADD(KP500000000, Tl, Te);
        Tm  = Te + Tl;
        T19 = SIMD_FNMADD(KP500000000, T18, T17);
        T1A = T17 + T18;
        Tz  = SIMD_FNMADD(KP500000000, Tw, Tp);
        Tx  = Tp + Tw;
        {
            SIMD_FLOAT T1h, T1v, T1o, TI, TT, TE, TL, T1C, T1n, T1u, T1a, T1j,
                Ty, TJ, TS;
            SIMD_FLOAT TB, TK, T1x, TU, TX, TF, TW, TM, TP, T1l, T1p, T1t, TR,
                T1s, T1w;
            SIMD_FLOAT T1k, T1i, T1r, TQ, TY, TV, TN, T1y, T1q, TO;
            T1h           = SIMD_FNMADD(KP726681596, T1g, T1f);
            T1v           = SIMD_FMADD(KP203604859, T1f, T1g);
            T1o           = SIMD_FMADD(KP968908795, T1f, T1g);
            TI            = SIMD_FMADD(KP152703644, TC, TD);
            TT            = SIMD_FMADD(KP726681596, TC, TD);
            TE            = SIMD_FNMADD(KP968908795, TD, TC);
            TL            = SIMD_FNMADD(KP203604859, TD, TC);
            Ci[WS(cs, 6)] = KP866025403 * (T1z - T1A);
            T1C           = T1z + T1A;
            T1n           = SIMD_FMADD(KP152703644, T16, T19);
            T1u           = SIMD_FNMADD(KP315207469, T16, T19);
            T1a           = SIMD_FNMADD(KP203604859, T19, T16);
            T1j           = SIMD_FNMADD(KP439692620, T1g, T19);
            Ci[WS(cs, 3)] = KP866025403 * (Tx - Tm);
            Ty            = Tm + Tx;
            TJ            = SIMD_FNMADD(KP420276625, Tz, TA);
            TS            = SIMD_FMADD(KP203604859, Tz, TA);
            TB            = SIMD_FNMADD(KP152703644, TA, Tz);
            TK            = SIMD_FMADD(KP315207469, TA, Tz);
            Cr[0]         = T1B + T1C;
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP500000000, T1C, T1B);
            T1s           = SIMD_FMADD(KP673648177, T1o, T1n);
            T1w           = SIMD_FNMADD(KP907603734, T1v, T1u);
            T1x           = SIMD_FMADD(KP907603734, T1v, T1u);
            T1k           = SIMD_FMADD(KP420276625, T1j, T16);
            T1i           = SIMD_FNMADD(KP898197570, T1h, T1a);
            T1r           = SIMD_FMADD(KP898197570, T1h, T1a);
            Cr[WS(cs, 9)] = Tb + Ty;
            Cr[WS(cs, 3)] = SIMD_FNMADD(KP500000000, Ty, Tb);
            TQ            = SIMD_FNMADD(KP826351822, TJ, TI);
            TU            = SIMD_FNMADD(KP898197570, TT, TS);
            TX            = SIMD_FMADD(KP898197570, TT, TS);
            TF            = SIMD_FNMADD(KP673648177, TE, TB);
            TW            = SIMD_FMADD(KP673648177, TE, TB);
            TM            = SIMD_FMADD(KP907603734, TL, TK);
            TP            = SIMD_FMADD(KP939692620, TK, TG);
            Cr[WS(cs, 2)] = SIMD_FNMADD(KP939692620, T1w, T13);
            T1l           = SIMD_FMADD(KP826351822, T1k, T1f);
            Cr[WS(cs, 8)] = SIMD_FNMADD(KP852868531, T1i, T13);
            T1p           = SIMD_FNMADD(KP742227198, T1i, T1o);
            T1t           = SIMD_FNMADD(KP666666666, T1s, T1r);
            TR            = SIMD_FMADD(KP666666666, TQ, TL);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP852868531, TX, TH);
            TY            = SIMD_FMADD(KP500000000, TX, TW);
            TV            = SIMD_FNMADD(KP666666666, TF, TU);
            Ci[WS(cs, 1)] = -(KP984807753 * (SIMD_FNMADD(KP879385241, TG, TF)));
            TN            = SIMD_FNMADD(KP666666666, TM, TJ);
            T1y           = SIMD_FMADD(KP605069156, T1l, T1x);
            Ci[WS(cs, 2)] =
                -(KP984807753 * (SIMD_FMADD(KP879385241, T1m, T1l)));
            T1q           = SIMD_FNMADD(KP673648177, T1p, T1n);
            Ci[WS(cs, 4)] = KP866025403 * (SIMD_FNMADD(KP852868531, T1t, T1m));
            Ci[WS(cs, 5)] = -(KP866025403 * (SIMD_FNMADD(KP852868531, TR, TP)));
            Cr[WS(cs, 7)] = SIMD_FNMADD(KP852868531, TY, TH);
            Ci[WS(cs, 7)] = KP866025403 * (SIMD_FNMADD(KP852868531, TV, TG));
            TO            = SIMD_FMADD(KP826351822, TN, TI);
            Ci[WS(cs, 8)] =
                -(KP866025403 * (SIMD_FNMADD(KP939692620, T1y, T1m)));
            Cr[WS(cs, 4)] = SIMD_FMADD(KP852868531, T1q, T13);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP852868531, TO, TH);
        }
    }
}
