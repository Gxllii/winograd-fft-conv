//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct c2cf_traits<24, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 50;
    static constexpr long_t stack_vars      = 2;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 1 -name c2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 2 stack variables, 0 constants, and 50 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 1>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    {
        SIMD_FLOAT T1, T2;
        T1             = ri[0];
        T2             = ii[0];
        ro[WS(os, 8)]  = T1;
        ro[WS(os, 14)] = T1;
        ro[WS(os, 15)] = T1;
        ro[WS(os, 9)]  = T1;
        ro[WS(os, 10)] = T1;
        ro[WS(os, 16)] = T1;
        ro[WS(os, 17)] = T1;
        ro[WS(os, 11)] = T1;
        ro[WS(os, 7)]  = T1;
        ro[WS(os, 13)] = T1;
        ro[WS(os, 12)] = T1;
        ro[WS(os, 6)]  = T1;
        ro[WS(os, 2)]  = T1;
        ro[WS(os, 20)] = T1;
        ro[WS(os, 21)] = T1;
        ro[WS(os, 3)]  = T1;
        ro[WS(os, 4)]  = T1;
        ro[WS(os, 22)] = T1;
        ro[WS(os, 23)] = T1;
        ro[WS(os, 5)]  = T1;
        ro[WS(os, 1)]  = T1;
        ro[WS(os, 19)] = T1;
        ro[WS(os, 18)] = T1;
        ro[0]          = T1;
        io[WS(os, 8)]  = T2;
        io[WS(os, 14)] = T2;
        io[WS(os, 15)] = T2;
        io[WS(os, 9)]  = T2;
        io[WS(os, 10)] = T2;
        io[WS(os, 16)] = T2;
        io[WS(os, 17)] = T2;
        io[WS(os, 11)] = T2;
        io[WS(os, 7)]  = T2;
        io[WS(os, 13)] = T2;
        io[WS(os, 12)] = T2;
        io[WS(os, 6)]  = T2;
        io[WS(os, 2)]  = T2;
        io[WS(os, 20)] = T2;
        io[WS(os, 21)] = T2;
        io[WS(os, 3)]  = T2;
        io[WS(os, 4)]  = T2;
        io[WS(os, 22)] = T2;
        io[WS(os, 23)] = T2;
        io[WS(os, 5)]  = T2;
        io[WS(os, 1)]  = T2;
        io[WS(os, 19)] = T2;
        io[WS(os, 18)] = T2;
        io[0]          = T2;
    }
}

template <>
struct c2cf_traits<24, 2>
{
    static constexpr long_t flops           = 106;
    static constexpr long_t operations      = 58;
    static constexpr long_t memory_accesses = 52;
    static constexpr long_t stack_vars      = 19;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 2 -name c2cf
 * -standalone */

/*
 * This function contains 58 FP additions, 48 FP multiplications,
 * (or, 10 additions, 0 multiplications, 48 fused multiply/add),
 * 19 stack variables, 5 constants, and 52 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 2>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP965925826, +0.965925826289068286749743199728897367633904839);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP267949192, +0.267949192431122706472553658494127633057194746);
    {
        SIMD_FLOAT T1, T3, T2, T4, T5, T7, Te, T6, Td, Tc, Ta, T8, Tb, T9;
        T1             = ri[0];
        T3             = ii[0];
        T2             = ri[WS(is, 1)];
        T4             = ii[WS(is, 1)];
        io[WS(os, 18)] = T2 + T3;
        io[WS(os, 6)]  = T3 - T2;
        ro[0]          = T1 + T2;
        ro[WS(os, 12)] = T1 - T2;
        ro[WS(os, 18)] = T1 - T4;
        ro[WS(os, 6)]  = T1 + T4;
        io[0]          = T3 + T4;
        io[WS(os, 12)] = T3 - T4;
        T5             = SIMD_FMADD(KP267949192, T4, T2);
        T7             = SIMD_FNMADD(KP577350269, T4, T2);
        Te             = SIMD_FMADD(KP267949192, T2, T4);
        T6             = SIMD_FMSUB(KP267949192, T4, T2);
        Td             = SIMD_FNMADD(KP267949192, T2, T4);
        Tc             = SIMD_FMADD(KP577350269, T2, T4);
        Ta             = T4 - T2;
        T8             = SIMD_FMADD(KP577350269, T4, T2);
        Tb             = SIMD_FNMADD(KP577350269, T2, T4);
        T9             = T2 + T4;
        io[WS(os, 21)] = SIMD_FMADD(KP707106781, T9, T3);
        ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T9, T1);
        ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T9, T1);
        io[WS(os, 9)]  = SIMD_FNMADD(KP707106781, T9, T3);
        ro[WS(os, 20)] = SIMD_FNMADD(KP866025403, Tb, T1);
        io[WS(os, 2)]  = SIMD_FMADD(KP866025403, Tb, T3);
        io[WS(os, 14)] = SIMD_FNMADD(KP866025403, Tb, T3);
        ro[WS(os, 8)]  = SIMD_FMADD(KP866025403, Tb, T1);
        io[WS(os, 20)] = SIMD_FMADD(KP866025403, T8, T3);
        ro[WS(os, 2)]  = SIMD_FMADD(KP866025403, T8, T1);
        ro[WS(os, 14)] = SIMD_FNMADD(KP866025403, T8, T1);
        io[WS(os, 8)]  = SIMD_FNMADD(KP866025403, T8, T3);
        ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, Ta, T1);
        io[WS(os, 3)]  = SIMD_FMADD(KP707106781, Ta, T3);
        io[WS(os, 15)] = SIMD_FNMADD(KP707106781, Ta, T3);
        ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, Ta, T1);
        io[WS(os, 22)] = SIMD_FMADD(KP866025403, Tc, T3);
        ro[WS(os, 16)] = SIMD_FNMADD(KP866025403, Tc, T1);
        io[WS(os, 10)] = SIMD_FNMADD(KP866025403, Tc, T3);
        ro[WS(os, 4)]  = SIMD_FMADD(KP866025403, Tc, T1);
        ro[WS(os, 19)] = SIMD_FNMADD(KP965925826, Td, T1);
        io[WS(os, 1)]  = SIMD_FMADD(KP965925826, Td, T3);
        io[WS(os, 13)] = SIMD_FNMADD(KP965925826, Td, T3);
        ro[WS(os, 7)]  = SIMD_FMADD(KP965925826, Td, T1);
        ro[WS(os, 11)] = SIMD_FMADD(KP965925826, T6, T1);
        io[WS(os, 5)]  = SIMD_FMADD(KP965925826, T6, T3);
        ro[WS(os, 23)] = SIMD_FNMADD(KP965925826, T6, T1);
        io[WS(os, 17)] = SIMD_FNMADD(KP965925826, T6, T3);
        io[WS(os, 11)] = SIMD_FNMADD(KP965925826, Te, T3);
        ro[WS(os, 5)]  = SIMD_FMADD(KP965925826, Te, T1);
        io[WS(os, 23)] = SIMD_FMADD(KP965925826, Te, T3);
        ro[WS(os, 17)] = SIMD_FNMADD(KP965925826, Te, T1);
        ro[WS(os, 22)] = SIMD_FMADD(KP866025403, T7, T1);
        io[WS(os, 16)] = SIMD_FMADD(KP866025403, T7, T3);
        ro[WS(os, 10)] = SIMD_FNMADD(KP866025403, T7, T1);
        io[WS(os, 4)]  = SIMD_FNMADD(KP866025403, T7, T3);
        io[WS(os, 19)] = SIMD_FMADD(KP965925826, T5, T3);
        ro[WS(os, 1)]  = SIMD_FMADD(KP965925826, T5, T1);
        ro[WS(os, 13)] = SIMD_FNMADD(KP965925826, T5, T1);
        io[WS(os, 7)]  = SIMD_FNMADD(KP965925826, T5, T3);
    }
}

template <>
struct c2cf_traits<24, 3>
{
    static constexpr long_t flops           = 154;
    static constexpr long_t operations      = 86;
    static constexpr long_t memory_accesses = 54;
    static constexpr long_t stack_vars      = 49;
    static constexpr long_t constants       = 5;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 3 -name c2cf
 * -standalone */

/*
 * This function contains 86 FP additions, 68 FP multiplications,
 * (or, 18 additions, 0 multiplications, 68 fused multiply/add),
 * 49 stack variables, 5 constants, and 54 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 3>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP965925826, +0.965925826289068286749743199728897367633904839);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP267949192, +0.267949192431122706472553658494127633057194746);
    {
        SIMD_FLOAT T4, T9, T1, T5, T2, T6;
        T4 = ri[WS(is, 1)];
        T9 = ii[WS(is, 1)];
        T1 = ri[0];
        T5 = ii[0];
        T2 = ri[WS(is, 2)];
        T6 = ii[WS(is, 2)];
        {
            SIMD_FLOAT Td, Tm, TH, Ti, TE, TB, Tv, Tp, Ty, Ts, Tu, Tr, Ta, T3,
                Tg;
            SIMD_FLOAT Te, Tj, Tb, T8, T7, Tw, Tt, TC, Tn, Tc, TD, To, Tx, TI,
                Tk;
            SIMD_FLOAT Tl, TA, TF, Tf, Tz, Tq, Th, TG;
            Td             = SIMD_FMADD(KP267949192, T9, T4);
            Tm             = SIMD_FNMADD(KP577350269, T9, T4);
            TH             = SIMD_FMADD(KP267949192, T4, T9);
            Ti             = SIMD_FMSUB(KP267949192, T9, T4);
            TE             = SIMD_FNMADD(KP267949192, T4, T9);
            TB             = SIMD_FMADD(KP577350269, T4, T9);
            Tv             = T9 - T4;
            Tp             = SIMD_FMADD(KP577350269, T9, T4);
            Ty             = SIMD_FNMADD(KP577350269, T4, T9);
            Ts             = T4 + T9;
            Tu             = T5 - T2;
            Tr             = T2 + T5;
            Ta             = T1 - T2;
            T3             = T1 + T2;
            Tg             = SIMD_FMADD(KP577350269, T2, T6);
            Te             = SIMD_FMADD(KP577350269, T6, T2);
            Tj             = SIMD_FNMADD(KP577350269, T6, T2);
            Tb             = SIMD_FNMADD(KP577350269, T2, T6);
            T8             = T5 + T6;
            T7             = T5 - T6;
            Tw             = T1 - T6;
            Tt             = T1 + T6;
            io[WS(os, 21)] = SIMD_FMADD(KP707106781, Ts, Tr);
            io[WS(os, 9)]  = SIMD_FNMADD(KP707106781, Ts, Tr);
            ro[WS(os, 18)] = Ta - T9;
            ro[WS(os, 6)]  = Ta + T9;
            io[WS(os, 3)]  = SIMD_FMADD(KP707106781, Tv, Tu);
            io[WS(os, 15)] = SIMD_FNMADD(KP707106781, Tv, Tu);
            ro[0]          = T3 + T4;
            ro[WS(os, 12)] = T3 - T4;
            TC             = SIMD_FMADD(KP866025403, Tb, T1);
            Tn             = SIMD_FNMADD(KP866025403, Tb, T1);
            Tc             = SIMD_FNMADD(KP866025403, Tb, T5);
            TD             = SIMD_FMADD(KP866025403, Tb, T5);
            To             = SIMD_FMADD(KP866025403, Tj, T5);
            Tx             = SIMD_FNMADD(KP866025403, Tj, T5);
            TI             = SIMD_FNMADD(KP866025403, Tj, T1);
            Tk             = SIMD_FMADD(KP866025403, Tj, T1);
            Tl             = SIMD_FNMADD(KP866025403, Te, T5);
            TA             = SIMD_FMADD(KP866025403, Te, T5);
            TF             = SIMD_FNMADD(KP866025403, Te, T1);
            Tf             = SIMD_FMADD(KP866025403, Te, T1);
            Tz             = SIMD_FNMADD(KP866025403, Tg, T1);
            Tq             = SIMD_FMADD(KP866025403, Tg, T1);
            Th             = SIMD_FNMADD(KP866025403, Tg, T5);
            TG             = SIMD_FMADD(KP866025403, Tg, T5);
            io[WS(os, 18)] = T4 + T7;
            io[WS(os, 6)]  = T7 - T4;
            io[0]          = T8 + T9;
            io[WS(os, 12)] = T8 - T9;
            ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, Ts, Tt);
            ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, Ts, Tt);
            ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, Tv, Tw);
            ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, Tv, Tw);
            ro[WS(os, 22)] = SIMD_FMADD(KP866025403, Tm, Tn);
            ro[WS(os, 10)] = SIMD_FNMADD(KP866025403, Tm, Tn);
            ro[WS(os, 4)]  = SIMD_FMADD(KP866025403, TB, TC);
            ro[WS(os, 16)] = SIMD_FNMADD(KP866025403, TB, TC);
            io[WS(os, 1)]  = SIMD_FMADD(KP965925826, TE, TD);
            io[WS(os, 13)] = SIMD_FNMADD(KP965925826, TE, TD);
            io[WS(os, 19)] = SIMD_FMADD(KP965925826, Td, Tc);
            io[WS(os, 7)]  = SIMD_FNMADD(KP965925826, Td, Tc);
            io[WS(os, 2)]  = SIMD_FMADD(KP866025403, Ty, Tx);
            io[WS(os, 14)] = SIMD_FNMADD(KP866025403, Ty, Tx);
            io[WS(os, 20)] = SIMD_FMADD(KP866025403, Tp, To);
            io[WS(os, 8)]  = SIMD_FNMADD(KP866025403, Tp, To);
            ro[WS(os, 11)] = SIMD_FMADD(KP965925826, Ti, Tk);
            ro[WS(os, 23)] = SIMD_FNMADD(KP965925826, Ti, Tk);
            ro[WS(os, 5)]  = SIMD_FMADD(KP965925826, TH, TI);
            ro[WS(os, 17)] = SIMD_FNMADD(KP965925826, TH, TI);
            io[WS(os, 22)] = SIMD_FMADD(KP866025403, TB, TA);
            io[WS(os, 10)] = SIMD_FNMADD(KP866025403, TB, TA);
            io[WS(os, 16)] = SIMD_FMADD(KP866025403, Tm, Tl);
            io[WS(os, 4)]  = SIMD_FNMADD(KP866025403, Tm, Tl);
            ro[WS(os, 1)]  = SIMD_FMADD(KP965925826, Td, Tf);
            ro[WS(os, 13)] = SIMD_FNMADD(KP965925826, Td, Tf);
            ro[WS(os, 7)]  = SIMD_FMADD(KP965925826, TE, TF);
            ro[WS(os, 19)] = SIMD_FNMADD(KP965925826, TE, TF);
            ro[WS(os, 2)]  = SIMD_FMADD(KP866025403, Tp, Tq);
            ro[WS(os, 14)] = SIMD_FNMADD(KP866025403, Tp, Tq);
            ro[WS(os, 8)]  = SIMD_FMADD(KP866025403, Ty, Tz);
            ro[WS(os, 20)] = SIMD_FNMADD(KP866025403, Ty, Tz);
            io[WS(os, 23)] = SIMD_FMADD(KP965925826, TH, TG);
            io[WS(os, 11)] = SIMD_FNMADD(KP965925826, TH, TG);
            io[WS(os, 5)]  = SIMD_FMADD(KP965925826, Ti, Th);
            io[WS(os, 17)] = SIMD_FNMADD(KP965925826, Ti, Th);
        }
    }
}

template <>
struct c2cf_traits<24, 4>
{
    static constexpr long_t flops           = 180;
    static constexpr long_t operations      = 112;
    static constexpr long_t memory_accesses = 56;
    static constexpr long_t stack_vars      = 78;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 4 -name c2cf
 * -standalone */

/*
 * This function contains 112 FP additions, 68 FP multiplications,
 * (or, 44 additions, 0 multiplications, 68 fused multiply/add),
 * 78 stack variables, 6 constants, and 56 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 4>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP965925826, +0.965925826289068286749743199728897367633904839);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP732050807, +0.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP267949192, +0.267949192431122706472553658494127633057194746);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1, T8, T2, T9, T4, Tf, T5, Td, TI, TD, T3, T19;
        T1  = ri[0];
        T8  = ii[0];
        T2  = ri[WS(is, 2)];
        T9  = ii[WS(is, 2)];
        T4  = ri[WS(is, 3)];
        Tf  = ii[WS(is, 3)];
        T5  = ri[WS(is, 1)];
        Td  = ii[WS(is, 1)];
        TI  = T8 - T2;
        TD  = T2 + T8;
        T3  = T1 + T2;
        T19 = T1 - T2;
        {
            SIMD_FLOAT Tb, Ti, Tq, Tl, TG, TL, T17, Ta, Tg, To, T6, T7, TY, Te,
                T13;
            SIMD_FLOAT Tn, Tz, TE, TT, Tu, TJ, TO, T18, T1a, TB, TQ, Tm, T15,
                TN, Ty;
            Tb  = SIMD_FMADD(KP577350269, T9, T2);
            Ti  = SIMD_FNMADD(KP577350269, T2, T9);
            Tq  = SIMD_FNMADD(KP577350269, T9, T2);
            Tl  = SIMD_FMADD(KP577350269, T2, T9);
            TG  = T1 + T9;
            TL  = T1 - T9;
            T17 = T8 + T9;
            Ta  = T8 - T9;
            Tg  = T4 + Tf;
            To  = Tf - T4;
            T6  = T4 + T5;
            T7  = T4 - T5;
            TY  = SIMD_FNMADD(KP267949192, T5, Td);
            Te  = SIMD_FMADD(KP267949192, Td, T5);
            T13 = SIMD_FMADD(KP267949192, T5, Td);
            Tn  = SIMD_FMSUB(KP267949192, Td, T5);
            Tz  = SIMD_FMADD(KP577350269, Td, T5);
            TE  = T5 + Td;
            TT  = SIMD_FMADD(KP577350269, T5, Td);
            Tu  = SIMD_FNMADD(KP577350269, Td, T5);
            TJ  = Td - T5;
            TO  = SIMD_FNMADD(KP577350269, T5, Td);
            T18 = Tf + Td;
            T1a = Td - Tf;
            TB  = SIMD_FMADD(KP866025403, Tl, T1);
            TQ  = SIMD_FNMADD(KP866025403, Tl, T1);
            Tm  = SIMD_FNMADD(KP866025403, Tl, T8);
            T15 = SIMD_FMADD(KP866025403, Tl, T8);
            TN  = SIMD_FNMADD(KP866025403, Tq, T8);
            Ty  = SIMD_FMADD(KP866025403, Tq, T8);
            {
                SIMD_FLOAT T12, Tr, Tt, TS, TX, Tj, TV, Tw, Tc, T10, TP, TR, TK,
                    TM, Tv;
                SIMD_FLOAT Tx, TW, TU, TH, TF, TC, TA, Tp, Ts, T14, T16, Th, Tk,
                    TZ, T11;
                T12            = SIMD_FNMADD(KP866025403, Tq, T1);
                Tr             = SIMD_FMADD(KP866025403, Tq, T1);
                Tt             = SIMD_FNMADD(KP866025403, Ti, T1);
                TS             = SIMD_FMADD(KP866025403, Ti, T1);
                TX             = SIMD_FMADD(KP866025403, Ti, T8);
                Tj             = SIMD_FNMADD(KP866025403, Ti, T8);
                TV             = SIMD_FMADD(KP866025403, Tb, T8);
                Tw             = SIMD_FNMADD(KP866025403, Tb, T8);
                Tc             = SIMD_FMADD(KP866025403, Tb, T1);
                T10            = SIMD_FNMADD(KP866025403, Tb, T1);
                io[WS(os, 6)]  = T7 + Ta;
                io[WS(os, 18)] = Ta - T7;
                ro[0]          = T3 + T6;
                ro[WS(os, 12)] = T3 - T6;
                TP             = SIMD_FNMADD(KP866025403, TO, T4);
                TR             = SIMD_FMADD(KP866025403, TO, T4);
                TK             = TJ - Tg;
                TM             = Tg + TJ;
                Tv             = SIMD_FNMADD(KP866025403, Tu, Tf);
                Tx             = SIMD_FMADD(KP866025403, Tu, Tf);
                TW             = SIMD_FMADD(KP866025403, TT, T4);
                TU             = SIMD_FNMADD(KP866025403, TT, T4);
                TH             = To + TE;
                TF             = To - TE;
                TC             = SIMD_FMADD(KP866025403, Tz, Tf);
                TA             = SIMD_FNMADD(KP866025403, Tz, Tf);
                Tp             = SIMD_FNMADD(KP732050807, To, Tn);
                Ts             = SIMD_FMADD(KP732050807, To, Tn);
                io[0]          = T17 + T18;
                io[WS(os, 12)] = T17 - T18;
                T14            = SIMD_FNMADD(KP732050807, Tg, T13);
                T16            = SIMD_FMADD(KP732050807, Tg, T13);
                Th             = SIMD_FMADD(KP732050807, Tg, Te);
                Tk             = SIMD_FNMADD(KP732050807, Tg, Te);
                ro[WS(os, 18)] = T19 - T1a;
                ro[WS(os, 6)]  = T19 + T1a;
                TZ             = SIMD_FMADD(KP732050807, To, TY);
                T11            = SIMD_FNMADD(KP732050807, To, TY);
                ro[WS(os, 8)]  = TQ + TR;
                ro[WS(os, 20)] = TQ - TR;
                io[WS(os, 14)] = TN + TP;
                io[WS(os, 2)]  = TN - TP;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, TM, TL);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, TM, TL);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, TK, TI);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, TK, TI);
                io[WS(os, 16)] = Tw + Tx;
                io[WS(os, 4)]  = Tw - Tx;
                ro[WS(os, 10)] = Tt + Tv;
                ro[WS(os, 22)] = Tt - Tv;
                ro[WS(os, 16)] = TS + TU;
                ro[WS(os, 4)]  = TS - TU;
                io[WS(os, 22)] = TV + TW;
                io[WS(os, 10)] = TV - TW;
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, TF, TD);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, TF, TD);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, TH, TG);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, TH, TG);
                io[WS(os, 8)]  = Ty + TA;
                io[WS(os, 20)] = Ty - TA;
                ro[WS(os, 2)]  = TB + TC;
                ro[WS(os, 14)] = TB - TC;
                ro[WS(os, 11)] = SIMD_FMADD(KP965925826, Ts, Tr);
                ro[WS(os, 23)] = SIMD_FNMADD(KP965925826, Ts, Tr);
                io[WS(os, 5)]  = SIMD_FMADD(KP965925826, Tp, Tm);
                io[WS(os, 17)] = SIMD_FNMADD(KP965925826, Tp, Tm);
                io[WS(os, 23)] = SIMD_FMADD(KP965925826, T16, T15);
                io[WS(os, 11)] = SIMD_FNMADD(KP965925826, T16, T15);
                ro[WS(os, 5)]  = SIMD_FMADD(KP965925826, T14, T12);
                ro[WS(os, 17)] = SIMD_FNMADD(KP965925826, T14, T12);
                io[WS(os, 19)] = SIMD_FMADD(KP965925826, Tk, Tj);
                io[WS(os, 7)]  = SIMD_FNMADD(KP965925826, Tk, Tj);
                ro[WS(os, 1)]  = SIMD_FMADD(KP965925826, Th, Tc);
                ro[WS(os, 13)] = SIMD_FNMADD(KP965925826, Th, Tc);
                ro[WS(os, 7)]  = SIMD_FMADD(KP965925826, T11, T10);
                ro[WS(os, 19)] = SIMD_FNMADD(KP965925826, T11, T10);
                io[WS(os, 1)]  = SIMD_FMADD(KP965925826, TZ, TX);
                io[WS(os, 13)] = SIMD_FNMADD(KP965925826, TZ, TX);
            }
        }
    }
}

template <>
struct c2cf_traits<24, 5>
{
    static constexpr long_t flops           = 208;
    static constexpr long_t operations      = 128;
    static constexpr long_t memory_accesses = 58;
    static constexpr long_t stack_vars      = 96;
    static constexpr long_t constants       = 6;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 5 -name c2cf
 * -standalone */

/*
 * This function contains 128 FP additions, 80 FP multiplications,
 * (or, 48 additions, 0 multiplications, 80 fused multiply/add),
 * 96 stack variables, 6 constants, and 58 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 5>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP965925826, +0.965925826289068286749743199728897367633904839);
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP732050807, +0.732050807568877293527446341505872366942805254);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP267949192, +0.267949192431122706472553658494127633057194746);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T4, Td, T6, Tl, T7, Tj, T1, Ta, T2, Tb, Th, TC, Tq, Tv, Tm;
        SIMD_FLOAT Ty, T8, T9, T1g, Tk, T1l, Tx, TO, TV, T1b, TH, T11, T16, T1q,
            T1s;
        T4  = ri[WS(is, 2)];
        Td  = ii[WS(is, 2)];
        T6  = ri[WS(is, 3)];
        Tl  = ii[WS(is, 3)];
        T7  = ri[WS(is, 1)];
        Tj  = ii[WS(is, 1)];
        T1  = ri[0];
        Ta  = ii[0];
        T2  = ri[WS(is, 4)];
        Tb  = ii[WS(is, 4)];
        Th  = SIMD_FMADD(KP577350269, Td, T4);
        TC  = SIMD_FNMADD(KP577350269, Td, T4);
        Tq  = SIMD_FNMADD(KP577350269, T4, Td);
        Tv  = SIMD_FMADD(KP577350269, T4, Td);
        Tm  = T6 + Tl;
        Ty  = Tl - T6;
        T8  = T6 + T7;
        T9  = T6 - T7;
        T1g = SIMD_FNMADD(KP267949192, T7, Tj);
        Tk  = SIMD_FMADD(KP267949192, Tj, T7);
        T1l = SIMD_FMADD(KP267949192, T7, Tj);
        Tx  = SIMD_FMSUB(KP267949192, Tj, T7);
        TO  = SIMD_FMADD(KP577350269, Tj, T7);
        TV  = T7 + Tj;
        T1b = SIMD_FMADD(KP577350269, T7, Tj);
        TH  = SIMD_FNMADD(KP577350269, Tj, T7);
        T11 = Tj - T7;
        T16 = SIMD_FNMADD(KP577350269, T7, Tj);
        T1q = Tl + Tj;
        T1s = Tj - Tl;
        {
            SIMD_FLOAT T3, TX, TT, Tc, Tf, TA, To, Tt, T19, T17, T14, T12, TI,
                TL, T1e;
            SIMD_FLOAT T1c, TW, TZ, TP, TS, Tz, TE, T1m, T1o, Tn, Ts, T1h, T1j,
                T13, TY;
            T3  = T1 + T2;
            TX  = T1 - T2;
            TT  = Ta - Tb;
            Tc  = Ta + Tb;
            Tf  = SIMD_FMADD(KP577350269, T2, Tb);
            TA  = SIMD_FNMADD(KP577350269, T2, Tb);
            To  = SIMD_FNMADD(KP577350269, Tb, T2);
            Tt  = SIMD_FMADD(KP577350269, Tb, T2);
            T19 = SIMD_FMADD(KP866025403, T16, T6);
            T17 = SIMD_FNMADD(KP866025403, T16, T6);
            T14 = Tm + T11;
            T12 = T11 - Tm;
            TI  = SIMD_FNMADD(KP866025403, TH, Tl);
            TL  = SIMD_FMADD(KP866025403, TH, Tl);
            T1e = SIMD_FMADD(KP866025403, T1b, T6);
            T1c = SIMD_FNMADD(KP866025403, T1b, T6);
            TW  = Ty - TV;
            TZ  = Ty + TV;
            TP  = SIMD_FNMADD(KP866025403, TO, Tl);
            TS  = SIMD_FMADD(KP866025403, TO, Tl);
            Tz  = SIMD_FNMADD(KP732050807, Ty, Tx);
            TE  = SIMD_FMADD(KP732050807, Ty, Tx);
            T1m = SIMD_FNMADD(KP732050807, Tm, T1l);
            T1o = SIMD_FMADD(KP732050807, Tm, T1l);
            Tn  = SIMD_FMADD(KP732050807, Tm, Tk);
            Ts  = SIMD_FNMADD(KP732050807, Tm, Tk);
            T1h = SIMD_FMADD(KP732050807, Ty, T1g);
            T1j = SIMD_FNMADD(KP732050807, Ty, T1g);
            T13 = TX - Td;
            TY  = TX + Td;
            {
                SIMD_FLOAT T5, T1r, T1p, Te, TU, T10, TM, Tu, Tp, TJ, TQ, TB,
                    Tg, TF, Tw;
                SIMD_FLOAT T1n, TN, T15, T1d, TK, T1f, Tr, T1k, TD, T18, TR, TG,
                    T1a, Ti, T1i;
                T5             = T3 + T4;
                T1r            = T3 - T4;
                T1p            = Tc + Td;
                Te             = Tc - Td;
                TU             = T4 + TT;
                T10            = TT - T4;
                TM             = SIMD_FNMADD(KP866025403, Tt, Ta);
                Tu             = SIMD_FMADD(KP866025403, Tt, Ta);
                Tp             = SIMD_FNMADD(KP866025403, To, Ta);
                TJ             = SIMD_FMADD(KP866025403, To, Ta);
                TQ             = SIMD_FMADD(KP866025403, TA, T1);
                TB             = SIMD_FNMADD(KP866025403, TA, T1);
                Tg             = SIMD_FMADD(KP866025403, Tf, T1);
                TF             = SIMD_FNMADD(KP866025403, Tf, T1);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, TZ, TY);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, TZ, TY);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T14, T13);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T14, T13);
                ro[WS(os, 6)]  = T1r + T1s;
                ro[WS(os, 18)] = T1r - T1s;
                ro[0]          = T5 + T8;
                ro[WS(os, 12)] = T5 - T8;
                io[WS(os, 18)] = Te - T9;
                io[WS(os, 6)]  = T9 + Te;
                io[0]          = T1p + T1q;
                io[WS(os, 12)] = T1p - T1q;
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T12, T10);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T12, T10);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, TW, TU);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, TW, TU);
                Tw             = SIMD_FNMADD(KP866025403, Tv, Tu);
                T1n            = SIMD_FMADD(KP866025403, Tv, Tu);
                TN             = SIMD_FMADD(KP866025403, TC, TM);
                T15            = SIMD_FNMADD(KP866025403, TC, TM);
                T1d            = SIMD_FMADD(KP866025403, Th, TJ);
                TK             = SIMD_FNMADD(KP866025403, Th, TJ);
                T1f            = SIMD_FMADD(KP866025403, Tq, Tp);
                Tr             = SIMD_FNMADD(KP866025403, Tq, Tp);
                T1k            = SIMD_FNMADD(KP866025403, TC, TB);
                TD             = SIMD_FMADD(KP866025403, TC, TB);
                T18            = SIMD_FNMADD(KP866025403, Tv, TQ);
                TR             = SIMD_FMADD(KP866025403, Tv, TQ);
                TG             = SIMD_FNMADD(KP866025403, Tq, TF);
                T1a            = SIMD_FMADD(KP866025403, Tq, TF);
                Ti             = SIMD_FMADD(KP866025403, Th, Tg);
                T1i            = SIMD_FNMADD(KP866025403, Th, Tg);
                io[WS(os, 23)] = SIMD_FMADD(KP965925826, T1o, T1n);
                io[WS(os, 11)] = SIMD_FNMADD(KP965925826, T1o, T1n);
                io[WS(os, 5)]  = SIMD_FMADD(KP965925826, Tz, Tw);
                io[WS(os, 17)] = SIMD_FNMADD(KP965925826, Tz, Tw);
                io[WS(os, 14)] = T15 + T17;
                io[WS(os, 2)]  = T15 - T17;
                io[WS(os, 8)]  = TN + TP;
                io[WS(os, 20)] = TN - TP;
                io[WS(os, 16)] = TK + TL;
                io[WS(os, 4)]  = TK - TL;
                io[WS(os, 22)] = T1d + T1e;
                io[WS(os, 10)] = T1d - T1e;
                io[WS(os, 19)] = SIMD_FMADD(KP965925826, Ts, Tr);
                io[WS(os, 7)]  = SIMD_FNMADD(KP965925826, Ts, Tr);
                io[WS(os, 1)]  = SIMD_FMADD(KP965925826, T1h, T1f);
                io[WS(os, 13)] = SIMD_FNMADD(KP965925826, T1h, T1f);
                ro[WS(os, 11)] = SIMD_FMADD(KP965925826, TE, TD);
                ro[WS(os, 23)] = SIMD_FNMADD(KP965925826, TE, TD);
                ro[WS(os, 5)]  = SIMD_FMADD(KP965925826, T1m, T1k);
                ro[WS(os, 17)] = SIMD_FNMADD(KP965925826, T1m, T1k);
                ro[WS(os, 2)]  = TR + TS;
                ro[WS(os, 14)] = TR - TS;
                ro[WS(os, 8)]  = T18 + T19;
                ro[WS(os, 20)] = T18 - T19;
                ro[WS(os, 16)] = T1a + T1c;
                ro[WS(os, 4)]  = T1a - T1c;
                ro[WS(os, 10)] = TG + TI;
                ro[WS(os, 22)] = TG - TI;
                ro[WS(os, 7)]  = SIMD_FMADD(KP965925826, T1j, T1i);
                ro[WS(os, 19)] = SIMD_FNMADD(KP965925826, T1j, T1i);
                ro[WS(os, 1)]  = SIMD_FMADD(KP965925826, Tn, Ti);
                ro[WS(os, 13)] = SIMD_FNMADD(KP965925826, Tn, Ti);
            }
        }
    }
}

template <>
struct c2cf_traits<24, 6>
{
    static constexpr long_t flops           = 224;
    static constexpr long_t operations      = 144;
    static constexpr long_t memory_accesses = 60;
    static constexpr long_t stack_vars      = 111;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 6 -name c2cf
 * -standalone */

/*
 * This function contains 144 FP additions, 80 FP multiplications,
 * (or, 64 additions, 0 multiplications, 80 fused multiply/add),
 * 111 stack variables, 3 constants, and 60 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 6>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T6, Tl, T4, Tf, T1, Tc, T2, Td, T7, To, T8, Tm, TP, TV, Tj;
        SIMD_FLOAT TH, Tu, Tz;
        T6 = ri[WS(is, 3)];
        Tl = ii[WS(is, 3)];
        T4 = ri[WS(is, 2)];
        Tf = ii[WS(is, 2)];
        T1 = ri[0];
        Tc = ii[0];
        T2 = ri[WS(is, 4)];
        Td = ii[WS(is, 4)];
        T7 = ri[WS(is, 5)];
        To = ii[WS(is, 5)];
        T8 = ri[WS(is, 1)];
        Tm = ii[WS(is, 1)];
        TP = T6 + Tl;
        TV = Tl - T6;
        Tj = SIMD_FNMADD(KP577350269, T4, Tf);
        TH = SIMD_FNMADD(KP577350269, Tf, T4);
        Tu = SIMD_FMADD(KP577350269, Tf, T4);
        Tz = SIMD_FMADD(KP577350269, T4, Tf);
        {
            SIMD_FLOAT T3, TR, Te, TK, Th, TF, Ts, Tx, TB, T1n, Tp, T13, TM, T9,
                TN;
            SIMD_FLOAT T1H, TC, T14, T1m, Tn, TU, TS, T5, T1J, TL, TY, T1G, Tg,
                T1s, Ty;
            T3  = T1 + T2;
            TR  = T1 - T2;
            Te  = Tc + Td;
            TK  = Tc - Td;
            Th  = SIMD_FMADD(KP577350269, T2, Td);
            TF  = SIMD_FMADD(KP577350269, Td, T2);
            Ts  = SIMD_FNMADD(KP577350269, Td, T2);
            Tx  = SIMD_FNMADD(KP577350269, T2, Td);
            TB  = SIMD_FNMADD(KP577350269, To, T7);
            T1n = SIMD_FMADD(KP577350269, T7, To);
            Tp  = SIMD_FMADD(KP577350269, To, T7);
            T13 = SIMD_FNMADD(KP577350269, T7, To);
            TM  = T7 - T8;
            T9  = T7 + T8;
            TN  = To - Tm;
            T1H = To + Tm;
            TC  = SIMD_FMADD(KP577350269, Tm, T8);
            T14 = SIMD_FMADD(KP577350269, T8, Tm);
            T1m = SIMD_FNMADD(KP577350269, T8, Tm);
            Tn  = SIMD_FNMADD(KP577350269, Tm, T8);
            TU  = TR + Tf;
            TS  = TR - Tf;
            T5  = T3 + T4;
            T1J = T3 - T4;
            TL  = TK - T4;
            TY  = T4 + TK;
            T1G = Te + Tf;
            Tg  = Te - Tf;
            T1s = SIMD_FNMADD(KP866025403, Tx, T1);
            Ty  = SIMD_FMADD(KP866025403, Tx, T1);
            {
                SIMD_FLOAT Tt, T10, T1y, TG, T18, Ti, Ta, Tb, T1I, T1K, T1u, TD,
                    TO, TW, T15;
                SIMD_FLOAT T1h, T1v, T1o, Tq, T12, TA, T1q, T1E, T1t, T11, T1e,
                    T1g, Tv, T1l, TI;
                Tt  = SIMD_FMADD(KP866025403, Ts, Tc);
                T10 = SIMD_FNMADD(KP866025403, Ts, Tc);
                T1y = SIMD_FMADD(KP866025403, TF, Tc);
                TG  = SIMD_FNMADD(KP866025403, TF, Tc);
                T18 = SIMD_FMADD(KP866025403, Th, T1);
                Ti  = SIMD_FNMADD(KP866025403, Th, T1);
                Ta  = T6 + T9;
                Tb  = T6 - T9;
                T1I = Tl + T1H;
                T1K = T1H - Tl;
                T1u = TB + TC;
                TD  = TB - TC;
                TO  = TM - TN;
                TW  = TM + TN;
                T15 = T13 + T14;
                T1h = T13 - T14;
                T1v = T1n + T1m;
                T1o = T1m - T1n;
                Tq  = Tn - Tp;
                T12 = Tp + Tn;
                TA  = SIMD_FMADD(KP866025403, Tz, Ty);
                T1q = SIMD_FNMADD(KP866025403, Tz, Ty);
                T1E = SIMD_FMADD(KP866025403, TH, T1s);
                T1t = SIMD_FNMADD(KP866025403, TH, T1s);
                T11 = SIMD_FNMADD(KP866025403, Tj, T10);
                T1e = SIMD_FMADD(KP866025403, Tj, T10);
                T1g = SIMD_FMADD(KP866025403, Tu, Tt);
                Tv  = SIMD_FNMADD(KP866025403, Tu, Tt);
                T1l = SIMD_FNMADD(KP866025403, TH, TG);
                TI  = SIMD_FMADD(KP866025403, TH, TG);
                {
                    SIMD_FLOAT T1B, T1z, Tk, T1j, T19, T1b, TE, TJ, TX, TZ, TQ,
                        TT, T1i, T1k, T1p;
                    SIMD_FLOAT T1r, T1C, T1w, T16, T1c, Tr, Tw, T1x, T1A, T1D,
                        T1F, T1d, T1f, T17, T1a;
                    T1B            = SIMD_FNMADD(KP866025403, Tz, T1y);
                    T1z            = SIMD_FMADD(KP866025403, Tz, T1y);
                    Tk             = SIMD_FNMADD(KP866025403, Tj, Ti);
                    T1j            = SIMD_FMADD(KP866025403, Tj, Ti);
                    T19            = SIMD_FMADD(KP866025403, Tu, T18);
                    T1b            = SIMD_FNMADD(KP866025403, Tu, T18);
                    io[WS(os, 18)] = Tg - Tb;
                    io[WS(os, 6)]  = Tb + Tg;
                    ro[0]          = T5 + Ta;
                    ro[WS(os, 12)] = T5 - Ta;
                    ro[WS(os, 6)]  = T1J + T1K;
                    ro[WS(os, 18)] = T1J - T1K;
                    io[0]          = T1G + T1I;
                    io[WS(os, 12)] = T1G - T1I;
                    TE             = SIMD_FNMADD(KP866025403, TD, Tl);
                    TJ             = SIMD_FMADD(KP866025403, TD, Tl);
                    TX             = TV - TW;
                    TZ             = TV + TW;
                    TQ             = TO - TP;
                    TT             = TP + TO;
                    T1i            = SIMD_FNMADD(KP866025403, T1h, T6);
                    T1k            = SIMD_FMADD(KP866025403, T1h, T6);
                    T1p            = SIMD_FNMADD(KP866025403, T1o, T6);
                    T1r            = SIMD_FMADD(KP866025403, T1o, T6);
                    T1C            = T1v - T1u;
                    T1w            = T1u + T1v;
                    T16            = T12 + T15;
                    T1c            = T15 - T12;
                    Tr             = SIMD_FNMADD(KP866025403, Tq, Tl);
                    Tw             = SIMD_FMADD(KP866025403, Tq, Tl);
                    io[WS(os, 8)]  = TI + TJ;
                    io[WS(os, 20)] = TI - TJ;
                    ro[WS(os, 2)]  = TA + TE;
                    ro[WS(os, 14)] = TA - TE;
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, TZ, TY);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, TZ, TY);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, TX, TU);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, TX, TU);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, TT, TS);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, TT, TS);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, TQ, TL);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, TQ, TL);
                    ro[WS(os, 16)] = T1j + T1k;
                    ro[WS(os, 4)]  = T1j - T1k;
                    io[WS(os, 22)] = T1g + T1i;
                    io[WS(os, 10)] = T1g - T1i;
                    ro[WS(os, 8)]  = T1q + T1r;
                    ro[WS(os, 20)] = T1q - T1r;
                    io[WS(os, 14)] = T1l + T1p;
                    io[WS(os, 2)]  = T1l - T1p;
                    T1x            = SIMD_FNMADD(KP866025403, T1w, TP);
                    T1A            = SIMD_FMADD(KP866025403, T1w, TP);
                    T1D            = SIMD_FNMADD(KP866025403, T1C, TV);
                    T1F            = SIMD_FMADD(KP866025403, T1C, TV);
                    T1d            = SIMD_FNMADD(KP866025403, T1c, TV);
                    T1f            = SIMD_FMADD(KP866025403, T1c, TV);
                    T17            = SIMD_FNMADD(KP866025403, T16, TP);
                    T1a            = SIMD_FMADD(KP866025403, T16, TP);
                    io[WS(os, 16)] = Tv + Tw;
                    io[WS(os, 4)]  = Tv - Tw;
                    ro[WS(os, 10)] = Tk + Tr;
                    ro[WS(os, 22)] = Tk - Tr;
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T1A, T1z);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T1A, T1z);
                    ro[WS(os, 17)] = SIMD_FMADD(KP707106781, T1x, T1t);
                    ro[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T1x, T1t);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T1F, T1E);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T1F, T1E);
                    io[WS(os, 17)] = SIMD_FMADD(KP707106781, T1D, T1B);
                    io[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T1D, T1B);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1f, T1e);
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1f, T1e);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1d, T1b);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1d, T1b);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1a, T19);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1a, T19);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T17, T11);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T17, T11);
                }
            }
        }
    }
}

template <>
struct c2cf_traits<24, 7>
{
    static constexpr long_t flops           = 228;
    static constexpr long_t operations      = 156;
    static constexpr long_t memory_accesses = 62;
    static constexpr long_t stack_vars      = 125;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 7 -name c2cf
 * -standalone */

/*
 * This function contains 156 FP additions, 72 FP multiplications,
 * (or, 84 additions, 0 multiplications, 72 fused multiply/add),
 * 125 stack variables, 3 constants, and 62 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 7>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T15, TY, T1N, T1P, T1S, T1G, T1q, T1c, T1l, T1n, T1R, T1T,
            T1o, T1h, T1O;
        SIMD_FLOAT T1K, T1i, T1m, T1p, T1r;
        {
            SIMD_FLOAT T8, Tq, T6, TS, Tj, T11, T3, T10, Tg, TT, T1M, TG, T1k,
                TA, T1F;
            SIMD_FLOAT TP, To, T1b, T1E, TE, Ty, T1a, T1L, TN, T1j, Tm, TJ, T1f,
                T1y, Ts;
            SIMD_FLOAT TI, T1z, Tu, T1e, T1V, TW, TV, Tb, T4, Th, T5, Ti, T1,
                Te, T2;
            SIMD_FLOAT Tf, T9, Tt, Ta, Tr, Tn, TO, Tz, TF, Tl, TM, Tx, TD;
            T8  = ri[WS(is, 3)];
            Tq  = ii[WS(is, 3)];
            T4  = ri[WS(is, 6)];
            Th  = ii[WS(is, 6)];
            T5  = ri[WS(is, 2)];
            Ti  = ii[WS(is, 2)];
            T1  = ri[0];
            Te  = ii[0];
            T2  = ri[WS(is, 4)];
            Tf  = ii[WS(is, 4)];
            T9  = ri[WS(is, 5)];
            Tt  = ii[WS(is, 5)];
            Ta  = ri[WS(is, 1)];
            T15 = Tq - T8;
            TY  = T8 + Tq;
            Tr  = ii[WS(is, 1)];
            T6  = T4 + T5;
            TS  = T4 - T5;
            Tj  = Th + Ti;
            T11 = Th - Ti;
            Tn  = SIMD_FNMADD(KP577350269, T5, Ti);
            TO  = SIMD_FNMADD(KP577350269, Ti, T5);
            Tz  = SIMD_FMADD(KP577350269, Ti, T5);
            TF  = SIMD_FMADD(KP577350269, T5, Ti);
            T3  = T1 + T2;
            T10 = T1 - T2;
            Tg  = Te + Tf;
            TT  = Te - Tf;
            Tl  = SIMD_FMADD(KP577350269, T2, Tf);
            TM  = SIMD_FMADD(KP577350269, Tf, T2);
            Tx  = SIMD_FNMADD(KP577350269, Tf, T2);
            TD  = SIMD_FNMADD(KP577350269, T2, Tf);
            T1M = SIMD_FMADD(KP866025403, TF, T4);
            TG  = SIMD_FNMADD(KP866025403, TF, T4);
            T1k = SIMD_FMADD(KP866025403, Tz, Th);
            TA  = SIMD_FNMADD(KP866025403, Tz, Th);
            T1F = SIMD_FNMADD(KP866025403, TO, Th);
            TP  = SIMD_FMADD(KP866025403, TO, Th);
            To  = SIMD_FMADD(KP866025403, Tn, T4);
            T1b = SIMD_FNMADD(KP866025403, Tn, T4);
            T1E = SIMD_FNMADD(KP866025403, TD, T1);
            TE  = SIMD_FMADD(KP866025403, TD, T1);
            Ty  = SIMD_FMADD(KP866025403, Tx, Te);
            T1a = SIMD_FNMADD(KP866025403, Tx, Te);
            T1L = SIMD_FMADD(KP866025403, TM, Te);
            TN  = SIMD_FNMADD(KP866025403, TM, Te);
            T1j = SIMD_FMADD(KP866025403, Tl, T1);
            Tm  = SIMD_FNMADD(KP866025403, Tl, T1);
            TJ  = SIMD_FMADD(KP577350269, Tr, Ta);
            T1f = SIMD_FMADD(KP577350269, Ta, Tr);
            T1y = SIMD_FNMADD(KP577350269, Ta, Tr);
            Ts  = SIMD_FNMADD(KP577350269, Tr, Ta);
            TI  = SIMD_FNMADD(KP577350269, Tt, T9);
            T1z = SIMD_FMADD(KP577350269, T9, Tt);
            Tu  = SIMD_FMADD(KP577350269, Tt, T9);
            T1e = SIMD_FNMADD(KP577350269, T9, Tt);
            T1V = Tt + Tr;
            TW  = Tt - Tr;
            TV  = T9 - Ta;
            Tb  = T9 + Ta;
            {
                SIMD_FLOAT T1d, T1I, T1H, T1g, T16, TX, T1v, TC, TB, T1w, TQ,
                    T1D, T1C, TH, TL;
                SIMD_FLOAT TR, T1X, T7, T1U, Tk, T1A, TK, T1t, Td, Tc, T1W, T1Y,
                    Tp, Tw, Tv;
                SIMD_FLOAT T1s, T1u, T1x, T1B, T18, T13, T12, T14, T17, T19, TU,
                    TZ, T1J, T1Q;
                T1X            = T3 - T6;
                T7             = T3 + T6;
                T1U            = Tg + Tj;
                Tk             = Tg - Tj;
                T1d            = Tu + Ts;
                Tv             = Ts - Tu;
                T1A            = T1y - T1z;
                T1I            = T1z + T1y;
                TK             = TI - TJ;
                T1H            = TI + TJ;
                T1t            = T1e - T1f;
                T1g            = T1e + T1f;
                T16            = TV + TW;
                TX             = TV - TW;
                Td             = T8 - Tb;
                Tc             = T8 + Tb;
                T1W            = Tq + T1V;
                T1Y            = T1V - Tq;
                T1v            = Tm + To;
                Tp             = Tm - To;
                Tw             = SIMD_FNMADD(KP866025403, Tv, Tq);
                TC             = SIMD_FMADD(KP866025403, Tv, Tq);
                TB             = Ty + TA;
                T1s            = Ty - TA;
                T1u            = SIMD_FNMADD(KP866025403, T1t, T8);
                T1w            = SIMD_FMADD(KP866025403, T1t, T8);
                TQ             = TN + TP;
                T1x            = TN - TP;
                T1B            = SIMD_FNMADD(KP866025403, T1A, T8);
                T1D            = SIMD_FMADD(KP866025403, T1A, T8);
                T1C            = TE + TG;
                TH             = TE - TG;
                io[WS(os, 18)] = Tk - Td;
                io[WS(os, 6)]  = Td + Tk;
                ro[0]          = T7 + Tc;
                ro[WS(os, 12)] = T7 - Tc;
                io[0]          = T1U + T1W;
                io[WS(os, 12)] = T1U - T1W;
                ro[WS(os, 6)]  = T1X + T1Y;
                ro[WS(os, 18)] = T1X - T1Y;
                ro[WS(os, 10)] = Tp + Tw;
                ro[WS(os, 22)] = Tp - Tw;
                io[WS(os, 22)] = T1s + T1u;
                io[WS(os, 10)] = T1s - T1u;
                io[WS(os, 14)] = T1x + T1B;
                io[WS(os, 2)]  = T1x - T1B;
                TL             = SIMD_FNMADD(KP866025403, TK, Tq);
                TR             = SIMD_FMADD(KP866025403, TK, Tq);
                T18            = TT - TS;
                TU             = TS + TT;
                TZ             = TX - TY;
                T13            = TY + TX;
                T12            = T10 + T11;
                T14            = T10 - T11;
                ro[WS(os, 2)]  = TH + TL;
                ro[WS(os, 14)] = TH - TL;
                io[WS(os, 16)] = TB + TC;
                io[WS(os, 4)]  = TB - TC;
                ro[WS(os, 16)] = T1v + T1w;
                ro[WS(os, 4)]  = T1v - T1w;
                io[WS(os, 8)]  = TQ + TR;
                io[WS(os, 20)] = TQ - TR;
                ro[WS(os, 8)]  = T1C + T1D;
                ro[WS(os, 20)] = T1C - T1D;
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, TZ, TU);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, TZ, TU);
                T17            = T15 - T16;
                T19            = T15 + T16;
                T1N            = T1L + T1M;
                T1P            = T1L - T1M;
                T1S            = T1E - T1F;
                T1G            = T1E + T1F;
                T1J            = T1H + T1I;
                T1Q            = T1I - T1H;
                T1q            = T1a - T1b;
                T1c            = T1a + T1b;
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T17, T14);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T17, T14);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T13, T12);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T13, T12);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T19, T18);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T19, T18);
                T1l            = T1j + T1k;
                T1n            = T1j - T1k;
                T1R            = SIMD_FNMADD(KP866025403, T1Q, T15);
                T1T            = SIMD_FMADD(KP866025403, T1Q, T15);
                T1o            = T1g - T1d;
                T1h            = T1d + T1g;
                T1O            = SIMD_FMADD(KP866025403, T1J, TY);
                T1K            = SIMD_FNMADD(KP866025403, T1J, TY);
            }
        }
        ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T1T, T1S);
        ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T1T, T1S);
        io[WS(os, 17)] = SIMD_FMADD(KP707106781, T1R, T1P);
        io[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T1R, T1P);
        T1i            = SIMD_FNMADD(KP866025403, T1h, TY);
        T1m            = SIMD_FMADD(KP866025403, T1h, TY);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T1O, T1N);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T1O, T1N);
        ro[WS(os, 17)] = SIMD_FMADD(KP707106781, T1K, T1G);
        ro[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T1K, T1G);
        T1p            = SIMD_FNMADD(KP866025403, T1o, T15);
        T1r            = SIMD_FMADD(KP866025403, T1o, T15);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1m, T1l);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1m, T1l);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1i, T1c);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1i, T1c);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1r, T1q);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1r, T1q);
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1p, T1n);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1p, T1n);
    }
}

template <>
struct c2cf_traits<24, 8>
{
    static constexpr long_t flops           = 260;
    static constexpr long_t operations      = 176;
    static constexpr long_t memory_accesses = 64;
    static constexpr long_t stack_vars      = 147;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 8 -name c2cf
 * -standalone */

/*
 * This function contains 176 FP additions, 84 FP multiplications,
 * (or, 92 additions, 0 multiplications, 84 fused multiply/add),
 * 147 stack variables, 3 constants, and 64 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 8>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1X, T29, T2d, T27, T20, T23, T1E, T1l, T2e, T2c, T1y, T1A,
            T1B, T1p, T1u;
        SIMD_FLOAT T1C, T24, T28, T1v, T1z, T1D, T1F;
        {
            SIMD_FLOAT Tb, Ty, T3, T19, Ti, T10, T6, TZ, Tl, T1a, Ta, T2g, T1V,
                TJ, TD;
            SIMD_FLOAT T1j, T25, TU, T1w, To, T26, TL, T1x, TF, T1W, TW, Tq,
                T1k, T17, T1e;
            SIMD_FLOAT T1o, T1H, T1Z, T1O, T1Y, TO, Tv, T1m, Tc, Tw, T1r, Tz,
                T1Q, TP, T1;
            SIMD_FLOAT Tg, T2, Th, T4, Tj, T5, Tk, T8, Ts, T9, Tt, Tn, TT, TC,
                TI;
            SIMD_FLOAT Tp, TV, TE, TK, T15, T16, Tu, TN, T1N, T1n;
            T1  = ri[0];
            Tg  = ii[0];
            T2  = ri[WS(is, 4)];
            Th  = ii[WS(is, 4)];
            T4  = ri[WS(is, 6)];
            Tj  = ii[WS(is, 6)];
            T5  = ri[WS(is, 2)];
            Tk  = ii[WS(is, 2)];
            T8  = ri[WS(is, 3)];
            Ts  = ii[WS(is, 3)];
            T9  = ri[WS(is, 7)];
            Tt  = ii[WS(is, 7)];
            Tb  = ri[WS(is, 5)];
            Ty  = ii[WS(is, 5)];
            T3  = T1 + T2;
            T19 = T1 - T2;
            Ti  = Tg + Th;
            T10 = Tg - Th;
            Tn  = SIMD_FMADD(KP577350269, T2, Th);
            TT  = SIMD_FMADD(KP577350269, Th, T2);
            TC  = SIMD_FNMADD(KP577350269, Th, T2);
            TI  = SIMD_FNMADD(KP577350269, T2, Th);
            T6  = T4 + T5;
            TZ  = T4 - T5;
            Tl  = Tj + Tk;
            T1a = Tj - Tk;
            Tp  = SIMD_FNMADD(KP577350269, T5, Tk);
            TV  = SIMD_FNMADD(KP577350269, Tk, T5);
            TE  = SIMD_FMADD(KP577350269, Tk, T5);
            TK  = SIMD_FMADD(KP577350269, T5, Tk);
            T15 = T8 - T9;
            Ta  = T8 + T9;
            T16 = Ts - Tt;
            T2g = Ts + Tt;
            Tu  = SIMD_FNMADD(KP577350269, Tt, T9);
            TN  = SIMD_FMADD(KP577350269, Tt, T9);
            T1N = SIMD_FNMADD(KP577350269, T9, Tt);
            T1n = SIMD_FMADD(KP577350269, T9, Tt);
            T1V = SIMD_FNMADD(KP866025403, TI, T1);
            TJ  = SIMD_FMADD(KP866025403, TI, T1);
            TD  = SIMD_FMADD(KP866025403, TC, Tg);
            T1j = SIMD_FNMADD(KP866025403, TC, Tg);
            T25 = SIMD_FMADD(KP866025403, TT, Tg);
            TU  = SIMD_FNMADD(KP866025403, TT, Tg);
            T1w = SIMD_FMADD(KP866025403, Tn, T1);
            To  = SIMD_FNMADD(KP866025403, Tn, T1);
            T26 = SIMD_FMADD(KP866025403, TK, T4);
            TL  = SIMD_FNMADD(KP866025403, TK, T4);
            T1x = SIMD_FMADD(KP866025403, TE, Tj);
            TF  = SIMD_FNMADD(KP866025403, TE, Tj);
            T1W = SIMD_FNMADD(KP866025403, TV, Tj);
            TW  = SIMD_FMADD(KP866025403, TV, Tj);
            Tq  = SIMD_FMADD(KP866025403, Tp, T4);
            T1k = SIMD_FNMADD(KP866025403, Tp, T4);
            T17 = T15 + T16;
            T1e = T16 - T15;
            T1o = SIMD_FMADD(KP866025403, T1n, T8);
            T1H = SIMD_FNMADD(KP866025403, T1n, T8);
            T1Z = SIMD_FNMADD(KP866025403, T1N, T8);
            T1O = SIMD_FMADD(KP866025403, T1N, T8);
            T1Y = SIMD_FMADD(KP866025403, TN, Ts);
            TO  = SIMD_FNMADD(KP866025403, TN, Ts);
            Tv  = SIMD_FMADD(KP866025403, Tu, Ts);
            T1m = SIMD_FNMADD(KP866025403, Tu, Ts);
            Tc  = ri[WS(is, 1)];
            Tw  = ii[WS(is, 1)];
            T1r = SIMD_FNMADD(KP577350269, Tb, Ty);
            Tz  = SIMD_FMADD(KP577350269, Ty, Tb);
            T1Q = SIMD_FMADD(KP577350269, Tb, Ty);
            TP  = SIMD_FNMADD(KP577350269, Ty, Tb);
            {
                SIMD_FLOAT T1K, Tr, T1G, TG, TX, T1M, TM, T1T, T21, T14, T1f,
                    T1t, T22, T1q, TY;
                SIMD_FLOAT TS, T1J, T1L, T1U, T1S, TH, TB, T2j, T7, T2f, Tm,
                    T12, Td, T13, T2h;
                SIMD_FLOAT TQ, T1s, T1P, Tx, Te, Tf, T2i, T2k, TR, T1I, T1R, TA,
                    T1h, T1c, T1b;
                SIMD_FLOAT T1d, T1g, T1i, T11, T18, T2a, T2b;
                T2j            = T3 - T6;
                T7             = T3 + T6;
                T2f            = Ti + Tl;
                Tm             = Ti - Tl;
                T1K            = To + Tq;
                Tr             = To - Tq;
                T1G            = TD - TF;
                TG             = TD + TF;
                T12            = Tb - Tc;
                Td             = Tb + Tc;
                T13            = Ty - Tw;
                T2h            = Ty + Tw;
                TQ             = SIMD_FMADD(KP577350269, Tw, Tc);
                T1s            = SIMD_FMADD(KP577350269, Tc, Tw);
                T1P            = SIMD_FNMADD(KP577350269, Tc, Tw);
                Tx             = SIMD_FNMADD(KP577350269, Tw, Tc);
                TX             = TU + TW;
                T1M            = TU - TW;
                TM             = TJ - TL;
                T1T            = TJ + TL;
                Te             = Ta + Td;
                Tf             = Ta - Td;
                T2i            = T2g + T2h;
                T2k            = T2h - T2g;
                T21            = TP + TQ;
                TR             = TP - TQ;
                T14            = T12 - T13;
                T1f            = T12 + T13;
                T1t            = T1r + T1s;
                T1I            = T1r - T1s;
                T22            = T1Q + T1P;
                T1R            = T1P - T1Q;
                TA             = Tx - Tz;
                T1q            = Tz + Tx;
                io[WS(os, 18)] = Tm - Tf;
                io[WS(os, 6)]  = Tf + Tm;
                ro[0]          = T7 + Te;
                ro[WS(os, 12)] = T7 - Te;
                ro[WS(os, 6)]  = T2j + T2k;
                ro[WS(os, 18)] = T2j - T2k;
                io[0]          = T2f + T2i;
                io[WS(os, 12)] = T2f - T2i;
                TY             = SIMD_FMADD(KP866025403, TR, TO);
                TS             = SIMD_FNMADD(KP866025403, TR, TO);
                T1J            = SIMD_FNMADD(KP866025403, T1I, T1H);
                T1L            = SIMD_FMADD(KP866025403, T1I, T1H);
                T1U            = SIMD_FMADD(KP866025403, T1R, T1O);
                T1S            = SIMD_FNMADD(KP866025403, T1R, T1O);
                TH             = SIMD_FMADD(KP866025403, TA, Tv);
                TB             = SIMD_FNMADD(KP866025403, TA, Tv);
                T1h            = T10 - TZ;
                T11            = TZ + T10;
                T18            = T14 - T17;
                T1c            = T17 + T14;
                ro[WS(os, 2)]  = TM + TS;
                ro[WS(os, 14)] = TM - TS;
                io[WS(os, 22)] = T1G + T1J;
                io[WS(os, 10)] = T1G - T1J;
                io[WS(os, 14)] = T1M + T1S;
                io[WS(os, 2)]  = T1M - T1S;
                io[WS(os, 16)] = TG + TH;
                io[WS(os, 4)]  = TG - TH;
                ro[WS(os, 10)] = Tr + TB;
                ro[WS(os, 22)] = Tr - TB;
                ro[WS(os, 16)] = T1K + T1L;
                ro[WS(os, 4)]  = T1K - T1L;
                io[WS(os, 8)]  = TX + TY;
                io[WS(os, 20)] = TX - TY;
                ro[WS(os, 8)]  = T1T + T1U;
                ro[WS(os, 20)] = T1T - T1U;
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T18, T11);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T18, T11);
                T1b            = T19 + T1a;
                T1d            = T19 - T1a;
                T1g            = T1e - T1f;
                T1i            = T1e + T1f;
                T1X            = T1V + T1W;
                T29            = T1V - T1W;
                T2d            = T25 - T26;
                T27            = T25 + T26;
                T20            = T1Y + T1Z;
                T2a            = T1Z - T1Y;
                T2b            = T22 - T21;
                T23            = T21 + T22;
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T1g, T1d);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T1g, T1d);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T1c, T1b);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T1c, T1b);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T1i, T1h);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T1i, T1h);
                T1E            = T1j - T1k;
                T1l            = T1j + T1k;
                T2e            = SIMD_FMADD(KP866025403, T2b, T2a);
                T2c            = SIMD_FNMADD(KP866025403, T2b, T2a);
                T1y            = T1w + T1x;
                T1A            = T1w - T1x;
                T1B            = T1m - T1o;
                T1p            = T1m + T1o;
                T1u            = T1q + T1t;
                T1C            = T1t - T1q;
            }
        }
        T24            = SIMD_FNMADD(KP866025403, T23, T20);
        T28            = SIMD_FMADD(KP866025403, T23, T20);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2e, T2d);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2e, T2d);
        ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T2c, T29);
        ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2c, T29);
        T1v            = SIMD_FNMADD(KP866025403, T1u, T1p);
        T1z            = SIMD_FMADD(KP866025403, T1u, T1p);
        T1D            = SIMD_FNMADD(KP866025403, T1C, T1B);
        T1F            = SIMD_FMADD(KP866025403, T1C, T1B);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T28, T27);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T28, T27);
        ro[WS(os, 17)] = SIMD_FMADD(KP707106781, T24, T1X);
        ro[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T24, T1X);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1z, T1y);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1z, T1y);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1v, T1l);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1v, T1l);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1F, T1E);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1F, T1E);
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1D, T1A);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1D, T1A);
    }
}

template <>
struct c2cf_traits<24, 9>
{
    static constexpr long_t flops           = 274;
    static constexpr long_t operations      = 184;
    static constexpr long_t memory_accesses = 66;
    static constexpr long_t stack_vars      = 158;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 9 -name c2cf
 * -standalone */

/*
 * This function contains 184 FP additions, 90 FP multiplications,
 * (or, 94 additions, 0 multiplications, 90 fused multiply/add),
 * 158 stack variables, 4 constants, and 66 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 9>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1L, T1M, T1O, T1K, T1N, T1P;
        {
            SIMD_FLOAT T8, T19, Tp, T1k, Tc, T2q, T2g, TU, T1H, TN, T26, T16,
                Tw, T1u, T1h;
            SIMD_FLOAT T1o, T1y, T1R, T29, T1Y, T28, TX, TB, T1w, T1j, T5, TR,
                TK, Tt, T13;
            SIMD_FLOAT Ts, TQ, Td, TE, T1a, Tm, T12, TJ, Te, TC, T6, Tn, T7, To,
                Ta;
            SIMD_FLOAT Ty, Tb, Tz, Tl, T2, TI, Tk, T4, Tj, T3, Tr, T1, Ti, Tv,
                T15;
            SIMD_FLOAT TM, TT, T1f, T1g, TA, TW, T1X, T1x, T2t, T9, T1n, T1l,
                T25, T1B, TF;
            SIMD_FLOAT T20, TY, Tq, T2p, T1r, T1b, Tf, T1c, T2r, T1d, TD, T1Z,
                T1C, TZ, TV;
            SIMD_FLOAT T23, T14, T2f, TS;
            T6  = ri[WS(is, 6)];
            Tn  = ii[WS(is, 6)];
            T7  = ri[WS(is, 2)];
            To  = ii[WS(is, 2)];
            Ta  = ri[WS(is, 3)];
            Ty  = ii[WS(is, 3)];
            Tb  = ri[WS(is, 7)];
            Tz  = ii[WS(is, 7)];
            T4  = ri[WS(is, 4)];
            Tl  = ii[WS(is, 4)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            Ti  = ii[0];
            Tj  = ii[WS(is, 8)];
            T8  = T6 + T7;
            T19 = T6 - T7;
            Tp  = Tn + To;
            T1k = Tn - To;
            Tv  = SIMD_FNMADD(KP577350269, T7, To);
            T15 = SIMD_FNMADD(KP577350269, To, T7);
            TM  = SIMD_FMADD(KP577350269, To, T7);
            TT  = SIMD_FMADD(KP577350269, T7, To);
            T1f = Ta - Tb;
            Tc  = Ta + Tb;
            T1g = Ty - Tz;
            T2q = Ty + Tz;
            TA  = SIMD_FNMADD(KP577350269, Tz, Tb);
            TW  = SIMD_FMADD(KP577350269, Tz, Tb);
            T1X = SIMD_FNMADD(KP577350269, Tb, Tz);
            T1x = SIMD_FMADD(KP577350269, Tb, Tz);
            T3  = T1 + T2;
            Tr  = SIMD_FNMADD(KP500000000, T2, T1);
            T2g = SIMD_FMADD(KP866025403, TT, T6);
            TU  = SIMD_FNMADD(KP866025403, TT, T6);
            T1H = SIMD_FMADD(KP866025403, TM, Tn);
            TN  = SIMD_FNMADD(KP866025403, TM, Tn);
            T26 = SIMD_FNMADD(KP866025403, T15, Tn);
            T16 = SIMD_FMADD(KP866025403, T15, Tn);
            Tw  = SIMD_FMADD(KP866025403, Tv, T6);
            T1u = SIMD_FNMADD(KP866025403, Tv, T6);
            T1h = T1f + T1g;
            T1o = T1g - T1f;
            T1y = SIMD_FMADD(KP866025403, T1x, Ta);
            T1R = SIMD_FNMADD(KP866025403, T1x, Ta);
            T29 = SIMD_FNMADD(KP866025403, T1X, Ta);
            T1Y = SIMD_FMADD(KP866025403, T1X, Ta);
            T28 = SIMD_FMADD(KP866025403, TW, Ty);
            TX  = SIMD_FNMADD(KP866025403, TW, Ty);
            TB  = SIMD_FMADD(KP866025403, TA, Ty);
            T1w = SIMD_FNMADD(KP866025403, TA, Ty);
            TI  = SIMD_FNMADD(KP500000000, Tj, Ti);
            Tk  = Ti + Tj;
            T1j = T3 - T4;
            T5  = T3 + T4;
            TR  = SIMD_FNMADD(KP577350269, T4, Tl);
            TK  = SIMD_FNMADD(KP577350269, Tl, T4);
            Tt  = SIMD_FMADD(KP577350269, T4, Tl);
            T13 = SIMD_FMADD(KP577350269, Tl, T4);
            Ts  = SIMD_FMADD(KP866025403, Tj, Tr);
            TQ  = SIMD_FNMADD(KP866025403, Tj, Tr);
            Td  = ri[WS(is, 5)];
            TE  = ii[WS(is, 5)];
            T1a = Tk - Tl;
            Tm  = Tk + Tl;
            T12 = SIMD_FMADD(KP866025403, T2, TI);
            TJ  = SIMD_FNMADD(KP866025403, T2, TI);
            Te  = ri[WS(is, 1)];
            TC  = ii[WS(is, 1)];
            T2t = T5 - T8;
            T9  = T5 + T8;
            T1n = T1j - T1k;
            T1l = T1j + T1k;
            T25 = SIMD_FNMADD(KP866025403, TR, TQ);
            TS  = SIMD_FMADD(KP866025403, TR, TQ);
            T1B = SIMD_FNMADD(KP577350269, Td, TE);
            TF  = SIMD_FMADD(KP577350269, TE, Td);
            T20 = SIMD_FMADD(KP577350269, Td, TE);
            TY  = SIMD_FNMADD(KP577350269, TE, Td);
            Tq  = Tm - Tp;
            T2p = Tm + Tp;
            T1r = T1a - T19;
            T1b = T19 + T1a;
            Tf  = Td + Te;
            T1c = Td - Te;
            T2r = TE + TC;
            T1d = TE - TC;
            TD  = SIMD_FNMADD(KP577350269, TC, Te);
            T1Z = SIMD_FNMADD(KP577350269, Te, TC);
            T1C = SIMD_FMADD(KP577350269, Te, TC);
            TZ  = SIMD_FMADD(KP577350269, TC, Te);
            TV  = TS - TU;
            T23 = TS + TU;
            T14 = SIMD_FNMADD(KP866025403, T13, T12);
            T2f = SIMD_FMADD(KP866025403, T13, T12);
            {
                SIMD_FLOAT T1t, T2b, T1D, T2c, T1A, T1V, TH, Tu, T1G, T1W, T17,
                    T18, T11, T1s, T1q;
                SIMD_FLOAT T1i, T1m, T1T, T24, T22, TP, TO, T1Q, TL, Th, Tg,
                    T2u, T2s, T10, T1p;
                SIMD_FLOAT T1e, T1S, T21, TG, T2k, T2a, T2d, T2l, T1v, T1I, T1J,
                    T1F, T1z, T1E, T1U;
                SIMD_FLOAT Tx, T2j, T27, T2n, T2h, T2i, T2e, T2o, T2m;
                T1t            = SIMD_FNMADD(KP866025403, TK, TJ);
                TL             = SIMD_FMADD(KP866025403, TK, TJ);
                Th             = Tc - Tf;
                Tg             = Tc + Tf;
                T2u            = T2r - T2q;
                T2s            = T2q + T2r;
                T10            = TY - TZ;
                T2b            = TY + TZ;
                T1p            = T1c + T1d;
                T1e            = T1c - T1d;
                T1S            = T1B - T1C;
                T1D            = T1B + T1C;
                T21            = T1Z - T20;
                T2c            = T20 + T1Z;
                T1A            = TF + TD;
                TG             = TD - TF;
                T1W            = T14 - T16;
                T17            = T14 + T16;
                io[WS(os, 18)] = Tq - Th;
                io[WS(os, 6)]  = Th + Tq;
                ro[0]          = T9 + Tg;
                ro[WS(os, 12)] = T9 - Tg;
                ro[WS(os, 6)]  = T2t + T2u;
                ro[WS(os, 18)] = T2t - T2u;
                io[0]          = T2p + T2s;
                io[WS(os, 12)] = T2p - T2s;
                T18            = SIMD_FMADD(KP866025403, T10, TX);
                T11            = SIMD_FNMADD(KP866025403, T10, TX);
                T1s            = T1o + T1p;
                T1q            = T1o - T1p;
                T1i            = T1e - T1h;
                T1m            = T1h + T1e;
                T1T            = SIMD_FNMADD(KP866025403, T1S, T1R);
                T1V            = SIMD_FMADD(KP866025403, T1S, T1R);
                T24            = SIMD_FMADD(KP866025403, T21, T1Y);
                T22            = SIMD_FNMADD(KP866025403, T21, T1Y);
                TH             = SIMD_FNMADD(KP866025403, TG, TB);
                TP             = SIMD_FMADD(KP866025403, TG, TB);
                TO             = TL + TN;
                T1Q            = TL - TN;
                io[WS(os, 8)]  = T17 + T18;
                io[WS(os, 20)] = T17 - T18;
                ro[WS(os, 2)]  = TV + T11;
                ro[WS(os, 14)] = TV - T11;
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T1s, T1r);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T1s, T1r);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T1q, T1n);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T1q, T1n);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T1i, T1b);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T1i, T1b);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T1m, T1l);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T1m, T1l);
                io[WS(os, 2)]  = T1W - T22;
                io[WS(os, 14)] = T1W + T22;
                ro[WS(os, 20)] = T23 - T24;
                ro[WS(os, 8)]  = T23 + T24;
                io[WS(os, 4)]  = TO - TP;
                io[WS(os, 22)] = T1Q + T1T;
                io[WS(os, 16)] = TO + TP;
                io[WS(os, 10)] = T1Q - T1T;
                Tu             = SIMD_FNMADD(KP866025403, Tt, Ts);
                T1G            = SIMD_FMADD(KP866025403, Tt, Ts);
                T2k            = T29 - T28;
                T2a            = T28 + T29;
                T2d            = T2b + T2c;
                T2l            = T2c - T2b;
                T1L            = T1w - T1y;
                T1z            = T1w + T1y;
                T1E            = T1A + T1D;
                T1M            = T1D - T1A;
                T1U            = Tu + Tw;
                Tx             = Tu - Tw;
                T2j            = T25 - T26;
                T27            = T25 + T26;
                T2n            = T2f - T2g;
                T2h            = T2f + T2g;
                T2i            = SIMD_FMADD(KP866025403, T2d, T2a);
                T2e            = SIMD_FNMADD(KP866025403, T2d, T2a);
                T2o            = SIMD_FMADD(KP866025403, T2l, T2k);
                T2m            = SIMD_FNMADD(KP866025403, T2l, T2k);
                T1O            = T1t - T1u;
                T1v            = T1t + T1u;
                T1K            = T1G - T1H;
                T1I            = T1G + T1H;
                T1J            = SIMD_FMADD(KP866025403, T1E, T1z);
                T1F            = SIMD_FNMADD(KP866025403, T1E, T1z);
                ro[WS(os, 4)]  = T1U - T1V;
                ro[WS(os, 16)] = T1U + T1V;
                ro[WS(os, 10)] = Tx + TH;
                ro[WS(os, 22)] = Tx - TH;
                io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2i, T2h);
                io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2i, T2h);
                ro[WS(os, 17)] = SIMD_FMADD(KP707106781, T2e, T27);
                ro[WS(os, 5)]  = SIMD_FNMADD(KP707106781, T2e, T27);
                io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2o, T2n);
                io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2o, T2n);
                ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T2m, T2j);
                ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2m, T2j);
                io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1F, T1v);
                io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1F, T1v);
                ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1J, T1I);
                ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1J, T1I);
            }
        }
        T1N            = SIMD_FNMADD(KP866025403, T1M, T1L);
        T1P            = SIMD_FMADD(KP866025403, T1M, T1L);
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1P, T1O);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1P, T1O);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1N, T1K);
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1N, T1K);
    }
}

template <>
struct c2cf_traits<24, 10>
{
    static constexpr long_t flops           = 272;
    static constexpr long_t operations      = 188;
    static constexpr long_t memory_accesses = 68;
    static constexpr long_t stack_vars      = 164;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 10 -name c2cf
 * -standalone */

/*
 * This function contains 188 FP additions, 84 FP multiplications,
 * (or, 104 additions, 0 multiplications, 84 fused multiply/add),
 * 164 stack variables, 4 constants, and 68 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 10>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT TY, T1a, T1M, T11, T1K, T14, TW, T18, T1S, T28, T24, T22,
            T26, T1V, T1Y;
        SIMD_FLOAT T25, T1Z, T23, T27, T29, TZ, T1O, T1N, T1P, T15, T1c, T1b,
            T1H;
        {
            SIMD_FLOAT T8, T2a, T2m, Tr, Tc, T2w, T21, TR, T1s, T1R, Ty, T1e,
                T1C, T1i, T1X;
            SIMD_FLOAT T2j, T2q, T1W, TD, T1g, T2l, T5, TV, TO, Tv, T17, Tu, TU,
                Te, Tf;
            SIMD_FLOAT T2b, To, T16, TN, TE, TF, Td, TI, T6, Tp, T7, Tq, Ta, TA,
                Tb;
            SIMD_FLOAT TB, Tn, T2, TM, Tm, T4, Tl, T3, Tt, T1, Tk, Tx, T19, TQ,
                TX;
            SIMD_FLOAT T2h, T2i, T1h, T1L, T10, TC, T2z, T9, T2p, T2n, T1l, Tg,
                Ts, T2v, T2c;
            SIMD_FLOAT T2t;
            T6  = ri[WS(is, 6)];
            Tp  = ii[WS(is, 6)];
            T7  = ri[WS(is, 2)];
            Tq  = ii[WS(is, 2)];
            Ta  = ri[WS(is, 3)];
            TA  = ii[WS(is, 3)];
            Tb  = ri[WS(is, 7)];
            TB  = ii[WS(is, 7)];
            T4  = ri[WS(is, 4)];
            Tn  = ii[WS(is, 4)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            Tk  = ii[0];
            Tl  = ii[WS(is, 8)];
            T8  = T6 + T7;
            T2a = T6 - T7;
            T2m = Tp - Tq;
            Tr  = Tp + Tq;
            Tx  = SIMD_FNMADD(KP577350269, T7, Tq);
            T19 = SIMD_FNMADD(KP577350269, Tq, T7);
            TQ  = SIMD_FMADD(KP577350269, Tq, T7);
            TX  = SIMD_FMADD(KP577350269, T7, Tq);
            T2h = Ta - Tb;
            Tc  = Ta + Tb;
            T2i = TA - TB;
            T2w = TA + TB;
            T1h = SIMD_FMADD(KP577350269, Tb, TB);
            T1L = SIMD_FNMADD(KP577350269, Tb, TB);
            T10 = SIMD_FMADD(KP577350269, TB, Tb);
            TC  = SIMD_FNMADD(KP577350269, TB, Tb);
            T3  = T1 + T2;
            Tt  = SIMD_FNMADD(KP500000000, T2, T1);
            T21 = SIMD_FMADD(KP866025403, TX, T6);
            TY  = SIMD_FNMADD(KP866025403, TX, T6);
            TR  = SIMD_FNMADD(KP866025403, TQ, Tp);
            T1s = SIMD_FMADD(KP866025403, TQ, Tp);
            T1R = SIMD_FNMADD(KP866025403, T19, Tp);
            T1a = SIMD_FMADD(KP866025403, T19, Tp);
            Ty  = SIMD_FMADD(KP866025403, Tx, T6);
            T1e = SIMD_FNMADD(KP866025403, Tx, T6);
            T1C = SIMD_FNMADD(KP866025403, T1h, Ta);
            T1i = SIMD_FMADD(KP866025403, T1h, Ta);
            T1X = SIMD_FNMADD(KP866025403, T1L, Ta);
            T1M = SIMD_FMADD(KP866025403, T1L, Ta);
            T2j = T2h + T2i;
            T2q = T2i - T2h;
            T11 = SIMD_FNMADD(KP866025403, T10, TA);
            T1W = SIMD_FMADD(KP866025403, T10, TA);
            TD  = SIMD_FMADD(KP866025403, TC, TA);
            T1g = SIMD_FNMADD(KP866025403, TC, TA);
            TM  = SIMD_FNMADD(KP500000000, Tl, Tk);
            Tm  = Tk + Tl;
            T2l = T3 - T4;
            T5  = T3 + T4;
            TV  = SIMD_FNMADD(KP577350269, T4, Tn);
            TO  = SIMD_FNMADD(KP577350269, Tn, T4);
            Tv  = SIMD_FMADD(KP577350269, T4, Tn);
            T17 = SIMD_FMADD(KP577350269, Tn, T4);
            Tu  = SIMD_FMADD(KP866025403, Tl, Tt);
            TU  = SIMD_FNMADD(KP866025403, Tl, Tt);
            Te  = ri[WS(is, 9)];
            Tf  = ri[WS(is, 1)];
            T2b = Tm - Tn;
            To  = Tm + Tn;
            T16 = SIMD_FMADD(KP866025403, T2, TM);
            TN  = SIMD_FNMADD(KP866025403, T2, TM);
            TE  = ii[WS(is, 9)];
            TF  = ii[WS(is, 1)];
            Td  = ri[WS(is, 5)];
            TI  = ii[WS(is, 5)];
            T2z = T5 - T8;
            T9  = T5 + T8;
            T2p = T2l - T2m;
            T2n = T2l + T2m;
            T1l = SIMD_FNMADD(KP500000000, Tf, Te);
            Tg  = Te + Tf;
            Ts  = To - Tr;
            T2v = To + Tr;
            T2c = T2a + T2b;
            T2t = T2b - T2a;
            {
                SIMD_FLOAT TP, Tw, T1w, T1j, T1T, T1D, T1f, T1v, T1U, TK, T1t,
                    T1z, T2s, T2u, T2k;
                SIMD_FLOAT T2o, T1x, T1p, T2e, TG, T1n, T13, T1J, TJ, T1I, T1m,
                    T2d, Th, T1d, T2x;
                SIMD_FLOAT T2f, T12, TH, T1r, T1o, Ti, Tj, T2y, T2A, T2g, T2r,
                    T1k, T1Q, T20, T1q;
                SIMD_FLOAT T1u, T1y, T1A, Tz, T1B, T1E, T1G, TL, TT, TS, T1F;
                T2e            = TE + TF;
                TG             = SIMD_FNMADD(KP500000000, TF, TE);
                T1n            = SIMD_FNMADD(KP577350269, Td, TI);
                T13            = SIMD_FNMADD(KP577350269, TI, Td);
                T1J            = SIMD_FMADD(KP577350269, Td, TI);
                TJ             = SIMD_FMADD(KP577350269, TI, Td);
                T1I            = SIMD_FMADD(KP866025403, TF, T1l);
                T1m            = SIMD_FNMADD(KP866025403, TF, T1l);
                T2d            = Td - Tg;
                Th             = Td + Tg;
                TP             = SIMD_FMADD(KP866025403, TO, TN);
                T1d            = SIMD_FNMADD(KP866025403, TO, TN);
                T2x            = TI + T2e;
                T2f            = TI - T2e;
                T12            = SIMD_FNMADD(KP866025403, Tf, TG);
                TH             = SIMD_FMADD(KP866025403, Tf, TG);
                T1r            = SIMD_FMADD(KP866025403, Tv, Tu);
                Tw             = SIMD_FNMADD(KP866025403, Tv, Tu);
                T1w            = T1g - T1i;
                T1j            = T1g + T1i;
                T1T            = SIMD_FMADD(KP866025403, T1J, T1I);
                T1K            = SIMD_FNMADD(KP866025403, T1J, T1I);
                T1D            = SIMD_FMADD(KP866025403, T1n, T1m);
                T1o            = SIMD_FNMADD(KP866025403, T1n, T1m);
                Ti             = Tc + Th;
                Tj             = Tc - Th;
                T1f            = T1d + T1e;
                T1v            = T1d - T1e;
                T2y            = T2w + T2x;
                T2A            = T2x - T2w;
                T2g            = T2d - T2f;
                T2r            = T2d + T2f;
                T14            = SIMD_FMADD(KP866025403, T13, T12);
                T1U            = SIMD_FNMADD(KP866025403, T13, T12);
                T1k            = SIMD_FMADD(KP866025403, TJ, TH);
                TK             = SIMD_FNMADD(KP866025403, TJ, TH);
                T1t            = T1r + T1s;
                T1z            = T1r - T1s;
                io[WS(os, 18)] = Ts - Tj;
                io[WS(os, 6)]  = Tj + Ts;
                ro[0]          = T9 + Ti;
                ro[WS(os, 12)] = T9 - Ti;
                ro[WS(os, 6)]  = T2z + T2A;
                ro[WS(os, 18)] = T2z - T2A;
                io[0]          = T2v + T2y;
                io[WS(os, 12)] = T2v - T2y;
                T2s            = T2q - T2r;
                T2u            = T2q + T2r;
                T2k            = T2g - T2j;
                T2o            = T2j + T2g;
                T1x            = T1k + T1o;
                T1p            = T1k - T1o;
                TW             = SIMD_FMADD(KP866025403, TV, TU);
                T1Q            = SIMD_FNMADD(KP866025403, TV, TU);
                T20            = SIMD_FMADD(KP866025403, T17, T16);
                T18            = SIMD_FNMADD(KP866025403, T17, T16);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2u, T2t);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2u, T2t);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2s, T2p);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2s, T2p);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2o, T2n);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2o, T2n);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2k, T2c);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2k, T2c);
                T1q            = T1j - T1p;
                T1u            = T1j + T1p;
                T1y            = T1w - T1x;
                T1A            = T1w + T1x;
                Tz             = Tw - Ty;
                T1B            = Tw + Ty;
                T1E            = T1C + T1D;
                T1G            = T1D - T1C;
                TL             = TD - TK;
                TT             = TD + TK;
                TS             = TP + TR;
                T1F            = TP - TR;
                T1S            = T1Q + T1R;
                T28            = T1Q - T1R;
                ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1u, T1t);
                ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1u, T1t);
                io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1q, T1f);
                io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1q, T1f);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1A, T1z);
                ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1A, T1z);
                io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1y, T1v);
                io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1y, T1v);
                ro[WS(os, 16)] = T1B + T1E;
                ro[WS(os, 4)]  = T1B - T1E;
                ro[WS(os, 10)] = Tz + TL;
                ro[WS(os, 22)] = Tz - TL;
                io[WS(os, 10)] = T1F + T1G;
                io[WS(os, 22)] = T1F - T1G;
                io[WS(os, 16)] = TS + TT;
                io[WS(os, 4)]  = TS - TT;
                T24            = T20 - T21;
                T22            = T20 + T21;
                T26            = T1U + T1T;
                T1V            = T1T - T1U;
                T1Y            = T1W + T1X;
                T25            = T1X - T1W;
            }
        }
        T1Z            = T1V - T1Y;
        T23            = T1Y + T1V;
        T27            = T25 + T26;
        T29            = T26 - T25;
        TZ             = TW - TY;
        T1O            = TW + TY;
        T1N            = T1K - T1M;
        T1P            = T1M + T1K;
        T15            = T11 - T14;
        T1c            = T11 + T14;
        T1b            = T18 + T1a;
        T1H            = T18 - T1a;
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T23, T22);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T23, T22);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T1Z, T1S);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T1Z, T1S);
        ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T29, T28);
        ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T29, T28);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T27, T24);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T27, T24);
        ro[WS(os, 8)]  = T1O + T1P;
        ro[WS(os, 20)] = T1O - T1P;
        ro[WS(os, 2)]  = TZ + T15;
        ro[WS(os, 14)] = TZ - T15;
        io[WS(os, 2)]  = T1H + T1N;
        io[WS(os, 14)] = T1H - T1N;
        io[WS(os, 8)]  = T1b + T1c;
        io[WS(os, 20)] = T1b - T1c;
    }
}

template <>
struct c2cf_traits<24, 11>
{
    static constexpr long_t flops           = 276;
    static constexpr long_t operations      = 192;
    static constexpr long_t memory_accesses = 70;
    static constexpr long_t stack_vars      = 170;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 11 -name c2cf
 * -standalone */

/*
 * This function contains 192 FP additions, 84 FP multiplications,
 * (or, 108 additions, 0 multiplications, 84 fused multiply/add),
 * 170 stack variables, 4 constants, and 70 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 11>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T1g, T1e, T1b, T1i, T1T, T1V, T15, T1U, T1h, T1N;
        {
            SIMD_FLOAT T6, Tr, Te, T2C, Ta, T2g, TC, T13, T1f, TW, T2s, Tv, T1I,
                T1o, T23;
            SIMD_FLOAT T1S, T2p, T2w, T17, T22, TI, T1m, T2r, T5, T11, TT, Tz,
                T1d, Ty, T10;
            SIMD_FLOAT Tg, Th, T2h, Tq, T1c, TS, TJ, TK, Tf, TN, T7, T8, Ts, Tt,
                Tc;
            SIMD_FLOAT TF, Td, TG, Tp, T2, TR, To, T4, Tn, T3, Tx, T1, Tm, TV,
                T9;
            SIMD_FLOAT TB, Tu, T2n, T2o, T1n, T1R, T16, TH, T2F, Tb, T2v, T2t,
                T1r, Ti, Tw;
            SIMD_FLOAT T2B, T2i, T2z;
            T6  = ri[WS(is, 6)];
            Tr  = ii[WS(is, 6)];
            T7  = ri[WS(is, 2)];
            T8  = ri[WS(is, 10)];
            Ts  = ii[WS(is, 2)];
            Tt  = ii[WS(is, 10)];
            Tc  = ri[WS(is, 3)];
            TF  = ii[WS(is, 3)];
            Td  = ri[WS(is, 7)];
            TG  = ii[WS(is, 7)];
            T4  = ri[WS(is, 4)];
            Tp  = ii[WS(is, 4)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            Tm  = ii[0];
            TV  = T8 - T7;
            T9  = T7 + T8;
            TB  = Ts - Tt;
            Tu  = Ts + Tt;
            Tn  = ii[WS(is, 8)];
            T2n = Tc - Td;
            Te  = Tc + Td;
            T2o = TF - TG;
            T2C = TF + TG;
            T1n = SIMD_FMADD(KP577350269, Td, TG);
            T1R = SIMD_FNMADD(KP577350269, Td, TG);
            T16 = SIMD_FMADD(KP577350269, TG, Td);
            TH  = SIMD_FNMADD(KP577350269, TG, Td);
            T3  = T1 + T2;
            Tx  = SIMD_FNMADD(KP500000000, T2, T1);
            Ta  = T6 + T9;
            T2g = T6 - T9;
            TC  = SIMD_FNMADD(KP577350269, T9, TB);
            T13 = SIMD_FMADD(KP577350269, T9, TB);
            T1f = SIMD_FMADD(KP577350269, Tu, TV);
            TW  = SIMD_FNMADD(KP577350269, Tu, TV);
            T2s = Tr - Tu;
            Tv  = Tr + Tu;
            T1I = SIMD_FNMADD(KP866025403, T1n, Tc);
            T1o = SIMD_FMADD(KP866025403, T1n, Tc);
            T23 = SIMD_FNMADD(KP866025403, T1R, Tc);
            T1S = SIMD_FMADD(KP866025403, T1R, Tc);
            T2p = T2n + T2o;
            T2w = T2o - T2n;
            T17 = SIMD_FNMADD(KP866025403, T16, TF);
            T22 = SIMD_FMADD(KP866025403, T16, TF);
            TI  = SIMD_FMADD(KP866025403, TH, TF);
            T1m = SIMD_FNMADD(KP866025403, TH, TF);
            TR  = SIMD_FNMADD(KP500000000, Tn, Tm);
            To  = Tm + Tn;
            T2r = T3 - T4;
            T5  = T3 + T4;
            T11 = SIMD_FNMADD(KP577350269, T4, Tp);
            TT  = SIMD_FNMADD(KP577350269, Tp, T4);
            Tz  = SIMD_FMADD(KP577350269, T4, Tp);
            T1d = SIMD_FMADD(KP577350269, Tp, T4);
            Ty  = SIMD_FMADD(KP866025403, Tn, Tx);
            T10 = SIMD_FNMADD(KP866025403, Tn, Tx);
            Tg  = ri[WS(is, 9)];
            Th  = ri[WS(is, 1)];
            T2h = To - Tp;
            Tq  = To + Tp;
            T1c = SIMD_FMADD(KP866025403, T2, TR);
            TS  = SIMD_FNMADD(KP866025403, T2, TR);
            TJ  = ii[WS(is, 9)];
            TK  = ii[WS(is, 1)];
            Tf  = ri[WS(is, 5)];
            TN  = ii[WS(is, 5)];
            T2F = T5 - Ta;
            Tb  = T5 + Ta;
            T2v = T2r - T2s;
            T2t = T2r + T2s;
            T1r = SIMD_FNMADD(KP500000000, Th, Tg);
            Ti  = Tg + Th;
            Tw  = Tq - Tv;
            T2B = Tq + Tv;
            T2i = T2g + T2h;
            T2z = T2h - T2g;
            {
                SIMD_FLOAT TU, TD, T1p, T1C, T1Z, T1Q, T1J, TA, T20, T1a, TP,
                    T1B, T1l, TX, T2y;
                SIMD_FLOAT T2A, T2q, T2u, T1D, T1v, T1F, T1z, T2k, TL, T1t, T19,
                    T1P, TO, T1O, T1s;
                SIMD_FLOAT T2j, Tj, T1j, T2D, T2l, T18, TM, T1k, T1u, Tk, Tl,
                    T1x, T2G, T2E, T2x;
                SIMD_FLOAT T2m, T1q, T1y;
                T2k            = TJ + TK;
                TL             = SIMD_FNMADD(KP500000000, TK, TJ);
                T1t            = SIMD_FNMADD(KP577350269, Tf, TN);
                T19            = SIMD_FNMADD(KP577350269, TN, Tf);
                T1P            = SIMD_FMADD(KP577350269, Tf, TN);
                TO             = SIMD_FMADD(KP577350269, TN, Tf);
                T1O            = SIMD_FMADD(KP866025403, TK, T1r);
                T1s            = SIMD_FNMADD(KP866025403, TK, T1r);
                T2j            = Tf - Ti;
                Tj             = Tf + Ti;
                TU             = SIMD_FMADD(KP866025403, TT, TS);
                T1j            = SIMD_FNMADD(KP866025403, TT, TS);
                T2D            = TN + T2k;
                T2l            = TN - T2k;
                T18            = SIMD_FNMADD(KP866025403, Th, TL);
                TM             = SIMD_FMADD(KP866025403, Th, TL);
                T1k            = SIMD_FNMADD(KP866025403, TC, T6);
                TD             = SIMD_FMADD(KP866025403, TC, T6);
                T1p            = T1m + T1o;
                T1C            = T1m - T1o;
                T1Z            = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Q            = SIMD_FNMADD(KP866025403, T1P, T1O);
                T1J            = SIMD_FMADD(KP866025403, T1t, T1s);
                T1u            = SIMD_FNMADD(KP866025403, T1t, T1s);
                Tk             = Te + Tj;
                Tl             = Te - Tj;
                TA             = SIMD_FNMADD(KP866025403, Tz, Ty);
                T1x            = SIMD_FMADD(KP866025403, Tz, Ty);
                T2G            = T2D - T2C;
                T2E            = T2C + T2D;
                T2x            = T2j + T2l;
                T2m            = T2j - T2l;
                T20            = SIMD_FNMADD(KP866025403, T19, T18);
                T1a            = SIMD_FMADD(KP866025403, T19, T18);
                TP             = SIMD_FNMADD(KP866025403, TO, TM);
                T1q            = SIMD_FMADD(KP866025403, TO, TM);
                T1B            = T1j - T1k;
                T1l            = T1j + T1k;
                T1y            = SIMD_FNMADD(KP866025403, TW, Tr);
                TX             = SIMD_FMADD(KP866025403, TW, Tr);
                io[WS(os, 18)] = Tw - Tl;
                io[WS(os, 6)]  = Tl + Tw;
                ro[0]          = Tb + Tk;
                ro[WS(os, 12)] = Tb - Tk;
                ro[WS(os, 6)]  = T2F + T2G;
                ro[WS(os, 18)] = T2F - T2G;
                io[0]          = T2B + T2E;
                io[WS(os, 12)] = T2B - T2E;
                T2y            = T2w - T2x;
                T2A            = T2w + T2x;
                T2q            = T2m - T2p;
                T2u            = T2p + T2m;
                T1D            = T1q + T1u;
                T1v            = T1q - T1u;
                T1F            = T1x - T1y;
                T1z            = T1x + T1y;
                {
                    SIMD_FLOAT TZ, T1M, T1L, TY, TQ, T1K, T1H, TE, T1w, T1A,
                        T1E, T1G, T12, T1W, T1X;
                    SIMD_FLOAT T24, T2b, T2c, T21, T26, T27, T14, T2e, T1Y, T2f,
                        T2d, T29, T25, T2a, T28;
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2A, T2z);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2A, T2z);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2y, T2v);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2y, T2v);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2u, T2t);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2u, T2t);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2q, T2i);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2q, T2i);
                    T1w            = T1p - T1v;
                    T1A            = T1p + T1v;
                    T1E            = T1C - T1D;
                    T1G            = T1C + T1D;
                    TQ             = TI - TP;
                    TZ             = TI + TP;
                    T1K            = T1I + T1J;
                    T1M            = T1J - T1I;
                    T1H            = TA + TD;
                    TE             = TA - TD;
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1A, T1z);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1A, T1z);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1w, T1l);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1w, T1l);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1G, T1F);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1G, T1F);
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1E, T1B);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1E, T1B);
                    ro[WS(os, 22)] = TE - TQ;
                    ro[WS(os, 10)] = TE + TQ;
                    ro[WS(os, 4)]  = T1H - T1K;
                    T1L            = TU - TX;
                    TY             = TU + TX;
                    ro[WS(os, 16)] = T1H + T1K;
                    T12            = SIMD_FMADD(KP866025403, T11, T10);
                    T1W            = SIMD_FNMADD(KP866025403, T11, T10);
                    T1X            = SIMD_FMADD(KP866025403, T1f, Tr);
                    T1g            = SIMD_FNMADD(KP866025403, T1f, Tr);
                    T24            = T22 + T23;
                    T2b            = T23 - T22;
                    T2c            = T20 + T1Z;
                    T21            = T1Z - T20;
                    T1e            = SIMD_FNMADD(KP866025403, T1d, T1c);
                    T26            = SIMD_FMADD(KP866025403, T1d, T1c);
                    T27            = SIMD_FMADD(KP866025403, T13, T6);
                    T14            = SIMD_FNMADD(KP866025403, T13, T6);
                    io[WS(os, 10)] = T1L + T1M;
                    io[WS(os, 22)] = T1L - T1M;
                    io[WS(os, 16)] = TY + TZ;
                    io[WS(os, 4)]  = TY - TZ;
                    T2e            = T1W - T1X;
                    T1Y            = T1W + T1X;
                    T2f            = T2c - T2b;
                    T2d            = T2b + T2c;
                    T29            = T24 + T21;
                    T25            = T21 - T24;
                    T2a            = T26 - T27;
                    T28            = T26 + T27;
                    T1b            = T17 - T1a;
                    T1i            = T17 + T1a;
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2f, T2e);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2f, T2e);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T25, T1Y);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T25, T1Y);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2d, T2a);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2d, T2a);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T29, T28);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T29, T28);
                    T1T            = T1Q - T1S;
                    T1V            = T1S + T1Q;
                    T15            = T12 - T14;
                    T1U            = T12 + T14;
                }
            }
        }
        T1h            = T1e + T1g;
        T1N            = T1e - T1g;
        ro[WS(os, 8)]  = T1U + T1V;
        ro[WS(os, 20)] = T1U - T1V;
        ro[WS(os, 2)]  = T15 + T1b;
        ro[WS(os, 14)] = T15 - T1b;
        io[WS(os, 2)]  = T1N + T1T;
        io[WS(os, 14)] = T1N - T1T;
        io[WS(os, 8)]  = T1h + T1i;
        io[WS(os, 20)] = T1h - T1i;
    }
}

template <>
struct c2cf_traits<24, 12>
{
    static constexpr long_t flops           = 290;
    static constexpr long_t operations      = 200;
    static constexpr long_t memory_accesses = 72;
    static constexpr long_t stack_vars      = 150;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 12 -name c2cf
 * -standalone */

/*
 * This function contains 200 FP additions, 90 FP multiplications,
 * (or, 110 additions, 0 multiplications, 90 fused multiply/add),
 * 150 stack variables, 4 constants, and 72 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 12>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT T21, T1d, T1Y, T1g, T1m, T1k, T23, T1a, T22, T24, T1h, T1o,
            T1n, T1V;
        {
            SIMD_FLOAT T6, Tt, Td, TH, T16, TY, TB, T1j, T1t, Te, T2p, Ta, T18,
                TE, T11;
            SIMD_FLOAT T1l, Tx, T2C, T15, TA, T2B, T5, TX, T1i, Ts, T2q, TI, Tf,
                TL, Ti;
            SIMD_FLOAT Tj, TO, TP, Th, TS, T7, T8, Tu, Tv, T4, Tr, T1, T2, To,
                Tp;
            SIMD_FLOAT Tc, T10, T9, TD, Tw, Tz, T3, TW, Tq, T2P, Tb, T2L, Ty,
                T1w, T1Q;
            SIMD_FLOAT T2c, T2b, TN, T1s, T2J, T2r, T28, T1R, T1C, T2D, T2F, Tm,
                Tn, T2O, T2Q;
            SIMD_FLOAT T29, T1y, TU, T2H, T2v, T2z, T2G;
            T6  = ri[WS(is, 6)];
            Tt  = ii[WS(is, 6)];
            T7  = ri[WS(is, 2)];
            T8  = ri[WS(is, 10)];
            Tu  = ii[WS(is, 2)];
            Tv  = ii[WS(is, 10)];
            T4  = ri[WS(is, 4)];
            Tr  = ii[WS(is, 4)];
            T1  = ri[0];
            T2  = ri[WS(is, 8)];
            To  = ii[0];
            Tp  = ii[WS(is, 8)];
            Tc  = ri[WS(is, 3)];
            Td  = ri[WS(is, 11)];
            TH  = ii[WS(is, 3)];
            T10 = T8 - T7;
            T9  = T7 + T8;
            TD  = Tu - Tv;
            Tw  = Tu + Tv;
            T16 = SIMD_FNMADD(KP577350269, T4, Tr);
            TY  = SIMD_FNMADD(KP577350269, Tr, T4);
            TB  = SIMD_FMADD(KP577350269, T4, Tr);
            T1j = SIMD_FMADD(KP577350269, Tr, T4);
            Tz  = SIMD_FNMADD(KP500000000, T2, T1);
            T3  = T1 + T2;
            TW  = SIMD_FNMADD(KP500000000, Tp, To);
            Tq  = To + Tp;
            T1t = SIMD_FNMADD(KP500000000, Td, Tc);
            Te  = Tc + Td;
            T2p = T6 - T9;
            Ta  = T6 + T9;
            T18 = SIMD_FMADD(KP577350269, T9, TD);
            TE  = SIMD_FNMADD(KP577350269, T9, TD);
            T11 = SIMD_FNMADD(KP577350269, Tw, T10);
            T1l = SIMD_FMADD(KP577350269, Tw, T10);
            Tx  = Tt + Tw;
            T2C = Tt - Tw;
            T15 = SIMD_FNMADD(KP866025403, Tp, Tz);
            TA  = SIMD_FMADD(KP866025403, Tp, Tz);
            T2B = T3 - T4;
            T5  = T3 + T4;
            TX  = SIMD_FNMADD(KP866025403, T2, TW);
            T1i = SIMD_FMADD(KP866025403, T2, TW);
            Ts  = Tq + Tr;
            T2q = Tq - Tr;
            TI  = ii[WS(is, 11)];
            Tf  = ri[WS(is, 7)];
            TL  = ii[WS(is, 7)];
            Ti  = ri[WS(is, 9)];
            Tj  = ri[WS(is, 1)];
            TO  = ii[WS(is, 9)];
            TP  = ii[WS(is, 1)];
            Th  = ri[WS(is, 5)];
            TS  = ii[WS(is, 5)];
            T2P = T5 - Ta;
            Tb  = T5 + Ta;
            T2L = Ts + Tx;
            Ty  = Ts - Tx;
            {
                SIMD_FLOAT T2w, Tg, T1B, T1f, T1X, TT, T2M, T2y, T1W, T1A, T2s,
                    Tl, T2N, T2u, T1e;
                SIMD_FLOAT TR, T1Z, T1u, T2x, TJ, T1v, T1c, T20, TM, T1z, Tk,
                    T2t, TQ, T1b, TK;
                T1Z = SIMD_FNMADD(KP866025403, TI, T1t);
                T1u = SIMD_FMADD(KP866025403, TI, T1t);
                T2x = TH + TI;
                TJ  = SIMD_FNMADD(KP500000000, TI, TH);
                T2w = Te - Tf;
                Tg  = Te + Tf;
                T1v = SIMD_FMADD(KP577350269, Tf, TL);
                T1c = SIMD_FMADD(KP577350269, TL, Tf);
                T20 = SIMD_FNMADD(KP577350269, Tf, TL);
                TM  = SIMD_FNMADD(KP577350269, TL, Tf);
                T1z = SIMD_FNMADD(KP500000000, Tj, Ti);
                Tk  = Ti + Tj;
                T2t = TO + TP;
                TQ  = SIMD_FNMADD(KP500000000, TP, TO);
                T1B = SIMD_FNMADD(KP577350269, Th, TS);
                T1f = SIMD_FNMADD(KP577350269, TS, Th);
                T1X = SIMD_FMADD(KP577350269, Th, TS);
                TT  = SIMD_FMADD(KP577350269, TS, Th);
                T2M = T2x + TL;
                T2y = T2x - TL;
                T1b = SIMD_FMADD(KP866025403, Td, TJ);
                TK  = SIMD_FNMADD(KP866025403, Td, TJ);
                T1w = SIMD_FMADD(KP866025403, T1v, T1u);
                T1Q = SIMD_FNMADD(KP866025403, T1v, T1u);
                T21 = SIMD_FMADD(KP866025403, T20, T1Z);
                T2c = SIMD_FNMADD(KP866025403, T20, T1Z);
                T1W = SIMD_FMADD(KP866025403, TP, T1z);
                T1A = SIMD_FNMADD(KP866025403, TP, T1z);
                T2s = Th - Tk;
                Tl  = Th + Tk;
                T2N = TS + T2t;
                T2u = TS - T2t;
                T1e = SIMD_FNMADD(KP866025403, Tj, TQ);
                TR  = SIMD_FMADD(KP866025403, Tj, TQ);
                T2b = SIMD_FMADD(KP866025403, T1c, T1b);
                T1d = SIMD_FNMADD(KP866025403, T1c, T1b);
                TN  = SIMD_FMADD(KP866025403, TM, TK);
                T1s = SIMD_FNMADD(KP866025403, TM, TK);
                T2J = T2q - T2p;
                T2r = T2p + T2q;
                T28 = SIMD_FMADD(KP866025403, T1X, T1W);
                T1Y = SIMD_FNMADD(KP866025403, T1X, T1W);
                T1R = SIMD_FMADD(KP866025403, T1B, T1A);
                T1C = SIMD_FNMADD(KP866025403, T1B, T1A);
                T2D = T2B + T2C;
                T2F = T2B - T2C;
                Tm  = Tg + Tl;
                Tn  = Tg - Tl;
                T2O = T2M + T2N;
                T2Q = T2N - T2M;
                T1g = SIMD_FMADD(KP866025403, T1f, T1e);
                T29 = SIMD_FNMADD(KP866025403, T1f, T1e);
                T1y = SIMD_FMADD(KP866025403, TT, TR);
                TU  = SIMD_FNMADD(KP866025403, TT, TR);
                T2H = T2s + T2u;
                T2v = T2s - T2u;
                T2z = T2w + T2y;
                T2G = T2y - T2w;
            }
            {
                SIMD_FLOAT T17, T19, T27, T2n, T2m, T2o, T2e, T2i, T2j, T2h,
                    T2A, T2E, T25, T2K, T2I;
                SIMD_FLOAT T26, T2d, T2k, T2l, T2a, T2f, T2g, TZ, TF, TC, T1F,
                    T1J, T1r, T1O, T1M;
                SIMD_FLOAT T1I, T1E, T1G, T12, T1p, T1q, T1x, T1K, T1L, T1D,
                    T1H, T1N, TG, T1P, T1S;
                SIMD_FLOAT T1U, TV, T14, T1T, T13;
                io[WS(os, 18)] = Ty - Tn;
                io[WS(os, 6)]  = Tn + Ty;
                ro[0]          = Tb + Tm;
                ro[WS(os, 12)] = Tb - Tm;
                ro[WS(os, 6)]  = T2P + T2Q;
                ro[WS(os, 18)] = T2P - T2Q;
                io[0]          = T2L + T2O;
                io[WS(os, 12)] = T2L - T2O;
                T2A            = T2v - T2z;
                T2E            = T2z + T2v;
                T17            = SIMD_FMADD(KP866025403, T16, T15);
                T25            = SIMD_FNMADD(KP866025403, T16, T15);
                T2K            = T2G + T2H;
                T2I            = T2G - T2H;
                T26            = SIMD_FMADD(KP866025403, T1l, Tt);
                T1m            = SIMD_FNMADD(KP866025403, T1l, Tt);
                T2d            = T2b + T2c;
                T2k            = T2c - T2b;
                T2l            = T29 + T28;
                T2a            = T28 - T29;
                T1k            = SIMD_FNMADD(KP866025403, T1j, T1i);
                T2f            = SIMD_FMADD(KP866025403, T1j, T1i);
                T2g            = SIMD_FMADD(KP866025403, T18, T6);
                T19            = SIMD_FNMADD(KP866025403, T18, T6);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2E, T2D);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2E, T2D);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2A, T2r);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2A, T2r);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2K, T2J);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2K, T2J);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2I, T2F);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2I, T2F);
                T27            = T25 + T26;
                T2n            = T25 - T26;
                T2m            = T2k + T2l;
                T2o            = T2l - T2k;
                T2e            = T2a - T2d;
                T2i            = T2d + T2a;
                T2j            = T2f - T2g;
                T2h            = T2f + T2g;
                TZ             = SIMD_FMADD(KP866025403, TY, TX);
                T1p            = SIMD_FNMADD(KP866025403, TY, TX);
                T1q            = SIMD_FNMADD(KP866025403, TE, T6);
                TF             = SIMD_FMADD(KP866025403, TE, T6);
                T1x            = T1s + T1w;
                T1K            = T1s - T1w;
                T1L            = T1y + T1C;
                T1D            = T1y - T1C;
                ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2o, T2n);
                ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2o, T2n);
                TC             = SIMD_FNMADD(KP866025403, TB, TA);
                T1F            = SIMD_FMADD(KP866025403, TB, TA);
                ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2e, T27);
                ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2e, T27);
                io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2i, T2h);
                io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2i, T2h);
                io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2m, T2j);
                io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2m, T2j);
                T1J            = T1p - T1q;
                T1r            = T1p + T1q;
                T1O            = T1K + T1L;
                T1M            = T1K - T1L;
                T1I            = T1x + T1D;
                T1E            = T1x - T1D;
                T1G            = SIMD_FNMADD(KP866025403, T11, Tt);
                T12            = SIMD_FMADD(KP866025403, T11, Tt);
                io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1M, T1J);
                io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1M, T1J);
                io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1E, T1r);
                io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1E, T1r);
                T1H            = T1F + T1G;
                T1N            = T1F - T1G;
                TG             = TC - TF;
                T1P            = TC + TF;
                T1S            = T1Q + T1R;
                T1U            = T1R - T1Q;
                TV             = TN - TU;
                T14            = TN + TU;
                T1T            = TZ - T12;
                T13            = TZ + T12;
                ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1O, T1N);
                ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1O, T1N);
                ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1I, T1H);
                ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1I, T1H);
                ro[WS(os, 16)] = T1P + T1S;
                ro[WS(os, 4)]  = T1P - T1S;
                ro[WS(os, 10)] = TG + TV;
                ro[WS(os, 22)] = TG - TV;
                io[WS(os, 16)] = T13 + T14;
                io[WS(os, 4)]  = T13 - T14;
                io[WS(os, 10)] = T1T + T1U;
                io[WS(os, 22)] = T1T - T1U;
                T23            = T17 + T19;
                T1a            = T17 - T19;
            }
        }
        T22            = T1Y - T21;
        T24            = T21 + T1Y;
        T1h            = T1d - T1g;
        T1o            = T1d + T1g;
        T1n            = T1k + T1m;
        T1V            = T1k - T1m;
        ro[WS(os, 8)]  = T23 + T24;
        ro[WS(os, 20)] = T23 - T24;
        ro[WS(os, 2)]  = T1a + T1h;
        ro[WS(os, 14)] = T1a - T1h;
        io[WS(os, 2)]  = T1V + T22;
        io[WS(os, 14)] = T1V - T22;
        io[WS(os, 8)]  = T1n + T1o;
        io[WS(os, 20)] = T1n - T1o;
    }
}

template <>
struct c2cf_traits<24, 13>
{
    static constexpr long_t flops           = 288;
    static constexpr long_t operations      = 204;
    static constexpr long_t memory_accesses = 74;
    static constexpr long_t stack_vars      = 150;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 13 -name c2cf
 * -standalone */

/*
 * This function contains 204 FP additions, 84 FP multiplications,
 * (or, 120 additions, 0 multiplications, 84 fused multiply/add),
 * 150 stack variables, 4 constants, and 74 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 13>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1g, T29, T28, T2a, T1n, T1u, T21, T1t;
        {
            SIMD_FLOAT T8, Tx, T2v, Tc, T1e, TJ, T17, T1r, TB, T2I, T2y, Tn,
                T2T, T2A, T2e;
            SIMD_FLOAT T24, T1X, T1I, T4, T2f, T1m, TZ, T1E, T2C, Ti, T1i, TR,
                T3, Ts, T2S;
            SIMD_FLOAT T2E, T1h, TP, T1C, T1W, T5, T2i, T27, Tt, Tu, T1b, TE,
                T1o, T12, T9;
            SIMD_FLOAT Ta, Ty, Tz, Tk, Tl, TT, TU, Tj, TX, Tp, To, T2h, T1j, TS,
                T1y;
            SIMD_FLOAT T2U, T2W, T6, TF, T13, Tv, T2N, T2B, T2F, T2M;
            T8 = ri[WS(is, 6)];
            Tx = ii[WS(is, 6)];
            T9 = ri[WS(is, 2)];
            Ta = ri[WS(is, 10)];
            Ty = ii[WS(is, 2)];
            Tz = ii[WS(is, 10)];
            Tk = ri[WS(is, 9)];
            Tl = ri[WS(is, 1)];
            TT = ii[WS(is, 9)];
            TU = ii[WS(is, 1)];
            Tj = ri[WS(is, 5)];
            TX = ii[WS(is, 5)];
            {
                SIMD_FLOAT Tf, TM, T1H, T1l, T23, TY, T1z, Tg, T22, T1G, T1k,
                    TW, TN, Th, TQ;
                SIMD_FLOAT Te, T16, Tb, TI, TA, T1F, Tm, T2z, TV, T2, Tr, TD,
                    T11, T1, Tq;
                SIMD_FLOAT T25, T26, T1A, T2D, TO, T1B;
                Te  = ri[WS(is, 3)];
                Tf  = ri[WS(is, 11)];
                TM  = ii[WS(is, 3)];
                T16 = Ta - T9;
                Tb  = T9 + Ta;
                TI  = Ty - Tz;
                TA  = Ty + Tz;
                T1F = SIMD_FNMADD(KP500000000, Tl, Tk);
                Tm  = Tk + Tl;
                T2z = TT + TU;
                TV  = SIMD_FNMADD(KP500000000, TU, TT);
                T1H = SIMD_FNMADD(KP577350269, Tj, TX);
                T1l = SIMD_FNMADD(KP577350269, TX, Tj);
                T23 = SIMD_FMADD(KP577350269, Tj, TX);
                TY  = SIMD_FMADD(KP577350269, TX, Tj);
                T1z = SIMD_FNMADD(KP500000000, Tf, Te);
                Tg  = Te + Tf;
                T2v = T8 - Tb;
                Tc  = T8 + Tb;
                T1e = SIMD_FMADD(KP577350269, Tb, TI);
                TJ  = SIMD_FNMADD(KP577350269, Tb, TI);
                T17 = SIMD_FNMADD(KP577350269, TA, T16);
                T1r = SIMD_FMADD(KP577350269, TA, T16);
                TB  = Tx + TA;
                T2I = Tx - TA;
                T22 = SIMD_FMADD(KP866025403, TU, T1F);
                T1G = SIMD_FNMADD(KP866025403, TU, T1F);
                T2y = Tj - Tm;
                Tn  = Tj + Tm;
                T2T = TX + T2z;
                T2A = TX - T2z;
                T1k = SIMD_FNMADD(KP866025403, Tl, TV);
                TW  = SIMD_FMADD(KP866025403, Tl, TV);
                TN  = ii[WS(is, 11)];
                Th  = ri[WS(is, 7)];
                TQ  = ii[WS(is, 7)];
                T1  = ri[0];
                T2e = SIMD_FMADD(KP866025403, T23, T22);
                T24 = SIMD_FNMADD(KP866025403, T23, T22);
                T1X = SIMD_FMADD(KP866025403, T1H, T1G);
                T1I = SIMD_FNMADD(KP866025403, T1H, T1G);
                T2  = ri[WS(is, 8)];
                Tq  = ii[0];
                Tr  = ii[WS(is, 8)];
                T4  = ri[WS(is, 12)];
                T2f = SIMD_FNMADD(KP866025403, T1l, T1k);
                T1m = SIMD_FMADD(KP866025403, T1l, T1k);
                TZ  = SIMD_FNMADD(KP866025403, TY, TW);
                T1E = SIMD_FMADD(KP866025403, TY, TW);
                T25 = SIMD_FNMADD(KP866025403, TN, T1z);
                T1A = SIMD_FMADD(KP866025403, TN, T1z);
                T2D = TM + TN;
                TO  = SIMD_FNMADD(KP500000000, TN, TM);
                T2C = Tg - Th;
                Ti  = Tg + Th;
                T1B = SIMD_FMADD(KP577350269, Th, TQ);
                T1i = SIMD_FMADD(KP577350269, TQ, Th);
                T26 = SIMD_FNMADD(KP577350269, Th, TQ);
                TR  = SIMD_FNMADD(KP577350269, TQ, Th);
                TD  = SIMD_FNMADD(KP500000000, T2, T1);
                T3  = T1 + T2;
                T11 = SIMD_FNMADD(KP500000000, Tr, Tq);
                Ts  = Tq + Tr;
                T2S = T2D + TQ;
                T2E = T2D - TQ;
                T1h = SIMD_FMADD(KP866025403, Tf, TO);
                TP  = SIMD_FNMADD(KP866025403, Tf, TO);
                T1C = SIMD_FMADD(KP866025403, T1B, T1A);
                T1W = SIMD_FNMADD(KP866025403, T1B, T1A);
                T5  = ri[WS(is, 4)];
                T2i = SIMD_FNMADD(KP866025403, T26, T25);
                T27 = SIMD_FMADD(KP866025403, T26, T25);
                Tt  = ii[WS(is, 12)];
                Tu  = ii[WS(is, 4)];
                T1b = SIMD_FNMADD(KP866025403, Tr, TD);
                TE  = SIMD_FMADD(KP866025403, Tr, TD);
                T1o = SIMD_FMADD(KP866025403, T2, T11);
                T12 = SIMD_FNMADD(KP866025403, T2, T11);
            }
            Tp  = Ti - Tn;
            To  = Ti + Tn;
            T2h = SIMD_FMADD(KP866025403, T1i, T1h);
            T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
            TS  = SIMD_FMADD(KP866025403, TR, TP);
            T1y = SIMD_FNMADD(KP866025403, TR, TP);
            T2U = T2S + T2T;
            T2W = T2T - T2S;
            T6  = T4 + T5;
            TF  = SIMD_FNMADD(KP500000000, T5, T4);
            T13 = SIMD_FNMADD(KP500000000, Tu, Tt);
            Tv  = Tt + Tu;
            T2N = T2y + T2A;
            T2B = T2y - T2A;
            T2F = T2C + T2E;
            T2M = T2E - T2C;
            {
                SIMD_FLOAT T1s, TG, T14, T1d, T2d, T2s, T2o, T2k, T1q, T2l, T2m,
                    T1f, T2t, T2u, T2c;
                SIMD_FLOAT T2q, T2j, T1p, T2G, T2K, T2O, T2Q, T2b, T2r, T2g,
                    T2J, T2L, Td, T2V, T2R;
                SIMD_FLOAT TC, T2x, T2P, T7, T2H, T2w, Tw, T1c;
                T1s            = SIMD_FNMADD(KP866025403, T1r, Tx);
                T2c            = SIMD_FMADD(KP866025403, T1r, Tx);
                T2q            = T2i - T2h;
                T2j            = T2h + T2i;
                TG             = SIMD_FNMADD(KP866025403, Tu, TF);
                T1c            = SIMD_FMADD(KP866025403, Tu, TF);
                T7             = T3 + T6;
                T2H            = T3 - T6;
                T1p            = SIMD_FNMADD(KP866025403, T5, T13);
                T14            = SIMD_FMADD(KP866025403, T5, T13);
                T2w            = Ts - Tv;
                Tw             = Ts + Tv;
                T2G            = T2B - T2F;
                T2K            = T2F + T2B;
                T2O            = T2M - T2N;
                T2Q            = T2M + T2N;
                T1d            = T1b + T1c;
                T2b            = T1b - T1c;
                T2r            = T2f + T2e;
                T2g            = T2e - T2f;
                T2J            = T2H + T2I;
                T2L            = T2H - T2I;
                Td             = T7 + Tc;
                T2V            = T7 - Tc;
                T2R            = Tw + TB;
                TC             = Tw - TB;
                T2x            = T2v + T2w;
                T2P            = T2w - T2v;
                T2d            = T2b + T2c;
                T2t            = T2b - T2c;
                T2s            = T2q + T2r;
                T2u            = T2r - T2q;
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2O, T2L);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2O, T2L);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2K, T2J);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2K, T2J);
                ro[WS(os, 6)]  = T2V + T2W;
                ro[WS(os, 18)] = T2V - T2W;
                ro[0]          = Td + To;
                ro[WS(os, 12)] = Td - To;
                io[WS(os, 18)] = TC - Tp;
                io[WS(os, 6)]  = Tp + TC;
                io[0]          = T2R + T2U;
                io[WS(os, 12)] = T2R - T2U;
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2Q, T2P);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2Q, T2P);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2G, T2x);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2G, T2x);
                T2o            = T2j + T2g;
                T2k            = T2g - T2j;
                T1q            = T1o + T1p;
                T2l            = T1o - T1p;
                T2m            = SIMD_FMADD(KP866025403, T1e, T8);
                T1f            = SIMD_FNMADD(KP866025403, T1e, T8);
                ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2u, T2t);
                ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2u, T2t);
                {
                    SIMD_FLOAT T15, T1v, T1w, TK, T1D, T1Q, T1R, T1J, TH, T1L,
                        T2p, T2n, T1M, T18, TL;
                    SIMD_FLOAT T1V, T20, T1Y, T1U, T1O, T1T, T1N, T1P, T1x, T1S,
                        T1K, T1a, T19, T1Z, T10;
                    T15            = T12 + T14;
                    T1v            = T12 - T14;
                    T1w            = SIMD_FNMADD(KP866025403, TJ, T8);
                    TK             = SIMD_FMADD(KP866025403, TJ, T8);
                    T1D            = T1y + T1C;
                    T1Q            = T1y - T1C;
                    T1R            = T1E + T1I;
                    T1J            = T1E - T1I;
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2k, T2d);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2k, T2d);
                    TH             = TE + TG;
                    T1L            = TE - TG;
                    T2p            = T2l - T2m;
                    T2n            = T2l + T2m;
                    T1M            = SIMD_FNMADD(KP866025403, T17, Tx);
                    T18            = SIMD_FMADD(KP866025403, T17, Tx);
                    T1P            = T1v - T1w;
                    T1x            = T1v + T1w;
                    T1U            = T1Q + T1R;
                    T1S            = T1Q - T1R;
                    T1O            = T1D + T1J;
                    T1K            = T1D - T1J;
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2s, T2p);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2s, T2p);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2o, T2n);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2o, T2n);
                    T1T            = T1L - T1M;
                    T1N            = T1L + T1M;
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1S, T1P);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1S, T1P);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1K, T1x);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1K, T1x);
                    TL             = TH - TK;
                    T1V            = TH + TK;
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T1U, T1T);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T1U, T1T);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1O, T1N);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1O, T1N);
                    T20            = T1X - T1W;
                    T1Y            = T1W + T1X;
                    T1a            = TS + TZ;
                    T10            = TS - TZ;
                    ro[WS(os, 16)] = T1V + T1Y;
                    ro[WS(os, 4)]  = T1V - T1Y;
                    T19            = T15 + T18;
                    T1Z            = T15 - T18;
                    T1g            = T1d - T1f;
                    T29            = T1d + T1f;
                    ro[WS(os, 10)] = TL + T10;
                    ro[WS(os, 22)] = TL - T10;
                    T28            = T24 - T27;
                    T2a            = T27 + T24;
                    T1n            = T1j - T1m;
                    T1u            = T1j + T1m;
                    T21            = T1q - T1s;
                    T1t            = T1q + T1s;
                    io[WS(os, 10)] = T1Z + T20;
                    io[WS(os, 22)] = T1Z - T20;
                    io[WS(os, 16)] = T19 + T1a;
                    io[WS(os, 4)]  = T19 - T1a;
                }
            }
        }
        ro[WS(os, 8)]  = T29 + T2a;
        ro[WS(os, 20)] = T29 - T2a;
        ro[WS(os, 2)]  = T1g + T1n;
        ro[WS(os, 14)] = T1g - T1n;
        io[WS(os, 8)]  = T1t + T1u;
        io[WS(os, 20)] = T1t - T1u;
        io[WS(os, 2)]  = T21 + T28;
        io[WS(os, 14)] = T21 - T28;
    }
}

template <>
struct c2cf_traits<24, 14>
{
    static constexpr long_t flops           = 292;
    static constexpr long_t operations      = 208;
    static constexpr long_t memory_accesses = 76;
    static constexpr long_t stack_vars      = 155;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 14 -name c2cf
 * -standalone */

/*
 * This function contains 208 FP additions, 84 FP multiplications,
 * (or, 124 additions, 0 multiplications, 84 fused multiply/add),
 * 155 stack variables, 4 constants, and 76 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 14>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1x, T1v, T1l, T2e, T1z, T1s, T1y, T27;
        {
            SIMD_FLOAT T8, Tz, T2B, Tc, T1j, TL, T1c, T1w, TD, T2O, T2I, Ti,
                T2Y, T2K, T2o;
            SIMD_FLOAT T2d, T22, T1H, T2n, T1o, TU, T1D, T1g, TG, TZ, Tl, Tn,
                TV, T17, T1t;
            SIMD_FLOAT T1h, TI, T2N, T7, T19, T1u, Ty, T2C, T1M, T12, T1K, To,
                TW, T9, Ta;
            SIMD_FLOAT TA, TB, Te, Tf, TO, TP, Th, TS, T2S, T2L, T2P, T2R, Td,
                T31;
            T8 = ri[WS(is, 6)];
            Tz = ii[WS(is, 6)];
            T9 = ri[WS(is, 2)];
            Ta = ri[WS(is, 10)];
            TA = ii[WS(is, 2)];
            TB = ii[WS(is, 10)];
            Te = ri[WS(is, 3)];
            Tf = ri[WS(is, 11)];
            TO = ii[WS(is, 3)];
            TP = ii[WS(is, 11)];
            Th = ri[WS(is, 7)];
            TS = ii[WS(is, 7)];
            {
                SIMD_FLOAT T2, Ts, T1n, TT, TF, T3, T1m, TR, Tt, T4, T5, Tv, Tw,
                    T1G, T2c;
                SIMD_FLOAT T2b, T1F, T1, T1b, Tb, TK, TC, T1E, Tg, T2J, TQ, T10,
                    T16, Tu, TH;
                SIMD_FLOAT T6, T18, Tx, T11, Tj, Tk, Tm;
                T1  = ri[0];
                T2  = ri[WS(is, 8)];
                Ts  = ii[0];
                T1b = Ta - T9;
                Tb  = T9 + Ta;
                TK  = TA - TB;
                TC  = TA + TB;
                T1E = SIMD_FNMADD(KP500000000, Tf, Te);
                Tg  = Te + Tf;
                T2J = TO + TP;
                TQ  = SIMD_FNMADD(KP500000000, TP, TO);
                T1G = SIMD_FMADD(KP577350269, Th, TS);
                T1n = SIMD_FMADD(KP577350269, TS, Th);
                T2c = SIMD_FNMADD(KP577350269, Th, TS);
                TT  = SIMD_FNMADD(KP577350269, TS, Th);
                TF  = SIMD_FNMADD(KP500000000, T2, T1);
                T3  = T1 + T2;
                T2B = T8 - Tb;
                Tc  = T8 + Tb;
                T1j = SIMD_FMADD(KP577350269, Tb, TK);
                TL  = SIMD_FNMADD(KP577350269, Tb, TK);
                T1c = SIMD_FNMADD(KP577350269, TC, T1b);
                T1w = SIMD_FMADD(KP577350269, TC, T1b);
                TD  = Tz + TC;
                T2O = Tz - TC;
                T2b = SIMD_FNMADD(KP866025403, TP, T1E);
                T1F = SIMD_FMADD(KP866025403, TP, T1E);
                T2I = Tg - Th;
                Ti  = Tg + Th;
                T2Y = T2J + TS;
                T2K = T2J - TS;
                T1m = SIMD_FMADD(KP866025403, Tf, TQ);
                TR  = SIMD_FNMADD(KP866025403, Tf, TQ);
                Tt  = ii[WS(is, 8)];
                T4  = ri[WS(is, 12)];
                T5  = ri[WS(is, 4)];
                Tv  = ii[WS(is, 12)];
                T2o = SIMD_FNMADD(KP866025403, T2c, T2b);
                T2d = SIMD_FMADD(KP866025403, T2c, T2b);
                T22 = SIMD_FNMADD(KP866025403, T1G, T1F);
                T1H = SIMD_FMADD(KP866025403, T1G, T1F);
                Tw  = ii[WS(is, 4)];
                Tj  = ri[WS(is, 5)];
                Tk  = ri[WS(is, 13)];
                T10 = ii[WS(is, 5)];
                T2n = SIMD_FMADD(KP866025403, T1n, T1m);
                T1o = SIMD_FNMADD(KP866025403, T1n, T1m);
                TU  = SIMD_FMADD(KP866025403, TT, TR);
                T1D = SIMD_FNMADD(KP866025403, TT, TR);
                T1g = SIMD_FNMADD(KP866025403, Tt, TF);
                TG  = SIMD_FMADD(KP866025403, Tt, TF);
                T16 = SIMD_FNMADD(KP500000000, Tt, Ts);
                Tu  = Ts + Tt;
                TH  = SIMD_FNMADD(KP500000000, T5, T4);
                T6  = T4 + T5;
                T18 = SIMD_FNMADD(KP500000000, Tw, Tv);
                Tx  = Tv + Tw;
                TZ  = Tk - Tj;
                Tl  = Tj + Tk;
                T11 = ii[WS(is, 13)];
                Tm  = ri[WS(is, 9)];
                Tn  = ri[WS(is, 1)];
                TV  = ii[WS(is, 9)];
                T17 = SIMD_FNMADD(KP866025403, T2, T16);
                T1t = SIMD_FMADD(KP866025403, T2, T16);
                T1h = SIMD_FMADD(KP866025403, Tw, TH);
                TI  = SIMD_FNMADD(KP866025403, Tw, TH);
                T2N = T3 - T6;
                T7  = T3 + T6;
                T19 = SIMD_FMADD(KP866025403, T5, T18);
                T1u = SIMD_FNMADD(KP866025403, T5, T18);
                Ty  = Tu + Tx;
                T2C = Tu - Tx;
                T1M = T10 - T11;
                T12 = T10 + T11;
                T1K = SIMD_FNMADD(KP500000000, Tn, Tm);
                To  = Tm + Tn;
                TW  = ii[WS(is, 1)];
            }
            T2S = T2K - T2I;
            T2L = T2I + T2K;
            T2P = T2N + T2O;
            T2R = T2N - T2O;
            Td  = T7 + Tc;
            T31 = T7 - Tc;
            {
                SIMD_FLOAT TE, T2X, T2D, T2V, T13, T1q, T2E, T1i, T2p, T2w, T2r,
                    Tr, Tq, T2k, T2a;
                SIMD_FLOAT T23, T1O, T2Z, T2G, T1p, TY, T2z, T2j, T2s, T1k, T1N,
                    T29, Tp, T1L, T28;
                SIMD_FLOAT TX, T2F, T2h, T2i;
                TE  = Ty - TD;
                T2X = Ty + TD;
                T2D = T2B + T2C;
                T2V = T2C - T2B;
                T1N = SIMD_FNMADD(KP577350269, Tl, T1M);
                T29 = SIMD_FMADD(KP577350269, Tl, T1M);
                T13 = SIMD_FNMADD(KP577350269, T12, TZ);
                T1q = SIMD_FMADD(KP577350269, T12, TZ);
                Tp  = Tl + To;
                T2E = Tl - To;
                T1L = SIMD_FNMADD(KP866025403, TW, T1K);
                T28 = SIMD_FMADD(KP866025403, TW, T1K);
                TX  = SIMD_FNMADD(KP500000000, TW, TV);
                T2F = TV + TW;
                T1i = T1g + T1h;
                T2h = T1g - T1h;
                T2i = SIMD_FMADD(KP866025403, T1w, Tz);
                T1x = SIMD_FNMADD(KP866025403, T1w, Tz);
                T2p = T2n + T2o;
                T2w = T2o - T2n;
                T1v = T1t + T1u;
                T2r = T1t - T1u;
                Tr  = Ti - Tp;
                Tq  = Ti + Tp;
                T2k = SIMD_FMADD(KP866025403, T29, T28);
                T2a = SIMD_FNMADD(KP866025403, T29, T28);
                T23 = SIMD_FMADD(KP866025403, T1N, T1L);
                T1O = SIMD_FNMADD(KP866025403, T1N, T1L);
                T2Z = T12 + T2F;
                T2G = T12 - T2F;
                T1p = SIMD_FNMADD(KP866025403, Tn, TX);
                TY  = SIMD_FMADD(KP866025403, Tn, TX);
                T2z = T2h - T2i;
                T2j = T2h + T2i;
                T2s = SIMD_FMADD(KP866025403, T1j, T8);
                T1k = SIMD_FNMADD(KP866025403, T1j, T8);
                {
                    SIMD_FLOAT T1a, T1r, T14, T2v, T2t, TM, T1I, T1W, TJ, T1R,
                        T2W, T2U, T2Q, T2M, T2m;
                    SIMD_FLOAT T2x, T1P, T1X, T1V, T1C, T1S, T1d, T1A, T32, T30,
                        T2T, T2H, T2l, T1J, T1B;
                    SIMD_FLOAT T21, TN, T2u, T2q, T2A, T2y, T1U, T1Q, T20, T1Y,
                        T1Z, T1T, T2f, T2g, T26;
                    SIMD_FLOAT T24, T1f, T15, T25, T1e;
                    T1a            = T17 + T19;
                    T1A            = T17 - T19;
                    io[WS(os, 18)] = TE - Tr;
                    io[WS(os, 6)]  = Tr + TE;
                    ro[0]          = Td + Tq;
                    ro[WS(os, 12)] = Td - Tq;
                    T32            = T2Z - T2Y;
                    T30            = T2Y + T2Z;
                    T2T            = T2E + T2G;
                    T2H            = T2E - T2G;
                    T2l            = SIMD_FMADD(KP866025403, T1q, T1p);
                    T1r            = SIMD_FNMADD(KP866025403, T1q, T1p);
                    T14            = SIMD_FMADD(KP866025403, T13, TY);
                    T1J            = SIMD_FNMADD(KP866025403, T13, TY);
                    T2v            = T2r - T2s;
                    T2t            = T2r + T2s;
                    T1B            = SIMD_FNMADD(KP866025403, TL, T8);
                    TM             = SIMD_FMADD(KP866025403, TL, T8);
                    T1I            = T1D + T1H;
                    T1W            = T1D - T1H;
                    TJ             = TG + TI;
                    T1R            = TG - TI;
                    ro[WS(os, 6)]  = T31 + T32;
                    ro[WS(os, 18)] = T31 - T32;
                    io[0]          = T2X + T30;
                    io[WS(os, 12)] = T2X - T30;
                    T2W            = T2S + T2T;
                    T2U            = T2S - T2T;
                    T2Q            = T2L + T2H;
                    T2M            = T2H - T2L;
                    T2m            = T2k - T2l;
                    T2x            = T2l + T2k;
                    T1P            = T1J - T1O;
                    T1X            = T1J + T1O;
                    T1V            = T1A - T1B;
                    T1C            = T1A + T1B;
                    T1S            = SIMD_FNMADD(KP866025403, T1c, Tz);
                    T1d            = SIMD_FMADD(KP866025403, T1c, Tz);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2W, T2V);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2W, T2V);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2U, T2R);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2U, T2R);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T2Q, T2P);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T2Q, T2P);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2M, T2D);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2M, T2D);
                    T2u            = T2p + T2m;
                    T2q            = T2m - T2p;
                    T2A            = T2x - T2w;
                    T2y            = T2w + T2x;
                    T1U            = T1I + T1P;
                    T1Q            = T1I - T1P;
                    T20            = T1W + T1X;
                    T1Y            = T1W - T1X;
                    T1Z            = T1R - T1S;
                    T1T            = T1R + T1S;
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2u, T2t);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2u, T2t);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2q, T2j);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2q, T2j);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2A, T2z);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2A, T2z);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2y, T2v);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2y, T2v);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T1Q, T1C);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T1Q, T1C);
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1Y, T1V);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1Y, T1V);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T20, T1Z);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T20, T1Z);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T1U, T1T);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T1U, T1T);
                    T21            = TJ + TM;
                    TN             = TJ - TM;
                    T26            = T23 - T22;
                    T24            = T22 + T23;
                    T1f            = TU + T14;
                    T15            = TU - T14;
                    T25            = T1a - T1d;
                    T1e            = T1a + T1d;
                    T2f            = T1i + T1k;
                    T1l            = T1i - T1k;
                    T2g            = T2d + T2a;
                    T2e            = T2a - T2d;
                    T1z            = T1o + T1r;
                    T1s            = T1o - T1r;
                    ro[WS(os, 16)] = T21 + T24;
                    ro[WS(os, 4)]  = T21 - T24;
                    ro[WS(os, 10)] = TN + T15;
                    ro[WS(os, 22)] = TN - T15;
                    io[WS(os, 10)] = T25 + T26;
                    io[WS(os, 22)] = T25 - T26;
                    io[WS(os, 16)] = T1e + T1f;
                    io[WS(os, 4)]  = T1e - T1f;
                    ro[WS(os, 20)] = T2f - T2g;
                    ro[WS(os, 8)]  = T2f + T2g;
                }
            }
        }
        ro[WS(os, 2)]  = T1l + T1s;
        ro[WS(os, 14)] = T1l - T1s;
        T1y            = T1v + T1x;
        T27            = T1v - T1x;
        io[WS(os, 2)]  = T27 + T2e;
        io[WS(os, 14)] = T27 - T2e;
        io[WS(os, 8)]  = T1y + T1z;
        io[WS(os, 20)] = T1y - T1z;
    }
}

template <>
struct c2cf_traits<24, 15>
{
    static constexpr long_t flops           = 306;
    static constexpr long_t operations      = 216;
    static constexpr long_t memory_accesses = 78;
    static constexpr long_t stack_vars      = 148;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 15 -name c2cf
 * -standalone */

/*
 * This function contains 216 FP additions, 90 FP multiplications,
 * (or, 126 additions, 0 multiplications, 90 fused multiply/add),
 * 148 stack variables, 4 constants, and 78 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 15>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1H, T1E, T1u, T2o, T1J, T1B, T1I, T2h;
        {
            SIMD_FLOAT T2S, Tk, T38, T2U, T1r, TP, T1F, T1i, Te, T2L, T2n, T2y,
                T1R, T2c, T2x;
            SIMD_FLOAT T1x, T10, T1N, T1s, TR, T1k, T1G, T2Y, TH, T15, Tn, To,
                T1o, TK, T1d;
            SIMD_FLOAT T1C, T1p, TM, T2X, T7, T1f, T1D, TA, T2M, T1W, T18, Tp,
                T11, T12, T32;
            SIMD_FLOAT T2V, T2Z, T31, Tf, T3b;
            {
                SIMD_FLOAT TE, T1w, TZ, TD, T1j, Td, T1v, TX, TF, Tg, Th, TU,
                    TV, Tj, TY;
                SIMD_FLOAT T9, TC, T1Q, T2m, TO, Ta, T1h, T2l, T1P, T8, TB, Tb,
                    Tc, T1O, Ti;
                SIMD_FLOAT T2T, TW, T1, TQ, TG, T2, Tu, Tv, T4, T5, Tx, Ty, T16,
                    TJ, T3;
                SIMD_FLOAT T1c, Tw, TL, T6, T1e, Tz, T17, Tl, Tm;
                Tg  = ri[WS(is, 3)];
                Th  = ri[WS(is, 11)];
                TU  = ii[WS(is, 3)];
                TV  = ii[WS(is, 11)];
                Tj  = ri[WS(is, 7)];
                TY  = ii[WS(is, 7)];
                T8  = ri[WS(is, 6)];
                T9  = ri[WS(is, 14)];
                TB  = ii[WS(is, 6)];
                TC  = ii[WS(is, 14)];
                Tb  = ri[WS(is, 2)];
                Tc  = ri[WS(is, 10)];
                TE  = ii[WS(is, 2)];
                T1O = SIMD_FNMADD(KP500000000, Th, Tg);
                Ti  = Tg + Th;
                T2T = TU + TV;
                TW  = SIMD_FNMADD(KP500000000, TV, TU);
                T1Q = SIMD_FMADD(KP577350269, Tj, TY);
                T1w = SIMD_FMADD(KP577350269, TY, Tj);
                T2m = SIMD_FNMADD(KP577350269, Tj, TY);
                TZ  = SIMD_FNMADD(KP577350269, TY, Tj);
                TO  = SIMD_FNMADD(KP500000000, T9, T8);
                Ta  = T8 + T9;
                T1h = SIMD_FNMADD(KP500000000, TC, TB);
                TD  = TB + TC;
                T1j = Tc - Tb;
                Td  = Tb + Tc;
                T2l = SIMD_FNMADD(KP866025403, TV, T1O);
                T1P = SIMD_FMADD(KP866025403, TV, T1O);
                T2S = Ti - Tj;
                Tk  = Ti + Tj;
                T38 = T2T + TY;
                T2U = T2T - TY;
                T1v = SIMD_FMADD(KP866025403, Th, TW);
                TX  = SIMD_FNMADD(KP866025403, Th, TW);
                TF  = ii[WS(is, 10)];
                T1r = SIMD_FNMADD(KP866025403, TC, TO);
                TP  = SIMD_FMADD(KP866025403, TC, TO);
                T1F = SIMD_FMADD(KP866025403, T9, T1h);
                T1i = SIMD_FNMADD(KP866025403, T9, T1h);
                Te  = Ta + Td;
                T2L = Ta - Td;
                T2n = SIMD_FMADD(KP866025403, T2m, T2l);
                T2y = SIMD_FNMADD(KP866025403, T2m, T2l);
                T1R = SIMD_FMADD(KP866025403, T1Q, T1P);
                T2c = SIMD_FNMADD(KP866025403, T1Q, T1P);
                T1  = ri[0];
                T2x = SIMD_FMADD(KP866025403, T1w, T1v);
                T1x = SIMD_FNMADD(KP866025403, T1w, T1v);
                T10 = SIMD_FMADD(KP866025403, TZ, TX);
                T1N = SIMD_FNMADD(KP866025403, TZ, TX);
                TQ  = TE - TF;
                TG  = TE + TF;
                T2  = ri[WS(is, 8)];
                Tu  = ii[0];
                Tv  = ii[WS(is, 8)];
                T4  = ri[WS(is, 12)];
                T5  = ri[WS(is, 4)];
                Tx  = ii[WS(is, 12)];
                Ty  = ii[WS(is, 4)];
                Tl  = ri[WS(is, 5)];
                Tm  = ri[WS(is, 13)];
                T16 = ii[WS(is, 5)];
                T1s = SIMD_FMADD(KP577350269, Td, TQ);
                TR  = SIMD_FNMADD(KP577350269, Td, TQ);
                T1k = SIMD_FNMADD(KP577350269, TG, T1j);
                T1G = SIMD_FMADD(KP577350269, TG, T1j);
                T2Y = TD - TG;
                TH  = TD + TG;
                TJ  = SIMD_FNMADD(KP500000000, T2, T1);
                T3  = T1 + T2;
                T1c = SIMD_FNMADD(KP500000000, Tv, Tu);
                Tw  = Tu + Tv;
                TL  = SIMD_FNMADD(KP500000000, T5, T4);
                T6  = T4 + T5;
                T1e = SIMD_FNMADD(KP500000000, Ty, Tx);
                Tz  = Tx + Ty;
                T15 = Tm - Tl;
                Tn  = Tl + Tm;
                T17 = ii[WS(is, 13)];
                To  = ri[WS(is, 9)];
                T1o = SIMD_FNMADD(KP866025403, Tv, TJ);
                TK  = SIMD_FMADD(KP866025403, Tv, TJ);
                T1d = SIMD_FNMADD(KP866025403, T2, T1c);
                T1C = SIMD_FMADD(KP866025403, T2, T1c);
                T1p = SIMD_FMADD(KP866025403, Ty, TL);
                TM  = SIMD_FNMADD(KP866025403, Ty, TL);
                T2X = T3 - T6;
                T7  = T3 + T6;
                T1f = SIMD_FMADD(KP866025403, T5, T1e);
                T1D = SIMD_FNMADD(KP866025403, T5, T1e);
                TA  = Tw + Tz;
                T2M = Tw - Tz;
                T1W = T16 - T17;
                T18 = T16 + T17;
                Tp  = ri[WS(is, 1)];
                T11 = ii[WS(is, 9)];
                T12 = ii[WS(is, 1)];
            }
            T32 = T2U - T2S;
            T2V = T2S + T2U;
            T2Z = T2X + T2Y;
            T31 = T2X - T2Y;
            Tf  = T7 + Te;
            T3b = T7 - Te;
            {
                SIMD_FLOAT TI, T37, T2N, T35, T1X, T2j, T19, T1z, T1q, T2z, T2G,
                    T2B, T2C, T1t, T1V;
                SIMD_FLOAT T2i, Tr, T2O, T2Q, T39, T14, T1y, T2t, T2J, Tq, T1U,
                    T13, T2P, T2r, T2s;
                TI  = TA - TH;
                T37 = TA + TH;
                T2N = T2L + T2M;
                T35 = T2M - T2L;
                T1X = SIMD_FNMADD(KP577350269, Tn, T1W);
                T2j = SIMD_FMADD(KP577350269, Tn, T1W);
                T19 = SIMD_FNMADD(KP577350269, T18, T15);
                T1z = SIMD_FMADD(KP577350269, T18, T15);
                Tq  = To + Tp;
                T1U = SIMD_FNMADD(KP500000000, Tp, To);
                T13 = SIMD_FNMADD(KP500000000, T12, T11);
                T2P = T11 + T12;
                T1q = T1o + T1p;
                T2r = T1o - T1p;
                T2s = SIMD_FMADD(KP866025403, T1G, T1F);
                T1H = SIMD_FNMADD(KP866025403, T1G, T1F);
                T2z = T2x + T2y;
                T2G = T2y - T2x;
                T1E = T1C + T1D;
                T2B = T1C - T1D;
                T2C = SIMD_FMADD(KP866025403, T1s, T1r);
                T1t = SIMD_FNMADD(KP866025403, T1s, T1r);
                T1V = SIMD_FNMADD(KP866025403, T12, T1U);
                T2i = SIMD_FMADD(KP866025403, T12, T1U);
                Tr  = Tn + Tq;
                T2O = Tn - Tq;
                T2Q = T18 - T2P;
                T39 = T18 + T2P;
                T14 = SIMD_FMADD(KP866025403, Tp, T13);
                T1y = SIMD_FNMADD(KP866025403, Tp, T13);
                T2t = T2r + T2s;
                T2J = T2r - T2s;
                {
                    SIMD_FLOAT T1g, T2F, T2D, T2k, T2d, T1A, T1a, TS, T1S, T26,
                        TN, T21, T36, T34, T30;
                    SIMD_FLOAT T2W, T2w, T2H, T1Z, T27, T25, T1M, T22, T1l, T1K,
                        T2u, T1Y, Tt, Ts, T3c;
                    SIMD_FLOAT T3a, T33, T2R, T2v, T1T, T1L, T2b, TT, T2E, T2A,
                        T2K, T2I, T24, T20, T2a;
                    SIMD_FLOAT T28, T29, T23, T2p, T2q, T2g, T2e, T1n, T1b, T2f,
                        T1m;
                    T1g            = T1d + T1f;
                    T1K            = T1d - T1f;
                    T2F            = T2B - T2C;
                    T2D            = T2B + T2C;
                    T2u            = SIMD_FMADD(KP866025403, T2j, T2i);
                    T2k            = SIMD_FNMADD(KP866025403, T2j, T2i);
                    T2d            = SIMD_FMADD(KP866025403, T1X, T1V);
                    T1Y            = SIMD_FNMADD(KP866025403, T1X, T1V);
                    Tt             = Tk - Tr;
                    Ts             = Tk + Tr;
                    T3c            = T39 - T38;
                    T3a            = T38 + T39;
                    T33            = T2O + T2Q;
                    T2R            = T2O - T2Q;
                    T2v            = SIMD_FMADD(KP866025403, T1z, T1y);
                    T1A            = SIMD_FNMADD(KP866025403, T1z, T1y);
                    T1a            = SIMD_FMADD(KP866025403, T19, T14);
                    T1T            = SIMD_FNMADD(KP866025403, T19, T14);
                    T1L            = SIMD_FNMADD(KP866025403, TR, TP);
                    TS             = SIMD_FMADD(KP866025403, TR, TP);
                    T1S            = T1N + T1R;
                    T26            = T1N - T1R;
                    TN             = TK + TM;
                    T21            = TK - TM;
                    io[WS(os, 18)] = TI - Tt;
                    io[WS(os, 6)]  = Tt + TI;
                    ro[0]          = Tf + Ts;
                    ro[WS(os, 12)] = Tf - Ts;
                    ro[WS(os, 6)]  = T3b + T3c;
                    ro[WS(os, 18)] = T3b - T3c;
                    io[0]          = T37 + T3a;
                    io[WS(os, 12)] = T37 - T3a;
                    T36            = T32 + T33;
                    T34            = T32 - T33;
                    T30            = T2V + T2R;
                    T2W            = T2R - T2V;
                    T2w            = T2u - T2v;
                    T2H            = T2v + T2u;
                    T1Z            = T1T - T1Y;
                    T27            = T1T + T1Y;
                    T25            = T1K - T1L;
                    T1M            = T1K + T1L;
                    T22            = SIMD_FNMADD(KP866025403, T1k, T1i);
                    T1l            = SIMD_FMADD(KP866025403, T1k, T1i);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T36, T35);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T36, T35);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T34, T31);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T34, T31);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T30, T2Z);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T30, T2Z);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T2W, T2N);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T2W, T2N);
                    T2E            = T2z + T2w;
                    T2A            = T2w - T2z;
                    T2K            = T2H - T2G;
                    T2I            = T2G + T2H;
                    T24            = T1S + T1Z;
                    T20            = T1S - T1Z;
                    T2a            = T26 + T27;
                    T28            = T26 - T27;
                    T29            = T21 - T22;
                    T23            = T21 + T22;
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2E, T2D);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2E, T2D);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2A, T2t);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2A, T2t);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2K, T2J);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2K, T2J);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2I, T2F);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2I, T2F);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T20, T1M);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T20, T1M);
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T28, T25);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T28, T25);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2a, T29);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2a, T29);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T24, T23);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T24, T23);
                    T2b            = TN + TS;
                    TT             = TN - TS;
                    T2g            = T2d - T2c;
                    T2e            = T2c + T2d;
                    T1n            = T10 + T1a;
                    T1b            = T10 - T1a;
                    T2f            = T1g - T1l;
                    T1m            = T1g + T1l;
                    T2p            = T1q + T1t;
                    T1u            = T1q - T1t;
                    T2q            = T2n + T2k;
                    T2o            = T2k - T2n;
                    T1J            = T1x + T1A;
                    T1B            = T1x - T1A;
                    ro[WS(os, 16)] = T2b + T2e;
                    ro[WS(os, 4)]  = T2b - T2e;
                    ro[WS(os, 10)] = TT + T1b;
                    ro[WS(os, 22)] = TT - T1b;
                    io[WS(os, 10)] = T2f + T2g;
                    io[WS(os, 22)] = T2f - T2g;
                    io[WS(os, 16)] = T1m + T1n;
                    io[WS(os, 4)]  = T1m - T1n;
                    ro[WS(os, 20)] = T2p - T2q;
                    ro[WS(os, 8)]  = T2p + T2q;
                }
            }
        }
        ro[WS(os, 2)]  = T1u + T1B;
        ro[WS(os, 14)] = T1u - T1B;
        T1I            = T1E + T1H;
        T2h            = T1E - T1H;
        io[WS(os, 2)]  = T2h + T2o;
        io[WS(os, 14)] = T2h - T2o;
        io[WS(os, 8)]  = T1I + T1J;
        io[WS(os, 20)] = T1I - T1J;
    }
}

template <>
struct c2cf_traits<24, 16>
{
    static constexpr long_t flops           = 304;
    static constexpr long_t operations      = 220;
    static constexpr long_t memory_accesses = 80;
    static constexpr long_t stack_vars      = 152;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 16 -name c2cf
 * -standalone */

/*
 * This function contains 220 FP additions, 84 FP multiplications,
 * (or, 136 additions, 0 multiplications, 84 fused multiply/add),
 * 152 stack variables, 4 constants, and 80 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 16>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1L, T1I, T2u, T1y, T2v, T2t, T1N, T1F, T1M, T2m;
        {
            SIMD_FLOAT T1s, TM, T1h, T1G, T1t, TO, T33, T7, T1j, T1H, TC, T2R,
                T1v, TR, T1J;
            SIMD_FLOAT T1m, Te, T2Q, TT, T1w, T1K, T1o, TJ, T34, TZ, T1z, T19,
                Tp, Tm, T2X;
            SIMD_FLOAT T30, T3e, T13, T1A, Tq, Tr, T15, T21, T1c, T2D, T2s, T2h,
                T1W, T16, T3h;
            SIMD_FLOAT Tf, T3d, TK, T1B, T2C, T1R, T14, T2o, T22, T1D, T1d, T2U,
                T17, T3b, T2S;
            SIMD_FLOAT T35, T37, T38, T31, T2n, T20, T2T, Tt, T1Z, Ts;
            {
                SIMD_FLOAT Tb, Ta, TF, Tc, TG, TH, T1, T2, Tw, Tx, T4, T5, Tz,
                    TA, T9;
                SIMD_FLOAT TE, TQ, T1l, T8, TD, TL, T3, T1g, Ty, TN, T6, T1i,
                    TB, Tg, Th;
                SIMD_FLOAT TW, TX, Tj, T1n, Td, TS, TI, Tk, T10, T11, T1T, T2q,
                    T1a, T1b, T1V;
                SIMD_FLOAT T2r, Ti, T2Y, Tl, T1U, T12, T2Z, Tn, T1S, TY, To;
                T1  = ri[0];
                T2  = ri[WS(is, 8)];
                Tw  = ii[0];
                Tx  = ii[WS(is, 8)];
                T4  = ri[WS(is, 12)];
                T5  = ri[WS(is, 4)];
                Tz  = ii[WS(is, 12)];
                TA  = ii[WS(is, 4)];
                T8  = ri[WS(is, 6)];
                T9  = ri[WS(is, 14)];
                TD  = ii[WS(is, 6)];
                TE  = ii[WS(is, 14)];
                Tb  = ri[WS(is, 2)];
                TL  = SIMD_FNMADD(KP500000000, T2, T1);
                T3  = T1 + T2;
                T1g = SIMD_FNMADD(KP500000000, Tx, Tw);
                Ty  = Tw + Tx;
                TN  = SIMD_FNMADD(KP500000000, T5, T4);
                T6  = T4 + T5;
                T1i = SIMD_FNMADD(KP500000000, TA, Tz);
                TB  = Tz + TA;
                TQ  = SIMD_FNMADD(KP500000000, T9, T8);
                Ta  = T8 + T9;
                T1l = SIMD_FNMADD(KP500000000, TE, TD);
                TF  = TD + TE;
                T1s = SIMD_FNMADD(KP866025403, Tx, TL);
                TM  = SIMD_FMADD(KP866025403, Tx, TL);
                T1h = SIMD_FNMADD(KP866025403, T2, T1g);
                T1G = SIMD_FMADD(KP866025403, T2, T1g);
                T1t = SIMD_FMADD(KP866025403, TA, TN);
                TO  = SIMD_FNMADD(KP866025403, TA, TN);
                T33 = T3 - T6;
                T7  = T3 + T6;
                T1j = SIMD_FMADD(KP866025403, T5, T1i);
                T1H = SIMD_FNMADD(KP866025403, T5, T1i);
                TC  = Ty + TB;
                T2R = Ty - TB;
                Tc  = ri[WS(is, 10)];
                TG  = ii[WS(is, 2)];
                TH  = ii[WS(is, 10)];
                T1v = SIMD_FNMADD(KP866025403, TE, TQ);
                TR  = SIMD_FMADD(KP866025403, TE, TQ);
                T1J = SIMD_FMADD(KP866025403, T9, T1l);
                T1m = SIMD_FNMADD(KP866025403, T9, T1l);
                Tg  = ri[WS(is, 3)];
                Th  = ri[WS(is, 11)];
                TW  = ii[WS(is, 3)];
                TX  = ii[WS(is, 11)];
                Tj  = ri[WS(is, 15)];
                T1n = Tc - Tb;
                Td  = Tb + Tc;
                TS  = TG - TH;
                TI  = TG + TH;
                Tk  = ri[WS(is, 7)];
                T10 = ii[WS(is, 15)];
                T11 = ii[WS(is, 7)];
                Tn  = ri[WS(is, 5)];
                T1S = SIMD_FNMADD(KP500000000, Th, Tg);
                Ti  = Tg + Th;
                T2Y = TW + TX;
                TY  = SIMD_FNMADD(KP500000000, TX, TW);
                To  = ri[WS(is, 13)];
                Te  = Ta + Td;
                T2Q = Ta - Td;
                TT  = SIMD_FNMADD(KP577350269, Td, TS);
                T1w = SIMD_FMADD(KP577350269, Td, TS);
                T1K = SIMD_FMADD(KP577350269, TI, T1n);
                T1o = SIMD_FNMADD(KP577350269, TI, T1n);
                TJ  = TF + TI;
                T34 = TF - TI;
                Tl  = Tj + Tk;
                T1U = SIMD_FNMADD(KP500000000, Tk, Tj);
                T12 = SIMD_FNMADD(KP500000000, T11, T10);
                T2Z = T10 + T11;
                T1T = SIMD_FMADD(KP866025403, TX, T1S);
                T2q = SIMD_FNMADD(KP866025403, TX, T1S);
                TZ  = SIMD_FNMADD(KP866025403, Th, TY);
                T1z = SIMD_FMADD(KP866025403, Th, TY);
                T19 = To - Tn;
                Tp  = Tn + To;
                T1a = ii[WS(is, 5)];
                T1b = ii[WS(is, 13)];
                T1V = SIMD_FNMADD(KP866025403, T11, T1U);
                T2r = SIMD_FMADD(KP866025403, T11, T1U);
                Tm  = Ti + Tl;
                T2X = Ti - Tl;
                T30 = T2Y - T2Z;
                T3e = T2Y + T2Z;
                T13 = SIMD_FMADD(KP866025403, Tk, T12);
                T1A = SIMD_FNMADD(KP866025403, Tk, T12);
                Tq  = ri[WS(is, 9)];
                Tr  = ri[WS(is, 1)];
                T15 = ii[WS(is, 9)];
                T21 = T1a - T1b;
                T1c = T1a + T1b;
                T2D = T2q - T2r;
                T2s = T2q + T2r;
                T2h = T1T + T1V;
                T1W = T1T - T1V;
                T16 = ii[WS(is, 1)];
            }
            T3h = T7 - Te;
            Tf  = T7 + Te;
            T3d = TC + TJ;
            TK  = TC - TJ;
            T1B = T1z + T1A;
            T2C = T1z - T1A;
            T1R = TZ - T13;
            T14 = TZ + T13;
            T1Z = SIMD_FNMADD(KP500000000, Tr, Tq);
            Ts  = Tq + Tr;
            T2o = SIMD_FMADD(KP577350269, Tp, T21);
            T22 = SIMD_FNMADD(KP577350269, Tp, T21);
            T1D = SIMD_FMADD(KP577350269, T1c, T19);
            T1d = SIMD_FNMADD(KP577350269, T1c, T19);
            T2U = T15 + T16;
            T17 = SIMD_FNMADD(KP500000000, T16, T15);
            T3b = T2R - T2Q;
            T2S = T2Q + T2R;
            T35 = T33 + T34;
            T37 = T33 - T34;
            T38 = T30 - T2X;
            T31 = T2X + T30;
            T2n = SIMD_FMADD(KP866025403, T16, T1Z);
            T20 = SIMD_FNMADD(KP866025403, T16, T1Z);
            T2T = Tp - Ts;
            Tt  = Tp + Ts;
            {
                SIMD_FLOAT T1u, T2p, T2i, T23, T2E, T2L, T1E, T1e, T1Y, T2G,
                    T2O, T2y, T3c, T3a, T36;
                SIMD_FLOAT T32, T2B, T2M, T2H, T1x, T3f, T2V, T1C, T18, T2w,
                    T2z, T2x, Tu, Tv, T3i;
                SIMD_FLOAT T3g, T39, T2W, T2A;
                T3f            = T1c + T2U;
                T2V            = T1c - T2U;
                T1C            = SIMD_FNMADD(KP866025403, Tr, T17);
                T18            = SIMD_FMADD(KP866025403, Tr, T17);
                T1u            = T1s + T1t;
                T2w            = T1s - T1t;
                T2z            = SIMD_FMADD(KP866025403, T2o, T2n);
                T2p            = SIMD_FNMADD(KP866025403, T2o, T2n);
                T2i            = SIMD_FMADD(KP866025403, T22, T20);
                T23            = SIMD_FNMADD(KP866025403, T22, T20);
                T2x            = SIMD_FMADD(KP866025403, T1K, T1J);
                T1L            = SIMD_FNMADD(KP866025403, T1K, T1J);
                Tu             = Tm + Tt;
                Tv             = Tm - Tt;
                T2E            = T2C + T2D;
                T2L            = T2D - T2C;
                T3i            = T3f - T3e;
                T3g            = T3e + T3f;
                T39            = T2T + T2V;
                T2W            = T2T - T2V;
                T2A            = SIMD_FMADD(KP866025403, T1D, T1C);
                T1E            = SIMD_FNMADD(KP866025403, T1D, T1C);
                T1e            = SIMD_FMADD(KP866025403, T1d, T18);
                T1Y            = SIMD_FNMADD(KP866025403, T1d, T18);
                T1I            = T1G + T1H;
                T2G            = T1G - T1H;
                T2O            = T2w - T2x;
                T2y            = T2w + T2x;
                io[WS(os, 18)] = TK - Tv;
                io[WS(os, 6)]  = Tv + TK;
                ro[0]          = Tf + Tu;
                ro[WS(os, 12)] = Tf - Tu;
                ro[WS(os, 6)]  = T3h + T3i;
                ro[WS(os, 18)] = T3h - T3i;
                io[0]          = T3d + T3g;
                io[WS(os, 12)] = T3d - T3g;
                T3c            = T38 + T39;
                T3a            = T38 - T39;
                T36            = T31 + T2W;
                T32            = T2W - T31;
                T2B            = T2z - T2A;
                T2M            = T2A + T2z;
                T2H            = SIMD_FMADD(KP866025403, T1w, T1v);
                T1x            = SIMD_FNMADD(KP866025403, T1w, T1v);
                {
                    SIMD_FLOAT T1k, TU, T1Q, T2f, TP, T1p, T29, T25, T2e, T28,
                        T1X, T24, T2a, T2d, T26;
                    SIMD_FLOAT T27, T1O, T1P, T2b, T2c, T2J, T2F, T2P, T2N, T2K,
                        T2I, TV, T2g, T2j, T2l;
                    SIMD_FLOAT T1f, T1r, T2k, T1q;
                    T1k            = T1h + T1j;
                    T1O            = T1h - T1j;
                    T1P            = SIMD_FNMADD(KP866025403, TT, TR);
                    TU             = SIMD_FMADD(KP866025403, TT, TR);
                    T1X            = T1R + T1W;
                    T2b            = T1R - T1W;
                    T2c            = T1Y + T23;
                    T24            = T1Y - T23;
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3c, T3b);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3c, T3b);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3a, T37);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3a, T37);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T36, T35);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T36, T35);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T32, T2S);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T32, T2S);
                    T2J            = T2E + T2B;
                    T2F            = T2B - T2E;
                    T2P            = T2M - T2L;
                    T2N            = T2L + T2M;
                    T2K            = T2G - T2H;
                    T2I            = T2G + T2H;
                    T2a            = T1O - T1P;
                    T1Q            = T1O + T1P;
                    T2f            = T2b + T2c;
                    T2d            = T2b - T2c;
                    TP             = TM + TO;
                    T26            = TM - TO;
                    T27            = SIMD_FNMADD(KP866025403, T1o, T1m);
                    T1p            = SIMD_FMADD(KP866025403, T1o, T1m);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2F, T2y);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2F, T2y);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2P, T2O);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2P, T2O);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2N, T2K);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2N, T2K);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2J, T2I);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2J, T2I);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2d, T2a);
                    T29            = T1X + T24;
                    T25            = T1X - T24;
                    T2e            = T26 - T27;
                    T28            = T26 + T27;
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2d, T2a);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T25, T1Q);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T25, T1Q);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2f, T2e);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2f, T2e);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T29, T28);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T29, T28);
                    TV             = TP - TU;
                    T2g            = TP + TU;
                    T2j            = T2h + T2i;
                    T2l            = T2i - T2h;
                    T1f            = T14 - T1e;
                    T1r            = T14 + T1e;
                    T2k            = T1k - T1p;
                    T1q            = T1k + T1p;
                    ro[WS(os, 16)] = T2g + T2j;
                    ro[WS(os, 4)]  = T2g - T2j;
                    ro[WS(os, 10)] = TV + T1f;
                    ro[WS(os, 22)] = TV - T1f;
                    io[WS(os, 16)] = T1q + T1r;
                    io[WS(os, 4)]  = T1q - T1r;
                    io[WS(os, 10)] = T2k + T2l;
                    io[WS(os, 22)] = T2k - T2l;
                    T2u            = T1u + T1x;
                    T1y            = T1u - T1x;
                    T2v            = T2s + T2p;
                    T2t            = T2p - T2s;
                    T1N            = T1B + T1E;
                    T1F            = T1B - T1E;
                }
            }
        }
        ro[WS(os, 8)]  = T2u + T2v;
        ro[WS(os, 20)] = T2u - T2v;
        ro[WS(os, 2)]  = T1y + T1F;
        ro[WS(os, 14)] = T1y - T1F;
        T1M            = T1I + T1L;
        T2m            = T1I - T1L;
        io[WS(os, 2)]  = T2m + T2t;
        io[WS(os, 14)] = T2m - T2t;
        io[WS(os, 8)]  = T1M + T1N;
        io[WS(os, 20)] = T1M - T1N;
    }
}

template <>
struct c2cf_traits<24, 17>
{
    static constexpr long_t flops           = 308;
    static constexpr long_t operations      = 224;
    static constexpr long_t memory_accesses = 82;
    static constexpr long_t stack_vars      = 166;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 17 -name c2cf
 * -standalone */

/*
 * This function contains 224 FP additions, 84 FP multiplications,
 * (or, 140 additions, 0 multiplications, 84 fused multiply/add),
 * 166 stack variables, 4 constants, and 82 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 17>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1q, T1v, T2m, T10, T2r, T2p, T1x, T1k, T1w, T2q;
        {
            SIMD_FLOAT T8, TF, T1z, TT, T1N, T1p, T5, TC, T1B, TW, T1s, T1P, TR,
                T1y, T1n;
            SIMD_FLOAT T1M, Tg, T2W, TY, T1C, T1Q, T1u, TN, T3a, T1e, Tr, Ts,
                T1F, T14, T33;
            SIMD_FLOAT To, T3k, T36, T1G, T18, T27, T1h, Tt, T1a, T2J, T2y, T2n,
                T22, T1b, T6;
            SIMD_FLOAT T7, TD, TE, T1, Ty, T2, T3, Tz, TA;
            T6 = ri[WS(is, 12)];
            T7 = ri[WS(is, 4)];
            TD = ii[WS(is, 12)];
            TE = ii[WS(is, 4)];
            T1 = ri[0];
            Ty = ii[0];
            T2 = ri[WS(is, 8)];
            T3 = ri[WS(is, 16)];
            Tz = ii[WS(is, 8)];
            TA = ii[WS(is, 16)];
            {
                SIMD_FLOAT T1m, TQ, Tc, TJ, TP, T1l, TK, T1t, Tf, TL, Tb, TI,
                    TV, T1r, Ta;
                SIMD_FLOAT TH, TS, T1o, Td, Te, T4, TB, Ti, Tj, TM, TX, T11,
                    T12, Tl, Tm;
                SIMD_FLOAT T15, T16, Tk, T13, T34, Tn, T20, T17, T35, T1Z, T2w,
                    T1f, T1g, Tp, T1Y;
                SIMD_FLOAT Tq, T2x, T21;
                Ta  = ri[WS(is, 6)];
                Tb  = ri[WS(is, 14)];
                TH  = ii[WS(is, 6)];
                T8  = T6 + T7;
                TS  = SIMD_FNMADD(KP500000000, T7, T6);
                TF  = TD + TE;
                T1o = SIMD_FNMADD(KP500000000, TE, TD);
                TI  = ii[WS(is, 14)];
                Td  = ri[WS(is, 2)];
                T1m = T3 - T2;
                T4  = T2 + T3;
                TQ  = Tz - TA;
                TB  = Tz + TA;
                TV  = SIMD_FNMADD(KP500000000, Tb, Ta);
                Tc  = Ta + Tb;
                Te  = ri[WS(is, 10)];
                T1z = SIMD_FMADD(KP866025403, TE, TS);
                TT  = SIMD_FNMADD(KP866025403, TE, TS);
                T1N = SIMD_FNMADD(KP866025403, T7, T1o);
                T1p = SIMD_FMADD(KP866025403, T7, T1o);
                TJ  = TH + TI;
                T1r = SIMD_FNMADD(KP500000000, TI, TH);
                T5  = T1 + T4;
                TP  = SIMD_FNMADD(KP500000000, T4, T1);
                TC  = Ty + TB;
                T1l = SIMD_FNMADD(KP500000000, TB, Ty);
                TK  = ii[WS(is, 2)];
                T1t = Te - Td;
                Tf  = Td + Te;
                TL  = ii[WS(is, 10)];
                T1B = SIMD_FNMADD(KP866025403, TI, TV);
                TW  = SIMD_FMADD(KP866025403, TI, TV);
                T1s = SIMD_FNMADD(KP866025403, Tb, T1r);
                T1P = SIMD_FMADD(KP866025403, Tb, T1r);
                TR  = SIMD_FMADD(KP866025403, TQ, TP);
                T1y = SIMD_FNMADD(KP866025403, TQ, TP);
                T1n = SIMD_FMADD(KP866025403, T1m, T1l);
                T1M = SIMD_FNMADD(KP866025403, T1m, T1l);
                Ti  = ri[WS(is, 3)];
                Tj  = ri[WS(is, 11)];
                Tg  = Tc + Tf;
                T2W = Tc - Tf;
                TM  = TK + TL;
                TX  = TK - TL;
                T11 = ii[WS(is, 3)];
                T12 = ii[WS(is, 11)];
                Tl  = ri[WS(is, 15)];
                Tm  = ri[WS(is, 7)];
                T15 = ii[WS(is, 15)];
                T16 = ii[WS(is, 7)];
                Tp  = ri[WS(is, 5)];
                T1Y = SIMD_FNMADD(KP500000000, Tj, Ti);
                Tk  = Ti + Tj;
                Tq  = ri[WS(is, 13)];
                TY  = SIMD_FNMADD(KP577350269, Tf, TX);
                T1C = SIMD_FMADD(KP577350269, Tf, TX);
                T1Q = SIMD_FMADD(KP577350269, TM, T1t);
                T1u = SIMD_FNMADD(KP577350269, TM, T1t);
                TN  = TJ + TM;
                T3a = TJ - TM;
                T13 = SIMD_FNMADD(KP500000000, T12, T11);
                T34 = T11 + T12;
                Tn  = Tl + Tm;
                T20 = SIMD_FNMADD(KP500000000, Tm, Tl);
                T17 = SIMD_FNMADD(KP500000000, T16, T15);
                T35 = T15 + T16;
                T1Z = SIMD_FMADD(KP866025403, T12, T1Y);
                T2w = SIMD_FNMADD(KP866025403, T12, T1Y);
                T1e = Tq - Tp;
                Tr  = Tp + Tq;
                T1f = ii[WS(is, 5)];
                T1g = ii[WS(is, 13)];
                Ts  = ri[WS(is, 9)];
                T1F = SIMD_FMADD(KP866025403, Tj, T13);
                T14 = SIMD_FNMADD(KP866025403, Tj, T13);
                T2x = SIMD_FMADD(KP866025403, T16, T20);
                T21 = SIMD_FNMADD(KP866025403, T16, T20);
                T33 = Tk - Tn;
                To  = Tk + Tn;
                T3k = T34 + T35;
                T36 = T34 - T35;
                T1G = SIMD_FNMADD(KP866025403, Tm, T17);
                T18 = SIMD_FMADD(KP866025403, Tm, T17);
                T27 = T1f - T1g;
                T1h = T1f + T1g;
                Tt  = ri[WS(is, 1)];
                T1a = ii[WS(is, 9)];
                T2J = T2w - T2x;
                T2y = T2w + T2x;
                T2n = T1Z + T21;
                T22 = T1Z - T21;
                T1b = ii[WS(is, 1)];
            }
            {
                SIMD_FLOAT T39, T2I, T1H, T19, T1X, T2u, T28, T1J, T1i, T3n, Th,
                    T3j, TO, T2Y, T3h;
                SIMD_FLOAT T3e, T37, T2t, T26, T2Z, Tv, T3l, T31, T1I, T1d, T9,
                    TG, T2X, T25, Tu;
                SIMD_FLOAT T30, T1c, T1A, T2v, T2o, T1R, T1K, T1j, T1O, T1D, TZ,
                    T1W, T2l, TU, T2f;
                SIMD_FLOAT T2b, T2k, T2e, T1E, T2A, T2z, T2B, T1L, T1T, T2s,
                    T1S;
                T39 = T5 - T8;
                T9  = T5 + T8;
                TG  = TC + TF;
                T2X = TC - TF;
                T2I = T1F - T1G;
                T1H = T1F + T1G;
                T19 = T14 + T18;
                T1X = T14 - T18;
                T2u = SIMD_FMADD(KP577350269, Tr, T27);
                T28 = SIMD_FNMADD(KP577350269, Tr, T27);
                T1J = SIMD_FMADD(KP577350269, T1h, T1e);
                T1i = SIMD_FNMADD(KP577350269, T1h, T1e);
                T25 = SIMD_FNMADD(KP500000000, Tt, Ts);
                Tu  = Ts + Tt;
                T30 = T1a + T1b;
                T1c = SIMD_FNMADD(KP500000000, T1b, T1a);
                T3n = T9 - Tg;
                Th  = T9 + Tg;
                T3j = TG + TN;
                TO  = TG - TN;
                T2Y = T2W + T2X;
                T3h = T2X - T2W;
                T3e = T36 - T33;
                T37 = T33 + T36;
                T2t = SIMD_FMADD(KP866025403, T1b, T25);
                T26 = SIMD_FNMADD(KP866025403, T1b, T25);
                T2Z = Tr - Tu;
                Tv  = Tr + Tu;
                T3l = T1h + T30;
                T31 = T1h - T30;
                T1I = SIMD_FNMADD(KP866025403, Tt, T1c);
                T1d = SIMD_FMADD(KP866025403, Tt, T1c);
                {
                    SIMD_FLOAT T3d, T3b, T29, T24, T2K, T2R, T2M, T2U, T2E, T3i,
                        T3g, T3c, T38, T2H, T2S;
                    SIMD_FLOAT T2N, T2C, T2F, T2D, Tw, Tx, T3o, T3m, T32, T3f,
                        T2G, T23, T2a, T2g, T2j;
                    SIMD_FLOAT T2c, T2d, T1U, T1V, T2h, T2i, T2P, T2L, T2V, T2T,
                        T2Q, T2O;
                    T1A            = T1y + T1z;
                    T2C            = T1y - T1z;
                    T3d            = T39 - T3a;
                    T3b            = T39 + T3a;
                    T2F            = SIMD_FMADD(KP866025403, T2u, T2t);
                    T2v            = SIMD_FNMADD(KP866025403, T2u, T2t);
                    T2o            = SIMD_FMADD(KP866025403, T28, T26);
                    T29            = SIMD_FNMADD(KP866025403, T28, T26);
                    T2D            = SIMD_FMADD(KP866025403, T1Q, T1P);
                    T1R            = SIMD_FNMADD(KP866025403, T1Q, T1P);
                    Tw             = To + Tv;
                    Tx             = To - Tv;
                    T3o            = T3l - T3k;
                    T3m            = T3k + T3l;
                    T32            = T2Z - T31;
                    T3f            = T2Z + T31;
                    T1K            = SIMD_FNMADD(KP866025403, T1J, T1I);
                    T2G            = SIMD_FMADD(KP866025403, T1J, T1I);
                    T24            = SIMD_FNMADD(KP866025403, T1i, T1d);
                    T1j            = SIMD_FMADD(KP866025403, T1i, T1d);
                    T2K            = T2I + T2J;
                    T2R            = T2J - T2I;
                    T1O            = T1M + T1N;
                    T2M            = T1M - T1N;
                    T2U            = T2C - T2D;
                    T2E            = T2C + T2D;
                    io[WS(os, 18)] = TO - Tx;
                    io[WS(os, 6)]  = Tx + TO;
                    ro[0]          = Th + Tw;
                    ro[WS(os, 12)] = Th - Tw;
                    io[WS(os, 12)] = T3j - T3m;
                    io[0]          = T3j + T3m;
                    ro[WS(os, 18)] = T3n - T3o;
                    ro[WS(os, 6)]  = T3n + T3o;
                    T3i            = T3e + T3f;
                    T3g            = T3e - T3f;
                    T3c            = T37 + T32;
                    T38            = T32 - T37;
                    T2H            = T2F - T2G;
                    T2S            = T2G + T2F;
                    T2N            = SIMD_FMADD(KP866025403, T1C, T1B);
                    T1D            = SIMD_FNMADD(KP866025403, T1C, T1B);
                    T1q            = T1n + T1p;
                    T1U            = T1n - T1p;
                    T1V            = SIMD_FNMADD(KP866025403, TY, TW);
                    TZ             = SIMD_FMADD(KP866025403, TY, TW);
                    T23            = T1X + T22;
                    T2h            = T1X - T22;
                    T2i            = T24 + T29;
                    T2a            = T24 - T29;
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3i, T3h);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3i, T3h);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3g, T3d);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3g, T3d);
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3c, T3b);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3c, T3b);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T38, T2Y);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T38, T2Y);
                    T2P            = T2K + T2H;
                    T2L            = T2H - T2K;
                    T2V            = T2S - T2R;
                    T2T            = T2R + T2S;
                    T2Q            = T2M - T2N;
                    T2O            = T2M + T2N;
                    T2g            = T1U - T1V;
                    T1W            = T1U + T1V;
                    T2l            = T2h + T2i;
                    T2j            = T2h - T2i;
                    TU             = TR + TT;
                    T2c            = TR - TT;
                    T2d            = SIMD_FNMADD(KP866025403, T1u, T1s);
                    T1v            = SIMD_FMADD(KP866025403, T1u, T1s);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2L, T2E);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2L, T2E);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T2V, T2U);
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T2V, T2U);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2T, T2Q);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2T, T2Q);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2P, T2O);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2P, T2O);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2j, T2g);
                    T2f            = T23 + T2a;
                    T2b            = T23 - T2a;
                    T2k            = T2c - T2d;
                    T2e            = T2c + T2d;
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2j, T2g);
                }
                io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2b, T1W);
                io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2b, T1W);
                ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2l, T2k);
                ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2l, T2k);
                ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2f, T2e);
                ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2f, T2e);
                T1E            = T1A - T1D;
                T2A            = T1A + T1D;
                T2z            = T2v - T2y;
                T2B            = T2y + T2v;
                T1L            = T1H - T1K;
                T1T            = T1H + T1K;
                T2s            = T1O - T1R;
                T1S            = T1O + T1R;
                ro[WS(os, 8)]  = T2A + T2B;
                ro[WS(os, 20)] = T2A - T2B;
                ro[WS(os, 2)]  = T1E + T1L;
                ro[WS(os, 14)] = T1E - T1L;
                io[WS(os, 8)]  = T1S + T1T;
                io[WS(os, 20)] = T1S - T1T;
                io[WS(os, 2)]  = T2s + T2z;
                io[WS(os, 14)] = T2s - T2z;
                T2m            = TU + TZ;
                T10            = TU - TZ;
                T2r            = T2o - T2n;
                T2p            = T2n + T2o;
                T1x            = T19 + T1j;
                T1k            = T19 - T1j;
            }
        }
        ro[WS(os, 16)] = T2m + T2p;
        ro[WS(os, 4)]  = T2m - T2p;
        ro[WS(os, 10)] = T10 + T1k;
        ro[WS(os, 22)] = T10 - T1k;
        T1w            = T1q + T1v;
        T2q            = T1q - T1v;
        io[WS(os, 10)] = T2q + T2r;
        io[WS(os, 22)] = T2q - T2r;
        io[WS(os, 16)] = T1w + T1x;
        io[WS(os, 4)]  = T1w - T1x;
    }
}

template <>
struct c2cf_traits<24, 18>
{
    static constexpr long_t flops           = 312;
    static constexpr long_t operations      = 228;
    static constexpr long_t memory_accesses = 84;
    static constexpr long_t stack_vars      = 172;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 18 -name c2cf
 * -standalone */

/*
 * This function contains 228 FP additions, 84 FP multiplications,
 * (or, 144 additions, 0 multiplications, 84 fused multiply/add),
 * 172 stack variables, 4 constants, and 84 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 18>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1H, T1O, T1K, T1R, T1E, T2x, T1L, T1T, T1S, T2w;
        {
            SIMD_FLOAT T8, TH, T1z, T1p, T1N, TV, T5, TE, T1s, T1B, TY, T1P,
                T1n, T1y, TT;
            SIMD_FLOAT T1M, Tg, T32, Ts, T26, T1u, T1C, T1Q, T10, TP, T3g, T14,
                T2z, T1Z, T39;
            SIMD_FLOAT To, T3q, T3c, T2A, T22, T2b, Tr, T2c, T1a, T24, T1j, T2P,
                T15, Tt, Tu;
            SIMD_FLOAT T6, T7, TF, TG, T1, TA, T2, T3, TB, TC;
            T6 = ri[WS(is, 12)];
            T7 = ri[WS(is, 4)];
            TF = ii[WS(is, 12)];
            TG = ii[WS(is, 4)];
            T1 = ri[0];
            TA = ii[0];
            T2 = ri[WS(is, 8)];
            T3 = ri[WS(is, 16)];
            TB = ii[WS(is, 8)];
            TC = ii[WS(is, 16)];
            {
                SIMD_FLOAT Tb, TS, T1m, Tc, TL, TX, T1l, TR, TM, TZ, Tf, TN, TK,
                    T1r, Ta;
                SIMD_FLOAT TJ, T1o, TU, Td, Te, T4, TD, Ti, Tj, TO, T1t, T1e,
                    T1X, Tl, Tm;
                SIMD_FLOAT T1h, T20, Tk, T1Y, T3a, Tn, T1g, T21, T3b, T1f, T1F,
                    Tp, Tq, T1d, T18;
                SIMD_FLOAT T19, T1G, T1i;
                Ta  = ri[WS(is, 6)];
                Tb  = ri[WS(is, 14)];
                TJ  = ii[WS(is, 6)];
                T8  = T6 + T7;
                T1o = SIMD_FNMADD(KP500000000, T7, T6);
                TH  = TF + TG;
                TU  = SIMD_FNMADD(KP500000000, TG, TF);
                TK  = ii[WS(is, 14)];
                Td  = ri[WS(is, 2)];
                TS  = T3 - T2;
                T4  = T2 + T3;
                T1m = TB - TC;
                TD  = TB + TC;
                T1r = SIMD_FNMADD(KP500000000, Tb, Ta);
                Tc  = Ta + Tb;
                Te  = ri[WS(is, 10)];
                T1z = SIMD_FNMADD(KP866025403, TG, T1o);
                T1p = SIMD_FMADD(KP866025403, TG, T1o);
                T1N = SIMD_FMADD(KP866025403, T7, TU);
                TV  = SIMD_FNMADD(KP866025403, T7, TU);
                TL  = TJ + TK;
                TX  = SIMD_FNMADD(KP500000000, TK, TJ);
                T5  = T1 + T4;
                T1l = SIMD_FNMADD(KP500000000, T4, T1);
                TE  = TA + TD;
                TR  = SIMD_FNMADD(KP500000000, TD, TA);
                TM  = ii[WS(is, 2)];
                TZ  = Te - Td;
                Tf  = Td + Te;
                TN  = ii[WS(is, 10)];
                T1s = SIMD_FNMADD(KP866025403, TK, T1r);
                T1B = SIMD_FMADD(KP866025403, TK, T1r);
                TY  = SIMD_FMADD(KP866025403, Tb, TX);
                T1P = SIMD_FNMADD(KP866025403, Tb, TX);
                T1n = SIMD_FNMADD(KP866025403, T1m, T1l);
                T1y = SIMD_FMADD(KP866025403, T1m, T1l);
                TT  = SIMD_FNMADD(KP866025403, TS, TR);
                T1M = SIMD_FMADD(KP866025403, TS, TR);
                Ti  = ri[WS(is, 3)];
                Tj  = ri[WS(is, 11)];
                Tg  = Tc + Tf;
                T32 = Tc - Tf;
                TO  = TM + TN;
                T1t = TM - TN;
                T1e = ii[WS(is, 11)];
                T1X = ii[WS(is, 3)];
                Tl  = ri[WS(is, 15)];
                Tm  = ri[WS(is, 7)];
                T1h = ii[WS(is, 7)];
                T20 = ii[WS(is, 15)];
                Ts  = ri[WS(is, 9)];
                T1d = SIMD_FNMADD(KP500000000, Tj, Ti);
                Tk  = Ti + Tj;
                T26 = ii[WS(is, 9)];
                T1u = SIMD_FMADD(KP577350269, Tf, T1t);
                T1C = SIMD_FNMADD(KP577350269, Tf, T1t);
                T1Q = SIMD_FNMADD(KP577350269, TO, TZ);
                T10 = SIMD_FMADD(KP577350269, TO, TZ);
                TP  = TL + TO;
                T3g = TL - TO;
                T1Y = SIMD_FNMADD(KP500000000, T1e, T1X);
                T3a = T1X + T1e;
                Tn  = Tl + Tm;
                T1g = SIMD_FNMADD(KP500000000, Tm, Tl);
                T21 = SIMD_FNMADD(KP500000000, T1h, T20);
                T3b = T20 + T1h;
                T1f = SIMD_FNMADD(KP866025403, T1e, T1d);
                T1F = SIMD_FMADD(KP866025403, T1e, T1d);
                Tp  = ri[WS(is, 5)];
                Tq  = ri[WS(is, 13)];
                T18 = ii[WS(is, 5)];
                T19 = ii[WS(is, 13)];
                T14 = ii[WS(is, 17)];
                T2z = SIMD_FMADD(KP866025403, Tj, T1Y);
                T1Z = SIMD_FNMADD(KP866025403, Tj, T1Y);
                T1G = SIMD_FNMADD(KP866025403, T1h, T1g);
                T1i = SIMD_FMADD(KP866025403, T1h, T1g);
                T39 = Tk - Tn;
                To  = Tk + Tn;
                T3q = T3a + T3b;
                T3c = T3a - T3b;
                T2A = SIMD_FNMADD(KP866025403, Tm, T21);
                T22 = SIMD_FMADD(KP866025403, Tm, T21);
                T2b = Tq - Tp;
                Tr  = Tp + Tq;
                T2c = T18 + T19;
                T1a = T18 - T19;
                T24 = T1F - T1G;
                T1H = T1F + T1G;
                T1j = T1f + T1i;
                T2P = T1f - T1i;
                T15 = ii[WS(is, 1)];
                Tt  = ri[WS(is, 17)];
                Tu  = ri[WS(is, 1)];
            }
            {
                SIMD_FLOAT T2O, T2B, T2t, T23, T2D, T2d, T1J, T1b, T3t, Th, T3p,
                    TQ, T34, T3n, T3k;
                SIMD_FLOAT T3d, T2S, T2J, T2I, T1q, T3j, T3h, T2C, T2a, T3r,
                    T37, T1I, T17, Tx, T35;
                SIMD_FLOAT T2G, T12, T1v, T2T, T3f, T9, TI, T33, T16, T29, T28,
                    T36, Tw, T13, T27;
                SIMD_FLOAT Tv, TW, T11, T2X, T2Q, T2M, T2L, T2E, T3u, T3s, T1c,
                    Tz, Ty, T3l, T38;
                SIMD_FLOAT T2y, T1w, T2H, T2F, T1x, T1k, T3o, T3m, T3i, T3e;
                T3f            = T5 - T8;
                T9             = T5 + T8;
                T2O            = T2z - T2A;
                T2B            = T2z + T2A;
                T2t            = T1Z + T22;
                T23            = T1Z - T22;
                TI             = TE + TH;
                T33            = TE - TH;
                T2D            = SIMD_FMADD(KP577350269, T2c, T2b);
                T2d            = SIMD_FNMADD(KP577350269, T2c, T2b);
                T1J            = SIMD_FNMADD(KP577350269, Tr, T1a);
                T1b            = SIMD_FMADD(KP577350269, Tr, T1a);
                T27            = T14 + T15;
                T16            = T14 - T15;
                T29            = Tu - Tt;
                Tv             = Tt + Tu;
                T3t            = T9 - Tg;
                Th             = T9 + Tg;
                T3p            = TI + TP;
                TQ             = TI - TP;
                T34            = T32 + T33;
                T3n            = T33 - T32;
                T3k            = T3c - T39;
                T3d            = T39 + T3c;
                T28            = SIMD_FNMADD(KP500000000, T27, T26);
                T36            = T26 + T27;
                Tw             = Ts + Tv;
                T13            = SIMD_FNMADD(KP500000000, Tv, Ts);
                T2S            = TT - TV;
                TW             = TT + TV;
                T11            = SIMD_FNMADD(KP866025403, T10, TY);
                T2J            = SIMD_FMADD(KP866025403, T10, TY);
                T2I            = T1n - T1p;
                T1q            = T1n + T1p;
                T3j            = T3f - T3g;
                T3h            = T3f + T3g;
                T2C            = SIMD_FNMADD(KP866025403, T29, T28);
                T2a            = SIMD_FMADD(KP866025403, T29, T28);
                T3r            = T2c + T36;
                T37            = T2c - T36;
                T1I            = SIMD_FMADD(KP866025403, T16, T13);
                T17            = SIMD_FNMADD(KP866025403, T16, T13);
                Tx             = Tr + Tw;
                T35            = Tr - Tw;
                T2G            = TW + T11;
                T12            = TW - T11;
                T1v            = SIMD_FNMADD(KP866025403, T1u, T1s);
                T2T            = SIMD_FMADD(KP866025403, T1u, T1s);
                T2X            = T2P - T2O;
                T2Q            = T2O + T2P;
                T2E            = SIMD_FNMADD(KP866025403, T2D, T2C);
                T2M            = SIMD_FMADD(KP866025403, T2D, T2C);
                T3u            = T3r - T3q;
                T3s            = T3q + T3r;
                T2L            = SIMD_FMADD(KP866025403, T1b, T17);
                T1c            = SIMD_FNMADD(KP866025403, T1b, T17);
                Tz             = To - Tx;
                Ty             = To + Tx;
                T3l            = T35 + T37;
                T38            = T35 - T37;
                T2y            = T1q - T1v;
                T1w            = T1q + T1v;
                T2H            = T2B + T2E;
                T2F            = T2B - T2E;
                ro[WS(os, 18)] = T3t - T3u;
                ro[WS(os, 6)]  = T3t + T3u;
                io[0]          = T3p + T3s;
                io[WS(os, 12)] = T3p - T3s;
                T1x            = T1j + T1c;
                T1k            = T1c - T1j;
                io[WS(os, 18)] = TQ - Tz;
                io[WS(os, 6)]  = Tz + TQ;
                ro[0]          = Th + Ty;
                ro[WS(os, 12)] = Th - Ty;
                T3o            = T3k + T3l;
                T3m            = T3k - T3l;
                T3i            = T3d + T38;
                T3e            = T38 - T3d;
                io[WS(os, 8)]  = T2G + T2H;
                io[WS(os, 20)] = T2G - T2H;
                ro[WS(os, 2)]  = T2y + T2F;
                ro[WS(os, 14)] = T2y - T2F;
                ro[WS(os, 8)]  = T1w + T1x;
                ro[WS(os, 20)] = T1w - T1x;
                io[WS(os, 2)]  = T12 + T1k;
                io[WS(os, 14)] = T12 - T1k;
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3o, T3n);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3o, T3n);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3m, T3j);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3m, T3j);
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3i, T3h);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3i, T3h);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3e, T34);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3e, T34);
                {
                    SIMD_FLOAT T2n, T25, T1U, T1V, T1D, T2u, T2e, T2f, T1A, T2i,
                        T30, T2K, T2Y, T2N, T2W;
                    SIMD_FLOAT T2U, T2j, T2s, T2v, T2m, T1W, T2o, T2g, T31, T2Z,
                        T2V, T2R, T2q, T2k, T2p;
                    SIMD_FLOAT T2r, T2l, T2h;
                    T2n            = T23 - T24;
                    T25            = T23 + T24;
                    T1O            = T1M + T1N;
                    T1U            = T1M - T1N;
                    T1V            = SIMD_FNMADD(KP866025403, T1C, T1B);
                    T1D            = SIMD_FMADD(KP866025403, T1C, T1B);
                    T2u            = SIMD_FMADD(KP866025403, T2d, T2a);
                    T2e            = SIMD_FNMADD(KP866025403, T2d, T2a);
                    T2f            = SIMD_FNMADD(KP866025403, T1J, T1I);
                    T1K            = SIMD_FMADD(KP866025403, T1J, T1I);
                    T1A            = T1y + T1z;
                    T2i            = T1y - T1z;
                    T30            = T2I - T2J;
                    T2K            = T2I + T2J;
                    T2Y            = T2L + T2M;
                    T2N            = T2L - T2M;
                    T2W            = T2S - T2T;
                    T2U            = T2S + T2T;
                    T2j            = SIMD_FNMADD(KP866025403, T1Q, T1P);
                    T1R            = SIMD_FMADD(KP866025403, T1Q, T1P);
                    T2m            = T1U - T1V;
                    T1W            = T1U + T1V;
                    T2o            = T2f + T2e;
                    T2g            = T2e - T2f;
                    T31            = T2Y - T2X;
                    T2Z            = T2X + T2Y;
                    T2V            = T2Q + T2N;
                    T2R            = T2N - T2Q;
                    T2q            = T2i - T2j;
                    T2k            = T2i + T2j;
                    T2p            = T2n - T2o;
                    T2r            = T2n + T2o;
                    T2l            = T25 + T2g;
                    T2h            = T25 - T2g;
                    T2s            = T1A - T1D;
                    T1E            = T1A + T1D;
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T31, T30);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T31, T30);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2Z, T2W);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2Z, T2W);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T2V, T2U);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T2V, T2U);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2R, T2K);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2R, T2K);
                    T2x            = T2t + T2u;
                    T2v            = T2t - T2u;
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2p, T2m);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2p, T2m);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2r, T2q);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2r, T2q);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2l, T2k);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2l, T2k);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2h, T1W);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2h, T1W);
                    ro[WS(os, 22)] = T2s - T2v;
                    ro[WS(os, 10)] = T2s + T2v;
                }
            }
        }
        T1L            = T1H + T1K;
        T1T            = T1K - T1H;
        T1S            = T1O - T1R;
        T2w            = T1O + T1R;
        ro[WS(os, 16)] = T1E + T1L;
        ro[WS(os, 4)]  = T1E - T1L;
        io[WS(os, 16)] = T2w + T2x;
        io[WS(os, 4)]  = T2w - T2x;
        io[WS(os, 10)] = T1S + T1T;
        io[WS(os, 22)] = T1S - T1T;
    }
}

template <>
struct c2cf_traits<24, 19>
{
    static constexpr long_t flops           = 310;
    static constexpr long_t operations      = 232;
    static constexpr long_t memory_accesses = 86;
    static constexpr long_t stack_vars      = 186;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 19 -name c2cf
 * -standalone */

/*
 * This function contains 232 FP additions, 78 FP multiplications,
 * (or, 154 additions, 0 multiplications, 78 fused multiply/add),
 * 186 stack variables, 4 constants, and 86 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 19>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1N, T1U, T1Q, T1X, T1K, T2D, T1R, T1Z, T1Y, T2C;
        {
            SIMD_FLOAT T8, TJ, Tc, TN, T1F, T1u, T1T, TZ, T1H, T1x, T1V, T12,
                T5, TG, T1E;
            SIMD_FLOAT T1s, T1S, TX, Th, TS, T25, T2F, Tu, T1I, T1A, T1W, T15,
                T2c, T1d, T3f;
            SIMD_FLOAT Tq, T3w, T3i, T2G, T28, T1e, T19, T2h, Tt, T2a, T1o, T2V,
                T1a, Tv, Tw;
            SIMD_FLOAT T7, TI, Tb, TM, T1, TC, T2, T3, TD, T1t, TY, T1w, T11,
                TE, T6;
            SIMD_FLOAT TH, Ta, TL;
            T6  = ri[WS(is, 12)];
            T7  = ri[WS(is, 4)];
            TH  = ii[WS(is, 12)];
            TI  = ii[WS(is, 4)];
            Ta  = ri[WS(is, 6)];
            Tb  = ri[WS(is, 14)];
            TL  = ii[WS(is, 6)];
            TM  = ii[WS(is, 14)];
            T1  = ri[0];
            TC  = ii[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            TD  = ii[WS(is, 8)];
            T8  = T6 + T7;
            T1t = SIMD_FNMADD(KP500000000, T7, T6);
            TJ  = TH + TI;
            TY  = SIMD_FNMADD(KP500000000, TI, TH);
            Tc  = Ta + Tb;
            T1w = SIMD_FNMADD(KP500000000, Tb, Ta);
            TN  = TL + TM;
            T11 = SIMD_FNMADD(KP500000000, TM, TL);
            TE  = ii[WS(is, 16)];
            {
                SIMD_FLOAT Td, TW, TO, TF, T1r, T1q, Te, Tf, TP, TQ, T4, Tn,
                    T14, T1z, Tm;
                SIMD_FLOAT T3g, To, T1m, T26, T1y, T13, T1L, T1k, Tl, T1j, T1i,
                    T24, Tk, T23, Tg;
                SIMD_FLOAT TR, TV, T1l, Tp, T3h, T27, Tr, Ts, T1M, T1n;
                Td  = ri[WS(is, 18)];
                TW  = T3 - T2;
                T4  = T2 + T3;
                TO  = ii[WS(is, 18)];
                T1F = SIMD_FNMADD(KP866025403, TI, T1t);
                T1u = SIMD_FMADD(KP866025403, TI, T1t);
                T1T = SIMD_FMADD(KP866025403, T7, TY);
                TZ  = SIMD_FNMADD(KP866025403, T7, TY);
                T1H = SIMD_FMADD(KP866025403, TM, T1w);
                T1x = SIMD_FNMADD(KP866025403, TM, T1w);
                T1V = SIMD_FNMADD(KP866025403, Tb, T11);
                T12 = SIMD_FMADD(KP866025403, Tb, T11);
                TF  = TD + TE;
                T1r = TD - TE;
                T5  = T1 + T4;
                T1q = SIMD_FNMADD(KP500000000, T4, T1);
                Te  = ri[WS(is, 2)];
                Tf  = ri[WS(is, 10)];
                TP  = ii[WS(is, 2)];
                TQ  = ii[WS(is, 10)];
                Tk  = ri[WS(is, 3)];
                Tl  = ri[WS(is, 11)];
                T1j = ii[WS(is, 11)];
                T23 = ii[WS(is, 3)];
                Tn  = ri[WS(is, 15)];
                TV  = SIMD_FNMADD(KP500000000, TF, TC);
                TG  = TC + TF;
                T1E = SIMD_FMADD(KP866025403, T1r, T1q);
                T1s = SIMD_FNMADD(KP866025403, T1r, T1q);
                T14 = Tf - Te;
                Tg  = Te + Tf;
                T1z = TP - TQ;
                TR  = TP + TQ;
                T1i = SIMD_FNMADD(KP500000000, Tl, Tk);
                Tm  = Tk + Tl;
                T3g = T23 + T1j;
                T24 = SIMD_FNMADD(KP500000000, T1j, T23);
                T1S = SIMD_FMADD(KP866025403, TW, TV);
                TX  = SIMD_FNMADD(KP866025403, TW, TV);
                To  = ri[WS(is, 7)];
                T1m = ii[WS(is, 7)];
                T26 = ii[WS(is, 15)];
                Th  = Td + Tg;
                T1y = SIMD_FNMADD(KP500000000, Tg, Td);
                TS  = TO + TR;
                T13 = SIMD_FNMADD(KP500000000, TR, TO);
                T1L = SIMD_FMADD(KP866025403, T1j, T1i);
                T1k = SIMD_FNMADD(KP866025403, T1j, T1i);
                T25 = SIMD_FNMADD(KP866025403, Tl, T24);
                T2F = SIMD_FMADD(KP866025403, Tl, T24);
                Tu  = ri[WS(is, 9)];
                T1l = SIMD_FNMADD(KP500000000, To, Tn);
                Tp  = Tn + To;
                T3h = T26 + T1m;
                T27 = SIMD_FNMADD(KP500000000, T1m, T26);
                T1I = SIMD_FMADD(KP866025403, T1z, T1y);
                T1A = SIMD_FNMADD(KP866025403, T1z, T1y);
                T1W = SIMD_FMADD(KP866025403, T14, T13);
                T15 = SIMD_FNMADD(KP866025403, T14, T13);
                T2c = ii[WS(is, 9)];
                Tr  = ri[WS(is, 5)];
                Ts  = ri[WS(is, 13)];
                T1d = ii[WS(is, 5)];
                T1M = SIMD_FNMADD(KP866025403, T1m, T1l);
                T1n = SIMD_FMADD(KP866025403, T1m, T1l);
                T3f = Tm - Tp;
                Tq  = Tm + Tp;
                T3w = T3g + T3h;
                T3i = T3g - T3h;
                T2G = SIMD_FNMADD(KP866025403, To, T27);
                T28 = SIMD_FMADD(KP866025403, To, T27);
                T1e = ii[WS(is, 13)];
                T19 = ii[WS(is, 17)];
                T2h = Ts - Tr;
                Tt  = Tr + Ts;
                T2a = T1L - T1M;
                T1N = T1L + T1M;
                T1o = T1k + T1n;
                T2V = T1k - T1n;
                T1a = ii[WS(is, 1)];
                Tv  = ri[WS(is, 17)];
                Tw  = ri[WS(is, 1)];
            }
            {
                SIMD_FLOAT T2U, T2H, T2z, T29, T3j, T3q, T2j, T1P, T3z, Tj, T3v,
                    TU, T3t, T3a, T2Y;
                SIMD_FLOAT T2P, T2g, T1O, T3p, T3n, T2M, T17, T2K, T2S, T3A,
                    T3y, T1v, T2O, T2R, T1h;
                SIMD_FLOAT TB, TA, T3e, T3r, T1B, T2Z, T3l, T9, T2i, T1f, Ti,
                    T38, T39, TK, TT;
                SIMD_FLOAT T3m, T1b, T2f, T2J, T1g, T2e, T3c, T18, Ty, T2d, Tx,
                    T3x, T3d, T1c, Tz;
                SIMD_FLOAT T3b, T10, T16, T2I, T33, T2W, T2L, T1D, T3o, T3k,
                    T3u, T3s, T2E, T1C, T2N;
                SIMD_FLOAT T1p;
                T3l            = T5 - T8;
                T9             = T5 + T8;
                T2U            = T2F - T2G;
                T2H            = T2F + T2G;
                T2z            = T25 + T28;
                T29            = T25 - T28;
                T2i            = T1d + T1e;
                T1f            = T1d - T1e;
                Ti             = Tc + Th;
                T38            = Tc - Th;
                T39            = TG - TJ;
                TK             = TG + TJ;
                TT             = TN + TS;
                T3m            = TN - TS;
                T2d            = T19 + T1a;
                T1b            = T19 - T1a;
                T2f            = Tw - Tv;
                Tx             = Tv + Tw;
                T3j            = T3f + T3i;
                T3q            = T3i - T3f;
                T2J            = SIMD_FMADD(KP577350269, T2i, T2h);
                T2j            = SIMD_FNMADD(KP577350269, T2i, T2h);
                T1P            = SIMD_FNMADD(KP577350269, Tt, T1f);
                T1g            = SIMD_FMADD(KP577350269, Tt, T1f);
                T3z            = T9 - Ti;
                Tj             = T9 + Ti;
                T3v            = TK + TT;
                TU             = TK - TT;
                T2e            = SIMD_FNMADD(KP500000000, T2d, T2c);
                T3c            = T2c + T2d;
                T18            = SIMD_FNMADD(KP500000000, Tx, Tu);
                Ty             = Tu + Tx;
                T3t            = T39 - T38;
                T3a            = T38 + T39;
                T2Y            = TX - TZ;
                T10            = TX + TZ;
                T16            = T12 + T15;
                T2P            = T12 - T15;
                T2I            = SIMD_FNMADD(KP866025403, T2f, T2e);
                T2g            = SIMD_FMADD(KP866025403, T2f, T2e);
                T3x            = T2i + T3c;
                T3d            = T2i - T3c;
                T1O            = SIMD_FMADD(KP866025403, T1b, T18);
                T1c            = SIMD_FNMADD(KP866025403, T1b, T18);
                Tz             = Tt + Ty;
                T3b            = Tt - Ty;
                T3p            = T3l - T3m;
                T3n            = T3l + T3m;
                T2M            = T10 + T16;
                T17            = T10 - T16;
                T2K            = SIMD_FNMADD(KP866025403, T2J, T2I);
                T2S            = SIMD_FMADD(KP866025403, T2J, T2I);
                T3A            = T3x - T3w;
                T3y            = T3w + T3x;
                T1v            = T1s + T1u;
                T2O            = T1s - T1u;
                T2R            = SIMD_FMADD(KP866025403, T1g, T1c);
                T1h            = SIMD_FNMADD(KP866025403, T1g, T1c);
                TB             = Tq - Tz;
                TA             = Tq + Tz;
                T3e            = T3b - T3d;
                T3r            = T3b + T3d;
                T1B            = T1x + T1A;
                T2Z            = T1x - T1A;
                T33            = T2V - T2U;
                T2W            = T2U + T2V;
                T2N            = T2H + T2K;
                T2L            = T2H - T2K;
                ro[WS(os, 18)] = T3z - T3A;
                ro[WS(os, 6)]  = T3z + T3A;
                io[0]          = T3v + T3y;
                io[WS(os, 12)] = T3v - T3y;
                T1D            = T1o + T1h;
                T1p            = T1h - T1o;
                io[WS(os, 18)] = TU - TB;
                io[WS(os, 6)]  = TB + TU;
                ro[0]          = Tj + TA;
                ro[WS(os, 12)] = Tj - TA;
                T3o            = T3j + T3e;
                T3k            = T3e - T3j;
                T3u            = T3q + T3r;
                T3s            = T3q - T3r;
                T2E            = T1v - T1B;
                T1C            = T1v + T1B;
                io[WS(os, 8)]  = T2M + T2N;
                io[WS(os, 20)] = T2M - T2N;
                io[WS(os, 2)]  = T17 + T1p;
                io[WS(os, 14)] = T17 - T1p;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3o, T3n);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3o, T3n);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3k, T3a);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3k, T3a);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3u, T3t);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3u, T3t);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3s, T3p);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3s, T3p);
                ro[WS(os, 2)]  = T2E + T2L;
                ro[WS(os, 14)] = T2E - T2L;
                ro[WS(os, 8)]  = T1C + T1D;
                ro[WS(os, 20)] = T1C - T1D;
                {
                    SIMD_FLOAT T2t, T2b, T20, T21, T1J, T2A, T2k, T2l, T1G, T2o,
                        T36, T2Q, T34, T2T, T32;
                    SIMD_FLOAT T30, T2p, T2y, T2B, T2s, T22, T2u, T2m, T37, T35,
                        T31, T2X, T2w, T2q, T2v;
                    SIMD_FLOAT T2x, T2r, T2n;
                    T2t            = T29 - T2a;
                    T2b            = T29 + T2a;
                    T1U            = T1S + T1T;
                    T20            = T1S - T1T;
                    T21            = T1H - T1I;
                    T1J            = T1H + T1I;
                    T2A            = SIMD_FMADD(KP866025403, T2j, T2g);
                    T2k            = SIMD_FNMADD(KP866025403, T2j, T2g);
                    T2l            = SIMD_FNMADD(KP866025403, T1P, T1O);
                    T1Q            = SIMD_FMADD(KP866025403, T1P, T1O);
                    T1G            = T1E + T1F;
                    T2o            = T1E - T1F;
                    T36            = T2O - T2P;
                    T2Q            = T2O + T2P;
                    T34            = T2R + T2S;
                    T2T            = T2R - T2S;
                    T32            = T2Y - T2Z;
                    T30            = T2Y + T2Z;
                    T2p            = T1V - T1W;
                    T1X            = T1V + T1W;
                    T2s            = T20 - T21;
                    T22            = T20 + T21;
                    T2u            = T2l + T2k;
                    T2m            = T2k - T2l;
                    T37            = T34 - T33;
                    T35            = T33 + T34;
                    T31            = T2W + T2T;
                    T2X            = T2T - T2W;
                    T2w            = T2o - T2p;
                    T2q            = T2o + T2p;
                    T2v            = T2t - T2u;
                    T2x            = T2t + T2u;
                    T2r            = T2b + T2m;
                    T2n            = T2b - T2m;
                    T2y            = T1G - T1J;
                    T1K            = T1G + T1J;
                    ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T37, T36);
                    ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T37, T36);
                    io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T35, T32);
                    io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T35, T32);
                    io[WS(os, 23)] = SIMD_FMADD(KP707106781, T31, T30);
                    io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T31, T30);
                    ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T2X, T2Q);
                    ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T2X, T2Q);
                    T2D            = T2z + T2A;
                    T2B            = T2z - T2A;
                    io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2v, T2s);
                    io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2v, T2s);
                    ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2x, T2w);
                    ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2x, T2w);
                    ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2r, T2q);
                    ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2r, T2q);
                    io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2n, T22);
                    io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2n, T22);
                    ro[WS(os, 22)] = T2y - T2B;
                    ro[WS(os, 10)] = T2y + T2B;
                }
            }
        }
        T1R            = T1N + T1Q;
        T1Z            = T1Q - T1N;
        T1Y            = T1U - T1X;
        T2C            = T1U + T1X;
        ro[WS(os, 16)] = T1K + T1R;
        ro[WS(os, 4)]  = T1K - T1R;
        io[WS(os, 16)] = T2C + T2D;
        io[WS(os, 4)]  = T2C - T2D;
        io[WS(os, 10)] = T1Y + T1Z;
        io[WS(os, 22)] = T1Y - T1Z;
    }
}

template <>
struct c2cf_traits<24, 20>
{
    static constexpr long_t flops           = 314;
    static constexpr long_t operations      = 236;
    static constexpr long_t memory_accesses = 88;
    static constexpr long_t stack_vars      = 200;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 20 -name c2cf
 * -standalone */

/*
 * This function contains 236 FP additions, 78 FP multiplications,
 * (or, 158 additions, 0 multiplications, 78 fused multiply/add),
 * 200 stack variables, 4 constants, and 88 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 20>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2u, T2f, T2q, T2g, T2r, T2v, T3c, T2W, T38, T36, T3a, T2Z,
            T39, T32, T2y;
        SIMD_FLOAT T26, T3b, T3d, T33, T37, T2w, T2C, T2h, T2z, T2s, T2A, T2D,
            T2B, T2t, T2x;
        {
            SIMD_FLOAT T8, TL, Tc, TP, T1J, T1y, T1X, T11, T1L, T1B, T1Z, T14,
                T5, TI, T1I;
            SIMD_FLOAT T1w, Tv, T1W, TZ, Th, TU, T2o, Tk, T27, Tl, T1d, T2l,
                T1M, T1E, T20;
            SIMD_FLOAT T17, T2P, T2p, T1T, T1i, T2k, T3i, Tm, TA, T1a, T1l, T1m,
                T1q, T2c, Tp;
            SIMD_FLOAT Tq, T7, TK, Tb, TO, T1, TE, T2, T3, TF, T1x, T10, T1A,
                T13, TG;
            SIMD_FLOAT T6, TJ, Ta, TN;
            T6  = ri[WS(is, 12)];
            T7  = ri[WS(is, 4)];
            TJ  = ii[WS(is, 12)];
            TK  = ii[WS(is, 4)];
            Ta  = ri[WS(is, 6)];
            Tb  = ri[WS(is, 14)];
            TN  = ii[WS(is, 6)];
            TO  = ii[WS(is, 14)];
            T1  = ri[0];
            TE  = ii[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            TF  = ii[WS(is, 8)];
            T8  = T6 + T7;
            T1x = SIMD_FNMADD(KP500000000, T7, T6);
            TL  = TJ + TK;
            T10 = SIMD_FNMADD(KP500000000, TK, TJ);
            Tc  = Ta + Tb;
            T1A = SIMD_FNMADD(KP500000000, Tb, Ta);
            TP  = TN + TO;
            T13 = SIMD_FNMADD(KP500000000, TO, TN);
            TG  = ii[WS(is, 16)];
            {
                SIMD_FLOAT Td, TY, TQ, TH, T1v, T1u, Te, Tf, TR, TS, T4, Tw,
                    T2i, T16, T1D;
                SIMD_FLOAT T1b, T2n, T1c, Tx, Ty, T1C, T15, T1h, Tt, Tu, T1f,
                    TX, Tg, TT, T1g;
                SIMD_FLOAT Tz, T2j;
                Td  = ri[WS(is, 18)];
                TY  = T3 - T2;
                T4  = T2 + T3;
                TQ  = ii[WS(is, 18)];
                T1J = SIMD_FNMADD(KP866025403, TK, T1x);
                T1y = SIMD_FMADD(KP866025403, TK, T1x);
                T1X = SIMD_FMADD(KP866025403, T7, T10);
                T11 = SIMD_FNMADD(KP866025403, T7, T10);
                T1L = SIMD_FMADD(KP866025403, TO, T1A);
                T1B = SIMD_FNMADD(KP866025403, TO, T1A);
                T1Z = SIMD_FNMADD(KP866025403, Tb, T13);
                T14 = SIMD_FMADD(KP866025403, Tb, T13);
                TH  = TF + TG;
                T1v = TF - TG;
                T5  = T1 + T4;
                T1u = SIMD_FNMADD(KP500000000, T4, T1);
                Te  = ri[WS(is, 2)];
                Tf  = ri[WS(is, 10)];
                TR  = ii[WS(is, 2)];
                TS  = ii[WS(is, 10)];
                Tw  = ri[WS(is, 9)];
                T2i = ii[WS(is, 9)];
                Tt  = ri[WS(is, 5)];
                Tu  = ri[WS(is, 13)];
                T1f = ii[WS(is, 5)];
                TX  = SIMD_FNMADD(KP500000000, TH, TE);
                TI  = TE + TH;
                T1I = SIMD_FMADD(KP866025403, T1v, T1u);
                T1w = SIMD_FNMADD(KP866025403, T1v, T1u);
                T16 = Tf - Te;
                Tg  = Te + Tf;
                T1D = TR - TS;
                TT  = TR + TS;
                T1g = ii[WS(is, 13)];
                T1b = ii[WS(is, 17)];
                T2n = Tu - Tt;
                Tv  = Tt + Tu;
                T1W = SIMD_FMADD(KP866025403, TY, TX);
                TZ  = SIMD_FNMADD(KP866025403, TY, TX);
                T1c = ii[WS(is, 1)];
                Tx  = ri[WS(is, 17)];
                Ty  = ri[WS(is, 1)];
                Th  = Td + Tg;
                T1C = SIMD_FNMADD(KP500000000, Tg, Td);
                TU  = TQ + TT;
                T15 = SIMD_FNMADD(KP500000000, TT, TQ);
                T1h = T1f - T1g;
                T2o = T1f + T1g;
                Tk  = ri[WS(is, 3)];
                T27 = ii[WS(is, 3)];
                Tl  = ri[WS(is, 11)];
                T2j = T1b + T1c;
                T1d = T1b - T1c;
                T2l = Ty - Tx;
                Tz  = Tx + Ty;
                T1M = SIMD_FMADD(KP866025403, T1D, T1C);
                T1E = SIMD_FNMADD(KP866025403, T1D, T1C);
                T20 = SIMD_FMADD(KP866025403, T16, T15);
                T17 = SIMD_FNMADD(KP866025403, T16, T15);
                T2P = SIMD_FMADD(KP577350269, T2o, T2n);
                T2p = SIMD_FNMADD(KP577350269, T2o, T2n);
                T1T = SIMD_FNMADD(KP577350269, Tv, T1h);
                T1i = SIMD_FMADD(KP577350269, Tv, T1h);
                T2k = SIMD_FNMADD(KP500000000, T2j, T2i);
                T3i = T2i + T2j;
                Tm  = ri[WS(is, 19)];
                TA  = Tw + Tz;
                T1a = SIMD_FNMADD(KP500000000, Tz, Tw);
                T1l = ii[WS(is, 11)];
                T1m = ii[WS(is, 19)];
                T1q = ii[WS(is, 7)];
                T2c = ii[WS(is, 15)];
                Tp  = ri[WS(is, 15)];
                Tq  = ri[WS(is, 7)];
            }
            {
                SIMD_FLOAT T2O, T1e, T2M, T1r, T1o, T2L, T25, T2E, T1O, T2J,
                    T2H, T1R, T1U, T24, T1Y;
                SIMD_FLOAT T21, T34, T2V, T30, T2Y, T2X, T31, T2U, T1z, T23,
                    T1V, T2I, T22, T2S, T19;
                SIMD_FLOAT T2T, T2R, T1H, T1t, T1F, T35, T12, T18, T2N, T2Q,
                    T1j, T1s, T1G, T2K;
                {
                    SIMD_FLOAT Ti, T2m, T3D, T1S, TB, TM, T9, TV, T3x, T3k, T2e,
                        T1Q, T3g, T3z, T1P;
                    SIMD_FLOAT Ts, T3l, T3t, T3v, T2b, T3C, T3o, T3e, T3j, Tn,
                        T2a, T3h, T28, T1n, T3n;
                    SIMD_FLOAT T2d, T1p, Tr, T3f, T3r, T1k, To, T3s, T3m, T29,
                        T1K, T1N, T3w, T3p, T2F;
                    SIMD_FLOAT Tj, T3E, TD, TC, T3B, TW, T3u, T3q, T3A, T3y,
                        T2G, T3F, T3G;
                    Ti             = Tc + Th;
                    T3e            = Tc - Th;
                    T2O            = SIMD_FNMADD(KP866025403, T2l, T2k);
                    T2m            = SIMD_FMADD(KP866025403, T2l, T2k);
                    T3j            = T2o - T3i;
                    T3D            = T2o + T3i;
                    Tn             = Tl + Tm;
                    T2a            = Tm - Tl;
                    T1e            = SIMD_FNMADD(KP866025403, T1d, T1a);
                    T1S            = SIMD_FMADD(KP866025403, T1d, T1a);
                    TB             = Tv + TA;
                    T3h            = Tv - TA;
                    T28            = T1l + T1m;
                    T1n            = T1l - T1m;
                    T3n            = T2c + T1q;
                    T2d            = SIMD_FNMADD(KP500000000, T1q, T2c);
                    T1p            = SIMD_FNMADD(KP500000000, Tq, Tp);
                    Tr             = Tp + Tq;
                    T3f            = TI - TL;
                    TM             = TI + TL;
                    T9             = T5 + T8;
                    T3r            = T5 - T8;
                    T1k            = SIMD_FNMADD(KP500000000, Tn, Tk);
                    To             = Tk + Tn;
                    T3s            = TP - TU;
                    TV             = TP + TU;
                    T3x            = T3h + T3j;
                    T3k            = T3h - T3j;
                    T3m            = T27 + T28;
                    T29            = SIMD_FNMADD(KP500000000, T28, T27);
                    T2e            = SIMD_FMADD(KP866025403, Tq, T2d);
                    T2M            = SIMD_FNMADD(KP866025403, Tq, T2d);
                    T1r            = SIMD_FMADD(KP866025403, T1q, T1p);
                    T1Q            = SIMD_FNMADD(KP866025403, T1q, T1p);
                    T3g            = T3e + T3f;
                    T3z            = T3f - T3e;
                    T1o            = SIMD_FNMADD(KP866025403, T1n, T1k);
                    T1P            = SIMD_FMADD(KP866025403, T1n, T1k);
                    Ts             = To + Tr;
                    T3l            = To - Tr;
                    T3t            = T3r + T3s;
                    T3v            = T3r - T3s;
                    T2b            = SIMD_FMADD(KP866025403, T2a, T29);
                    T2L            = SIMD_FNMADD(KP866025403, T2a, T29);
                    T3C            = T3m + T3n;
                    T3o            = T3m - T3n;
                    T2u            = T1I - T1J;
                    T1K            = T1I + T1J;
                    T1N            = T1L + T1M;
                    T25            = T1L - T1M;
                    T3w            = T3o - T3l;
                    T3p            = T3l + T3o;
                    T2f            = T2b - T2e;
                    T2F            = T2b + T2e;
                    T3F            = T9 - Ti;
                    Tj             = T9 + Ti;
                    T3G            = T3D - T3C;
                    T3E            = T3C + T3D;
                    TD             = Ts - TB;
                    TC             = Ts + TB;
                    T3B            = TM + TV;
                    TW             = TM - TV;
                    T2E            = T1K - T1N;
                    T1O            = T1K + T1N;
                    T3u            = T3p + T3k;
                    T3q            = T3k - T3p;
                    T3A            = T3w + T3x;
                    T3y            = T3w - T3x;
                    ro[WS(os, 18)] = T3F - T3G;
                    ro[WS(os, 6)]  = T3F + T3G;
                    T2G            = SIMD_FMADD(KP866025403, T2p, T2m);
                    T2q            = SIMD_FNMADD(KP866025403, T2p, T2m);
                    ro[0]          = Tj + TC;
                    ro[WS(os, 12)] = Tj - TC;
                    io[0]          = T3B + T3E;
                    io[WS(os, 12)] = T3B - T3E;
                    io[WS(os, 18)] = TW - TD;
                    io[WS(os, 6)]  = TD + TW;
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3u, T3t);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3u, T3t);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3q, T3g);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3q, T3g);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3A, T3z);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3A, T3z);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3y, T3v);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3y, T3v);
                    T2J            = T2F + T2G;
                    T2H            = T2F - T2G;
                    T2g            = T1P - T1Q;
                    T1R            = T1P + T1Q;
                    T1U            = SIMD_FMADD(KP866025403, T1T, T1S);
                    T2r            = SIMD_FNMADD(KP866025403, T1T, T1S);
                    T24            = T1W - T1X;
                    T1Y            = T1W + T1X;
                    T21            = T1Z + T20;
                    T2v            = T1Z - T20;
                }
                T34            = TZ - T11;
                T12            = TZ + T11;
                T18            = T14 + T17;
                T2V            = T14 - T17;
                T30            = T2L - T2M;
                T2N            = T2L + T2M;
                T2Q            = SIMD_FNMADD(KP866025403, T2P, T2O);
                T2Y            = SIMD_FMADD(KP866025403, T2P, T2O);
                T2X            = SIMD_FMADD(KP866025403, T1i, T1e);
                T1j            = SIMD_FNMADD(KP866025403, T1i, T1e);
                T1s            = T1o + T1r;
                T31            = T1o - T1r;
                ro[WS(os, 10)] = T2E + T2H;
                ro[WS(os, 22)] = T2E - T2H;
                T2U            = T1w - T1y;
                T1z            = T1w + T1y;
                T23            = T1U - T1R;
                T1V            = T1R + T1U;
                T2I            = T1Y + T21;
                T22            = T1Y - T21;
                T2S            = T12 + T18;
                T19            = T12 - T18;
                T2T            = T2N + T2Q;
                T2R            = T2N - T2Q;
                T1H            = T1s + T1j;
                T1t            = T1j - T1s;
                T1F            = T1B + T1E;
                T35            = T1B - T1E;
                ro[WS(os, 16)] = T1O + T1V;
                ro[WS(os, 4)]  = T1O - T1V;
                io[WS(os, 16)] = T2I + T2J;
                io[WS(os, 4)]  = T2I - T2J;
                io[WS(os, 10)] = T22 + T23;
                io[WS(os, 22)] = T22 - T23;
                io[WS(os, 8)]  = T2S + T2T;
                io[WS(os, 20)] = T2S - T2T;
                io[WS(os, 2)]  = T19 + T1t;
                io[WS(os, 14)] = T19 - T1t;
                T1G            = T1z + T1F;
                T2K            = T1z - T1F;
                T3c            = T2U - T2V;
                T2W            = T2U + T2V;
                ro[WS(os, 2)]  = T2K + T2R;
                ro[WS(os, 14)] = T2K - T2R;
                ro[WS(os, 8)]  = T1G + T1H;
                ro[WS(os, 20)] = T1G - T1H;
                T38            = T34 - T35;
                T36            = T34 + T35;
                T3a            = T2X + T2Y;
                T2Z            = T2X - T2Y;
                T39            = T31 - T30;
                T32            = T30 + T31;
                T2y            = T24 - T25;
                T26            = T24 + T25;
            }
        }
        T3b            = T39 + T3a;
        T3d            = T3a - T39;
        T33            = T2Z - T32;
        T37            = T32 + T2Z;
        T2w            = T2u + T2v;
        T2C            = T2u - T2v;
        T2h            = T2f + T2g;
        T2z            = T2f - T2g;
        T2s            = T2q - T2r;
        T2A            = T2r + T2q;
        ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T3d, T3c);
        ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T3d, T3c);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3b, T38);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3b, T38);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T37, T36);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T37, T36);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T33, T2W);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T33, T2W);
        T2D            = T2z + T2A;
        T2B            = T2z - T2A;
        T2t            = T2h - T2s;
        T2x            = T2h + T2s;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2B, T2y);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2B, T2y);
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2D, T2C);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2D, T2C);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2x, T2w);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2x, T2w);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2t, T26);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2t, T26);
    }
}

template <>
struct c2cf_traits<24, 21>
{
    static constexpr long_t flops           = 318;
    static constexpr long_t operations      = 240;
    static constexpr long_t memory_accesses = 90;
    static constexpr long_t stack_vars      = 204;
    static constexpr long_t constants       = 4;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 21 -name c2cf
 * -standalone */

/*
 * This function contains 240 FP additions, 78 FP multiplications,
 * (or, 162 additions, 0 multiplications, 78 fused multiply/add),
 * 204 stack variables, 4 constants, and 90 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 21>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2A, T2l, T2w, T2m, T2x, T2B, T3i, T32, T3e, T3c, T3g, T35,
            T3f, T38, T2E;
        SIMD_FLOAT T2c, T3h, T3j, T39, T3d, T2C, T2I, T2n, T2F, T2y, T2G, T2J,
            T2H, T2z, T2D;
        {
            SIMD_FLOAT Te, TT, T1R, T1H, T25, T19, T5, TK, Tj, T1O, T1B, T22,
                T13, TY, T1S;
            SIMD_FLOAT T1K, T26, T1c, Ta, TP, Tx, Tm, T2u, T1P, T1E, T23, T16,
                T1i, T2d, Tn;
            SIMD_FLOAT T2r, T2V, T2v, T1Z, T1n, To, T1q, T2q, T3o, T1r, T1v,
                T2i, TC, T1f, Tr;
            SIMD_FLOAT Ts, Td, TS, T1, TG, Tf, TU, Tg, T1G, T18, Th, TV, T12,
                T4, T1A;
            SIMD_FLOAT TJ, TW, Tc, TR, T2, T3, TH, TI;
            Tc  = ri[WS(is, 6)];
            Td  = ri[WS(is, 14)];
            TR  = ii[WS(is, 6)];
            TS  = ii[WS(is, 14)];
            T1  = ri[0];
            TG  = ii[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            TH  = ii[WS(is, 8)];
            TI  = ii[WS(is, 16)];
            Tf  = ri[WS(is, 18)];
            TU  = ii[WS(is, 18)];
            Tg  = ri[WS(is, 2)];
            Te  = Tc + Td;
            T1G = SIMD_FNMADD(KP500000000, Td, Tc);
            TT  = TR + TS;
            T18 = SIMD_FNMADD(KP500000000, TS, TR);
            Th  = ri[WS(is, 10)];
            TV  = ii[WS(is, 2)];
            T12 = T3 - T2;
            T4  = T2 + T3;
            T1A = TH - TI;
            TJ  = TH + TI;
            TW  = ii[WS(is, 10)];
            {
                SIMD_FLOAT T6, TL, Ti, T1b, T1z, T11, TX, T1J, T7, T8, TM, TN,
                    Ty, T15, T1D;
                SIMD_FLOAT T2o, T1k, T1l, T1C, T14, T1g, T1h, Tz, T2t, TA, T1a,
                    T9, TO, Tv, Tw;
                SIMD_FLOAT T1I, T2p, TB, T1m;
                T6  = ri[WS(is, 12)];
                TL  = ii[WS(is, 12)];
                T1R = SIMD_FMADD(KP866025403, TS, T1G);
                T1H = SIMD_FNMADD(KP866025403, TS, T1G);
                T25 = SIMD_FNMADD(KP866025403, Td, T18);
                T19 = SIMD_FMADD(KP866025403, Td, T18);
                Ti  = Tg + Th;
                T1b = Th - Tg;
                T5  = T1 + T4;
                T1z = SIMD_FNMADD(KP500000000, T4, T1);
                TK  = TG + TJ;
                T11 = SIMD_FNMADD(KP500000000, TJ, TG);
                TX  = TV + TW;
                T1J = TV - TW;
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TM  = ii[WS(is, 20)];
                TN  = ii[WS(is, 4)];
                Ty  = ri[WS(is, 9)];
                T1I = SIMD_FNMADD(KP500000000, Ti, Tf);
                Tj  = Tf + Ti;
                T1O = SIMD_FMADD(KP866025403, T1A, T1z);
                T1B = SIMD_FNMADD(KP866025403, T1A, T1z);
                T22 = SIMD_FMADD(KP866025403, T12, T11);
                T13 = SIMD_FNMADD(KP866025403, T12, T11);
                T1a = SIMD_FNMADD(KP500000000, TX, TU);
                TY  = TU + TX;
                T15 = T8 - T7;
                T9  = T7 + T8;
                T1D = TM - TN;
                TO  = TM + TN;
                T1S = SIMD_FMADD(KP866025403, T1J, T1I);
                T1K = SIMD_FNMADD(KP866025403, T1J, T1I);
                T2o = ii[WS(is, 9)];
                Tv  = ri[WS(is, 5)];
                Tw  = ri[WS(is, 13)];
                T1k = ii[WS(is, 5)];
                T26 = SIMD_FMADD(KP866025403, T1b, T1a);
                T1c = SIMD_FNMADD(KP866025403, T1b, T1a);
                T1l = ii[WS(is, 13)];
                Ta  = T6 + T9;
                T1C = SIMD_FNMADD(KP500000000, T9, T6);
                TP  = TL + TO;
                T14 = SIMD_FNMADD(KP500000000, TO, TL);
                T1g = ii[WS(is, 17)];
                T1h = ii[WS(is, 1)];
                Tz  = ri[WS(is, 17)];
                T2t = Tw - Tv;
                Tx  = Tv + Tw;
                TA  = ri[WS(is, 1)];
                Tm  = ri[WS(is, 3)];
                T2u = T1k + T1l;
                T1m = T1k - T1l;
                T1P = SIMD_FMADD(KP866025403, T1D, T1C);
                T1E = SIMD_FNMADD(KP866025403, T1D, T1C);
                T23 = SIMD_FMADD(KP866025403, T15, T14);
                T16 = SIMD_FNMADD(KP866025403, T15, T14);
                T2p = T1g + T1h;
                T1i = T1g - T1h;
                T2d = ii[WS(is, 3)];
                Tn  = ri[WS(is, 11)];
                T2r = TA - Tz;
                TB  = Tz + TA;
                T2V = SIMD_FMADD(KP577350269, T2u, T2t);
                T2v = SIMD_FNMADD(KP577350269, T2u, T2t);
                T1Z = SIMD_FNMADD(KP577350269, Tx, T1m);
                T1n = SIMD_FMADD(KP577350269, Tx, T1m);
                To  = ri[WS(is, 19)];
                T1q = ii[WS(is, 11)];
                T2q = SIMD_FNMADD(KP500000000, T2p, T2o);
                T3o = T2o + T2p;
                T1r = ii[WS(is, 19)];
                T1v = ii[WS(is, 7)];
                T2i = ii[WS(is, 15)];
                TC  = Ty + TB;
                T1f = SIMD_FNMADD(KP500000000, TB, Ty);
                Tr  = ri[WS(is, 15)];
                Ts  = ri[WS(is, 7)];
            }
            {
                SIMD_FLOAT T2U, T1j, T2S, T1w, T1t, T2R, T2b, T2K, T1U, T2P,
                    T2N, T1X, T20, T2a, T24;
                SIMD_FLOAT T27, T3a, T31, T36, T34, T33, T37, T30, T1F, T29,
                    T21, T2O, T28, T2Y, T1e;
                SIMD_FLOAT T2Z, T2X, T1N, T1y, T1L, T3b, T17, T1d, T2T, T2W,
                    T1o, T1x, T1M, T2Q;
                {
                    SIMD_FLOAT Tk, T2s, T3J, T1Y, TD, TQ, Tb, T2k, TZ, T3D, T3q,
                        T1W, T1V, Tu, T3r;
                    SIMD_FLOAT T3F, T3m, T2h, T3u, T3I, T3B, T3z, T3k, T2g, T3p,
                        T1s, T2j, T3t, T3n, T1u;
                    SIMD_FLOAT Tt, T1p, Tq, T3l, T3s, T2f, T2e, Tp, T3x, T3y,
                        T1Q, T3v, T3C, T1T, T2L;
                    SIMD_FLOAT Tl, T3K, TF, TE, T3H, T10, T3A, T3w, T3G, T3E,
                        T2M, T3L, T3M;
                    Tk             = Te + Tj;
                    T3k            = Te - Tj;
                    T2g            = To - Tn;
                    Tp             = Tn + To;
                    T2U            = SIMD_FNMADD(KP866025403, T2r, T2q);
                    T2s            = SIMD_FMADD(KP866025403, T2r, T2q);
                    T3p            = T2u - T3o;
                    T3J            = T2u + T3o;
                    T1s            = T1q - T1r;
                    T2e            = T1q + T1r;
                    T2j            = SIMD_FNMADD(KP500000000, T1v, T2i);
                    T3t            = T2i + T1v;
                    T1j            = SIMD_FNMADD(KP866025403, T1i, T1f);
                    T1Y            = SIMD_FMADD(KP866025403, T1i, T1f);
                    TD             = Tx + TC;
                    T3n            = Tx - TC;
                    T1u            = SIMD_FNMADD(KP500000000, Ts, Tr);
                    Tt             = Tr + Ts;
                    T1p            = SIMD_FNMADD(KP500000000, Tp, Tm);
                    Tq             = Tm + Tp;
                    T3l            = TK - TP;
                    TQ             = TK + TP;
                    T3s            = T2d + T2e;
                    T2f            = SIMD_FNMADD(KP500000000, T2e, T2d);
                    Tb             = T5 + Ta;
                    T3x            = T5 - Ta;
                    T2S            = SIMD_FNMADD(KP866025403, Ts, T2j);
                    T2k            = SIMD_FMADD(KP866025403, Ts, T2j);
                    T3y            = TT - TY;
                    TZ             = TT + TY;
                    T3D            = T3n + T3p;
                    T3q            = T3n - T3p;
                    T1w            = SIMD_FMADD(KP866025403, T1v, T1u);
                    T1W            = SIMD_FNMADD(KP866025403, T1v, T1u);
                    T1t            = SIMD_FNMADD(KP866025403, T1s, T1p);
                    T1V            = SIMD_FMADD(KP866025403, T1s, T1p);
                    Tu             = Tq + Tt;
                    T3r            = Tq - Tt;
                    T3F            = T3l - T3k;
                    T3m            = T3k + T3l;
                    T2R            = SIMD_FNMADD(KP866025403, T2g, T2f);
                    T2h            = SIMD_FMADD(KP866025403, T2g, T2f);
                    T3u            = T3s - T3t;
                    T3I            = T3s + T3t;
                    T3B            = T3x - T3y;
                    T3z            = T3x + T3y;
                    T2A            = T1O - T1P;
                    T1Q            = T1O + T1P;
                    T3v            = T3r + T3u;
                    T3C            = T3u - T3r;
                    T1T            = T1R + T1S;
                    T2b            = T1R - T1S;
                    T2l            = T2h - T2k;
                    T2L            = T2h + T2k;
                    T3L            = Tb - Tk;
                    Tl             = Tb + Tk;
                    T3M            = T3J - T3I;
                    T3K            = T3I + T3J;
                    TF             = Tu - TD;
                    TE             = Tu + TD;
                    T3H            = TQ + TZ;
                    T10            = TQ - TZ;
                    T3A            = T3v + T3q;
                    T3w            = T3q - T3v;
                    T3G            = T3C + T3D;
                    T3E            = T3C - T3D;
                    T2K            = T1Q - T1T;
                    T1U            = T1Q + T1T;
                    ro[WS(os, 18)] = T3L - T3M;
                    ro[WS(os, 6)]  = T3L + T3M;
                    T2M            = SIMD_FMADD(KP866025403, T2v, T2s);
                    T2w            = SIMD_FNMADD(KP866025403, T2v, T2s);
                    ro[0]          = Tl + TE;
                    ro[WS(os, 12)] = Tl - TE;
                    io[0]          = T3H + T3K;
                    io[WS(os, 12)] = T3H - T3K;
                    io[WS(os, 18)] = T10 - TF;
                    io[WS(os, 6)]  = TF + T10;
                    ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3A, T3z);
                    ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3A, T3z);
                    io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3w, T3m);
                    io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3w, T3m);
                    io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3G, T3F);
                    io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3G, T3F);
                    ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3E, T3B);
                    ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3E, T3B);
                    T2P            = T2L + T2M;
                    T2N            = T2L - T2M;
                    T2m            = T1V - T1W;
                    T1X            = T1V + T1W;
                    T20            = SIMD_FMADD(KP866025403, T1Z, T1Y);
                    T2x            = SIMD_FNMADD(KP866025403, T1Z, T1Y);
                    T2a            = T22 - T23;
                    T24            = T22 + T23;
                    T27            = T25 + T26;
                    T2B            = T25 - T26;
                }
                T3a            = T13 - T16;
                T17            = T13 + T16;
                T1d            = T19 + T1c;
                T31            = T19 - T1c;
                T36            = T2R - T2S;
                T2T            = T2R + T2S;
                T2W            = SIMD_FNMADD(KP866025403, T2V, T2U);
                T34            = SIMD_FMADD(KP866025403, T2V, T2U);
                T33            = SIMD_FMADD(KP866025403, T1n, T1j);
                T1o            = SIMD_FNMADD(KP866025403, T1n, T1j);
                T1x            = T1t + T1w;
                T37            = T1t - T1w;
                ro[WS(os, 10)] = T2K + T2N;
                ro[WS(os, 22)] = T2K - T2N;
                T30            = T1B - T1E;
                T1F            = T1B + T1E;
                T29            = T20 - T1X;
                T21            = T1X + T20;
                T2O            = T24 + T27;
                T28            = T24 - T27;
                T2Y            = T17 + T1d;
                T1e            = T17 - T1d;
                T2Z            = T2T + T2W;
                T2X            = T2T - T2W;
                T1N            = T1x + T1o;
                T1y            = T1o - T1x;
                T1L            = T1H + T1K;
                T3b            = T1H - T1K;
                ro[WS(os, 16)] = T1U + T21;
                ro[WS(os, 4)]  = T1U - T21;
                io[WS(os, 16)] = T2O + T2P;
                io[WS(os, 4)]  = T2O - T2P;
                io[WS(os, 10)] = T28 + T29;
                io[WS(os, 22)] = T28 - T29;
                io[WS(os, 8)]  = T2Y + T2Z;
                io[WS(os, 20)] = T2Y - T2Z;
                io[WS(os, 2)]  = T1e + T1y;
                io[WS(os, 14)] = T1e - T1y;
                T1M            = T1F + T1L;
                T2Q            = T1F - T1L;
                T3i            = T30 - T31;
                T32            = T30 + T31;
                ro[WS(os, 2)]  = T2Q + T2X;
                ro[WS(os, 14)] = T2Q - T2X;
                ro[WS(os, 8)]  = T1M + T1N;
                ro[WS(os, 20)] = T1M - T1N;
                T3e            = T3a - T3b;
                T3c            = T3a + T3b;
                T3g            = T33 + T34;
                T35            = T33 - T34;
                T3f            = T37 - T36;
                T38            = T36 + T37;
                T2E            = T2a - T2b;
                T2c            = T2a + T2b;
            }
        }
        T3h            = T3f + T3g;
        T3j            = T3g - T3f;
        T39            = T35 - T38;
        T3d            = T38 + T35;
        T2C            = T2A + T2B;
        T2I            = T2A - T2B;
        T2n            = T2l + T2m;
        T2F            = T2l - T2m;
        T2y            = T2w - T2x;
        T2G            = T2x + T2w;
        ro[WS(os, 11)] = SIMD_FMADD(KP707106781, T3j, T3i);
        ro[WS(os, 23)] = SIMD_FNMADD(KP707106781, T3j, T3i);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3h, T3e);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3h, T3e);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T3d, T3c);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3d, T3c);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T39, T32);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T39, T32);
        T2J            = T2F + T2G;
        T2H            = T2F - T2G;
        T2z            = T2n - T2y;
        T2D            = T2n + T2y;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2H, T2E);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2H, T2E);
        ro[WS(os, 19)] = SIMD_FMADD(KP707106781, T2J, T2I);
        ro[WS(os, 7)]  = SIMD_FNMADD(KP707106781, T2J, T2I);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2D, T2C);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2D, T2C);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2z, T2c);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2z, T2c);
    }
}

template <>
struct c2cf_traits<24, 22>
{
    static constexpr long_t flops           = 316;
    static constexpr long_t operations      = 244;
    static constexpr long_t memory_accesses = 92;
    static constexpr long_t stack_vars      = 177;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 22 -name c2cf
 * -standalone */

/*
 * This function contains 244 FP additions, 72 FP multiplications,
 * (or, 172 additions, 0 multiplications, 72 fused multiply/add),
 * 177 stack variables, 3 constants, and 92 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 22>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2F, T2e, T2o, T2p, T2C, T2r, T2d, T2G, T3h, T2X, T3b, T3d,
            T32, T3f, T3e;
        SIMD_FLOAT T37, T2f, T2J, T2H, T2N, T2q, T2K, T2D, T2L, T3g, T3i, T38,
            T3c, T2O, T2M;
        SIMD_FLOAT T2E, T2I;
        {
            SIMD_FLOAT Te, TV, T1U, T1K, T28, T1b, T5, TM, Tj, T1R, T1E, T25,
                T15, T10, T1V;
            SIMD_FLOAT T1N, T29, T1e, Ta, TR, Tv, T1S, T1H, T26, T18, T2s, TA,
                T2x, T2n, T34;
            SIMD_FLOAT T1w, T1Y, T1z, T1Z, Tu, T3x, T33, T2k, T3A, T3O, T1i,
                T2v, Ty, T1j, TB;
            SIMD_FLOAT TC, T1n, T1o;
            {
                SIMD_FLOAT Td, TU, T1, TI, Tf, TW, Tg, T1J, T1a, Th, TX, T14,
                    T4, T1D, TL;
                SIMD_FLOAT TY, Tc, TT, T2, T3, TJ, TK, T6, TN, Ti, T1d, T1C,
                    T13, TZ, T1M;
                SIMD_FLOAT T7, T8, TO, TP;
                Tc  = ri[WS(is, 6)];
                Td  = ri[WS(is, 14)];
                TT  = ii[WS(is, 6)];
                TU  = ii[WS(is, 14)];
                T1  = ri[0];
                TI  = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TJ  = ii[WS(is, 8)];
                TK  = ii[WS(is, 16)];
                Tf  = ri[WS(is, 18)];
                TW  = ii[WS(is, 18)];
                Tg  = ri[WS(is, 2)];
                Te  = Tc + Td;
                T1J = SIMD_FNMADD(KP500000000, Td, Tc);
                TV  = TT + TU;
                T1a = SIMD_FNMADD(KP500000000, TU, TT);
                Th  = ri[WS(is, 10)];
                TX  = ii[WS(is, 2)];
                T14 = T3 - T2;
                T4  = T2 + T3;
                T1D = TJ - TK;
                TL  = TJ + TK;
                TY  = ii[WS(is, 10)];
                T6  = ri[WS(is, 12)];
                TN  = ii[WS(is, 12)];
                T1U = SIMD_FMADD(KP866025403, TU, T1J);
                T1K = SIMD_FNMADD(KP866025403, TU, T1J);
                T28 = SIMD_FNMADD(KP866025403, Td, T1a);
                T1b = SIMD_FMADD(KP866025403, Td, T1a);
                Ti  = Tg + Th;
                T1d = Th - Tg;
                T5  = T1 + T4;
                T1C = SIMD_FNMADD(KP500000000, T4, T1);
                TM  = TI + TL;
                T13 = SIMD_FNMADD(KP500000000, TL, TI);
                TZ  = TX + TY;
                T1M = TX - TY;
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TO  = ii[WS(is, 20)];
                TP  = ii[WS(is, 4)];
                {
                    SIMD_FLOAT Tm, T17, T1G, T2g, T1t, T1u, T1F, T16, T1y, T2l,
                        Tr, T2j, Tp, Ts, T1c;
                    SIMD_FLOAT T9, TQ, Tn, To, T1L, T1v, T3z, T2m, Tq, T1s, Tt,
                        T1x, T3y, T2i, T2h;
                    SIMD_FLOAT Tw, Tx;
                    Tm  = ri[WS(is, 3)];
                    T1L = SIMD_FNMADD(KP500000000, Ti, Tf);
                    Tj  = Tf + Ti;
                    T1R = SIMD_FMADD(KP866025403, T1D, T1C);
                    T1E = SIMD_FNMADD(KP866025403, T1D, T1C);
                    T25 = SIMD_FMADD(KP866025403, T14, T13);
                    T15 = SIMD_FNMADD(KP866025403, T14, T13);
                    T1c = SIMD_FNMADD(KP500000000, TZ, TW);
                    T10 = TW + TZ;
                    T17 = T8 - T7;
                    T9  = T7 + T8;
                    T1G = TO - TP;
                    TQ  = TO + TP;
                    T1V = SIMD_FMADD(KP866025403, T1M, T1L);
                    T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                    T2g = ii[WS(is, 3)];
                    Tn  = ri[WS(is, 11)];
                    To  = ri[WS(is, 19)];
                    T1t = ii[WS(is, 11)];
                    T29 = SIMD_FMADD(KP866025403, T1d, T1c);
                    T1e = SIMD_FNMADD(KP866025403, T1d, T1c);
                    T1u = ii[WS(is, 19)];
                    Ta  = T6 + T9;
                    T1F = SIMD_FNMADD(KP500000000, T9, T6);
                    TR  = TN + TQ;
                    T16 = SIMD_FNMADD(KP500000000, TQ, TN);
                    T1y = ii[WS(is, 7)];
                    T2l = ii[WS(is, 15)];
                    Tr  = ri[WS(is, 15)];
                    T2j = To - Tn;
                    Tp  = Tn + To;
                    Ts  = ri[WS(is, 7)];
                    Tv  = ri[WS(is, 21)];
                    T2h = T1t + T1u;
                    T1v = T1t - T1u;
                    T1S = SIMD_FMADD(KP866025403, T1G, T1F);
                    T1H = SIMD_FNMADD(KP866025403, T1G, T1F);
                    T26 = SIMD_FMADD(KP866025403, T17, T16);
                    T18 = SIMD_FNMADD(KP866025403, T17, T16);
                    T3z = T2l + T1y;
                    T2m = SIMD_FNMADD(KP500000000, T1y, T2l);
                    T2s = ii[WS(is, 21)];
                    Tq  = Tm + Tp;
                    T1s = SIMD_FNMADD(KP500000000, Tp, Tm);
                    Tt  = Tr + Ts;
                    T1x = SIMD_FNMADD(KP500000000, Ts, Tr);
                    T3y = T2g + T2h;
                    T2i = SIMD_FNMADD(KP500000000, T2h, T2g);
                    TA  = ri[WS(is, 9)];
                    T2x = ii[WS(is, 9)];
                    Tw  = ri[WS(is, 5)];
                    Tx  = ri[WS(is, 13)];
                    T2n = SIMD_FMADD(KP866025403, Ts, T2m);
                    T34 = SIMD_FNMADD(KP866025403, Ts, T2m);
                    T1w = SIMD_FNMADD(KP866025403, T1v, T1s);
                    T1Y = SIMD_FMADD(KP866025403, T1v, T1s);
                    T1z = SIMD_FMADD(KP866025403, T1y, T1x);
                    T1Z = SIMD_FNMADD(KP866025403, T1y, T1x);
                    Tu  = Tq + Tt;
                    T3x = Tq - Tt;
                    T33 = SIMD_FNMADD(KP866025403, T2j, T2i);
                    T2k = SIMD_FMADD(KP866025403, T2j, T2i);
                    T3A = T3y - T3z;
                    T3O = T3y + T3z;
                    T1i = ii[WS(is, 5)];
                    T2v = Tx - Tw;
                    Ty  = Tw + Tx;
                    T1j = ii[WS(is, 13)];
                    TB  = ri[WS(is, 17)];
                    TC  = ri[WS(is, 1)];
                    T1n = ii[WS(is, 17)];
                    T1o = ii[WS(is, 1)];
                }
            }
            {
                SIMD_FLOAT T3r, T3L, T3H, T3F, T1l, T2Y, T1q, T2Z, T2P, T1X,
                    T27, T3G, T3C, T3M, T3K;
                SIMD_FLOAT T2U, T2S, T2c, T24, T2a, Tk, TS, Tb, T3D, T3B, T3I,
                    T3E, T11, T1h, Tz;
                SIMD_FLOAT T1k, T2t, TD, T2A, T1p, T2y, T3p, T3q, T39, T2W, T35,
                    T3k, T2T, T2b, T3n;
                SIMD_FLOAT T1g, T3l, T30, T31, T1r, T1A, T36, T2V, T1I, T1O,
                    T3a, T19, T1f, T3o, T3m;
                SIMD_FLOAT T1Q, T1B, T3j, T1P;
                Tk  = Te + Tj;
                T3p = Te - Tj;
                T3q = TM - TR;
                TS  = TM + TR;
                Tb  = T5 + Ta;
                T3D = T5 - Ta;
                T3B = T3x + T3A;
                T3I = T3A - T3x;
                T3E = TV - T10;
                T11 = TV + T10;
                T1h = SIMD_FNMADD(KP500000000, Ty, Tv);
                Tz  = Tv + Ty;
                T1k = T1i - T1j;
                T2t = T1i + T1j;
                TD  = TB + TC;
                T2A = TC - TB;
                T1p = T1n - T1o;
                T2y = T1n + T1o;
                T3r = T3p + T3q;
                T3L = T3q - T3p;
                {
                    SIMD_FLOAT T21, T3R, Tl, T2w, T3s, TF, T22, T3v, T3P, T2B,
                        T2u, T3t, T1m, TE, T2z;
                    SIMD_FLOAT T3u, T1T, T1W, T2Q, T3N, T12, TH, TG, T20, T3Q,
                        T3S, T3J, T3w, T2R, T23;
                    T3H            = T3D - T3E;
                    T3F            = T3D + T3E;
                    T2u            = SIMD_FNMADD(KP500000000, T2t, T2s);
                    T3t            = T2s + T2t;
                    T1l            = SIMD_FNMADD(KP866025403, T1k, T1h);
                    T21            = SIMD_FMADD(KP866025403, T1k, T1h);
                    T1m            = SIMD_FNMADD(KP500000000, TD, TA);
                    TE             = TA + TD;
                    T2z            = SIMD_FNMADD(KP500000000, T2y, T2x);
                    T3u            = T2x + T2y;
                    T3R            = Tb - Tk;
                    Tl             = Tb + Tk;
                    T2Y            = SIMD_FNMADD(KP866025403, T2v, T2u);
                    T2w            = SIMD_FMADD(KP866025403, T2v, T2u);
                    T3s            = Tz - TE;
                    TF             = Tz + TE;
                    T1q            = SIMD_FNMADD(KP866025403, T1p, T1m);
                    T22            = SIMD_FMADD(KP866025403, T1p, T1m);
                    T3v            = T3t - T3u;
                    T3P            = T3t + T3u;
                    T2B            = SIMD_FMADD(KP866025403, T2A, T2z);
                    T2Z            = SIMD_FNMADD(KP866025403, T2A, T2z);
                    T2F            = T1R - T1S;
                    T1T            = T1R + T1S;
                    T1W            = T1U + T1V;
                    T2e            = T1U - T1V;
                    T2o            = T2k - T2n;
                    T2Q            = T2k + T2n;
                    T3N            = TS + T11;
                    T12            = TS - T11;
                    TH             = Tu - TF;
                    TG             = Tu + TF;
                    T20            = T1Y + T1Z;
                    T2p            = T1Y - T1Z;
                    T3Q            = T3O + T3P;
                    T3S            = T3P - T3O;
                    T3J            = T3s + T3v;
                    T3w            = T3s - T3v;
                    T2C            = T2w - T2B;
                    T2R            = T2w + T2B;
                    T2P            = T1T - T1W;
                    T1X            = T1T + T1W;
                    T23            = T21 + T22;
                    T2r            = T21 - T22;
                    T2d            = T25 - T26;
                    T27            = T25 + T26;
                    io[WS(os, 18)] = T12 - TH;
                    io[WS(os, 6)]  = TH + T12;
                    ro[0]          = Tl + TG;
                    ro[WS(os, 12)] = Tl - TG;
                    ro[WS(os, 18)] = T3R - T3S;
                    ro[WS(os, 6)]  = T3R + T3S;
                    io[0]          = T3N + T3Q;
                    io[WS(os, 12)] = T3N - T3Q;
                    T3G            = T3B + T3w;
                    T3C            = T3w - T3B;
                    T3M            = T3I + T3J;
                    T3K            = T3I - T3J;
                    T2U            = T2Q + T2R;
                    T2S            = T2Q - T2R;
                    T2c            = T23 - T20;
                    T24            = T20 + T23;
                    T2a            = T28 + T29;
                    T2G            = T28 - T29;
                }
                T39            = T15 - T18;
                T19            = T15 + T18;
                T1f            = T1b + T1e;
                T2W            = T1b - T1e;
                T35            = T33 - T34;
                T3k            = T33 + T34;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3G, T3F);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3G, T3F);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3C, T3r);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3C, T3r);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3M, T3L);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3M, T3L);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3K, T3H);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3K, T3H);
                ro[WS(os, 10)] = T2P + T2S;
                ro[WS(os, 22)] = T2P - T2S;
                ro[WS(os, 16)] = T1X + T24;
                ro[WS(os, 4)]  = T1X - T24;
                T2T            = T27 + T2a;
                T2b            = T27 - T2a;
                T3n            = T19 + T1f;
                T1g            = T19 - T1f;
                T3l            = T2Y + T2Z;
                T30            = T2Y - T2Z;
                T31            = T1l - T1q;
                T1r            = T1l + T1q;
                T1A            = T1w + T1z;
                T36            = T1w - T1z;
                T2V            = T1E - T1H;
                T1I            = T1E + T1H;
                T1O            = T1K + T1N;
                T3a            = T1K - T1N;
                io[WS(os, 16)] = T2T + T2U;
                io[WS(os, 4)]  = T2T - T2U;
                io[WS(os, 10)] = T2b + T2c;
                io[WS(os, 22)] = T2b - T2c;
                T3o            = T3k + T3l;
                T3m            = T3k - T3l;
                T1Q            = T1A + T1r;
                T1B            = T1r - T1A;
                T3j            = T1I - T1O;
                T1P            = T1I + T1O;
                T3h            = T2V - T2W;
                T2X            = T2V + T2W;
                io[WS(os, 8)]  = T3n + T3o;
                io[WS(os, 20)] = T3n - T3o;
                io[WS(os, 2)]  = T1g + T1B;
                io[WS(os, 14)] = T1g - T1B;
                ro[WS(os, 2)]  = T3j + T3m;
                ro[WS(os, 14)] = T3j - T3m;
                ro[WS(os, 8)]  = T1P + T1Q;
                ro[WS(os, 20)] = T1P - T1Q;
                T3b            = T39 + T3a;
                T3d            = T39 - T3a;
                T32            = T30 - T31;
                T3f            = T31 + T30;
                T3e            = T36 - T35;
                T37            = T35 + T36;
            }
        }
        T3g            = T3e - T3f;
        T3i            = T3e + T3f;
        T38            = T32 - T37;
        T3c            = T37 + T32;
        T2f            = T2d + T2e;
        T2J            = T2d - T2e;
        T2H            = T2F + T2G;
        T2N            = T2F - T2G;
        T2q            = T2o + T2p;
        T2K            = T2o - T2p;
        T2D            = T2r - T2C;
        T2L            = T2r + T2C;
        ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T3i, T3h);
        ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3i, T3h);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3g, T3d);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3g, T3d);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T3c, T3b);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3c, T3b);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T38, T2X);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T38, T2X);
        T2O            = T2L - T2K;
        T2M            = T2K + T2L;
        T2E            = T2q - T2D;
        T2I            = T2q + T2D;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2M, T2J);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2M, T2J);
        ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2O, T2N);
        ro[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2O, T2N);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2I, T2H);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2I, T2H);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2E, T2f);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2E, T2f);
    }
}

template <>
struct c2cf_traits<24, 23>
{
    static constexpr long_t flops           = 320;
    static constexpr long_t operations      = 248;
    static constexpr long_t memory_accesses = 94;
    static constexpr long_t stack_vars      = 205;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 23 -name c2cf
 * -standalone */

/*
 * This function contains 248 FP additions, 72 FP multiplications,
 * (or, 176 additions, 0 multiplications, 72 fused multiply/add),
 * 205 stack variables, 3 constants, and 94 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 23>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2L, T2k, T2u, T2I, T2v, T2x, T2j, T2M, T3n, T33, T3h, T3j,
            T38, T3l, T3k;
        SIMD_FLOAT T3d, T2l, T2P, T2N, T2T, T2w, T2Q, T2J, T2R, T3m, T3o, T3e,
            T3i, T2U, T2S;
        SIMD_FLOAT T2K, T2O;
        {
            SIMD_FLOAT T5, TO, Ta, TT, T1J, T1X, T19, T2b, Tl, T1Y, T1M, T2c,
                T1c, T14, T21;
            SIMD_FLOAT T1T, T2f, T1j, Tx, T2y, Tg, TZ, T1Q, T20, T1g, T2e, TC,
                T3a, T2t, T24;
            SIMD_FLOAT T1B, T25, T1E, T3D, Tw, T2D, Ty, T2q, T39, T3U, T3G, Tz,
                T1n, T1o, TD;
            SIMD_FLOAT TE, T1s, T1t, T1, TK, T6, TP, Th, T10, Ti, T18, T4, T1I,
                TN, Tj;
            SIMD_FLOAT T11, T1b, T9, T1L, TS, T12, T2, T3, TL, TM, T7, T8, TQ,
                TR;
            T1  = ri[0];
            TK  = ii[0];
            T2  = ri[WS(is, 8)];
            T3  = ri[WS(is, 16)];
            TL  = ii[WS(is, 8)];
            TM  = ii[WS(is, 16)];
            T6  = ri[WS(is, 12)];
            TP  = ii[WS(is, 12)];
            T7  = ri[WS(is, 20)];
            T8  = ri[WS(is, 4)];
            TQ  = ii[WS(is, 20)];
            TR  = ii[WS(is, 4)];
            Th  = ri[WS(is, 18)];
            T10 = ii[WS(is, 18)];
            Ti  = ri[WS(is, 2)];
            T18 = T3 - T2;
            T4  = T2 + T3;
            T1I = TL - TM;
            TN  = TL + TM;
            Tj  = ri[WS(is, 10)];
            T11 = ii[WS(is, 2)];
            T1b = T8 - T7;
            T9  = T7 + T8;
            T1L = TQ - TR;
            TS  = TQ + TR;
            T12 = ii[WS(is, 10)];
            {
                SIMD_FLOAT Tc, TV, T1i, T1S, Td, T1R, T1h, Te, TW, TX, T1H, T17,
                    Tk, T1K, T1a;
                SIMD_FLOAT T13, To, T2m, T1y, T1f, Tf, T1P, TY, T1z, T1D, T2r,
                    Tt, T2p, Tr, Tu;
                SIMD_FLOAT Tp, Tq, T3F, T3E, T2o, T1O, T1e, T1A, T2n, T2s, Ts,
                    T1x, Tv, T1C;
                Tc  = ri[WS(is, 6)];
                TV  = ii[WS(is, 6)];
                T5  = T1 + T4;
                T1H = SIMD_FNMADD(KP500000000, T4, T1);
                TO  = TK + TN;
                T17 = SIMD_FNMADD(KP500000000, TN, TK);
                Tk  = Ti + Tj;
                T1i = Tj - Ti;
                Ta  = T6 + T9;
                T1K = SIMD_FNMADD(KP500000000, T9, T6);
                TT  = TP + TS;
                T1a = SIMD_FNMADD(KP500000000, TS, TP);
                T13 = T11 + T12;
                T1S = T11 - T12;
                T1J = SIMD_FNMADD(KP866025403, T1I, T1H);
                T1X = SIMD_FMADD(KP866025403, T1I, T1H);
                T19 = SIMD_FNMADD(KP866025403, T18, T17);
                T2b = SIMD_FMADD(KP866025403, T18, T17);
                Td  = ri[WS(is, 14)];
                T1R = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T1Y = SIMD_FMADD(KP866025403, T1L, T1K);
                T1M = SIMD_FNMADD(KP866025403, T1L, T1K);
                T2c = SIMD_FMADD(KP866025403, T1b, T1a);
                T1c = SIMD_FNMADD(KP866025403, T1b, T1a);
                T1h = SIMD_FNMADD(KP500000000, T13, T10);
                T14 = T10 + T13;
                Te  = ri[WS(is, 22)];
                TW  = ii[WS(is, 14)];
                TX  = ii[WS(is, 22)];
                To  = ri[WS(is, 3)];
                T21 = SIMD_FMADD(KP866025403, T1S, T1R);
                T1T = SIMD_FNMADD(KP866025403, T1S, T1R);
                T2m = ii[WS(is, 3)];
                Tp  = ri[WS(is, 11)];
                Tq  = ri[WS(is, 19)];
                T1y = ii[WS(is, 11)];
                T2f = SIMD_FMADD(KP866025403, T1i, T1h);
                T1j = SIMD_FNMADD(KP866025403, T1i, T1h);
                T1f = Te - Td;
                Tf  = Td + Te;
                T1P = TW - TX;
                TY  = TW + TX;
                T1z = ii[WS(is, 19)];
                T1D = ii[WS(is, 7)];
                T2r = ii[WS(is, 15)];
                Tt  = ri[WS(is, 15)];
                T2p = Tq - Tp;
                Tr  = Tp + Tq;
                Tu  = ri[WS(is, 7)];
                Tx  = ri[WS(is, 21)];
                T2y = ii[WS(is, 21)];
                Tg  = Tc + Tf;
                T1O = SIMD_FNMADD(KP500000000, Tf, Tc);
                TZ  = TV + TY;
                T1e = SIMD_FNMADD(KP500000000, TY, TV);
                T1A = T1y - T1z;
                T2n = T1y + T1z;
                T2s = SIMD_FNMADD(KP500000000, T1D, T2r);
                T3F = T2r + T1D;
                Ts  = To + Tr;
                T1x = SIMD_FNMADD(KP500000000, Tr, To);
                Tv  = Tt + Tu;
                T1C = SIMD_FNMADD(KP500000000, Tu, Tt);
                T1Q = SIMD_FNMADD(KP866025403, T1P, T1O);
                T20 = SIMD_FMADD(KP866025403, T1P, T1O);
                T1g = SIMD_FNMADD(KP866025403, T1f, T1e);
                T2e = SIMD_FMADD(KP866025403, T1f, T1e);
                T3E = T2m + T2n;
                T2o = SIMD_FNMADD(KP500000000, T2n, T2m);
                TC  = ri[WS(is, 9)];
                T3a = SIMD_FNMADD(KP866025403, Tu, T2s);
                T2t = SIMD_FMADD(KP866025403, Tu, T2s);
                T24 = SIMD_FMADD(KP866025403, T1A, T1x);
                T1B = SIMD_FNMADD(KP866025403, T1A, T1x);
                T25 = SIMD_FNMADD(KP866025403, T1D, T1C);
                T1E = SIMD_FMADD(KP866025403, T1D, T1C);
                T3D = Ts - Tv;
                Tw  = Ts + Tv;
                T2D = ii[WS(is, 9)];
                Ty  = ri[WS(is, 5)];
                T2q = SIMD_FMADD(KP866025403, T2p, T2o);
                T39 = SIMD_FNMADD(KP866025403, T2p, T2o);
                T3U = T3E + T3F;
                T3G = T3E - T3F;
                Tz  = ri[WS(is, 13)];
                T1n = ii[WS(is, 5)];
                T1o = ii[WS(is, 13)];
                TD  = ri[WS(is, 17)];
                TE  = ri[WS(is, 1)];
                T1s = ii[WS(is, 17)];
                T1t = ii[WS(is, 1)];
            }
            {
                SIMD_FLOAT T3x, T3R, T3N, T3L, T1q, T34, T1v, T35, T23, T2V,
                    T3I, T3M, T3Q, T3S, T2Y;
                SIMD_FLOAT T30, T2i, T2a, T2d, T2g, Tm, TU, Tb, T15, T3O, T3H,
                    TA, T2B, T1p, T2z;
                SIMD_FLOAT TF, T2G, T1u, T2E, T3v, T3w, T3J, T3K, T3f, T32, T2h,
                    T2Z, T3t, T1l, T3b;
                SIMD_FLOAT T3q, T3r, T36, T37, T1w, T1F, T3c, T31, T1N, T1U,
                    T3g, T1d, T1k, T3u, T3s;
                SIMD_FLOAT T1W, T1G, T3p, T1V;
                Tm  = Tg + Tl;
                T3v = Tg - Tl;
                T3w = TO - TT;
                TU  = TO + TT;
                Tb  = T5 + Ta;
                T3J = T5 - Ta;
                T3K = TZ - T14;
                T15 = TZ + T14;
                T3O = T3G - T3D;
                T3H = T3D + T3G;
                TA  = Ty + Tz;
                T2B = Tz - Ty;
                T1p = T1n - T1o;
                T2z = T1n + T1o;
                TF  = TD + TE;
                T2G = TE - TD;
                T1u = T1s - T1t;
                T2E = T1s + T1t;
                T3x = T3v + T3w;
                T3R = T3w - T3v;
                T3N = T3J - T3K;
                T3L = T3J + T3K;
                {
                    SIMD_FLOAT T27, T2C, T3y, T28, T3B, T3V, T2H, Tn, T3X, T3T,
                        T16, TI, TJ, TH, TB;
                    SIMD_FLOAT T1m, T3z, T2A, TG, T1r, T3A, T2F, T1Z, T22, T3W,
                        T3Y, T3P, T3C, T2W, T2X;
                    SIMD_FLOAT T26, T29;
                    TB             = Tx + TA;
                    T1m            = SIMD_FNMADD(KP500000000, TA, Tx);
                    T3z            = T2y + T2z;
                    T2A            = SIMD_FNMADD(KP500000000, T2z, T2y);
                    TG             = TC + TF;
                    T1r            = SIMD_FNMADD(KP500000000, TF, TC);
                    T3A            = T2D + T2E;
                    T2F            = SIMD_FNMADD(KP500000000, T2E, T2D);
                    T1q            = SIMD_FNMADD(KP866025403, T1p, T1m);
                    T27            = SIMD_FMADD(KP866025403, T1p, T1m);
                    T2C            = SIMD_FMADD(KP866025403, T2B, T2A);
                    T34            = SIMD_FNMADD(KP866025403, T2B, T2A);
                    T3y            = TB - TG;
                    TH             = TB + TG;
                    T1v            = SIMD_FNMADD(KP866025403, T1u, T1r);
                    T28            = SIMD_FMADD(KP866025403, T1u, T1r);
                    T3B            = T3z - T3A;
                    T3V            = T3z + T3A;
                    T2H            = SIMD_FMADD(KP866025403, T2G, T2F);
                    T35            = SIMD_FNMADD(KP866025403, T2G, T2F);
                    Tn             = Tb + Tm;
                    T3X            = Tb - Tm;
                    T3T            = TU + T15;
                    T16            = TU - T15;
                    TI             = Tw + TH;
                    TJ             = Tw - TH;
                    T2L            = T1X - T1Y;
                    T1Z            = T1X + T1Y;
                    T22            = T20 + T21;
                    T2k            = T20 - T21;
                    T3W            = T3U + T3V;
                    T3Y            = T3V - T3U;
                    T3P            = T3y + T3B;
                    T3C            = T3y - T3B;
                    T2u            = T2q - T2t;
                    T2W            = T2q + T2t;
                    T2X            = T2C + T2H;
                    T2I            = T2C - T2H;
                    T2v            = T24 - T25;
                    T26            = T24 + T25;
                    T29            = T27 + T28;
                    T2x            = T27 - T28;
                    io[WS(os, 18)] = T16 - TJ;
                    io[WS(os, 6)]  = TJ + T16;
                    ro[0]          = Tn + TI;
                    ro[WS(os, 12)] = Tn - TI;
                    T23            = T1Z + T22;
                    T2V            = T1Z - T22;
                    ro[WS(os, 18)] = T3X - T3Y;
                    ro[WS(os, 6)]  = T3X + T3Y;
                    io[0]          = T3T + T3W;
                    io[WS(os, 12)] = T3T - T3W;
                    T3I            = T3C - T3H;
                    T3M            = T3H + T3C;
                    T3Q            = T3O - T3P;
                    T3S            = T3O + T3P;
                    T2Y            = T2W - T2X;
                    T30            = T2W + T2X;
                    T2i            = T29 - T26;
                    T2a            = T26 + T29;
                    T2j            = T2b - T2c;
                    T2d            = T2b + T2c;
                    T2g            = T2e + T2f;
                    T2M            = T2e - T2f;
                }
                T3f            = T19 - T1c;
                T1d            = T19 + T1c;
                T1k            = T1g + T1j;
                T32            = T1g - T1j;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3M, T3L);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3M, T3L);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3I, T3x);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3I, T3x);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3S, T3R);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3S, T3R);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3Q, T3N);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3Q, T3N);
                ro[WS(os, 10)] = T2V + T2Y;
                ro[WS(os, 22)] = T2V - T2Y;
                ro[WS(os, 16)] = T23 + T2a;
                ro[WS(os, 4)]  = T23 - T2a;
                T2h            = T2d - T2g;
                T2Z            = T2d + T2g;
                T3t            = T1d + T1k;
                T1l            = T1d - T1k;
                T3b            = T39 - T3a;
                T3q            = T39 + T3a;
                T3r            = T34 + T35;
                T36            = T34 - T35;
                T37            = T1q - T1v;
                T1w            = T1q + T1v;
                T1F            = T1B + T1E;
                T3c            = T1B - T1E;
                T31            = T1J - T1M;
                T1N            = T1J + T1M;
                T1U            = T1Q + T1T;
                T3g            = T1Q - T1T;
                io[WS(os, 16)] = T2Z + T30;
                io[WS(os, 4)]  = T2Z - T30;
                io[WS(os, 10)] = T2h + T2i;
                io[WS(os, 22)] = T2h - T2i;
                T3u            = T3q + T3r;
                T3s            = T3q - T3r;
                T1W            = T1F + T1w;
                T1G            = T1w - T1F;
                T3p            = T1N - T1U;
                T1V            = T1N + T1U;
                T3n            = T31 - T32;
                T33            = T31 + T32;
                io[WS(os, 8)]  = T3t + T3u;
                io[WS(os, 20)] = T3t - T3u;
                io[WS(os, 2)]  = T1l + T1G;
                io[WS(os, 14)] = T1l - T1G;
                ro[WS(os, 2)]  = T3p + T3s;
                ro[WS(os, 14)] = T3p - T3s;
                ro[WS(os, 8)]  = T1V + T1W;
                ro[WS(os, 20)] = T1V - T1W;
                T3h            = T3f + T3g;
                T3j            = T3f - T3g;
                T38            = T36 - T37;
                T3l            = T37 + T36;
                T3k            = T3c - T3b;
                T3d            = T3b + T3c;
            }
        }
        T3m            = T3k - T3l;
        T3o            = T3k + T3l;
        T3e            = T38 - T3d;
        T3i            = T3d + T38;
        T2l            = T2j + T2k;
        T2P            = T2j - T2k;
        T2N            = T2L + T2M;
        T2T            = T2L - T2M;
        T2w            = T2u + T2v;
        T2Q            = T2u - T2v;
        T2J            = T2x - T2I;
        T2R            = T2x + T2I;
        ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T3o, T3n);
        ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3o, T3n);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3m, T3j);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3m, T3j);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T3i, T3h);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3i, T3h);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3e, T33);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3e, T33);
        T2U            = T2R - T2Q;
        T2S            = T2Q + T2R;
        T2K            = T2w - T2J;
        T2O            = T2w + T2J;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2S, T2P);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2S, T2P);
        ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2U, T2T);
        ro[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2U, T2T);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2O, T2N);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2O, T2N);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2K, T2l);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2K, T2l);
    }
}

template <>
struct c2cf_traits<24, 24>
{
    static constexpr long_t flops           = 324;
    static constexpr long_t operations      = 252;
    static constexpr long_t memory_accesses = 96;
    static constexpr long_t stack_vars      = 175;
    static constexpr long_t constants       = 3;
};
/* Generated by: ./gen_notwf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 24 -first-k 24 -name c2cf
 * -standalone */

/*
 * This function contains 252 FP additions, 72 FP multiplications,
 * (or, 180 additions, 0 multiplications, 72 fused multiply/add),
 * 175 stack variables, 3 constants, and 96 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t is, long_t os>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 24 && ProvidedElements == 24>::type
c2cf(SIMD_FLOAT const* __restrict ri, SIMD_FLOAT const* __restrict ii,
     SIMD_FLOAT* __restrict ro, SIMD_FLOAT* __restrict io)
{
    DK(KP707106781, +0.707106781186547524400844362104849039284835938);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T2R, T2o, T2O, T2q, T2B, T2D, T2n, T2S, T3t, T39, T3n, T3p,
            T3e, T3r, T3q;
        SIMD_FLOAT T3j, T2p, T2V, T2T, T2Z, T2C, T2W, T2P, T2X, T3s, T3u, T3k,
            T3o, T30, T2Y;
        SIMD_FLOAT T2Q, T2U;
        {
            SIMD_FLOAT T5, TQ, Ta, TV, T1N, T21, T1b, T2f, Tl, T22, T1Q, T2g,
                T1e, T16, T25;
            SIMD_FLOAT T1X, T2j, T1l, To, T2r, Tg, T11, T1U, T24, T1i, T2i, Tt,
                T2w, T1s, T2b;
            SIMD_FLOAT T2I, T3a, TJ, T3E, T2c, T1x, T3H, T41, T2N, T3b, Tr, T2u,
                T2s, T1C, Tu;
            SIMD_FLOAT Tv, T1F, T1G;
            {
                SIMD_FLOAT T1, TM, T6, TR, Th, T12, Ti, T1a, T4, T1M, TP, Tj,
                    T13, T1d, T9;
                SIMD_FLOAT T1P, TU, T14, T2, T3, TN, TO, T7, T8, TS, TT, Tc, TX,
                    T1k, T1W;
                SIMD_FLOAT Td, T1V, T1j, Te, TY, TZ, T1L, T19, Tk, T1O, T1c,
                    T15;
                T1  = ri[0];
                TM  = ii[0];
                T2  = ri[WS(is, 8)];
                T3  = ri[WS(is, 16)];
                TN  = ii[WS(is, 8)];
                TO  = ii[WS(is, 16)];
                T6  = ri[WS(is, 12)];
                TR  = ii[WS(is, 12)];
                T7  = ri[WS(is, 20)];
                T8  = ri[WS(is, 4)];
                TS  = ii[WS(is, 20)];
                TT  = ii[WS(is, 4)];
                Th  = ri[WS(is, 18)];
                T12 = ii[WS(is, 18)];
                Ti  = ri[WS(is, 2)];
                T1a = T3 - T2;
                T4  = T2 + T3;
                T1M = TN - TO;
                TP  = TN + TO;
                Tj  = ri[WS(is, 10)];
                T13 = ii[WS(is, 2)];
                T1d = T8 - T7;
                T9  = T7 + T8;
                T1P = TS - TT;
                TU  = TS + TT;
                T14 = ii[WS(is, 10)];
                Tc  = ri[WS(is, 6)];
                TX  = ii[WS(is, 6)];
                T5  = T1 + T4;
                T1L = SIMD_FNMADD(KP500000000, T4, T1);
                TQ  = TM + TP;
                T19 = SIMD_FNMADD(KP500000000, TP, TM);
                Tk  = Ti + Tj;
                T1k = Tj - Ti;
                Ta  = T6 + T9;
                T1O = SIMD_FNMADD(KP500000000, T9, T6);
                TV  = TR + TU;
                T1c = SIMD_FNMADD(KP500000000, TU, TR);
                T15 = T13 + T14;
                T1W = T13 - T14;
                T1N = SIMD_FNMADD(KP866025403, T1M, T1L);
                T21 = SIMD_FMADD(KP866025403, T1M, T1L);
                T1b = SIMD_FNMADD(KP866025403, T1a, T19);
                T2f = SIMD_FMADD(KP866025403, T1a, T19);
                Td  = ri[WS(is, 14)];
                T1V = SIMD_FNMADD(KP500000000, Tk, Th);
                Tl  = Th + Tk;
                T22 = SIMD_FMADD(KP866025403, T1P, T1O);
                T1Q = SIMD_FNMADD(KP866025403, T1P, T1O);
                T2g = SIMD_FMADD(KP866025403, T1d, T1c);
                T1e = SIMD_FNMADD(KP866025403, T1d, T1c);
                T1j = SIMD_FNMADD(KP500000000, T15, T12);
                T16 = T12 + T15;
                Te  = ri[WS(is, 22)];
                TY  = ii[WS(is, 14)];
                TZ  = ii[WS(is, 22)];
                {
                    SIMD_FLOAT Tz, T2E, TE, T2J, TA, T1h, Tf, T1T, T10, TB, T1p,
                        T1q, TF, TG, T1u;
                    SIMD_FLOAT T1v, T2H, T1r, T2M, T1w, TD, T1o, T3F, T2G, TI,
                        T1t, T3G, T2L, T1S, T1g;
                    SIMD_FLOAT TC, T2F, TH, T2K, Tp, Tq, T1A, T1B;
                    Tz  = ri[WS(is, 21)];
                    T25 = SIMD_FMADD(KP866025403, T1W, T1V);
                    T1X = SIMD_FNMADD(KP866025403, T1W, T1V);
                    T2E = ii[WS(is, 21)];
                    TE  = ri[WS(is, 9)];
                    T2J = ii[WS(is, 9)];
                    TA  = ri[WS(is, 5)];
                    T2j = SIMD_FMADD(KP866025403, T1k, T1j);
                    T1l = SIMD_FNMADD(KP866025403, T1k, T1j);
                    T1h = Te - Td;
                    Tf  = Td + Te;
                    T1T = TY - TZ;
                    T10 = TY + TZ;
                    TB  = ri[WS(is, 13)];
                    T1p = ii[WS(is, 5)];
                    T1q = ii[WS(is, 13)];
                    TF  = ri[WS(is, 17)];
                    TG  = ri[WS(is, 1)];
                    T1u = ii[WS(is, 17)];
                    T1v = ii[WS(is, 1)];
                    To  = ri[WS(is, 3)];
                    T2r = ii[WS(is, 3)];
                    Tg  = Tc + Tf;
                    T1S = SIMD_FNMADD(KP500000000, Tf, Tc);
                    T11 = TX + T10;
                    T1g = SIMD_FNMADD(KP500000000, T10, TX);
                    TC  = TA + TB;
                    T2H = TB - TA;
                    T1r = T1p - T1q;
                    T2F = T1p + T1q;
                    TH  = TF + TG;
                    T2M = TG - TF;
                    T1w = T1u - T1v;
                    T2K = T1u + T1v;
                    T1U = SIMD_FNMADD(KP866025403, T1T, T1S);
                    T24 = SIMD_FMADD(KP866025403, T1T, T1S);
                    T1i = SIMD_FNMADD(KP866025403, T1h, T1g);
                    T2i = SIMD_FMADD(KP866025403, T1h, T1g);
                    Tt  = ri[WS(is, 15)];
                    TD  = Tz + TC;
                    T1o = SIMD_FNMADD(KP500000000, TC, Tz);
                    T3F = T2E + T2F;
                    T2G = SIMD_FNMADD(KP500000000, T2F, T2E);
                    TI  = TE + TH;
                    T1t = SIMD_FNMADD(KP500000000, TH, TE);
                    T3G = T2J + T2K;
                    T2L = SIMD_FNMADD(KP500000000, T2K, T2J);
                    T2w = ii[WS(is, 15)];
                    Tp  = ri[WS(is, 11)];
                    Tq  = ri[WS(is, 19)];
                    T1A = ii[WS(is, 11)];
                    T1B = ii[WS(is, 19)];
                    T1s = SIMD_FNMADD(KP866025403, T1r, T1o);
                    T2b = SIMD_FMADD(KP866025403, T1r, T1o);
                    T2I = SIMD_FMADD(KP866025403, T2H, T2G);
                    T3a = SIMD_FNMADD(KP866025403, T2H, T2G);
                    TJ  = TD + TI;
                    T3E = TD - TI;
                    T2c = SIMD_FMADD(KP866025403, T1w, T1t);
                    T1x = SIMD_FNMADD(KP866025403, T1w, T1t);
                    T3H = T3F - T3G;
                    T41 = T3F + T3G;
                    T2N = SIMD_FMADD(KP866025403, T2M, T2L);
                    T3b = SIMD_FNMADD(KP866025403, T2M, T2L);
                    Tr  = Tp + Tq;
                    T2u = Tq - Tp;
                    T2s = T1A + T1B;
                    T1C = T1A - T1B;
                    Tu  = ri[WS(is, 23)];
                    Tv  = ri[WS(is, 7)];
                    T1F = ii[WS(is, 23)];
                    T1G = ii[WS(is, 7)];
                }
            }
            {
                SIMD_FLOAT T3X, T3D, T1D, T3g, T3T, T3R, T1I, T3h, T31, T27,
                    T2h, T3S, T3O, T3Y, T3W;
                SIMD_FLOAT T36, T34, T2m, T2e, T2k, T3l, T38, T3i, T3w, T35,
                    T2l, T3z, T1n, T3x, T3c;
                SIMD_FLOAT T3d, T1y, T1J, T3f, T37, T1R, T1Y, T3m, T1f, T1m,
                    T3A, T3y, T20, T1K, T3v;
                SIMD_FLOAT T1Z;
                {
                    SIMD_FLOAT Tm, TW, T3I, T3V, Tb, T3P, Ts, T1z, T3K, T2t,
                        T2z, Tw, T2x, T1H, T3Q;
                    SIMD_FLOAT T17, T3B, T3C, T28, T2v, T43, Tn, T3J, Ty, T29,
                        T3M, T40, T2A, T1E, Tx;
                    SIMD_FLOAT T2y, T3L, T23, T26, T33, T3Z, T18, TL, TK, T2a,
                        T42, T44, T3U, T3N, T32;
                    SIMD_FLOAT T2d;
                    Tm             = Tg + Tl;
                    T3B            = Tg - Tl;
                    T3C            = TQ - TV;
                    TW             = TQ + TV;
                    T3I            = T3E - T3H;
                    T3V            = T3E + T3H;
                    Tb             = T5 + Ta;
                    T3P            = T5 - Ta;
                    Ts             = To + Tr;
                    T1z            = SIMD_FNMADD(KP500000000, Tr, To);
                    T3K            = T2r + T2s;
                    T2t            = SIMD_FNMADD(KP500000000, T2s, T2r);
                    T2z            = Tv - Tu;
                    Tw             = Tu + Tv;
                    T2x            = T1F + T1G;
                    T1H            = T1F - T1G;
                    T3X            = T3C - T3B;
                    T3D            = T3B + T3C;
                    T3Q            = T11 - T16;
                    T17            = T11 + T16;
                    T1D            = SIMD_FNMADD(KP866025403, T1C, T1z);
                    T28            = SIMD_FMADD(KP866025403, T1C, T1z);
                    T2v            = SIMD_FMADD(KP866025403, T2u, T2t);
                    T3g            = SIMD_FNMADD(KP866025403, T2u, T2t);
                    T1E            = SIMD_FNMADD(KP500000000, Tw, Tt);
                    Tx             = Tt + Tw;
                    T2y            = SIMD_FNMADD(KP500000000, T2x, T2w);
                    T3L            = T2w + T2x;
                    T3T            = T3P - T3Q;
                    T3R            = T3P + T3Q;
                    T43            = Tb - Tm;
                    Tn             = Tb + Tm;
                    T3J            = Ts - Tx;
                    Ty             = Ts + Tx;
                    T1I            = SIMD_FNMADD(KP866025403, T1H, T1E);
                    T29            = SIMD_FMADD(KP866025403, T1H, T1E);
                    T3M            = T3K - T3L;
                    T40            = T3K + T3L;
                    T2A            = SIMD_FMADD(KP866025403, T2z, T2y);
                    T3h            = SIMD_FNMADD(KP866025403, T2z, T2y);
                    T2R            = T21 - T22;
                    T23            = T21 + T22;
                    T26            = T24 + T25;
                    T2o            = T24 - T25;
                    T2O            = T2I - T2N;
                    T33            = T2I + T2N;
                    T3Z            = TW + T17;
                    T18            = TW - T17;
                    TL             = Ty - TJ;
                    TK             = Ty + TJ;
                    T2a            = T28 + T29;
                    T2q            = T28 - T29;
                    T42            = T40 + T41;
                    T44            = T41 - T40;
                    T3U            = T3M - T3J;
                    T3N            = T3J + T3M;
                    T2B            = T2v - T2A;
                    T32            = T2v + T2A;
                    T31            = T23 - T26;
                    T27            = T23 + T26;
                    T2d            = T2b + T2c;
                    T2D            = T2b - T2c;
                    T2n            = T2f - T2g;
                    T2h            = T2f + T2g;
                    io[WS(os, 18)] = T18 - TL;
                    io[WS(os, 6)]  = TL + T18;
                    ro[0]          = Tn + TK;
                    ro[WS(os, 12)] = Tn - TK;
                    ro[WS(os, 18)] = T43 - T44;
                    ro[WS(os, 6)]  = T43 + T44;
                    io[0]          = T3Z + T42;
                    io[WS(os, 12)] = T3Z - T42;
                    T3S            = T3N + T3I;
                    T3O            = T3I - T3N;
                    T3Y            = T3U + T3V;
                    T3W            = T3U - T3V;
                    T36            = T32 + T33;
                    T34            = T32 - T33;
                    T2m            = T2d - T2a;
                    T2e            = T2a + T2d;
                    T2k            = T2i + T2j;
                    T2S            = T2i - T2j;
                }
                T3l            = T1b - T1e;
                T1f            = T1b + T1e;
                T1m            = T1i + T1l;
                T38            = T1i - T1l;
                T3i            = T3g - T3h;
                T3w            = T3g + T3h;
                ro[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3S, T3R);
                ro[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3S, T3R);
                io[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3O, T3D);
                io[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3O, T3D);
                io[WS(os, 9)]  = SIMD_FMADD(KP707106781, T3Y, T3X);
                io[WS(os, 21)] = SIMD_FNMADD(KP707106781, T3Y, T3X);
                ro[WS(os, 3)]  = SIMD_FMADD(KP707106781, T3W, T3T);
                ro[WS(os, 15)] = SIMD_FNMADD(KP707106781, T3W, T3T);
                ro[WS(os, 10)] = T31 + T34;
                ro[WS(os, 22)] = T31 - T34;
                ro[WS(os, 16)] = T27 + T2e;
                ro[WS(os, 4)]  = T27 - T2e;
                T35            = T2h + T2k;
                T2l            = T2h - T2k;
                T3z            = T1f + T1m;
                T1n            = T1f - T1m;
                T3x            = T3a + T3b;
                T3c            = T3a - T3b;
                T3d            = T1s - T1x;
                T1y            = T1s + T1x;
                T1J            = T1D + T1I;
                T3f            = T1D - T1I;
                T37            = T1N - T1Q;
                T1R            = T1N + T1Q;
                T1Y            = T1U + T1X;
                T3m            = T1U - T1X;
                io[WS(os, 16)] = T35 + T36;
                io[WS(os, 4)]  = T35 - T36;
                io[WS(os, 10)] = T2l + T2m;
                io[WS(os, 22)] = T2l - T2m;
                T3A            = T3w + T3x;
                T3y            = T3w - T3x;
                T20            = T1J + T1y;
                T1K            = T1y - T1J;
                T3v            = T1R - T1Y;
                T1Z            = T1R + T1Y;
                T3t            = T37 - T38;
                T39            = T37 + T38;
                io[WS(os, 8)]  = T3z + T3A;
                io[WS(os, 20)] = T3z - T3A;
                io[WS(os, 2)]  = T1n + T1K;
                io[WS(os, 14)] = T1n - T1K;
                ro[WS(os, 2)]  = T3v + T3y;
                ro[WS(os, 14)] = T3v - T3y;
                ro[WS(os, 8)]  = T1Z + T20;
                ro[WS(os, 20)] = T1Z - T20;
                T3n            = T3l + T3m;
                T3p            = T3l - T3m;
                T3e            = T3c - T3d;
                T3r            = T3d + T3c;
                T3q            = T3f - T3i;
                T3j            = T3f + T3i;
            }
        }
        T3s            = T3q - T3r;
        T3u            = T3q + T3r;
        T3k            = T3e - T3j;
        T3o            = T3j + T3e;
        T2p            = T2n + T2o;
        T2V            = T2n - T2o;
        T2T            = T2R + T2S;
        T2Z            = T2R - T2S;
        T2C            = T2q + T2B;
        T2W            = T2B - T2q;
        T2P            = T2D - T2O;
        T2X            = T2D + T2O;
        ro[WS(os, 23)] = SIMD_FMADD(KP707106781, T3u, T3t);
        ro[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3u, T3t);
        io[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3s, T3p);
        io[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3s, T3p);
        io[WS(os, 23)] = SIMD_FMADD(KP707106781, T3o, T3n);
        io[WS(os, 11)] = SIMD_FNMADD(KP707106781, T3o, T3n);
        ro[WS(os, 5)]  = SIMD_FMADD(KP707106781, T3k, T39);
        ro[WS(os, 17)] = SIMD_FNMADD(KP707106781, T3k, T39);
        T30            = T2X - T2W;
        T2Y            = T2W + T2X;
        T2Q            = T2C - T2P;
        T2U            = T2C + T2P;
        io[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2Y, T2V);
        io[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2Y, T2V);
        ro[WS(os, 7)]  = SIMD_FMADD(KP707106781, T30, T2Z);
        ro[WS(os, 19)] = SIMD_FNMADD(KP707106781, T30, T2Z);
        ro[WS(os, 1)]  = SIMD_FMADD(KP707106781, T2U, T2T);
        ro[WS(os, 13)] = SIMD_FNMADD(KP707106781, T2U, T2T);
        io[WS(os, 7)]  = SIMD_FMADD(KP707106781, T2Q, T2p);
        io[WS(os, 19)] = SIMD_FNMADD(KP707106781, T2Q, T2p);
    }
}
