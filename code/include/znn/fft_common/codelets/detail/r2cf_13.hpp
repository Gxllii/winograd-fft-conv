//
// Copyright (C) 2018 Aleksandar Zlateski <zlateski@mit.edu>
// Copyright (C) 2018 Zhen Jia <zhenj@princeton.edu>
// ---------------------------------------------------------------
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
#pragma once
template <>
struct r2cf_traits<13, 1>
{
    static constexpr long_t flops           = 0;
    static constexpr long_t operations      = 0;
    static constexpr long_t memory_accesses = 8;
    static constexpr long_t stack_vars      = 1;
    static constexpr long_t constants       = 0;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 1 -name r2cf
 * -standalone */

/*
 * This function contains 0 FP additions, 0 FP multiplications,
 * (or, 0 additions, 0 multiplications, 0 fused multiply/add),
 * 1 stack variables, 0 constants, and 8 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 1>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    {
        SIMD_FLOAT T1;
        T1            = R0[0];
        Cr[WS(cs, 4)] = T1;
        Cr[WS(cs, 2)] = T1;
        Cr[WS(cs, 3)] = T1;
        Cr[WS(cs, 5)] = T1;
        Cr[WS(cs, 6)] = T1;
        Cr[WS(cs, 1)] = T1;
        Cr[0]         = T1;
    }
}

template <>
struct r2cf_traits<13, 2>
{
    static constexpr long_t flops           = 19;
    static constexpr long_t operations      = 13;
    static constexpr long_t memory_accesses = 15;
    static constexpr long_t stack_vars      = 14;
    static constexpr long_t constants       = 12;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 2 -name r2cf
 * -standalone */

/*
 * This function contains 7 FP additions, 12 FP multiplications,
 * (or, 1 additions, 6 multiplications, 6 fused multiply/add),
 * 14 stack variables, 12 constants, and 15 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 2>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP568064746, +0.568064746731155802511807559127516624533492552);
    DK(KP748510748, +0.748510748171101098634630599701351383846451590);
    DK(KP970941817, +0.970941817426052027156982276293789227249865106);
    DK(KP885456025, +0.885456025653209895900375522015098878605498416);
    DK(KP354604887, +0.354604887042535625969637892600018474316355432);
    DK(KP120536680, +0.120536680255323053349067687452543582273681159);
    DK(KP239315664, +0.239315664287557767148753726260211895203173023);
    DK(KP992708874, +0.992708874098053992800751649492520179343675633);
    DK(KP822983865, +0.822983865893656394579617423439381990655067693);
    DK(KP663122658, +0.663122658240795202376785492666766279524764107);
    DK(KP935016242, +0.935016242685414823439784599837830729050517470);
    DK(KP464723172, +0.464723172043768545656015335133104777557735865);
    {
        SIMD_FLOAT T1, T2;
        T1            = R0[WS(rs, 1)];
        T2            = R0[0];
        Ci[WS(cs, 1)] = -(KP464723172 * T1);
        Ci[WS(cs, 4)] = -(KP935016242 * T1);
        Ci[WS(cs, 5)] = -(KP663122658 * T1);
        Ci[WS(cs, 2)] = -(KP822983865 * T1);
        Ci[WS(cs, 3)] = -(KP992708874 * T1);
        Ci[WS(cs, 6)] = -(KP239315664 * T1);
        Cr[WS(cs, 3)] = SIMD_FMADD(KP120536680, T1, T2);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP354604887, T1, T2);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP885456025, T1, T2);
        Cr[WS(cs, 6)] = SIMD_FNMADD(KP970941817, T1, T2);
        Cr[0]         = T2 + T1;
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP748510748, T1, T2);
        Cr[WS(cs, 2)] = SIMD_FMADD(KP568064746, T1, T2);
    }
}

template <>
struct r2cf_traits<13, 3>
{
    static constexpr long_t flops           = 83;
    static constexpr long_t operations      = 46;
    static constexpr long_t memory_accesses = 16;
    static constexpr long_t stack_vars      = 58;
    static constexpr long_t constants       = 28;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 3 -name r2cf
 * -standalone */

/*
 * This function contains 40 FP additions, 43 FP multiplications,
 * (or, 3 additions, 6 multiplications, 37 fused multiply/add),
 * 58 stack variables, 28 constants, and 16 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 3>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP795029905, +0.795029905545022102342302891741619092711874322);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP524226639, +0.524226639526582149007971708126694516650847078);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP918021459, +0.918021459960442512089770528101762928140802983);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP459010729, +0.459010729980221256044885264050881464070401491);
    DK(KP427634046, +0.427634046826572761263770956623363436736920189);
    DK(KP213817023, +0.213817023413286380631885478311681718368460095);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP872365859, +0.872365859435662713072062791306577830644086563);
    DK(KP573154020, +0.573154020863966621901284904558598753974845853);
    DK(KP530592592, +0.530592592255515923232468947066939951546703448);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP528196005, +0.528196005172066879233566514634091478098180977);
    DK(KP885341881, +0.885341881106612732741476618668107315691523167);
    DK(KP559893078, +0.559893078596060374890475933364373479081704870);
    DK(KP985300520, +0.985300520190939891362681670363163732893350564);
    DK(KP082806867, +0.082806867948293398147495132964750765999750516);
    DK(KP594295103, +0.594295103224093607915863811609222946950236565);
    DK(KP726109445, +0.726109445035782405468510155372505010481906348);
    DK(KP956540394, +0.956540394171209688283698363453595328795096669);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP354990378, +0.354990378340835740470838109449066235590320837);
    {
        SIMD_FLOAT Tf, T1, T2, Ti, Tb, T6, Tr, Tq, Tg, T8, T9, Tk, Tl, T4, T3;
        SIMD_FLOAT Tu, Ts, Th, Ta, Tc, Tm, To, Te, T5, Tn, Tj, Td, T7, Tt, Tp;
        Tf            = R0[0];
        T1            = R0[WS(rs, 1)];
        T2            = R0[WS(rs, 2)];
        Ti            = SIMD_FMADD(KP354990378, T1, T2);
        Tb            = SIMD_FMADD(KP302775637, T1, T2);
        T6            = SIMD_FMSUB(KP302775637, T2, T1);
        Tr            = SIMD_FNMADD(KP956540394, T2, T1);
        Tq            = SIMD_FNMADD(KP726109445, T2, T1);
        Tg            = T1 + T2;
        T8            = SIMD_FMADD(KP594295103, T1, T2);
        T9            = SIMD_FMADD(KP082806867, T1, T2);
        Tk            = SIMD_FMADD(KP985300520, T1, T2);
        Tl            = T1 - T2;
        T4            = SIMD_FMADD(KP559893078, T2, T1);
        T3            = SIMD_FNMADD(KP885341881, T2, T1);
        Tu            = SIMD_FNMADD(KP528196005, Tr, Tq);
        Ts            = SIMD_FMADD(KP528196005, Tr, Tq);
        Cr[0]         = Tf + Tg;
        Th            = SIMD_FNMADD(KP083333333, Tg, Tf);
        Ta            = SIMD_FMADD(KP530592592, T9, T8);
        Tc            = SIMD_FNMADD(KP530592592, T9, T8);
        Tm            = SIMD_FMADD(KP573154020, Tl, Tk);
        To            = SIMD_FNMADD(KP872365859, Tk, Tl);
        Te            = SIMD_FMADD(KP853480001, T4, T3);
        T5            = SIMD_FNMADD(KP853480001, T4, T3);
        Tn            = SIMD_FNMADD(KP213817023, Ti, Th);
        Tj            = SIMD_FMADD(KP427634046, Ti, Th);
        Td            = SIMD_FNMADD(KP459010729, Tc, Tb);
        Ci[WS(cs, 1)] = -(KP575140729 * (SIMD_FMADD(KP918021459, Tc, Tb)));
        T7            = SIMD_FMADD(KP522026385, T5, T6);
        Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, T6, T5)));
        Tt            = SIMD_FMADD(KP300462606, To, Tn);
        Tp            = SIMD_FNMADD(KP300462606, To, Tn);
        Cr[WS(cs, 5)] = SIMD_FNMADD(KP524226639, Tm, Tj);
        Cr[WS(cs, 1)] = SIMD_FMADD(KP524226639, Tm, Tj);
        Ci[WS(cs, 4)] = KP575140729 * (SIMD_FNMADD(KP904176221, Te, Td));
        Ci[WS(cs, 3)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Te, Td)));
        Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP795029905, Ta, T7));
        Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP795029905, Ta, T7));
        Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, Tu, Tt);
        Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, Tu, Tt);
        Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, Ts, Tp);
        Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, Ts, Tp);
    }
}

template <>
struct r2cf_traits<13, 4>
{
    static constexpr long_t flops           = 100;
    static constexpr long_t operations      = 56;
    static constexpr long_t memory_accesses = 17;
    static constexpr long_t stack_vars      = 69;
    static constexpr long_t constants       = 28;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 4 -name r2cf
 * -standalone */

/*
 * This function contains 50 FP additions, 50 FP multiplications,
 * (or, 6 additions, 6 multiplications, 44 fused multiply/add),
 * 69 stack variables, 28 constants, and 17 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 4>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP783039577, +0.783039577741912550571040839981247542450662910);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP452088110, +0.452088110995424102216897740888443963250761581);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP044609493, +0.044609493527010039935703908944853518259084293);
    DK(KP033457120, +0.033457120145257529951777931708640138694313220);
    DK(KP706982321, +0.706982321420624988578336000706596895197079108);
    DK(KP530236741, +0.530236741065468741433752000529947671397809331);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    {
        SIMD_FLOAT Tm, T1, T4, T2, T6, Tu, Tp, T9, Tc, T3;
        Tm = R0[0];
        T1 = R0[WS(rs, 1)];
        T4 = R0[WS(rs, 2)];
        T2 = R0[WS(rs, 3)];
        T6 = SIMD_FMSUB(KP577350269, T4, T2);
        Tu = T2 - T4;
        Tp = T2 + T4;
        T9 = SIMD_FMADD(KP577350269, T4, T2);
        Tc = T1 + T2;
        T3 = SIMD_FNMADD(KP500000000, T2, T1);
        {
            SIMD_FLOAT Td, Ti, Tw, Tn, Tt, Tq, T5, T8, To, Ta, Tg, T7, Tf, Tr,
                TB;
            SIMD_FLOAT Tv, TC, Th, Tj, Tb, Tl, Ts, Ty, TD, TF, Tx, Tz, Tk, Te,
                TA;
            SIMD_FLOAT TE;
            Td            = SIMD_FNMADD(KP302775637, T4, Tc);
            Ti            = SIMD_FMADD(KP302775637, Tc, T4);
            Tw            = Tc - T4;
            Tn            = Tc + T4;
            Tt            = SIMD_FMADD(KP500000000, T4, T3);
            Tq            = SIMD_FNMADD(KP500000000, T4, T3);
            T5            = SIMD_FNMADD(KP866025403, T4, T3);
            T8            = SIMD_FMADD(KP866025403, T4, T3);
            Cr[0]         = Tm + Tn;
            To            = SIMD_FNMADD(KP083333333, Tn, Tm);
            Ta            = SIMD_FNMADD(KP530236741, T9, T8);
            Tg            = SIMD_FMADD(KP706982321, T8, T9);
            T7            = SIMD_FNMADD(KP033457120, T6, T5);
            Tf            = SIMD_FMADD(KP044609493, T5, T6);
            Tr            = SIMD_FMADD(KP301479260, Tq, Tp);
            TB            = SIMD_FNMADD(KP226109445, Tp, Tq);
            Tv            = SIMD_FNMADD(KP514918778, Tu, Tt);
            TC            = SIMD_FMADD(KP686558370, Tt, Tu);
            Th            = SIMD_FMADD(KP853480001, Tg, Tf);
            Tj            = SIMD_FNMADD(KP853480001, Tg, Tf);
            Tb            = SIMD_FNMADD(KP853480001, Ta, T7);
            Tl            = SIMD_FMADD(KP853480001, Ta, T7);
            Ts            = SIMD_FMADD(KP503537032, Tr, To);
            Ty            = SIMD_FNMADD(KP251768516, Tr, To);
            TD            = SIMD_FMADD(KP769338817, TC, TB);
            TF            = SIMD_FNMADD(KP769338817, TC, TB);
            Tx            = SIMD_FMADD(KP581704778, Tw, Tv);
            Tz            = SIMD_FNMADD(KP859542535, Tv, Tw);
            Ci[WS(cs, 1)] = -(KP575140729 * (SIMD_FNMADD(KP904176221, Tj, Ti)));
            Tk            = SIMD_FMADD(KP452088110, Tj, Ti);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FMADD(KP957805992, Td, Tb)));
            Te            = SIMD_FNMADD(KP522026385, Tb, Td);
            TA            = SIMD_FNMADD(KP300462606, Tz, Ty);
            TE            = SIMD_FMADD(KP300462606, Tz, Ty);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, Tx, Ts);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, Tx, Ts);
            Ci[WS(cs, 3)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Tl, Tk)));
            Ci[WS(cs, 4)] = KP575140729 * (SIMD_FNMADD(KP904176221, Tl, Tk));
            Ci[WS(cs, 2)] = -(KP575140729 * (SIMD_FMADD(KP783039577, Th, Te)));
            Ci[WS(cs, 6)] = -(KP575140729 * (SIMD_FNMADD(KP783039577, Th, Te)));
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, TF, TE);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, TF, TE);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, TD, TA);
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, TD, TA);
        }
    }
}

template <>
struct r2cf_traits<13, 5>
{
    static constexpr long_t flops           = 108;
    static constexpr long_t operations      = 62;
    static constexpr long_t memory_accesses = 18;
    static constexpr long_t stack_vars      = 76;
    static constexpr long_t constants       = 28;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 5 -name r2cf
 * -standalone */

/*
 * This function contains 56 FP additions, 52 FP multiplications,
 * (or, 10 additions, 6 multiplications, 46 fused multiply/add),
 * 76 stack variables, 28 constants, and 18 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 5>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP783039577, +0.783039577741912550571040839981247542450662910);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP452088110, +0.452088110995424102216897740888443963250761581);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP033457120, +0.033457120145257529951777931708640138694313220);
    DK(KP044609493, +0.044609493527010039935703908944853518259084293);
    DK(KP530236741, +0.530236741065468741433752000529947671397809331);
    DK(KP706982321, +0.706982321420624988578336000706596895197079108);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP577350269, +0.577350269189625764509148780501957455647601751);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tq, T6, T1, T4, T2, Tf, T3, Tu, T8, Tr, Tg, Tc, T9, TB, Tv;
        SIMD_FLOAT T5, Tw;
        Tq = R0[0];
        T6 = R0[WS(rs, 2)];
        T1 = R0[WS(rs, 1)];
        T4 = R0[WS(rs, 4)];
        T2 = R0[WS(rs, 3)];
        Tf = T1 + T2;
        T3 = SIMD_FNMADD(KP500000000, T2, T1);
        Tu = T2 - T4;
        T8 = T2 + T4;
        Tr = Tf + T4;
        Tg = T4 - Tf;
        Tc = SIMD_FMADD(KP577350269, T6, T8);
        T9 = SIMD_FNMADD(KP577350269, T6, T8);
        TB = Tu - T6;
        Tv = Tu + T6;
        T5 = SIMD_FMADD(KP500000000, T4, T3);
        Tw = SIMD_FNMADD(KP500000000, T4, T3);
        {
            SIMD_FLOAT TD, Ts, Tm, Th, Tb, T7, TA, Tx, Tt, Tk, Td, Tj, Ta, TJ,
                TC;
            SIMD_FLOAT Ty, TI, Tn, Tl, Tp, Te, TG, TE, TF, Tz, TM, TK, To, Ti,
                TL;
            SIMD_FLOAT TH;
            TD            = Tr - T6;
            Ts            = Tr + T6;
            Tm            = SIMD_FNMADD(KP302775637, Tg, T6);
            Th            = SIMD_FMADD(KP302775637, T6, Tg);
            Tb            = SIMD_FMADD(KP866025403, T6, T5);
            T7            = SIMD_FNMADD(KP866025403, T6, T5);
            TA            = SIMD_FMADD(KP500000000, T6, Tw);
            Tx            = SIMD_FNMADD(KP500000000, T6, Tw);
            Tt            = SIMD_FNMADD(KP083333333, Ts, Tq);
            Cr[0]         = Tq + Ts;
            Tk            = SIMD_FMADD(KP706982321, Tb, Tc);
            Td            = SIMD_FNMADD(KP530236741, Tc, Tb);
            Tj            = SIMD_FNMADD(KP044609493, T7, T9);
            Ta            = SIMD_FMADD(KP033457120, T9, T7);
            TJ            = SIMD_FMADD(KP686558370, TA, TB);
            TC            = SIMD_FNMADD(KP514918778, TB, TA);
            Ty            = SIMD_FMADD(KP301479260, Tx, Tv);
            TI            = SIMD_FNMADD(KP226109445, Tv, Tx);
            Tn            = SIMD_FMADD(KP853480001, Tk, Tj);
            Tl            = SIMD_FNMADD(KP853480001, Tk, Tj);
            Tp            = SIMD_FMADD(KP853480001, Td, Ta);
            Te            = SIMD_FNMADD(KP853480001, Td, Ta);
            TG            = SIMD_FNMADD(KP859542535, TC, TD);
            TE            = SIMD_FMADD(KP581704778, TD, TC);
            TF            = SIMD_FNMADD(KP251768516, Ty, Tt);
            Tz            = SIMD_FMADD(KP503537032, Ty, Tt);
            TM            = SIMD_FNMADD(KP769338817, TJ, TI);
            TK            = SIMD_FMADD(KP769338817, TJ, TI);
            To            = SIMD_FNMADD(KP452088110, Tn, Tm);
            Ci[WS(cs, 1)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Tn, Tm)));
            Ti            = SIMD_FMADD(KP522026385, Te, Th);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, Th, Te)));
            TL            = SIMD_FMADD(KP300462606, TG, TF);
            TH            = SIMD_FNMADD(KP300462606, TG, TF);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, TE, Tz);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, TE, Tz);
            Ci[WS(cs, 4)] = KP575140729 * (SIMD_FNMADD(KP904176221, Tp, To));
            Ci[WS(cs, 3)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Tp, To)));
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FNMADD(KP783039577, Tl, Ti));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FMADD(KP783039577, Tl, Ti));
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, TM, TL);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, TM, TL);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, TK, TH);
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, TK, TH);
        }
    }
}

template <>
struct r2cf_traits<13, 6>
{
    static constexpr long_t flops           = 109;
    static constexpr long_t operations      = 64;
    static constexpr long_t memory_accesses = 19;
    static constexpr long_t stack_vars      = 74;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 6 -name r2cf
 * -standalone */

/*
 * This function contains 58 FP additions, 51 FP multiplications,
 * (or, 13 additions, 6 multiplications, 45 fused multiply/add),
 * 74 stack variables, 23 constants, and 19 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 6>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tt, T6, T7, T1, T3, T2, T8, Td, Tx, Te, T4, Ta, Tf, Ti, Ty;
        SIMD_FLOAT TE, Tz, Tb, T5, Tu;
        Tt = R0[0];
        T6 = R0[WS(rs, 5)];
        T7 = R0[WS(rs, 2)];
        T1 = R0[WS(rs, 4)];
        T3 = R0[WS(rs, 3)];
        T2 = R0[WS(rs, 1)];
        T8 = T6 + T7;
        Td = SIMD_FMSUB(KP500000000, T7, T6);
        Tx = T3 - T1;
        Te = T3 + T1;
        T4 = T2 + T3;
        Ta = SIMD_FNMADD(KP500000000, T3, T2);
        Tf = SIMD_FNMADD(KP866025403, Te, Td);
        Ti = SIMD_FMADD(KP866025403, Te, Td);
        Ty = Tx + T7;
        TE = Tx - T7;
        Tz = SIMD_FNMADD(KP500000000, T1, Ta);
        Tb = SIMD_FMADD(KP500000000, T1, Ta);
        T5 = T1 - T4;
        Tu = T4 + T1;
        {
            SIMD_FLOAT Tc, Th, TA, TD, Tv, TG, T9, Tq, Tj, Tn, Tg, Tm, TF, TM,
                TL;
            SIMD_FLOAT TB, Tw, To, Tp, Tk, Ts, TH, TJ, TN, TP, TC, TI, Tr, Tl,
                TK;
            SIMD_FLOAT TO;
            Tc            = SIMD_FNMADD(KP866025403, T7, Tb);
            Th            = SIMD_FMADD(KP866025403, T7, Tb);
            TA            = Tz - Td;
            TD            = Tz + Td;
            Tv            = Tu + T8;
            TG            = Tu - T8;
            T9            = SIMD_FMADD(KP302775637, T8, T5);
            Tq            = SIMD_FNMADD(KP302775637, T5, T8);
            Tj            = SIMD_FNMADD(KP612264650, Ti, Th);
            Tn            = SIMD_FMADD(KP612264650, Th, Ti);
            Tg            = SIMD_FNMADD(KP038632954, Tf, Tc);
            Tm            = SIMD_FMADD(KP038632954, Tc, Tf);
            TF            = SIMD_FNMADD(KP514918778, TE, TD);
            TM            = SIMD_FMADD(KP686558370, TD, TE);
            TL            = SIMD_FNMADD(KP226109445, Ty, TA);
            TB            = SIMD_FMADD(KP301479260, TA, Ty);
            Tw            = SIMD_FNMADD(KP083333333, Tv, Tt);
            Cr[0]         = Tt + Tv;
            To            = SIMD_FMADD(KP853480001, Tn, Tm);
            Tp            = SIMD_FNMADD(KP853480001, Tn, Tm);
            Tk            = SIMD_FNMADD(KP853480001, Tj, Tg);
            Ts            = SIMD_FMADD(KP853480001, Tj, Tg);
            TH            = SIMD_FMADD(KP581704778, TG, TF);
            TJ            = SIMD_FNMADD(KP859542535, TF, TG);
            TN            = SIMD_FMADD(KP769338817, TM, TL);
            TP            = SIMD_FNMADD(KP769338817, TM, TL);
            TC            = SIMD_FMADD(KP503537032, TB, Tw);
            TI            = SIMD_FNMADD(KP251768516, TB, Tw);
            Tr            = SIMD_FMADD(KP522026385, Tp, Tq);
            Ci[WS(cs, 1)] = KP600477271 * (SIMD_FNMADD(KP957805992, Tq, Tp));
            Tl            = SIMD_FMADD(KP522026385, Tk, T9);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, T9, Tk)));
            TK            = SIMD_FNMADD(KP300462606, TJ, TI);
            TO            = SIMD_FMADD(KP300462606, TJ, TI);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, TH, TC);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, TH, TC);
            Ci[WS(cs, 4)] = KP575140729 * (SIMD_FNMADD(KP904176221, Ts, Tr));
            Ci[WS(cs, 3)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Ts, Tr)));
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, To, Tl));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP904176221, To, Tl));
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, TP, TO);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, TP, TO);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, TN, TK);
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, TN, TK);
        }
    }
}

template <>
struct r2cf_traits<13, 7>
{
    static constexpr long_t flops           = 111;
    static constexpr long_t operations      = 66;
    static constexpr long_t memory_accesses = 20;
    static constexpr long_t stack_vars      = 77;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 7 -name r2cf
 * -standalone */

/*
 * This function contains 60 FP additions, 51 FP multiplications,
 * (or, 15 additions, 6 multiplications, 45 fused multiply/add),
 * 77 stack variables, 23 constants, and 20 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 7>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT T1, T7, T8, T9, T2, T5, T3, Tf, Ta, Th, T4, TC, Te, Tj, Tb;
        SIMD_FLOAT Ti, TA, To, Tg, T6, TJ;
        T1 = R0[0];
        T7 = R0[WS(rs, 5)];
        T8 = R0[WS(rs, 6)];
        T9 = R0[WS(rs, 2)];
        T2 = R0[WS(rs, 1)];
        T5 = R0[WS(rs, 4)];
        T3 = R0[WS(rs, 3)];
        Tf = T8 - T9;
        Ta = T8 + T9;
        Th = SIMD_FNMADD(KP500000000, T3, T2);
        T4 = T2 + T3;
        TC = T3 + T5;
        Te = T3 - T5;
        Tj = SIMD_FMSUB(KP500000000, Ta, T7);
        Tb = T7 + Ta;
        Ti = SIMD_FNMADD(KP500000000, T5, Th);
        TA = SIMD_FMADD(KP500000000, T5, Th);
        To = Te + Tf;
        Tg = Te - Tf;
        T6 = T4 + T5;
        TJ = T5 - T4;
        {
            SIMD_FLOAT TD, TG, Tn, Tk, TF, TB, Tq, Tc, TQ, TK, Tw, Tp, Tl, Tv,
                TN;
            SIMD_FLOAT TH, TM, TE, Td, Tt, Tr, Tz, Tx, TP, TO, TS, TI, Ts, Tm,
                TR;
            SIMD_FLOAT TL, Ty, Tu;
            TD            = SIMD_FNMADD(KP866025403, TC, Tj);
            TG            = SIMD_FMADD(KP866025403, TC, Tj);
            Tn            = Ti + Tj;
            Tk            = Ti - Tj;
            TF            = SIMD_FNMADD(KP866025403, Tf, TA);
            TB            = SIMD_FMADD(KP866025403, Tf, TA);
            Tq            = T6 - Tb;
            Tc            = T6 + Tb;
            TQ            = SIMD_FNMADD(KP302775637, TJ, Tb);
            TK            = SIMD_FMADD(KP302775637, Tb, TJ);
            Tw            = SIMD_FMADD(KP686558370, Tn, To);
            Tp            = SIMD_FNMADD(KP514918778, To, Tn);
            Tl            = SIMD_FMADD(KP301479260, Tk, Tg);
            Tv            = SIMD_FNMADD(KP226109445, Tg, Tk);
            TN            = SIMD_FMADD(KP612264650, TF, TG);
            TH            = SIMD_FNMADD(KP612264650, TG, TF);
            TM            = SIMD_FMADD(KP038632954, TB, TD);
            TE            = SIMD_FNMADD(KP038632954, TD, TB);
            Td            = SIMD_FNMADD(KP083333333, Tc, T1);
            Cr[0]         = T1 + Tc;
            Tt            = SIMD_FNMADD(KP859542535, Tp, Tq);
            Tr            = SIMD_FMADD(KP581704778, Tq, Tp);
            Tz            = SIMD_FMADD(KP769338817, Tw, Tv);
            Tx            = SIMD_FNMADD(KP769338817, Tw, Tv);
            TP            = SIMD_FNMADD(KP853480001, TN, TM);
            TO            = SIMD_FMADD(KP853480001, TN, TM);
            TS            = SIMD_FMADD(KP853480001, TH, TE);
            TI            = SIMD_FNMADD(KP853480001, TH, TE);
            Ts            = SIMD_FNMADD(KP251768516, Tl, Td);
            Tm            = SIMD_FMADD(KP503537032, Tl, Td);
            TR            = SIMD_FMADD(KP522026385, TP, TQ);
            Ci[WS(cs, 1)] = KP600477271 * (SIMD_FNMADD(KP957805992, TQ, TP));
            TL            = SIMD_FMADD(KP522026385, TI, TK);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, TK, TI)));
            Ty            = SIMD_FNMADD(KP300462606, Tt, Ts);
            Tu            = SIMD_FMADD(KP300462606, Tt, Ts);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, Tr, Tm);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, Tr, Tm);
            Ci[WS(cs, 4)] = KP575140729 * (SIMD_FNMADD(KP904176221, TS, TR));
            Ci[WS(cs, 3)] = -(KP575140729 * (SIMD_FMADD(KP904176221, TS, TR)));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP904176221, TO, TL));
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, TO, TL));
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, Tz, Ty);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, Tz, Ty);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, Tx, Tu);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, Tx, Tu);
        }
    }
}

template <>
struct r2cf_traits<13, 8>
{
    static constexpr long_t flops           = 118;
    static constexpr long_t operations      = 72;
    static constexpr long_t memory_accesses = 21;
    static constexpr long_t stack_vars      = 84;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 8 -name r2cf
 * -standalone */

/*
 * This function contains 66 FP additions, 52 FP multiplications,
 * (or, 20 additions, 6 multiplications, 46 fused multiply/add),
 * 84 stack variables, 23 constants, and 21 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 8>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT Tz, T1, T8, Tc, T9, T5, T2, T3, Td, To, Ta, TF, T4, Tf, Tp;
        SIMD_FLOAT TA, TI, Te, TB, Tg, T6, TG, Th, Tk, TC, TJ, TH, TO, Tn, T7;
        Tz = R0[0];
        T1 = R0[WS(rs, 5)];
        T8 = R0[WS(rs, 3)];
        Tc = R0[WS(rs, 1)];
        T9 = R0[WS(rs, 4)];
        T5 = R0[WS(rs, 6)];
        T2 = R0[WS(rs, 7)];
        T3 = R0[WS(rs, 2)];
        Td = SIMD_FNMADD(KP500000000, T8, Tc);
        To = Tc + T8;
        Ta = T8 + T9;
        TF = T8 - T9;
        T4 = T2 - T3;
        Tf = T2 + T3;
        Tp = T9 - To;
        TA = To + T9;
        TI = SIMD_FNMADD(KP500000000, T9, Td);
        Te = SIMD_FMADD(KP500000000, T9, Td);
        TB = T5 + Tf;
        Tg = T5 - Tf;
        T6 = T4 - T5;
        TG = T5 + T4;
        Th = SIMD_FMADD(KP866025403, Tg, Te);
        Tk = SIMD_FNMADD(KP866025403, Tg, Te);
        TC = T1 + TB;
        TJ = SIMD_FMSUB(KP500000000, TB, T1);
        TH = TF - TG;
        TO = TF + TG;
        Tn = T6 - T1;
        T7 = SIMD_FMADD(KP500000000, T6, T1);
        {
            SIMD_FLOAT TK, TN, TD, TQ, Tb, Tj, Tq, Tu, TW, TP, TL, TV, TE, Tl,
                Ts;
            SIMD_FLOAT Ti, Tr, TR, TT, TX, TZ, TM, TS, Tt, Ty, Tm, Tw, TU, TY,
                Tv;
            SIMD_FLOAT Tx;
            TK            = TI - TJ;
            TN            = TI + TJ;
            TD            = TA + TC;
            TQ            = TA - TC;
            Tb            = SIMD_FMADD(KP866025403, Ta, T7);
            Tj            = SIMD_FNMADD(KP866025403, Ta, T7);
            Tq            = SIMD_FMADD(KP302775637, Tp, Tn);
            Tu            = SIMD_FNMADD(KP302775637, Tn, Tp);
            TW            = SIMD_FMADD(KP686558370, TN, TO);
            TP            = SIMD_FNMADD(KP514918778, TO, TN);
            TL            = SIMD_FMADD(KP301479260, TK, TH);
            TV            = SIMD_FNMADD(KP226109445, TH, TK);
            TE            = SIMD_FNMADD(KP083333333, TD, Tz);
            Cr[0]         = Tz + TD;
            Tl            = SIMD_FNMADD(KP612264650, Tk, Tj);
            Ts            = SIMD_FMADD(KP612264650, Tj, Tk);
            Ti            = SIMD_FNMADD(KP038632954, Th, Tb);
            Tr            = SIMD_FMADD(KP038632954, Tb, Th);
            TR            = SIMD_FMADD(KP581704778, TQ, TP);
            TT            = SIMD_FNMADD(KP859542535, TP, TQ);
            TX            = SIMD_FNMADD(KP769338817, TW, TV);
            TZ            = SIMD_FMADD(KP769338817, TW, TV);
            TM            = SIMD_FMADD(KP503537032, TL, TE);
            TS            = SIMD_FNMADD(KP251768516, TL, TE);
            Tt            = SIMD_FNMADD(KP853480001, Ts, Tr);
            Ty            = SIMD_FMADD(KP853480001, Ts, Tr);
            Tm            = SIMD_FNMADD(KP853480001, Tl, Ti);
            Tw            = SIMD_FMADD(KP853480001, Tl, Ti);
            TU            = SIMD_FMADD(KP300462606, TT, TS);
            TY            = SIMD_FNMADD(KP300462606, TT, TS);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, TR, TM);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, TR, TM);
            Tv            = SIMD_FMADD(KP522026385, Tt, Tu);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, Tu, Tt)));
            Tx            = SIMD_FMADD(KP522026385, Tm, Tq);
            Ci[WS(cs, 1)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, Tq, Tm)));
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, TZ, TY);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, TZ, TY);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, TX, TU);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, TX, TU);
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FNMADD(KP904176221, Tw, Tv));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FMADD(KP904176221, Tw, Tv));
            Ci[WS(cs, 4)] = -(KP575140729 * (SIMD_FMADD(KP904176221, Ty, Tx)));
            Ci[WS(cs, 3)] = KP575140729 * (SIMD_FNMADD(KP904176221, Ty, Tx));
        }
    }
}

template <>
struct r2cf_traits<13, 9>
{
    static constexpr long_t flops           = 120;
    static constexpr long_t operations      = 74;
    static constexpr long_t memory_accesses = 22;
    static constexpr long_t stack_vars      = 87;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 9 -name r2cf
 * -standalone */

/*
 * This function contains 68 FP additions, 52 FP multiplications,
 * (or, 22 additions, 6 multiplications, 46 fused multiply/add),
 * 87 stack variables, 23 constants, and 22 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 9>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TB, T1, T2, Ta, Te, Tb, T7, T4, T5, TD, T3, Tq, Tf, TI, Tc;
        SIMD_FLOAT Th, T6, TC, Tr, Tg, TL, Ti, TE, TJ, T8, Tm, Tj, TM, TF, TR;
        SIMD_FLOAT TK, T9, Tp;
        TB = R0[0];
        T1 = R0[WS(rs, 8)];
        T2 = R0[WS(rs, 5)];
        Ta = R0[WS(rs, 3)];
        Te = R0[WS(rs, 1)];
        Tb = R0[WS(rs, 4)];
        T7 = R0[WS(rs, 6)];
        T4 = R0[WS(rs, 7)];
        T5 = R0[WS(rs, 2)];
        TD = T1 + T2;
        T3 = T1 - T2;
        Tq = Te + Ta;
        Tf = SIMD_FNMADD(KP500000000, Ta, Te);
        TI = Ta - Tb;
        Tc = Ta + Tb;
        Th = T4 + T5;
        T6 = T4 - T5;
        TC = Tq + Tb;
        Tr = Tb - Tq;
        Tg = SIMD_FMADD(KP500000000, Tb, Tf);
        TL = SIMD_FNMADD(KP500000000, Tb, Tf);
        Ti = T7 - Th;
        TE = T7 + Th;
        TJ = T7 + T6;
        T8 = T6 - T7;
        Tm = SIMD_FNMADD(KP866025403, Ti, Tg);
        Tj = SIMD_FMADD(KP866025403, Ti, Tg);
        TM = SIMD_FNMADD(KP500000000, TE, TD);
        TF = TD + TE;
        TR = TI + TJ;
        TK = TI - TJ;
        T9 = SIMD_FNMADD(KP500000000, T8, T3);
        Tp = T3 + T8;
        {
            SIMD_FLOAT TQ, TN, TT, TG, Tl, Td, Tw, Ts, TS, TZ, TY, TO, TH, Tu,
                Tn;
            SIMD_FLOAT Tt, Tk, TW, TU, T12, T10, TV, TP, TA, Tv, Ty, To, T11,
                TX, Tx;
            SIMD_FLOAT Tz;
            TQ            = TL - TM;
            TN            = TL + TM;
            TT            = TC - TF;
            TG            = TC + TF;
            Tl            = SIMD_FMADD(KP866025403, Tc, T9);
            Td            = SIMD_FNMADD(KP866025403, Tc, T9);
            Tw            = SIMD_FNMADD(KP302775637, Tp, Tr);
            Ts            = SIMD_FMADD(KP302775637, Tr, Tp);
            TS            = SIMD_FNMADD(KP514918778, TR, TQ);
            TZ            = SIMD_FMADD(KP686558370, TQ, TR);
            TY            = SIMD_FNMADD(KP226109445, TK, TN);
            TO            = SIMD_FMADD(KP301479260, TN, TK);
            TH            = SIMD_FNMADD(KP083333333, TG, TB);
            Cr[0]         = TB + TG;
            Tu            = SIMD_FNMADD(KP612264650, Tl, Tm);
            Tn            = SIMD_FMADD(KP612264650, Tm, Tl);
            Tt            = SIMD_FNMADD(KP038632954, Td, Tj);
            Tk            = SIMD_FMADD(KP038632954, Tj, Td);
            TW            = SIMD_FNMADD(KP859542535, TS, TT);
            TU            = SIMD_FMADD(KP581704778, TT, TS);
            T12           = SIMD_FMADD(KP769338817, TZ, TY);
            T10           = SIMD_FNMADD(KP769338817, TZ, TY);
            TV            = SIMD_FNMADD(KP251768516, TO, TH);
            TP            = SIMD_FMADD(KP503537032, TO, TH);
            TA            = SIMD_FMADD(KP853480001, Tu, Tt);
            Tv            = SIMD_FNMADD(KP853480001, Tu, Tt);
            Ty            = SIMD_FMADD(KP853480001, Tn, Tk);
            To            = SIMD_FNMADD(KP853480001, Tn, Tk);
            T11           = SIMD_FNMADD(KP300462606, TW, TV);
            TX            = SIMD_FMADD(KP300462606, TW, TV);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, TU, TP);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, TU, TP);
            Tx            = SIMD_FMADD(KP522026385, Tv, Tw);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, Tw, Tv)));
            Tz            = SIMD_FNMADD(KP522026385, To, Ts);
            Ci[WS(cs, 1)] = KP600477271 * (SIMD_FMADD(KP957805992, Ts, To));
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, T12, T11);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, T12, T11);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, T10, TX);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, T10, TX);
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, Ty, Tx));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP904176221, Ty, Tx));
            Ci[WS(cs, 4)] = -(KP575140729 * (SIMD_FMADD(KP904176221, TA, Tz)));
            Ci[WS(cs, 3)] = KP575140729 * (SIMD_FNMADD(KP904176221, TA, Tz));
        }
    }
}

template <>
struct r2cf_traits<13, 10>
{
    static constexpr long_t flops           = 122;
    static constexpr long_t operations      = 76;
    static constexpr long_t memory_accesses = 23;
    static constexpr long_t stack_vars      = 90;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 10 -name r2cf
 * -standalone */

/*
 * This function contains 70 FP additions, 52 FP multiplications,
 * (or, 24 additions, 6 multiplications, 46 fused multiply/add),
 * 90 stack variables, 23 constants, and 23 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 10>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TE, Td, T1, T2, T7, T4, T5, Tg, Ta, Tb, T3, TG, T6, Tk, Th;
        SIMD_FLOAT Tc, TH, Tl, T8, TM, Te, TL, Tt, Ti, TI, TP, Ts, T9, TN, TU;
        SIMD_FLOAT TO, Tj, Tu, TF, Tf, To;
        TE = R0[0];
        Td = R0[WS(rs, 4)];
        T1 = R0[WS(rs, 8)];
        T2 = R0[WS(rs, 5)];
        T7 = R0[WS(rs, 6)];
        T4 = R0[WS(rs, 7)];
        T5 = R0[WS(rs, 2)];
        Tg = R0[WS(rs, 1)];
        Ta = R0[WS(rs, 9)];
        Tb = R0[WS(rs, 3)];
        T3 = T1 - T2;
        TG = T1 + T2;
        T6 = T4 - T5;
        Tk = T4 + T5;
        Th = Tb + Ta;
        Tc = Ta - Tb;
        TH = T7 + Tk;
        Tl = T7 - Tk;
        T8 = T6 - T7;
        TM = T7 + T6;
        Te = Tc - Td;
        TL = Tc + Td;
        Tt = Tg + Th;
        Ti = SIMD_FNMADD(KP500000000, Th, Tg);
        TI = TG + TH;
        TP = SIMD_FNMADD(KP500000000, TH, TG);
        Ts = T3 + T8;
        T9 = SIMD_FNMADD(KP500000000, T8, T3);
        TN = TL + TM;
        TU = TM - TL;
        TO = SIMD_FNMADD(KP500000000, Td, Ti);
        Tj = SIMD_FMADD(KP500000000, Td, Ti);
        Tu = Td - Tt;
        TF = Tt + Td;
        Tf = SIMD_FMADD(KP866025403, Te, T9);
        To = SIMD_FNMADD(KP866025403, Te, T9);
        {
            SIMD_FLOAT Tm, Tp, TQ, TT, TJ, TW, Tv, Tz, Tq, Tx, Tn, Tw, T12, TV,
                TR;
            SIMD_FLOAT T11, TK, Ty, TD, Tr, TB, TX, TZ, T13, T15, TS, TY, TA,
                TC, T10;
            SIMD_FLOAT T14;
            Tm            = SIMD_FMADD(KP866025403, Tl, Tj);
            Tp            = SIMD_FNMADD(KP866025403, Tl, Tj);
            TQ            = TO + TP;
            TT            = TO - TP;
            TJ            = TF + TI;
            TW            = TF - TI;
            Tv            = SIMD_FMADD(KP302775637, Tu, Ts);
            Tz            = SIMD_FNMADD(KP302775637, Ts, Tu);
            Tq            = SIMD_FMADD(KP612264650, Tp, To);
            Tx            = SIMD_FNMADD(KP612264650, To, Tp);
            Tn            = SIMD_FMADD(KP038632954, Tm, Tf);
            Tw            = SIMD_FNMADD(KP038632954, Tf, Tm);
            T12           = SIMD_FMADD(KP686558370, TT, TU);
            TV            = SIMD_FNMADD(KP514918778, TU, TT);
            TR            = SIMD_FNMADD(KP301479260, TQ, TN);
            T11           = SIMD_FMADD(KP226109445, TN, TQ);
            TK            = SIMD_FNMADD(KP083333333, TJ, TE);
            Cr[0]         = TE + TJ;
            Ty            = SIMD_FNMADD(KP853480001, Tx, Tw);
            TD            = SIMD_FMADD(KP853480001, Tx, Tw);
            Tr            = SIMD_FNMADD(KP853480001, Tq, Tn);
            TB            = SIMD_FMADD(KP853480001, Tq, Tn);
            TX            = SIMD_FMADD(KP581704778, TW, TV);
            TZ            = SIMD_FNMADD(KP859542535, TV, TW);
            T13           = SIMD_FNMADD(KP769338817, T12, T11);
            T15           = SIMD_FMADD(KP769338817, T12, T11);
            TS            = SIMD_FNMADD(KP503537032, TR, TK);
            TY            = SIMD_FMADD(KP251768516, TR, TK);
            TA            = SIMD_FMADD(KP522026385, Ty, Tz);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, Tz, Ty)));
            TC            = SIMD_FNMADD(KP522026385, Tr, Tv);
            Ci[WS(cs, 1)] = KP600477271 * (SIMD_FMADD(KP957805992, Tv, Tr));
            T10           = SIMD_FMADD(KP300462606, TZ, TY);
            T14           = SIMD_FNMADD(KP300462606, TZ, TY);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, TX, TS);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, TX, TS);
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, TB, TA));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP904176221, TB, TA));
            Ci[WS(cs, 4)] = -(KP575140729 * (SIMD_FMADD(KP904176221, TD, TC)));
            Ci[WS(cs, 3)] = KP575140729 * (SIMD_FNMADD(KP904176221, TD, TC));
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, T15, T14);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, T15, T14);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, T13, T10);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, T13, T10);
        }
    }
}

template <>
struct r2cf_traits<13, 11>
{
    static constexpr long_t flops           = 124;
    static constexpr long_t operations      = 78;
    static constexpr long_t memory_accesses = 24;
    static constexpr long_t stack_vars      = 93;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 11 -name r2cf
 * -standalone */

/*
 * This function contains 72 FP additions, 52 FP multiplications,
 * (or, 26 additions, 6 multiplications, 46 fused multiply/add),
 * 93 stack variables, 23 constants, and 24 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 11>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TH, T1, T2, Td, Te, T7, T4, T5, Ti, Ta, Tb, TJ, T3, Tl, Tf;
        SIMD_FLOAT Tn, T6, Tc, Tj, To, TK, TP, T8, TO, Tg, Tk, Tw, TS, TL, T9;
        SIMD_FLOAT Tv, TX, TQ, Tm, TR, TI, Tx, Tr, Th;
        TH = R0[0];
        T1 = R0[WS(rs, 8)];
        T2 = R0[WS(rs, 5)];
        Td = R0[WS(rs, 10)];
        Te = R0[WS(rs, 4)];
        T7 = R0[WS(rs, 6)];
        T4 = R0[WS(rs, 7)];
        T5 = R0[WS(rs, 2)];
        Ti = R0[WS(rs, 1)];
        Ta = R0[WS(rs, 9)];
        Tb = R0[WS(rs, 3)];
        TJ = T1 + T2;
        T3 = T1 - T2;
        Tl = Td + Te;
        Tf = Td - Te;
        Tn = T4 + T5;
        T6 = T4 - T5;
        Tc = Ta - Tb;
        Tj = Tb + Ta;
        To = T7 - Tn;
        TK = T7 + Tn;
        TP = T7 + T6;
        T8 = T6 - T7;
        TO = Tf - Tc;
        Tg = Tc + Tf;
        Tk = SIMD_FNMADD(KP500000000, Tj, Ti);
        Tw = Ti + Tj;
        TS = SIMD_FNMADD(KP500000000, TK, TJ);
        TL = TJ + TK;
        T9 = SIMD_FNMADD(KP500000000, T8, T3);
        Tv = T3 + T8;
        TX = TO + TP;
        TQ = TO - TP;
        Tm = SIMD_FMADD(KP500000000, Tl, Tk);
        TR = SIMD_FNMADD(KP500000000, Tl, Tk);
        TI = Tw + Tl;
        Tx = Tl - Tw;
        Tr = SIMD_FNMADD(KP866025403, Tg, T9);
        Th = SIMD_FMADD(KP866025403, Tg, T9);
        {
            SIMD_FLOAT Ts, Tp, TW, TT, TZ, TM, TC, Ty, TA, Tt, Tz, Tq, TY, T15,
                T14;
            SIMD_FLOAT TU, TN, TG, TB, TE, Tu, T12, T10, T18, T16, T11, TV, TD,
                TF, T17;
            SIMD_FLOAT T13;
            Ts            = SIMD_FNMADD(KP866025403, To, Tm);
            Tp            = SIMD_FMADD(KP866025403, To, Tm);
            TW            = TR - TS;
            TT            = TR + TS;
            TZ            = TI - TL;
            TM            = TI + TL;
            TC            = SIMD_FNMADD(KP302775637, Tv, Tx);
            Ty            = SIMD_FMADD(KP302775637, Tx, Tv);
            TA            = SIMD_FNMADD(KP612264650, Tr, Ts);
            Tt            = SIMD_FMADD(KP612264650, Ts, Tr);
            Tz            = SIMD_FNMADD(KP038632954, Th, Tp);
            Tq            = SIMD_FMADD(KP038632954, Tp, Th);
            TY            = SIMD_FNMADD(KP514918778, TX, TW);
            T15           = SIMD_FMADD(KP686558370, TW, TX);
            T14           = SIMD_FNMADD(KP226109445, TQ, TT);
            TU            = SIMD_FMADD(KP301479260, TT, TQ);
            TN            = SIMD_FNMADD(KP083333333, TM, TH);
            Cr[0]         = TH + TM;
            TG            = SIMD_FMADD(KP853480001, TA, Tz);
            TB            = SIMD_FNMADD(KP853480001, TA, Tz);
            TE            = SIMD_FMADD(KP853480001, Tt, Tq);
            Tu            = SIMD_FNMADD(KP853480001, Tt, Tq);
            T12           = SIMD_FNMADD(KP859542535, TY, TZ);
            T10           = SIMD_FMADD(KP581704778, TZ, TY);
            T18           = SIMD_FMADD(KP769338817, T15, T14);
            T16           = SIMD_FNMADD(KP769338817, T15, T14);
            T11           = SIMD_FNMADD(KP251768516, TU, TN);
            TV            = SIMD_FMADD(KP503537032, TU, TN);
            TD            = SIMD_FMADD(KP522026385, TB, TC);
            Ci[WS(cs, 5)] = -(KP600477271 * (SIMD_FNMADD(KP957805992, TC, TB)));
            TF            = SIMD_FNMADD(KP522026385, Tu, Ty);
            Ci[WS(cs, 1)] = KP600477271 * (SIMD_FMADD(KP957805992, Ty, Tu));
            T17           = SIMD_FNMADD(KP300462606, T12, T11);
            T13           = SIMD_FMADD(KP300462606, T12, T11);
            Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, T10, TV);
            Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, T10, TV);
            Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, TE, TD));
            Ci[WS(cs, 2)] = KP575140729 * (SIMD_FNMADD(KP904176221, TE, TD));
            Ci[WS(cs, 4)] = -(KP575140729 * (SIMD_FMADD(KP904176221, TG, TF)));
            Ci[WS(cs, 3)] = KP575140729 * (SIMD_FNMADD(KP904176221, TG, TF));
            Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, T18, T17);
            Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, T18, T17);
            Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, T16, T13);
            Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, T16, T13);
        }
    }
}

template <>
struct r2cf_traits<13, 12>
{
    static constexpr long_t flops           = 126;
    static constexpr long_t operations      = 80;
    static constexpr long_t memory_accesses = 25;
    static constexpr long_t stack_vars      = 96;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 12 -name r2cf
 * -standalone */

/*
 * This function contains 74 FP additions, 52 FP multiplications,
 * (or, 28 additions, 6 multiplications, 46 fused multiply/add),
 * 96 stack variables, 23 constants, and 25 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 12>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TK, T1, T2, Tf, Tg, Tk, Tc, Td, T4, T5, T7, T8;
        TK = R0[0];
        T1 = R0[WS(rs, 8)];
        T2 = R0[WS(rs, 5)];
        Tf = R0[WS(rs, 10)];
        Tg = R0[WS(rs, 4)];
        Tk = R0[WS(rs, 1)];
        Tc = R0[WS(rs, 9)];
        Td = R0[WS(rs, 3)];
        T4 = R0[WS(rs, 11)];
        T5 = R0[WS(rs, 6)];
        T7 = R0[WS(rs, 7)];
        T8 = R0[WS(rs, 2)];
        {
            SIMD_FLOAT T3, TM, Th, Tn, Tl, Te, T6, Tp, T9, Tq, Ti, TR, Tz, Tm,
                TN;
            SIMD_FLOAT Tr, Ta, TS, TU, To, TA, TL, TO, TV, TT, T10, Ty, Tb, Ts,
                Tv;
            T3  = T1 - T2;
            TM  = T1 + T2;
            Th  = Tf - Tg;
            Tn  = Tf + Tg;
            Tl  = Td + Tc;
            Te  = Tc - Td;
            T6  = T4 - T5;
            Tp  = T4 + T5;
            T9  = T7 - T8;
            Tq  = T7 + T8;
            Ti  = Te + Th;
            TR  = Th - Te;
            Tz  = Tk + Tl;
            Tm  = SIMD_FNMADD(KP500000000, Tl, Tk);
            TN  = Tp + Tq;
            Tr  = Tp - Tq;
            Ta  = T6 + T9;
            TS  = T6 - T9;
            TU  = SIMD_FNMADD(KP500000000, Tn, Tm);
            To  = SIMD_FMADD(KP500000000, Tn, Tm);
            TA  = Tn - Tz;
            TL  = Tz + Tn;
            TO  = TM + TN;
            TV  = SIMD_FNMADD(KP500000000, TN, TM);
            TT  = TR + TS;
            T10 = TR - TS;
            Ty  = T3 + Ta;
            Tb  = SIMD_FNMADD(KP500000000, Ta, T3);
            Ts  = SIMD_FMADD(KP866025403, Tr, To);
            Tv  = SIMD_FNMADD(KP866025403, Tr, To);
            {
                SIMD_FLOAT TW, TZ, TP, T12, Tj, Tu, TB, TF, T18, T11, TX, T17,
                    TQ, Tw, TD;
                SIMD_FLOAT Tt, TC, T13, T15, T19, T1b, TY, T14, TE, TJ, Tx, TH,
                    T16, T1a, TG;
                SIMD_FLOAT TI;
                TW            = TU + TV;
                TZ            = TU - TV;
                TP            = TL + TO;
                T12           = TL - TO;
                Tj            = SIMD_FMADD(KP866025403, Ti, Tb);
                Tu            = SIMD_FNMADD(KP866025403, Ti, Tb);
                TB            = SIMD_FMADD(KP302775637, TA, Ty);
                TF            = SIMD_FNMADD(KP302775637, Ty, TA);
                T18           = SIMD_FMADD(KP686558370, TZ, T10);
                T11           = SIMD_FNMADD(KP514918778, T10, TZ);
                TX            = SIMD_FMADD(KP301479260, TW, TT);
                T17           = SIMD_FNMADD(KP226109445, TT, TW);
                TQ            = SIMD_FNMADD(KP083333333, TP, TK);
                Cr[0]         = TK + TP;
                Tw            = SIMD_FMADD(KP612264650, Tv, Tu);
                TD            = SIMD_FNMADD(KP612264650, Tu, Tv);
                Tt            = SIMD_FMADD(KP038632954, Ts, Tj);
                TC            = SIMD_FNMADD(KP038632954, Tj, Ts);
                T13           = SIMD_FMADD(KP581704778, T12, T11);
                T15           = SIMD_FNMADD(KP859542535, T11, T12);
                T19           = SIMD_FNMADD(KP769338817, T18, T17);
                T1b           = SIMD_FMADD(KP769338817, T18, T17);
                TY            = SIMD_FMADD(KP503537032, TX, TQ);
                T14           = SIMD_FNMADD(KP251768516, TX, TQ);
                TE            = SIMD_FNMADD(KP853480001, TD, TC);
                TJ            = SIMD_FMADD(KP853480001, TD, TC);
                Tx            = SIMD_FNMADD(KP853480001, Tw, Tt);
                TH            = SIMD_FMADD(KP853480001, Tw, Tt);
                T16           = SIMD_FMADD(KP300462606, T15, T14);
                T1a           = SIMD_FNMADD(KP300462606, T15, T14);
                Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, T13, TY);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, T13, TY);
                TG            = SIMD_FMADD(KP522026385, TE, TF);
                Ci[WS(cs, 5)] =
                    -(KP600477271 * (SIMD_FNMADD(KP957805992, TF, TE)));
                TI            = SIMD_FNMADD(KP522026385, Tx, TB);
                Ci[WS(cs, 1)] = KP600477271 * (SIMD_FMADD(KP957805992, TB, Tx));
                Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, T1b, T1a);
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, T1b, T1a);
                Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, T19, T16);
                Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, T19, T16);
                Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, TH, TG));
                Ci[WS(cs, 2)] =
                    KP575140729 * (SIMD_FNMADD(KP904176221, TH, TG));
                Ci[WS(cs, 4)] =
                    -(KP575140729 * (SIMD_FMADD(KP904176221, TJ, TI)));
                Ci[WS(cs, 3)] =
                    KP575140729 * (SIMD_FNMADD(KP904176221, TJ, TI));
            }
        }
    }
}

template <>
struct r2cf_traits<13, 13>
{
    static constexpr long_t flops           = 127;
    static constexpr long_t operations      = 82;
    static constexpr long_t memory_accesses = 26;
    static constexpr long_t stack_vars      = 99;
    static constexpr long_t constants       = 23;
};
/* Generated by: ./gen_r2cf.native -fma -reorder-insns -schedule-for-pipeline
 * -compact -variables 30 -pipeline-latency 12 -n 13 -first-k 13 -name r2cf
 * -standalone */

/*
 * This function contains 76 FP additions, 51 FP multiplications,
 * (or, 31 additions, 6 multiplications, 45 fused multiply/add),
 * 99 stack variables, 23 constants, and 26 memory accesses
 */
template <long_t TransformSize, long_t ProvidedElements, long_t rs, long_t cs>
inline __attribute__((always_inline))
typename std::enable_if<TransformSize == 13 && ProvidedElements == 13>::type
r2cf(SIMD_FLOAT const* __restrict R0, SIMD_FLOAT* __restrict Cr,
     SIMD_FLOAT* __restrict Ci)
{
    DK(KP904176221, +0.904176221990848204433795481776887926501523162);
    DK(KP575140729, +0.575140729474003121368385547455453388461001608);
    DK(KP957805992, +0.957805992594665126462521754605754580515587217);
    DK(KP600477271, +0.600477271932665282925769253334763009352012849);
    DK(KP522026385, +0.522026385161275033714027226654165028300441940);
    DK(KP516520780, +0.516520780623489722840901288569017135705033622);
    DK(KP300462606, +0.300462606288665774426601772289207995520941381);
    DK(KP853480001, +0.853480001859823990758994934970528322872359049);
    DK(KP503537032, +0.503537032863766627246873853868466977093348562);
    DK(KP251768516, +0.251768516431883313623436926934233488546674281);
    DK(KP769338817, +0.769338817572980603471413688209101117038278899);
    DK(KP581704778, +0.581704778510515730456870384989698884939833902);
    DK(KP859542535, +0.859542535098774820163672132761689612766401925);
    DK(KP038632954, +0.038632954644348171955506895830342264440241080);
    DK(KP612264650, +0.612264650376756543746494474777125408779395514);
    DK(KP083333333, +0.083333333333333333333333333333333333333333333);
    DK(KP301479260, +0.301479260047709873958013540496673347309208464);
    DK(KP226109445, +0.226109445035782405468510155372505010481906348);
    DK(KP686558370, +0.686558370781754340655719594850823015421401653);
    DK(KP514918778, +0.514918778086315755491789696138117261566051239);
    DK(KP302775637, +0.302775637731994646559610633735247973125648287);
    DK(KP866025403, +0.866025403784438646763723170752936183471402627);
    DK(KP500000000, +0.500000000000000000000000000000000000000000000);
    {
        SIMD_FLOAT TN, T1, T2, Tn, Tf, Tg, Tk, Tc, Td, T4, T5, T7, T8, TP, T3;
        TN = R0[0];
        T1 = R0[WS(rs, 8)];
        T2 = R0[WS(rs, 5)];
        Tn = R0[WS(rs, 12)];
        Tf = R0[WS(rs, 10)];
        Tg = R0[WS(rs, 4)];
        Tk = R0[WS(rs, 1)];
        Tc = R0[WS(rs, 9)];
        Td = R0[WS(rs, 3)];
        T4 = R0[WS(rs, 11)];
        T5 = R0[WS(rs, 6)];
        T7 = R0[WS(rs, 7)];
        T8 = R0[WS(rs, 2)];
        TP = T1 + T2;
        T3 = T1 - T2;
        {
            SIMD_FLOAT Th, To, Te, Tl, Tr, T6, Ts, T9, Tp, TB, TU, Ti, Tm, TC,
                Tt;
            SIMD_FLOAT TQ, TV, Ta, Tq, TX, TO, TD, TY, TR, T13, TW, Tb, TA, Tx,
                Tu;
            Th  = Tf - Tg;
            To  = Tf + Tg;
            Te  = Tc - Td;
            Tl  = Td + Tc;
            Tr  = T4 + T5;
            T6  = T4 - T5;
            Ts  = T7 + T8;
            T9  = T7 - T8;
            Tp  = SIMD_FMSUB(KP500000000, To, Tn);
            TB  = Tn + To;
            TU  = Th - Te;
            Ti  = Te + Th;
            Tm  = SIMD_FNMADD(KP500000000, Tl, Tk);
            TC  = Tk + Tl;
            Tt  = Tr - Ts;
            TQ  = Tr + Ts;
            TV  = T6 - T9;
            Ta  = T6 + T9;
            Tq  = Tm + Tp;
            TX  = Tm - Tp;
            TO  = TC + TB;
            TD  = TB - TC;
            TY  = SIMD_FNMADD(KP500000000, TQ, TP);
            TR  = TP + TQ;
            T13 = TU - TV;
            TW  = TU + TV;
            Tb  = SIMD_FNMADD(KP500000000, Ta, T3);
            TA  = T3 + Ta;
            Tx  = SIMD_FNMADD(KP866025403, Tt, Tq);
            Tu  = SIMD_FMADD(KP866025403, Tt, Tq);
            {
                SIMD_FLOAT T12, TZ, T15, TS, Tw, Tj, TI, TE, T14, T1b, T1a, T10,
                    TT, TG, Ty;
                SIMD_FLOAT TF, Tv, T18, T16, T1e, T1c, T17, T11, TM, TH, TK, Tz,
                    T1d, T19, TJ;
                SIMD_FLOAT TL;
                T12           = TX - TY;
                TZ            = TX + TY;
                T15           = TO - TR;
                TS            = TO + TR;
                Tw            = SIMD_FNMADD(KP866025403, Ti, Tb);
                Tj            = SIMD_FMADD(KP866025403, Ti, Tb);
                TI            = SIMD_FNMADD(KP302775637, TA, TD);
                TE            = SIMD_FMADD(KP302775637, TD, TA);
                T14           = SIMD_FNMADD(KP514918778, T13, T12);
                T1b           = SIMD_FMADD(KP686558370, T12, T13);
                T1a           = SIMD_FNMADD(KP226109445, TW, TZ);
                T10           = SIMD_FMADD(KP301479260, TZ, TW);
                TT            = SIMD_FNMADD(KP083333333, TS, TN);
                Cr[0]         = TN + TS;
                TG            = SIMD_FNMADD(KP612264650, Tw, Tx);
                Ty            = SIMD_FMADD(KP612264650, Tx, Tw);
                TF            = SIMD_FNMADD(KP038632954, Tj, Tu);
                Tv            = SIMD_FMADD(KP038632954, Tu, Tj);
                T18           = SIMD_FNMADD(KP859542535, T14, T15);
                T16           = SIMD_FMADD(KP581704778, T15, T14);
                T1e           = SIMD_FMADD(KP769338817, T1b, T1a);
                T1c           = SIMD_FNMADD(KP769338817, T1b, T1a);
                T17           = SIMD_FNMADD(KP251768516, T10, TT);
                T11           = SIMD_FMADD(KP503537032, T10, TT);
                TM            = SIMD_FMADD(KP853480001, TG, TF);
                TH            = SIMD_FNMADD(KP853480001, TG, TF);
                TK            = SIMD_FMADD(KP853480001, Ty, Tv);
                Tz            = SIMD_FNMADD(KP853480001, Ty, Tv);
                T1d           = SIMD_FNMADD(KP300462606, T18, T17);
                T19           = SIMD_FMADD(KP300462606, T18, T17);
                Cr[WS(cs, 1)] = SIMD_FMADD(KP516520780, T16, T11);
                Cr[WS(cs, 5)] = SIMD_FNMADD(KP516520780, T16, T11);
                TJ            = SIMD_FMADD(KP522026385, TH, TI);
                Ci[WS(cs, 5)] =
                    -(KP600477271 * (SIMD_FNMADD(KP957805992, TI, TH)));
                TL            = SIMD_FNMADD(KP522026385, Tz, TE);
                Ci[WS(cs, 1)] = KP600477271 * (SIMD_FMADD(KP957805992, TE, Tz));
                Cr[WS(cs, 2)] = SIMD_FMADD(KP503537032, T1e, T1d);
                Cr[WS(cs, 6)] = SIMD_FNMADD(KP503537032, T1e, T1d);
                Cr[WS(cs, 3)] = SIMD_FMADD(KP503537032, T1c, T19);
                Cr[WS(cs, 4)] = SIMD_FNMADD(KP503537032, T1c, T19);
                Ci[WS(cs, 6)] = KP575140729 * (SIMD_FMADD(KP904176221, TK, TJ));
                Ci[WS(cs, 2)] =
                    KP575140729 * (SIMD_FNMADD(KP904176221, TK, TJ));
                Ci[WS(cs, 4)] =
                    -(KP575140729 * (SIMD_FMADD(KP904176221, TM, TL)));
                Ci[WS(cs, 3)] =
                    KP575140729 * (SIMD_FNMADD(KP904176221, TM, TL));
            }
        }
    }
}
